; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/pad.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/pad.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"struct.tflite::ops::builtin::pad::PadContext" = type <{ %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, i32, i8, [3 x i8] }>
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"struct.tflite::PadParams" = type { i8, [4 x i32], i8, [4 x i32], i8 }

$_ZN6tflite3ops7builtin3pad10PadContextC2EP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin3pad4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin3pad4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite13reference_ops7PadImplIffEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops7PadImplIhhEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops7PadImplIaaEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops7PadImplIiiEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops7PadImplIllEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops19PadImageStyleMemsetIffEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops7PadImplIffEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops19PadImageStyleMemsetIhhEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops7PadImplIhhEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops7PadImplIiiEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops7PadImplIllEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_ = comdat any

@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.3 = private unnamed_addr constant [60 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/pad.cc\00", align 1
@.str.4 = private unnamed_addr constant [41 x i8] c"SizeOfDimension(op_context->paddings, 0)\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"op_context->dims\00", align 1
@.str.6 = private unnamed_addr constant [41 x i8] c"SizeOfDimension(op_context->paddings, 1)\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.8 = private unnamed_addr constant [105 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/pad.cc Pad value has to be greater than equal to 0.\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.10 = private unnamed_addr constant [45 x i8] c"NumInputs(node) == 2 || NumInputs(node) == 3\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.13 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"op_context.input->type\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"op_context.output->type\00", align 1
@.str.16 = private unnamed_addr constant [33 x i8] c"op_context.constant_values->type\00", align 1
@.str.17 = private unnamed_addr constant [63 x i8] c"op_context.dims <= reference_ops::PadKernelMaxDimensionCount()\00", align 1
@_ZZN6tflite3ops7builtin16Register_PAD_REFEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3pad7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3pad4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin24Register_PAD_GENERIC_OPTEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3pad7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3pad4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin18Register_PADV2_REFEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3pad7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3pad4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin26Register_PADV2_GENERIC_OPTEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3pad7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin3pad4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str.19 = private unnamed_addr constant [40 x i8] c"NumElements(op_context.constant_values)\00", align 1
@.str.20 = private unnamed_addr constant [76 x i8] c"op_context.output->params.zero_point >= std::numeric_limits<uint8_t>::min()\00", align 1
@.str.21 = private unnamed_addr constant [76 x i8] c"op_context.output->params.zero_point <= std::numeric_limits<uint8_t>::max()\00", align 1
@.str.22 = private unnamed_addr constant [37 x i8] c"op_context.output->params.zero_point\00", align 1
@.str.23 = private unnamed_addr constant [46 x i8] c"op_context.constant_values->params.zero_point\00", align 1
@.str.24 = private unnamed_addr constant [32 x i8] c"op_context.output->params.scale\00", align 1
@.str.25 = private unnamed_addr constant [41 x i8] c"op_context.constant_values->params.scale\00", align 1
@.str.26 = private unnamed_addr constant [75 x i8] c"op_context.output->params.zero_point >= std::numeric_limits<int8_t>::min()\00", align 1
@.str.27 = private unnamed_addr constant [75 x i8] c"op_context.output->params.zero_point <= std::numeric_limits<int8_t>::max()\00", align 1
@.str.28 = private unnamed_addr constant [43 x i8] c"Type %s is currently not supported by Pad.\00", align 1
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin3pad18ResizeOutputTensorEP13TfLiteContextPNS2_10PadContextE(%struct.TfLiteContext*, %"struct.tflite::ops::builtin::pad::PadContext"* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %1, i64 0, i32 2
  %4 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %1, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %14 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %13, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %14(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 79, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i32 %8, i32 %10) #8
  br label %82

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 2
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %21 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %20, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %21(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 80, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %17, i32 2) #8
  br label %82

22:                                               ; preds = %15
  %23 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %26 = load i32*, i32** %25, align 8
  br label %27

27:                                               ; preds = %22, %24
  %28 = phi i32* [ %26, %24 ], [ null, %22 ]
  %29 = icmp sgt i32 %8, 0
  br i1 %29, label %30, label %45

30:                                               ; preds = %27, %38
  %31 = phi i32* [ %39, %38 ], [ %28, %27 ]
  %32 = phi i32 [ %40, %38 ], [ 0, %27 ]
  %33 = getelementptr inbounds i32, i32* %31, i64 1
  %34 = load i32, i32* %31, align 4
  %35 = load i32, i32* %33, align 4
  %36 = or i32 %35, %34
  %37 = icmp sgt i32 %36, -1
  br i1 %37, label %38, label %42

38:                                               ; preds = %30
  %39 = getelementptr inbounds i32, i32* %31, i64 2
  %40 = add nuw nsw i32 %32, 1
  %41 = icmp slt i32 %40, %8
  br i1 %41, label %30, label %45

42:                                               ; preds = %30
  %43 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %44 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %43, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %44(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.8, i64 0, i64 0)) #8
  br label %82

45:                                               ; preds = %38, %27
  %46 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %1, i64 0, i32 1
  %47 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %46, align 8
  %48 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %47, i64 0, i32 2
  %49 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %48, align 8
  %50 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %49) #8
  %51 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %3, align 8
  %52 = icmp eq %struct.TfLiteTensor* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %51, i64 0, i32 1, i32 0
  %55 = load i32*, i32** %54, align 8
  br label %56

56:                                               ; preds = %45, %53
  %57 = phi i32* [ %55, %53 ], [ null, %45 ]
  %58 = load i32, i32* %9, align 8
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %66, %56
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %62 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %61, align 8
  %63 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %1, i64 0, i32 3
  %64 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %63, align 8
  %65 = tail call i32 %62(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %64, %struct.TfLiteIntArray* %50) #8
  br label %82

66:                                               ; preds = %56, %66
  %67 = phi i64 [ %78, %66 ], [ 0, %56 ]
  %68 = phi i32* [ %71, %66 ], [ %57, %56 ]
  %69 = getelementptr inbounds i32, i32* %68, i64 1
  %70 = load i32, i32* %68, align 4
  %71 = getelementptr inbounds i32, i32* %68, i64 2
  %72 = load i32, i32* %69, align 4
  %73 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %49, i64 0, i32 1, i64 %67
  %74 = load i32, i32* %73, align 4
  %75 = add i32 %72, %70
  %76 = add i32 %75, %74
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 %67
  store i32 %76, i32* %77, align 4
  %78 = add nuw nsw i64 %67, 1
  %79 = load i32, i32* %9, align 8
  %80 = sext i32 %79 to i64
  %81 = icmp slt i64 %78, %80
  br i1 %81, label %66, label %60

82:                                               ; preds = %42, %60, %19, %12
  %83 = phi i32 [ 1, %12 ], [ 1, %19 ], [ %65, %60 ], [ 1, %42 ]
  ret i32 %83
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin3pad7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 {
  %3 = alloca %"struct.tflite::ops::builtin::pad::PadContext", align 8
  %4 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %5 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, -2
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %12 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %11, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %12(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 110, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0)) #8
  br label %87

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %21 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %20, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %21(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 111, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i32 %17, i32 1) #8
  br label %87

22:                                               ; preds = %13
  %23 = bitcast %"struct.tflite::ops::builtin::pad::PadContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite3ops7builtin3pad10PadContextC2EP13TfLiteContextP10TfLiteNode(%"struct.tflite::ops::builtin::pad::PadContext"* nonnull %3, %struct.TfLiteContext* %0, %struct.TfLiteNode* %1)
  %24 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 1
  %25 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %24, align 8
  %26 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 3
  %29 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %28, align 8
  %30 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %27, %31
  br i1 %32, label %41, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %35 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %34, align 8
  %36 = call i8* @TfLiteTypeGetName(i32 %27) #8
  %37 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %28, align 8
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = call i8* @TfLiteTypeGetName(i32 %39) #8
  call void (%struct.TfLiteContext*, i8*, ...) %35(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 115, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), i8* %36, i8* %40) #8
  br label %85

41:                                               ; preds = %22
  %42 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 0
  %43 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %42, align 8
  %44 = icmp eq %struct.TfLiteTensor* %43, null
  br i1 %44, label %57, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %43, i64 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %27, %47
  br i1 %48, label %57, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %51 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %50, align 8
  %52 = call i8* @TfLiteTypeGetName(i32 %27) #8
  %53 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %42, align 8
  %54 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %53, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = call i8* @TfLiteTypeGetName(i32 %55) #8
  call void (%struct.TfLiteContext*, i8*, ...) %51(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 118, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.16, i64 0, i64 0), i8* %52, i8* %56) #8
  br label %85

57:                                               ; preds = %45, %41
  %58 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 4
  %59 = load i32, i32* %58, align 8
  %60 = icmp sgt i32 %59, 4
  br i1 %60, label %61, label %64

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %63 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %62, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %63(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 123, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.17, i64 0, i64 0)) #8
  br label %85

64:                                               ; preds = %57
  %65 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %25, i64 0, i32 2
  %66 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %65, align 8
  %67 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %66, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %76, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 2
  %72 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %71, align 8
  %73 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %72, i64 0, i32 4
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %83, label %76

76:                                               ; preds = %70, %64
  %77 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 4
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 4
  br i1 %79, label %85, label %80

80:                                               ; preds = %76
  store i32 4, i32* %77, align 8
  %81 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 0, i32 1
  %82 = bitcast %union.TfLitePtrUnion* %81 to i8**
  store i8* null, i8** %82, align 8
  br label %85

83:                                               ; preds = %70
  %84 = call i32 @_ZN6tflite3ops7builtin3pad18ResizeOutputTensorEP13TfLiteContextPNS2_10PadContextE(%struct.TfLiteContext* %0, %"struct.tflite::ops::builtin::pad::PadContext"* nonnull %3)
  br label %85

85:                                               ; preds = %80, %76, %83, %61, %49, %33
  %86 = phi i32 [ 1, %33 ], [ 1, %49 ], [ %84, %83 ], [ 1, %61 ], [ 0, %76 ], [ 0, %80 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #8
  br label %87

87:                                               ; preds = %85, %19, %10
  %88 = phi i32 [ 1, %19 ], [ %86, %85 ], [ 1, %10 ]
  ret i32 %88
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin3pad10PadContextC2EP13TfLiteContextP10TfLiteNode(%"struct.tflite::ops::builtin::pad::PadContext"*, %struct.TfLiteContext*, %struct.TfLiteNode*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %2, i64 0, i32 0
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %12 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 %13
  br label %15

15:                                               ; preds = %3, %10
  %16 = phi %struct.TfLiteTensor* [ %14, %10 ], [ null, %3 ]
  %17 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %0, i64 0, i32 1
  store %struct.TfLiteTensor* %16, %struct.TfLiteTensor** %17, align 8
  %18 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %19 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %18, i64 0, i32 1, i64 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %24 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %23, align 8
  %25 = sext i32 %20 to i64
  %26 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %24, i64 %25
  br label %27

27:                                               ; preds = %15, %22
  %28 = phi %struct.TfLiteTensor* [ %26, %22 ], [ null, %15 ]
  %29 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %0, i64 0, i32 2
  store %struct.TfLiteTensor* %28, %struct.TfLiteTensor** %29, align 8
  %30 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 3
  br i1 %33, label %34, label %43

34:                                               ; preds = %27
  %35 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %30, i64 0, i32 1, i64 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %40 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %39, align 8
  %41 = sext i32 %36 to i64
  %42 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 %41
  br label %43

43:                                               ; preds = %27, %38, %34
  %44 = phi %struct.TfLiteTensor* [ %42, %38 ], [ null, %34 ], [ null, %27 ]
  %45 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %0, i64 0, i32 0
  store %struct.TfLiteTensor* %44, %struct.TfLiteTensor** %45, align 8
  %46 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %2, i64 0, i32 1
  %47 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %46, align 8
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %53 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %52, align 8
  %54 = sext i32 %49 to i64
  %55 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %53, i64 %54
  br label %56

56:                                               ; preds = %43, %51
  %57 = phi %struct.TfLiteTensor* [ %55, %51 ], [ null, %43 ]
  %58 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %0, i64 0, i32 3
  store %struct.TfLiteTensor* %57, %struct.TfLiteTensor** %58, align 8
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 2
  %60 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %59, align 8
  %61 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %60, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %0, i64 0, i32 4
  store i32 %62, i32* %63, align 8
  %64 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %0, i64 0, i32 5
  store i8 2, i8* %64, align 4
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #8
  %66 = icmp eq %struct.TfLiteTensor* %28, null
  br i1 %66, label %67, label %68

67:                                               ; preds = %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #8
  br label %237

68:                                               ; preds = %56
  %69 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %28, i64 0, i32 2
  %70 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %69, align 8, !noalias !2
  %71 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %70, i64 0, i32 0
  %72 = load i32, i32* %71, align 4, !noalias !2
  %73 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %70, i64 0, i32 1, i64 0
  %74 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %72, i32* %74, align 8, !alias.scope !2
  %75 = icmp sgt i32 %72, 5
  br i1 %75, label %76, label %84

76:                                               ; preds = %68
  %77 = sext i32 %72 to i64
  %78 = shl nsw i64 %77, 2
  %79 = tail call i8* @_Znam(i64 %78) #9, !noalias !2
  %80 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %81 = bitcast i32** %80 to i8**
  store i8* %79, i8** %81, align 8, !alias.scope !2
  %82 = bitcast i32* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %79, i8* align 4 %82, i64 %78, i1 false) #8
  %83 = bitcast i8* %79 to i32*
  br label %94

84:                                               ; preds = %68
  %85 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %86 = sext i32 %72 to i64
  %87 = shl nsw i64 %86, 2
  %88 = bitcast %union.anon* %85 to i8*
  %89 = bitcast i32* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 4 %89, i64 %87, i1 false) #8
  %90 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %91 = bitcast %union.anon* %90 to i32*
  %92 = icmp sgt i32 %72, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %84
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #8
  br label %207

94:                                               ; preds = %84, %76
  %95 = phi i1 [ true, %76 ], [ false, %84 ]
  %96 = phi i32* [ %83, %76 ], [ %91, %84 ]
  %97 = zext i32 %72 to i64
  %98 = icmp ult i32 %72, 8
  br i1 %98, label %184, label %99

99:                                               ; preds = %94
  %100 = and i64 %97, 4294967288
  %101 = add nsw i64 %100, -8
  %102 = lshr exact i64 %101, 3
  %103 = add nuw nsw i64 %102, 1
  %104 = and i64 %103, 3
  %105 = icmp ult i64 %101, 24
  br i1 %105, label %151, label %106

106:                                              ; preds = %99
  %107 = sub nsw i64 %103, %104
  br label %108

108:                                              ; preds = %108, %106
  %109 = phi i64 [ 0, %106 ], [ %148, %108 ]
  %110 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %106 ], [ %146, %108 ]
  %111 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %106 ], [ %147, %108 ]
  %112 = phi i64 [ %107, %106 ], [ %149, %108 ]
  %113 = getelementptr inbounds i32, i32* %96, i64 %109
  %114 = bitcast i32* %113 to <4 x i32>*
  %115 = load <4 x i32>, <4 x i32>* %114, align 4
  %116 = getelementptr inbounds i32, i32* %113, i64 4
  %117 = bitcast i32* %116 to <4 x i32>*
  %118 = load <4 x i32>, <4 x i32>* %117, align 4
  %119 = mul nsw <4 x i32> %115, %110
  %120 = mul nsw <4 x i32> %118, %111
  %121 = or i64 %109, 8
  %122 = getelementptr inbounds i32, i32* %96, i64 %121
  %123 = bitcast i32* %122 to <4 x i32>*
  %124 = load <4 x i32>, <4 x i32>* %123, align 4
  %125 = getelementptr inbounds i32, i32* %122, i64 4
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4
  %128 = mul nsw <4 x i32> %124, %119
  %129 = mul nsw <4 x i32> %127, %120
  %130 = or i64 %109, 16
  %131 = getelementptr inbounds i32, i32* %96, i64 %130
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4
  %134 = getelementptr inbounds i32, i32* %131, i64 4
  %135 = bitcast i32* %134 to <4 x i32>*
  %136 = load <4 x i32>, <4 x i32>* %135, align 4
  %137 = mul nsw <4 x i32> %133, %128
  %138 = mul nsw <4 x i32> %136, %129
  %139 = or i64 %109, 24
  %140 = getelementptr inbounds i32, i32* %96, i64 %139
  %141 = bitcast i32* %140 to <4 x i32>*
  %142 = load <4 x i32>, <4 x i32>* %141, align 4
  %143 = getelementptr inbounds i32, i32* %140, i64 4
  %144 = bitcast i32* %143 to <4 x i32>*
  %145 = load <4 x i32>, <4 x i32>* %144, align 4
  %146 = mul nsw <4 x i32> %142, %137
  %147 = mul nsw <4 x i32> %145, %138
  %148 = add i64 %109, 32
  %149 = add i64 %112, -4
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %108, !llvm.loop !5

151:                                              ; preds = %108, %99
  %152 = phi <4 x i32> [ undef, %99 ], [ %146, %108 ]
  %153 = phi <4 x i32> [ undef, %99 ], [ %147, %108 ]
  %154 = phi i64 [ 0, %99 ], [ %148, %108 ]
  %155 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %99 ], [ %146, %108 ]
  %156 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %99 ], [ %147, %108 ]
  %157 = icmp eq i64 %104, 0
  br i1 %157, label %174, label %158

158:                                              ; preds = %151, %158
  %159 = phi i64 [ %171, %158 ], [ %154, %151 ]
  %160 = phi <4 x i32> [ %169, %158 ], [ %155, %151 ]
  %161 = phi <4 x i32> [ %170, %158 ], [ %156, %151 ]
  %162 = phi i64 [ %172, %158 ], [ %104, %151 ]
  %163 = getelementptr inbounds i32, i32* %96, i64 %159
  %164 = bitcast i32* %163 to <4 x i32>*
  %165 = load <4 x i32>, <4 x i32>* %164, align 4
  %166 = getelementptr inbounds i32, i32* %163, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = mul nsw <4 x i32> %165, %160
  %170 = mul nsw <4 x i32> %168, %161
  %171 = add i64 %159, 8
  %172 = add i64 %162, -1
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %158, !llvm.loop !7

174:                                              ; preds = %158, %151
  %175 = phi <4 x i32> [ %152, %151 ], [ %169, %158 ]
  %176 = phi <4 x i32> [ %153, %151 ], [ %170, %158 ]
  %177 = mul <4 x i32> %176, %175
  %178 = shufflevector <4 x i32> %177, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %179 = mul <4 x i32> %177, %178
  %180 = shufflevector <4 x i32> %179, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %181 = mul <4 x i32> %179, %180
  %182 = extractelement <4 x i32> %181, i32 0
  %183 = icmp eq i64 %100, %97
  br i1 %183, label %195, label %184

184:                                              ; preds = %174, %94
  %185 = phi i64 [ 0, %94 ], [ %100, %174 ]
  %186 = phi i32 [ 1, %94 ], [ %182, %174 ]
  br label %187

187:                                              ; preds = %184, %187
  %188 = phi i64 [ %193, %187 ], [ %185, %184 ]
  %189 = phi i32 [ %192, %187 ], [ %186, %184 ]
  %190 = getelementptr inbounds i32, i32* %96, i64 %188
  %191 = load i32, i32* %190, align 4
  %192 = mul nsw i32 %191, %189
  %193 = add nuw nsw i64 %188, 1
  %194 = icmp eq i64 %193, %97
  br i1 %194, label %195, label %187, !llvm.loop !9

195:                                              ; preds = %187, %174
  %196 = phi i32 [ %182, %174 ], [ %192, %187 ]
  br i1 %95, label %197, label %204

197:                                              ; preds = %195
  %198 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %199 = load i32*, i32** %198, align 8
  %200 = icmp eq i32* %199, null
  br i1 %200, label %204, label %201

201:                                              ; preds = %197
  %202 = bitcast i32* %199 to i8*
  tail call void @_ZdaPv(i8* %202) #9
  %203 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %29, align 8
  br label %204

204:                                              ; preds = %195, %197, %201
  %205 = phi %struct.TfLiteTensor* [ %28, %195 ], [ %28, %197 ], [ %203, %201 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #8
  %206 = icmp eq %struct.TfLiteTensor* %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %93, %204
  %208 = phi i32 [ 1, %93 ], [ %196, %204 ]
  %209 = phi %struct.TfLiteTensor* [ %28, %93 ], [ %205, %204 ]
  %210 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %209, i64 0, i32 1, i32 0
  %211 = load i32*, i32** %210, align 8
  br label %212

212:                                              ; preds = %204, %207
  %213 = phi i32 [ %208, %207 ], [ %196, %204 ]
  %214 = phi %struct.TfLiteTensor* [ %209, %207 ], [ null, %204 ]
  %215 = phi i32* [ %211, %207 ], [ null, %204 ]
  %216 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %214, i64 0, i32 4
  %217 = load i32, i32* %216, align 8
  %218 = icmp eq i32 %217, 1
  %219 = icmp eq i32 %213, 8
  %220 = and i1 %219, %218
  br i1 %220, label %221, label %237

221:                                              ; preds = %212
  %222 = load i32, i32* %215, align 4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %237

224:                                              ; preds = %221
  %225 = getelementptr inbounds i32, i32* %215, i64 1
  %226 = load i32, i32* %225, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %237

228:                                              ; preds = %224
  %229 = getelementptr inbounds i32, i32* %215, i64 6
  %230 = load i32, i32* %229, align 4
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %237

232:                                              ; preds = %228
  %233 = getelementptr inbounds i32, i32* %215, i64 7
  %234 = load i32, i32* %233, align 4
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %237

236:                                              ; preds = %232
  store i8 1, i8* %64, align 4
  br label %237

237:                                              ; preds = %67, %236, %232, %228, %224, %221, %212
  ret void
}

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin16Register_PAD_REFEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin16Register_PAD_REFEvE1r
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin3pad4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"struct.tflite::ops::builtin::pad::PadContext", align 8
  %4 = alloca %"struct.tflite::PadParams", align 4
  %5 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 0
  %6 = alloca float, align 4
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca float, align 4
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca i8, align 1
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca i8, align 1
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca i8, align 1
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca i8, align 1
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = alloca %"class.tflite::RuntimeShape", align 8
  %24 = alloca i32, align 4
  %25 = alloca %"class.tflite::RuntimeShape", align 8
  %26 = alloca %"class.tflite::RuntimeShape", align 8
  %27 = alloca i64, align 8
  %28 = alloca %"class.tflite::RuntimeShape", align 8
  %29 = alloca %"class.tflite::RuntimeShape", align 8
  %30 = bitcast %"struct.tflite::ops::builtin::pad::PadContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite3ops7builtin3pad10PadContextC2EP13TfLiteContextP10TfLiteNode(%"struct.tflite::ops::builtin::pad::PadContext"* nonnull %3, %struct.TfLiteContext* %0, %struct.TfLiteNode* %1)
  %31 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 0
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = icmp eq %struct.TfLiteTensor* %32, null
  br i1 %33, label %184, label %34

34:                                               ; preds = %2
  %35 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 2
  %36 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %35, align 8
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %184

40:                                               ; preds = %34
  %41 = sext i32 %38 to i64
  %42 = add nsw i64 %41, -1
  %43 = and i64 %41, 7
  %44 = icmp ult i64 %42, 7
  br i1 %44, label %93, label %45

45:                                               ; preds = %40
  %46 = sub nsw i64 %41, %43
  br label %47

47:                                               ; preds = %47, %45
  %48 = phi i64 [ 0, %45 ], [ %90, %47 ]
  %49 = phi i64 [ 1, %45 ], [ %89, %47 ]
  %50 = phi i64 [ %46, %45 ], [ %91, %47 ]
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %48
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  %54 = mul nsw i64 %49, %53
  %55 = or i64 %48, 1
  %56 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = sext i32 %57 to i64
  %59 = mul nsw i64 %54, %58
  %60 = or i64 %48, 2
  %61 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = mul nsw i64 %59, %63
  %65 = or i64 %48, 3
  %66 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = sext i32 %67 to i64
  %69 = mul nsw i64 %64, %68
  %70 = or i64 %48, 4
  %71 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = sext i32 %72 to i64
  %74 = mul nsw i64 %69, %73
  %75 = or i64 %48, 5
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = sext i32 %77 to i64
  %79 = mul nsw i64 %74, %78
  %80 = or i64 %48, 6
  %81 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = sext i32 %82 to i64
  %84 = mul nsw i64 %79, %83
  %85 = or i64 %48, 7
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = mul nsw i64 %84, %88
  %90 = add nuw nsw i64 %48, 8
  %91 = add i64 %50, -8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %47

93:                                               ; preds = %47, %40
  %94 = phi i64 [ undef, %40 ], [ %89, %47 ]
  %95 = phi i64 [ 0, %40 ], [ %90, %47 ]
  %96 = phi i64 [ 1, %40 ], [ %89, %47 ]
  %97 = icmp eq i64 %43, 0
  br i1 %97, label %109, label %98

98:                                               ; preds = %93, %98
  %99 = phi i64 [ %106, %98 ], [ %95, %93 ]
  %100 = phi i64 [ %105, %98 ], [ %96, %93 ]
  %101 = phi i64 [ %107, %98 ], [ %43, %93 ]
  %102 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %99
  %103 = load i32, i32* %102, align 4
  %104 = sext i32 %103 to i64
  %105 = mul nsw i64 %100, %104
  %106 = add nuw nsw i64 %99, 1
  %107 = add i64 %101, -1
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %98, !llvm.loop !11

109:                                              ; preds = %98, %93
  %110 = phi i64 [ %94, %93 ], [ %105, %98 ]
  %111 = icmp eq i64 %110, 1
  br i1 %111, label %184, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %114 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %113, align 8
  %115 = add nsw i64 %41, -1
  %116 = and i64 %41, 7
  %117 = icmp ult i64 %115, 7
  br i1 %117, label %166, label %118

118:                                              ; preds = %112
  %119 = sub nsw i64 %41, %116
  br label %120

120:                                              ; preds = %120, %118
  %121 = phi i64 [ 0, %118 ], [ %163, %120 ]
  %122 = phi i64 [ 1, %118 ], [ %162, %120 ]
  %123 = phi i64 [ %119, %118 ], [ %164, %120 ]
  %124 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %121
  %125 = load i32, i32* %124, align 4
  %126 = sext i32 %125 to i64
  %127 = mul nsw i64 %122, %126
  %128 = or i64 %121, 1
  %129 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = sext i32 %130 to i64
  %132 = mul nsw i64 %127, %131
  %133 = or i64 %121, 2
  %134 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %133
  %135 = load i32, i32* %134, align 4
  %136 = sext i32 %135 to i64
  %137 = mul nsw i64 %132, %136
  %138 = or i64 %121, 3
  %139 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %138
  %140 = load i32, i32* %139, align 4
  %141 = sext i32 %140 to i64
  %142 = mul nsw i64 %137, %141
  %143 = or i64 %121, 4
  %144 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %143
  %145 = load i32, i32* %144, align 4
  %146 = sext i32 %145 to i64
  %147 = mul nsw i64 %142, %146
  %148 = or i64 %121, 5
  %149 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %148
  %150 = load i32, i32* %149, align 4
  %151 = sext i32 %150 to i64
  %152 = mul nsw i64 %147, %151
  %153 = or i64 %121, 6
  %154 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %153
  %155 = load i32, i32* %154, align 4
  %156 = sext i32 %155 to i64
  %157 = mul nsw i64 %152, %156
  %158 = or i64 %121, 7
  %159 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %158
  %160 = load i32, i32* %159, align 4
  %161 = sext i32 %160 to i64
  %162 = mul nsw i64 %157, %161
  %163 = add nuw nsw i64 %121, 8
  %164 = add i64 %123, -8
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %112
  %167 = phi i64 [ undef, %112 ], [ %162, %120 ]
  %168 = phi i64 [ 0, %112 ], [ %163, %120 ]
  %169 = phi i64 [ 1, %112 ], [ %162, %120 ]
  %170 = icmp eq i64 %116, 0
  br i1 %170, label %182, label %171

171:                                              ; preds = %166, %171
  %172 = phi i64 [ %179, %171 ], [ %168, %166 ]
  %173 = phi i64 [ %178, %171 ], [ %169, %166 ]
  %174 = phi i64 [ %180, %171 ], [ %116, %166 ]
  %175 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %172
  %176 = load i32, i32* %175, align 4
  %177 = sext i32 %176 to i64
  %178 = mul nsw i64 %173, %177
  %179 = add nuw nsw i64 %172, 1
  %180 = add i64 %174, -1
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %171, !llvm.loop !12

182:                                              ; preds = %171, %166
  %183 = phi i64 [ %167, %166 ], [ %178, %171 ]
  call void (%struct.TfLiteContext*, i8*, ...) %114(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 142, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i64 %183, i32 1) #8
  br label %1185

184:                                              ; preds = %34, %109, %2
  %185 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 3
  %186 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %185, align 8
  %187 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %186, i64 0, i32 4
  %188 = load i32, i32* %187, align 8
  %189 = icmp eq i32 %188, 4
  br i1 %189, label %190, label %193

190:                                              ; preds = %184
  %191 = call i32 @_ZN6tflite3ops7builtin3pad18ResizeOutputTensorEP13TfLiteContextPNS2_10PadContextE(%struct.TfLiteContext* %0, %"struct.tflite::ops::builtin::pad::PadContext"* nonnull %3)
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %1185

193:                                              ; preds = %190, %184
  %194 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 2
  %195 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %194, align 8
  %196 = icmp eq %struct.TfLiteTensor* %195, null
  br i1 %196, label %200, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %195, i64 0, i32 1, i32 0
  %199 = load i32*, i32** %198, align 8
  br label %200

200:                                              ; preds = %193, %197
  %201 = phi i32* [ %199, %197 ], [ null, %193 ]
  %202 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 4
  %203 = load i32, i32* %202, align 8
  %204 = icmp sgt i32 %203, 4
  br i1 %204, label %205, label %208

205:                                              ; preds = %200
  %206 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %207 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %206, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %207(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 154, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.17, i64 0, i64 0)) #8
  br label %1185

208:                                              ; preds = %200
  %209 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %209) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %209, i8 -86, i64 44, i1 false)
  %210 = trunc i32 %203 to i8
  store i8 %210, i8* %209, align 4
  %211 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 2
  store i8 %210, i8* %211, align 4
  %212 = icmp sgt i32 %203, 0
  br i1 %212, label %213, label %318

213:                                              ; preds = %208
  %214 = sext i32 %203 to i64
  %215 = icmp ult i32 %203, 4
  br i1 %215, label %216, label %219

216:                                              ; preds = %316, %219, %213
  %217 = phi i64 [ %214, %219 ], [ %214, %213 ], [ %239, %316 ]
  %218 = phi i32 [ %203, %219 ], [ %203, %213 ], [ %241, %316 ]
  br label %323

219:                                              ; preds = %213
  %220 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 1, i64 0
  %221 = shl nsw i64 %214, 2
  %222 = add nsw i64 %221, 24
  %223 = getelementptr i8, i8* %5, i64 %222
  %224 = shl i32 %203, 1
  %225 = add i32 %224, -2
  %226 = sext i32 %225 to i64
  %227 = add nsw i64 %226, 2
  %228 = shl nsw i64 %214, 1
  %229 = sub nsw i64 %227, %228
  %230 = getelementptr i32, i32* %201, i64 %229
  %231 = bitcast i32* %230 to i8*
  %232 = add nsw i64 %226, 2
  %233 = getelementptr i32, i32* %201, i64 %232
  %234 = icmp ult i32* %220, %233
  %235 = icmp ugt i8* %223, %231
  %236 = and i1 %234, %235
  br i1 %236, label %216, label %237

237:                                              ; preds = %219
  %238 = and i64 %214, -4
  %239 = sub nsw i64 %214, %238
  %240 = trunc i64 %238 to i32
  %241 = sub i32 %203, %240
  %242 = add nsw i64 %238, -4
  %243 = lshr exact i64 %242, 2
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 1
  %246 = icmp eq i64 %242, 0
  br i1 %246, label %293, label %247

247:                                              ; preds = %237
  %248 = sub nuw nsw i64 %244, %245
  %249 = getelementptr inbounds i32, i32* %201, i64 -6
  %250 = getelementptr inbounds i32, i32* %201, i64 -6
  br label %251

251:                                              ; preds = %251, %247
  %252 = phi i64 [ 0, %247 ], [ %290, %251 ]
  %253 = phi i64 [ %248, %247 ], [ %291, %251 ]
  %254 = trunc i64 %252 to i32
  %255 = xor i64 %252, -1
  %256 = add i64 %255, %214
  %257 = xor i32 %254, -1
  %258 = add i32 %203, %257
  %259 = shl nsw i32 %258, 1
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds i32, i32* %249, i64 %260
  %262 = bitcast i32* %261 to <8 x i32>*
  %263 = load <8 x i32>, <8 x i32>* %262, align 4
  %264 = shufflevector <8 x i32> %263, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %265 = shufflevector <8 x i32> %263, <8 x i32> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %266 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 1, i64 %256
  %267 = getelementptr inbounds i32, i32* %266, i64 -3
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> %264, <4 x i32>* %268, align 4, !alias.scope !13, !noalias !16
  %269 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 3, i64 %256
  %270 = getelementptr inbounds i32, i32* %269, i64 -3
  %271 = bitcast i32* %270 to <4 x i32>*
  store <4 x i32> %265, <4 x i32>* %271, align 4, !alias.scope !13, !noalias !16
  %272 = trunc i64 %252 to i32
  %273 = sub nuw nsw i64 -5, %252
  %274 = add i64 %273, %214
  %275 = xor i32 %272, -5
  %276 = add i32 %203, %275
  %277 = shl nsw i32 %276, 1
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds i32, i32* %250, i64 %278
  %280 = bitcast i32* %279 to <8 x i32>*
  %281 = load <8 x i32>, <8 x i32>* %280, align 4
  %282 = shufflevector <8 x i32> %281, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %283 = shufflevector <8 x i32> %281, <8 x i32> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %284 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 1, i64 %274
  %285 = getelementptr inbounds i32, i32* %284, i64 -3
  %286 = bitcast i32* %285 to <4 x i32>*
  store <4 x i32> %282, <4 x i32>* %286, align 4, !alias.scope !13, !noalias !16
  %287 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 3, i64 %274
  %288 = getelementptr inbounds i32, i32* %287, i64 -3
  %289 = bitcast i32* %288 to <4 x i32>*
  store <4 x i32> %283, <4 x i32>* %289, align 4, !alias.scope !13, !noalias !16
  %290 = add i64 %252, 8
  %291 = add i64 %253, -2
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %251, !llvm.loop !18

293:                                              ; preds = %251, %237
  %294 = phi i64 [ 0, %237 ], [ %290, %251 ]
  %295 = icmp eq i64 %245, 0
  br i1 %295, label %316, label %296

296:                                              ; preds = %293
  %297 = trunc i64 %294 to i32
  %298 = xor i64 %294, -1
  %299 = add i64 %298, %214
  %300 = xor i32 %297, -1
  %301 = add i32 %203, %300
  %302 = shl nsw i32 %301, 1
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds i32, i32* %201, i64 -6
  %305 = getelementptr inbounds i32, i32* %304, i64 %303
  %306 = bitcast i32* %305 to <8 x i32>*
  %307 = load <8 x i32>, <8 x i32>* %306, align 4
  %308 = shufflevector <8 x i32> %307, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %309 = shufflevector <8 x i32> %307, <8 x i32> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %310 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 1, i64 %299
  %311 = getelementptr inbounds i32, i32* %310, i64 -3
  %312 = bitcast i32* %311 to <4 x i32>*
  store <4 x i32> %308, <4 x i32>* %312, align 4, !alias.scope !13, !noalias !16
  %313 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 3, i64 %299
  %314 = getelementptr inbounds i32, i32* %313, i64 -3
  %315 = bitcast i32* %314 to <4 x i32>*
  store <4 x i32> %309, <4 x i32>* %315, align 4, !alias.scope !13, !noalias !16
  br label %316

316:                                              ; preds = %293, %296
  %317 = icmp eq i64 %238, %214
  br i1 %317, label %318, label %216

318:                                              ; preds = %323, %316, %208
  %319 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 1
  %320 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %319, align 8
  %321 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 0
  %322 = load i32, i32* %321, align 8
  switch i32 %322, label %1179 [
    i32 1, label %339
    i32 3, label %534
    i32 9, label %758
    i32 2, label %982
    i32 4, label %1079
  ]

323:                                              ; preds = %216, %323
  %324 = phi i64 [ %326, %323 ], [ %217, %216 ]
  %325 = phi i32 [ %327, %323 ], [ %218, %216 ]
  %326 = add nsw i64 %324, -1
  %327 = add nsw i32 %325, -1
  %328 = shl nsw i32 %327, 1
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds i32, i32* %201, i64 %329
  %331 = load i32, i32* %330, align 4
  %332 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 1, i64 %326
  store i32 %331, i32* %332, align 4
  %333 = or i32 %328, 1
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds i32, i32* %201, i64 %334
  %336 = load i32, i32* %335, align 4
  %337 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 3, i64 %326
  store i32 %336, i32* %337, align 4
  %338 = icmp sgt i64 %326, 0
  br i1 %338, label %323, label %318, !llvm.loop !19

339:                                              ; preds = %318
  %340 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %341 = icmp eq %struct.TfLiteTensor* %340, null
  br i1 %341, label %347, label %342

342:                                              ; preds = %339
  %343 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %340, i64 0, i32 1
  %344 = bitcast %union.TfLitePtrUnion* %343 to float**
  %345 = load float*, float** %344, align 8
  %346 = load float, float* %345, align 4
  br label %347

347:                                              ; preds = %339, %342
  %348 = phi float [ %346, %342 ], [ 0.000000e+00, %339 ]
  %349 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 5
  %350 = load i8, i8* %349, align 4
  %351 = icmp eq i8 %350, 1
  br i1 %351, label %352, label %443

352:                                              ; preds = %347
  %353 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %353) #8
  store float %348, float* %6, align 4
  %354 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %354) #8
  %355 = icmp eq %struct.TfLiteTensor* %320, null
  br i1 %355, label %356, label %358

356:                                              ; preds = %352
  %357 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %357, align 8, !alias.scope !20
  br label %386

358:                                              ; preds = %352
  %359 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 2
  %360 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %359, align 8, !noalias !20
  %361 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %360, i64 0, i32 0
  %362 = load i32, i32* %361, align 4, !noalias !20
  %363 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %360, i64 0, i32 1, i64 0
  %364 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %362, i32* %364, align 8, !alias.scope !20
  %365 = icmp sgt i32 %362, 5
  br i1 %365, label %366, label %373

366:                                              ; preds = %358
  %367 = sext i32 %362 to i64
  %368 = shl nsw i64 %367, 2
  %369 = call i8* @_Znam(i64 %368) #9, !noalias !20
  %370 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %371 = bitcast i32** %370 to i8**
  store i8* %369, i8** %371, align 8, !alias.scope !20
  %372 = bitcast i8* %369 to i32*
  br label %378

373:                                              ; preds = %358
  %374 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %375 = bitcast %union.anon* %374 to i32*
  %376 = sext i32 %362 to i64
  %377 = shl nsw i64 %376, 2
  br label %378

378:                                              ; preds = %373, %366
  %379 = phi i64 [ %368, %366 ], [ %377, %373 ]
  %380 = phi i32* [ %372, %366 ], [ %375, %373 ]
  %381 = bitcast i32* %380 to i8*
  %382 = bitcast i32* %363 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %381, i8* align 4 %382, i64 %379, i1 false) #8
  %383 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 1
  %384 = bitcast %union.TfLitePtrUnion* %383 to float**
  %385 = load float*, float** %384, align 8
  br label %386

386:                                              ; preds = %356, %378
  %387 = phi float* [ %385, %378 ], [ null, %356 ]
  %388 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %388) #8
  %389 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %185, align 8
  %390 = icmp eq %struct.TfLiteTensor* %389, null
  br i1 %390, label %391, label %393

391:                                              ; preds = %386
  %392 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %392, align 8, !alias.scope !23
  br label %421

393:                                              ; preds = %386
  %394 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %389, i64 0, i32 2
  %395 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %394, align 8, !noalias !23
  %396 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %395, i64 0, i32 0
  %397 = load i32, i32* %396, align 4, !noalias !23
  %398 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %395, i64 0, i32 1, i64 0
  %399 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %397, i32* %399, align 8, !alias.scope !23
  %400 = icmp sgt i32 %397, 5
  br i1 %400, label %401, label %408

401:                                              ; preds = %393
  %402 = sext i32 %397 to i64
  %403 = shl nsw i64 %402, 2
  %404 = call i8* @_Znam(i64 %403) #9, !noalias !23
  %405 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %406 = bitcast i32** %405 to i8**
  store i8* %404, i8** %406, align 8, !alias.scope !23
  %407 = bitcast i8* %404 to i32*
  br label %413

408:                                              ; preds = %393
  %409 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %410 = bitcast %union.anon* %409 to i32*
  %411 = sext i32 %397 to i64
  %412 = shl nsw i64 %411, 2
  br label %413

413:                                              ; preds = %408, %401
  %414 = phi i64 [ %403, %401 ], [ %412, %408 ]
  %415 = phi i32* [ %407, %401 ], [ %410, %408 ]
  %416 = bitcast i32* %415 to i8*
  %417 = bitcast i32* %398 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %416, i8* align 4 %417, i64 %414, i1 false) #8
  %418 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %389, i64 0, i32 1
  %419 = bitcast %union.TfLitePtrUnion* %418 to float**
  %420 = load float*, float** %419, align 8
  br label %421

421:                                              ; preds = %391, %413
  %422 = phi float* [ %420, %413 ], [ null, %391 ]
  call void @_ZN6tflite13reference_ops7PadImplIffEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* nonnull dereferenceable(44) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, float* %387, float* nonnull %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, float* %422) #8
  %423 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %424 = load i32, i32* %423, align 8
  %425 = icmp sgt i32 %424, 5
  br i1 %425, label %426, label %432

426:                                              ; preds = %421
  %427 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %428 = load i32*, i32** %427, align 8
  %429 = icmp eq i32* %428, null
  br i1 %429, label %432, label %430

430:                                              ; preds = %426
  %431 = bitcast i32* %428 to i8*
  call void @_ZdaPv(i8* %431) #9
  br label %432

432:                                              ; preds = %421, %426, %430
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %388) #8
  %433 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %434 = load i32, i32* %433, align 8
  %435 = icmp sgt i32 %434, 5
  br i1 %435, label %436, label %442

436:                                              ; preds = %432
  %437 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %438 = load i32*, i32** %437, align 8
  %439 = icmp eq i32* %438, null
  br i1 %439, label %442, label %440

440:                                              ; preds = %436
  %441 = bitcast i32* %438 to i8*
  call void @_ZdaPv(i8* %441) #9
  br label %442

442:                                              ; preds = %432, %436, %440
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %354) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %353) #8
  br label %1183

443:                                              ; preds = %347
  %444 = bitcast float* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %444) #8
  store float %348, float* %9, align 4
  %445 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %445) #8
  %446 = icmp eq %struct.TfLiteTensor* %320, null
  br i1 %446, label %447, label %449

447:                                              ; preds = %443
  %448 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %448, align 8, !alias.scope !26
  br label %477

449:                                              ; preds = %443
  %450 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 2
  %451 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %450, align 8, !noalias !26
  %452 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %451, i64 0, i32 0
  %453 = load i32, i32* %452, align 4, !noalias !26
  %454 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %451, i64 0, i32 1, i64 0
  %455 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %453, i32* %455, align 8, !alias.scope !26
  %456 = icmp sgt i32 %453, 5
  br i1 %456, label %457, label %464

457:                                              ; preds = %449
  %458 = sext i32 %453 to i64
  %459 = shl nsw i64 %458, 2
  %460 = call i8* @_Znam(i64 %459) #9, !noalias !26
  %461 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %462 = bitcast i32** %461 to i8**
  store i8* %460, i8** %462, align 8, !alias.scope !26
  %463 = bitcast i8* %460 to i32*
  br label %469

464:                                              ; preds = %449
  %465 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %466 = bitcast %union.anon* %465 to i32*
  %467 = sext i32 %453 to i64
  %468 = shl nsw i64 %467, 2
  br label %469

469:                                              ; preds = %464, %457
  %470 = phi i64 [ %459, %457 ], [ %468, %464 ]
  %471 = phi i32* [ %463, %457 ], [ %466, %464 ]
  %472 = bitcast i32* %471 to i8*
  %473 = bitcast i32* %454 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %472, i8* align 4 %473, i64 %470, i1 false) #8
  %474 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 1
  %475 = bitcast %union.TfLitePtrUnion* %474 to float**
  %476 = load float*, float** %475, align 8
  br label %477

477:                                              ; preds = %447, %469
  %478 = phi float* [ %476, %469 ], [ null, %447 ]
  %479 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %479) #8
  %480 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %185, align 8
  %481 = icmp eq %struct.TfLiteTensor* %480, null
  br i1 %481, label %482, label %484

482:                                              ; preds = %477
  %483 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %483, align 8, !alias.scope !29
  br label %512

484:                                              ; preds = %477
  %485 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %480, i64 0, i32 2
  %486 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %485, align 8, !noalias !29
  %487 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %486, i64 0, i32 0
  %488 = load i32, i32* %487, align 4, !noalias !29
  %489 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %486, i64 0, i32 1, i64 0
  %490 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %488, i32* %490, align 8, !alias.scope !29
  %491 = icmp sgt i32 %488, 5
  br i1 %491, label %492, label %499

492:                                              ; preds = %484
  %493 = sext i32 %488 to i64
  %494 = shl nsw i64 %493, 2
  %495 = call i8* @_Znam(i64 %494) #9, !noalias !29
  %496 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %497 = bitcast i32** %496 to i8**
  store i8* %495, i8** %497, align 8, !alias.scope !29
  %498 = bitcast i8* %495 to i32*
  br label %504

499:                                              ; preds = %484
  %500 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %501 = bitcast %union.anon* %500 to i32*
  %502 = sext i32 %488 to i64
  %503 = shl nsw i64 %502, 2
  br label %504

504:                                              ; preds = %499, %492
  %505 = phi i64 [ %494, %492 ], [ %503, %499 ]
  %506 = phi i32* [ %498, %492 ], [ %501, %499 ]
  %507 = bitcast i32* %506 to i8*
  %508 = bitcast i32* %489 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %507, i8* align 4 %508, i64 %505, i1 false) #8
  %509 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %480, i64 0, i32 1
  %510 = bitcast %union.TfLitePtrUnion* %509 to float**
  %511 = load float*, float** %510, align 8
  br label %512

512:                                              ; preds = %482, %504
  %513 = phi float* [ %511, %504 ], [ null, %482 ]
  call void @_ZN6tflite13reference_ops7PadImplIffEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* nonnull dereferenceable(44) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, float* %478, float* nonnull %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, float* %513) #8
  %514 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %515 = load i32, i32* %514, align 8
  %516 = icmp sgt i32 %515, 5
  br i1 %516, label %517, label %523

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %519 = load i32*, i32** %518, align 8
  %520 = icmp eq i32* %519, null
  br i1 %520, label %523, label %521

521:                                              ; preds = %517
  %522 = bitcast i32* %519 to i8*
  call void @_ZdaPv(i8* %522) #9
  br label %523

523:                                              ; preds = %512, %517, %521
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %479) #8
  %524 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %525 = load i32, i32* %524, align 8
  %526 = icmp sgt i32 %525, 5
  br i1 %526, label %527, label %533

527:                                              ; preds = %523
  %528 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %529 = load i32*, i32** %528, align 8
  %530 = icmp eq i32* %529, null
  br i1 %530, label %533, label %531

531:                                              ; preds = %527
  %532 = bitcast i32* %529 to i8*
  call void @_ZdaPv(i8* %532) #9
  br label %533

533:                                              ; preds = %523, %527, %531
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %445) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %444) #8
  br label %1183

534:                                              ; preds = %318
  %535 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %536 = icmp eq %struct.TfLiteTensor* %535, null
  %537 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %185, align 8
  %538 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %537, i64 0, i32 3, i32 1
  %539 = load i32, i32* %538, align 4
  br i1 %536, label %540, label %552

540:                                              ; preds = %534
  %541 = icmp slt i32 %539, 0
  br i1 %541, label %542, label %545

542:                                              ; preds = %540
  %543 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %544 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %543, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %544(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 197, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.20, i64 0, i64 0)) #8
  br label %1183

545:                                              ; preds = %540
  %546 = icmp sgt i32 %539, 255
  br i1 %546, label %547, label %550

547:                                              ; preds = %545
  %548 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %549 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %548, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %549(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 199, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.21, i64 0, i64 0)) #8
  br label %1183

550:                                              ; preds = %545
  %551 = trunc i32 %539 to i8
  br label %575

552:                                              ; preds = %534
  %553 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %535, i64 0, i32 3, i32 1
  %554 = load i32, i32* %553, align 4
  %555 = icmp eq i32 %539, %554
  br i1 %555, label %559, label %556

556:                                              ; preds = %552
  %557 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %558 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %557, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %558(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 205, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.23, i64 0, i64 0), i32 %539, i32 %554) #8
  br label %1183

559:                                              ; preds = %552
  %560 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %537, i64 0, i32 3, i32 0
  %561 = load float, float* %560, align 8
  %562 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %535, i64 0, i32 3, i32 0
  %563 = load float, float* %562, align 8
  %564 = fcmp une float %561, %563
  br i1 %564, label %565, label %570

565:                                              ; preds = %559
  %566 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %567 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %566, align 8
  %568 = fpext float %561 to double
  %569 = fpext float %563 to double
  call void (%struct.TfLiteContext*, i8*, ...) %567(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 207, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.25, i64 0, i64 0), double %568, double %569) #8
  br label %1183

570:                                              ; preds = %559
  %571 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %535, i64 0, i32 1
  %572 = bitcast %union.TfLitePtrUnion* %571 to i8**
  %573 = load i8*, i8** %572, align 8
  %574 = load i8, i8* %573, align 1
  br label %575

575:                                              ; preds = %570, %550
  %576 = phi i8 [ %551, %550 ], [ %574, %570 ]
  %577 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 5
  %578 = load i8, i8* %577, align 4
  %579 = icmp eq i8 %578, 1
  br i1 %579, label %580, label %669

580:                                              ; preds = %575
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  store i8 %576, i8* %12, align 1
  %581 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %581) #8
  %582 = icmp eq %struct.TfLiteTensor* %320, null
  br i1 %582, label %583, label %585

583:                                              ; preds = %580
  %584 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %584, align 8, !alias.scope !32
  br label %613

585:                                              ; preds = %580
  %586 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 2
  %587 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %586, align 8, !noalias !32
  %588 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %587, i64 0, i32 0
  %589 = load i32, i32* %588, align 4, !noalias !32
  %590 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %587, i64 0, i32 1, i64 0
  %591 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %589, i32* %591, align 8, !alias.scope !32
  %592 = icmp sgt i32 %589, 5
  br i1 %592, label %593, label %600

593:                                              ; preds = %585
  %594 = sext i32 %589 to i64
  %595 = shl nsw i64 %594, 2
  %596 = call i8* @_Znam(i64 %595) #9, !noalias !32
  %597 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %598 = bitcast i32** %597 to i8**
  store i8* %596, i8** %598, align 8, !alias.scope !32
  %599 = bitcast i8* %596 to i32*
  br label %605

600:                                              ; preds = %585
  %601 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %602 = bitcast %union.anon* %601 to i32*
  %603 = sext i32 %589 to i64
  %604 = shl nsw i64 %603, 2
  br label %605

605:                                              ; preds = %600, %593
  %606 = phi i64 [ %595, %593 ], [ %604, %600 ]
  %607 = phi i32* [ %599, %593 ], [ %602, %600 ]
  %608 = bitcast i32* %607 to i8*
  %609 = bitcast i32* %590 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %608, i8* align 4 %609, i64 %606, i1 false) #8
  %610 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 1
  %611 = bitcast %union.TfLitePtrUnion* %610 to i8**
  %612 = load i8*, i8** %611, align 8
  br label %613

613:                                              ; preds = %583, %605
  %614 = phi i8* [ %612, %605 ], [ null, %583 ]
  %615 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %615) #8
  %616 = icmp eq %struct.TfLiteTensor* %537, null
  br i1 %616, label %617, label %619

617:                                              ; preds = %613
  %618 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %618, align 8, !alias.scope !35
  br label %647

619:                                              ; preds = %613
  %620 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %537, i64 0, i32 2
  %621 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %620, align 8, !noalias !35
  %622 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %621, i64 0, i32 0
  %623 = load i32, i32* %622, align 4, !noalias !35
  %624 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %621, i64 0, i32 1, i64 0
  %625 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %623, i32* %625, align 8, !alias.scope !35
  %626 = icmp sgt i32 %623, 5
  br i1 %626, label %627, label %634

627:                                              ; preds = %619
  %628 = sext i32 %623 to i64
  %629 = shl nsw i64 %628, 2
  %630 = call i8* @_Znam(i64 %629) #9, !noalias !35
  %631 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %632 = bitcast i32** %631 to i8**
  store i8* %630, i8** %632, align 8, !alias.scope !35
  %633 = bitcast i8* %630 to i32*
  br label %639

634:                                              ; preds = %619
  %635 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %636 = bitcast %union.anon* %635 to i32*
  %637 = sext i32 %623 to i64
  %638 = shl nsw i64 %637, 2
  br label %639

639:                                              ; preds = %634, %627
  %640 = phi i64 [ %629, %627 ], [ %638, %634 ]
  %641 = phi i32* [ %633, %627 ], [ %636, %634 ]
  %642 = bitcast i32* %641 to i8*
  %643 = bitcast i32* %624 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %642, i8* align 4 %643, i64 %640, i1 false) #8
  %644 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %537, i64 0, i32 1
  %645 = bitcast %union.TfLitePtrUnion* %644 to i8**
  %646 = load i8*, i8** %645, align 8
  br label %647

647:                                              ; preds = %617, %639
  %648 = phi i8* [ %646, %639 ], [ null, %617 ]
  call void @_ZN6tflite13reference_ops7PadImplIhhEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* nonnull dereferenceable(44) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %614, i8* nonnull %12, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i8* %648) #8
  %649 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %650 = load i32, i32* %649, align 8
  %651 = icmp sgt i32 %650, 5
  br i1 %651, label %652, label %658

652:                                              ; preds = %647
  %653 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %654 = load i32*, i32** %653, align 8
  %655 = icmp eq i32* %654, null
  br i1 %655, label %658, label %656

656:                                              ; preds = %652
  %657 = bitcast i32* %654 to i8*
  call void @_ZdaPv(i8* %657) #9
  br label %658

658:                                              ; preds = %647, %652, %656
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %615) #8
  %659 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %660 = load i32, i32* %659, align 8
  %661 = icmp sgt i32 %660, 5
  br i1 %661, label %662, label %668

662:                                              ; preds = %658
  %663 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %664 = load i32*, i32** %663, align 8
  %665 = icmp eq i32* %664, null
  br i1 %665, label %668, label %666

666:                                              ; preds = %662
  %667 = bitcast i32* %664 to i8*
  call void @_ZdaPv(i8* %667) #9
  br label %668

668:                                              ; preds = %658, %662, %666
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %581) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  br label %1183

669:                                              ; preds = %575
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #8
  store i8 %576, i8* %15, align 1
  %670 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %670) #8
  %671 = icmp eq %struct.TfLiteTensor* %320, null
  br i1 %671, label %672, label %674

672:                                              ; preds = %669
  %673 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %673, align 8, !alias.scope !38
  br label %702

674:                                              ; preds = %669
  %675 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 2
  %676 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %675, align 8, !noalias !38
  %677 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %676, i64 0, i32 0
  %678 = load i32, i32* %677, align 4, !noalias !38
  %679 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %676, i64 0, i32 1, i64 0
  %680 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %678, i32* %680, align 8, !alias.scope !38
  %681 = icmp sgt i32 %678, 5
  br i1 %681, label %682, label %689

682:                                              ; preds = %674
  %683 = sext i32 %678 to i64
  %684 = shl nsw i64 %683, 2
  %685 = call i8* @_Znam(i64 %684) #9, !noalias !38
  %686 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %687 = bitcast i32** %686 to i8**
  store i8* %685, i8** %687, align 8, !alias.scope !38
  %688 = bitcast i8* %685 to i32*
  br label %694

689:                                              ; preds = %674
  %690 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %691 = bitcast %union.anon* %690 to i32*
  %692 = sext i32 %678 to i64
  %693 = shl nsw i64 %692, 2
  br label %694

694:                                              ; preds = %689, %682
  %695 = phi i64 [ %684, %682 ], [ %693, %689 ]
  %696 = phi i32* [ %688, %682 ], [ %691, %689 ]
  %697 = bitcast i32* %696 to i8*
  %698 = bitcast i32* %679 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %697, i8* align 4 %698, i64 %695, i1 false) #8
  %699 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 1
  %700 = bitcast %union.TfLitePtrUnion* %699 to i8**
  %701 = load i8*, i8** %700, align 8
  br label %702

702:                                              ; preds = %672, %694
  %703 = phi i8* [ %701, %694 ], [ null, %672 ]
  %704 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %704) #8
  %705 = icmp eq %struct.TfLiteTensor* %537, null
  br i1 %705, label %706, label %708

706:                                              ; preds = %702
  %707 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %707, align 8, !alias.scope !41
  br label %736

708:                                              ; preds = %702
  %709 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %537, i64 0, i32 2
  %710 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %709, align 8, !noalias !41
  %711 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %710, i64 0, i32 0
  %712 = load i32, i32* %711, align 4, !noalias !41
  %713 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %710, i64 0, i32 1, i64 0
  %714 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %712, i32* %714, align 8, !alias.scope !41
  %715 = icmp sgt i32 %712, 5
  br i1 %715, label %716, label %723

716:                                              ; preds = %708
  %717 = sext i32 %712 to i64
  %718 = shl nsw i64 %717, 2
  %719 = call i8* @_Znam(i64 %718) #9, !noalias !41
  %720 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %721 = bitcast i32** %720 to i8**
  store i8* %719, i8** %721, align 8, !alias.scope !41
  %722 = bitcast i8* %719 to i32*
  br label %728

723:                                              ; preds = %708
  %724 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %725 = bitcast %union.anon* %724 to i32*
  %726 = sext i32 %712 to i64
  %727 = shl nsw i64 %726, 2
  br label %728

728:                                              ; preds = %723, %716
  %729 = phi i64 [ %718, %716 ], [ %727, %723 ]
  %730 = phi i32* [ %722, %716 ], [ %725, %723 ]
  %731 = bitcast i32* %730 to i8*
  %732 = bitcast i32* %713 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %731, i8* align 4 %732, i64 %729, i1 false) #8
  %733 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %537, i64 0, i32 1
  %734 = bitcast %union.TfLitePtrUnion* %733 to i8**
  %735 = load i8*, i8** %734, align 8
  br label %736

736:                                              ; preds = %706, %728
  %737 = phi i8* [ %735, %728 ], [ null, %706 ]
  call void @_ZN6tflite13reference_ops7PadImplIhhEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* nonnull dereferenceable(44) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, i8* %703, i8* nonnull %15, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, i8* %737) #8
  %738 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %739 = load i32, i32* %738, align 8
  %740 = icmp sgt i32 %739, 5
  br i1 %740, label %741, label %747

741:                                              ; preds = %736
  %742 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %743 = load i32*, i32** %742, align 8
  %744 = icmp eq i32* %743, null
  br i1 %744, label %747, label %745

745:                                              ; preds = %741
  %746 = bitcast i32* %743 to i8*
  call void @_ZdaPv(i8* %746) #9
  br label %747

747:                                              ; preds = %736, %741, %745
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %704) #8
  %748 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %749 = load i32, i32* %748, align 8
  %750 = icmp sgt i32 %749, 5
  br i1 %750, label %751, label %757

751:                                              ; preds = %747
  %752 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %753 = load i32*, i32** %752, align 8
  %754 = icmp eq i32* %753, null
  br i1 %754, label %757, label %755

755:                                              ; preds = %751
  %756 = bitcast i32* %753 to i8*
  call void @_ZdaPv(i8* %756) #9
  br label %757

757:                                              ; preds = %747, %751, %755
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %670) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #8
  br label %1183

758:                                              ; preds = %318
  %759 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %760 = icmp eq %struct.TfLiteTensor* %759, null
  %761 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %185, align 8
  %762 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %761, i64 0, i32 3, i32 1
  %763 = load i32, i32* %762, align 4
  br i1 %760, label %764, label %776

764:                                              ; preds = %758
  %765 = icmp slt i32 %763, -128
  br i1 %765, label %766, label %769

766:                                              ; preds = %764
  %767 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %768 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %767, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %768(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 230, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.26, i64 0, i64 0)) #8
  br label %1183

769:                                              ; preds = %764
  %770 = icmp sgt i32 %763, 127
  br i1 %770, label %771, label %774

771:                                              ; preds = %769
  %772 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %773 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %772, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %773(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 232, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.27, i64 0, i64 0)) #8
  br label %1183

774:                                              ; preds = %769
  %775 = trunc i32 %763 to i8
  br label %799

776:                                              ; preds = %758
  %777 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %759, i64 0, i32 3, i32 1
  %778 = load i32, i32* %777, align 4
  %779 = icmp eq i32 %763, %778
  br i1 %779, label %783, label %780

780:                                              ; preds = %776
  %781 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %782 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %781, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %782(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 238, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.23, i64 0, i64 0), i32 %763, i32 %778) #8
  br label %1183

783:                                              ; preds = %776
  %784 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %761, i64 0, i32 3, i32 0
  %785 = load float, float* %784, align 8
  %786 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %759, i64 0, i32 3, i32 0
  %787 = load float, float* %786, align 8
  %788 = fcmp une float %785, %787
  br i1 %788, label %789, label %794

789:                                              ; preds = %783
  %790 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %791 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %790, align 8
  %792 = fpext float %785 to double
  %793 = fpext float %787 to double
  call void (%struct.TfLiteContext*, i8*, ...) %791(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 240, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.25, i64 0, i64 0), double %792, double %793) #8
  br label %1183

794:                                              ; preds = %783
  %795 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %759, i64 0, i32 1
  %796 = bitcast %union.TfLitePtrUnion* %795 to i8**
  %797 = load i8*, i8** %796, align 8
  %798 = load i8, i8* %797, align 1
  br label %799

799:                                              ; preds = %794, %774
  %800 = phi i8 [ %775, %774 ], [ %798, %794 ]
  %801 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 5
  %802 = load i8, i8* %801, align 4
  %803 = icmp eq i8 %802, 1
  br i1 %803, label %804, label %893

804:                                              ; preds = %799
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #8
  store i8 %800, i8* %18, align 1
  %805 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %805) #8
  %806 = icmp eq %struct.TfLiteTensor* %320, null
  br i1 %806, label %807, label %809

807:                                              ; preds = %804
  %808 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %808, align 8, !alias.scope !44
  br label %837

809:                                              ; preds = %804
  %810 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 2
  %811 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %810, align 8, !noalias !44
  %812 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %811, i64 0, i32 0
  %813 = load i32, i32* %812, align 4, !noalias !44
  %814 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %811, i64 0, i32 1, i64 0
  %815 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %813, i32* %815, align 8, !alias.scope !44
  %816 = icmp sgt i32 %813, 5
  br i1 %816, label %817, label %824

817:                                              ; preds = %809
  %818 = sext i32 %813 to i64
  %819 = shl nsw i64 %818, 2
  %820 = call i8* @_Znam(i64 %819) #9, !noalias !44
  %821 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %822 = bitcast i32** %821 to i8**
  store i8* %820, i8** %822, align 8, !alias.scope !44
  %823 = bitcast i8* %820 to i32*
  br label %829

824:                                              ; preds = %809
  %825 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %826 = bitcast %union.anon* %825 to i32*
  %827 = sext i32 %813 to i64
  %828 = shl nsw i64 %827, 2
  br label %829

829:                                              ; preds = %824, %817
  %830 = phi i64 [ %819, %817 ], [ %828, %824 ]
  %831 = phi i32* [ %823, %817 ], [ %826, %824 ]
  %832 = bitcast i32* %831 to i8*
  %833 = bitcast i32* %814 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %832, i8* align 4 %833, i64 %830, i1 false) #8
  %834 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 1
  %835 = bitcast %union.TfLitePtrUnion* %834 to i8**
  %836 = load i8*, i8** %835, align 8
  br label %837

837:                                              ; preds = %807, %829
  %838 = phi i8* [ %836, %829 ], [ null, %807 ]
  %839 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %839) #8
  %840 = icmp eq %struct.TfLiteTensor* %761, null
  br i1 %840, label %841, label %843

841:                                              ; preds = %837
  %842 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %842, align 8, !alias.scope !47
  br label %871

843:                                              ; preds = %837
  %844 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %761, i64 0, i32 2
  %845 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %844, align 8, !noalias !47
  %846 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %845, i64 0, i32 0
  %847 = load i32, i32* %846, align 4, !noalias !47
  %848 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %845, i64 0, i32 1, i64 0
  %849 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %847, i32* %849, align 8, !alias.scope !47
  %850 = icmp sgt i32 %847, 5
  br i1 %850, label %851, label %858

851:                                              ; preds = %843
  %852 = sext i32 %847 to i64
  %853 = shl nsw i64 %852, 2
  %854 = call i8* @_Znam(i64 %853) #9, !noalias !47
  %855 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %856 = bitcast i32** %855 to i8**
  store i8* %854, i8** %856, align 8, !alias.scope !47
  %857 = bitcast i8* %854 to i32*
  br label %863

858:                                              ; preds = %843
  %859 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %860 = bitcast %union.anon* %859 to i32*
  %861 = sext i32 %847 to i64
  %862 = shl nsw i64 %861, 2
  br label %863

863:                                              ; preds = %858, %851
  %864 = phi i64 [ %853, %851 ], [ %862, %858 ]
  %865 = phi i32* [ %857, %851 ], [ %860, %858 ]
  %866 = bitcast i32* %865 to i8*
  %867 = bitcast i32* %848 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %866, i8* align 4 %867, i64 %864, i1 false) #8
  %868 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %761, i64 0, i32 1
  %869 = bitcast %union.TfLitePtrUnion* %868 to i8**
  %870 = load i8*, i8** %869, align 8
  br label %871

871:                                              ; preds = %841, %863
  %872 = phi i8* [ %870, %863 ], [ null, %841 ]
  call void @_ZN6tflite13reference_ops7PadImplIaaEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* nonnull dereferenceable(44) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %19, i8* %838, i8* nonnull %18, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %20, i8* %872) #8
  %873 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  %874 = load i32, i32* %873, align 8
  %875 = icmp sgt i32 %874, 5
  br i1 %875, label %876, label %882

876:                                              ; preds = %871
  %877 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %878 = load i32*, i32** %877, align 8
  %879 = icmp eq i32* %878, null
  br i1 %879, label %882, label %880

880:                                              ; preds = %876
  %881 = bitcast i32* %878 to i8*
  call void @_ZdaPv(i8* %881) #9
  br label %882

882:                                              ; preds = %871, %876, %880
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %839) #8
  %883 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  %884 = load i32, i32* %883, align 8
  %885 = icmp sgt i32 %884, 5
  br i1 %885, label %886, label %892

886:                                              ; preds = %882
  %887 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %888 = load i32*, i32** %887, align 8
  %889 = icmp eq i32* %888, null
  br i1 %889, label %892, label %890

890:                                              ; preds = %886
  %891 = bitcast i32* %888 to i8*
  call void @_ZdaPv(i8* %891) #9
  br label %892

892:                                              ; preds = %882, %886, %890
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %805) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #8
  br label %1183

893:                                              ; preds = %799
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %21) #8
  store i8 %800, i8* %21, align 1
  %894 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %894) #8
  %895 = icmp eq %struct.TfLiteTensor* %320, null
  br i1 %895, label %896, label %898

896:                                              ; preds = %893
  %897 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %897, align 8, !alias.scope !50
  br label %926

898:                                              ; preds = %893
  %899 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 2
  %900 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %899, align 8, !noalias !50
  %901 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %900, i64 0, i32 0
  %902 = load i32, i32* %901, align 4, !noalias !50
  %903 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %900, i64 0, i32 1, i64 0
  %904 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %902, i32* %904, align 8, !alias.scope !50
  %905 = icmp sgt i32 %902, 5
  br i1 %905, label %906, label %913

906:                                              ; preds = %898
  %907 = sext i32 %902 to i64
  %908 = shl nsw i64 %907, 2
  %909 = call i8* @_Znam(i64 %908) #9, !noalias !50
  %910 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %911 = bitcast i32** %910 to i8**
  store i8* %909, i8** %911, align 8, !alias.scope !50
  %912 = bitcast i8* %909 to i32*
  br label %918

913:                                              ; preds = %898
  %914 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %915 = bitcast %union.anon* %914 to i32*
  %916 = sext i32 %902 to i64
  %917 = shl nsw i64 %916, 2
  br label %918

918:                                              ; preds = %913, %906
  %919 = phi i64 [ %908, %906 ], [ %917, %913 ]
  %920 = phi i32* [ %912, %906 ], [ %915, %913 ]
  %921 = bitcast i32* %920 to i8*
  %922 = bitcast i32* %903 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %921, i8* align 4 %922, i64 %919, i1 false) #8
  %923 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 1
  %924 = bitcast %union.TfLitePtrUnion* %923 to i8**
  %925 = load i8*, i8** %924, align 8
  br label %926

926:                                              ; preds = %896, %918
  %927 = phi i8* [ %925, %918 ], [ null, %896 ]
  %928 = bitcast %"class.tflite::RuntimeShape"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %928) #8
  %929 = icmp eq %struct.TfLiteTensor* %761, null
  br i1 %929, label %930, label %932

930:                                              ; preds = %926
  %931 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 0, i32* %931, align 8, !alias.scope !53
  br label %960

932:                                              ; preds = %926
  %933 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %761, i64 0, i32 2
  %934 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %933, align 8, !noalias !53
  %935 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %934, i64 0, i32 0
  %936 = load i32, i32* %935, align 4, !noalias !53
  %937 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %934, i64 0, i32 1, i64 0
  %938 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 %936, i32* %938, align 8, !alias.scope !53
  %939 = icmp sgt i32 %936, 5
  br i1 %939, label %940, label %947

940:                                              ; preds = %932
  %941 = sext i32 %936 to i64
  %942 = shl nsw i64 %941, 2
  %943 = call i8* @_Znam(i64 %942) #9, !noalias !53
  %944 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %945 = bitcast i32** %944 to i8**
  store i8* %943, i8** %945, align 8, !alias.scope !53
  %946 = bitcast i8* %943 to i32*
  br label %952

947:                                              ; preds = %932
  %948 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  %949 = bitcast %union.anon* %948 to i32*
  %950 = sext i32 %936 to i64
  %951 = shl nsw i64 %950, 2
  br label %952

952:                                              ; preds = %947, %940
  %953 = phi i64 [ %942, %940 ], [ %951, %947 ]
  %954 = phi i32* [ %946, %940 ], [ %949, %947 ]
  %955 = bitcast i32* %954 to i8*
  %956 = bitcast i32* %937 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %955, i8* align 4 %956, i64 %953, i1 false) #8
  %957 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %761, i64 0, i32 1
  %958 = bitcast %union.TfLitePtrUnion* %957 to i8**
  %959 = load i8*, i8** %958, align 8
  br label %960

960:                                              ; preds = %930, %952
  %961 = phi i8* [ %959, %952 ], [ null, %930 ]
  call void @_ZN6tflite13reference_ops7PadImplIaaEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* nonnull dereferenceable(44) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %22, i8* %927, i8* nonnull %21, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %23, i8* %961) #8
  %962 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  %963 = load i32, i32* %962, align 8
  %964 = icmp sgt i32 %963, 5
  br i1 %964, label %965, label %971

965:                                              ; preds = %960
  %966 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %967 = load i32*, i32** %966, align 8
  %968 = icmp eq i32* %967, null
  br i1 %968, label %971, label %969

969:                                              ; preds = %965
  %970 = bitcast i32* %967 to i8*
  call void @_ZdaPv(i8* %970) #9
  br label %971

971:                                              ; preds = %960, %965, %969
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %928) #8
  %972 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  %973 = load i32, i32* %972, align 8
  %974 = icmp sgt i32 %973, 5
  br i1 %974, label %975, label %981

975:                                              ; preds = %971
  %976 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %977 = load i32*, i32** %976, align 8
  %978 = icmp eq i32* %977, null
  br i1 %978, label %981, label %979

979:                                              ; preds = %975
  %980 = bitcast i32* %977 to i8*
  call void @_ZdaPv(i8* %980) #9
  br label %981

981:                                              ; preds = %971, %975, %979
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %894) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %21) #8
  br label %1183

982:                                              ; preds = %318
  %983 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %984 = icmp eq %struct.TfLiteTensor* %983, null
  br i1 %984, label %989, label %985

985:                                              ; preds = %982
  %986 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %983, i64 0, i32 1, i32 0
  %987 = load i32*, i32** %986, align 8
  %988 = load i32, i32* %987, align 4
  br label %989

989:                                              ; preds = %982, %985
  %990 = phi i32 [ %988, %985 ], [ 0, %982 ]
  %991 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %991) #8
  store i32 %990, i32* %24, align 4
  %992 = bitcast %"class.tflite::RuntimeShape"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %992) #8
  %993 = icmp eq %struct.TfLiteTensor* %320, null
  br i1 %993, label %994, label %996

994:                                              ; preds = %989
  %995 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 0, i32* %995, align 8, !alias.scope !56
  br label %1023

996:                                              ; preds = %989
  %997 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 2
  %998 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %997, align 8, !noalias !56
  %999 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %998, i64 0, i32 0
  %1000 = load i32, i32* %999, align 4, !noalias !56
  %1001 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %998, i64 0, i32 1, i64 0
  %1002 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 %1000, i32* %1002, align 8, !alias.scope !56
  %1003 = icmp sgt i32 %1000, 5
  br i1 %1003, label %1004, label %1011

1004:                                             ; preds = %996
  %1005 = sext i32 %1000 to i64
  %1006 = shl nsw i64 %1005, 2
  %1007 = call i8* @_Znam(i64 %1006) #9, !noalias !56
  %1008 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1009 = bitcast i32** %1008 to i8**
  store i8* %1007, i8** %1009, align 8, !alias.scope !56
  %1010 = bitcast i8* %1007 to i32*
  br label %1016

1011:                                             ; preds = %996
  %1012 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %1013 = bitcast %union.anon* %1012 to i32*
  %1014 = sext i32 %1000 to i64
  %1015 = shl nsw i64 %1014, 2
  br label %1016

1016:                                             ; preds = %1011, %1004
  %1017 = phi i64 [ %1006, %1004 ], [ %1015, %1011 ]
  %1018 = phi i32* [ %1010, %1004 ], [ %1013, %1011 ]
  %1019 = bitcast i32* %1018 to i8*
  %1020 = bitcast i32* %1001 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1019, i8* align 4 %1020, i64 %1017, i1 false) #8
  %1021 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 1, i32 0
  %1022 = load i32*, i32** %1021, align 8
  br label %1023

1023:                                             ; preds = %994, %1016
  %1024 = phi i32* [ %1022, %1016 ], [ null, %994 ]
  %1025 = bitcast %"class.tflite::RuntimeShape"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1025) #8
  %1026 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %185, align 8
  %1027 = icmp eq %struct.TfLiteTensor* %1026, null
  br i1 %1027, label %1028, label %1030

1028:                                             ; preds = %1023
  %1029 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 0, i32* %1029, align 8, !alias.scope !59
  br label %1057

1030:                                             ; preds = %1023
  %1031 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1026, i64 0, i32 2
  %1032 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1031, align 8, !noalias !59
  %1033 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1032, i64 0, i32 0
  %1034 = load i32, i32* %1033, align 4, !noalias !59
  %1035 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1032, i64 0, i32 1, i64 0
  %1036 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 %1034, i32* %1036, align 8, !alias.scope !59
  %1037 = icmp sgt i32 %1034, 5
  br i1 %1037, label %1038, label %1045

1038:                                             ; preds = %1030
  %1039 = sext i32 %1034 to i64
  %1040 = shl nsw i64 %1039, 2
  %1041 = call i8* @_Znam(i64 %1040) #9, !noalias !59
  %1042 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1043 = bitcast i32** %1042 to i8**
  store i8* %1041, i8** %1043, align 8, !alias.scope !59
  %1044 = bitcast i8* %1041 to i32*
  br label %1050

1045:                                             ; preds = %1030
  %1046 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1
  %1047 = bitcast %union.anon* %1046 to i32*
  %1048 = sext i32 %1034 to i64
  %1049 = shl nsw i64 %1048, 2
  br label %1050

1050:                                             ; preds = %1045, %1038
  %1051 = phi i64 [ %1040, %1038 ], [ %1049, %1045 ]
  %1052 = phi i32* [ %1044, %1038 ], [ %1047, %1045 ]
  %1053 = bitcast i32* %1052 to i8*
  %1054 = bitcast i32* %1035 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1053, i8* align 4 %1054, i64 %1051, i1 false) #8
  %1055 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1026, i64 0, i32 1, i32 0
  %1056 = load i32*, i32** %1055, align 8
  br label %1057

1057:                                             ; preds = %1028, %1050
  %1058 = phi i32* [ %1056, %1050 ], [ null, %1028 ]
  call void @_ZN6tflite13reference_ops7PadImplIiiEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* nonnull dereferenceable(44) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %25, i32* %1024, i32* nonnull %24, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %26, i32* %1058) #8
  %1059 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  %1060 = load i32, i32* %1059, align 8
  %1061 = icmp sgt i32 %1060, 5
  br i1 %1061, label %1062, label %1068

1062:                                             ; preds = %1057
  %1063 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1064 = load i32*, i32** %1063, align 8
  %1065 = icmp eq i32* %1064, null
  br i1 %1065, label %1068, label %1066

1066:                                             ; preds = %1062
  %1067 = bitcast i32* %1064 to i8*
  call void @_ZdaPv(i8* %1067) #9
  br label %1068

1068:                                             ; preds = %1057, %1062, %1066
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1025) #8
  %1069 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  %1070 = load i32, i32* %1069, align 8
  %1071 = icmp sgt i32 %1070, 5
  br i1 %1071, label %1072, label %1078

1072:                                             ; preds = %1068
  %1073 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1074 = load i32*, i32** %1073, align 8
  %1075 = icmp eq i32* %1074, null
  br i1 %1075, label %1078, label %1076

1076:                                             ; preds = %1072
  %1077 = bitcast i32* %1074 to i8*
  call void @_ZdaPv(i8* %1077) #9
  br label %1078

1078:                                             ; preds = %1068, %1072, %1076
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %992) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %991) #8
  br label %1183

1079:                                             ; preds = %318
  %1080 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %1081 = icmp eq %struct.TfLiteTensor* %1080, null
  br i1 %1081, label %1087, label %1082

1082:                                             ; preds = %1079
  %1083 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1080, i64 0, i32 1
  %1084 = bitcast %union.TfLitePtrUnion* %1083 to i64**
  %1085 = load i64*, i64** %1084, align 8
  %1086 = load i64, i64* %1085, align 8
  br label %1087

1087:                                             ; preds = %1079, %1082
  %1088 = phi i64 [ %1086, %1082 ], [ 0, %1079 ]
  %1089 = bitcast i64* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1089) #8
  store i64 %1088, i64* %27, align 8
  %1090 = bitcast %"class.tflite::RuntimeShape"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1090) #8
  %1091 = icmp eq %struct.TfLiteTensor* %320, null
  br i1 %1091, label %1092, label %1094

1092:                                             ; preds = %1087
  %1093 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 0, i32* %1093, align 8, !alias.scope !62
  br label %1122

1094:                                             ; preds = %1087
  %1095 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 2
  %1096 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1095, align 8, !noalias !62
  %1097 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1096, i64 0, i32 0
  %1098 = load i32, i32* %1097, align 4, !noalias !62
  %1099 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1096, i64 0, i32 1, i64 0
  %1100 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 %1098, i32* %1100, align 8, !alias.scope !62
  %1101 = icmp sgt i32 %1098, 5
  br i1 %1101, label %1102, label %1109

1102:                                             ; preds = %1094
  %1103 = sext i32 %1098 to i64
  %1104 = shl nsw i64 %1103, 2
  %1105 = call i8* @_Znam(i64 %1104) #9, !noalias !62
  %1106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %1107 = bitcast i32** %1106 to i8**
  store i8* %1105, i8** %1107, align 8, !alias.scope !62
  %1108 = bitcast i8* %1105 to i32*
  br label %1114

1109:                                             ; preds = %1094
  %1110 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1
  %1111 = bitcast %union.anon* %1110 to i32*
  %1112 = sext i32 %1098 to i64
  %1113 = shl nsw i64 %1112, 2
  br label %1114

1114:                                             ; preds = %1109, %1102
  %1115 = phi i64 [ %1104, %1102 ], [ %1113, %1109 ]
  %1116 = phi i32* [ %1108, %1102 ], [ %1111, %1109 ]
  %1117 = bitcast i32* %1116 to i8*
  %1118 = bitcast i32* %1099 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1117, i8* align 4 %1118, i64 %1115, i1 false) #8
  %1119 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 1
  %1120 = bitcast %union.TfLitePtrUnion* %1119 to i64**
  %1121 = load i64*, i64** %1120, align 8
  br label %1122

1122:                                             ; preds = %1092, %1114
  %1123 = phi i64* [ %1121, %1114 ], [ null, %1092 ]
  %1124 = bitcast %"class.tflite::RuntimeShape"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1124) #8
  %1125 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %185, align 8
  %1126 = icmp eq %struct.TfLiteTensor* %1125, null
  br i1 %1126, label %1127, label %1129

1127:                                             ; preds = %1122
  %1128 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 0, i32* %1128, align 8, !alias.scope !65
  br label %1157

1129:                                             ; preds = %1122
  %1130 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1125, i64 0, i32 2
  %1131 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1130, align 8, !noalias !65
  %1132 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1131, i64 0, i32 0
  %1133 = load i32, i32* %1132, align 4, !noalias !65
  %1134 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1131, i64 0, i32 1, i64 0
  %1135 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 %1133, i32* %1135, align 8, !alias.scope !65
  %1136 = icmp sgt i32 %1133, 5
  br i1 %1136, label %1137, label %1144

1137:                                             ; preds = %1129
  %1138 = sext i32 %1133 to i64
  %1139 = shl nsw i64 %1138, 2
  %1140 = call i8* @_Znam(i64 %1139) #9, !noalias !65
  %1141 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1142 = bitcast i32** %1141 to i8**
  store i8* %1140, i8** %1142, align 8, !alias.scope !65
  %1143 = bitcast i8* %1140 to i32*
  br label %1149

1144:                                             ; preds = %1129
  %1145 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1
  %1146 = bitcast %union.anon* %1145 to i32*
  %1147 = sext i32 %1133 to i64
  %1148 = shl nsw i64 %1147, 2
  br label %1149

1149:                                             ; preds = %1144, %1137
  %1150 = phi i64 [ %1139, %1137 ], [ %1148, %1144 ]
  %1151 = phi i32* [ %1143, %1137 ], [ %1146, %1144 ]
  %1152 = bitcast i32* %1151 to i8*
  %1153 = bitcast i32* %1134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1152, i8* align 4 %1153, i64 %1150, i1 false) #8
  %1154 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1125, i64 0, i32 1
  %1155 = bitcast %union.TfLitePtrUnion* %1154 to i64**
  %1156 = load i64*, i64** %1155, align 8
  br label %1157

1157:                                             ; preds = %1127, %1149
  %1158 = phi i64* [ %1156, %1149 ], [ null, %1127 ]
  call void @_ZN6tflite13reference_ops7PadImplIllEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* nonnull dereferenceable(44) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %28, i64* %1123, i64* nonnull %27, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %29, i64* %1158) #8
  %1159 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  %1160 = load i32, i32* %1159, align 8
  %1161 = icmp sgt i32 %1160, 5
  br i1 %1161, label %1162, label %1168

1162:                                             ; preds = %1157
  %1163 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1164 = load i32*, i32** %1163, align 8
  %1165 = icmp eq i32* %1164, null
  br i1 %1165, label %1168, label %1166

1166:                                             ; preds = %1162
  %1167 = bitcast i32* %1164 to i8*
  call void @_ZdaPv(i8* %1167) #9
  br label %1168

1168:                                             ; preds = %1157, %1162, %1166
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1124) #8
  %1169 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  %1170 = load i32, i32* %1169, align 8
  %1171 = icmp sgt i32 %1170, 5
  br i1 %1171, label %1172, label %1178

1172:                                             ; preds = %1168
  %1173 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %1174 = load i32*, i32** %1173, align 8
  %1175 = icmp eq i32* %1174, null
  br i1 %1175, label %1178, label %1176

1176:                                             ; preds = %1172
  %1177 = bitcast i32* %1174 to i8*
  call void @_ZdaPv(i8* %1177) #9
  br label %1178

1178:                                             ; preds = %1168, %1172, %1176
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1090) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1089) #8
  br label %1183

1179:                                             ; preds = %318
  %1180 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1181 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1180, align 8
  %1182 = call i8* @TfLiteTypeGetName(i32 %322) #8
  call void (%struct.TfLiteContext*, i8*, ...) %1181(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.28, i64 0, i64 0), i8* %1182) #8
  br label %1183

1183:                                             ; preds = %789, %780, %766, %771, %565, %556, %542, %547, %1078, %1178, %533, %442, %668, %757, %892, %981, %1179
  %1184 = phi i32 [ 1, %1179 ], [ 0, %981 ], [ 0, %892 ], [ 0, %757 ], [ 0, %668 ], [ 0, %442 ], [ 0, %533 ], [ 0, %1178 ], [ 0, %1078 ], [ 1, %547 ], [ 1, %542 ], [ 1, %556 ], [ 1, %565 ], [ 1, %771 ], [ 1, %766 ], [ 1, %780 ], [ 1, %789 ]
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %209) #8
  br label %1185

1185:                                             ; preds = %205, %1183, %190, %182
  %1186 = phi i32 [ 1, %182 ], [ %191, %190 ], [ %1184, %1183 ], [ 1, %205 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #8
  ret i32 %1186
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin24Register_PAD_GENERIC_OPTEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin24Register_PAD_GENERIC_OPTEvE1r
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin3pad4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"struct.tflite::ops::builtin::pad::PadContext", align 8
  %4 = alloca %"struct.tflite::PadParams", align 4
  %5 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 0
  %6 = alloca float, align 4
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca float, align 4
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca i8, align 1
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca i8, align 1
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = alloca %"class.tflite::RuntimeShape", align 8
  %18 = alloca i8, align 1
  %19 = alloca %"class.tflite::RuntimeShape", align 8
  %20 = alloca %"class.tflite::RuntimeShape", align 8
  %21 = alloca i8, align 1
  %22 = alloca %"class.tflite::RuntimeShape", align 8
  %23 = alloca %"class.tflite::RuntimeShape", align 8
  %24 = alloca i32, align 4
  %25 = alloca %"class.tflite::RuntimeShape", align 8
  %26 = alloca %"class.tflite::RuntimeShape", align 8
  %27 = alloca i64, align 8
  %28 = alloca %"class.tflite::RuntimeShape", align 8
  %29 = alloca %"class.tflite::RuntimeShape", align 8
  %30 = bitcast %"struct.tflite::ops::builtin::pad::PadContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite3ops7builtin3pad10PadContextC2EP13TfLiteContextP10TfLiteNode(%"struct.tflite::ops::builtin::pad::PadContext"* nonnull %3, %struct.TfLiteContext* %0, %struct.TfLiteNode* %1)
  %31 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 0
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = icmp eq %struct.TfLiteTensor* %32, null
  br i1 %33, label %184, label %34

34:                                               ; preds = %2
  %35 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 0, i32 2
  %36 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %35, align 8
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %184

40:                                               ; preds = %34
  %41 = sext i32 %38 to i64
  %42 = add nsw i64 %41, -1
  %43 = and i64 %41, 7
  %44 = icmp ult i64 %42, 7
  br i1 %44, label %93, label %45

45:                                               ; preds = %40
  %46 = sub nsw i64 %41, %43
  br label %47

47:                                               ; preds = %47, %45
  %48 = phi i64 [ 0, %45 ], [ %90, %47 ]
  %49 = phi i64 [ 1, %45 ], [ %89, %47 ]
  %50 = phi i64 [ %46, %45 ], [ %91, %47 ]
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %48
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  %54 = mul nsw i64 %49, %53
  %55 = or i64 %48, 1
  %56 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = sext i32 %57 to i64
  %59 = mul nsw i64 %54, %58
  %60 = or i64 %48, 2
  %61 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = mul nsw i64 %59, %63
  %65 = or i64 %48, 3
  %66 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = sext i32 %67 to i64
  %69 = mul nsw i64 %64, %68
  %70 = or i64 %48, 4
  %71 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = sext i32 %72 to i64
  %74 = mul nsw i64 %69, %73
  %75 = or i64 %48, 5
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = sext i32 %77 to i64
  %79 = mul nsw i64 %74, %78
  %80 = or i64 %48, 6
  %81 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = sext i32 %82 to i64
  %84 = mul nsw i64 %79, %83
  %85 = or i64 %48, 7
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = mul nsw i64 %84, %88
  %90 = add nuw nsw i64 %48, 8
  %91 = add i64 %50, -8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %47

93:                                               ; preds = %47, %40
  %94 = phi i64 [ undef, %40 ], [ %89, %47 ]
  %95 = phi i64 [ 0, %40 ], [ %90, %47 ]
  %96 = phi i64 [ 1, %40 ], [ %89, %47 ]
  %97 = icmp eq i64 %43, 0
  br i1 %97, label %109, label %98

98:                                               ; preds = %93, %98
  %99 = phi i64 [ %106, %98 ], [ %95, %93 ]
  %100 = phi i64 [ %105, %98 ], [ %96, %93 ]
  %101 = phi i64 [ %107, %98 ], [ %43, %93 ]
  %102 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %99
  %103 = load i32, i32* %102, align 4
  %104 = sext i32 %103 to i64
  %105 = mul nsw i64 %100, %104
  %106 = add nuw nsw i64 %99, 1
  %107 = add i64 %101, -1
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %98, !llvm.loop !68

109:                                              ; preds = %98, %93
  %110 = phi i64 [ %94, %93 ], [ %105, %98 ]
  %111 = icmp eq i64 %110, 1
  br i1 %111, label %184, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %114 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %113, align 8
  %115 = add nsw i64 %41, -1
  %116 = and i64 %41, 7
  %117 = icmp ult i64 %115, 7
  br i1 %117, label %166, label %118

118:                                              ; preds = %112
  %119 = sub nsw i64 %41, %116
  br label %120

120:                                              ; preds = %120, %118
  %121 = phi i64 [ 0, %118 ], [ %163, %120 ]
  %122 = phi i64 [ 1, %118 ], [ %162, %120 ]
  %123 = phi i64 [ %119, %118 ], [ %164, %120 ]
  %124 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %121
  %125 = load i32, i32* %124, align 4
  %126 = sext i32 %125 to i64
  %127 = mul nsw i64 %122, %126
  %128 = or i64 %121, 1
  %129 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = sext i32 %130 to i64
  %132 = mul nsw i64 %127, %131
  %133 = or i64 %121, 2
  %134 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %133
  %135 = load i32, i32* %134, align 4
  %136 = sext i32 %135 to i64
  %137 = mul nsw i64 %132, %136
  %138 = or i64 %121, 3
  %139 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %138
  %140 = load i32, i32* %139, align 4
  %141 = sext i32 %140 to i64
  %142 = mul nsw i64 %137, %141
  %143 = or i64 %121, 4
  %144 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %143
  %145 = load i32, i32* %144, align 4
  %146 = sext i32 %145 to i64
  %147 = mul nsw i64 %142, %146
  %148 = or i64 %121, 5
  %149 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %148
  %150 = load i32, i32* %149, align 4
  %151 = sext i32 %150 to i64
  %152 = mul nsw i64 %147, %151
  %153 = or i64 %121, 6
  %154 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %153
  %155 = load i32, i32* %154, align 4
  %156 = sext i32 %155 to i64
  %157 = mul nsw i64 %152, %156
  %158 = or i64 %121, 7
  %159 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %158
  %160 = load i32, i32* %159, align 4
  %161 = sext i32 %160 to i64
  %162 = mul nsw i64 %157, %161
  %163 = add nuw nsw i64 %121, 8
  %164 = add i64 %123, -8
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %112
  %167 = phi i64 [ undef, %112 ], [ %162, %120 ]
  %168 = phi i64 [ 0, %112 ], [ %163, %120 ]
  %169 = phi i64 [ 1, %112 ], [ %162, %120 ]
  %170 = icmp eq i64 %116, 0
  br i1 %170, label %182, label %171

171:                                              ; preds = %166, %171
  %172 = phi i64 [ %179, %171 ], [ %168, %166 ]
  %173 = phi i64 [ %178, %171 ], [ %169, %166 ]
  %174 = phi i64 [ %180, %171 ], [ %116, %166 ]
  %175 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %36, i64 0, i32 1, i64 %172
  %176 = load i32, i32* %175, align 4
  %177 = sext i32 %176 to i64
  %178 = mul nsw i64 %173, %177
  %179 = add nuw nsw i64 %172, 1
  %180 = add i64 %174, -1
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %171, !llvm.loop !69

182:                                              ; preds = %171, %166
  %183 = phi i64 [ %167, %166 ], [ %178, %171 ]
  call void (%struct.TfLiteContext*, i8*, ...) %114(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 142, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i64 %183, i32 1) #8
  br label %1189

184:                                              ; preds = %34, %109, %2
  %185 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 3
  %186 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %185, align 8
  %187 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %186, i64 0, i32 4
  %188 = load i32, i32* %187, align 8
  %189 = icmp eq i32 %188, 4
  br i1 %189, label %190, label %193

190:                                              ; preds = %184
  %191 = call i32 @_ZN6tflite3ops7builtin3pad18ResizeOutputTensorEP13TfLiteContextPNS2_10PadContextE(%struct.TfLiteContext* %0, %"struct.tflite::ops::builtin::pad::PadContext"* nonnull %3)
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %1189

193:                                              ; preds = %190, %184
  %194 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 2
  %195 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %194, align 8
  %196 = icmp eq %struct.TfLiteTensor* %195, null
  br i1 %196, label %200, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %195, i64 0, i32 1, i32 0
  %199 = load i32*, i32** %198, align 8
  br label %200

200:                                              ; preds = %193, %197
  %201 = phi i32* [ %199, %197 ], [ null, %193 ]
  %202 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 4
  %203 = load i32, i32* %202, align 8
  %204 = icmp sgt i32 %203, 4
  br i1 %204, label %205, label %208

205:                                              ; preds = %200
  %206 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %207 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %206, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %207(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 154, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.17, i64 0, i64 0)) #8
  br label %1189

208:                                              ; preds = %200
  %209 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %209) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %209, i8 -86, i64 44, i1 false)
  %210 = trunc i32 %203 to i8
  store i8 %210, i8* %209, align 4
  %211 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 2
  store i8 %210, i8* %211, align 4
  %212 = icmp sgt i32 %203, 0
  br i1 %212, label %213, label %318

213:                                              ; preds = %208
  %214 = sext i32 %203 to i64
  %215 = icmp ult i32 %203, 4
  br i1 %215, label %216, label %219

216:                                              ; preds = %316, %219, %213
  %217 = phi i64 [ %214, %219 ], [ %214, %213 ], [ %239, %316 ]
  %218 = phi i32 [ %203, %219 ], [ %203, %213 ], [ %241, %316 ]
  br label %323

219:                                              ; preds = %213
  %220 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 1, i64 0
  %221 = shl nsw i64 %214, 2
  %222 = add nsw i64 %221, 24
  %223 = getelementptr i8, i8* %5, i64 %222
  %224 = shl i32 %203, 1
  %225 = add i32 %224, -2
  %226 = sext i32 %225 to i64
  %227 = add nsw i64 %226, 2
  %228 = shl nsw i64 %214, 1
  %229 = sub nsw i64 %227, %228
  %230 = getelementptr i32, i32* %201, i64 %229
  %231 = bitcast i32* %230 to i8*
  %232 = add nsw i64 %226, 2
  %233 = getelementptr i32, i32* %201, i64 %232
  %234 = icmp ult i32* %220, %233
  %235 = icmp ugt i8* %223, %231
  %236 = and i1 %234, %235
  br i1 %236, label %216, label %237

237:                                              ; preds = %219
  %238 = and i64 %214, -4
  %239 = sub nsw i64 %214, %238
  %240 = trunc i64 %238 to i32
  %241 = sub i32 %203, %240
  %242 = add nsw i64 %238, -4
  %243 = lshr exact i64 %242, 2
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 1
  %246 = icmp eq i64 %242, 0
  br i1 %246, label %293, label %247

247:                                              ; preds = %237
  %248 = sub nuw nsw i64 %244, %245
  %249 = getelementptr inbounds i32, i32* %201, i64 -6
  %250 = getelementptr inbounds i32, i32* %201, i64 -6
  br label %251

251:                                              ; preds = %251, %247
  %252 = phi i64 [ 0, %247 ], [ %290, %251 ]
  %253 = phi i64 [ %248, %247 ], [ %291, %251 ]
  %254 = trunc i64 %252 to i32
  %255 = xor i64 %252, -1
  %256 = add i64 %255, %214
  %257 = xor i32 %254, -1
  %258 = add i32 %203, %257
  %259 = shl nsw i32 %258, 1
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds i32, i32* %249, i64 %260
  %262 = bitcast i32* %261 to <8 x i32>*
  %263 = load <8 x i32>, <8 x i32>* %262, align 4
  %264 = shufflevector <8 x i32> %263, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %265 = shufflevector <8 x i32> %263, <8 x i32> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %266 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 1, i64 %256
  %267 = getelementptr inbounds i32, i32* %266, i64 -3
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> %264, <4 x i32>* %268, align 4, !alias.scope !70, !noalias !73
  %269 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 3, i64 %256
  %270 = getelementptr inbounds i32, i32* %269, i64 -3
  %271 = bitcast i32* %270 to <4 x i32>*
  store <4 x i32> %265, <4 x i32>* %271, align 4, !alias.scope !70, !noalias !73
  %272 = trunc i64 %252 to i32
  %273 = sub nuw nsw i64 -5, %252
  %274 = add i64 %273, %214
  %275 = xor i32 %272, -5
  %276 = add i32 %203, %275
  %277 = shl nsw i32 %276, 1
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds i32, i32* %250, i64 %278
  %280 = bitcast i32* %279 to <8 x i32>*
  %281 = load <8 x i32>, <8 x i32>* %280, align 4
  %282 = shufflevector <8 x i32> %281, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %283 = shufflevector <8 x i32> %281, <8 x i32> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %284 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 1, i64 %274
  %285 = getelementptr inbounds i32, i32* %284, i64 -3
  %286 = bitcast i32* %285 to <4 x i32>*
  store <4 x i32> %282, <4 x i32>* %286, align 4, !alias.scope !70, !noalias !73
  %287 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 3, i64 %274
  %288 = getelementptr inbounds i32, i32* %287, i64 -3
  %289 = bitcast i32* %288 to <4 x i32>*
  store <4 x i32> %283, <4 x i32>* %289, align 4, !alias.scope !70, !noalias !73
  %290 = add i64 %252, 8
  %291 = add i64 %253, -2
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %251, !llvm.loop !75

293:                                              ; preds = %251, %237
  %294 = phi i64 [ 0, %237 ], [ %290, %251 ]
  %295 = icmp eq i64 %245, 0
  br i1 %295, label %316, label %296

296:                                              ; preds = %293
  %297 = trunc i64 %294 to i32
  %298 = xor i64 %294, -1
  %299 = add i64 %298, %214
  %300 = xor i32 %297, -1
  %301 = add i32 %203, %300
  %302 = shl nsw i32 %301, 1
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds i32, i32* %201, i64 -6
  %305 = getelementptr inbounds i32, i32* %304, i64 %303
  %306 = bitcast i32* %305 to <8 x i32>*
  %307 = load <8 x i32>, <8 x i32>* %306, align 4
  %308 = shufflevector <8 x i32> %307, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %309 = shufflevector <8 x i32> %307, <8 x i32> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %310 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 1, i64 %299
  %311 = getelementptr inbounds i32, i32* %310, i64 -3
  %312 = bitcast i32* %311 to <4 x i32>*
  store <4 x i32> %308, <4 x i32>* %312, align 4, !alias.scope !70, !noalias !73
  %313 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 3, i64 %299
  %314 = getelementptr inbounds i32, i32* %313, i64 -3
  %315 = bitcast i32* %314 to <4 x i32>*
  store <4 x i32> %309, <4 x i32>* %315, align 4, !alias.scope !70, !noalias !73
  br label %316

316:                                              ; preds = %293, %296
  %317 = icmp eq i64 %238, %214
  br i1 %317, label %318, label %216

318:                                              ; preds = %323, %316, %208
  %319 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 1
  %320 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %319, align 8
  %321 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 0
  %322 = load i32, i32* %321, align 8
  switch i32 %322, label %1183 [
    i32 1, label %339
    i32 3, label %538
    i32 9, label %762
    i32 2, label %986
    i32 4, label %1083
  ]

323:                                              ; preds = %216, %323
  %324 = phi i64 [ %326, %323 ], [ %217, %216 ]
  %325 = phi i32 [ %327, %323 ], [ %218, %216 ]
  %326 = add nsw i64 %324, -1
  %327 = add nsw i32 %325, -1
  %328 = shl nsw i32 %327, 1
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds i32, i32* %201, i64 %329
  %331 = load i32, i32* %330, align 4
  %332 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 1, i64 %326
  store i32 %331, i32* %332, align 4
  %333 = or i32 %328, 1
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds i32, i32* %201, i64 %334
  %336 = load i32, i32* %335, align 4
  %337 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %4, i64 0, i32 3, i64 %326
  store i32 %336, i32* %337, align 4
  %338 = icmp sgt i64 %326, 0
  br i1 %338, label %323, label %318, !llvm.loop !76

339:                                              ; preds = %318
  %340 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %341 = icmp eq %struct.TfLiteTensor* %340, null
  br i1 %341, label %347, label %342

342:                                              ; preds = %339
  %343 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %340, i64 0, i32 1
  %344 = bitcast %union.TfLitePtrUnion* %343 to float**
  %345 = load float*, float** %344, align 8
  %346 = load float, float* %345, align 4
  br label %347

347:                                              ; preds = %339, %342
  %348 = phi float [ %346, %342 ], [ 0.000000e+00, %339 ]
  %349 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 5
  %350 = load i8, i8* %349, align 4
  %351 = icmp eq i8 %350, 1
  br i1 %351, label %352, label %447

352:                                              ; preds = %347
  %353 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %353) #8
  store float %348, float* %6, align 4
  %354 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %354) #8
  %355 = icmp eq %struct.TfLiteTensor* %320, null
  br i1 %355, label %356, label %358

356:                                              ; preds = %352
  %357 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %357, align 8, !alias.scope !77
  br label %386

358:                                              ; preds = %352
  %359 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 2
  %360 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %359, align 8, !noalias !77
  %361 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %360, i64 0, i32 0
  %362 = load i32, i32* %361, align 4, !noalias !77
  %363 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %360, i64 0, i32 1, i64 0
  %364 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %362, i32* %364, align 8, !alias.scope !77
  %365 = icmp sgt i32 %362, 5
  br i1 %365, label %366, label %373

366:                                              ; preds = %358
  %367 = sext i32 %362 to i64
  %368 = shl nsw i64 %367, 2
  %369 = call i8* @_Znam(i64 %368) #9, !noalias !77
  %370 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %371 = bitcast i32** %370 to i8**
  store i8* %369, i8** %371, align 8, !alias.scope !77
  %372 = bitcast i8* %369 to i32*
  br label %378

373:                                              ; preds = %358
  %374 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %375 = bitcast %union.anon* %374 to i32*
  %376 = sext i32 %362 to i64
  %377 = shl nsw i64 %376, 2
  br label %378

378:                                              ; preds = %373, %366
  %379 = phi i64 [ %368, %366 ], [ %377, %373 ]
  %380 = phi i32* [ %372, %366 ], [ %375, %373 ]
  %381 = bitcast i32* %380 to i8*
  %382 = bitcast i32* %363 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %381, i8* align 4 %382, i64 %379, i1 false) #8
  %383 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 1
  %384 = bitcast %union.TfLitePtrUnion* %383 to float**
  %385 = load float*, float** %384, align 8
  br label %386

386:                                              ; preds = %356, %378
  %387 = phi float* [ %385, %378 ], [ null, %356 ]
  %388 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %388) #8
  %389 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %185, align 8
  %390 = icmp eq %struct.TfLiteTensor* %389, null
  br i1 %390, label %391, label %393

391:                                              ; preds = %386
  %392 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %392, align 8, !alias.scope !80
  br label %421

393:                                              ; preds = %386
  %394 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %389, i64 0, i32 2
  %395 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %394, align 8, !noalias !80
  %396 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %395, i64 0, i32 0
  %397 = load i32, i32* %396, align 4, !noalias !80
  %398 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %395, i64 0, i32 1, i64 0
  %399 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %397, i32* %399, align 8, !alias.scope !80
  %400 = icmp sgt i32 %397, 5
  br i1 %400, label %401, label %408

401:                                              ; preds = %393
  %402 = sext i32 %397 to i64
  %403 = shl nsw i64 %402, 2
  %404 = call i8* @_Znam(i64 %403) #9, !noalias !80
  %405 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %406 = bitcast i32** %405 to i8**
  store i8* %404, i8** %406, align 8, !alias.scope !80
  %407 = bitcast i8* %404 to i32*
  br label %413

408:                                              ; preds = %393
  %409 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %410 = bitcast %union.anon* %409 to i32*
  %411 = sext i32 %397 to i64
  %412 = shl nsw i64 %411, 2
  br label %413

413:                                              ; preds = %408, %401
  %414 = phi i64 [ %403, %401 ], [ %412, %408 ]
  %415 = phi i32* [ %407, %401 ], [ %410, %408 ]
  %416 = bitcast i32* %415 to i8*
  %417 = bitcast i32* %398 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %416, i8* align 4 %417, i64 %414, i1 false) #8
  %418 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %389, i64 0, i32 1
  %419 = bitcast %union.TfLitePtrUnion* %418 to float**
  %420 = load float*, float** %419, align 8
  br label %421

421:                                              ; preds = %391, %413
  %422 = phi float* [ %420, %413 ], [ null, %391 ]
  %423 = fcmp oeq float %348, 0.000000e+00
  br i1 %423, label %424, label %425

424:                                              ; preds = %421
  call void @_ZN6tflite13optimized_ops19PadImageStyleMemsetIffEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* nonnull dereferenceable(44) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, float* %387, float* nonnull %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, float* %422) #8
  br label %426

425:                                              ; preds = %421
  call void @_ZN6tflite13optimized_ops7PadImplIffEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* nonnull dereferenceable(44) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, float* %387, float* nonnull %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, float* %422) #8
  br label %426

426:                                              ; preds = %424, %425
  %427 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %428 = load i32, i32* %427, align 8
  %429 = icmp sgt i32 %428, 5
  br i1 %429, label %430, label %436

430:                                              ; preds = %426
  %431 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %432 = load i32*, i32** %431, align 8
  %433 = icmp eq i32* %432, null
  br i1 %433, label %436, label %434

434:                                              ; preds = %430
  %435 = bitcast i32* %432 to i8*
  call void @_ZdaPv(i8* %435) #9
  br label %436

436:                                              ; preds = %426, %430, %434
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %388) #8
  %437 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %438 = load i32, i32* %437, align 8
  %439 = icmp sgt i32 %438, 5
  br i1 %439, label %440, label %446

440:                                              ; preds = %436
  %441 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %442 = load i32*, i32** %441, align 8
  %443 = icmp eq i32* %442, null
  br i1 %443, label %446, label %444

444:                                              ; preds = %440
  %445 = bitcast i32* %442 to i8*
  call void @_ZdaPv(i8* %445) #9
  br label %446

446:                                              ; preds = %436, %440, %444
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %354) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %353) #8
  br label %1187

447:                                              ; preds = %347
  %448 = bitcast float* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %448) #8
  store float %348, float* %9, align 4
  %449 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %449) #8
  %450 = icmp eq %struct.TfLiteTensor* %320, null
  br i1 %450, label %451, label %453

451:                                              ; preds = %447
  %452 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %452, align 8, !alias.scope !83
  br label %481

453:                                              ; preds = %447
  %454 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 2
  %455 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %454, align 8, !noalias !83
  %456 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %455, i64 0, i32 0
  %457 = load i32, i32* %456, align 4, !noalias !83
  %458 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %455, i64 0, i32 1, i64 0
  %459 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %457, i32* %459, align 8, !alias.scope !83
  %460 = icmp sgt i32 %457, 5
  br i1 %460, label %461, label %468

461:                                              ; preds = %453
  %462 = sext i32 %457 to i64
  %463 = shl nsw i64 %462, 2
  %464 = call i8* @_Znam(i64 %463) #9, !noalias !83
  %465 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %466 = bitcast i32** %465 to i8**
  store i8* %464, i8** %466, align 8, !alias.scope !83
  %467 = bitcast i8* %464 to i32*
  br label %473

468:                                              ; preds = %453
  %469 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %470 = bitcast %union.anon* %469 to i32*
  %471 = sext i32 %457 to i64
  %472 = shl nsw i64 %471, 2
  br label %473

473:                                              ; preds = %468, %461
  %474 = phi i64 [ %463, %461 ], [ %472, %468 ]
  %475 = phi i32* [ %467, %461 ], [ %470, %468 ]
  %476 = bitcast i32* %475 to i8*
  %477 = bitcast i32* %458 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %476, i8* align 4 %477, i64 %474, i1 false) #8
  %478 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 1
  %479 = bitcast %union.TfLitePtrUnion* %478 to float**
  %480 = load float*, float** %479, align 8
  br label %481

481:                                              ; preds = %451, %473
  %482 = phi float* [ %480, %473 ], [ null, %451 ]
  %483 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %483) #8
  %484 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %185, align 8
  %485 = icmp eq %struct.TfLiteTensor* %484, null
  br i1 %485, label %486, label %488

486:                                              ; preds = %481
  %487 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %487, align 8, !alias.scope !86
  br label %516

488:                                              ; preds = %481
  %489 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %484, i64 0, i32 2
  %490 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %489, align 8, !noalias !86
  %491 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %490, i64 0, i32 0
  %492 = load i32, i32* %491, align 4, !noalias !86
  %493 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %490, i64 0, i32 1, i64 0
  %494 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %492, i32* %494, align 8, !alias.scope !86
  %495 = icmp sgt i32 %492, 5
  br i1 %495, label %496, label %503

496:                                              ; preds = %488
  %497 = sext i32 %492 to i64
  %498 = shl nsw i64 %497, 2
  %499 = call i8* @_Znam(i64 %498) #9, !noalias !86
  %500 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %501 = bitcast i32** %500 to i8**
  store i8* %499, i8** %501, align 8, !alias.scope !86
  %502 = bitcast i8* %499 to i32*
  br label %508

503:                                              ; preds = %488
  %504 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %505 = bitcast %union.anon* %504 to i32*
  %506 = sext i32 %492 to i64
  %507 = shl nsw i64 %506, 2
  br label %508

508:                                              ; preds = %503, %496
  %509 = phi i64 [ %498, %496 ], [ %507, %503 ]
  %510 = phi i32* [ %502, %496 ], [ %505, %503 ]
  %511 = bitcast i32* %510 to i8*
  %512 = bitcast i32* %493 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %511, i8* align 4 %512, i64 %509, i1 false) #8
  %513 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %484, i64 0, i32 1
  %514 = bitcast %union.TfLitePtrUnion* %513 to float**
  %515 = load float*, float** %514, align 8
  br label %516

516:                                              ; preds = %486, %508
  %517 = phi float* [ %515, %508 ], [ null, %486 ]
  call void @_ZN6tflite13optimized_ops7PadImplIffEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* nonnull dereferenceable(44) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, float* %482, float* nonnull %9, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, float* %517) #8
  %518 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %519 = load i32, i32* %518, align 8
  %520 = icmp sgt i32 %519, 5
  br i1 %520, label %521, label %527

521:                                              ; preds = %516
  %522 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %523 = load i32*, i32** %522, align 8
  %524 = icmp eq i32* %523, null
  br i1 %524, label %527, label %525

525:                                              ; preds = %521
  %526 = bitcast i32* %523 to i8*
  call void @_ZdaPv(i8* %526) #9
  br label %527

527:                                              ; preds = %516, %521, %525
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %483) #8
  %528 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %529 = load i32, i32* %528, align 8
  %530 = icmp sgt i32 %529, 5
  br i1 %530, label %531, label %537

531:                                              ; preds = %527
  %532 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %533 = load i32*, i32** %532, align 8
  %534 = icmp eq i32* %533, null
  br i1 %534, label %537, label %535

535:                                              ; preds = %531
  %536 = bitcast i32* %533 to i8*
  call void @_ZdaPv(i8* %536) #9
  br label %537

537:                                              ; preds = %527, %531, %535
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %449) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %448) #8
  br label %1187

538:                                              ; preds = %318
  %539 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %540 = icmp eq %struct.TfLiteTensor* %539, null
  %541 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %185, align 8
  %542 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %541, i64 0, i32 3, i32 1
  %543 = load i32, i32* %542, align 4
  br i1 %540, label %544, label %556

544:                                              ; preds = %538
  %545 = icmp slt i32 %543, 0
  br i1 %545, label %546, label %549

546:                                              ; preds = %544
  %547 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %548 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %547, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %548(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 197, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.20, i64 0, i64 0)) #8
  br label %1187

549:                                              ; preds = %544
  %550 = icmp sgt i32 %543, 255
  br i1 %550, label %551, label %554

551:                                              ; preds = %549
  %552 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %553 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %552, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %553(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 199, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.21, i64 0, i64 0)) #8
  br label %1187

554:                                              ; preds = %549
  %555 = trunc i32 %543 to i8
  br label %579

556:                                              ; preds = %538
  %557 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %539, i64 0, i32 3, i32 1
  %558 = load i32, i32* %557, align 4
  %559 = icmp eq i32 %543, %558
  br i1 %559, label %563, label %560

560:                                              ; preds = %556
  %561 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %562 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %561, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %562(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 205, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.23, i64 0, i64 0), i32 %543, i32 %558) #8
  br label %1187

563:                                              ; preds = %556
  %564 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %541, i64 0, i32 3, i32 0
  %565 = load float, float* %564, align 8
  %566 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %539, i64 0, i32 3, i32 0
  %567 = load float, float* %566, align 8
  %568 = fcmp une float %565, %567
  br i1 %568, label %569, label %574

569:                                              ; preds = %563
  %570 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %571 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %570, align 8
  %572 = fpext float %565 to double
  %573 = fpext float %567 to double
  call void (%struct.TfLiteContext*, i8*, ...) %571(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 207, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.25, i64 0, i64 0), double %572, double %573) #8
  br label %1187

574:                                              ; preds = %563
  %575 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %539, i64 0, i32 1
  %576 = bitcast %union.TfLitePtrUnion* %575 to i8**
  %577 = load i8*, i8** %576, align 8
  %578 = load i8, i8* %577, align 1
  br label %579

579:                                              ; preds = %574, %554
  %580 = phi i8 [ %555, %554 ], [ %578, %574 ]
  %581 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 5
  %582 = load i8, i8* %581, align 4
  %583 = icmp eq i8 %582, 1
  br i1 %583, label %584, label %673

584:                                              ; preds = %579
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  store i8 %580, i8* %12, align 1
  %585 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %585) #8
  %586 = icmp eq %struct.TfLiteTensor* %320, null
  br i1 %586, label %587, label %589

587:                                              ; preds = %584
  %588 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %588, align 8, !alias.scope !89
  br label %617

589:                                              ; preds = %584
  %590 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 2
  %591 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %590, align 8, !noalias !89
  %592 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %591, i64 0, i32 0
  %593 = load i32, i32* %592, align 4, !noalias !89
  %594 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %591, i64 0, i32 1, i64 0
  %595 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %593, i32* %595, align 8, !alias.scope !89
  %596 = icmp sgt i32 %593, 5
  br i1 %596, label %597, label %604

597:                                              ; preds = %589
  %598 = sext i32 %593 to i64
  %599 = shl nsw i64 %598, 2
  %600 = call i8* @_Znam(i64 %599) #9, !noalias !89
  %601 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %602 = bitcast i32** %601 to i8**
  store i8* %600, i8** %602, align 8, !alias.scope !89
  %603 = bitcast i8* %600 to i32*
  br label %609

604:                                              ; preds = %589
  %605 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %606 = bitcast %union.anon* %605 to i32*
  %607 = sext i32 %593 to i64
  %608 = shl nsw i64 %607, 2
  br label %609

609:                                              ; preds = %604, %597
  %610 = phi i64 [ %599, %597 ], [ %608, %604 ]
  %611 = phi i32* [ %603, %597 ], [ %606, %604 ]
  %612 = bitcast i32* %611 to i8*
  %613 = bitcast i32* %594 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %612, i8* align 4 %613, i64 %610, i1 false) #8
  %614 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 1
  %615 = bitcast %union.TfLitePtrUnion* %614 to i8**
  %616 = load i8*, i8** %615, align 8
  br label %617

617:                                              ; preds = %587, %609
  %618 = phi i8* [ %616, %609 ], [ null, %587 ]
  %619 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %619) #8
  %620 = icmp eq %struct.TfLiteTensor* %541, null
  br i1 %620, label %621, label %623

621:                                              ; preds = %617
  %622 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %622, align 8, !alias.scope !92
  br label %651

623:                                              ; preds = %617
  %624 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %541, i64 0, i32 2
  %625 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %624, align 8, !noalias !92
  %626 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %625, i64 0, i32 0
  %627 = load i32, i32* %626, align 4, !noalias !92
  %628 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %625, i64 0, i32 1, i64 0
  %629 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %627, i32* %629, align 8, !alias.scope !92
  %630 = icmp sgt i32 %627, 5
  br i1 %630, label %631, label %638

631:                                              ; preds = %623
  %632 = sext i32 %627 to i64
  %633 = shl nsw i64 %632, 2
  %634 = call i8* @_Znam(i64 %633) #9, !noalias !92
  %635 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %636 = bitcast i32** %635 to i8**
  store i8* %634, i8** %636, align 8, !alias.scope !92
  %637 = bitcast i8* %634 to i32*
  br label %643

638:                                              ; preds = %623
  %639 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %640 = bitcast %union.anon* %639 to i32*
  %641 = sext i32 %627 to i64
  %642 = shl nsw i64 %641, 2
  br label %643

643:                                              ; preds = %638, %631
  %644 = phi i64 [ %633, %631 ], [ %642, %638 ]
  %645 = phi i32* [ %637, %631 ], [ %640, %638 ]
  %646 = bitcast i32* %645 to i8*
  %647 = bitcast i32* %628 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %646, i8* align 4 %647, i64 %644, i1 false) #8
  %648 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %541, i64 0, i32 1
  %649 = bitcast %union.TfLitePtrUnion* %648 to i8**
  %650 = load i8*, i8** %649, align 8
  br label %651

651:                                              ; preds = %621, %643
  %652 = phi i8* [ %650, %643 ], [ null, %621 ]
  call void @_ZN6tflite13optimized_ops19PadImageStyleMemsetIhhEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* nonnull dereferenceable(44) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %618, i8* nonnull %12, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i8* %652) #8
  %653 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %654 = load i32, i32* %653, align 8
  %655 = icmp sgt i32 %654, 5
  br i1 %655, label %656, label %662

656:                                              ; preds = %651
  %657 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %658 = load i32*, i32** %657, align 8
  %659 = icmp eq i32* %658, null
  br i1 %659, label %662, label %660

660:                                              ; preds = %656
  %661 = bitcast i32* %658 to i8*
  call void @_ZdaPv(i8* %661) #9
  br label %662

662:                                              ; preds = %651, %656, %660
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %619) #8
  %663 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %664 = load i32, i32* %663, align 8
  %665 = icmp sgt i32 %664, 5
  br i1 %665, label %666, label %672

666:                                              ; preds = %662
  %667 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %668 = load i32*, i32** %667, align 8
  %669 = icmp eq i32* %668, null
  br i1 %669, label %672, label %670

670:                                              ; preds = %666
  %671 = bitcast i32* %668 to i8*
  call void @_ZdaPv(i8* %671) #9
  br label %672

672:                                              ; preds = %662, %666, %670
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %585) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  br label %1187

673:                                              ; preds = %579
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #8
  store i8 %580, i8* %15, align 1
  %674 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %674) #8
  %675 = icmp eq %struct.TfLiteTensor* %320, null
  br i1 %675, label %676, label %678

676:                                              ; preds = %673
  %677 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %677, align 8, !alias.scope !95
  br label %706

678:                                              ; preds = %673
  %679 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 2
  %680 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %679, align 8, !noalias !95
  %681 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %680, i64 0, i32 0
  %682 = load i32, i32* %681, align 4, !noalias !95
  %683 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %680, i64 0, i32 1, i64 0
  %684 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %682, i32* %684, align 8, !alias.scope !95
  %685 = icmp sgt i32 %682, 5
  br i1 %685, label %686, label %693

686:                                              ; preds = %678
  %687 = sext i32 %682 to i64
  %688 = shl nsw i64 %687, 2
  %689 = call i8* @_Znam(i64 %688) #9, !noalias !95
  %690 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %691 = bitcast i32** %690 to i8**
  store i8* %689, i8** %691, align 8, !alias.scope !95
  %692 = bitcast i8* %689 to i32*
  br label %698

693:                                              ; preds = %678
  %694 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %695 = bitcast %union.anon* %694 to i32*
  %696 = sext i32 %682 to i64
  %697 = shl nsw i64 %696, 2
  br label %698

698:                                              ; preds = %693, %686
  %699 = phi i64 [ %688, %686 ], [ %697, %693 ]
  %700 = phi i32* [ %692, %686 ], [ %695, %693 ]
  %701 = bitcast i32* %700 to i8*
  %702 = bitcast i32* %683 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %701, i8* align 4 %702, i64 %699, i1 false) #8
  %703 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 1
  %704 = bitcast %union.TfLitePtrUnion* %703 to i8**
  %705 = load i8*, i8** %704, align 8
  br label %706

706:                                              ; preds = %676, %698
  %707 = phi i8* [ %705, %698 ], [ null, %676 ]
  %708 = bitcast %"class.tflite::RuntimeShape"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %708) #8
  %709 = icmp eq %struct.TfLiteTensor* %541, null
  br i1 %709, label %710, label %712

710:                                              ; preds = %706
  %711 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 0, i32* %711, align 8, !alias.scope !98
  br label %740

712:                                              ; preds = %706
  %713 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %541, i64 0, i32 2
  %714 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %713, align 8, !noalias !98
  %715 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %714, i64 0, i32 0
  %716 = load i32, i32* %715, align 4, !noalias !98
  %717 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %714, i64 0, i32 1, i64 0
  %718 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  store i32 %716, i32* %718, align 8, !alias.scope !98
  %719 = icmp sgt i32 %716, 5
  br i1 %719, label %720, label %727

720:                                              ; preds = %712
  %721 = sext i32 %716 to i64
  %722 = shl nsw i64 %721, 2
  %723 = call i8* @_Znam(i64 %722) #9, !noalias !98
  %724 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %725 = bitcast i32** %724 to i8**
  store i8* %723, i8** %725, align 8, !alias.scope !98
  %726 = bitcast i8* %723 to i32*
  br label %732

727:                                              ; preds = %712
  %728 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1
  %729 = bitcast %union.anon* %728 to i32*
  %730 = sext i32 %716 to i64
  %731 = shl nsw i64 %730, 2
  br label %732

732:                                              ; preds = %727, %720
  %733 = phi i64 [ %722, %720 ], [ %731, %727 ]
  %734 = phi i32* [ %726, %720 ], [ %729, %727 ]
  %735 = bitcast i32* %734 to i8*
  %736 = bitcast i32* %717 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %735, i8* align 4 %736, i64 %733, i1 false) #8
  %737 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %541, i64 0, i32 1
  %738 = bitcast %union.TfLitePtrUnion* %737 to i8**
  %739 = load i8*, i8** %738, align 8
  br label %740

740:                                              ; preds = %710, %732
  %741 = phi i8* [ %739, %732 ], [ null, %710 ]
  call void @_ZN6tflite13optimized_ops7PadImplIhhEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* nonnull dereferenceable(44) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, i8* %707, i8* nonnull %15, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %17, i8* %741) #8
  %742 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 0
  %743 = load i32, i32* %742, align 8
  %744 = icmp sgt i32 %743, 5
  br i1 %744, label %745, label %751

745:                                              ; preds = %740
  %746 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %17, i64 0, i32 1, i32 0
  %747 = load i32*, i32** %746, align 8
  %748 = icmp eq i32* %747, null
  br i1 %748, label %751, label %749

749:                                              ; preds = %745
  %750 = bitcast i32* %747 to i8*
  call void @_ZdaPv(i8* %750) #9
  br label %751

751:                                              ; preds = %740, %745, %749
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %708) #8
  %752 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %753 = load i32, i32* %752, align 8
  %754 = icmp sgt i32 %753, 5
  br i1 %754, label %755, label %761

755:                                              ; preds = %751
  %756 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %757 = load i32*, i32** %756, align 8
  %758 = icmp eq i32* %757, null
  br i1 %758, label %761, label %759

759:                                              ; preds = %755
  %760 = bitcast i32* %757 to i8*
  call void @_ZdaPv(i8* %760) #9
  br label %761

761:                                              ; preds = %751, %755, %759
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %674) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #8
  br label %1187

762:                                              ; preds = %318
  %763 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %764 = icmp eq %struct.TfLiteTensor* %763, null
  %765 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %185, align 8
  %766 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %765, i64 0, i32 3, i32 1
  %767 = load i32, i32* %766, align 4
  br i1 %764, label %768, label %780

768:                                              ; preds = %762
  %769 = icmp slt i32 %767, -128
  br i1 %769, label %770, label %773

770:                                              ; preds = %768
  %771 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %772 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %771, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %772(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 230, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.26, i64 0, i64 0)) #8
  br label %1187

773:                                              ; preds = %768
  %774 = icmp sgt i32 %767, 127
  br i1 %774, label %775, label %778

775:                                              ; preds = %773
  %776 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %777 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %776, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %777(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 232, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.27, i64 0, i64 0)) #8
  br label %1187

778:                                              ; preds = %773
  %779 = trunc i32 %767 to i8
  br label %803

780:                                              ; preds = %762
  %781 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %763, i64 0, i32 3, i32 1
  %782 = load i32, i32* %781, align 4
  %783 = icmp eq i32 %767, %782
  br i1 %783, label %787, label %784

784:                                              ; preds = %780
  %785 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %786 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %785, align 8
  call void (%struct.TfLiteContext*, i8*, ...) %786(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 238, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.23, i64 0, i64 0), i32 %767, i32 %782) #8
  br label %1187

787:                                              ; preds = %780
  %788 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %765, i64 0, i32 3, i32 0
  %789 = load float, float* %788, align 8
  %790 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %763, i64 0, i32 3, i32 0
  %791 = load float, float* %790, align 8
  %792 = fcmp une float %789, %791
  br i1 %792, label %793, label %798

793:                                              ; preds = %787
  %794 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %795 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %794, align 8
  %796 = fpext float %789 to double
  %797 = fpext float %791 to double
  call void (%struct.TfLiteContext*, i8*, ...) %795(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i64 0, i64 0), i32 240, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.25, i64 0, i64 0), double %796, double %797) #8
  br label %1187

798:                                              ; preds = %787
  %799 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %763, i64 0, i32 1
  %800 = bitcast %union.TfLitePtrUnion* %799 to i8**
  %801 = load i8*, i8** %800, align 8
  %802 = load i8, i8* %801, align 1
  br label %803

803:                                              ; preds = %798, %778
  %804 = phi i8 [ %779, %778 ], [ %802, %798 ]
  %805 = getelementptr inbounds %"struct.tflite::ops::builtin::pad::PadContext", %"struct.tflite::ops::builtin::pad::PadContext"* %3, i64 0, i32 5
  %806 = load i8, i8* %805, align 4
  %807 = icmp eq i8 %806, 1
  br i1 %807, label %808, label %897

808:                                              ; preds = %803
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #8
  store i8 %804, i8* %18, align 1
  %809 = bitcast %"class.tflite::RuntimeShape"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %809) #8
  %810 = icmp eq %struct.TfLiteTensor* %320, null
  br i1 %810, label %811, label %813

811:                                              ; preds = %808
  %812 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 0, i32* %812, align 8, !alias.scope !101
  br label %841

813:                                              ; preds = %808
  %814 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 2
  %815 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %814, align 8, !noalias !101
  %816 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %815, i64 0, i32 0
  %817 = load i32, i32* %816, align 4, !noalias !101
  %818 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %815, i64 0, i32 1, i64 0
  %819 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  store i32 %817, i32* %819, align 8, !alias.scope !101
  %820 = icmp sgt i32 %817, 5
  br i1 %820, label %821, label %828

821:                                              ; preds = %813
  %822 = sext i32 %817 to i64
  %823 = shl nsw i64 %822, 2
  %824 = call i8* @_Znam(i64 %823) #9, !noalias !101
  %825 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %826 = bitcast i32** %825 to i8**
  store i8* %824, i8** %826, align 8, !alias.scope !101
  %827 = bitcast i8* %824 to i32*
  br label %833

828:                                              ; preds = %813
  %829 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1
  %830 = bitcast %union.anon* %829 to i32*
  %831 = sext i32 %817 to i64
  %832 = shl nsw i64 %831, 2
  br label %833

833:                                              ; preds = %828, %821
  %834 = phi i64 [ %823, %821 ], [ %832, %828 ]
  %835 = phi i32* [ %827, %821 ], [ %830, %828 ]
  %836 = bitcast i32* %835 to i8*
  %837 = bitcast i32* %818 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %836, i8* align 4 %837, i64 %834, i1 false) #8
  %838 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 1
  %839 = bitcast %union.TfLitePtrUnion* %838 to i8**
  %840 = load i8*, i8** %839, align 8
  br label %841

841:                                              ; preds = %811, %833
  %842 = phi i8* [ %840, %833 ], [ null, %811 ]
  %843 = bitcast %"class.tflite::RuntimeShape"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %843) #8
  %844 = icmp eq %struct.TfLiteTensor* %765, null
  br i1 %844, label %845, label %847

845:                                              ; preds = %841
  %846 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 0, i32* %846, align 8, !alias.scope !104
  br label %875

847:                                              ; preds = %841
  %848 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %765, i64 0, i32 2
  %849 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %848, align 8, !noalias !104
  %850 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %849, i64 0, i32 0
  %851 = load i32, i32* %850, align 4, !noalias !104
  %852 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %849, i64 0, i32 1, i64 0
  %853 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  store i32 %851, i32* %853, align 8, !alias.scope !104
  %854 = icmp sgt i32 %851, 5
  br i1 %854, label %855, label %862

855:                                              ; preds = %847
  %856 = sext i32 %851 to i64
  %857 = shl nsw i64 %856, 2
  %858 = call i8* @_Znam(i64 %857) #9, !noalias !104
  %859 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %860 = bitcast i32** %859 to i8**
  store i8* %858, i8** %860, align 8, !alias.scope !104
  %861 = bitcast i8* %858 to i32*
  br label %867

862:                                              ; preds = %847
  %863 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1
  %864 = bitcast %union.anon* %863 to i32*
  %865 = sext i32 %851 to i64
  %866 = shl nsw i64 %865, 2
  br label %867

867:                                              ; preds = %862, %855
  %868 = phi i64 [ %857, %855 ], [ %866, %862 ]
  %869 = phi i32* [ %861, %855 ], [ %864, %862 ]
  %870 = bitcast i32* %869 to i8*
  %871 = bitcast i32* %852 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %870, i8* align 4 %871, i64 %868, i1 false) #8
  %872 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %765, i64 0, i32 1
  %873 = bitcast %union.TfLitePtrUnion* %872 to i8**
  %874 = load i8*, i8** %873, align 8
  br label %875

875:                                              ; preds = %845, %867
  %876 = phi i8* [ %874, %867 ], [ null, %845 ]
  call void @_ZN6tflite13reference_ops7PadImplIaaEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* nonnull dereferenceable(44) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %19, i8* %842, i8* nonnull %18, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %20, i8* %876) #8
  %877 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 0
  %878 = load i32, i32* %877, align 8
  %879 = icmp sgt i32 %878, 5
  br i1 %879, label %880, label %886

880:                                              ; preds = %875
  %881 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %20, i64 0, i32 1, i32 0
  %882 = load i32*, i32** %881, align 8
  %883 = icmp eq i32* %882, null
  br i1 %883, label %886, label %884

884:                                              ; preds = %880
  %885 = bitcast i32* %882 to i8*
  call void @_ZdaPv(i8* %885) #9
  br label %886

886:                                              ; preds = %875, %880, %884
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %843) #8
  %887 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 0
  %888 = load i32, i32* %887, align 8
  %889 = icmp sgt i32 %888, 5
  br i1 %889, label %890, label %896

890:                                              ; preds = %886
  %891 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %19, i64 0, i32 1, i32 0
  %892 = load i32*, i32** %891, align 8
  %893 = icmp eq i32* %892, null
  br i1 %893, label %896, label %894

894:                                              ; preds = %890
  %895 = bitcast i32* %892 to i8*
  call void @_ZdaPv(i8* %895) #9
  br label %896

896:                                              ; preds = %886, %890, %894
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %809) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #8
  br label %1187

897:                                              ; preds = %803
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %21) #8
  store i8 %804, i8* %21, align 1
  %898 = bitcast %"class.tflite::RuntimeShape"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %898) #8
  %899 = icmp eq %struct.TfLiteTensor* %320, null
  br i1 %899, label %900, label %902

900:                                              ; preds = %897
  %901 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 0, i32* %901, align 8, !alias.scope !107
  br label %930

902:                                              ; preds = %897
  %903 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 2
  %904 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %903, align 8, !noalias !107
  %905 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %904, i64 0, i32 0
  %906 = load i32, i32* %905, align 4, !noalias !107
  %907 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %904, i64 0, i32 1, i64 0
  %908 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  store i32 %906, i32* %908, align 8, !alias.scope !107
  %909 = icmp sgt i32 %906, 5
  br i1 %909, label %910, label %917

910:                                              ; preds = %902
  %911 = sext i32 %906 to i64
  %912 = shl nsw i64 %911, 2
  %913 = call i8* @_Znam(i64 %912) #9, !noalias !107
  %914 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %915 = bitcast i32** %914 to i8**
  store i8* %913, i8** %915, align 8, !alias.scope !107
  %916 = bitcast i8* %913 to i32*
  br label %922

917:                                              ; preds = %902
  %918 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1
  %919 = bitcast %union.anon* %918 to i32*
  %920 = sext i32 %906 to i64
  %921 = shl nsw i64 %920, 2
  br label %922

922:                                              ; preds = %917, %910
  %923 = phi i64 [ %912, %910 ], [ %921, %917 ]
  %924 = phi i32* [ %916, %910 ], [ %919, %917 ]
  %925 = bitcast i32* %924 to i8*
  %926 = bitcast i32* %907 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %925, i8* align 4 %926, i64 %923, i1 false) #8
  %927 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 1
  %928 = bitcast %union.TfLitePtrUnion* %927 to i8**
  %929 = load i8*, i8** %928, align 8
  br label %930

930:                                              ; preds = %900, %922
  %931 = phi i8* [ %929, %922 ], [ null, %900 ]
  %932 = bitcast %"class.tflite::RuntimeShape"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %932) #8
  %933 = icmp eq %struct.TfLiteTensor* %765, null
  br i1 %933, label %934, label %936

934:                                              ; preds = %930
  %935 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 0, i32* %935, align 8, !alias.scope !110
  br label %964

936:                                              ; preds = %930
  %937 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %765, i64 0, i32 2
  %938 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %937, align 8, !noalias !110
  %939 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %938, i64 0, i32 0
  %940 = load i32, i32* %939, align 4, !noalias !110
  %941 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %938, i64 0, i32 1, i64 0
  %942 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  store i32 %940, i32* %942, align 8, !alias.scope !110
  %943 = icmp sgt i32 %940, 5
  br i1 %943, label %944, label %951

944:                                              ; preds = %936
  %945 = sext i32 %940 to i64
  %946 = shl nsw i64 %945, 2
  %947 = call i8* @_Znam(i64 %946) #9, !noalias !110
  %948 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %949 = bitcast i32** %948 to i8**
  store i8* %947, i8** %949, align 8, !alias.scope !110
  %950 = bitcast i8* %947 to i32*
  br label %956

951:                                              ; preds = %936
  %952 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1
  %953 = bitcast %union.anon* %952 to i32*
  %954 = sext i32 %940 to i64
  %955 = shl nsw i64 %954, 2
  br label %956

956:                                              ; preds = %951, %944
  %957 = phi i64 [ %946, %944 ], [ %955, %951 ]
  %958 = phi i32* [ %950, %944 ], [ %953, %951 ]
  %959 = bitcast i32* %958 to i8*
  %960 = bitcast i32* %941 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %959, i8* align 4 %960, i64 %957, i1 false) #8
  %961 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %765, i64 0, i32 1
  %962 = bitcast %union.TfLitePtrUnion* %961 to i8**
  %963 = load i8*, i8** %962, align 8
  br label %964

964:                                              ; preds = %934, %956
  %965 = phi i8* [ %963, %956 ], [ null, %934 ]
  call void @_ZN6tflite13reference_ops7PadImplIaaEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* nonnull dereferenceable(44) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %22, i8* %931, i8* nonnull %21, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %23, i8* %965) #8
  %966 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 0
  %967 = load i32, i32* %966, align 8
  %968 = icmp sgt i32 %967, 5
  br i1 %968, label %969, label %975

969:                                              ; preds = %964
  %970 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 0, i32 1, i32 0
  %971 = load i32*, i32** %970, align 8
  %972 = icmp eq i32* %971, null
  br i1 %972, label %975, label %973

973:                                              ; preds = %969
  %974 = bitcast i32* %971 to i8*
  call void @_ZdaPv(i8* %974) #9
  br label %975

975:                                              ; preds = %964, %969, %973
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %932) #8
  %976 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 0
  %977 = load i32, i32* %976, align 8
  %978 = icmp sgt i32 %977, 5
  br i1 %978, label %979, label %985

979:                                              ; preds = %975
  %980 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %22, i64 0, i32 1, i32 0
  %981 = load i32*, i32** %980, align 8
  %982 = icmp eq i32* %981, null
  br i1 %982, label %985, label %983

983:                                              ; preds = %979
  %984 = bitcast i32* %981 to i8*
  call void @_ZdaPv(i8* %984) #9
  br label %985

985:                                              ; preds = %975, %979, %983
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %898) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %21) #8
  br label %1187

986:                                              ; preds = %318
  %987 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %988 = icmp eq %struct.TfLiteTensor* %987, null
  br i1 %988, label %993, label %989

989:                                              ; preds = %986
  %990 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %987, i64 0, i32 1, i32 0
  %991 = load i32*, i32** %990, align 8
  %992 = load i32, i32* %991, align 4
  br label %993

993:                                              ; preds = %986, %989
  %994 = phi i32 [ %992, %989 ], [ 0, %986 ]
  %995 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %995) #8
  store i32 %994, i32* %24, align 4
  %996 = bitcast %"class.tflite::RuntimeShape"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %996) #8
  %997 = icmp eq %struct.TfLiteTensor* %320, null
  br i1 %997, label %998, label %1000

998:                                              ; preds = %993
  %999 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 0, i32* %999, align 8, !alias.scope !113
  br label %1027

1000:                                             ; preds = %993
  %1001 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 2
  %1002 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1001, align 8, !noalias !113
  %1003 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1002, i64 0, i32 0
  %1004 = load i32, i32* %1003, align 4, !noalias !113
  %1005 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1002, i64 0, i32 1, i64 0
  %1006 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  store i32 %1004, i32* %1006, align 8, !alias.scope !113
  %1007 = icmp sgt i32 %1004, 5
  br i1 %1007, label %1008, label %1015

1008:                                             ; preds = %1000
  %1009 = sext i32 %1004 to i64
  %1010 = shl nsw i64 %1009, 2
  %1011 = call i8* @_Znam(i64 %1010) #9, !noalias !113
  %1012 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1013 = bitcast i32** %1012 to i8**
  store i8* %1011, i8** %1013, align 8, !alias.scope !113
  %1014 = bitcast i8* %1011 to i32*
  br label %1020

1015:                                             ; preds = %1000
  %1016 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1
  %1017 = bitcast %union.anon* %1016 to i32*
  %1018 = sext i32 %1004 to i64
  %1019 = shl nsw i64 %1018, 2
  br label %1020

1020:                                             ; preds = %1015, %1008
  %1021 = phi i64 [ %1010, %1008 ], [ %1019, %1015 ]
  %1022 = phi i32* [ %1014, %1008 ], [ %1017, %1015 ]
  %1023 = bitcast i32* %1022 to i8*
  %1024 = bitcast i32* %1005 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1023, i8* align 4 %1024, i64 %1021, i1 false) #8
  %1025 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 1, i32 0
  %1026 = load i32*, i32** %1025, align 8
  br label %1027

1027:                                             ; preds = %998, %1020
  %1028 = phi i32* [ %1026, %1020 ], [ null, %998 ]
  %1029 = bitcast %"class.tflite::RuntimeShape"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1029) #8
  %1030 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %185, align 8
  %1031 = icmp eq %struct.TfLiteTensor* %1030, null
  br i1 %1031, label %1032, label %1034

1032:                                             ; preds = %1027
  %1033 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 0, i32* %1033, align 8, !alias.scope !116
  br label %1061

1034:                                             ; preds = %1027
  %1035 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1030, i64 0, i32 2
  %1036 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1035, align 8, !noalias !116
  %1037 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1036, i64 0, i32 0
  %1038 = load i32, i32* %1037, align 4, !noalias !116
  %1039 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1036, i64 0, i32 1, i64 0
  %1040 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  store i32 %1038, i32* %1040, align 8, !alias.scope !116
  %1041 = icmp sgt i32 %1038, 5
  br i1 %1041, label %1042, label %1049

1042:                                             ; preds = %1034
  %1043 = sext i32 %1038 to i64
  %1044 = shl nsw i64 %1043, 2
  %1045 = call i8* @_Znam(i64 %1044) #9, !noalias !116
  %1046 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1047 = bitcast i32** %1046 to i8**
  store i8* %1045, i8** %1047, align 8, !alias.scope !116
  %1048 = bitcast i8* %1045 to i32*
  br label %1054

1049:                                             ; preds = %1034
  %1050 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1
  %1051 = bitcast %union.anon* %1050 to i32*
  %1052 = sext i32 %1038 to i64
  %1053 = shl nsw i64 %1052, 2
  br label %1054

1054:                                             ; preds = %1049, %1042
  %1055 = phi i64 [ %1044, %1042 ], [ %1053, %1049 ]
  %1056 = phi i32* [ %1048, %1042 ], [ %1051, %1049 ]
  %1057 = bitcast i32* %1056 to i8*
  %1058 = bitcast i32* %1039 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1057, i8* align 4 %1058, i64 %1055, i1 false) #8
  %1059 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1030, i64 0, i32 1, i32 0
  %1060 = load i32*, i32** %1059, align 8
  br label %1061

1061:                                             ; preds = %1032, %1054
  %1062 = phi i32* [ %1060, %1054 ], [ null, %1032 ]
  call void @_ZN6tflite13optimized_ops7PadImplIiiEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* nonnull dereferenceable(44) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %25, i32* %1028, i32* nonnull %24, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %26, i32* %1062) #8
  %1063 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 0
  %1064 = load i32, i32* %1063, align 8
  %1065 = icmp sgt i32 %1064, 5
  br i1 %1065, label %1066, label %1072

1066:                                             ; preds = %1061
  %1067 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %26, i64 0, i32 1, i32 0
  %1068 = load i32*, i32** %1067, align 8
  %1069 = icmp eq i32* %1068, null
  br i1 %1069, label %1072, label %1070

1070:                                             ; preds = %1066
  %1071 = bitcast i32* %1068 to i8*
  call void @_ZdaPv(i8* %1071) #9
  br label %1072

1072:                                             ; preds = %1061, %1066, %1070
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1029) #8
  %1073 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 0
  %1074 = load i32, i32* %1073, align 8
  %1075 = icmp sgt i32 %1074, 5
  br i1 %1075, label %1076, label %1082

1076:                                             ; preds = %1072
  %1077 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %25, i64 0, i32 1, i32 0
  %1078 = load i32*, i32** %1077, align 8
  %1079 = icmp eq i32* %1078, null
  br i1 %1079, label %1082, label %1080

1080:                                             ; preds = %1076
  %1081 = bitcast i32* %1078 to i8*
  call void @_ZdaPv(i8* %1081) #9
  br label %1082

1082:                                             ; preds = %1072, %1076, %1080
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %996) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %995) #8
  br label %1187

1083:                                             ; preds = %318
  %1084 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %1085 = icmp eq %struct.TfLiteTensor* %1084, null
  br i1 %1085, label %1091, label %1086

1086:                                             ; preds = %1083
  %1087 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1084, i64 0, i32 1
  %1088 = bitcast %union.TfLitePtrUnion* %1087 to i64**
  %1089 = load i64*, i64** %1088, align 8
  %1090 = load i64, i64* %1089, align 8
  br label %1091

1091:                                             ; preds = %1083, %1086
  %1092 = phi i64 [ %1090, %1086 ], [ 0, %1083 ]
  %1093 = bitcast i64* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1093) #8
  store i64 %1092, i64* %27, align 8
  %1094 = bitcast %"class.tflite::RuntimeShape"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1094) #8
  %1095 = icmp eq %struct.TfLiteTensor* %320, null
  br i1 %1095, label %1096, label %1098

1096:                                             ; preds = %1091
  %1097 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 0, i32* %1097, align 8, !alias.scope !119
  br label %1126

1098:                                             ; preds = %1091
  %1099 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 2
  %1100 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1099, align 8, !noalias !119
  %1101 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1100, i64 0, i32 0
  %1102 = load i32, i32* %1101, align 4, !noalias !119
  %1103 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1100, i64 0, i32 1, i64 0
  %1104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  store i32 %1102, i32* %1104, align 8, !alias.scope !119
  %1105 = icmp sgt i32 %1102, 5
  br i1 %1105, label %1106, label %1113

1106:                                             ; preds = %1098
  %1107 = sext i32 %1102 to i64
  %1108 = shl nsw i64 %1107, 2
  %1109 = call i8* @_Znam(i64 %1108) #9, !noalias !119
  %1110 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %1111 = bitcast i32** %1110 to i8**
  store i8* %1109, i8** %1111, align 8, !alias.scope !119
  %1112 = bitcast i8* %1109 to i32*
  br label %1118

1113:                                             ; preds = %1098
  %1114 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1
  %1115 = bitcast %union.anon* %1114 to i32*
  %1116 = sext i32 %1102 to i64
  %1117 = shl nsw i64 %1116, 2
  br label %1118

1118:                                             ; preds = %1113, %1106
  %1119 = phi i64 [ %1108, %1106 ], [ %1117, %1113 ]
  %1120 = phi i32* [ %1112, %1106 ], [ %1115, %1113 ]
  %1121 = bitcast i32* %1120 to i8*
  %1122 = bitcast i32* %1103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1121, i8* align 4 %1122, i64 %1119, i1 false) #8
  %1123 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %320, i64 0, i32 1
  %1124 = bitcast %union.TfLitePtrUnion* %1123 to i64**
  %1125 = load i64*, i64** %1124, align 8
  br label %1126

1126:                                             ; preds = %1096, %1118
  %1127 = phi i64* [ %1125, %1118 ], [ null, %1096 ]
  %1128 = bitcast %"class.tflite::RuntimeShape"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1128) #8
  %1129 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %185, align 8
  %1130 = icmp eq %struct.TfLiteTensor* %1129, null
  br i1 %1130, label %1131, label %1133

1131:                                             ; preds = %1126
  %1132 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 0, i32* %1132, align 8, !alias.scope !122
  br label %1161

1133:                                             ; preds = %1126
  %1134 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1129, i64 0, i32 2
  %1135 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1134, align 8, !noalias !122
  %1136 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1135, i64 0, i32 0
  %1137 = load i32, i32* %1136, align 4, !noalias !122
  %1138 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1135, i64 0, i32 1, i64 0
  %1139 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  store i32 %1137, i32* %1139, align 8, !alias.scope !122
  %1140 = icmp sgt i32 %1137, 5
  br i1 %1140, label %1141, label %1148

1141:                                             ; preds = %1133
  %1142 = sext i32 %1137 to i64
  %1143 = shl nsw i64 %1142, 2
  %1144 = call i8* @_Znam(i64 %1143) #9, !noalias !122
  %1145 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1146 = bitcast i32** %1145 to i8**
  store i8* %1144, i8** %1146, align 8, !alias.scope !122
  %1147 = bitcast i8* %1144 to i32*
  br label %1153

1148:                                             ; preds = %1133
  %1149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1
  %1150 = bitcast %union.anon* %1149 to i32*
  %1151 = sext i32 %1137 to i64
  %1152 = shl nsw i64 %1151, 2
  br label %1153

1153:                                             ; preds = %1148, %1141
  %1154 = phi i64 [ %1143, %1141 ], [ %1152, %1148 ]
  %1155 = phi i32* [ %1147, %1141 ], [ %1150, %1148 ]
  %1156 = bitcast i32* %1155 to i8*
  %1157 = bitcast i32* %1138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1156, i8* align 4 %1157, i64 %1154, i1 false) #8
  %1158 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1129, i64 0, i32 1
  %1159 = bitcast %union.TfLitePtrUnion* %1158 to i64**
  %1160 = load i64*, i64** %1159, align 8
  br label %1161

1161:                                             ; preds = %1131, %1153
  %1162 = phi i64* [ %1160, %1153 ], [ null, %1131 ]
  call void @_ZN6tflite13optimized_ops7PadImplIllEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* nonnull dereferenceable(44) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %28, i64* %1127, i64* nonnull %27, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %29, i64* %1162) #8
  %1163 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 0
  %1164 = load i32, i32* %1163, align 8
  %1165 = icmp sgt i32 %1164, 5
  br i1 %1165, label %1166, label %1172

1166:                                             ; preds = %1161
  %1167 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %29, i64 0, i32 1, i32 0
  %1168 = load i32*, i32** %1167, align 8
  %1169 = icmp eq i32* %1168, null
  br i1 %1169, label %1172, label %1170

1170:                                             ; preds = %1166
  %1171 = bitcast i32* %1168 to i8*
  call void @_ZdaPv(i8* %1171) #9
  br label %1172

1172:                                             ; preds = %1161, %1166, %1170
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1128) #8
  %1173 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 0
  %1174 = load i32, i32* %1173, align 8
  %1175 = icmp sgt i32 %1174, 5
  br i1 %1175, label %1176, label %1182

1176:                                             ; preds = %1172
  %1177 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %28, i64 0, i32 1, i32 0
  %1178 = load i32*, i32** %1177, align 8
  %1179 = icmp eq i32* %1178, null
  br i1 %1179, label %1182, label %1180

1180:                                             ; preds = %1176
  %1181 = bitcast i32* %1178 to i8*
  call void @_ZdaPv(i8* %1181) #9
  br label %1182

1182:                                             ; preds = %1172, %1176, %1180
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1094) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1093) #8
  br label %1187

1183:                                             ; preds = %318
  %1184 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1185 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1184, align 8
  %1186 = call i8* @TfLiteTypeGetName(i32 %322) #8
  call void (%struct.TfLiteContext*, i8*, ...) %1185(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.28, i64 0, i64 0), i8* %1186) #8
  br label %1187

1187:                                             ; preds = %793, %784, %770, %775, %569, %560, %546, %551, %1082, %1182, %537, %446, %672, %761, %896, %985, %1183
  %1188 = phi i32 [ 1, %1183 ], [ 0, %985 ], [ 0, %896 ], [ 0, %761 ], [ 0, %672 ], [ 0, %446 ], [ 0, %537 ], [ 0, %1182 ], [ 0, %1082 ], [ 1, %551 ], [ 1, %546 ], [ 1, %560 ], [ 1, %569 ], [ 1, %775 ], [ 1, %770 ], [ 1, %784 ], [ 1, %793 ]
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %209) #8
  br label %1189

1189:                                             ; preds = %205, %1187, %190, %182
  %1190 = phi i32 [ 1, %182 ], [ %191, %190 ], [ %1188, %1187 ], [ 1, %205 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #8
  ret i32 %1190
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin12Register_PADEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin24Register_PAD_GENERIC_OPTEvE1r
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin18Register_PADV2_REFEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin18Register_PADV2_REFEvE1r
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin26Register_PADV2_GENERIC_OPTEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin26Register_PADV2_GENERIC_OPTEvE1r
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin14Register_PADV2Ev() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin26Register_PADV2_GENERIC_OPTEvE1r
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops7PadImplIffEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* dereferenceable(44), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #6 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca [4 x i32], align 16
  %10 = bitcast [4 x i32]* %9 to i8*
  %11 = alloca [4 x i32], align 16
  %12 = bitcast [4 x i32]* %11 to i8*
  %13 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %14, align 8, !alias.scope !125
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 8, !noalias !125
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  tail call void @abort() #10, !noalias !125
  unreachable

19:                                               ; preds = %6
  store i32 4, i32* %14, align 8, !alias.scope !125
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !125
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !125
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !125
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !125
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !125
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !125
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !125
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !125
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !125
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !125
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !125
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !125
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !125
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !125
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !125
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !125
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !128

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !125
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !125
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !129

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !125
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !130

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !125
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %117) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 32, i1 false)
  %118 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %118, align 8, !alias.scope !131
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %120 = load i32, i32* %119, align 8, !noalias !131
  %121 = icmp sgt i32 %120, 4
  br i1 %121, label %122, label %123

122:                                              ; preds = %103
  tail call void @abort() #10, !noalias !131
  unreachable

123:                                              ; preds = %103
  store i32 4, i32* %118, align 8, !alias.scope !131
  %124 = sub i32 4, %120
  %125 = icmp sgt i32 %124, 0
  %126 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %125, label %127, label %207

127:                                              ; preds = %123
  %128 = bitcast %union.anon* %126 to [5 x i32]*
  %129 = zext i32 %124 to i64
  %130 = icmp ult i32 %124, 8
  br i1 %130, label %200, label %131

131:                                              ; preds = %127
  %132 = and i64 %129, 4294967288
  %133 = add nsw i64 %132, -8
  %134 = lshr exact i64 %133, 3
  %135 = add nuw nsw i64 %134, 1
  %136 = and i64 %135, 7
  %137 = icmp ult i64 %133, 56
  br i1 %137, label %185, label %138

138:                                              ; preds = %131
  %139 = sub nsw i64 %135, %136
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ 0, %138 ], [ %182, %140 ]
  %142 = phi i64 [ %139, %138 ], [ %183, %140 ]
  %143 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %141
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %144, align 8, !alias.scope !131
  %145 = getelementptr inbounds i32, i32* %143, i64 4
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !131
  %147 = or i64 %141, 8
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %147
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %149, align 8, !alias.scope !131
  %150 = getelementptr inbounds i32, i32* %148, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !131
  %152 = or i64 %141, 16
  %153 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %152
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %154, align 8, !alias.scope !131
  %155 = getelementptr inbounds i32, i32* %153, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !131
  %157 = or i64 %141, 24
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %157
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %159, align 8, !alias.scope !131
  %160 = getelementptr inbounds i32, i32* %158, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !131
  %162 = or i64 %141, 32
  %163 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %164, align 8, !alias.scope !131
  %165 = getelementptr inbounds i32, i32* %163, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !131
  %167 = or i64 %141, 40
  %168 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %167
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %169, align 8, !alias.scope !131
  %170 = getelementptr inbounds i32, i32* %168, i64 4
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !131
  %172 = or i64 %141, 48
  %173 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %172
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %174, align 8, !alias.scope !131
  %175 = getelementptr inbounds i32, i32* %173, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !131
  %177 = or i64 %141, 56
  %178 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %177
  %179 = bitcast i32* %178 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %179, align 8, !alias.scope !131
  %180 = getelementptr inbounds i32, i32* %178, i64 4
  %181 = bitcast i32* %180 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %181, align 8, !alias.scope !131
  %182 = add i64 %141, 64
  %183 = add i64 %142, -8
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %140, !llvm.loop !134

185:                                              ; preds = %140, %131
  %186 = phi i64 [ 0, %131 ], [ %182, %140 ]
  %187 = icmp eq i64 %136, 0
  br i1 %187, label %198, label %188

188:                                              ; preds = %185, %188
  %189 = phi i64 [ %195, %188 ], [ %186, %185 ]
  %190 = phi i64 [ %196, %188 ], [ %136, %185 ]
  %191 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %189
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %192, align 8, !alias.scope !131
  %193 = getelementptr inbounds i32, i32* %191, i64 4
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %194, align 8, !alias.scope !131
  %195 = add i64 %189, 8
  %196 = add i64 %190, -1
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %198, label %188, !llvm.loop !135

198:                                              ; preds = %188, %185
  %199 = icmp eq i64 %132, %129
  br i1 %199, label %207, label %200

200:                                              ; preds = %198, %127
  %201 = phi i64 [ 0, %127 ], [ %132, %198 ]
  br label %202

202:                                              ; preds = %200, %202
  %203 = phi i64 [ %205, %202 ], [ %201, %200 ]
  %204 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %203
  store i32 1, i32* %204, align 4, !alias.scope !131
  %205 = add nuw nsw i64 %203, 1
  %206 = icmp eq i64 %205, %129
  br i1 %206, label %207, label %202, !llvm.loop !136

207:                                              ; preds = %202, %198, %123
  %208 = bitcast %union.anon* %126 to i32*
  %209 = sext i32 %124 to i64
  %210 = getelementptr inbounds i32, i32* %208, i64 %209
  %211 = bitcast i32* %210 to i8*
  %212 = icmp sgt i32 %120, 5
  %213 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %214 = getelementptr inbounds %union.anon, %union.anon* %213, i64 0, i32 0
  %215 = load i32*, i32** %214, align 8, !noalias !131
  %216 = bitcast %union.anon* %213 to i32*
  %217 = select i1 %212, i32* %215, i32* %216
  %218 = bitcast i32* %217 to i8*
  %219 = sext i32 %120 to i64
  %220 = shl nsw i64 %219, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %211, i8* align 4 %218, i64 %220, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %221 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 0
  %222 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 1
  %223 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 2
  %224 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 16, i1 false)
  %225 = getelementptr inbounds %union.anon, %union.anon* %126, i64 0, i32 0
  %226 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 2
  %227 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 0
  %228 = load i8, i8* %227, align 4
  %229 = icmp sgt i8 %228, 0
  br i1 %229, label %230, label %309

230:                                              ; preds = %207
  %231 = sext i8 %228 to i64
  %232 = sext i8 %228 to i64
  %233 = icmp ult i8 %228, 8
  br i1 %233, label %234, label %236

234:                                              ; preds = %307, %236, %230
  %235 = phi i64 [ 0, %236 ], [ 0, %230 ], [ %246, %307 ]
  br label %316

236:                                              ; preds = %230
  %237 = add nsw i64 %232, -1
  %238 = sext i8 %228 to i32
  %239 = sub nsw i32 4, %238
  %240 = trunc i64 %237 to i32
  %241 = add i32 %239, %240
  %242 = icmp slt i32 %241, %239
  %243 = icmp ugt i64 %237, 4294967295
  %244 = or i1 %242, %243
  br i1 %244, label %234, label %245

245:                                              ; preds = %236
  %246 = and i64 %232, -8
  %247 = add nsw i64 %246, -8
  %248 = lshr exact i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 1
  %251 = icmp eq i64 %247, 0
  br i1 %251, label %289, label %252

252:                                              ; preds = %245
  %253 = sub nuw nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %286, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %287, %254 ]
  %257 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %255
  %258 = bitcast i32* %257 to <4 x i32>*
  %259 = load <4 x i32>, <4 x i32>* %258, align 4
  %260 = getelementptr inbounds i32, i32* %257, i64 4
  %261 = bitcast i32* %260 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4
  %263 = or i64 %255, 4
  %264 = sub i64 %263, %231
  %265 = shl i64 %264, 32
  %266 = ashr exact i64 %265, 32
  %267 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %266
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> %259, <4 x i32>* %268, align 4
  %269 = getelementptr inbounds i32, i32* %267, i64 4
  %270 = bitcast i32* %269 to <4 x i32>*
  store <4 x i32> %262, <4 x i32>* %270, align 4
  %271 = or i64 %255, 8
  %272 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %271
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4
  %275 = getelementptr inbounds i32, i32* %272, i64 4
  %276 = bitcast i32* %275 to <4 x i32>*
  %277 = load <4 x i32>, <4 x i32>* %276, align 4
  %278 = or i64 %255, 12
  %279 = sub i64 %278, %231
  %280 = shl i64 %279, 32
  %281 = ashr exact i64 %280, 32
  %282 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %281
  %283 = bitcast i32* %282 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %283, align 4
  %284 = getelementptr inbounds i32, i32* %282, i64 4
  %285 = bitcast i32* %284 to <4 x i32>*
  store <4 x i32> %277, <4 x i32>* %285, align 4
  %286 = add i64 %255, 16
  %287 = add i64 %256, -2
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %289, label %254, !llvm.loop !137

289:                                              ; preds = %254, %245
  %290 = phi i64 [ 0, %245 ], [ %286, %254 ]
  %291 = icmp eq i64 %250, 0
  br i1 %291, label %307, label %292

292:                                              ; preds = %289
  %293 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %290
  %294 = bitcast i32* %293 to <4 x i32>*
  %295 = load <4 x i32>, <4 x i32>* %294, align 4
  %296 = getelementptr inbounds i32, i32* %293, i64 4
  %297 = bitcast i32* %296 to <4 x i32>*
  %298 = load <4 x i32>, <4 x i32>* %297, align 4
  %299 = or i64 %290, 4
  %300 = sub i64 %299, %231
  %301 = shl i64 %300, 32
  %302 = ashr exact i64 %301, 32
  %303 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %302
  %304 = bitcast i32* %303 to <4 x i32>*
  store <4 x i32> %295, <4 x i32>* %304, align 4
  %305 = getelementptr inbounds i32, i32* %303, i64 4
  %306 = bitcast i32* %305 to <4 x i32>*
  store <4 x i32> %298, <4 x i32>* %306, align 4
  br label %307

307:                                              ; preds = %289, %292
  %308 = icmp eq i64 %246, %232
  br i1 %308, label %309, label %234

309:                                              ; preds = %316, %307, %207
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8
  %310 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 0
  %311 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 1
  %312 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 2
  %313 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 0, i64 16, i1 false)
  %314 = load i8, i8* %226, align 4
  %315 = icmp sgt i8 %314, 0
  br i1 %315, label %327, label %406

316:                                              ; preds = %234, %316
  %317 = phi i64 [ %325, %316 ], [ %235, %234 ]
  %318 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %317
  %319 = load i32, i32* %318, align 4
  %320 = add nuw i64 %317, 4
  %321 = sub i64 %320, %231
  %322 = shl i64 %321, 32
  %323 = ashr exact i64 %322, 32
  %324 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %323
  store i32 %319, i32* %324, align 4
  %325 = add nuw nsw i64 %317, 1
  %326 = icmp slt i64 %325, %232
  br i1 %326, label %316, label %309, !llvm.loop !138

327:                                              ; preds = %309
  %328 = sext i8 %314 to i64
  %329 = sext i8 %314 to i64
  %330 = icmp ult i8 %314, 8
  br i1 %330, label %331, label %333

331:                                              ; preds = %404, %333, %327
  %332 = phi i64 [ 0, %333 ], [ 0, %327 ], [ %343, %404 ]
  br label %453

333:                                              ; preds = %327
  %334 = add nsw i64 %329, -1
  %335 = sext i8 %314 to i32
  %336 = sub nsw i32 4, %335
  %337 = trunc i64 %334 to i32
  %338 = add i32 %336, %337
  %339 = icmp slt i32 %338, %336
  %340 = icmp ugt i64 %334, 4294967295
  %341 = or i1 %339, %340
  br i1 %341, label %331, label %342

342:                                              ; preds = %333
  %343 = and i64 %329, -8
  %344 = add nsw i64 %343, -8
  %345 = lshr exact i64 %344, 3
  %346 = add nuw nsw i64 %345, 1
  %347 = and i64 %346, 1
  %348 = icmp eq i64 %344, 0
  br i1 %348, label %386, label %349

349:                                              ; preds = %342
  %350 = sub nuw nsw i64 %346, %347
  br label %351

351:                                              ; preds = %351, %349
  %352 = phi i64 [ 0, %349 ], [ %383, %351 ]
  %353 = phi i64 [ %350, %349 ], [ %384, %351 ]
  %354 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %352
  %355 = bitcast i32* %354 to <4 x i32>*
  %356 = load <4 x i32>, <4 x i32>* %355, align 4
  %357 = getelementptr inbounds i32, i32* %354, i64 4
  %358 = bitcast i32* %357 to <4 x i32>*
  %359 = load <4 x i32>, <4 x i32>* %358, align 4
  %360 = or i64 %352, 4
  %361 = sub i64 %360, %328
  %362 = shl i64 %361, 32
  %363 = ashr exact i64 %362, 32
  %364 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %363
  %365 = bitcast i32* %364 to <4 x i32>*
  store <4 x i32> %356, <4 x i32>* %365, align 4
  %366 = getelementptr inbounds i32, i32* %364, i64 4
  %367 = bitcast i32* %366 to <4 x i32>*
  store <4 x i32> %359, <4 x i32>* %367, align 4
  %368 = or i64 %352, 8
  %369 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %368
  %370 = bitcast i32* %369 to <4 x i32>*
  %371 = load <4 x i32>, <4 x i32>* %370, align 4
  %372 = getelementptr inbounds i32, i32* %369, i64 4
  %373 = bitcast i32* %372 to <4 x i32>*
  %374 = load <4 x i32>, <4 x i32>* %373, align 4
  %375 = or i64 %352, 12
  %376 = sub i64 %375, %328
  %377 = shl i64 %376, 32
  %378 = ashr exact i64 %377, 32
  %379 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %378
  %380 = bitcast i32* %379 to <4 x i32>*
  store <4 x i32> %371, <4 x i32>* %380, align 4
  %381 = getelementptr inbounds i32, i32* %379, i64 4
  %382 = bitcast i32* %381 to <4 x i32>*
  store <4 x i32> %374, <4 x i32>* %382, align 4
  %383 = add i64 %352, 16
  %384 = add i64 %353, -2
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %386, label %351, !llvm.loop !139

386:                                              ; preds = %351, %342
  %387 = phi i64 [ 0, %342 ], [ %383, %351 ]
  %388 = icmp eq i64 %347, 0
  br i1 %388, label %404, label %389

389:                                              ; preds = %386
  %390 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %387
  %391 = bitcast i32* %390 to <4 x i32>*
  %392 = load <4 x i32>, <4 x i32>* %391, align 4
  %393 = getelementptr inbounds i32, i32* %390, i64 4
  %394 = bitcast i32* %393 to <4 x i32>*
  %395 = load <4 x i32>, <4 x i32>* %394, align 4
  %396 = or i64 %387, 4
  %397 = sub i64 %396, %328
  %398 = shl i64 %397, 32
  %399 = ashr exact i64 %398, 32
  %400 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %399
  %401 = bitcast i32* %400 to <4 x i32>*
  store <4 x i32> %392, <4 x i32>* %401, align 4
  %402 = getelementptr inbounds i32, i32* %400, i64 4
  %403 = bitcast i32* %402 to <4 x i32>*
  store <4 x i32> %395, <4 x i32>* %403, align 4
  br label %404

404:                                              ; preds = %386, %389
  %405 = icmp eq i64 %343, %329
  br i1 %405, label %406, label %331

406:                                              ; preds = %453, %404, %309
  %407 = load i32, i32* %118, align 8
  %408 = icmp sgt i32 %407, 5
  br i1 %408, label %409, label %414

409:                                              ; preds = %406
  %410 = load i32*, i32** %225, align 8
  %411 = getelementptr inbounds i32, i32* %410, i64 1
  %412 = getelementptr inbounds i32, i32* %410, i64 2
  %413 = getelementptr inbounds i32, i32* %410, i64 3
  br label %421

414:                                              ; preds = %406
  %415 = bitcast %union.anon* %126 to [5 x i32]*
  %416 = getelementptr inbounds [5 x i32], [5 x i32]* %415, i64 0, i64 1
  %417 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %418 = bitcast [16 x i8]* %417 to i32*
  %419 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %420 = bitcast i8* %419 to i32*
  br label %421

421:                                              ; preds = %409, %414
  %422 = phi i32* [ %412, %409 ], [ %418, %414 ]
  %423 = phi i32* [ %410, %409 ], [ %208, %414 ]
  %424 = phi i32* [ %411, %409 ], [ %416, %414 ]
  %425 = phi i32* [ %413, %409 ], [ %420, %414 ]
  %426 = load i32, i32* %424, align 4
  %427 = load i32, i32* %423, align 4
  %428 = load i32, i32* %422, align 4
  %429 = load i32, i32* %425, align 4
  %430 = load i32, i32* %221, align 16
  %431 = load i32, i32* %222, align 4
  %432 = load i32, i32* %223, align 8
  %433 = load i32, i32* %224, align 4
  %434 = bitcast float* %3 to i32*
  %435 = load i32, i32* %434, align 4
  %436 = icmp sgt i32 %427, 0
  br i1 %436, label %437, label %472

437:                                              ; preds = %421
  %438 = load i32, i32* %313, align 4
  %439 = load i32, i32* %312, align 8
  %440 = load i32, i32* %311, align 4
  %441 = load i32, i32* %310, align 16
  %442 = icmp sgt i32 %426, 0
  %443 = icmp sgt i32 %428, 0
  %444 = icmp sgt i32 %429, 0
  %445 = sub nsw i32 %427, %441
  %446 = sub nsw i32 %426, %440
  %447 = sub nsw i32 %428, %439
  %448 = sub nsw i32 %429, %438
  %449 = and i32 %429, 1
  %450 = icmp eq i32 %429, 1
  %451 = sub i32 %429, %449
  %452 = icmp eq i32 %449, 0
  br label %464

453:                                              ; preds = %331, %453
  %454 = phi i64 [ %462, %453 ], [ %332, %331 ]
  %455 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %454
  %456 = load i32, i32* %455, align 4
  %457 = add nuw i64 %454, 4
  %458 = sub i64 %457, %328
  %459 = shl i64 %458, 32
  %460 = ashr exact i64 %459, 32
  %461 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %460
  store i32 %456, i32* %461, align 4
  %462 = add nuw nsw i64 %454, 1
  %463 = icmp slt i64 %462, %329
  br i1 %463, label %453, label %406, !llvm.loop !140

464:                                              ; preds = %498, %437
  %465 = phi i32 [ 0, %437 ], [ %501, %498 ]
  %466 = phi float* [ %5, %437 ], [ %500, %498 ]
  %467 = phi float* [ %2, %437 ], [ %499, %498 ]
  br i1 %442, label %468, label %498

468:                                              ; preds = %464
  %469 = icmp slt i32 %465, %430
  %470 = icmp sge i32 %465, %445
  %471 = or i1 %470, %469
  br label %489

472:                                              ; preds = %498, %421
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  br i1 %408, label %473, label %479

473:                                              ; preds = %472
  %474 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %475 = load i32*, i32** %474, align 8
  %476 = icmp eq i32* %475, null
  br i1 %476, label %479, label %477

477:                                              ; preds = %473
  %478 = bitcast i32* %475 to i8*
  tail call void @_ZdaPv(i8* %478) #9
  br label %479

479:                                              ; preds = %472, %473, %477
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %117) #8
  %480 = load i32, i32* %14, align 8
  %481 = icmp sgt i32 %480, 5
  br i1 %481, label %482, label %488

482:                                              ; preds = %479
  %483 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %484 = load i32*, i32** %483, align 8
  %485 = icmp eq i32* %484, null
  br i1 %485, label %488, label %486

486:                                              ; preds = %482
  %487 = bitcast i32* %484 to i8*
  tail call void @_ZdaPv(i8* %487) #9
  br label %488

488:                                              ; preds = %479, %482, %486
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8
  ret void

489:                                              ; preds = %512, %468
  %490 = phi i32 [ 0, %468 ], [ %515, %512 ]
  %491 = phi float* [ %466, %468 ], [ %514, %512 ]
  %492 = phi float* [ %467, %468 ], [ %513, %512 ]
  br i1 %443, label %493, label %512

493:                                              ; preds = %489
  %494 = icmp slt i32 %490, %431
  %495 = or i1 %471, %494
  %496 = icmp sge i32 %490, %446
  %497 = or i1 %496, %495
  br label %503

498:                                              ; preds = %512, %464
  %499 = phi float* [ %467, %464 ], [ %513, %512 ]
  %500 = phi float* [ %466, %464 ], [ %514, %512 ]
  %501 = add nuw nsw i32 %465, 1
  %502 = icmp eq i32 %501, %427
  br i1 %502, label %472, label %464

503:                                              ; preds = %538, %493
  %504 = phi i32 [ 0, %493 ], [ %541, %538 ]
  %505 = phi float* [ %491, %493 ], [ %540, %538 ]
  %506 = phi float* [ %492, %493 ], [ %539, %538 ]
  br i1 %444, label %507, label %538

507:                                              ; preds = %503
  %508 = icmp slt i32 %504, %432
  %509 = or i1 %497, %508
  %510 = icmp sge i32 %504, %447
  %511 = or i1 %510, %509
  br i1 %450, label %517, label %543

512:                                              ; preds = %538, %489
  %513 = phi float* [ %492, %489 ], [ %539, %538 ]
  %514 = phi float* [ %491, %489 ], [ %540, %538 ]
  %515 = add nuw nsw i32 %490, 1
  %516 = icmp eq i32 %515, %426
  br i1 %516, label %498, label %489

517:                                              ; preds = %572, %507
  %518 = phi float* [ undef, %507 ], [ %574, %572 ]
  %519 = phi float* [ undef, %507 ], [ %576, %572 ]
  %520 = phi i32 [ 0, %507 ], [ %577, %572 ]
  %521 = phi float* [ %505, %507 ], [ %576, %572 ]
  %522 = phi float* [ %506, %507 ], [ %574, %572 ]
  br i1 %452, label %538, label %523

523:                                              ; preds = %517
  %524 = icmp slt i32 %520, %433
  %525 = or i1 %511, %524
  %526 = xor i1 %525, true
  %527 = icmp slt i32 %520, %448
  %528 = and i1 %527, %526
  br i1 %528, label %529, label %533

529:                                              ; preds = %523
  %530 = getelementptr inbounds float, float* %522, i64 1
  %531 = bitcast float* %522 to i32*
  %532 = load i32, i32* %531, align 4
  br label %533

533:                                              ; preds = %529, %523
  %534 = phi i32 [ %532, %529 ], [ %435, %523 ]
  %535 = phi float* [ %530, %529 ], [ %522, %523 ]
  %536 = bitcast float* %521 to i32*
  store i32 %534, i32* %536, align 4
  %537 = getelementptr inbounds float, float* %521, i64 1
  br label %538

538:                                              ; preds = %533, %517, %503
  %539 = phi float* [ %506, %503 ], [ %518, %517 ], [ %535, %533 ]
  %540 = phi float* [ %505, %503 ], [ %519, %517 ], [ %537, %533 ]
  %541 = add nuw nsw i32 %504, 1
  %542 = icmp eq i32 %541, %428
  br i1 %542, label %512, label %503

543:                                              ; preds = %507, %572
  %544 = phi i32 [ %577, %572 ], [ 0, %507 ]
  %545 = phi float* [ %576, %572 ], [ %505, %507 ]
  %546 = phi float* [ %574, %572 ], [ %506, %507 ]
  %547 = phi i32 [ %578, %572 ], [ %451, %507 ]
  %548 = icmp slt i32 %544, %433
  %549 = or i1 %511, %548
  %550 = xor i1 %549, true
  %551 = icmp slt i32 %544, %448
  %552 = and i1 %551, %550
  br i1 %552, label %553, label %557

553:                                              ; preds = %543
  %554 = getelementptr inbounds float, float* %546, i64 1
  %555 = bitcast float* %546 to i32*
  %556 = load i32, i32* %555, align 4
  br label %557

557:                                              ; preds = %543, %553
  %558 = phi i32 [ %556, %553 ], [ %435, %543 ]
  %559 = phi float* [ %554, %553 ], [ %546, %543 ]
  %560 = bitcast float* %545 to i32*
  store i32 %558, i32* %560, align 4
  %561 = getelementptr inbounds float, float* %545, i64 1
  %562 = or i32 %544, 1
  %563 = icmp slt i32 %562, %433
  %564 = or i1 %511, %563
  %565 = xor i1 %564, true
  %566 = icmp slt i32 %562, %448
  %567 = and i1 %566, %565
  br i1 %567, label %568, label %572

568:                                              ; preds = %557
  %569 = getelementptr inbounds float, float* %559, i64 1
  %570 = bitcast float* %559 to i32*
  %571 = load i32, i32* %570, align 4
  br label %572

572:                                              ; preds = %568, %557
  %573 = phi i32 [ %571, %568 ], [ %435, %557 ]
  %574 = phi float* [ %569, %568 ], [ %559, %557 ]
  %575 = bitcast float* %561 to i32*
  store i32 %573, i32* %575, align 4
  %576 = getelementptr inbounds float, float* %545, i64 2
  %577 = add nuw nsw i32 %544, 2
  %578 = add i32 %547, -2
  %579 = icmp eq i32 %578, 0
  br i1 %579, label %517, label %543
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops7PadImplIhhEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* dereferenceable(44), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #6 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca [4 x i32], align 16
  %10 = bitcast [4 x i32]* %9 to i8*
  %11 = alloca [4 x i32], align 16
  %12 = bitcast [4 x i32]* %11 to i8*
  %13 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %14, align 8, !alias.scope !141
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 8, !noalias !141
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  tail call void @abort() #10, !noalias !141
  unreachable

19:                                               ; preds = %6
  store i32 4, i32* %14, align 8, !alias.scope !141
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !141
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !141
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !141
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !141
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !141
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !141
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !141
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !141
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !141
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !141
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !141
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !141
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !141
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !141
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !141
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !141
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !144

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !141
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !141
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !145

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !141
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !146

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !141
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %117) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 32, i1 false)
  %118 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %118, align 8, !alias.scope !147
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %120 = load i32, i32* %119, align 8, !noalias !147
  %121 = icmp sgt i32 %120, 4
  br i1 %121, label %122, label %123

122:                                              ; preds = %103
  tail call void @abort() #10, !noalias !147
  unreachable

123:                                              ; preds = %103
  store i32 4, i32* %118, align 8, !alias.scope !147
  %124 = sub i32 4, %120
  %125 = icmp sgt i32 %124, 0
  %126 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %125, label %127, label %207

127:                                              ; preds = %123
  %128 = bitcast %union.anon* %126 to [5 x i32]*
  %129 = zext i32 %124 to i64
  %130 = icmp ult i32 %124, 8
  br i1 %130, label %200, label %131

131:                                              ; preds = %127
  %132 = and i64 %129, 4294967288
  %133 = add nsw i64 %132, -8
  %134 = lshr exact i64 %133, 3
  %135 = add nuw nsw i64 %134, 1
  %136 = and i64 %135, 7
  %137 = icmp ult i64 %133, 56
  br i1 %137, label %185, label %138

138:                                              ; preds = %131
  %139 = sub nsw i64 %135, %136
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ 0, %138 ], [ %182, %140 ]
  %142 = phi i64 [ %139, %138 ], [ %183, %140 ]
  %143 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %141
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %144, align 8, !alias.scope !147
  %145 = getelementptr inbounds i32, i32* %143, i64 4
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !147
  %147 = or i64 %141, 8
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %147
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %149, align 8, !alias.scope !147
  %150 = getelementptr inbounds i32, i32* %148, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !147
  %152 = or i64 %141, 16
  %153 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %152
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %154, align 8, !alias.scope !147
  %155 = getelementptr inbounds i32, i32* %153, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !147
  %157 = or i64 %141, 24
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %157
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %159, align 8, !alias.scope !147
  %160 = getelementptr inbounds i32, i32* %158, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !147
  %162 = or i64 %141, 32
  %163 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %164, align 8, !alias.scope !147
  %165 = getelementptr inbounds i32, i32* %163, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !147
  %167 = or i64 %141, 40
  %168 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %167
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %169, align 8, !alias.scope !147
  %170 = getelementptr inbounds i32, i32* %168, i64 4
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !147
  %172 = or i64 %141, 48
  %173 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %172
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %174, align 8, !alias.scope !147
  %175 = getelementptr inbounds i32, i32* %173, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !147
  %177 = or i64 %141, 56
  %178 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %177
  %179 = bitcast i32* %178 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %179, align 8, !alias.scope !147
  %180 = getelementptr inbounds i32, i32* %178, i64 4
  %181 = bitcast i32* %180 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %181, align 8, !alias.scope !147
  %182 = add i64 %141, 64
  %183 = add i64 %142, -8
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %140, !llvm.loop !150

185:                                              ; preds = %140, %131
  %186 = phi i64 [ 0, %131 ], [ %182, %140 ]
  %187 = icmp eq i64 %136, 0
  br i1 %187, label %198, label %188

188:                                              ; preds = %185, %188
  %189 = phi i64 [ %195, %188 ], [ %186, %185 ]
  %190 = phi i64 [ %196, %188 ], [ %136, %185 ]
  %191 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %189
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %192, align 8, !alias.scope !147
  %193 = getelementptr inbounds i32, i32* %191, i64 4
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %194, align 8, !alias.scope !147
  %195 = add i64 %189, 8
  %196 = add i64 %190, -1
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %198, label %188, !llvm.loop !151

198:                                              ; preds = %188, %185
  %199 = icmp eq i64 %132, %129
  br i1 %199, label %207, label %200

200:                                              ; preds = %198, %127
  %201 = phi i64 [ 0, %127 ], [ %132, %198 ]
  br label %202

202:                                              ; preds = %200, %202
  %203 = phi i64 [ %205, %202 ], [ %201, %200 ]
  %204 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %203
  store i32 1, i32* %204, align 4, !alias.scope !147
  %205 = add nuw nsw i64 %203, 1
  %206 = icmp eq i64 %205, %129
  br i1 %206, label %207, label %202, !llvm.loop !152

207:                                              ; preds = %202, %198, %123
  %208 = bitcast %union.anon* %126 to i32*
  %209 = sext i32 %124 to i64
  %210 = getelementptr inbounds i32, i32* %208, i64 %209
  %211 = bitcast i32* %210 to i8*
  %212 = icmp sgt i32 %120, 5
  %213 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %214 = getelementptr inbounds %union.anon, %union.anon* %213, i64 0, i32 0
  %215 = load i32*, i32** %214, align 8, !noalias !147
  %216 = bitcast %union.anon* %213 to i32*
  %217 = select i1 %212, i32* %215, i32* %216
  %218 = bitcast i32* %217 to i8*
  %219 = sext i32 %120 to i64
  %220 = shl nsw i64 %219, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %211, i8* align 4 %218, i64 %220, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %221 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 0
  %222 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 1
  %223 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 2
  %224 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 16, i1 false)
  %225 = getelementptr inbounds %union.anon, %union.anon* %126, i64 0, i32 0
  %226 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 2
  %227 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 0
  %228 = load i8, i8* %227, align 4
  %229 = icmp sgt i8 %228, 0
  br i1 %229, label %230, label %309

230:                                              ; preds = %207
  %231 = sext i8 %228 to i64
  %232 = sext i8 %228 to i64
  %233 = icmp ult i8 %228, 8
  br i1 %233, label %234, label %236

234:                                              ; preds = %307, %236, %230
  %235 = phi i64 [ 0, %236 ], [ 0, %230 ], [ %246, %307 ]
  br label %316

236:                                              ; preds = %230
  %237 = add nsw i64 %232, -1
  %238 = sext i8 %228 to i32
  %239 = sub nsw i32 4, %238
  %240 = trunc i64 %237 to i32
  %241 = add i32 %239, %240
  %242 = icmp slt i32 %241, %239
  %243 = icmp ugt i64 %237, 4294967295
  %244 = or i1 %242, %243
  br i1 %244, label %234, label %245

245:                                              ; preds = %236
  %246 = and i64 %232, -8
  %247 = add nsw i64 %246, -8
  %248 = lshr exact i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 1
  %251 = icmp eq i64 %247, 0
  br i1 %251, label %289, label %252

252:                                              ; preds = %245
  %253 = sub nuw nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %286, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %287, %254 ]
  %257 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %255
  %258 = bitcast i32* %257 to <4 x i32>*
  %259 = load <4 x i32>, <4 x i32>* %258, align 4
  %260 = getelementptr inbounds i32, i32* %257, i64 4
  %261 = bitcast i32* %260 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4
  %263 = or i64 %255, 4
  %264 = sub i64 %263, %231
  %265 = shl i64 %264, 32
  %266 = ashr exact i64 %265, 32
  %267 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %266
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> %259, <4 x i32>* %268, align 4
  %269 = getelementptr inbounds i32, i32* %267, i64 4
  %270 = bitcast i32* %269 to <4 x i32>*
  store <4 x i32> %262, <4 x i32>* %270, align 4
  %271 = or i64 %255, 8
  %272 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %271
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4
  %275 = getelementptr inbounds i32, i32* %272, i64 4
  %276 = bitcast i32* %275 to <4 x i32>*
  %277 = load <4 x i32>, <4 x i32>* %276, align 4
  %278 = or i64 %255, 12
  %279 = sub i64 %278, %231
  %280 = shl i64 %279, 32
  %281 = ashr exact i64 %280, 32
  %282 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %281
  %283 = bitcast i32* %282 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %283, align 4
  %284 = getelementptr inbounds i32, i32* %282, i64 4
  %285 = bitcast i32* %284 to <4 x i32>*
  store <4 x i32> %277, <4 x i32>* %285, align 4
  %286 = add i64 %255, 16
  %287 = add i64 %256, -2
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %289, label %254, !llvm.loop !153

289:                                              ; preds = %254, %245
  %290 = phi i64 [ 0, %245 ], [ %286, %254 ]
  %291 = icmp eq i64 %250, 0
  br i1 %291, label %307, label %292

292:                                              ; preds = %289
  %293 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %290
  %294 = bitcast i32* %293 to <4 x i32>*
  %295 = load <4 x i32>, <4 x i32>* %294, align 4
  %296 = getelementptr inbounds i32, i32* %293, i64 4
  %297 = bitcast i32* %296 to <4 x i32>*
  %298 = load <4 x i32>, <4 x i32>* %297, align 4
  %299 = or i64 %290, 4
  %300 = sub i64 %299, %231
  %301 = shl i64 %300, 32
  %302 = ashr exact i64 %301, 32
  %303 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %302
  %304 = bitcast i32* %303 to <4 x i32>*
  store <4 x i32> %295, <4 x i32>* %304, align 4
  %305 = getelementptr inbounds i32, i32* %303, i64 4
  %306 = bitcast i32* %305 to <4 x i32>*
  store <4 x i32> %298, <4 x i32>* %306, align 4
  br label %307

307:                                              ; preds = %289, %292
  %308 = icmp eq i64 %246, %232
  br i1 %308, label %309, label %234

309:                                              ; preds = %316, %307, %207
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8
  %310 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 0
  %311 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 1
  %312 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 2
  %313 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 0, i64 16, i1 false)
  %314 = load i8, i8* %226, align 4
  %315 = icmp sgt i8 %314, 0
  br i1 %315, label %327, label %406

316:                                              ; preds = %234, %316
  %317 = phi i64 [ %325, %316 ], [ %235, %234 ]
  %318 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %317
  %319 = load i32, i32* %318, align 4
  %320 = add nuw i64 %317, 4
  %321 = sub i64 %320, %231
  %322 = shl i64 %321, 32
  %323 = ashr exact i64 %322, 32
  %324 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %323
  store i32 %319, i32* %324, align 4
  %325 = add nuw nsw i64 %317, 1
  %326 = icmp slt i64 %325, %232
  br i1 %326, label %316, label %309, !llvm.loop !154

327:                                              ; preds = %309
  %328 = sext i8 %314 to i64
  %329 = sext i8 %314 to i64
  %330 = icmp ult i8 %314, 8
  br i1 %330, label %331, label %333

331:                                              ; preds = %404, %333, %327
  %332 = phi i64 [ 0, %333 ], [ 0, %327 ], [ %343, %404 ]
  br label %452

333:                                              ; preds = %327
  %334 = add nsw i64 %329, -1
  %335 = sext i8 %314 to i32
  %336 = sub nsw i32 4, %335
  %337 = trunc i64 %334 to i32
  %338 = add i32 %336, %337
  %339 = icmp slt i32 %338, %336
  %340 = icmp ugt i64 %334, 4294967295
  %341 = or i1 %339, %340
  br i1 %341, label %331, label %342

342:                                              ; preds = %333
  %343 = and i64 %329, -8
  %344 = add nsw i64 %343, -8
  %345 = lshr exact i64 %344, 3
  %346 = add nuw nsw i64 %345, 1
  %347 = and i64 %346, 1
  %348 = icmp eq i64 %344, 0
  br i1 %348, label %386, label %349

349:                                              ; preds = %342
  %350 = sub nuw nsw i64 %346, %347
  br label %351

351:                                              ; preds = %351, %349
  %352 = phi i64 [ 0, %349 ], [ %383, %351 ]
  %353 = phi i64 [ %350, %349 ], [ %384, %351 ]
  %354 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %352
  %355 = bitcast i32* %354 to <4 x i32>*
  %356 = load <4 x i32>, <4 x i32>* %355, align 4
  %357 = getelementptr inbounds i32, i32* %354, i64 4
  %358 = bitcast i32* %357 to <4 x i32>*
  %359 = load <4 x i32>, <4 x i32>* %358, align 4
  %360 = or i64 %352, 4
  %361 = sub i64 %360, %328
  %362 = shl i64 %361, 32
  %363 = ashr exact i64 %362, 32
  %364 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %363
  %365 = bitcast i32* %364 to <4 x i32>*
  store <4 x i32> %356, <4 x i32>* %365, align 4
  %366 = getelementptr inbounds i32, i32* %364, i64 4
  %367 = bitcast i32* %366 to <4 x i32>*
  store <4 x i32> %359, <4 x i32>* %367, align 4
  %368 = or i64 %352, 8
  %369 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %368
  %370 = bitcast i32* %369 to <4 x i32>*
  %371 = load <4 x i32>, <4 x i32>* %370, align 4
  %372 = getelementptr inbounds i32, i32* %369, i64 4
  %373 = bitcast i32* %372 to <4 x i32>*
  %374 = load <4 x i32>, <4 x i32>* %373, align 4
  %375 = or i64 %352, 12
  %376 = sub i64 %375, %328
  %377 = shl i64 %376, 32
  %378 = ashr exact i64 %377, 32
  %379 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %378
  %380 = bitcast i32* %379 to <4 x i32>*
  store <4 x i32> %371, <4 x i32>* %380, align 4
  %381 = getelementptr inbounds i32, i32* %379, i64 4
  %382 = bitcast i32* %381 to <4 x i32>*
  store <4 x i32> %374, <4 x i32>* %382, align 4
  %383 = add i64 %352, 16
  %384 = add i64 %353, -2
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %386, label %351, !llvm.loop !155

386:                                              ; preds = %351, %342
  %387 = phi i64 [ 0, %342 ], [ %383, %351 ]
  %388 = icmp eq i64 %347, 0
  br i1 %388, label %404, label %389

389:                                              ; preds = %386
  %390 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %387
  %391 = bitcast i32* %390 to <4 x i32>*
  %392 = load <4 x i32>, <4 x i32>* %391, align 4
  %393 = getelementptr inbounds i32, i32* %390, i64 4
  %394 = bitcast i32* %393 to <4 x i32>*
  %395 = load <4 x i32>, <4 x i32>* %394, align 4
  %396 = or i64 %387, 4
  %397 = sub i64 %396, %328
  %398 = shl i64 %397, 32
  %399 = ashr exact i64 %398, 32
  %400 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %399
  %401 = bitcast i32* %400 to <4 x i32>*
  store <4 x i32> %392, <4 x i32>* %401, align 4
  %402 = getelementptr inbounds i32, i32* %400, i64 4
  %403 = bitcast i32* %402 to <4 x i32>*
  store <4 x i32> %395, <4 x i32>* %403, align 4
  br label %404

404:                                              ; preds = %386, %389
  %405 = icmp eq i64 %343, %329
  br i1 %405, label %406, label %331

406:                                              ; preds = %452, %404, %309
  %407 = load i32, i32* %118, align 8
  %408 = icmp sgt i32 %407, 5
  br i1 %408, label %409, label %414

409:                                              ; preds = %406
  %410 = load i32*, i32** %225, align 8
  %411 = getelementptr inbounds i32, i32* %410, i64 1
  %412 = getelementptr inbounds i32, i32* %410, i64 2
  %413 = getelementptr inbounds i32, i32* %410, i64 3
  br label %421

414:                                              ; preds = %406
  %415 = bitcast %union.anon* %126 to [5 x i32]*
  %416 = getelementptr inbounds [5 x i32], [5 x i32]* %415, i64 0, i64 1
  %417 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %418 = bitcast [16 x i8]* %417 to i32*
  %419 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %420 = bitcast i8* %419 to i32*
  br label %421

421:                                              ; preds = %409, %414
  %422 = phi i32* [ %412, %409 ], [ %418, %414 ]
  %423 = phi i32* [ %410, %409 ], [ %208, %414 ]
  %424 = phi i32* [ %411, %409 ], [ %416, %414 ]
  %425 = phi i32* [ %413, %409 ], [ %420, %414 ]
  %426 = load i32, i32* %424, align 4
  %427 = load i32, i32* %423, align 4
  %428 = load i32, i32* %422, align 4
  %429 = load i32, i32* %425, align 4
  %430 = load i32, i32* %221, align 16
  %431 = load i32, i32* %222, align 4
  %432 = load i32, i32* %223, align 8
  %433 = load i32, i32* %224, align 4
  %434 = load i8, i8* %3, align 1
  %435 = icmp sgt i32 %427, 0
  br i1 %435, label %436, label %473

436:                                              ; preds = %421
  %437 = load i32, i32* %313, align 4
  %438 = load i32, i32* %312, align 8
  %439 = load i32, i32* %311, align 4
  %440 = load i32, i32* %310, align 16
  %441 = icmp sgt i32 %426, 0
  %442 = icmp sgt i32 %428, 0
  %443 = icmp sgt i32 %429, 0
  %444 = sub nsw i32 %427, %440
  %445 = sub nsw i32 %426, %439
  %446 = sub nsw i32 %428, %438
  %447 = sub nsw i32 %429, %437
  %448 = and i32 %429, 1
  %449 = icmp eq i32 %429, 1
  %450 = sub i32 %429, %448
  %451 = icmp eq i32 %448, 0
  br label %463

452:                                              ; preds = %331, %452
  %453 = phi i64 [ %461, %452 ], [ %332, %331 ]
  %454 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %453
  %455 = load i32, i32* %454, align 4
  %456 = add nuw i64 %453, 4
  %457 = sub i64 %456, %328
  %458 = shl i64 %457, 32
  %459 = ashr exact i64 %458, 32
  %460 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %459
  store i32 %455, i32* %460, align 4
  %461 = add nuw nsw i64 %453, 1
  %462 = icmp slt i64 %461, %329
  br i1 %462, label %452, label %406, !llvm.loop !156

463:                                              ; preds = %501, %436
  %464 = phi i32 [ 0, %436 ], [ %504, %501 ]
  %465 = phi i8* [ %5, %436 ], [ %503, %501 ]
  %466 = phi i8* [ %2, %436 ], [ %502, %501 ]
  br i1 %441, label %467, label %501

467:                                              ; preds = %463
  %468 = icmp slt i32 %464, %430
  %469 = icmp sge i32 %464, %444
  %470 = or i1 %469, %468
  br label %492

471:                                              ; preds = %501
  %472 = load i32, i32* %118, align 8
  br label %473

473:                                              ; preds = %471, %421
  %474 = phi i32 [ %472, %471 ], [ %407, %421 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  %475 = icmp sgt i32 %474, 5
  br i1 %475, label %476, label %482

476:                                              ; preds = %473
  %477 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %478 = load i32*, i32** %477, align 8
  %479 = icmp eq i32* %478, null
  br i1 %479, label %482, label %480

480:                                              ; preds = %476
  %481 = bitcast i32* %478 to i8*
  tail call void @_ZdaPv(i8* %481) #9
  br label %482

482:                                              ; preds = %473, %476, %480
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %117) #8
  %483 = load i32, i32* %14, align 8
  %484 = icmp sgt i32 %483, 5
  br i1 %484, label %485, label %491

485:                                              ; preds = %482
  %486 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %487 = load i32*, i32** %486, align 8
  %488 = icmp eq i32* %487, null
  br i1 %488, label %491, label %489

489:                                              ; preds = %485
  %490 = bitcast i32* %487 to i8*
  tail call void @_ZdaPv(i8* %490) #9
  br label %491

491:                                              ; preds = %482, %485, %489
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8
  ret void

492:                                              ; preds = %515, %467
  %493 = phi i32 [ 0, %467 ], [ %518, %515 ]
  %494 = phi i8* [ %465, %467 ], [ %517, %515 ]
  %495 = phi i8* [ %466, %467 ], [ %516, %515 ]
  br i1 %442, label %496, label %515

496:                                              ; preds = %492
  %497 = icmp slt i32 %493, %431
  %498 = or i1 %470, %497
  %499 = icmp sge i32 %493, %445
  %500 = or i1 %499, %498
  br label %506

501:                                              ; preds = %515, %463
  %502 = phi i8* [ %466, %463 ], [ %516, %515 ]
  %503 = phi i8* [ %465, %463 ], [ %517, %515 ]
  %504 = add nuw nsw i32 %464, 1
  %505 = icmp eq i32 %504, %427
  br i1 %505, label %471, label %463

506:                                              ; preds = %539, %496
  %507 = phi i32 [ 0, %496 ], [ %542, %539 ]
  %508 = phi i8* [ %494, %496 ], [ %541, %539 ]
  %509 = phi i8* [ %495, %496 ], [ %540, %539 ]
  br i1 %443, label %510, label %539

510:                                              ; preds = %506
  %511 = icmp slt i32 %507, %432
  %512 = or i1 %500, %511
  %513 = icmp sge i32 %507, %446
  %514 = or i1 %513, %512
  br i1 %449, label %520, label %544

515:                                              ; preds = %539, %492
  %516 = phi i8* [ %495, %492 ], [ %540, %539 ]
  %517 = phi i8* [ %494, %492 ], [ %541, %539 ]
  %518 = add nuw nsw i32 %493, 1
  %519 = icmp eq i32 %518, %426
  br i1 %519, label %501, label %492

520:                                              ; preds = %570, %510
  %521 = phi i8* [ undef, %510 ], [ %572, %570 ]
  %522 = phi i8* [ undef, %510 ], [ %573, %570 ]
  %523 = phi i32 [ 0, %510 ], [ %574, %570 ]
  %524 = phi i8* [ %508, %510 ], [ %573, %570 ]
  %525 = phi i8* [ %509, %510 ], [ %572, %570 ]
  br i1 %451, label %539, label %526

526:                                              ; preds = %520
  %527 = icmp slt i32 %523, %433
  %528 = or i1 %514, %527
  %529 = xor i1 %528, true
  %530 = icmp slt i32 %523, %447
  %531 = and i1 %530, %529
  br i1 %531, label %532, label %535

532:                                              ; preds = %526
  %533 = getelementptr inbounds i8, i8* %525, i64 1
  %534 = load i8, i8* %525, align 1
  br label %535

535:                                              ; preds = %532, %526
  %536 = phi i8 [ %534, %532 ], [ %434, %526 ]
  %537 = phi i8* [ %533, %532 ], [ %525, %526 ]
  store i8 %536, i8* %524, align 1
  %538 = getelementptr inbounds i8, i8* %524, i64 1
  br label %539

539:                                              ; preds = %535, %520, %506
  %540 = phi i8* [ %509, %506 ], [ %521, %520 ], [ %537, %535 ]
  %541 = phi i8* [ %508, %506 ], [ %522, %520 ], [ %538, %535 ]
  %542 = add nuw nsw i32 %507, 1
  %543 = icmp eq i32 %542, %428
  br i1 %543, label %515, label %506

544:                                              ; preds = %510, %570
  %545 = phi i32 [ %574, %570 ], [ 0, %510 ]
  %546 = phi i8* [ %573, %570 ], [ %508, %510 ]
  %547 = phi i8* [ %572, %570 ], [ %509, %510 ]
  %548 = phi i32 [ %575, %570 ], [ %450, %510 ]
  %549 = icmp slt i32 %545, %433
  %550 = or i1 %514, %549
  %551 = xor i1 %550, true
  %552 = icmp slt i32 %545, %447
  %553 = and i1 %552, %551
  br i1 %553, label %554, label %557

554:                                              ; preds = %544
  %555 = getelementptr inbounds i8, i8* %547, i64 1
  %556 = load i8, i8* %547, align 1
  br label %557

557:                                              ; preds = %544, %554
  %558 = phi i8 [ %556, %554 ], [ %434, %544 ]
  %559 = phi i8* [ %555, %554 ], [ %547, %544 ]
  %560 = getelementptr inbounds i8, i8* %546, i64 1
  store i8 %558, i8* %546, align 1
  %561 = or i32 %545, 1
  %562 = icmp slt i32 %561, %433
  %563 = or i1 %514, %562
  %564 = xor i1 %563, true
  %565 = icmp slt i32 %561, %447
  %566 = and i1 %565, %564
  br i1 %566, label %567, label %570

567:                                              ; preds = %557
  %568 = getelementptr inbounds i8, i8* %559, i64 1
  %569 = load i8, i8* %559, align 1
  br label %570

570:                                              ; preds = %567, %557
  %571 = phi i8 [ %569, %567 ], [ %434, %557 ]
  %572 = phi i8* [ %568, %567 ], [ %559, %557 ]
  %573 = getelementptr inbounds i8, i8* %546, i64 2
  store i8 %571, i8* %560, align 1
  %574 = add nuw nsw i32 %545, 2
  %575 = add i32 %548, -2
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %520, label %544
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops7PadImplIaaEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* dereferenceable(44), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #6 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca [4 x i32], align 16
  %10 = bitcast [4 x i32]* %9 to i8*
  %11 = alloca [4 x i32], align 16
  %12 = bitcast [4 x i32]* %11 to i8*
  %13 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %14, align 8, !alias.scope !157
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 8, !noalias !157
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  tail call void @abort() #10, !noalias !157
  unreachable

19:                                               ; preds = %6
  store i32 4, i32* %14, align 8, !alias.scope !157
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !157
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !157
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !157
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !157
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !157
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !157
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !157
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !157
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !157
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !157
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !157
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !157
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !157
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !157
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !157
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !157
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !160

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !157
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !157
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !161

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !157
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !162

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !157
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %117) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 32, i1 false)
  %118 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %118, align 8, !alias.scope !163
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %120 = load i32, i32* %119, align 8, !noalias !163
  %121 = icmp sgt i32 %120, 4
  br i1 %121, label %122, label %123

122:                                              ; preds = %103
  tail call void @abort() #10, !noalias !163
  unreachable

123:                                              ; preds = %103
  store i32 4, i32* %118, align 8, !alias.scope !163
  %124 = sub i32 4, %120
  %125 = icmp sgt i32 %124, 0
  %126 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %125, label %127, label %207

127:                                              ; preds = %123
  %128 = bitcast %union.anon* %126 to [5 x i32]*
  %129 = zext i32 %124 to i64
  %130 = icmp ult i32 %124, 8
  br i1 %130, label %200, label %131

131:                                              ; preds = %127
  %132 = and i64 %129, 4294967288
  %133 = add nsw i64 %132, -8
  %134 = lshr exact i64 %133, 3
  %135 = add nuw nsw i64 %134, 1
  %136 = and i64 %135, 7
  %137 = icmp ult i64 %133, 56
  br i1 %137, label %185, label %138

138:                                              ; preds = %131
  %139 = sub nsw i64 %135, %136
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ 0, %138 ], [ %182, %140 ]
  %142 = phi i64 [ %139, %138 ], [ %183, %140 ]
  %143 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %141
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %144, align 8, !alias.scope !163
  %145 = getelementptr inbounds i32, i32* %143, i64 4
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !163
  %147 = or i64 %141, 8
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %147
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %149, align 8, !alias.scope !163
  %150 = getelementptr inbounds i32, i32* %148, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !163
  %152 = or i64 %141, 16
  %153 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %152
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %154, align 8, !alias.scope !163
  %155 = getelementptr inbounds i32, i32* %153, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !163
  %157 = or i64 %141, 24
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %157
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %159, align 8, !alias.scope !163
  %160 = getelementptr inbounds i32, i32* %158, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !163
  %162 = or i64 %141, 32
  %163 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %164, align 8, !alias.scope !163
  %165 = getelementptr inbounds i32, i32* %163, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !163
  %167 = or i64 %141, 40
  %168 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %167
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %169, align 8, !alias.scope !163
  %170 = getelementptr inbounds i32, i32* %168, i64 4
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !163
  %172 = or i64 %141, 48
  %173 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %172
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %174, align 8, !alias.scope !163
  %175 = getelementptr inbounds i32, i32* %173, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !163
  %177 = or i64 %141, 56
  %178 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %177
  %179 = bitcast i32* %178 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %179, align 8, !alias.scope !163
  %180 = getelementptr inbounds i32, i32* %178, i64 4
  %181 = bitcast i32* %180 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %181, align 8, !alias.scope !163
  %182 = add i64 %141, 64
  %183 = add i64 %142, -8
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %140, !llvm.loop !166

185:                                              ; preds = %140, %131
  %186 = phi i64 [ 0, %131 ], [ %182, %140 ]
  %187 = icmp eq i64 %136, 0
  br i1 %187, label %198, label %188

188:                                              ; preds = %185, %188
  %189 = phi i64 [ %195, %188 ], [ %186, %185 ]
  %190 = phi i64 [ %196, %188 ], [ %136, %185 ]
  %191 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %189
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %192, align 8, !alias.scope !163
  %193 = getelementptr inbounds i32, i32* %191, i64 4
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %194, align 8, !alias.scope !163
  %195 = add i64 %189, 8
  %196 = add i64 %190, -1
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %198, label %188, !llvm.loop !167

198:                                              ; preds = %188, %185
  %199 = icmp eq i64 %132, %129
  br i1 %199, label %207, label %200

200:                                              ; preds = %198, %127
  %201 = phi i64 [ 0, %127 ], [ %132, %198 ]
  br label %202

202:                                              ; preds = %200, %202
  %203 = phi i64 [ %205, %202 ], [ %201, %200 ]
  %204 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %203
  store i32 1, i32* %204, align 4, !alias.scope !163
  %205 = add nuw nsw i64 %203, 1
  %206 = icmp eq i64 %205, %129
  br i1 %206, label %207, label %202, !llvm.loop !168

207:                                              ; preds = %202, %198, %123
  %208 = bitcast %union.anon* %126 to i32*
  %209 = sext i32 %124 to i64
  %210 = getelementptr inbounds i32, i32* %208, i64 %209
  %211 = bitcast i32* %210 to i8*
  %212 = icmp sgt i32 %120, 5
  %213 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %214 = getelementptr inbounds %union.anon, %union.anon* %213, i64 0, i32 0
  %215 = load i32*, i32** %214, align 8, !noalias !163
  %216 = bitcast %union.anon* %213 to i32*
  %217 = select i1 %212, i32* %215, i32* %216
  %218 = bitcast i32* %217 to i8*
  %219 = sext i32 %120 to i64
  %220 = shl nsw i64 %219, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %211, i8* align 4 %218, i64 %220, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %221 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 0
  %222 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 1
  %223 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 2
  %224 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 16, i1 false)
  %225 = getelementptr inbounds %union.anon, %union.anon* %126, i64 0, i32 0
  %226 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 2
  %227 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 0
  %228 = load i8, i8* %227, align 4
  %229 = icmp sgt i8 %228, 0
  br i1 %229, label %230, label %309

230:                                              ; preds = %207
  %231 = sext i8 %228 to i64
  %232 = sext i8 %228 to i64
  %233 = icmp ult i8 %228, 8
  br i1 %233, label %234, label %236

234:                                              ; preds = %307, %236, %230
  %235 = phi i64 [ 0, %236 ], [ 0, %230 ], [ %246, %307 ]
  br label %316

236:                                              ; preds = %230
  %237 = add nsw i64 %232, -1
  %238 = sext i8 %228 to i32
  %239 = sub nsw i32 4, %238
  %240 = trunc i64 %237 to i32
  %241 = add i32 %239, %240
  %242 = icmp slt i32 %241, %239
  %243 = icmp ugt i64 %237, 4294967295
  %244 = or i1 %242, %243
  br i1 %244, label %234, label %245

245:                                              ; preds = %236
  %246 = and i64 %232, -8
  %247 = add nsw i64 %246, -8
  %248 = lshr exact i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 1
  %251 = icmp eq i64 %247, 0
  br i1 %251, label %289, label %252

252:                                              ; preds = %245
  %253 = sub nuw nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %286, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %287, %254 ]
  %257 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %255
  %258 = bitcast i32* %257 to <4 x i32>*
  %259 = load <4 x i32>, <4 x i32>* %258, align 4
  %260 = getelementptr inbounds i32, i32* %257, i64 4
  %261 = bitcast i32* %260 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4
  %263 = or i64 %255, 4
  %264 = sub i64 %263, %231
  %265 = shl i64 %264, 32
  %266 = ashr exact i64 %265, 32
  %267 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %266
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> %259, <4 x i32>* %268, align 4
  %269 = getelementptr inbounds i32, i32* %267, i64 4
  %270 = bitcast i32* %269 to <4 x i32>*
  store <4 x i32> %262, <4 x i32>* %270, align 4
  %271 = or i64 %255, 8
  %272 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %271
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4
  %275 = getelementptr inbounds i32, i32* %272, i64 4
  %276 = bitcast i32* %275 to <4 x i32>*
  %277 = load <4 x i32>, <4 x i32>* %276, align 4
  %278 = or i64 %255, 12
  %279 = sub i64 %278, %231
  %280 = shl i64 %279, 32
  %281 = ashr exact i64 %280, 32
  %282 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %281
  %283 = bitcast i32* %282 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %283, align 4
  %284 = getelementptr inbounds i32, i32* %282, i64 4
  %285 = bitcast i32* %284 to <4 x i32>*
  store <4 x i32> %277, <4 x i32>* %285, align 4
  %286 = add i64 %255, 16
  %287 = add i64 %256, -2
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %289, label %254, !llvm.loop !169

289:                                              ; preds = %254, %245
  %290 = phi i64 [ 0, %245 ], [ %286, %254 ]
  %291 = icmp eq i64 %250, 0
  br i1 %291, label %307, label %292

292:                                              ; preds = %289
  %293 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %290
  %294 = bitcast i32* %293 to <4 x i32>*
  %295 = load <4 x i32>, <4 x i32>* %294, align 4
  %296 = getelementptr inbounds i32, i32* %293, i64 4
  %297 = bitcast i32* %296 to <4 x i32>*
  %298 = load <4 x i32>, <4 x i32>* %297, align 4
  %299 = or i64 %290, 4
  %300 = sub i64 %299, %231
  %301 = shl i64 %300, 32
  %302 = ashr exact i64 %301, 32
  %303 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %302
  %304 = bitcast i32* %303 to <4 x i32>*
  store <4 x i32> %295, <4 x i32>* %304, align 4
  %305 = getelementptr inbounds i32, i32* %303, i64 4
  %306 = bitcast i32* %305 to <4 x i32>*
  store <4 x i32> %298, <4 x i32>* %306, align 4
  br label %307

307:                                              ; preds = %289, %292
  %308 = icmp eq i64 %246, %232
  br i1 %308, label %309, label %234

309:                                              ; preds = %316, %307, %207
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8
  %310 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 0
  %311 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 1
  %312 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 2
  %313 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 0, i64 16, i1 false)
  %314 = load i8, i8* %226, align 4
  %315 = icmp sgt i8 %314, 0
  br i1 %315, label %327, label %406

316:                                              ; preds = %234, %316
  %317 = phi i64 [ %325, %316 ], [ %235, %234 ]
  %318 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %317
  %319 = load i32, i32* %318, align 4
  %320 = add nuw i64 %317, 4
  %321 = sub i64 %320, %231
  %322 = shl i64 %321, 32
  %323 = ashr exact i64 %322, 32
  %324 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %323
  store i32 %319, i32* %324, align 4
  %325 = add nuw nsw i64 %317, 1
  %326 = icmp slt i64 %325, %232
  br i1 %326, label %316, label %309, !llvm.loop !170

327:                                              ; preds = %309
  %328 = sext i8 %314 to i64
  %329 = sext i8 %314 to i64
  %330 = icmp ult i8 %314, 8
  br i1 %330, label %331, label %333

331:                                              ; preds = %404, %333, %327
  %332 = phi i64 [ 0, %333 ], [ 0, %327 ], [ %343, %404 ]
  br label %452

333:                                              ; preds = %327
  %334 = add nsw i64 %329, -1
  %335 = sext i8 %314 to i32
  %336 = sub nsw i32 4, %335
  %337 = trunc i64 %334 to i32
  %338 = add i32 %336, %337
  %339 = icmp slt i32 %338, %336
  %340 = icmp ugt i64 %334, 4294967295
  %341 = or i1 %339, %340
  br i1 %341, label %331, label %342

342:                                              ; preds = %333
  %343 = and i64 %329, -8
  %344 = add nsw i64 %343, -8
  %345 = lshr exact i64 %344, 3
  %346 = add nuw nsw i64 %345, 1
  %347 = and i64 %346, 1
  %348 = icmp eq i64 %344, 0
  br i1 %348, label %386, label %349

349:                                              ; preds = %342
  %350 = sub nuw nsw i64 %346, %347
  br label %351

351:                                              ; preds = %351, %349
  %352 = phi i64 [ 0, %349 ], [ %383, %351 ]
  %353 = phi i64 [ %350, %349 ], [ %384, %351 ]
  %354 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %352
  %355 = bitcast i32* %354 to <4 x i32>*
  %356 = load <4 x i32>, <4 x i32>* %355, align 4
  %357 = getelementptr inbounds i32, i32* %354, i64 4
  %358 = bitcast i32* %357 to <4 x i32>*
  %359 = load <4 x i32>, <4 x i32>* %358, align 4
  %360 = or i64 %352, 4
  %361 = sub i64 %360, %328
  %362 = shl i64 %361, 32
  %363 = ashr exact i64 %362, 32
  %364 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %363
  %365 = bitcast i32* %364 to <4 x i32>*
  store <4 x i32> %356, <4 x i32>* %365, align 4
  %366 = getelementptr inbounds i32, i32* %364, i64 4
  %367 = bitcast i32* %366 to <4 x i32>*
  store <4 x i32> %359, <4 x i32>* %367, align 4
  %368 = or i64 %352, 8
  %369 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %368
  %370 = bitcast i32* %369 to <4 x i32>*
  %371 = load <4 x i32>, <4 x i32>* %370, align 4
  %372 = getelementptr inbounds i32, i32* %369, i64 4
  %373 = bitcast i32* %372 to <4 x i32>*
  %374 = load <4 x i32>, <4 x i32>* %373, align 4
  %375 = or i64 %352, 12
  %376 = sub i64 %375, %328
  %377 = shl i64 %376, 32
  %378 = ashr exact i64 %377, 32
  %379 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %378
  %380 = bitcast i32* %379 to <4 x i32>*
  store <4 x i32> %371, <4 x i32>* %380, align 4
  %381 = getelementptr inbounds i32, i32* %379, i64 4
  %382 = bitcast i32* %381 to <4 x i32>*
  store <4 x i32> %374, <4 x i32>* %382, align 4
  %383 = add i64 %352, 16
  %384 = add i64 %353, -2
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %386, label %351, !llvm.loop !171

386:                                              ; preds = %351, %342
  %387 = phi i64 [ 0, %342 ], [ %383, %351 ]
  %388 = icmp eq i64 %347, 0
  br i1 %388, label %404, label %389

389:                                              ; preds = %386
  %390 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %387
  %391 = bitcast i32* %390 to <4 x i32>*
  %392 = load <4 x i32>, <4 x i32>* %391, align 4
  %393 = getelementptr inbounds i32, i32* %390, i64 4
  %394 = bitcast i32* %393 to <4 x i32>*
  %395 = load <4 x i32>, <4 x i32>* %394, align 4
  %396 = or i64 %387, 4
  %397 = sub i64 %396, %328
  %398 = shl i64 %397, 32
  %399 = ashr exact i64 %398, 32
  %400 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %399
  %401 = bitcast i32* %400 to <4 x i32>*
  store <4 x i32> %392, <4 x i32>* %401, align 4
  %402 = getelementptr inbounds i32, i32* %400, i64 4
  %403 = bitcast i32* %402 to <4 x i32>*
  store <4 x i32> %395, <4 x i32>* %403, align 4
  br label %404

404:                                              ; preds = %386, %389
  %405 = icmp eq i64 %343, %329
  br i1 %405, label %406, label %331

406:                                              ; preds = %452, %404, %309
  %407 = load i32, i32* %118, align 8
  %408 = icmp sgt i32 %407, 5
  br i1 %408, label %409, label %414

409:                                              ; preds = %406
  %410 = load i32*, i32** %225, align 8
  %411 = getelementptr inbounds i32, i32* %410, i64 1
  %412 = getelementptr inbounds i32, i32* %410, i64 2
  %413 = getelementptr inbounds i32, i32* %410, i64 3
  br label %421

414:                                              ; preds = %406
  %415 = bitcast %union.anon* %126 to [5 x i32]*
  %416 = getelementptr inbounds [5 x i32], [5 x i32]* %415, i64 0, i64 1
  %417 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %418 = bitcast [16 x i8]* %417 to i32*
  %419 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %420 = bitcast i8* %419 to i32*
  br label %421

421:                                              ; preds = %409, %414
  %422 = phi i32* [ %412, %409 ], [ %418, %414 ]
  %423 = phi i32* [ %410, %409 ], [ %208, %414 ]
  %424 = phi i32* [ %411, %409 ], [ %416, %414 ]
  %425 = phi i32* [ %413, %409 ], [ %420, %414 ]
  %426 = load i32, i32* %424, align 4
  %427 = load i32, i32* %423, align 4
  %428 = load i32, i32* %422, align 4
  %429 = load i32, i32* %425, align 4
  %430 = load i32, i32* %221, align 16
  %431 = load i32, i32* %222, align 4
  %432 = load i32, i32* %223, align 8
  %433 = load i32, i32* %224, align 4
  %434 = load i8, i8* %3, align 1
  %435 = icmp sgt i32 %427, 0
  br i1 %435, label %436, label %473

436:                                              ; preds = %421
  %437 = load i32, i32* %313, align 4
  %438 = load i32, i32* %312, align 8
  %439 = load i32, i32* %311, align 4
  %440 = load i32, i32* %310, align 16
  %441 = icmp sgt i32 %426, 0
  %442 = icmp sgt i32 %428, 0
  %443 = icmp sgt i32 %429, 0
  %444 = sub nsw i32 %427, %440
  %445 = sub nsw i32 %426, %439
  %446 = sub nsw i32 %428, %438
  %447 = sub nsw i32 %429, %437
  %448 = and i32 %429, 1
  %449 = icmp eq i32 %429, 1
  %450 = sub i32 %429, %448
  %451 = icmp eq i32 %448, 0
  br label %463

452:                                              ; preds = %331, %452
  %453 = phi i64 [ %461, %452 ], [ %332, %331 ]
  %454 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %453
  %455 = load i32, i32* %454, align 4
  %456 = add nuw i64 %453, 4
  %457 = sub i64 %456, %328
  %458 = shl i64 %457, 32
  %459 = ashr exact i64 %458, 32
  %460 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %459
  store i32 %455, i32* %460, align 4
  %461 = add nuw nsw i64 %453, 1
  %462 = icmp slt i64 %461, %329
  br i1 %462, label %452, label %406, !llvm.loop !172

463:                                              ; preds = %501, %436
  %464 = phi i32 [ 0, %436 ], [ %504, %501 ]
  %465 = phi i8* [ %5, %436 ], [ %503, %501 ]
  %466 = phi i8* [ %2, %436 ], [ %502, %501 ]
  br i1 %441, label %467, label %501

467:                                              ; preds = %463
  %468 = icmp slt i32 %464, %430
  %469 = icmp sge i32 %464, %444
  %470 = or i1 %469, %468
  br label %492

471:                                              ; preds = %501
  %472 = load i32, i32* %118, align 8
  br label %473

473:                                              ; preds = %471, %421
  %474 = phi i32 [ %472, %471 ], [ %407, %421 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  %475 = icmp sgt i32 %474, 5
  br i1 %475, label %476, label %482

476:                                              ; preds = %473
  %477 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %478 = load i32*, i32** %477, align 8
  %479 = icmp eq i32* %478, null
  br i1 %479, label %482, label %480

480:                                              ; preds = %476
  %481 = bitcast i32* %478 to i8*
  tail call void @_ZdaPv(i8* %481) #9
  br label %482

482:                                              ; preds = %473, %476, %480
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %117) #8
  %483 = load i32, i32* %14, align 8
  %484 = icmp sgt i32 %483, 5
  br i1 %484, label %485, label %491

485:                                              ; preds = %482
  %486 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %487 = load i32*, i32** %486, align 8
  %488 = icmp eq i32* %487, null
  br i1 %488, label %491, label %489

489:                                              ; preds = %485
  %490 = bitcast i32* %487 to i8*
  tail call void @_ZdaPv(i8* %490) #9
  br label %491

491:                                              ; preds = %482, %485, %489
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8
  ret void

492:                                              ; preds = %515, %467
  %493 = phi i32 [ 0, %467 ], [ %518, %515 ]
  %494 = phi i8* [ %465, %467 ], [ %517, %515 ]
  %495 = phi i8* [ %466, %467 ], [ %516, %515 ]
  br i1 %442, label %496, label %515

496:                                              ; preds = %492
  %497 = icmp slt i32 %493, %431
  %498 = or i1 %470, %497
  %499 = icmp sge i32 %493, %445
  %500 = or i1 %499, %498
  br label %506

501:                                              ; preds = %515, %463
  %502 = phi i8* [ %466, %463 ], [ %516, %515 ]
  %503 = phi i8* [ %465, %463 ], [ %517, %515 ]
  %504 = add nuw nsw i32 %464, 1
  %505 = icmp eq i32 %504, %427
  br i1 %505, label %471, label %463

506:                                              ; preds = %539, %496
  %507 = phi i32 [ 0, %496 ], [ %542, %539 ]
  %508 = phi i8* [ %494, %496 ], [ %541, %539 ]
  %509 = phi i8* [ %495, %496 ], [ %540, %539 ]
  br i1 %443, label %510, label %539

510:                                              ; preds = %506
  %511 = icmp slt i32 %507, %432
  %512 = or i1 %500, %511
  %513 = icmp sge i32 %507, %446
  %514 = or i1 %513, %512
  br i1 %449, label %520, label %544

515:                                              ; preds = %539, %492
  %516 = phi i8* [ %495, %492 ], [ %540, %539 ]
  %517 = phi i8* [ %494, %492 ], [ %541, %539 ]
  %518 = add nuw nsw i32 %493, 1
  %519 = icmp eq i32 %518, %426
  br i1 %519, label %501, label %492

520:                                              ; preds = %570, %510
  %521 = phi i8* [ undef, %510 ], [ %572, %570 ]
  %522 = phi i8* [ undef, %510 ], [ %573, %570 ]
  %523 = phi i32 [ 0, %510 ], [ %574, %570 ]
  %524 = phi i8* [ %508, %510 ], [ %573, %570 ]
  %525 = phi i8* [ %509, %510 ], [ %572, %570 ]
  br i1 %451, label %539, label %526

526:                                              ; preds = %520
  %527 = icmp slt i32 %523, %433
  %528 = or i1 %514, %527
  %529 = xor i1 %528, true
  %530 = icmp slt i32 %523, %447
  %531 = and i1 %530, %529
  br i1 %531, label %532, label %535

532:                                              ; preds = %526
  %533 = getelementptr inbounds i8, i8* %525, i64 1
  %534 = load i8, i8* %525, align 1
  br label %535

535:                                              ; preds = %532, %526
  %536 = phi i8 [ %534, %532 ], [ %434, %526 ]
  %537 = phi i8* [ %533, %532 ], [ %525, %526 ]
  store i8 %536, i8* %524, align 1
  %538 = getelementptr inbounds i8, i8* %524, i64 1
  br label %539

539:                                              ; preds = %535, %520, %506
  %540 = phi i8* [ %509, %506 ], [ %521, %520 ], [ %537, %535 ]
  %541 = phi i8* [ %508, %506 ], [ %522, %520 ], [ %538, %535 ]
  %542 = add nuw nsw i32 %507, 1
  %543 = icmp eq i32 %542, %428
  br i1 %543, label %515, label %506

544:                                              ; preds = %510, %570
  %545 = phi i32 [ %574, %570 ], [ 0, %510 ]
  %546 = phi i8* [ %573, %570 ], [ %508, %510 ]
  %547 = phi i8* [ %572, %570 ], [ %509, %510 ]
  %548 = phi i32 [ %575, %570 ], [ %450, %510 ]
  %549 = icmp slt i32 %545, %433
  %550 = or i1 %514, %549
  %551 = xor i1 %550, true
  %552 = icmp slt i32 %545, %447
  %553 = and i1 %552, %551
  br i1 %553, label %554, label %557

554:                                              ; preds = %544
  %555 = getelementptr inbounds i8, i8* %547, i64 1
  %556 = load i8, i8* %547, align 1
  br label %557

557:                                              ; preds = %544, %554
  %558 = phi i8 [ %556, %554 ], [ %434, %544 ]
  %559 = phi i8* [ %555, %554 ], [ %547, %544 ]
  %560 = getelementptr inbounds i8, i8* %546, i64 1
  store i8 %558, i8* %546, align 1
  %561 = or i32 %545, 1
  %562 = icmp slt i32 %561, %433
  %563 = or i1 %514, %562
  %564 = xor i1 %563, true
  %565 = icmp slt i32 %561, %447
  %566 = and i1 %565, %564
  br i1 %566, label %567, label %570

567:                                              ; preds = %557
  %568 = getelementptr inbounds i8, i8* %559, i64 1
  %569 = load i8, i8* %559, align 1
  br label %570

570:                                              ; preds = %567, %557
  %571 = phi i8 [ %569, %567 ], [ %434, %557 ]
  %572 = phi i8* [ %568, %567 ], [ %559, %557 ]
  %573 = getelementptr inbounds i8, i8* %546, i64 2
  store i8 %571, i8* %560, align 1
  %574 = add nuw nsw i32 %545, 2
  %575 = add i32 %548, -2
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %520, label %544
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops7PadImplIiiEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* dereferenceable(44), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*) local_unnamed_addr #6 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca [4 x i32], align 16
  %10 = bitcast [4 x i32]* %9 to i8*
  %11 = alloca [4 x i32], align 16
  %12 = bitcast [4 x i32]* %11 to i8*
  %13 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %14, align 8, !alias.scope !173
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 8, !noalias !173
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  tail call void @abort() #10, !noalias !173
  unreachable

19:                                               ; preds = %6
  store i32 4, i32* %14, align 8, !alias.scope !173
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !173
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !173
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !173
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !173
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !173
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !173
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !173
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !173
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !173
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !173
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !173
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !173
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !173
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !173
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !173
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !173
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !176

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !173
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !173
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !177

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !173
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !178

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !173
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %117) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 32, i1 false)
  %118 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %118, align 8, !alias.scope !179
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %120 = load i32, i32* %119, align 8, !noalias !179
  %121 = icmp sgt i32 %120, 4
  br i1 %121, label %122, label %123

122:                                              ; preds = %103
  tail call void @abort() #10, !noalias !179
  unreachable

123:                                              ; preds = %103
  store i32 4, i32* %118, align 8, !alias.scope !179
  %124 = sub i32 4, %120
  %125 = icmp sgt i32 %124, 0
  %126 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %125, label %127, label %207

127:                                              ; preds = %123
  %128 = bitcast %union.anon* %126 to [5 x i32]*
  %129 = zext i32 %124 to i64
  %130 = icmp ult i32 %124, 8
  br i1 %130, label %200, label %131

131:                                              ; preds = %127
  %132 = and i64 %129, 4294967288
  %133 = add nsw i64 %132, -8
  %134 = lshr exact i64 %133, 3
  %135 = add nuw nsw i64 %134, 1
  %136 = and i64 %135, 7
  %137 = icmp ult i64 %133, 56
  br i1 %137, label %185, label %138

138:                                              ; preds = %131
  %139 = sub nsw i64 %135, %136
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ 0, %138 ], [ %182, %140 ]
  %142 = phi i64 [ %139, %138 ], [ %183, %140 ]
  %143 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %141
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %144, align 8, !alias.scope !179
  %145 = getelementptr inbounds i32, i32* %143, i64 4
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !179
  %147 = or i64 %141, 8
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %147
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %149, align 8, !alias.scope !179
  %150 = getelementptr inbounds i32, i32* %148, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !179
  %152 = or i64 %141, 16
  %153 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %152
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %154, align 8, !alias.scope !179
  %155 = getelementptr inbounds i32, i32* %153, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !179
  %157 = or i64 %141, 24
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %157
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %159, align 8, !alias.scope !179
  %160 = getelementptr inbounds i32, i32* %158, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !179
  %162 = or i64 %141, 32
  %163 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %164, align 8, !alias.scope !179
  %165 = getelementptr inbounds i32, i32* %163, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !179
  %167 = or i64 %141, 40
  %168 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %167
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %169, align 8, !alias.scope !179
  %170 = getelementptr inbounds i32, i32* %168, i64 4
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !179
  %172 = or i64 %141, 48
  %173 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %172
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %174, align 8, !alias.scope !179
  %175 = getelementptr inbounds i32, i32* %173, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !179
  %177 = or i64 %141, 56
  %178 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %177
  %179 = bitcast i32* %178 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %179, align 8, !alias.scope !179
  %180 = getelementptr inbounds i32, i32* %178, i64 4
  %181 = bitcast i32* %180 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %181, align 8, !alias.scope !179
  %182 = add i64 %141, 64
  %183 = add i64 %142, -8
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %140, !llvm.loop !182

185:                                              ; preds = %140, %131
  %186 = phi i64 [ 0, %131 ], [ %182, %140 ]
  %187 = icmp eq i64 %136, 0
  br i1 %187, label %198, label %188

188:                                              ; preds = %185, %188
  %189 = phi i64 [ %195, %188 ], [ %186, %185 ]
  %190 = phi i64 [ %196, %188 ], [ %136, %185 ]
  %191 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %189
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %192, align 8, !alias.scope !179
  %193 = getelementptr inbounds i32, i32* %191, i64 4
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %194, align 8, !alias.scope !179
  %195 = add i64 %189, 8
  %196 = add i64 %190, -1
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %198, label %188, !llvm.loop !183

198:                                              ; preds = %188, %185
  %199 = icmp eq i64 %132, %129
  br i1 %199, label %207, label %200

200:                                              ; preds = %198, %127
  %201 = phi i64 [ 0, %127 ], [ %132, %198 ]
  br label %202

202:                                              ; preds = %200, %202
  %203 = phi i64 [ %205, %202 ], [ %201, %200 ]
  %204 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %203
  store i32 1, i32* %204, align 4, !alias.scope !179
  %205 = add nuw nsw i64 %203, 1
  %206 = icmp eq i64 %205, %129
  br i1 %206, label %207, label %202, !llvm.loop !184

207:                                              ; preds = %202, %198, %123
  %208 = bitcast %union.anon* %126 to i32*
  %209 = sext i32 %124 to i64
  %210 = getelementptr inbounds i32, i32* %208, i64 %209
  %211 = bitcast i32* %210 to i8*
  %212 = icmp sgt i32 %120, 5
  %213 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %214 = getelementptr inbounds %union.anon, %union.anon* %213, i64 0, i32 0
  %215 = load i32*, i32** %214, align 8, !noalias !179
  %216 = bitcast %union.anon* %213 to i32*
  %217 = select i1 %212, i32* %215, i32* %216
  %218 = bitcast i32* %217 to i8*
  %219 = sext i32 %120 to i64
  %220 = shl nsw i64 %219, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %211, i8* align 4 %218, i64 %220, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %221 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 0
  %222 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 1
  %223 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 2
  %224 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 16, i1 false)
  %225 = getelementptr inbounds %union.anon, %union.anon* %126, i64 0, i32 0
  %226 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 2
  %227 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 0
  %228 = load i8, i8* %227, align 4
  %229 = icmp sgt i8 %228, 0
  br i1 %229, label %230, label %309

230:                                              ; preds = %207
  %231 = sext i8 %228 to i64
  %232 = sext i8 %228 to i64
  %233 = icmp ult i8 %228, 8
  br i1 %233, label %234, label %236

234:                                              ; preds = %307, %236, %230
  %235 = phi i64 [ 0, %236 ], [ 0, %230 ], [ %246, %307 ]
  br label %316

236:                                              ; preds = %230
  %237 = add nsw i64 %232, -1
  %238 = sext i8 %228 to i32
  %239 = sub nsw i32 4, %238
  %240 = trunc i64 %237 to i32
  %241 = add i32 %239, %240
  %242 = icmp slt i32 %241, %239
  %243 = icmp ugt i64 %237, 4294967295
  %244 = or i1 %242, %243
  br i1 %244, label %234, label %245

245:                                              ; preds = %236
  %246 = and i64 %232, -8
  %247 = add nsw i64 %246, -8
  %248 = lshr exact i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 1
  %251 = icmp eq i64 %247, 0
  br i1 %251, label %289, label %252

252:                                              ; preds = %245
  %253 = sub nuw nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %286, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %287, %254 ]
  %257 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %255
  %258 = bitcast i32* %257 to <4 x i32>*
  %259 = load <4 x i32>, <4 x i32>* %258, align 4
  %260 = getelementptr inbounds i32, i32* %257, i64 4
  %261 = bitcast i32* %260 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4
  %263 = or i64 %255, 4
  %264 = sub i64 %263, %231
  %265 = shl i64 %264, 32
  %266 = ashr exact i64 %265, 32
  %267 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %266
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> %259, <4 x i32>* %268, align 4
  %269 = getelementptr inbounds i32, i32* %267, i64 4
  %270 = bitcast i32* %269 to <4 x i32>*
  store <4 x i32> %262, <4 x i32>* %270, align 4
  %271 = or i64 %255, 8
  %272 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %271
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4
  %275 = getelementptr inbounds i32, i32* %272, i64 4
  %276 = bitcast i32* %275 to <4 x i32>*
  %277 = load <4 x i32>, <4 x i32>* %276, align 4
  %278 = or i64 %255, 12
  %279 = sub i64 %278, %231
  %280 = shl i64 %279, 32
  %281 = ashr exact i64 %280, 32
  %282 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %281
  %283 = bitcast i32* %282 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %283, align 4
  %284 = getelementptr inbounds i32, i32* %282, i64 4
  %285 = bitcast i32* %284 to <4 x i32>*
  store <4 x i32> %277, <4 x i32>* %285, align 4
  %286 = add i64 %255, 16
  %287 = add i64 %256, -2
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %289, label %254, !llvm.loop !185

289:                                              ; preds = %254, %245
  %290 = phi i64 [ 0, %245 ], [ %286, %254 ]
  %291 = icmp eq i64 %250, 0
  br i1 %291, label %307, label %292

292:                                              ; preds = %289
  %293 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %290
  %294 = bitcast i32* %293 to <4 x i32>*
  %295 = load <4 x i32>, <4 x i32>* %294, align 4
  %296 = getelementptr inbounds i32, i32* %293, i64 4
  %297 = bitcast i32* %296 to <4 x i32>*
  %298 = load <4 x i32>, <4 x i32>* %297, align 4
  %299 = or i64 %290, 4
  %300 = sub i64 %299, %231
  %301 = shl i64 %300, 32
  %302 = ashr exact i64 %301, 32
  %303 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %302
  %304 = bitcast i32* %303 to <4 x i32>*
  store <4 x i32> %295, <4 x i32>* %304, align 4
  %305 = getelementptr inbounds i32, i32* %303, i64 4
  %306 = bitcast i32* %305 to <4 x i32>*
  store <4 x i32> %298, <4 x i32>* %306, align 4
  br label %307

307:                                              ; preds = %289, %292
  %308 = icmp eq i64 %246, %232
  br i1 %308, label %309, label %234

309:                                              ; preds = %316, %307, %207
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8
  %310 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 0
  %311 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 1
  %312 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 2
  %313 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 0, i64 16, i1 false)
  %314 = load i8, i8* %226, align 4
  %315 = icmp sgt i8 %314, 0
  br i1 %315, label %327, label %406

316:                                              ; preds = %234, %316
  %317 = phi i64 [ %325, %316 ], [ %235, %234 ]
  %318 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %317
  %319 = load i32, i32* %318, align 4
  %320 = add nuw i64 %317, 4
  %321 = sub i64 %320, %231
  %322 = shl i64 %321, 32
  %323 = ashr exact i64 %322, 32
  %324 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %323
  store i32 %319, i32* %324, align 4
  %325 = add nuw nsw i64 %317, 1
  %326 = icmp slt i64 %325, %232
  br i1 %326, label %316, label %309, !llvm.loop !186

327:                                              ; preds = %309
  %328 = sext i8 %314 to i64
  %329 = sext i8 %314 to i64
  %330 = icmp ult i8 %314, 8
  br i1 %330, label %331, label %333

331:                                              ; preds = %404, %333, %327
  %332 = phi i64 [ 0, %333 ], [ 0, %327 ], [ %343, %404 ]
  br label %452

333:                                              ; preds = %327
  %334 = add nsw i64 %329, -1
  %335 = sext i8 %314 to i32
  %336 = sub nsw i32 4, %335
  %337 = trunc i64 %334 to i32
  %338 = add i32 %336, %337
  %339 = icmp slt i32 %338, %336
  %340 = icmp ugt i64 %334, 4294967295
  %341 = or i1 %339, %340
  br i1 %341, label %331, label %342

342:                                              ; preds = %333
  %343 = and i64 %329, -8
  %344 = add nsw i64 %343, -8
  %345 = lshr exact i64 %344, 3
  %346 = add nuw nsw i64 %345, 1
  %347 = and i64 %346, 1
  %348 = icmp eq i64 %344, 0
  br i1 %348, label %386, label %349

349:                                              ; preds = %342
  %350 = sub nuw nsw i64 %346, %347
  br label %351

351:                                              ; preds = %351, %349
  %352 = phi i64 [ 0, %349 ], [ %383, %351 ]
  %353 = phi i64 [ %350, %349 ], [ %384, %351 ]
  %354 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %352
  %355 = bitcast i32* %354 to <4 x i32>*
  %356 = load <4 x i32>, <4 x i32>* %355, align 4
  %357 = getelementptr inbounds i32, i32* %354, i64 4
  %358 = bitcast i32* %357 to <4 x i32>*
  %359 = load <4 x i32>, <4 x i32>* %358, align 4
  %360 = or i64 %352, 4
  %361 = sub i64 %360, %328
  %362 = shl i64 %361, 32
  %363 = ashr exact i64 %362, 32
  %364 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %363
  %365 = bitcast i32* %364 to <4 x i32>*
  store <4 x i32> %356, <4 x i32>* %365, align 4
  %366 = getelementptr inbounds i32, i32* %364, i64 4
  %367 = bitcast i32* %366 to <4 x i32>*
  store <4 x i32> %359, <4 x i32>* %367, align 4
  %368 = or i64 %352, 8
  %369 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %368
  %370 = bitcast i32* %369 to <4 x i32>*
  %371 = load <4 x i32>, <4 x i32>* %370, align 4
  %372 = getelementptr inbounds i32, i32* %369, i64 4
  %373 = bitcast i32* %372 to <4 x i32>*
  %374 = load <4 x i32>, <4 x i32>* %373, align 4
  %375 = or i64 %352, 12
  %376 = sub i64 %375, %328
  %377 = shl i64 %376, 32
  %378 = ashr exact i64 %377, 32
  %379 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %378
  %380 = bitcast i32* %379 to <4 x i32>*
  store <4 x i32> %371, <4 x i32>* %380, align 4
  %381 = getelementptr inbounds i32, i32* %379, i64 4
  %382 = bitcast i32* %381 to <4 x i32>*
  store <4 x i32> %374, <4 x i32>* %382, align 4
  %383 = add i64 %352, 16
  %384 = add i64 %353, -2
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %386, label %351, !llvm.loop !187

386:                                              ; preds = %351, %342
  %387 = phi i64 [ 0, %342 ], [ %383, %351 ]
  %388 = icmp eq i64 %347, 0
  br i1 %388, label %404, label %389

389:                                              ; preds = %386
  %390 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %387
  %391 = bitcast i32* %390 to <4 x i32>*
  %392 = load <4 x i32>, <4 x i32>* %391, align 4
  %393 = getelementptr inbounds i32, i32* %390, i64 4
  %394 = bitcast i32* %393 to <4 x i32>*
  %395 = load <4 x i32>, <4 x i32>* %394, align 4
  %396 = or i64 %387, 4
  %397 = sub i64 %396, %328
  %398 = shl i64 %397, 32
  %399 = ashr exact i64 %398, 32
  %400 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %399
  %401 = bitcast i32* %400 to <4 x i32>*
  store <4 x i32> %392, <4 x i32>* %401, align 4
  %402 = getelementptr inbounds i32, i32* %400, i64 4
  %403 = bitcast i32* %402 to <4 x i32>*
  store <4 x i32> %395, <4 x i32>* %403, align 4
  br label %404

404:                                              ; preds = %386, %389
  %405 = icmp eq i64 %343, %329
  br i1 %405, label %406, label %331

406:                                              ; preds = %452, %404, %309
  %407 = load i32, i32* %118, align 8
  %408 = icmp sgt i32 %407, 5
  br i1 %408, label %409, label %414

409:                                              ; preds = %406
  %410 = load i32*, i32** %225, align 8
  %411 = getelementptr inbounds i32, i32* %410, i64 1
  %412 = getelementptr inbounds i32, i32* %410, i64 2
  %413 = getelementptr inbounds i32, i32* %410, i64 3
  br label %421

414:                                              ; preds = %406
  %415 = bitcast %union.anon* %126 to [5 x i32]*
  %416 = getelementptr inbounds [5 x i32], [5 x i32]* %415, i64 0, i64 1
  %417 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %418 = bitcast [16 x i8]* %417 to i32*
  %419 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %420 = bitcast i8* %419 to i32*
  br label %421

421:                                              ; preds = %409, %414
  %422 = phi i32* [ %412, %409 ], [ %418, %414 ]
  %423 = phi i32* [ %410, %409 ], [ %208, %414 ]
  %424 = phi i32* [ %411, %409 ], [ %416, %414 ]
  %425 = phi i32* [ %413, %409 ], [ %420, %414 ]
  %426 = load i32, i32* %424, align 4
  %427 = load i32, i32* %423, align 4
  %428 = load i32, i32* %422, align 4
  %429 = load i32, i32* %425, align 4
  %430 = load i32, i32* %221, align 16
  %431 = load i32, i32* %222, align 4
  %432 = load i32, i32* %223, align 8
  %433 = load i32, i32* %224, align 4
  %434 = load i32, i32* %3, align 4
  %435 = icmp sgt i32 %427, 0
  br i1 %435, label %436, label %471

436:                                              ; preds = %421
  %437 = load i32, i32* %313, align 4
  %438 = load i32, i32* %312, align 8
  %439 = load i32, i32* %311, align 4
  %440 = load i32, i32* %310, align 16
  %441 = icmp sgt i32 %426, 0
  %442 = icmp sgt i32 %428, 0
  %443 = icmp sgt i32 %429, 0
  %444 = sub nsw i32 %427, %440
  %445 = sub nsw i32 %426, %439
  %446 = sub nsw i32 %428, %438
  %447 = sub nsw i32 %429, %437
  %448 = and i32 %429, 1
  %449 = icmp eq i32 %429, 1
  %450 = sub i32 %429, %448
  %451 = icmp eq i32 %448, 0
  br label %463

452:                                              ; preds = %331, %452
  %453 = phi i64 [ %461, %452 ], [ %332, %331 ]
  %454 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %453
  %455 = load i32, i32* %454, align 4
  %456 = add nuw i64 %453, 4
  %457 = sub i64 %456, %328
  %458 = shl i64 %457, 32
  %459 = ashr exact i64 %458, 32
  %460 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %459
  store i32 %455, i32* %460, align 4
  %461 = add nuw nsw i64 %453, 1
  %462 = icmp slt i64 %461, %329
  br i1 %462, label %452, label %406, !llvm.loop !188

463:                                              ; preds = %497, %436
  %464 = phi i32 [ 0, %436 ], [ %500, %497 ]
  %465 = phi i32* [ %5, %436 ], [ %499, %497 ]
  %466 = phi i32* [ %2, %436 ], [ %498, %497 ]
  br i1 %441, label %467, label %497

467:                                              ; preds = %463
  %468 = icmp slt i32 %464, %430
  %469 = icmp sge i32 %464, %444
  %470 = or i1 %469, %468
  br label %488

471:                                              ; preds = %497, %421
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  br i1 %408, label %472, label %478

472:                                              ; preds = %471
  %473 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %474 = load i32*, i32** %473, align 8
  %475 = icmp eq i32* %474, null
  br i1 %475, label %478, label %476

476:                                              ; preds = %472
  %477 = bitcast i32* %474 to i8*
  tail call void @_ZdaPv(i8* %477) #9
  br label %478

478:                                              ; preds = %471, %472, %476
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %117) #8
  %479 = load i32, i32* %14, align 8
  %480 = icmp sgt i32 %479, 5
  br i1 %480, label %481, label %487

481:                                              ; preds = %478
  %482 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %483 = load i32*, i32** %482, align 8
  %484 = icmp eq i32* %483, null
  br i1 %484, label %487, label %485

485:                                              ; preds = %481
  %486 = bitcast i32* %483 to i8*
  tail call void @_ZdaPv(i8* %486) #9
  br label %487

487:                                              ; preds = %478, %481, %485
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8
  ret void

488:                                              ; preds = %511, %467
  %489 = phi i32 [ 0, %467 ], [ %514, %511 ]
  %490 = phi i32* [ %465, %467 ], [ %513, %511 ]
  %491 = phi i32* [ %466, %467 ], [ %512, %511 ]
  br i1 %442, label %492, label %511

492:                                              ; preds = %488
  %493 = icmp slt i32 %489, %431
  %494 = or i1 %470, %493
  %495 = icmp sge i32 %489, %445
  %496 = or i1 %495, %494
  br label %502

497:                                              ; preds = %511, %463
  %498 = phi i32* [ %466, %463 ], [ %512, %511 ]
  %499 = phi i32* [ %465, %463 ], [ %513, %511 ]
  %500 = add nuw nsw i32 %464, 1
  %501 = icmp eq i32 %500, %427
  br i1 %501, label %471, label %463

502:                                              ; preds = %535, %492
  %503 = phi i32 [ 0, %492 ], [ %538, %535 ]
  %504 = phi i32* [ %490, %492 ], [ %537, %535 ]
  %505 = phi i32* [ %491, %492 ], [ %536, %535 ]
  br i1 %443, label %506, label %535

506:                                              ; preds = %502
  %507 = icmp slt i32 %503, %432
  %508 = or i1 %496, %507
  %509 = icmp sge i32 %503, %446
  %510 = or i1 %509, %508
  br i1 %449, label %516, label %540

511:                                              ; preds = %535, %488
  %512 = phi i32* [ %491, %488 ], [ %536, %535 ]
  %513 = phi i32* [ %490, %488 ], [ %537, %535 ]
  %514 = add nuw nsw i32 %489, 1
  %515 = icmp eq i32 %514, %426
  br i1 %515, label %497, label %488

516:                                              ; preds = %566, %506
  %517 = phi i32* [ undef, %506 ], [ %568, %566 ]
  %518 = phi i32* [ undef, %506 ], [ %569, %566 ]
  %519 = phi i32 [ 0, %506 ], [ %570, %566 ]
  %520 = phi i32* [ %504, %506 ], [ %569, %566 ]
  %521 = phi i32* [ %505, %506 ], [ %568, %566 ]
  br i1 %451, label %535, label %522

522:                                              ; preds = %516
  %523 = icmp slt i32 %519, %433
  %524 = or i1 %510, %523
  %525 = xor i1 %524, true
  %526 = icmp slt i32 %519, %447
  %527 = and i1 %526, %525
  br i1 %527, label %528, label %531

528:                                              ; preds = %522
  %529 = getelementptr inbounds i32, i32* %521, i64 1
  %530 = load i32, i32* %521, align 4
  br label %531

531:                                              ; preds = %528, %522
  %532 = phi i32 [ %530, %528 ], [ %434, %522 ]
  %533 = phi i32* [ %529, %528 ], [ %521, %522 ]
  store i32 %532, i32* %520, align 4
  %534 = getelementptr inbounds i32, i32* %520, i64 1
  br label %535

535:                                              ; preds = %531, %516, %502
  %536 = phi i32* [ %505, %502 ], [ %517, %516 ], [ %533, %531 ]
  %537 = phi i32* [ %504, %502 ], [ %518, %516 ], [ %534, %531 ]
  %538 = add nuw nsw i32 %503, 1
  %539 = icmp eq i32 %538, %428
  br i1 %539, label %511, label %502

540:                                              ; preds = %506, %566
  %541 = phi i32 [ %570, %566 ], [ 0, %506 ]
  %542 = phi i32* [ %569, %566 ], [ %504, %506 ]
  %543 = phi i32* [ %568, %566 ], [ %505, %506 ]
  %544 = phi i32 [ %571, %566 ], [ %450, %506 ]
  %545 = icmp slt i32 %541, %433
  %546 = or i1 %510, %545
  %547 = xor i1 %546, true
  %548 = icmp slt i32 %541, %447
  %549 = and i1 %548, %547
  br i1 %549, label %550, label %553

550:                                              ; preds = %540
  %551 = getelementptr inbounds i32, i32* %543, i64 1
  %552 = load i32, i32* %543, align 4
  br label %553

553:                                              ; preds = %540, %550
  %554 = phi i32 [ %552, %550 ], [ %434, %540 ]
  %555 = phi i32* [ %551, %550 ], [ %543, %540 ]
  %556 = getelementptr inbounds i32, i32* %542, i64 1
  store i32 %554, i32* %542, align 4
  %557 = or i32 %541, 1
  %558 = icmp slt i32 %557, %433
  %559 = or i1 %510, %558
  %560 = xor i1 %559, true
  %561 = icmp slt i32 %557, %447
  %562 = and i1 %561, %560
  br i1 %562, label %563, label %566

563:                                              ; preds = %553
  %564 = getelementptr inbounds i32, i32* %555, i64 1
  %565 = load i32, i32* %555, align 4
  br label %566

566:                                              ; preds = %563, %553
  %567 = phi i32 [ %565, %563 ], [ %434, %553 ]
  %568 = phi i32* [ %564, %563 ], [ %555, %553 ]
  %569 = getelementptr inbounds i32, i32* %542, i64 2
  store i32 %567, i32* %556, align 4
  %570 = add nuw nsw i32 %541, 2
  %571 = add i32 %544, -2
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %516, label %540
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops7PadImplIllEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* dereferenceable(44), %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*) local_unnamed_addr #6 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca [4 x i32], align 16
  %10 = bitcast [4 x i32]* %9 to i8*
  %11 = alloca [4 x i32], align 16
  %12 = bitcast [4 x i32]* %11 to i8*
  %13 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %14, align 8, !alias.scope !189
  %15 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 8, !noalias !189
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  tail call void @abort() #10, !noalias !189
  unreachable

19:                                               ; preds = %6
  store i32 4, i32* %14, align 8, !alias.scope !189
  %20 = sub i32 4, %16
  %21 = icmp sgt i32 %20, 0
  %22 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %21, label %23, label %103

23:                                               ; preds = %19
  %24 = bitcast %union.anon* %22 to [5 x i32]*
  %25 = zext i32 %20 to i64
  %26 = icmp ult i32 %20, 8
  br i1 %26, label %96, label %27

27:                                               ; preds = %23
  %28 = and i64 %25, 4294967288
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %27
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %37
  %40 = bitcast i32* %39 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %40, align 8, !alias.scope !189
  %41 = getelementptr inbounds i32, i32* %39, i64 4
  %42 = bitcast i32* %41 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %42, align 8, !alias.scope !189
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %43
  %45 = bitcast i32* %44 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %45, align 8, !alias.scope !189
  %46 = getelementptr inbounds i32, i32* %44, i64 4
  %47 = bitcast i32* %46 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %47, align 8, !alias.scope !189
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %48
  %50 = bitcast i32* %49 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %50, align 8, !alias.scope !189
  %51 = getelementptr inbounds i32, i32* %49, i64 4
  %52 = bitcast i32* %51 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %52, align 8, !alias.scope !189
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %53
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %55, align 8, !alias.scope !189
  %56 = getelementptr inbounds i32, i32* %54, i64 4
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %57, align 8, !alias.scope !189
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %58
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %60, align 8, !alias.scope !189
  %61 = getelementptr inbounds i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %62, align 8, !alias.scope !189
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %65, align 8, !alias.scope !189
  %66 = getelementptr inbounds i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %67, align 8, !alias.scope !189
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %70, align 8, !alias.scope !189
  %71 = getelementptr inbounds i32, i32* %69, i64 4
  %72 = bitcast i32* %71 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %72, align 8, !alias.scope !189
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %73
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %75, align 8, !alias.scope !189
  %76 = getelementptr inbounds i32, i32* %74, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %77, align 8, !alias.scope !189
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !192

81:                                               ; preds = %36, %27
  %82 = phi i64 [ 0, %27 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %85
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %88, align 8, !alias.scope !189
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %90, align 8, !alias.scope !189
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !193

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %28, %25
  br i1 %95, label %103, label %96

96:                                               ; preds = %94, %23
  %97 = phi i64 [ 0, %23 ], [ %28, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds [5 x i32], [5 x i32]* %24, i64 0, i64 %99
  store i32 1, i32* %100, align 4, !alias.scope !189
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %25
  br i1 %102, label %103, label %98, !llvm.loop !194

103:                                              ; preds = %98, %94, %19
  %104 = bitcast %union.anon* %22 to i32*
  %105 = sext i32 %20 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = icmp sgt i32 %16, 5
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %110 = getelementptr inbounds %union.anon, %union.anon* %109, i64 0, i32 0
  %111 = load i32*, i32** %110, align 8, !noalias !189
  %112 = bitcast %union.anon* %109 to i32*
  %113 = select i1 %108, i32* %111, i32* %112
  %114 = bitcast i32* %113 to i8*
  %115 = sext i32 %16 to i64
  %116 = shl nsw i64 %115, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %114, i64 %116, i1 false) #8
  %117 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %117) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 32, i1 false)
  %118 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %118, align 8, !alias.scope !195
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %120 = load i32, i32* %119, align 8, !noalias !195
  %121 = icmp sgt i32 %120, 4
  br i1 %121, label %122, label %123

122:                                              ; preds = %103
  tail call void @abort() #10, !noalias !195
  unreachable

123:                                              ; preds = %103
  store i32 4, i32* %118, align 8, !alias.scope !195
  %124 = sub i32 4, %120
  %125 = icmp sgt i32 %124, 0
  %126 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %125, label %127, label %207

127:                                              ; preds = %123
  %128 = bitcast %union.anon* %126 to [5 x i32]*
  %129 = zext i32 %124 to i64
  %130 = icmp ult i32 %124, 8
  br i1 %130, label %200, label %131

131:                                              ; preds = %127
  %132 = and i64 %129, 4294967288
  %133 = add nsw i64 %132, -8
  %134 = lshr exact i64 %133, 3
  %135 = add nuw nsw i64 %134, 1
  %136 = and i64 %135, 7
  %137 = icmp ult i64 %133, 56
  br i1 %137, label %185, label %138

138:                                              ; preds = %131
  %139 = sub nsw i64 %135, %136
  br label %140

140:                                              ; preds = %140, %138
  %141 = phi i64 [ 0, %138 ], [ %182, %140 ]
  %142 = phi i64 [ %139, %138 ], [ %183, %140 ]
  %143 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %141
  %144 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %144, align 8, !alias.scope !195
  %145 = getelementptr inbounds i32, i32* %143, i64 4
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !195
  %147 = or i64 %141, 8
  %148 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %147
  %149 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %149, align 8, !alias.scope !195
  %150 = getelementptr inbounds i32, i32* %148, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !195
  %152 = or i64 %141, 16
  %153 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %152
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %154, align 8, !alias.scope !195
  %155 = getelementptr inbounds i32, i32* %153, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !195
  %157 = or i64 %141, 24
  %158 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %157
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %159, align 8, !alias.scope !195
  %160 = getelementptr inbounds i32, i32* %158, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !195
  %162 = or i64 %141, 32
  %163 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %162
  %164 = bitcast i32* %163 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %164, align 8, !alias.scope !195
  %165 = getelementptr inbounds i32, i32* %163, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !195
  %167 = or i64 %141, 40
  %168 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %167
  %169 = bitcast i32* %168 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %169, align 8, !alias.scope !195
  %170 = getelementptr inbounds i32, i32* %168, i64 4
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !195
  %172 = or i64 %141, 48
  %173 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %172
  %174 = bitcast i32* %173 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %174, align 8, !alias.scope !195
  %175 = getelementptr inbounds i32, i32* %173, i64 4
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !195
  %177 = or i64 %141, 56
  %178 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %177
  %179 = bitcast i32* %178 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %179, align 8, !alias.scope !195
  %180 = getelementptr inbounds i32, i32* %178, i64 4
  %181 = bitcast i32* %180 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %181, align 8, !alias.scope !195
  %182 = add i64 %141, 64
  %183 = add i64 %142, -8
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %140, !llvm.loop !198

185:                                              ; preds = %140, %131
  %186 = phi i64 [ 0, %131 ], [ %182, %140 ]
  %187 = icmp eq i64 %136, 0
  br i1 %187, label %198, label %188

188:                                              ; preds = %185, %188
  %189 = phi i64 [ %195, %188 ], [ %186, %185 ]
  %190 = phi i64 [ %196, %188 ], [ %136, %185 ]
  %191 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %189
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %192, align 8, !alias.scope !195
  %193 = getelementptr inbounds i32, i32* %191, i64 4
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %194, align 8, !alias.scope !195
  %195 = add i64 %189, 8
  %196 = add i64 %190, -1
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %198, label %188, !llvm.loop !199

198:                                              ; preds = %188, %185
  %199 = icmp eq i64 %132, %129
  br i1 %199, label %207, label %200

200:                                              ; preds = %198, %127
  %201 = phi i64 [ 0, %127 ], [ %132, %198 ]
  br label %202

202:                                              ; preds = %200, %202
  %203 = phi i64 [ %205, %202 ], [ %201, %200 ]
  %204 = getelementptr inbounds [5 x i32], [5 x i32]* %128, i64 0, i64 %203
  store i32 1, i32* %204, align 4, !alias.scope !195
  %205 = add nuw nsw i64 %203, 1
  %206 = icmp eq i64 %205, %129
  br i1 %206, label %207, label %202, !llvm.loop !200

207:                                              ; preds = %202, %198, %123
  %208 = bitcast %union.anon* %126 to i32*
  %209 = sext i32 %124 to i64
  %210 = getelementptr inbounds i32, i32* %208, i64 %209
  %211 = bitcast i32* %210 to i8*
  %212 = icmp sgt i32 %120, 5
  %213 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %214 = getelementptr inbounds %union.anon, %union.anon* %213, i64 0, i32 0
  %215 = load i32*, i32** %214, align 8, !noalias !195
  %216 = bitcast %union.anon* %213 to i32*
  %217 = select i1 %212, i32* %215, i32* %216
  %218 = bitcast i32* %217 to i8*
  %219 = sext i32 %120 to i64
  %220 = shl nsw i64 %219, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %211, i8* align 4 %218, i64 %220, i1 false) #8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %221 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 0
  %222 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 1
  %223 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 2
  %224 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 0, i64 16, i1 false)
  %225 = getelementptr inbounds %union.anon, %union.anon* %126, i64 0, i32 0
  %226 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 2
  %227 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 0
  %228 = load i8, i8* %227, align 4
  %229 = icmp sgt i8 %228, 0
  br i1 %229, label %230, label %309

230:                                              ; preds = %207
  %231 = sext i8 %228 to i64
  %232 = sext i8 %228 to i64
  %233 = icmp ult i8 %228, 8
  br i1 %233, label %234, label %236

234:                                              ; preds = %307, %236, %230
  %235 = phi i64 [ 0, %236 ], [ 0, %230 ], [ %246, %307 ]
  br label %316

236:                                              ; preds = %230
  %237 = add nsw i64 %232, -1
  %238 = sext i8 %228 to i32
  %239 = sub nsw i32 4, %238
  %240 = trunc i64 %237 to i32
  %241 = add i32 %239, %240
  %242 = icmp slt i32 %241, %239
  %243 = icmp ugt i64 %237, 4294967295
  %244 = or i1 %242, %243
  br i1 %244, label %234, label %245

245:                                              ; preds = %236
  %246 = and i64 %232, -8
  %247 = add nsw i64 %246, -8
  %248 = lshr exact i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 1
  %251 = icmp eq i64 %247, 0
  br i1 %251, label %289, label %252

252:                                              ; preds = %245
  %253 = sub nuw nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %286, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %287, %254 ]
  %257 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %255
  %258 = bitcast i32* %257 to <4 x i32>*
  %259 = load <4 x i32>, <4 x i32>* %258, align 4
  %260 = getelementptr inbounds i32, i32* %257, i64 4
  %261 = bitcast i32* %260 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4
  %263 = or i64 %255, 4
  %264 = sub i64 %263, %231
  %265 = shl i64 %264, 32
  %266 = ashr exact i64 %265, 32
  %267 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %266
  %268 = bitcast i32* %267 to <4 x i32>*
  store <4 x i32> %259, <4 x i32>* %268, align 4
  %269 = getelementptr inbounds i32, i32* %267, i64 4
  %270 = bitcast i32* %269 to <4 x i32>*
  store <4 x i32> %262, <4 x i32>* %270, align 4
  %271 = or i64 %255, 8
  %272 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %271
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4
  %275 = getelementptr inbounds i32, i32* %272, i64 4
  %276 = bitcast i32* %275 to <4 x i32>*
  %277 = load <4 x i32>, <4 x i32>* %276, align 4
  %278 = or i64 %255, 12
  %279 = sub i64 %278, %231
  %280 = shl i64 %279, 32
  %281 = ashr exact i64 %280, 32
  %282 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %281
  %283 = bitcast i32* %282 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %283, align 4
  %284 = getelementptr inbounds i32, i32* %282, i64 4
  %285 = bitcast i32* %284 to <4 x i32>*
  store <4 x i32> %277, <4 x i32>* %285, align 4
  %286 = add i64 %255, 16
  %287 = add i64 %256, -2
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %289, label %254, !llvm.loop !201

289:                                              ; preds = %254, %245
  %290 = phi i64 [ 0, %245 ], [ %286, %254 ]
  %291 = icmp eq i64 %250, 0
  br i1 %291, label %307, label %292

292:                                              ; preds = %289
  %293 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %290
  %294 = bitcast i32* %293 to <4 x i32>*
  %295 = load <4 x i32>, <4 x i32>* %294, align 4
  %296 = getelementptr inbounds i32, i32* %293, i64 4
  %297 = bitcast i32* %296 to <4 x i32>*
  %298 = load <4 x i32>, <4 x i32>* %297, align 4
  %299 = or i64 %290, 4
  %300 = sub i64 %299, %231
  %301 = shl i64 %300, 32
  %302 = ashr exact i64 %301, 32
  %303 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %302
  %304 = bitcast i32* %303 to <4 x i32>*
  store <4 x i32> %295, <4 x i32>* %304, align 4
  %305 = getelementptr inbounds i32, i32* %303, i64 4
  %306 = bitcast i32* %305 to <4 x i32>*
  store <4 x i32> %298, <4 x i32>* %306, align 4
  br label %307

307:                                              ; preds = %289, %292
  %308 = icmp eq i64 %246, %232
  br i1 %308, label %309, label %234

309:                                              ; preds = %316, %307, %207
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8
  %310 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 0
  %311 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 1
  %312 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 2
  %313 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 0, i64 16, i1 false)
  %314 = load i8, i8* %226, align 4
  %315 = icmp sgt i8 %314, 0
  br i1 %315, label %327, label %406

316:                                              ; preds = %234, %316
  %317 = phi i64 [ %325, %316 ], [ %235, %234 ]
  %318 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 %317
  %319 = load i32, i32* %318, align 4
  %320 = add nuw i64 %317, 4
  %321 = sub i64 %320, %231
  %322 = shl i64 %321, 32
  %323 = ashr exact i64 %322, 32
  %324 = getelementptr inbounds [4 x i32], [4 x i32]* %9, i64 0, i64 %323
  store i32 %319, i32* %324, align 4
  %325 = add nuw nsw i64 %317, 1
  %326 = icmp slt i64 %325, %232
  br i1 %326, label %316, label %309, !llvm.loop !202

327:                                              ; preds = %309
  %328 = sext i8 %314 to i64
  %329 = sext i8 %314 to i64
  %330 = icmp ult i8 %314, 8
  br i1 %330, label %331, label %333

331:                                              ; preds = %404, %333, %327
  %332 = phi i64 [ 0, %333 ], [ 0, %327 ], [ %343, %404 ]
  br label %452

333:                                              ; preds = %327
  %334 = add nsw i64 %329, -1
  %335 = sext i8 %314 to i32
  %336 = sub nsw i32 4, %335
  %337 = trunc i64 %334 to i32
  %338 = add i32 %336, %337
  %339 = icmp slt i32 %338, %336
  %340 = icmp ugt i64 %334, 4294967295
  %341 = or i1 %339, %340
  br i1 %341, label %331, label %342

342:                                              ; preds = %333
  %343 = and i64 %329, -8
  %344 = add nsw i64 %343, -8
  %345 = lshr exact i64 %344, 3
  %346 = add nuw nsw i64 %345, 1
  %347 = and i64 %346, 1
  %348 = icmp eq i64 %344, 0
  br i1 %348, label %386, label %349

349:                                              ; preds = %342
  %350 = sub nuw nsw i64 %346, %347
  br label %351

351:                                              ; preds = %351, %349
  %352 = phi i64 [ 0, %349 ], [ %383, %351 ]
  %353 = phi i64 [ %350, %349 ], [ %384, %351 ]
  %354 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %352
  %355 = bitcast i32* %354 to <4 x i32>*
  %356 = load <4 x i32>, <4 x i32>* %355, align 4
  %357 = getelementptr inbounds i32, i32* %354, i64 4
  %358 = bitcast i32* %357 to <4 x i32>*
  %359 = load <4 x i32>, <4 x i32>* %358, align 4
  %360 = or i64 %352, 4
  %361 = sub i64 %360, %328
  %362 = shl i64 %361, 32
  %363 = ashr exact i64 %362, 32
  %364 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %363
  %365 = bitcast i32* %364 to <4 x i32>*
  store <4 x i32> %356, <4 x i32>* %365, align 4
  %366 = getelementptr inbounds i32, i32* %364, i64 4
  %367 = bitcast i32* %366 to <4 x i32>*
  store <4 x i32> %359, <4 x i32>* %367, align 4
  %368 = or i64 %352, 8
  %369 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %368
  %370 = bitcast i32* %369 to <4 x i32>*
  %371 = load <4 x i32>, <4 x i32>* %370, align 4
  %372 = getelementptr inbounds i32, i32* %369, i64 4
  %373 = bitcast i32* %372 to <4 x i32>*
  %374 = load <4 x i32>, <4 x i32>* %373, align 4
  %375 = or i64 %352, 12
  %376 = sub i64 %375, %328
  %377 = shl i64 %376, 32
  %378 = ashr exact i64 %377, 32
  %379 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %378
  %380 = bitcast i32* %379 to <4 x i32>*
  store <4 x i32> %371, <4 x i32>* %380, align 4
  %381 = getelementptr inbounds i32, i32* %379, i64 4
  %382 = bitcast i32* %381 to <4 x i32>*
  store <4 x i32> %374, <4 x i32>* %382, align 4
  %383 = add i64 %352, 16
  %384 = add i64 %353, -2
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %386, label %351, !llvm.loop !203

386:                                              ; preds = %351, %342
  %387 = phi i64 [ 0, %342 ], [ %383, %351 ]
  %388 = icmp eq i64 %347, 0
  br i1 %388, label %404, label %389

389:                                              ; preds = %386
  %390 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %387
  %391 = bitcast i32* %390 to <4 x i32>*
  %392 = load <4 x i32>, <4 x i32>* %391, align 4
  %393 = getelementptr inbounds i32, i32* %390, i64 4
  %394 = bitcast i32* %393 to <4 x i32>*
  %395 = load <4 x i32>, <4 x i32>* %394, align 4
  %396 = or i64 %387, 4
  %397 = sub i64 %396, %328
  %398 = shl i64 %397, 32
  %399 = ashr exact i64 %398, 32
  %400 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %399
  %401 = bitcast i32* %400 to <4 x i32>*
  store <4 x i32> %392, <4 x i32>* %401, align 4
  %402 = getelementptr inbounds i32, i32* %400, i64 4
  %403 = bitcast i32* %402 to <4 x i32>*
  store <4 x i32> %395, <4 x i32>* %403, align 4
  br label %404

404:                                              ; preds = %386, %389
  %405 = icmp eq i64 %343, %329
  br i1 %405, label %406, label %331

406:                                              ; preds = %452, %404, %309
  %407 = load i32, i32* %118, align 8
  %408 = icmp sgt i32 %407, 5
  br i1 %408, label %409, label %414

409:                                              ; preds = %406
  %410 = load i32*, i32** %225, align 8
  %411 = getelementptr inbounds i32, i32* %410, i64 1
  %412 = getelementptr inbounds i32, i32* %410, i64 2
  %413 = getelementptr inbounds i32, i32* %410, i64 3
  br label %421

414:                                              ; preds = %406
  %415 = bitcast %union.anon* %126 to [5 x i32]*
  %416 = getelementptr inbounds [5 x i32], [5 x i32]* %415, i64 0, i64 1
  %417 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %418 = bitcast [16 x i8]* %417 to i32*
  %419 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %420 = bitcast i8* %419 to i32*
  br label %421

421:                                              ; preds = %409, %414
  %422 = phi i32* [ %412, %409 ], [ %418, %414 ]
  %423 = phi i32* [ %410, %409 ], [ %208, %414 ]
  %424 = phi i32* [ %411, %409 ], [ %416, %414 ]
  %425 = phi i32* [ %413, %409 ], [ %420, %414 ]
  %426 = load i32, i32* %424, align 4
  %427 = load i32, i32* %423, align 4
  %428 = load i32, i32* %422, align 4
  %429 = load i32, i32* %425, align 4
  %430 = load i32, i32* %221, align 16
  %431 = load i32, i32* %222, align 4
  %432 = load i32, i32* %223, align 8
  %433 = load i32, i32* %224, align 4
  %434 = load i64, i64* %3, align 8
  %435 = icmp sgt i32 %427, 0
  br i1 %435, label %436, label %471

436:                                              ; preds = %421
  %437 = load i32, i32* %313, align 4
  %438 = load i32, i32* %312, align 8
  %439 = load i32, i32* %311, align 4
  %440 = load i32, i32* %310, align 16
  %441 = icmp sgt i32 %426, 0
  %442 = icmp sgt i32 %428, 0
  %443 = icmp sgt i32 %429, 0
  %444 = sub nsw i32 %427, %440
  %445 = sub nsw i32 %426, %439
  %446 = sub nsw i32 %428, %438
  %447 = sub nsw i32 %429, %437
  %448 = and i32 %429, 1
  %449 = icmp eq i32 %429, 1
  %450 = sub i32 %429, %448
  %451 = icmp eq i32 %448, 0
  br label %463

452:                                              ; preds = %331, %452
  %453 = phi i64 [ %461, %452 ], [ %332, %331 ]
  %454 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 %453
  %455 = load i32, i32* %454, align 4
  %456 = add nuw i64 %453, 4
  %457 = sub i64 %456, %328
  %458 = shl i64 %457, 32
  %459 = ashr exact i64 %458, 32
  %460 = getelementptr inbounds [4 x i32], [4 x i32]* %11, i64 0, i64 %459
  store i32 %455, i32* %460, align 4
  %461 = add nuw nsw i64 %453, 1
  %462 = icmp slt i64 %461, %329
  br i1 %462, label %452, label %406, !llvm.loop !204

463:                                              ; preds = %497, %436
  %464 = phi i32 [ 0, %436 ], [ %500, %497 ]
  %465 = phi i64* [ %5, %436 ], [ %499, %497 ]
  %466 = phi i64* [ %2, %436 ], [ %498, %497 ]
  br i1 %441, label %467, label %497

467:                                              ; preds = %463
  %468 = icmp slt i32 %464, %430
  %469 = icmp sge i32 %464, %444
  %470 = or i1 %469, %468
  br label %488

471:                                              ; preds = %497, %421
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  br i1 %408, label %472, label %478

472:                                              ; preds = %471
  %473 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %474 = load i32*, i32** %473, align 8
  %475 = icmp eq i32* %474, null
  br i1 %475, label %478, label %476

476:                                              ; preds = %472
  %477 = bitcast i32* %474 to i8*
  tail call void @_ZdaPv(i8* %477) #9
  br label %478

478:                                              ; preds = %471, %472, %476
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %117) #8
  %479 = load i32, i32* %14, align 8
  %480 = icmp sgt i32 %479, 5
  br i1 %480, label %481, label %487

481:                                              ; preds = %478
  %482 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %483 = load i32*, i32** %482, align 8
  %484 = icmp eq i32* %483, null
  br i1 %484, label %487, label %485

485:                                              ; preds = %481
  %486 = bitcast i32* %483 to i8*
  tail call void @_ZdaPv(i8* %486) #9
  br label %487

487:                                              ; preds = %478, %481, %485
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8
  ret void

488:                                              ; preds = %511, %467
  %489 = phi i32 [ 0, %467 ], [ %514, %511 ]
  %490 = phi i64* [ %465, %467 ], [ %513, %511 ]
  %491 = phi i64* [ %466, %467 ], [ %512, %511 ]
  br i1 %442, label %492, label %511

492:                                              ; preds = %488
  %493 = icmp slt i32 %489, %431
  %494 = or i1 %470, %493
  %495 = icmp sge i32 %489, %445
  %496 = or i1 %495, %494
  br label %502

497:                                              ; preds = %511, %463
  %498 = phi i64* [ %466, %463 ], [ %512, %511 ]
  %499 = phi i64* [ %465, %463 ], [ %513, %511 ]
  %500 = add nuw nsw i32 %464, 1
  %501 = icmp eq i32 %500, %427
  br i1 %501, label %471, label %463

502:                                              ; preds = %535, %492
  %503 = phi i32 [ 0, %492 ], [ %538, %535 ]
  %504 = phi i64* [ %490, %492 ], [ %537, %535 ]
  %505 = phi i64* [ %491, %492 ], [ %536, %535 ]
  br i1 %443, label %506, label %535

506:                                              ; preds = %502
  %507 = icmp slt i32 %503, %432
  %508 = or i1 %496, %507
  %509 = icmp sge i32 %503, %446
  %510 = or i1 %509, %508
  br i1 %449, label %516, label %540

511:                                              ; preds = %535, %488
  %512 = phi i64* [ %491, %488 ], [ %536, %535 ]
  %513 = phi i64* [ %490, %488 ], [ %537, %535 ]
  %514 = add nuw nsw i32 %489, 1
  %515 = icmp eq i32 %514, %426
  br i1 %515, label %497, label %488

516:                                              ; preds = %566, %506
  %517 = phi i64* [ undef, %506 ], [ %568, %566 ]
  %518 = phi i64* [ undef, %506 ], [ %569, %566 ]
  %519 = phi i32 [ 0, %506 ], [ %570, %566 ]
  %520 = phi i64* [ %504, %506 ], [ %569, %566 ]
  %521 = phi i64* [ %505, %506 ], [ %568, %566 ]
  br i1 %451, label %535, label %522

522:                                              ; preds = %516
  %523 = icmp slt i32 %519, %433
  %524 = or i1 %510, %523
  %525 = xor i1 %524, true
  %526 = icmp slt i32 %519, %447
  %527 = and i1 %526, %525
  br i1 %527, label %528, label %531

528:                                              ; preds = %522
  %529 = getelementptr inbounds i64, i64* %521, i64 1
  %530 = load i64, i64* %521, align 8
  br label %531

531:                                              ; preds = %528, %522
  %532 = phi i64 [ %530, %528 ], [ %434, %522 ]
  %533 = phi i64* [ %529, %528 ], [ %521, %522 ]
  store i64 %532, i64* %520, align 8
  %534 = getelementptr inbounds i64, i64* %520, i64 1
  br label %535

535:                                              ; preds = %531, %516, %502
  %536 = phi i64* [ %505, %502 ], [ %517, %516 ], [ %533, %531 ]
  %537 = phi i64* [ %504, %502 ], [ %518, %516 ], [ %534, %531 ]
  %538 = add nuw nsw i32 %503, 1
  %539 = icmp eq i32 %538, %428
  br i1 %539, label %511, label %502

540:                                              ; preds = %506, %566
  %541 = phi i32 [ %570, %566 ], [ 0, %506 ]
  %542 = phi i64* [ %569, %566 ], [ %504, %506 ]
  %543 = phi i64* [ %568, %566 ], [ %505, %506 ]
  %544 = phi i32 [ %571, %566 ], [ %450, %506 ]
  %545 = icmp slt i32 %541, %433
  %546 = or i1 %510, %545
  %547 = xor i1 %546, true
  %548 = icmp slt i32 %541, %447
  %549 = and i1 %548, %547
  br i1 %549, label %550, label %553

550:                                              ; preds = %540
  %551 = getelementptr inbounds i64, i64* %543, i64 1
  %552 = load i64, i64* %543, align 8
  br label %553

553:                                              ; preds = %540, %550
  %554 = phi i64 [ %552, %550 ], [ %434, %540 ]
  %555 = phi i64* [ %551, %550 ], [ %543, %540 ]
  %556 = getelementptr inbounds i64, i64* %542, i64 1
  store i64 %554, i64* %542, align 8
  %557 = or i32 %541, 1
  %558 = icmp slt i32 %557, %433
  %559 = or i1 %510, %558
  %560 = xor i1 %559, true
  %561 = icmp slt i32 %557, %447
  %562 = and i1 %561, %560
  br i1 %562, label %563, label %566

563:                                              ; preds = %553
  %564 = getelementptr inbounds i64, i64* %555, i64 1
  %565 = load i64, i64* %555, align 8
  br label %566

566:                                              ; preds = %563, %553
  %567 = phi i64 [ %565, %563 ], [ %434, %553 ]
  %568 = phi i64* [ %564, %563 ], [ %555, %553 ]
  %569 = getelementptr inbounds i64, i64* %542, i64 2
  store i64 %567, i64* %556, align 8
  %570 = add nuw nsw i32 %541, 2
  %571 = add i32 %544, -2
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %516, label %540
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops19PadImageStyleMemsetIffEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* dereferenceable(44), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #6 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !205
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 8, !noalias !205
  %13 = icmp sgt i32 %12, 4
  br i1 %13, label %14, label %15

14:                                               ; preds = %6
  tail call void @abort() #10, !noalias !205
  unreachable

15:                                               ; preds = %6
  store i32 4, i32* %10, align 8, !alias.scope !205
  %16 = sub i32 4, %12
  %17 = icmp sgt i32 %16, 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %17, label %19, label %99

19:                                               ; preds = %15
  %20 = bitcast %union.anon* %18 to [5 x i32]*
  %21 = zext i32 %16 to i64
  %22 = icmp ult i32 %16, 8
  br i1 %22, label %92, label %23

23:                                               ; preds = %19
  %24 = and i64 %21, 4294967288
  %25 = add nsw i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !205
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !205
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !205
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !205
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !205
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !205
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !205
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !205
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !205
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !205
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !205
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !205
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !205
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !205
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !205
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !205
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !208

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !205
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !205
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !209

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %21
  br i1 %91, label %99, label %92

92:                                               ; preds = %90, %19
  %93 = phi i64 [ 0, %19 ], [ %24, %90 ]
  br label %94

94:                                               ; preds = %92, %94
  %95 = phi i64 [ %97, %94 ], [ %93, %92 ]
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %95
  store i32 1, i32* %96, align 4, !alias.scope !205
  %97 = add nuw nsw i64 %95, 1
  %98 = icmp eq i64 %97, %21
  br i1 %98, label %99, label %94, !llvm.loop !210

99:                                               ; preds = %94, %90, %15
  %100 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %101 = bitcast %union.anon* %18 to i32*
  %102 = sext i32 %16 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  %104 = bitcast i32* %103 to i8*
  %105 = icmp sgt i32 %12, 5
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %107 = getelementptr inbounds %union.anon, %union.anon* %106, i64 0, i32 0
  %108 = load i32*, i32** %107, align 8, !noalias !205
  %109 = bitcast %union.anon* %106 to i32*
  %110 = select i1 %105, i32* %108, i32* %109
  %111 = bitcast i32* %110 to i8*
  %112 = sext i32 %12 to i64
  %113 = shl nsw i64 %112, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %111, i64 %113, i1 false) #8
  %114 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 32, i1 false)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !211
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %117 = load i32, i32* %116, align 8, !noalias !211
  %118 = icmp sgt i32 %117, 4
  br i1 %118, label %119, label %120

119:                                              ; preds = %99
  tail call void @abort() #10, !noalias !211
  unreachable

120:                                              ; preds = %99
  store i32 4, i32* %115, align 8, !alias.scope !211
  %121 = sub i32 4, %117
  %122 = icmp sgt i32 %121, 0
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %122, label %124, label %204

124:                                              ; preds = %120
  %125 = bitcast %union.anon* %123 to [5 x i32]*
  %126 = zext i32 %121 to i64
  %127 = icmp ult i32 %121, 8
  br i1 %127, label %197, label %128

128:                                              ; preds = %124
  %129 = and i64 %126, 4294967288
  %130 = add nsw i64 %129, -8
  %131 = lshr exact i64 %130, 3
  %132 = add nuw nsw i64 %131, 1
  %133 = and i64 %132, 7
  %134 = icmp ult i64 %130, 56
  br i1 %134, label %182, label %135

135:                                              ; preds = %128
  %136 = sub nsw i64 %132, %133
  br label %137

137:                                              ; preds = %137, %135
  %138 = phi i64 [ 0, %135 ], [ %179, %137 ]
  %139 = phi i64 [ %136, %135 ], [ %180, %137 ]
  %140 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %138
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %141, align 8, !alias.scope !211
  %142 = getelementptr inbounds i32, i32* %140, i64 4
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %143, align 8, !alias.scope !211
  %144 = or i64 %138, 8
  %145 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %144
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !211
  %147 = getelementptr inbounds i32, i32* %145, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %148, align 8, !alias.scope !211
  %149 = or i64 %138, 16
  %150 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %149
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !211
  %152 = getelementptr inbounds i32, i32* %150, i64 4
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %153, align 8, !alias.scope !211
  %154 = or i64 %138, 24
  %155 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %154
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !211
  %157 = getelementptr inbounds i32, i32* %155, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %158, align 8, !alias.scope !211
  %159 = or i64 %138, 32
  %160 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %159
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !211
  %162 = getelementptr inbounds i32, i32* %160, i64 4
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %163, align 8, !alias.scope !211
  %164 = or i64 %138, 40
  %165 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %164
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !211
  %167 = getelementptr inbounds i32, i32* %165, i64 4
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %168, align 8, !alias.scope !211
  %169 = or i64 %138, 48
  %170 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %169
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !211
  %172 = getelementptr inbounds i32, i32* %170, i64 4
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %173, align 8, !alias.scope !211
  %174 = or i64 %138, 56
  %175 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !211
  %177 = getelementptr inbounds i32, i32* %175, i64 4
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %178, align 8, !alias.scope !211
  %179 = add i64 %138, 64
  %180 = add i64 %139, -8
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %137, !llvm.loop !214

182:                                              ; preds = %137, %128
  %183 = phi i64 [ 0, %128 ], [ %179, %137 ]
  %184 = icmp eq i64 %133, 0
  br i1 %184, label %195, label %185

185:                                              ; preds = %182, %185
  %186 = phi i64 [ %192, %185 ], [ %183, %182 ]
  %187 = phi i64 [ %193, %185 ], [ %133, %182 ]
  %188 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %186
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !211
  %190 = getelementptr inbounds i32, i32* %188, i64 4
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %191, align 8, !alias.scope !211
  %192 = add i64 %186, 8
  %193 = add i64 %187, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %185, !llvm.loop !215

195:                                              ; preds = %185, %182
  %196 = icmp eq i64 %129, %126
  br i1 %196, label %204, label %197

197:                                              ; preds = %195, %124
  %198 = phi i64 [ 0, %124 ], [ %129, %195 ]
  br label %199

199:                                              ; preds = %197, %199
  %200 = phi i64 [ %202, %199 ], [ %198, %197 ]
  %201 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %200
  store i32 1, i32* %201, align 4, !alias.scope !211
  %202 = add nuw nsw i64 %200, 1
  %203 = icmp eq i64 %202, %126
  br i1 %203, label %204, label %199, !llvm.loop !216

204:                                              ; preds = %199, %195, %120
  %205 = bitcast %union.anon* %123 to i32*
  %206 = sext i32 %121 to i64
  %207 = getelementptr inbounds i32, i32* %205, i64 %206
  %208 = bitcast i32* %207 to i8*
  %209 = icmp sgt i32 %117, 5
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %211 = getelementptr inbounds %union.anon, %union.anon* %210, i64 0, i32 0
  %212 = load i32*, i32** %211, align 8, !noalias !211
  %213 = bitcast %union.anon* %210 to i32*
  %214 = select i1 %209, i32* %212, i32* %213
  %215 = bitcast i32* %214 to i8*
  %216 = sext i32 %117 to i64
  %217 = shl nsw i64 %216, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %208, i8* align 4 %215, i64 %217, i1 false) #8
  %218 = tail call i8* @_Znwm(i64 16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %218, i8 0, i64 16, i1 false)
  %219 = getelementptr inbounds %union.anon, %union.anon* %123, i64 0, i32 0
  %220 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 2
  %221 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 0
  %222 = load i8, i8* %221, align 4
  %223 = sext i8 %222 to i32
  %224 = icmp sgt i8 %222, 0
  br i1 %224, label %225, label %235

225:                                              ; preds = %204
  %226 = zext i32 %223 to i64
  %227 = sub nsw i32 0, %223
  %228 = sext i32 %227 to i64
  %229 = shl nsw i64 %228, 2
  %230 = add nsw i64 %229, 16
  %231 = getelementptr i8, i8* %218, i64 %230
  %232 = getelementptr %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 0
  %233 = bitcast i32* %232 to i8*
  %234 = shl nuw nsw i64 %226, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %231, i8* align 4 %233, i64 %234, i1 false)
  br label %235

235:                                              ; preds = %225, %204
  %236 = tail call i8* @_Znwm(i64 16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %236, i8 0, i64 16, i1 false)
  %237 = load i8, i8* %220, align 4
  %238 = sext i8 %237 to i32
  %239 = icmp sgt i8 %237, 0
  br i1 %239, label %240, label %256

240:                                              ; preds = %235
  %241 = zext i32 %238 to i64
  %242 = sub nsw i32 0, %238
  %243 = sext i32 %242 to i64
  %244 = shl nsw i64 %243, 2
  %245 = add nsw i64 %244, 16
  %246 = getelementptr i8, i8* %236, i64 %245
  %247 = getelementptr %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 0
  %248 = bitcast i32* %247 to i8*
  %249 = shl nuw nsw i64 %241, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %246, i8* align 4 %248, i64 %249, i1 false)
  %250 = getelementptr inbounds i8, i8* %236, i64 4
  %251 = bitcast i8* %250 to i32*
  %252 = load i32, i32* %251, align 4
  %253 = getelementptr inbounds i8, i8* %236, i64 8
  %254 = bitcast i8* %253 to i32*
  %255 = load i32, i32* %254, align 4
  br label %256

256:                                              ; preds = %235, %240
  %257 = phi i32 [ %255, %240 ], [ 0, %235 ]
  %258 = phi i32 [ %252, %240 ], [ 0, %235 ]
  %259 = load i32, i32* %10, align 8
  %260 = icmp sgt i32 %259, 5
  %261 = load i32, i32* %115, align 8
  %262 = icmp sgt i32 %261, 5
  %263 = load i32*, i32** %100, align 8
  %264 = bitcast %union.anon* %18 to [5 x i32]*
  %265 = select i1 %260, i32* %263, i32* %101
  %266 = load i32, i32* %265, align 4
  %267 = load i32*, i32** %219, align 8
  %268 = select i1 %262, i32* %267, i32* %205
  %269 = load i32, i32* %268, align 4
  %270 = icmp slt i32 %269, %266
  %271 = select i1 %270, i32 %269, i32 %266
  %272 = getelementptr inbounds i32, i32* %267, i64 2
  %273 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %274 = bitcast [16 x i8]* %273 to i32*
  %275 = select i1 %262, i32* %272, i32* %274
  %276 = load i32, i32* %275, align 4
  %277 = getelementptr inbounds i32, i32* %263, i64 1
  %278 = getelementptr inbounds i32, i32* %263, i64 2
  %279 = getelementptr inbounds [5 x i32], [5 x i32]* %264, i64 0, i64 1
  %280 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %281 = bitcast [16 x i8]* %280 to i32*
  %282 = select i1 %260, i32* %277, i32* %279
  %283 = select i1 %260, i32* %278, i32* %281
  %284 = load i32, i32* %282, align 4
  %285 = load i32, i32* %283, align 4
  %286 = getelementptr inbounds i32, i32* %263, i64 3
  %287 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %288 = bitcast i8* %287 to i32*
  %289 = select i1 %260, i32* %286, i32* %288
  %290 = load i32, i32* %289, align 4
  %291 = getelementptr inbounds i32, i32* %267, i64 3
  %292 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %293 = bitcast i8* %292 to i32*
  %294 = select i1 %262, i32* %291, i32* %293
  %295 = load i32, i32* %294, align 4
  %296 = icmp slt i32 %295, %290
  %297 = select i1 %296, i32 %295, i32 %290
  %298 = getelementptr inbounds i8, i8* %218, i64 4
  %299 = bitcast i8* %298 to i32*
  %300 = load i32, i32* %299, align 4
  %301 = getelementptr inbounds i8, i8* %218, i64 8
  %302 = bitcast i8* %301 to i32*
  %303 = load i32, i32* %302, align 4
  %304 = load float, float* %3, align 4
  %305 = mul i32 %297, %276
  %306 = mul i32 %305, %300
  %307 = sext i32 %306 to i64
  %308 = shl nsw i64 %307, 2
  %309 = mul i32 %305, %258
  %310 = sext i32 %309 to i64
  %311 = shl nsw i64 %310, 2
  %312 = mul nsw i32 %303, %297
  %313 = sext i32 %312 to i64
  %314 = shl nsw i64 %313, 2
  %315 = mul nsw i32 %257, %297
  %316 = sext i32 %315 to i64
  %317 = shl nsw i64 %316, 2
  %318 = mul nsw i32 %297, %285
  %319 = sext i32 %318 to i64
  %320 = shl nsw i64 %319, 2
  %321 = icmp eq i32 %284, 0
  br i1 %321, label %343, label %322

322:                                              ; preds = %256
  %323 = icmp sgt i32 %271, 0
  br i1 %323, label %324, label %431

324:                                              ; preds = %322
  %325 = fptosi float %304 to i32
  %326 = trunc i32 %325 to i8
  %327 = add nsw i64 %308, %314
  %328 = add nsw i32 %306, %312
  %329 = sext i32 %328 to i64
  %330 = icmp sgt i32 %284, 1
  %331 = add nsw i64 %317, %314
  %332 = add nsw i32 %315, %312
  %333 = sext i32 %332 to i64
  %334 = add nsw i64 %317, %311
  %335 = add nsw i32 %315, %309
  %336 = sext i32 %335 to i64
  %337 = add i32 %284, -1
  %338 = add i32 %284, -2
  %339 = and i32 %337, 3
  %340 = icmp ult i32 %338, 3
  %341 = sub i32 %337, %339
  %342 = icmp eq i32 %339, 0
  br label %348

343:                                              ; preds = %256
  %344 = bitcast float* %5 to i8*
  %345 = fptosi float %304 to i32
  %346 = trunc i32 %345 to i8
  %347 = add nsw i64 %311, %308
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %344, i8 %346, i64 %347, i1 false)
  br label %431

348:                                              ; preds = %324, %388
  %349 = phi i32 [ 0, %324 ], [ %394, %388 ]
  %350 = phi float* [ %2, %324 ], [ %389, %388 ]
  %351 = phi float* [ %5, %324 ], [ %393, %388 ]
  %352 = bitcast float* %351 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %352, i8 %326, i64 %327, i1 false)
  %353 = getelementptr inbounds float, float* %351, i64 %329
  %354 = bitcast float* %353 to i8*
  %355 = bitcast float* %350 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %354, i8* align 4 %355, i64 %320, i1 false)
  %356 = getelementptr inbounds float, float* %350, i64 %319
  %357 = getelementptr inbounds float, float* %353, i64 %319
  %358 = bitcast float* %357 to i8*
  br i1 %330, label %359, label %388

359:                                              ; preds = %348
  br i1 %340, label %362, label %396

360:                                              ; preds = %396
  %361 = bitcast float* %427 to i8*
  br label %362

362:                                              ; preds = %360, %359
  %363 = phi float* [ undef, %359 ], [ %423, %360 ]
  %364 = phi float* [ undef, %359 ], [ %426, %360 ]
  %365 = phi float* [ undef, %359 ], [ %427, %360 ]
  %366 = phi i8* [ %358, %359 ], [ %361, %360 ]
  %367 = phi float* [ %353, %359 ], [ %423, %360 ]
  %368 = phi float* [ %356, %359 ], [ %426, %360 ]
  br i1 %342, label %383, label %369

369:                                              ; preds = %362, %369
  %370 = phi i8* [ %380, %369 ], [ %366, %362 ]
  %371 = phi float* [ %375, %369 ], [ %367, %362 ]
  %372 = phi float* [ %378, %369 ], [ %368, %362 ]
  %373 = phi i32 [ %381, %369 ], [ %339, %362 ]
  %374 = getelementptr inbounds float, float* %371, i64 %319
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %370, i8 %326, i64 %331, i1 false)
  %375 = getelementptr inbounds float, float* %374, i64 %333
  %376 = bitcast float* %375 to i8*
  %377 = bitcast float* %372 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %376, i8* align 4 %377, i64 %320, i1 false)
  %378 = getelementptr inbounds float, float* %372, i64 %319
  %379 = getelementptr inbounds float, float* %375, i64 %319
  %380 = bitcast float* %379 to i8*
  %381 = add i32 %373, -1
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %369, !llvm.loop !217

383:                                              ; preds = %369, %362
  %384 = phi float* [ %363, %362 ], [ %375, %369 ]
  %385 = phi float* [ %364, %362 ], [ %378, %369 ]
  %386 = phi float* [ %365, %362 ], [ %379, %369 ]
  %387 = bitcast float* %386 to i8*
  br label %388

388:                                              ; preds = %383, %348
  %389 = phi float* [ %356, %348 ], [ %385, %383 ]
  %390 = phi float* [ %353, %348 ], [ %384, %383 ]
  %391 = phi i8* [ %358, %348 ], [ %387, %383 ]
  %392 = getelementptr inbounds float, float* %390, i64 %319
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %391, i8 %326, i64 %334, i1 false)
  %393 = getelementptr inbounds float, float* %392, i64 %336
  %394 = add nuw nsw i32 %349, 1
  %395 = icmp slt i32 %394, %271
  br i1 %395, label %348, label %431

396:                                              ; preds = %359, %396
  %397 = phi i8* [ %428, %396 ], [ %358, %359 ]
  %398 = phi float* [ %423, %396 ], [ %353, %359 ]
  %399 = phi float* [ %426, %396 ], [ %356, %359 ]
  %400 = phi i32 [ %429, %396 ], [ %341, %359 ]
  %401 = getelementptr inbounds float, float* %398, i64 %319
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %397, i8 %326, i64 %331, i1 false)
  %402 = getelementptr inbounds float, float* %401, i64 %333
  %403 = bitcast float* %402 to i8*
  %404 = bitcast float* %399 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %403, i8* align 4 %404, i64 %320, i1 false)
  %405 = getelementptr inbounds float, float* %399, i64 %319
  %406 = getelementptr inbounds float, float* %402, i64 %319
  %407 = bitcast float* %406 to i8*
  %408 = getelementptr inbounds float, float* %402, i64 %319
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %407, i8 %326, i64 %331, i1 false)
  %409 = getelementptr inbounds float, float* %408, i64 %333
  %410 = bitcast float* %409 to i8*
  %411 = bitcast float* %405 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %410, i8* align 4 %411, i64 %320, i1 false)
  %412 = getelementptr inbounds float, float* %405, i64 %319
  %413 = getelementptr inbounds float, float* %409, i64 %319
  %414 = bitcast float* %413 to i8*
  %415 = getelementptr inbounds float, float* %409, i64 %319
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %414, i8 %326, i64 %331, i1 false)
  %416 = getelementptr inbounds float, float* %415, i64 %333
  %417 = bitcast float* %416 to i8*
  %418 = bitcast float* %412 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %417, i8* align 4 %418, i64 %320, i1 false)
  %419 = getelementptr inbounds float, float* %412, i64 %319
  %420 = getelementptr inbounds float, float* %416, i64 %319
  %421 = bitcast float* %420 to i8*
  %422 = getelementptr inbounds float, float* %416, i64 %319
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %421, i8 %326, i64 %331, i1 false)
  %423 = getelementptr inbounds float, float* %422, i64 %333
  %424 = bitcast float* %423 to i8*
  %425 = bitcast float* %419 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %424, i8* align 4 %425, i64 %320, i1 false)
  %426 = getelementptr inbounds float, float* %419, i64 %319
  %427 = getelementptr inbounds float, float* %423, i64 %319
  %428 = bitcast float* %427 to i8*
  %429 = add i32 %400, -4
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %360, label %396

431:                                              ; preds = %388, %322, %343
  tail call void @_ZdlPv(i8* nonnull %236) #9
  tail call void @_ZdlPv(i8* nonnull %218) #9
  %432 = xor i1 %262, true
  %433 = icmp eq i32* %267, null
  %434 = or i1 %433, %432
  br i1 %434, label %437, label %435

435:                                              ; preds = %431
  %436 = bitcast i32* %267 to i8*
  tail call void @_ZdaPv(i8* %436) #9
  br label %437

437:                                              ; preds = %431, %435
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #8
  %438 = xor i1 %260, true
  %439 = icmp eq i32* %263, null
  %440 = or i1 %439, %438
  br i1 %440, label %443, label %441

441:                                              ; preds = %437
  %442 = bitcast i32* %263 to i8*
  tail call void @_ZdaPv(i8* %442) #9
  br label %443

443:                                              ; preds = %437, %441
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops7PadImplIffEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* dereferenceable(44), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #6 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !218
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 8, !noalias !218
  %13 = icmp sgt i32 %12, 4
  br i1 %13, label %14, label %15

14:                                               ; preds = %6
  tail call void @abort() #10, !noalias !218
  unreachable

15:                                               ; preds = %6
  store i32 4, i32* %10, align 8, !alias.scope !218
  %16 = sub i32 4, %12
  %17 = icmp sgt i32 %16, 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %17, label %19, label %99

19:                                               ; preds = %15
  %20 = bitcast %union.anon* %18 to [5 x i32]*
  %21 = zext i32 %16 to i64
  %22 = icmp ult i32 %16, 8
  br i1 %22, label %92, label %23

23:                                               ; preds = %19
  %24 = and i64 %21, 4294967288
  %25 = add nsw i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !218
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !218
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !218
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !218
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !218
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !218
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !218
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !218
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !218
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !218
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !218
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !218
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !218
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !218
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !218
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !218
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !221

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !218
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !218
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !222

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %21
  br i1 %91, label %99, label %92

92:                                               ; preds = %90, %19
  %93 = phi i64 [ 0, %19 ], [ %24, %90 ]
  br label %94

94:                                               ; preds = %92, %94
  %95 = phi i64 [ %97, %94 ], [ %93, %92 ]
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %95
  store i32 1, i32* %96, align 4, !alias.scope !218
  %97 = add nuw nsw i64 %95, 1
  %98 = icmp eq i64 %97, %21
  br i1 %98, label %99, label %94, !llvm.loop !223

99:                                               ; preds = %94, %90, %15
  %100 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %101 = bitcast %union.anon* %18 to i32*
  %102 = sext i32 %16 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  %104 = bitcast i32* %103 to i8*
  %105 = icmp sgt i32 %12, 5
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %107 = getelementptr inbounds %union.anon, %union.anon* %106, i64 0, i32 0
  %108 = load i32*, i32** %107, align 8, !noalias !218
  %109 = bitcast %union.anon* %106 to i32*
  %110 = select i1 %105, i32* %108, i32* %109
  %111 = bitcast i32* %110 to i8*
  %112 = sext i32 %12 to i64
  %113 = shl nsw i64 %112, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %111, i64 %113, i1 false) #8
  %114 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 32, i1 false)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !224
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %117 = load i32, i32* %116, align 8, !noalias !224
  %118 = icmp sgt i32 %117, 4
  br i1 %118, label %119, label %120

119:                                              ; preds = %99
  tail call void @abort() #10, !noalias !224
  unreachable

120:                                              ; preds = %99
  store i32 4, i32* %115, align 8, !alias.scope !224
  %121 = sub i32 4, %117
  %122 = icmp sgt i32 %121, 0
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %122, label %124, label %204

124:                                              ; preds = %120
  %125 = bitcast %union.anon* %123 to [5 x i32]*
  %126 = zext i32 %121 to i64
  %127 = icmp ult i32 %121, 8
  br i1 %127, label %197, label %128

128:                                              ; preds = %124
  %129 = and i64 %126, 4294967288
  %130 = add nsw i64 %129, -8
  %131 = lshr exact i64 %130, 3
  %132 = add nuw nsw i64 %131, 1
  %133 = and i64 %132, 7
  %134 = icmp ult i64 %130, 56
  br i1 %134, label %182, label %135

135:                                              ; preds = %128
  %136 = sub nsw i64 %132, %133
  br label %137

137:                                              ; preds = %137, %135
  %138 = phi i64 [ 0, %135 ], [ %179, %137 ]
  %139 = phi i64 [ %136, %135 ], [ %180, %137 ]
  %140 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %138
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %141, align 8, !alias.scope !224
  %142 = getelementptr inbounds i32, i32* %140, i64 4
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %143, align 8, !alias.scope !224
  %144 = or i64 %138, 8
  %145 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %144
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !224
  %147 = getelementptr inbounds i32, i32* %145, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %148, align 8, !alias.scope !224
  %149 = or i64 %138, 16
  %150 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %149
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !224
  %152 = getelementptr inbounds i32, i32* %150, i64 4
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %153, align 8, !alias.scope !224
  %154 = or i64 %138, 24
  %155 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %154
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !224
  %157 = getelementptr inbounds i32, i32* %155, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %158, align 8, !alias.scope !224
  %159 = or i64 %138, 32
  %160 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %159
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !224
  %162 = getelementptr inbounds i32, i32* %160, i64 4
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %163, align 8, !alias.scope !224
  %164 = or i64 %138, 40
  %165 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %164
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !224
  %167 = getelementptr inbounds i32, i32* %165, i64 4
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %168, align 8, !alias.scope !224
  %169 = or i64 %138, 48
  %170 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %169
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !224
  %172 = getelementptr inbounds i32, i32* %170, i64 4
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %173, align 8, !alias.scope !224
  %174 = or i64 %138, 56
  %175 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !224
  %177 = getelementptr inbounds i32, i32* %175, i64 4
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %178, align 8, !alias.scope !224
  %179 = add i64 %138, 64
  %180 = add i64 %139, -8
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %137, !llvm.loop !227

182:                                              ; preds = %137, %128
  %183 = phi i64 [ 0, %128 ], [ %179, %137 ]
  %184 = icmp eq i64 %133, 0
  br i1 %184, label %195, label %185

185:                                              ; preds = %182, %185
  %186 = phi i64 [ %192, %185 ], [ %183, %182 ]
  %187 = phi i64 [ %193, %185 ], [ %133, %182 ]
  %188 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %186
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !224
  %190 = getelementptr inbounds i32, i32* %188, i64 4
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %191, align 8, !alias.scope !224
  %192 = add i64 %186, 8
  %193 = add i64 %187, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %185, !llvm.loop !228

195:                                              ; preds = %185, %182
  %196 = icmp eq i64 %129, %126
  br i1 %196, label %204, label %197

197:                                              ; preds = %195, %124
  %198 = phi i64 [ 0, %124 ], [ %129, %195 ]
  br label %199

199:                                              ; preds = %197, %199
  %200 = phi i64 [ %202, %199 ], [ %198, %197 ]
  %201 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %200
  store i32 1, i32* %201, align 4, !alias.scope !224
  %202 = add nuw nsw i64 %200, 1
  %203 = icmp eq i64 %202, %126
  br i1 %203, label %204, label %199, !llvm.loop !229

204:                                              ; preds = %199, %195, %120
  %205 = bitcast %union.anon* %123 to i32*
  %206 = sext i32 %121 to i64
  %207 = getelementptr inbounds i32, i32* %205, i64 %206
  %208 = bitcast i32* %207 to i8*
  %209 = icmp sgt i32 %117, 5
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %211 = getelementptr inbounds %union.anon, %union.anon* %210, i64 0, i32 0
  %212 = load i32*, i32** %211, align 8, !noalias !224
  %213 = bitcast %union.anon* %210 to i32*
  %214 = select i1 %209, i32* %212, i32* %213
  %215 = bitcast i32* %214 to i8*
  %216 = sext i32 %117 to i64
  %217 = shl nsw i64 %216, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %208, i8* align 4 %215, i64 %217, i1 false) #8
  %218 = tail call i8* @_Znwm(i64 16) #9
  %219 = bitcast i8* %218 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %218, i8 0, i64 16, i1 false)
  %220 = getelementptr inbounds %union.anon, %union.anon* %123, i64 0, i32 0
  %221 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 2
  %222 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 0
  %223 = load i8, i8* %222, align 4
  %224 = sext i8 %223 to i32
  %225 = icmp sgt i8 %223, 0
  br i1 %225, label %226, label %236

226:                                              ; preds = %204
  %227 = zext i32 %224 to i64
  %228 = sub nsw i32 0, %224
  %229 = sext i32 %228 to i64
  %230 = shl nsw i64 %229, 2
  %231 = add nsw i64 %230, 16
  %232 = getelementptr i8, i8* %218, i64 %231
  %233 = getelementptr %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 0
  %234 = bitcast i32* %233 to i8*
  %235 = shl nuw nsw i64 %227, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %232, i8* align 4 %234, i64 %235, i1 false)
  br label %236

236:                                              ; preds = %226, %204
  %237 = tail call i8* @_Znwm(i64 16) #9
  %238 = bitcast i8* %237 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %237, i8 0, i64 16, i1 false)
  %239 = load i8, i8* %221, align 4
  %240 = sext i8 %239 to i32
  %241 = icmp sgt i8 %239, 0
  br i1 %241, label %242, label %252

242:                                              ; preds = %236
  %243 = zext i32 %240 to i64
  %244 = sub nsw i32 0, %240
  %245 = sext i32 %244 to i64
  %246 = shl nsw i64 %245, 2
  %247 = add nsw i64 %246, 16
  %248 = getelementptr i8, i8* %237, i64 %247
  %249 = getelementptr %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 0
  %250 = bitcast i32* %249 to i8*
  %251 = shl nuw nsw i64 %243, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %248, i8* align 4 %250, i64 %251, i1 false)
  br label %252

252:                                              ; preds = %242, %236
  %253 = load i32, i32* %115, align 8
  %254 = icmp sgt i32 %253, 5
  br i1 %254, label %255, label %260

255:                                              ; preds = %252
  %256 = load i32*, i32** %220, align 8
  %257 = getelementptr inbounds i32, i32* %256, i64 1
  %258 = getelementptr inbounds i32, i32* %256, i64 2
  %259 = getelementptr inbounds i32, i32* %256, i64 3
  br label %267

260:                                              ; preds = %252
  %261 = bitcast %union.anon* %123 to [5 x i32]*
  %262 = getelementptr inbounds [5 x i32], [5 x i32]* %261, i64 0, i64 1
  %263 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %264 = bitcast [16 x i8]* %263 to i32*
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %266 = bitcast i8* %265 to i32*
  br label %267

267:                                              ; preds = %255, %260
  %268 = phi i32* [ %258, %255 ], [ %264, %260 ]
  %269 = phi i32* [ %256, %255 ], [ %205, %260 ]
  %270 = phi i32* [ %257, %255 ], [ %262, %260 ]
  %271 = phi i32* [ %259, %255 ], [ %266, %260 ]
  %272 = load i32, i32* %270, align 4
  %273 = load i32, i32* %269, align 4
  %274 = load i32, i32* %268, align 4
  %275 = load i32, i32* %271, align 4
  %276 = load i32, i32* %219, align 4
  %277 = getelementptr inbounds i8, i8* %218, i64 4
  %278 = bitcast i8* %277 to i32*
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr inbounds i8, i8* %218, i64 8
  %281 = bitcast i8* %280 to i32*
  %282 = load i32, i32* %281, align 4
  %283 = getelementptr inbounds i8, i8* %218, i64 12
  %284 = bitcast i8* %283 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = load i32, i32* %238, align 4
  %287 = getelementptr inbounds i8, i8* %237, i64 4
  %288 = bitcast i8* %287 to i32*
  %289 = load i32, i32* %288, align 4
  %290 = getelementptr inbounds i8, i8* %237, i64 8
  %291 = bitcast i8* %290 to i32*
  %292 = load i32, i32* %291, align 4
  %293 = getelementptr inbounds i8, i8* %237, i64 12
  %294 = bitcast i8* %293 to i32*
  %295 = load i32, i32* %294, align 4
  %296 = load i32, i32* %10, align 8
  %297 = icmp sgt i32 %296, 5
  %298 = load i32*, i32** %100, align 8
  %299 = getelementptr inbounds i32, i32* %298, i64 3
  %300 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %301 = bitcast i8* %300 to i32*
  %302 = select i1 %297, i32* %299, i32* %301
  %303 = load i32, i32* %302, align 4
  %304 = load float, float* %3, align 4
  %305 = icmp eq i32 %276, 0
  br i1 %305, label %406, label %306

306:                                              ; preds = %267
  %307 = bitcast float* %5 to i8*
  %308 = mul i32 %275, %274
  %309 = mul i32 %308, %272
  %310 = mul i32 %309, %276
  %311 = sext i32 %310 to i64
  %312 = fcmp oeq float %304, 0.000000e+00
  br i1 %312, label %395, label %313

313:                                              ; preds = %306
  %314 = icmp eq i32 %310, 0
  br i1 %314, label %406, label %315

315:                                              ; preds = %313
  %316 = icmp ult i32 %310, 8
  br i1 %316, label %317, label %320

317:                                              ; preds = %393, %315
  %318 = phi i64 [ 0, %315 ], [ %321, %393 ]
  %319 = phi i8* [ %307, %315 ], [ %323, %393 ]
  br label %399

320:                                              ; preds = %315
  %321 = and i64 %311, -8
  %322 = getelementptr float, float* %5, i64 %321
  %323 = bitcast float* %322 to i8*
  %324 = insertelement <4 x float> undef, float %304, i32 0
  %325 = shufflevector <4 x float> %324, <4 x float> undef, <4 x i32> zeroinitializer
  %326 = insertelement <4 x float> undef, float %304, i32 0
  %327 = shufflevector <4 x float> %326, <4 x float> undef, <4 x i32> zeroinitializer
  %328 = add nsw i64 %321, -8
  %329 = lshr exact i64 %328, 3
  %330 = add nuw nsw i64 %329, 1
  %331 = and i64 %330, 7
  %332 = icmp ult i64 %328, 56
  br i1 %332, label %380, label %333

333:                                              ; preds = %320
  %334 = sub nsw i64 %330, %331
  br label %335

335:                                              ; preds = %335, %333
  %336 = phi i64 [ 0, %333 ], [ %377, %335 ]
  %337 = phi i64 [ %334, %333 ], [ %378, %335 ]
  %338 = getelementptr float, float* %5, i64 %336
  %339 = bitcast float* %338 to <4 x float>*
  store <4 x float> %325, <4 x float>* %339, align 1
  %340 = getelementptr float, float* %338, i64 4
  %341 = bitcast float* %340 to <4 x float>*
  store <4 x float> %327, <4 x float>* %341, align 1
  %342 = or i64 %336, 8
  %343 = getelementptr float, float* %5, i64 %342
  %344 = bitcast float* %343 to <4 x float>*
  store <4 x float> %325, <4 x float>* %344, align 1
  %345 = getelementptr float, float* %343, i64 4
  %346 = bitcast float* %345 to <4 x float>*
  store <4 x float> %327, <4 x float>* %346, align 1
  %347 = or i64 %336, 16
  %348 = getelementptr float, float* %5, i64 %347
  %349 = bitcast float* %348 to <4 x float>*
  store <4 x float> %325, <4 x float>* %349, align 1
  %350 = getelementptr float, float* %348, i64 4
  %351 = bitcast float* %350 to <4 x float>*
  store <4 x float> %327, <4 x float>* %351, align 1
  %352 = or i64 %336, 24
  %353 = getelementptr float, float* %5, i64 %352
  %354 = bitcast float* %353 to <4 x float>*
  store <4 x float> %325, <4 x float>* %354, align 1
  %355 = getelementptr float, float* %353, i64 4
  %356 = bitcast float* %355 to <4 x float>*
  store <4 x float> %327, <4 x float>* %356, align 1
  %357 = or i64 %336, 32
  %358 = getelementptr float, float* %5, i64 %357
  %359 = bitcast float* %358 to <4 x float>*
  store <4 x float> %325, <4 x float>* %359, align 1
  %360 = getelementptr float, float* %358, i64 4
  %361 = bitcast float* %360 to <4 x float>*
  store <4 x float> %327, <4 x float>* %361, align 1
  %362 = or i64 %336, 40
  %363 = getelementptr float, float* %5, i64 %362
  %364 = bitcast float* %363 to <4 x float>*
  store <4 x float> %325, <4 x float>* %364, align 1
  %365 = getelementptr float, float* %363, i64 4
  %366 = bitcast float* %365 to <4 x float>*
  store <4 x float> %327, <4 x float>* %366, align 1
  %367 = or i64 %336, 48
  %368 = getelementptr float, float* %5, i64 %367
  %369 = bitcast float* %368 to <4 x float>*
  store <4 x float> %325, <4 x float>* %369, align 1
  %370 = getelementptr float, float* %368, i64 4
  %371 = bitcast float* %370 to <4 x float>*
  store <4 x float> %327, <4 x float>* %371, align 1
  %372 = or i64 %336, 56
  %373 = getelementptr float, float* %5, i64 %372
  %374 = bitcast float* %373 to <4 x float>*
  store <4 x float> %325, <4 x float>* %374, align 1
  %375 = getelementptr float, float* %373, i64 4
  %376 = bitcast float* %375 to <4 x float>*
  store <4 x float> %327, <4 x float>* %376, align 1
  %377 = add i64 %336, 64
  %378 = add i64 %337, -8
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %380, label %335, !llvm.loop !230

380:                                              ; preds = %335, %320
  %381 = phi i64 [ 0, %320 ], [ %377, %335 ]
  %382 = icmp eq i64 %331, 0
  br i1 %382, label %393, label %383

383:                                              ; preds = %380, %383
  %384 = phi i64 [ %390, %383 ], [ %381, %380 ]
  %385 = phi i64 [ %391, %383 ], [ %331, %380 ]
  %386 = getelementptr float, float* %5, i64 %384
  %387 = bitcast float* %386 to <4 x float>*
  store <4 x float> %325, <4 x float>* %387, align 1
  %388 = getelementptr float, float* %386, i64 4
  %389 = bitcast float* %388 to <4 x float>*
  store <4 x float> %327, <4 x float>* %389, align 1
  %390 = add i64 %384, 8
  %391 = add i64 %385, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %383, !llvm.loop !231

393:                                              ; preds = %383, %380
  %394 = icmp eq i64 %321, %311
  br i1 %394, label %406, label %317

395:                                              ; preds = %306
  %396 = fptosi float %304 to i32
  %397 = trunc i32 %396 to i8
  %398 = shl nsw i64 %311, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %307, i8 %397, i64 %398, i1 false) #8
  br label %406

399:                                              ; preds = %317, %399
  %400 = phi i64 [ %404, %399 ], [ %318, %317 ]
  %401 = phi i8* [ %403, %399 ], [ %319, %317 ]
  %402 = bitcast i8* %401 to float*
  store float %304, float* %402, align 1
  %403 = getelementptr inbounds i8, i8* %401, i64 4
  %404 = add nuw i64 %400, 1
  %405 = icmp eq i64 %404, %311
  br i1 %405, label %406, label %399, !llvm.loop !232

406:                                              ; preds = %399, %393, %395, %313, %267
  %407 = sub i32 %273, %286
  %408 = icmp slt i32 %276, %407
  br i1 %408, label %409, label %539

409:                                              ; preds = %406
  %410 = icmp eq i32 %279, 0
  %411 = getelementptr inbounds i32, i32* %205, i64 1
  %412 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %413 = bitcast [16 x i8]* %412 to i32*
  %414 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %415 = bitcast i8* %414 to i32*
  %416 = mul i32 %275, %274
  %417 = mul i32 %416, %279
  %418 = sext i32 %417 to i64
  %419 = fcmp oeq float %304, 0.000000e+00
  %420 = icmp eq i32 %417, 0
  %421 = fptosi float %304 to i32
  %422 = trunc i32 %421 to i8
  %423 = shl nsw i64 %418, 2
  %424 = sub i32 %272, %289
  %425 = icmp slt i32 %279, %424
  %426 = icmp eq i32 %282, 0
  %427 = mul nsw i32 %282, %275
  %428 = sext i32 %427 to i64
  %429 = icmp eq i32 %427, 0
  %430 = shl nsw i64 %428, 2
  %431 = sub i32 %274, %292
  %432 = icmp slt i32 %282, %431
  %433 = icmp eq i32 %285, 0
  %434 = sext i32 %285 to i64
  %435 = shl nsw i64 %434, 2
  %436 = getelementptr inbounds i32, i32* %101, i64 1
  %437 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %438 = bitcast [16 x i8]* %437 to i32*
  %439 = sext i32 %303 to i64
  %440 = shl nsw i64 %439, 2
  %441 = icmp eq i32 %295, 0
  %442 = sub i32 %275, %295
  %443 = sext i32 %295 to i64
  %444 = shl nsw i64 %443, 2
  %445 = icmp eq i32 %292, 0
  %446 = mul nsw i32 %292, %275
  %447 = sext i32 %446 to i64
  %448 = icmp eq i32 %446, 0
  %449 = shl nsw i64 %447, 2
  %450 = icmp eq i32 %289, 0
  %451 = mul i32 %416, %289
  %452 = sext i32 %451 to i64
  %453 = icmp eq i32 %451, 0
  %454 = shl nsw i64 %452, 2
  %455 = add nsw i64 %418, -8
  %456 = lshr i64 %455, 3
  %457 = add nuw nsw i64 %456, 1
  %458 = add nsw i64 %428, -8
  %459 = lshr i64 %458, 3
  %460 = add nuw nsw i64 %459, 1
  %461 = add nsw i64 %434, -8
  %462 = lshr i64 %461, 3
  %463 = add nuw nsw i64 %462, 1
  %464 = add nsw i64 %443, -8
  %465 = lshr i64 %464, 3
  %466 = add nuw nsw i64 %465, 1
  %467 = add nsw i64 %447, -8
  %468 = lshr i64 %467, 3
  %469 = add nuw nsw i64 %468, 1
  %470 = add nsw i64 %452, -8
  %471 = lshr i64 %470, 3
  %472 = add nuw nsw i64 %471, 1
  %473 = icmp ult i32 %417, 8
  %474 = and i64 %418, -8
  %475 = insertelement <4 x float> undef, float %304, i32 0
  %476 = shufflevector <4 x float> %475, <4 x float> undef, <4 x i32> zeroinitializer
  %477 = insertelement <4 x float> undef, float %304, i32 0
  %478 = shufflevector <4 x float> %477, <4 x float> undef, <4 x i32> zeroinitializer
  %479 = and i64 %457, 7
  %480 = icmp ult i64 %455, 56
  %481 = sub nsw i64 %457, %479
  %482 = icmp eq i64 %479, 0
  %483 = icmp eq i64 %474, %418
  %484 = icmp ult i32 %427, 8
  %485 = and i64 %428, -8
  %486 = insertelement <4 x float> undef, float %304, i32 0
  %487 = shufflevector <4 x float> %486, <4 x float> undef, <4 x i32> zeroinitializer
  %488 = insertelement <4 x float> undef, float %304, i32 0
  %489 = shufflevector <4 x float> %488, <4 x float> undef, <4 x i32> zeroinitializer
  %490 = and i64 %460, 7
  %491 = icmp ult i64 %458, 56
  %492 = sub nsw i64 %460, %490
  %493 = icmp eq i64 %490, 0
  %494 = icmp eq i64 %485, %428
  %495 = icmp ult i32 %285, 8
  %496 = and i64 %434, -8
  %497 = insertelement <4 x float> undef, float %304, i32 0
  %498 = shufflevector <4 x float> %497, <4 x float> undef, <4 x i32> zeroinitializer
  %499 = insertelement <4 x float> undef, float %304, i32 0
  %500 = shufflevector <4 x float> %499, <4 x float> undef, <4 x i32> zeroinitializer
  %501 = and i64 %463, 7
  %502 = icmp ult i64 %461, 56
  %503 = sub nsw i64 %463, %501
  %504 = icmp eq i64 %501, 0
  %505 = icmp eq i64 %496, %434
  %506 = icmp ult i32 %295, 8
  %507 = and i64 %443, -8
  %508 = insertelement <4 x float> undef, float %304, i32 0
  %509 = shufflevector <4 x float> %508, <4 x float> undef, <4 x i32> zeroinitializer
  %510 = insertelement <4 x float> undef, float %304, i32 0
  %511 = shufflevector <4 x float> %510, <4 x float> undef, <4 x i32> zeroinitializer
  %512 = and i64 %466, 7
  %513 = icmp ult i64 %464, 56
  %514 = sub nsw i64 %466, %512
  %515 = icmp eq i64 %512, 0
  %516 = icmp eq i64 %507, %443
  %517 = icmp ult i32 %446, 8
  %518 = and i64 %447, -8
  %519 = insertelement <4 x float> undef, float %304, i32 0
  %520 = shufflevector <4 x float> %519, <4 x float> undef, <4 x i32> zeroinitializer
  %521 = insertelement <4 x float> undef, float %304, i32 0
  %522 = shufflevector <4 x float> %521, <4 x float> undef, <4 x i32> zeroinitializer
  %523 = and i64 %469, 7
  %524 = icmp ult i64 %467, 56
  %525 = sub nsw i64 %469, %523
  %526 = icmp eq i64 %523, 0
  %527 = icmp eq i64 %518, %447
  %528 = icmp ult i32 %451, 8
  %529 = and i64 %452, -8
  %530 = insertelement <4 x float> undef, float %304, i32 0
  %531 = shufflevector <4 x float> %530, <4 x float> undef, <4 x i32> zeroinitializer
  %532 = insertelement <4 x float> undef, float %304, i32 0
  %533 = shufflevector <4 x float> %532, <4 x float> undef, <4 x i32> zeroinitializer
  %534 = and i64 %472, 7
  %535 = icmp ult i64 %470, 56
  %536 = sub nsw i64 %472, %534
  %537 = icmp eq i64 %534, 0
  %538 = icmp eq i64 %529, %452
  br label %541

539:                                              ; preds = %1089, %406
  %540 = icmp eq i32 %286, 0
  br i1 %540, label %1205, label %1092

541:                                              ; preds = %1089, %409
  %542 = phi i32 [ %276, %409 ], [ %1090, %1089 ]
  br i1 %410, label %627, label %543

543:                                              ; preds = %541
  %544 = load i32, i32* %411, align 4
  %545 = mul nsw i32 %544, %542
  %546 = load i32, i32* %413, align 8
  %547 = mul nsw i32 %545, %546
  %548 = load i32, i32* %415, align 4
  %549 = mul nsw i32 %547, %548
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds float, float* %5, i64 %550
  %552 = bitcast float* %551 to i8*
  br i1 %419, label %619, label %553

553:                                              ; preds = %543
  br i1 %420, label %627, label %554

554:                                              ; preds = %553
  br i1 %473, label %555, label %558

555:                                              ; preds = %618, %554
  %556 = phi i64 [ 0, %554 ], [ %474, %618 ]
  %557 = phi i8* [ %552, %554 ], [ %560, %618 ]
  br label %620

558:                                              ; preds = %554
  %559 = getelementptr float, float* %551, i64 %474
  %560 = bitcast float* %559 to i8*
  br i1 %480, label %606, label %561

561:                                              ; preds = %558, %561
  %562 = phi i64 [ %603, %561 ], [ 0, %558 ]
  %563 = phi i64 [ %604, %561 ], [ %481, %558 ]
  %564 = getelementptr float, float* %551, i64 %562
  %565 = bitcast float* %564 to <4 x float>*
  store <4 x float> %476, <4 x float>* %565, align 1
  %566 = getelementptr float, float* %564, i64 4
  %567 = bitcast float* %566 to <4 x float>*
  store <4 x float> %478, <4 x float>* %567, align 1
  %568 = or i64 %562, 8
  %569 = getelementptr float, float* %551, i64 %568
  %570 = bitcast float* %569 to <4 x float>*
  store <4 x float> %476, <4 x float>* %570, align 1
  %571 = getelementptr float, float* %569, i64 4
  %572 = bitcast float* %571 to <4 x float>*
  store <4 x float> %478, <4 x float>* %572, align 1
  %573 = or i64 %562, 16
  %574 = getelementptr float, float* %551, i64 %573
  %575 = bitcast float* %574 to <4 x float>*
  store <4 x float> %476, <4 x float>* %575, align 1
  %576 = getelementptr float, float* %574, i64 4
  %577 = bitcast float* %576 to <4 x float>*
  store <4 x float> %478, <4 x float>* %577, align 1
  %578 = or i64 %562, 24
  %579 = getelementptr float, float* %551, i64 %578
  %580 = bitcast float* %579 to <4 x float>*
  store <4 x float> %476, <4 x float>* %580, align 1
  %581 = getelementptr float, float* %579, i64 4
  %582 = bitcast float* %581 to <4 x float>*
  store <4 x float> %478, <4 x float>* %582, align 1
  %583 = or i64 %562, 32
  %584 = getelementptr float, float* %551, i64 %583
  %585 = bitcast float* %584 to <4 x float>*
  store <4 x float> %476, <4 x float>* %585, align 1
  %586 = getelementptr float, float* %584, i64 4
  %587 = bitcast float* %586 to <4 x float>*
  store <4 x float> %478, <4 x float>* %587, align 1
  %588 = or i64 %562, 40
  %589 = getelementptr float, float* %551, i64 %588
  %590 = bitcast float* %589 to <4 x float>*
  store <4 x float> %476, <4 x float>* %590, align 1
  %591 = getelementptr float, float* %589, i64 4
  %592 = bitcast float* %591 to <4 x float>*
  store <4 x float> %478, <4 x float>* %592, align 1
  %593 = or i64 %562, 48
  %594 = getelementptr float, float* %551, i64 %593
  %595 = bitcast float* %594 to <4 x float>*
  store <4 x float> %476, <4 x float>* %595, align 1
  %596 = getelementptr float, float* %594, i64 4
  %597 = bitcast float* %596 to <4 x float>*
  store <4 x float> %478, <4 x float>* %597, align 1
  %598 = or i64 %562, 56
  %599 = getelementptr float, float* %551, i64 %598
  %600 = bitcast float* %599 to <4 x float>*
  store <4 x float> %476, <4 x float>* %600, align 1
  %601 = getelementptr float, float* %599, i64 4
  %602 = bitcast float* %601 to <4 x float>*
  store <4 x float> %478, <4 x float>* %602, align 1
  %603 = add i64 %562, 64
  %604 = add i64 %563, -8
  %605 = icmp eq i64 %604, 0
  br i1 %605, label %606, label %561, !llvm.loop !233

606:                                              ; preds = %561, %558
  %607 = phi i64 [ 0, %558 ], [ %603, %561 ]
  br i1 %482, label %618, label %608

608:                                              ; preds = %606, %608
  %609 = phi i64 [ %615, %608 ], [ %607, %606 ]
  %610 = phi i64 [ %616, %608 ], [ %479, %606 ]
  %611 = getelementptr float, float* %551, i64 %609
  %612 = bitcast float* %611 to <4 x float>*
  store <4 x float> %476, <4 x float>* %612, align 1
  %613 = getelementptr float, float* %611, i64 4
  %614 = bitcast float* %613 to <4 x float>*
  store <4 x float> %478, <4 x float>* %614, align 1
  %615 = add i64 %609, 8
  %616 = add i64 %610, -1
  %617 = icmp eq i64 %616, 0
  br i1 %617, label %618, label %608, !llvm.loop !234

618:                                              ; preds = %608, %606
  br i1 %483, label %627, label %555

619:                                              ; preds = %543
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %552, i8 %422, i64 %423, i1 false) #8
  br label %627

620:                                              ; preds = %555, %620
  %621 = phi i64 [ %625, %620 ], [ %556, %555 ]
  %622 = phi i8* [ %624, %620 ], [ %557, %555 ]
  %623 = bitcast i8* %622 to float*
  store float %304, float* %623, align 1
  %624 = getelementptr inbounds i8, i8* %622, i64 4
  %625 = add nuw i64 %621, 1
  %626 = icmp eq i64 %625, %418
  br i1 %626, label %627, label %620, !llvm.loop !235

627:                                              ; preds = %620, %618, %619, %553, %541
  br i1 %425, label %628, label %630

628:                                              ; preds = %627
  %629 = sub nsw i32 %542, %276
  br label %631

630:                                              ; preds = %1001, %627
  br i1 %450, label %1089, label %1004

631:                                              ; preds = %1001, %628
  %632 = phi i32 [ %279, %628 ], [ %1002, %1001 ]
  br i1 %426, label %718, label %633

633:                                              ; preds = %631
  %634 = load i32, i32* %411, align 4
  %635 = mul nsw i32 %634, %542
  %636 = add nsw i32 %635, %632
  %637 = load i32, i32* %413, align 8
  %638 = mul nsw i32 %636, %637
  %639 = load i32, i32* %415, align 4
  %640 = mul nsw i32 %638, %639
  %641 = sext i32 %640 to i64
  %642 = getelementptr inbounds float, float* %5, i64 %641
  %643 = bitcast float* %642 to i8*
  br i1 %419, label %710, label %644

644:                                              ; preds = %633
  br i1 %429, label %718, label %645

645:                                              ; preds = %644
  br i1 %484, label %646, label %649

646:                                              ; preds = %709, %645
  %647 = phi i64 [ 0, %645 ], [ %485, %709 ]
  %648 = phi i8* [ %643, %645 ], [ %651, %709 ]
  br label %711

649:                                              ; preds = %645
  %650 = getelementptr float, float* %642, i64 %485
  %651 = bitcast float* %650 to i8*
  br i1 %491, label %697, label %652

652:                                              ; preds = %649, %652
  %653 = phi i64 [ %694, %652 ], [ 0, %649 ]
  %654 = phi i64 [ %695, %652 ], [ %492, %649 ]
  %655 = getelementptr float, float* %642, i64 %653
  %656 = bitcast float* %655 to <4 x float>*
  store <4 x float> %487, <4 x float>* %656, align 1
  %657 = getelementptr float, float* %655, i64 4
  %658 = bitcast float* %657 to <4 x float>*
  store <4 x float> %489, <4 x float>* %658, align 1
  %659 = or i64 %653, 8
  %660 = getelementptr float, float* %642, i64 %659
  %661 = bitcast float* %660 to <4 x float>*
  store <4 x float> %487, <4 x float>* %661, align 1
  %662 = getelementptr float, float* %660, i64 4
  %663 = bitcast float* %662 to <4 x float>*
  store <4 x float> %489, <4 x float>* %663, align 1
  %664 = or i64 %653, 16
  %665 = getelementptr float, float* %642, i64 %664
  %666 = bitcast float* %665 to <4 x float>*
  store <4 x float> %487, <4 x float>* %666, align 1
  %667 = getelementptr float, float* %665, i64 4
  %668 = bitcast float* %667 to <4 x float>*
  store <4 x float> %489, <4 x float>* %668, align 1
  %669 = or i64 %653, 24
  %670 = getelementptr float, float* %642, i64 %669
  %671 = bitcast float* %670 to <4 x float>*
  store <4 x float> %487, <4 x float>* %671, align 1
  %672 = getelementptr float, float* %670, i64 4
  %673 = bitcast float* %672 to <4 x float>*
  store <4 x float> %489, <4 x float>* %673, align 1
  %674 = or i64 %653, 32
  %675 = getelementptr float, float* %642, i64 %674
  %676 = bitcast float* %675 to <4 x float>*
  store <4 x float> %487, <4 x float>* %676, align 1
  %677 = getelementptr float, float* %675, i64 4
  %678 = bitcast float* %677 to <4 x float>*
  store <4 x float> %489, <4 x float>* %678, align 1
  %679 = or i64 %653, 40
  %680 = getelementptr float, float* %642, i64 %679
  %681 = bitcast float* %680 to <4 x float>*
  store <4 x float> %487, <4 x float>* %681, align 1
  %682 = getelementptr float, float* %680, i64 4
  %683 = bitcast float* %682 to <4 x float>*
  store <4 x float> %489, <4 x float>* %683, align 1
  %684 = or i64 %653, 48
  %685 = getelementptr float, float* %642, i64 %684
  %686 = bitcast float* %685 to <4 x float>*
  store <4 x float> %487, <4 x float>* %686, align 1
  %687 = getelementptr float, float* %685, i64 4
  %688 = bitcast float* %687 to <4 x float>*
  store <4 x float> %489, <4 x float>* %688, align 1
  %689 = or i64 %653, 56
  %690 = getelementptr float, float* %642, i64 %689
  %691 = bitcast float* %690 to <4 x float>*
  store <4 x float> %487, <4 x float>* %691, align 1
  %692 = getelementptr float, float* %690, i64 4
  %693 = bitcast float* %692 to <4 x float>*
  store <4 x float> %489, <4 x float>* %693, align 1
  %694 = add i64 %653, 64
  %695 = add i64 %654, -8
  %696 = icmp eq i64 %695, 0
  br i1 %696, label %697, label %652, !llvm.loop !236

697:                                              ; preds = %652, %649
  %698 = phi i64 [ 0, %649 ], [ %694, %652 ]
  br i1 %493, label %709, label %699

699:                                              ; preds = %697, %699
  %700 = phi i64 [ %706, %699 ], [ %698, %697 ]
  %701 = phi i64 [ %707, %699 ], [ %490, %697 ]
  %702 = getelementptr float, float* %642, i64 %700
  %703 = bitcast float* %702 to <4 x float>*
  store <4 x float> %487, <4 x float>* %703, align 1
  %704 = getelementptr float, float* %702, i64 4
  %705 = bitcast float* %704 to <4 x float>*
  store <4 x float> %489, <4 x float>* %705, align 1
  %706 = add i64 %700, 8
  %707 = add i64 %701, -1
  %708 = icmp eq i64 %707, 0
  br i1 %708, label %709, label %699, !llvm.loop !237

709:                                              ; preds = %699, %697
  br i1 %494, label %718, label %646

710:                                              ; preds = %633
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %643, i8 %422, i64 %430, i1 false) #8
  br label %718

711:                                              ; preds = %646, %711
  %712 = phi i64 [ %716, %711 ], [ %647, %646 ]
  %713 = phi i8* [ %715, %711 ], [ %648, %646 ]
  %714 = bitcast i8* %713 to float*
  store float %304, float* %714, align 1
  %715 = getelementptr inbounds i8, i8* %713, i64 4
  %716 = add nuw i64 %712, 1
  %717 = icmp eq i64 %716, %428
  br i1 %717, label %718, label %711, !llvm.loop !238

718:                                              ; preds = %711, %709, %710, %644, %631
  br i1 %432, label %719, label %721

719:                                              ; preds = %718
  %720 = sub i32 %632, %279
  br label %722

721:                                              ; preds = %912, %718
  br i1 %445, label %1001, label %915

722:                                              ; preds = %912, %719
  %723 = phi i32 [ %282, %719 ], [ %913, %912 ]
  br i1 %433, label %809, label %724

724:                                              ; preds = %722
  %725 = load i32, i32* %411, align 4
  %726 = mul nsw i32 %725, %542
  %727 = add nsw i32 %726, %632
  %728 = load i32, i32* %413, align 8
  %729 = mul nsw i32 %727, %728
  %730 = add nsw i32 %729, %723
  %731 = load i32, i32* %415, align 4
  %732 = mul nsw i32 %730, %731
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds float, float* %5, i64 %733
  %735 = bitcast float* %734 to i8*
  br i1 %419, label %801, label %736

736:                                              ; preds = %724
  br i1 %495, label %737, label %740

737:                                              ; preds = %800, %736
  %738 = phi i64 [ 0, %736 ], [ %496, %800 ]
  %739 = phi i8* [ %735, %736 ], [ %742, %800 ]
  br label %802

740:                                              ; preds = %736
  %741 = getelementptr float, float* %734, i64 %496
  %742 = bitcast float* %741 to i8*
  br i1 %502, label %788, label %743

743:                                              ; preds = %740, %743
  %744 = phi i64 [ %785, %743 ], [ 0, %740 ]
  %745 = phi i64 [ %786, %743 ], [ %503, %740 ]
  %746 = getelementptr float, float* %734, i64 %744
  %747 = bitcast float* %746 to <4 x float>*
  store <4 x float> %498, <4 x float>* %747, align 1
  %748 = getelementptr float, float* %746, i64 4
  %749 = bitcast float* %748 to <4 x float>*
  store <4 x float> %500, <4 x float>* %749, align 1
  %750 = or i64 %744, 8
  %751 = getelementptr float, float* %734, i64 %750
  %752 = bitcast float* %751 to <4 x float>*
  store <4 x float> %498, <4 x float>* %752, align 1
  %753 = getelementptr float, float* %751, i64 4
  %754 = bitcast float* %753 to <4 x float>*
  store <4 x float> %500, <4 x float>* %754, align 1
  %755 = or i64 %744, 16
  %756 = getelementptr float, float* %734, i64 %755
  %757 = bitcast float* %756 to <4 x float>*
  store <4 x float> %498, <4 x float>* %757, align 1
  %758 = getelementptr float, float* %756, i64 4
  %759 = bitcast float* %758 to <4 x float>*
  store <4 x float> %500, <4 x float>* %759, align 1
  %760 = or i64 %744, 24
  %761 = getelementptr float, float* %734, i64 %760
  %762 = bitcast float* %761 to <4 x float>*
  store <4 x float> %498, <4 x float>* %762, align 1
  %763 = getelementptr float, float* %761, i64 4
  %764 = bitcast float* %763 to <4 x float>*
  store <4 x float> %500, <4 x float>* %764, align 1
  %765 = or i64 %744, 32
  %766 = getelementptr float, float* %734, i64 %765
  %767 = bitcast float* %766 to <4 x float>*
  store <4 x float> %498, <4 x float>* %767, align 1
  %768 = getelementptr float, float* %766, i64 4
  %769 = bitcast float* %768 to <4 x float>*
  store <4 x float> %500, <4 x float>* %769, align 1
  %770 = or i64 %744, 40
  %771 = getelementptr float, float* %734, i64 %770
  %772 = bitcast float* %771 to <4 x float>*
  store <4 x float> %498, <4 x float>* %772, align 1
  %773 = getelementptr float, float* %771, i64 4
  %774 = bitcast float* %773 to <4 x float>*
  store <4 x float> %500, <4 x float>* %774, align 1
  %775 = or i64 %744, 48
  %776 = getelementptr float, float* %734, i64 %775
  %777 = bitcast float* %776 to <4 x float>*
  store <4 x float> %498, <4 x float>* %777, align 1
  %778 = getelementptr float, float* %776, i64 4
  %779 = bitcast float* %778 to <4 x float>*
  store <4 x float> %500, <4 x float>* %779, align 1
  %780 = or i64 %744, 56
  %781 = getelementptr float, float* %734, i64 %780
  %782 = bitcast float* %781 to <4 x float>*
  store <4 x float> %498, <4 x float>* %782, align 1
  %783 = getelementptr float, float* %781, i64 4
  %784 = bitcast float* %783 to <4 x float>*
  store <4 x float> %500, <4 x float>* %784, align 1
  %785 = add i64 %744, 64
  %786 = add i64 %745, -8
  %787 = icmp eq i64 %786, 0
  br i1 %787, label %788, label %743, !llvm.loop !239

788:                                              ; preds = %743, %740
  %789 = phi i64 [ 0, %740 ], [ %785, %743 ]
  br i1 %504, label %800, label %790

790:                                              ; preds = %788, %790
  %791 = phi i64 [ %797, %790 ], [ %789, %788 ]
  %792 = phi i64 [ %798, %790 ], [ %501, %788 ]
  %793 = getelementptr float, float* %734, i64 %791
  %794 = bitcast float* %793 to <4 x float>*
  store <4 x float> %498, <4 x float>* %794, align 1
  %795 = getelementptr float, float* %793, i64 4
  %796 = bitcast float* %795 to <4 x float>*
  store <4 x float> %500, <4 x float>* %796, align 1
  %797 = add i64 %791, 8
  %798 = add i64 %792, -1
  %799 = icmp eq i64 %798, 0
  br i1 %799, label %800, label %790, !llvm.loop !240

800:                                              ; preds = %790, %788
  br i1 %505, label %809, label %737

801:                                              ; preds = %724
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %735, i8 %422, i64 %435, i1 false) #8
  br label %809

802:                                              ; preds = %737, %802
  %803 = phi i64 [ %807, %802 ], [ %738, %737 ]
  %804 = phi i8* [ %806, %802 ], [ %739, %737 ]
  %805 = bitcast i8* %804 to float*
  store float %304, float* %805, align 1
  %806 = getelementptr inbounds i8, i8* %804, i64 4
  %807 = add nuw i64 %803, 1
  %808 = icmp eq i64 %807, %434
  br i1 %808, label %809, label %802, !llvm.loop !241

809:                                              ; preds = %802, %800, %801, %722
  %810 = load i32, i32* %411, align 4
  %811 = mul nsw i32 %810, %542
  %812 = add nsw i32 %811, %632
  %813 = load i32, i32* %413, align 8
  %814 = mul nsw i32 %812, %813
  %815 = add nsw i32 %814, %723
  %816 = load i32, i32* %415, align 4
  %817 = mul nsw i32 %815, %816
  %818 = add nsw i32 %817, %285
  %819 = sext i32 %818 to i64
  %820 = getelementptr inbounds float, float* %5, i64 %819
  %821 = sub i32 %723, %282
  %822 = load i32, i32* %436, align 4
  %823 = mul nsw i32 %822, %629
  %824 = add nsw i32 %720, %823
  %825 = load i32, i32* %438, align 8
  %826 = mul nsw i32 %824, %825
  %827 = add nsw i32 %821, %826
  %828 = load i32, i32* %301, align 4
  %829 = mul nsw i32 %827, %828
  %830 = sext i32 %829 to i64
  %831 = getelementptr inbounds float, float* %2, i64 %830
  %832 = bitcast float* %820 to i8*
  %833 = bitcast float* %831 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %832, i8* align 4 %833, i64 %440, i1 false)
  br i1 %441, label %912, label %834

834:                                              ; preds = %809
  %835 = add nsw i32 %442, %817
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds float, float* %5, i64 %836
  %838 = bitcast float* %837 to i8*
  br i1 %419, label %904, label %839

839:                                              ; preds = %834
  br i1 %506, label %840, label %843

840:                                              ; preds = %903, %839
  %841 = phi i64 [ 0, %839 ], [ %507, %903 ]
  %842 = phi i8* [ %838, %839 ], [ %845, %903 ]
  br label %905

843:                                              ; preds = %839
  %844 = getelementptr float, float* %837, i64 %507
  %845 = bitcast float* %844 to i8*
  br i1 %513, label %891, label %846

846:                                              ; preds = %843, %846
  %847 = phi i64 [ %888, %846 ], [ 0, %843 ]
  %848 = phi i64 [ %889, %846 ], [ %514, %843 ]
  %849 = getelementptr float, float* %837, i64 %847
  %850 = bitcast float* %849 to <4 x float>*
  store <4 x float> %509, <4 x float>* %850, align 1
  %851 = getelementptr float, float* %849, i64 4
  %852 = bitcast float* %851 to <4 x float>*
  store <4 x float> %511, <4 x float>* %852, align 1
  %853 = or i64 %847, 8
  %854 = getelementptr float, float* %837, i64 %853
  %855 = bitcast float* %854 to <4 x float>*
  store <4 x float> %509, <4 x float>* %855, align 1
  %856 = getelementptr float, float* %854, i64 4
  %857 = bitcast float* %856 to <4 x float>*
  store <4 x float> %511, <4 x float>* %857, align 1
  %858 = or i64 %847, 16
  %859 = getelementptr float, float* %837, i64 %858
  %860 = bitcast float* %859 to <4 x float>*
  store <4 x float> %509, <4 x float>* %860, align 1
  %861 = getelementptr float, float* %859, i64 4
  %862 = bitcast float* %861 to <4 x float>*
  store <4 x float> %511, <4 x float>* %862, align 1
  %863 = or i64 %847, 24
  %864 = getelementptr float, float* %837, i64 %863
  %865 = bitcast float* %864 to <4 x float>*
  store <4 x float> %509, <4 x float>* %865, align 1
  %866 = getelementptr float, float* %864, i64 4
  %867 = bitcast float* %866 to <4 x float>*
  store <4 x float> %511, <4 x float>* %867, align 1
  %868 = or i64 %847, 32
  %869 = getelementptr float, float* %837, i64 %868
  %870 = bitcast float* %869 to <4 x float>*
  store <4 x float> %509, <4 x float>* %870, align 1
  %871 = getelementptr float, float* %869, i64 4
  %872 = bitcast float* %871 to <4 x float>*
  store <4 x float> %511, <4 x float>* %872, align 1
  %873 = or i64 %847, 40
  %874 = getelementptr float, float* %837, i64 %873
  %875 = bitcast float* %874 to <4 x float>*
  store <4 x float> %509, <4 x float>* %875, align 1
  %876 = getelementptr float, float* %874, i64 4
  %877 = bitcast float* %876 to <4 x float>*
  store <4 x float> %511, <4 x float>* %877, align 1
  %878 = or i64 %847, 48
  %879 = getelementptr float, float* %837, i64 %878
  %880 = bitcast float* %879 to <4 x float>*
  store <4 x float> %509, <4 x float>* %880, align 1
  %881 = getelementptr float, float* %879, i64 4
  %882 = bitcast float* %881 to <4 x float>*
  store <4 x float> %511, <4 x float>* %882, align 1
  %883 = or i64 %847, 56
  %884 = getelementptr float, float* %837, i64 %883
  %885 = bitcast float* %884 to <4 x float>*
  store <4 x float> %509, <4 x float>* %885, align 1
  %886 = getelementptr float, float* %884, i64 4
  %887 = bitcast float* %886 to <4 x float>*
  store <4 x float> %511, <4 x float>* %887, align 1
  %888 = add i64 %847, 64
  %889 = add i64 %848, -8
  %890 = icmp eq i64 %889, 0
  br i1 %890, label %891, label %846, !llvm.loop !242

891:                                              ; preds = %846, %843
  %892 = phi i64 [ 0, %843 ], [ %888, %846 ]
  br i1 %515, label %903, label %893

893:                                              ; preds = %891, %893
  %894 = phi i64 [ %900, %893 ], [ %892, %891 ]
  %895 = phi i64 [ %901, %893 ], [ %512, %891 ]
  %896 = getelementptr float, float* %837, i64 %894
  %897 = bitcast float* %896 to <4 x float>*
  store <4 x float> %509, <4 x float>* %897, align 1
  %898 = getelementptr float, float* %896, i64 4
  %899 = bitcast float* %898 to <4 x float>*
  store <4 x float> %511, <4 x float>* %899, align 1
  %900 = add i64 %894, 8
  %901 = add i64 %895, -1
  %902 = icmp eq i64 %901, 0
  br i1 %902, label %903, label %893, !llvm.loop !243

903:                                              ; preds = %893, %891
  br i1 %516, label %912, label %840

904:                                              ; preds = %834
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %838, i8 %422, i64 %444, i1 false) #8
  br label %912

905:                                              ; preds = %840, %905
  %906 = phi i64 [ %910, %905 ], [ %841, %840 ]
  %907 = phi i8* [ %909, %905 ], [ %842, %840 ]
  %908 = bitcast i8* %907 to float*
  store float %304, float* %908, align 1
  %909 = getelementptr inbounds i8, i8* %907, i64 4
  %910 = add nuw i64 %906, 1
  %911 = icmp eq i64 %910, %443
  br i1 %911, label %912, label %905, !llvm.loop !244

912:                                              ; preds = %905, %903, %904, %809
  %913 = add nsw i32 %723, 1
  %914 = icmp eq i32 %913, %431
  br i1 %914, label %721, label %722

915:                                              ; preds = %721
  %916 = load i32, i32* %411, align 4
  %917 = mul nsw i32 %916, %542
  %918 = add nsw i32 %917, %632
  %919 = load i32, i32* %413, align 8
  %920 = mul nsw i32 %918, %919
  %921 = add nsw i32 %920, %431
  %922 = load i32, i32* %415, align 4
  %923 = mul nsw i32 %921, %922
  %924 = sext i32 %923 to i64
  %925 = getelementptr inbounds float, float* %5, i64 %924
  %926 = bitcast float* %925 to i8*
  br i1 %419, label %993, label %927

927:                                              ; preds = %915
  br i1 %448, label %1001, label %928

928:                                              ; preds = %927
  br i1 %517, label %929, label %932

929:                                              ; preds = %992, %928
  %930 = phi i64 [ 0, %928 ], [ %518, %992 ]
  %931 = phi i8* [ %926, %928 ], [ %934, %992 ]
  br label %994

932:                                              ; preds = %928
  %933 = getelementptr float, float* %925, i64 %518
  %934 = bitcast float* %933 to i8*
  br i1 %524, label %980, label %935

935:                                              ; preds = %932, %935
  %936 = phi i64 [ %977, %935 ], [ 0, %932 ]
  %937 = phi i64 [ %978, %935 ], [ %525, %932 ]
  %938 = getelementptr float, float* %925, i64 %936
  %939 = bitcast float* %938 to <4 x float>*
  store <4 x float> %520, <4 x float>* %939, align 1
  %940 = getelementptr float, float* %938, i64 4
  %941 = bitcast float* %940 to <4 x float>*
  store <4 x float> %522, <4 x float>* %941, align 1
  %942 = or i64 %936, 8
  %943 = getelementptr float, float* %925, i64 %942
  %944 = bitcast float* %943 to <4 x float>*
  store <4 x float> %520, <4 x float>* %944, align 1
  %945 = getelementptr float, float* %943, i64 4
  %946 = bitcast float* %945 to <4 x float>*
  store <4 x float> %522, <4 x float>* %946, align 1
  %947 = or i64 %936, 16
  %948 = getelementptr float, float* %925, i64 %947
  %949 = bitcast float* %948 to <4 x float>*
  store <4 x float> %520, <4 x float>* %949, align 1
  %950 = getelementptr float, float* %948, i64 4
  %951 = bitcast float* %950 to <4 x float>*
  store <4 x float> %522, <4 x float>* %951, align 1
  %952 = or i64 %936, 24
  %953 = getelementptr float, float* %925, i64 %952
  %954 = bitcast float* %953 to <4 x float>*
  store <4 x float> %520, <4 x float>* %954, align 1
  %955 = getelementptr float, float* %953, i64 4
  %956 = bitcast float* %955 to <4 x float>*
  store <4 x float> %522, <4 x float>* %956, align 1
  %957 = or i64 %936, 32
  %958 = getelementptr float, float* %925, i64 %957
  %959 = bitcast float* %958 to <4 x float>*
  store <4 x float> %520, <4 x float>* %959, align 1
  %960 = getelementptr float, float* %958, i64 4
  %961 = bitcast float* %960 to <4 x float>*
  store <4 x float> %522, <4 x float>* %961, align 1
  %962 = or i64 %936, 40
  %963 = getelementptr float, float* %925, i64 %962
  %964 = bitcast float* %963 to <4 x float>*
  store <4 x float> %520, <4 x float>* %964, align 1
  %965 = getelementptr float, float* %963, i64 4
  %966 = bitcast float* %965 to <4 x float>*
  store <4 x float> %522, <4 x float>* %966, align 1
  %967 = or i64 %936, 48
  %968 = getelementptr float, float* %925, i64 %967
  %969 = bitcast float* %968 to <4 x float>*
  store <4 x float> %520, <4 x float>* %969, align 1
  %970 = getelementptr float, float* %968, i64 4
  %971 = bitcast float* %970 to <4 x float>*
  store <4 x float> %522, <4 x float>* %971, align 1
  %972 = or i64 %936, 56
  %973 = getelementptr float, float* %925, i64 %972
  %974 = bitcast float* %973 to <4 x float>*
  store <4 x float> %520, <4 x float>* %974, align 1
  %975 = getelementptr float, float* %973, i64 4
  %976 = bitcast float* %975 to <4 x float>*
  store <4 x float> %522, <4 x float>* %976, align 1
  %977 = add i64 %936, 64
  %978 = add i64 %937, -8
  %979 = icmp eq i64 %978, 0
  br i1 %979, label %980, label %935, !llvm.loop !245

980:                                              ; preds = %935, %932
  %981 = phi i64 [ 0, %932 ], [ %977, %935 ]
  br i1 %526, label %992, label %982

982:                                              ; preds = %980, %982
  %983 = phi i64 [ %989, %982 ], [ %981, %980 ]
  %984 = phi i64 [ %990, %982 ], [ %523, %980 ]
  %985 = getelementptr float, float* %925, i64 %983
  %986 = bitcast float* %985 to <4 x float>*
  store <4 x float> %520, <4 x float>* %986, align 1
  %987 = getelementptr float, float* %985, i64 4
  %988 = bitcast float* %987 to <4 x float>*
  store <4 x float> %522, <4 x float>* %988, align 1
  %989 = add i64 %983, 8
  %990 = add i64 %984, -1
  %991 = icmp eq i64 %990, 0
  br i1 %991, label %992, label %982, !llvm.loop !246

992:                                              ; preds = %982, %980
  br i1 %527, label %1001, label %929

993:                                              ; preds = %915
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %926, i8 %422, i64 %449, i1 false) #8
  br label %1001

994:                                              ; preds = %929, %994
  %995 = phi i64 [ %999, %994 ], [ %930, %929 ]
  %996 = phi i8* [ %998, %994 ], [ %931, %929 ]
  %997 = bitcast i8* %996 to float*
  store float %304, float* %997, align 1
  %998 = getelementptr inbounds i8, i8* %996, i64 4
  %999 = add nuw i64 %995, 1
  %1000 = icmp eq i64 %999, %447
  br i1 %1000, label %1001, label %994, !llvm.loop !247

1001:                                             ; preds = %994, %992, %993, %927, %721
  %1002 = add nsw i32 %632, 1
  %1003 = icmp eq i32 %1002, %424
  br i1 %1003, label %630, label %631

1004:                                             ; preds = %630
  %1005 = load i32, i32* %411, align 4
  %1006 = mul nsw i32 %1005, %542
  %1007 = add nsw i32 %1006, %424
  %1008 = load i32, i32* %413, align 8
  %1009 = mul nsw i32 %1007, %1008
  %1010 = load i32, i32* %415, align 4
  %1011 = mul nsw i32 %1009, %1010
  %1012 = sext i32 %1011 to i64
  %1013 = getelementptr inbounds float, float* %5, i64 %1012
  %1014 = bitcast float* %1013 to i8*
  br i1 %419, label %1081, label %1015

1015:                                             ; preds = %1004
  br i1 %453, label %1089, label %1016

1016:                                             ; preds = %1015
  br i1 %528, label %1017, label %1020

1017:                                             ; preds = %1080, %1016
  %1018 = phi i64 [ 0, %1016 ], [ %529, %1080 ]
  %1019 = phi i8* [ %1014, %1016 ], [ %1022, %1080 ]
  br label %1082

1020:                                             ; preds = %1016
  %1021 = getelementptr float, float* %1013, i64 %529
  %1022 = bitcast float* %1021 to i8*
  br i1 %535, label %1068, label %1023

1023:                                             ; preds = %1020, %1023
  %1024 = phi i64 [ %1065, %1023 ], [ 0, %1020 ]
  %1025 = phi i64 [ %1066, %1023 ], [ %536, %1020 ]
  %1026 = getelementptr float, float* %1013, i64 %1024
  %1027 = bitcast float* %1026 to <4 x float>*
  store <4 x float> %531, <4 x float>* %1027, align 1
  %1028 = getelementptr float, float* %1026, i64 4
  %1029 = bitcast float* %1028 to <4 x float>*
  store <4 x float> %533, <4 x float>* %1029, align 1
  %1030 = or i64 %1024, 8
  %1031 = getelementptr float, float* %1013, i64 %1030
  %1032 = bitcast float* %1031 to <4 x float>*
  store <4 x float> %531, <4 x float>* %1032, align 1
  %1033 = getelementptr float, float* %1031, i64 4
  %1034 = bitcast float* %1033 to <4 x float>*
  store <4 x float> %533, <4 x float>* %1034, align 1
  %1035 = or i64 %1024, 16
  %1036 = getelementptr float, float* %1013, i64 %1035
  %1037 = bitcast float* %1036 to <4 x float>*
  store <4 x float> %531, <4 x float>* %1037, align 1
  %1038 = getelementptr float, float* %1036, i64 4
  %1039 = bitcast float* %1038 to <4 x float>*
  store <4 x float> %533, <4 x float>* %1039, align 1
  %1040 = or i64 %1024, 24
  %1041 = getelementptr float, float* %1013, i64 %1040
  %1042 = bitcast float* %1041 to <4 x float>*
  store <4 x float> %531, <4 x float>* %1042, align 1
  %1043 = getelementptr float, float* %1041, i64 4
  %1044 = bitcast float* %1043 to <4 x float>*
  store <4 x float> %533, <4 x float>* %1044, align 1
  %1045 = or i64 %1024, 32
  %1046 = getelementptr float, float* %1013, i64 %1045
  %1047 = bitcast float* %1046 to <4 x float>*
  store <4 x float> %531, <4 x float>* %1047, align 1
  %1048 = getelementptr float, float* %1046, i64 4
  %1049 = bitcast float* %1048 to <4 x float>*
  store <4 x float> %533, <4 x float>* %1049, align 1
  %1050 = or i64 %1024, 40
  %1051 = getelementptr float, float* %1013, i64 %1050
  %1052 = bitcast float* %1051 to <4 x float>*
  store <4 x float> %531, <4 x float>* %1052, align 1
  %1053 = getelementptr float, float* %1051, i64 4
  %1054 = bitcast float* %1053 to <4 x float>*
  store <4 x float> %533, <4 x float>* %1054, align 1
  %1055 = or i64 %1024, 48
  %1056 = getelementptr float, float* %1013, i64 %1055
  %1057 = bitcast float* %1056 to <4 x float>*
  store <4 x float> %531, <4 x float>* %1057, align 1
  %1058 = getelementptr float, float* %1056, i64 4
  %1059 = bitcast float* %1058 to <4 x float>*
  store <4 x float> %533, <4 x float>* %1059, align 1
  %1060 = or i64 %1024, 56
  %1061 = getelementptr float, float* %1013, i64 %1060
  %1062 = bitcast float* %1061 to <4 x float>*
  store <4 x float> %531, <4 x float>* %1062, align 1
  %1063 = getelementptr float, float* %1061, i64 4
  %1064 = bitcast float* %1063 to <4 x float>*
  store <4 x float> %533, <4 x float>* %1064, align 1
  %1065 = add i64 %1024, 64
  %1066 = add i64 %1025, -8
  %1067 = icmp eq i64 %1066, 0
  br i1 %1067, label %1068, label %1023, !llvm.loop !248

1068:                                             ; preds = %1023, %1020
  %1069 = phi i64 [ 0, %1020 ], [ %1065, %1023 ]
  br i1 %537, label %1080, label %1070

1070:                                             ; preds = %1068, %1070
  %1071 = phi i64 [ %1077, %1070 ], [ %1069, %1068 ]
  %1072 = phi i64 [ %1078, %1070 ], [ %534, %1068 ]
  %1073 = getelementptr float, float* %1013, i64 %1071
  %1074 = bitcast float* %1073 to <4 x float>*
  store <4 x float> %531, <4 x float>* %1074, align 1
  %1075 = getelementptr float, float* %1073, i64 4
  %1076 = bitcast float* %1075 to <4 x float>*
  store <4 x float> %533, <4 x float>* %1076, align 1
  %1077 = add i64 %1071, 8
  %1078 = add i64 %1072, -1
  %1079 = icmp eq i64 %1078, 0
  br i1 %1079, label %1080, label %1070, !llvm.loop !249

1080:                                             ; preds = %1070, %1068
  br i1 %538, label %1089, label %1017

1081:                                             ; preds = %1004
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %1014, i8 %422, i64 %454, i1 false) #8
  br label %1089

1082:                                             ; preds = %1017, %1082
  %1083 = phi i64 [ %1087, %1082 ], [ %1018, %1017 ]
  %1084 = phi i8* [ %1086, %1082 ], [ %1019, %1017 ]
  %1085 = bitcast i8* %1084 to float*
  store float %304, float* %1085, align 1
  %1086 = getelementptr inbounds i8, i8* %1084, i64 4
  %1087 = add nuw i64 %1083, 1
  %1088 = icmp eq i64 %1087, %452
  br i1 %1088, label %1089, label %1082, !llvm.loop !250

1089:                                             ; preds = %1082, %1080, %1081, %1015, %630
  %1090 = add nsw i32 %542, 1
  %1091 = icmp eq i32 %1090, %407
  br i1 %1091, label %539, label %541

1092:                                             ; preds = %539
  %1093 = getelementptr inbounds i32, i32* %205, i64 1
  %1094 = load i32, i32* %1093, align 4
  %1095 = mul nsw i32 %1094, %407
  %1096 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %1097 = bitcast [16 x i8]* %1096 to i32*
  %1098 = load i32, i32* %1097, align 8
  %1099 = mul nsw i32 %1095, %1098
  %1100 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %1101 = bitcast i8* %1100 to i32*
  %1102 = load i32, i32* %1101, align 4
  %1103 = mul nsw i32 %1099, %1102
  %1104 = sext i32 %1103 to i64
  %1105 = getelementptr inbounds float, float* %5, i64 %1104
  %1106 = bitcast float* %1105 to i8*
  %1107 = mul i32 %275, %274
  %1108 = mul i32 %1107, %272
  %1109 = mul i32 %1108, %286
  %1110 = sext i32 %1109 to i64
  %1111 = fcmp oeq float %304, 0.000000e+00
  br i1 %1111, label %1194, label %1112

1112:                                             ; preds = %1092
  %1113 = icmp eq i32 %1109, 0
  br i1 %1113, label %1205, label %1114

1114:                                             ; preds = %1112
  %1115 = icmp ult i32 %1109, 8
  br i1 %1115, label %1116, label %1119

1116:                                             ; preds = %1192, %1114
  %1117 = phi i64 [ 0, %1114 ], [ %1120, %1192 ]
  %1118 = phi i8* [ %1106, %1114 ], [ %1122, %1192 ]
  br label %1198

1119:                                             ; preds = %1114
  %1120 = and i64 %1110, -8
  %1121 = getelementptr float, float* %1105, i64 %1120
  %1122 = bitcast float* %1121 to i8*
  %1123 = insertelement <4 x float> undef, float %304, i32 0
  %1124 = shufflevector <4 x float> %1123, <4 x float> undef, <4 x i32> zeroinitializer
  %1125 = insertelement <4 x float> undef, float %304, i32 0
  %1126 = shufflevector <4 x float> %1125, <4 x float> undef, <4 x i32> zeroinitializer
  %1127 = add nsw i64 %1120, -8
  %1128 = lshr exact i64 %1127, 3
  %1129 = add nuw nsw i64 %1128, 1
  %1130 = and i64 %1129, 7
  %1131 = icmp ult i64 %1127, 56
  br i1 %1131, label %1179, label %1132

1132:                                             ; preds = %1119
  %1133 = sub nsw i64 %1129, %1130
  br label %1134

1134:                                             ; preds = %1134, %1132
  %1135 = phi i64 [ 0, %1132 ], [ %1176, %1134 ]
  %1136 = phi i64 [ %1133, %1132 ], [ %1177, %1134 ]
  %1137 = getelementptr float, float* %1105, i64 %1135
  %1138 = bitcast float* %1137 to <4 x float>*
  store <4 x float> %1124, <4 x float>* %1138, align 1
  %1139 = getelementptr float, float* %1137, i64 4
  %1140 = bitcast float* %1139 to <4 x float>*
  store <4 x float> %1126, <4 x float>* %1140, align 1
  %1141 = or i64 %1135, 8
  %1142 = getelementptr float, float* %1105, i64 %1141
  %1143 = bitcast float* %1142 to <4 x float>*
  store <4 x float> %1124, <4 x float>* %1143, align 1
  %1144 = getelementptr float, float* %1142, i64 4
  %1145 = bitcast float* %1144 to <4 x float>*
  store <4 x float> %1126, <4 x float>* %1145, align 1
  %1146 = or i64 %1135, 16
  %1147 = getelementptr float, float* %1105, i64 %1146
  %1148 = bitcast float* %1147 to <4 x float>*
  store <4 x float> %1124, <4 x float>* %1148, align 1
  %1149 = getelementptr float, float* %1147, i64 4
  %1150 = bitcast float* %1149 to <4 x float>*
  store <4 x float> %1126, <4 x float>* %1150, align 1
  %1151 = or i64 %1135, 24
  %1152 = getelementptr float, float* %1105, i64 %1151
  %1153 = bitcast float* %1152 to <4 x float>*
  store <4 x float> %1124, <4 x float>* %1153, align 1
  %1154 = getelementptr float, float* %1152, i64 4
  %1155 = bitcast float* %1154 to <4 x float>*
  store <4 x float> %1126, <4 x float>* %1155, align 1
  %1156 = or i64 %1135, 32
  %1157 = getelementptr float, float* %1105, i64 %1156
  %1158 = bitcast float* %1157 to <4 x float>*
  store <4 x float> %1124, <4 x float>* %1158, align 1
  %1159 = getelementptr float, float* %1157, i64 4
  %1160 = bitcast float* %1159 to <4 x float>*
  store <4 x float> %1126, <4 x float>* %1160, align 1
  %1161 = or i64 %1135, 40
  %1162 = getelementptr float, float* %1105, i64 %1161
  %1163 = bitcast float* %1162 to <4 x float>*
  store <4 x float> %1124, <4 x float>* %1163, align 1
  %1164 = getelementptr float, float* %1162, i64 4
  %1165 = bitcast float* %1164 to <4 x float>*
  store <4 x float> %1126, <4 x float>* %1165, align 1
  %1166 = or i64 %1135, 48
  %1167 = getelementptr float, float* %1105, i64 %1166
  %1168 = bitcast float* %1167 to <4 x float>*
  store <4 x float> %1124, <4 x float>* %1168, align 1
  %1169 = getelementptr float, float* %1167, i64 4
  %1170 = bitcast float* %1169 to <4 x float>*
  store <4 x float> %1126, <4 x float>* %1170, align 1
  %1171 = or i64 %1135, 56
  %1172 = getelementptr float, float* %1105, i64 %1171
  %1173 = bitcast float* %1172 to <4 x float>*
  store <4 x float> %1124, <4 x float>* %1173, align 1
  %1174 = getelementptr float, float* %1172, i64 4
  %1175 = bitcast float* %1174 to <4 x float>*
  store <4 x float> %1126, <4 x float>* %1175, align 1
  %1176 = add i64 %1135, 64
  %1177 = add i64 %1136, -8
  %1178 = icmp eq i64 %1177, 0
  br i1 %1178, label %1179, label %1134, !llvm.loop !251

1179:                                             ; preds = %1134, %1119
  %1180 = phi i64 [ 0, %1119 ], [ %1176, %1134 ]
  %1181 = icmp eq i64 %1130, 0
  br i1 %1181, label %1192, label %1182

1182:                                             ; preds = %1179, %1182
  %1183 = phi i64 [ %1189, %1182 ], [ %1180, %1179 ]
  %1184 = phi i64 [ %1190, %1182 ], [ %1130, %1179 ]
  %1185 = getelementptr float, float* %1105, i64 %1183
  %1186 = bitcast float* %1185 to <4 x float>*
  store <4 x float> %1124, <4 x float>* %1186, align 1
  %1187 = getelementptr float, float* %1185, i64 4
  %1188 = bitcast float* %1187 to <4 x float>*
  store <4 x float> %1126, <4 x float>* %1188, align 1
  %1189 = add i64 %1183, 8
  %1190 = add i64 %1184, -1
  %1191 = icmp eq i64 %1190, 0
  br i1 %1191, label %1192, label %1182, !llvm.loop !252

1192:                                             ; preds = %1182, %1179
  %1193 = icmp eq i64 %1120, %1110
  br i1 %1193, label %1205, label %1116

1194:                                             ; preds = %1092
  %1195 = fptosi float %304 to i32
  %1196 = trunc i32 %1195 to i8
  %1197 = shl nsw i64 %1110, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %1106, i8 %1196, i64 %1197, i1 false) #8
  br label %1205

1198:                                             ; preds = %1116, %1198
  %1199 = phi i64 [ %1203, %1198 ], [ %1117, %1116 ]
  %1200 = phi i8* [ %1202, %1198 ], [ %1118, %1116 ]
  %1201 = bitcast i8* %1200 to float*
  store float %304, float* %1201, align 1
  %1202 = getelementptr inbounds i8, i8* %1200, i64 4
  %1203 = add nuw i64 %1199, 1
  %1204 = icmp eq i64 %1203, %1110
  br i1 %1204, label %1205, label %1198, !llvm.loop !253

1205:                                             ; preds = %1198, %1192, %1194, %1112, %539
  tail call void @_ZdlPv(i8* nonnull %237) #9
  tail call void @_ZdlPv(i8* nonnull %218) #9
  br i1 %254, label %1206, label %1212

1206:                                             ; preds = %1205
  %1207 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %1208 = load i32*, i32** %1207, align 8
  %1209 = icmp eq i32* %1208, null
  br i1 %1209, label %1212, label %1210

1210:                                             ; preds = %1206
  %1211 = bitcast i32* %1208 to i8*
  tail call void @_ZdaPv(i8* %1211) #9
  br label %1212

1212:                                             ; preds = %1205, %1206, %1210
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #8
  br i1 %297, label %1213, label %1219

1213:                                             ; preds = %1212
  %1214 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %1215 = load i32*, i32** %1214, align 8
  %1216 = icmp eq i32* %1215, null
  br i1 %1216, label %1219, label %1217

1217:                                             ; preds = %1213
  %1218 = bitcast i32* %1215 to i8*
  tail call void @_ZdaPv(i8* %1218) #9
  br label %1219

1219:                                             ; preds = %1212, %1213, %1217
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops19PadImageStyleMemsetIhhEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* dereferenceable(44), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #6 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !254
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 8, !noalias !254
  %13 = icmp sgt i32 %12, 4
  br i1 %13, label %14, label %15

14:                                               ; preds = %6
  tail call void @abort() #10, !noalias !254
  unreachable

15:                                               ; preds = %6
  store i32 4, i32* %10, align 8, !alias.scope !254
  %16 = sub i32 4, %12
  %17 = icmp sgt i32 %16, 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %17, label %19, label %99

19:                                               ; preds = %15
  %20 = bitcast %union.anon* %18 to [5 x i32]*
  %21 = zext i32 %16 to i64
  %22 = icmp ult i32 %16, 8
  br i1 %22, label %92, label %23

23:                                               ; preds = %19
  %24 = and i64 %21, 4294967288
  %25 = add nsw i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !254
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !254
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !254
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !254
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !254
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !254
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !254
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !254
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !254
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !254
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !254
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !254
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !254
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !254
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !254
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !254
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !257

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !254
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !254
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !258

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %21
  br i1 %91, label %99, label %92

92:                                               ; preds = %90, %19
  %93 = phi i64 [ 0, %19 ], [ %24, %90 ]
  br label %94

94:                                               ; preds = %92, %94
  %95 = phi i64 [ %97, %94 ], [ %93, %92 ]
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %95
  store i32 1, i32* %96, align 4, !alias.scope !254
  %97 = add nuw nsw i64 %95, 1
  %98 = icmp eq i64 %97, %21
  br i1 %98, label %99, label %94, !llvm.loop !259

99:                                               ; preds = %94, %90, %15
  %100 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %101 = bitcast %union.anon* %18 to i32*
  %102 = sext i32 %16 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  %104 = bitcast i32* %103 to i8*
  %105 = icmp sgt i32 %12, 5
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %107 = getelementptr inbounds %union.anon, %union.anon* %106, i64 0, i32 0
  %108 = load i32*, i32** %107, align 8, !noalias !254
  %109 = bitcast %union.anon* %106 to i32*
  %110 = select i1 %105, i32* %108, i32* %109
  %111 = bitcast i32* %110 to i8*
  %112 = sext i32 %12 to i64
  %113 = shl nsw i64 %112, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %111, i64 %113, i1 false) #8
  %114 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 32, i1 false)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !260
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %117 = load i32, i32* %116, align 8, !noalias !260
  %118 = icmp sgt i32 %117, 4
  br i1 %118, label %119, label %120

119:                                              ; preds = %99
  tail call void @abort() #10, !noalias !260
  unreachable

120:                                              ; preds = %99
  store i32 4, i32* %115, align 8, !alias.scope !260
  %121 = sub i32 4, %117
  %122 = icmp sgt i32 %121, 0
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %122, label %124, label %204

124:                                              ; preds = %120
  %125 = bitcast %union.anon* %123 to [5 x i32]*
  %126 = zext i32 %121 to i64
  %127 = icmp ult i32 %121, 8
  br i1 %127, label %197, label %128

128:                                              ; preds = %124
  %129 = and i64 %126, 4294967288
  %130 = add nsw i64 %129, -8
  %131 = lshr exact i64 %130, 3
  %132 = add nuw nsw i64 %131, 1
  %133 = and i64 %132, 7
  %134 = icmp ult i64 %130, 56
  br i1 %134, label %182, label %135

135:                                              ; preds = %128
  %136 = sub nsw i64 %132, %133
  br label %137

137:                                              ; preds = %137, %135
  %138 = phi i64 [ 0, %135 ], [ %179, %137 ]
  %139 = phi i64 [ %136, %135 ], [ %180, %137 ]
  %140 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %138
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %141, align 8, !alias.scope !260
  %142 = getelementptr inbounds i32, i32* %140, i64 4
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %143, align 8, !alias.scope !260
  %144 = or i64 %138, 8
  %145 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %144
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !260
  %147 = getelementptr inbounds i32, i32* %145, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %148, align 8, !alias.scope !260
  %149 = or i64 %138, 16
  %150 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %149
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !260
  %152 = getelementptr inbounds i32, i32* %150, i64 4
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %153, align 8, !alias.scope !260
  %154 = or i64 %138, 24
  %155 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %154
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !260
  %157 = getelementptr inbounds i32, i32* %155, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %158, align 8, !alias.scope !260
  %159 = or i64 %138, 32
  %160 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %159
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !260
  %162 = getelementptr inbounds i32, i32* %160, i64 4
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %163, align 8, !alias.scope !260
  %164 = or i64 %138, 40
  %165 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %164
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !260
  %167 = getelementptr inbounds i32, i32* %165, i64 4
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %168, align 8, !alias.scope !260
  %169 = or i64 %138, 48
  %170 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %169
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !260
  %172 = getelementptr inbounds i32, i32* %170, i64 4
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %173, align 8, !alias.scope !260
  %174 = or i64 %138, 56
  %175 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !260
  %177 = getelementptr inbounds i32, i32* %175, i64 4
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %178, align 8, !alias.scope !260
  %179 = add i64 %138, 64
  %180 = add i64 %139, -8
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %137, !llvm.loop !263

182:                                              ; preds = %137, %128
  %183 = phi i64 [ 0, %128 ], [ %179, %137 ]
  %184 = icmp eq i64 %133, 0
  br i1 %184, label %195, label %185

185:                                              ; preds = %182, %185
  %186 = phi i64 [ %192, %185 ], [ %183, %182 ]
  %187 = phi i64 [ %193, %185 ], [ %133, %182 ]
  %188 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %186
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !260
  %190 = getelementptr inbounds i32, i32* %188, i64 4
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %191, align 8, !alias.scope !260
  %192 = add i64 %186, 8
  %193 = add i64 %187, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %185, !llvm.loop !264

195:                                              ; preds = %185, %182
  %196 = icmp eq i64 %129, %126
  br i1 %196, label %204, label %197

197:                                              ; preds = %195, %124
  %198 = phi i64 [ 0, %124 ], [ %129, %195 ]
  br label %199

199:                                              ; preds = %197, %199
  %200 = phi i64 [ %202, %199 ], [ %198, %197 ]
  %201 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %200
  store i32 1, i32* %201, align 4, !alias.scope !260
  %202 = add nuw nsw i64 %200, 1
  %203 = icmp eq i64 %202, %126
  br i1 %203, label %204, label %199, !llvm.loop !265

204:                                              ; preds = %199, %195, %120
  %205 = bitcast %union.anon* %123 to i32*
  %206 = sext i32 %121 to i64
  %207 = getelementptr inbounds i32, i32* %205, i64 %206
  %208 = bitcast i32* %207 to i8*
  %209 = icmp sgt i32 %117, 5
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %211 = getelementptr inbounds %union.anon, %union.anon* %210, i64 0, i32 0
  %212 = load i32*, i32** %211, align 8, !noalias !260
  %213 = bitcast %union.anon* %210 to i32*
  %214 = select i1 %209, i32* %212, i32* %213
  %215 = bitcast i32* %214 to i8*
  %216 = sext i32 %117 to i64
  %217 = shl nsw i64 %216, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %208, i8* align 4 %215, i64 %217, i1 false) #8
  %218 = tail call i8* @_Znwm(i64 16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %218, i8 0, i64 16, i1 false)
  %219 = getelementptr inbounds %union.anon, %union.anon* %123, i64 0, i32 0
  %220 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 2
  %221 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 0
  %222 = load i8, i8* %221, align 4
  %223 = sext i8 %222 to i32
  %224 = icmp sgt i8 %222, 0
  br i1 %224, label %225, label %235

225:                                              ; preds = %204
  %226 = zext i32 %223 to i64
  %227 = sub nsw i32 0, %223
  %228 = sext i32 %227 to i64
  %229 = shl nsw i64 %228, 2
  %230 = add nsw i64 %229, 16
  %231 = getelementptr i8, i8* %218, i64 %230
  %232 = getelementptr %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 0
  %233 = bitcast i32* %232 to i8*
  %234 = shl nuw nsw i64 %226, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %231, i8* align 4 %233, i64 %234, i1 false)
  br label %235

235:                                              ; preds = %225, %204
  %236 = tail call i8* @_Znwm(i64 16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %236, i8 0, i64 16, i1 false)
  %237 = load i8, i8* %220, align 4
  %238 = sext i8 %237 to i32
  %239 = icmp sgt i8 %237, 0
  br i1 %239, label %240, label %256

240:                                              ; preds = %235
  %241 = zext i32 %238 to i64
  %242 = sub nsw i32 0, %238
  %243 = sext i32 %242 to i64
  %244 = shl nsw i64 %243, 2
  %245 = add nsw i64 %244, 16
  %246 = getelementptr i8, i8* %236, i64 %245
  %247 = getelementptr %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 0
  %248 = bitcast i32* %247 to i8*
  %249 = shl nuw nsw i64 %241, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %246, i8* align 4 %248, i64 %249, i1 false)
  %250 = getelementptr inbounds i8, i8* %236, i64 4
  %251 = bitcast i8* %250 to i32*
  %252 = load i32, i32* %251, align 4
  %253 = getelementptr inbounds i8, i8* %236, i64 8
  %254 = bitcast i8* %253 to i32*
  %255 = load i32, i32* %254, align 4
  br label %256

256:                                              ; preds = %235, %240
  %257 = phi i32 [ %255, %240 ], [ 0, %235 ]
  %258 = phi i32 [ %252, %240 ], [ 0, %235 ]
  %259 = load i32, i32* %10, align 8
  %260 = icmp sgt i32 %259, 5
  %261 = load i32, i32* %115, align 8
  %262 = icmp sgt i32 %261, 5
  %263 = load i32*, i32** %100, align 8
  %264 = bitcast %union.anon* %18 to [5 x i32]*
  %265 = select i1 %260, i32* %263, i32* %101
  %266 = load i32, i32* %265, align 4
  %267 = load i32*, i32** %219, align 8
  %268 = select i1 %262, i32* %267, i32* %205
  %269 = load i32, i32* %268, align 4
  %270 = icmp slt i32 %269, %266
  %271 = select i1 %270, i32 %269, i32 %266
  %272 = getelementptr inbounds i32, i32* %267, i64 2
  %273 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %274 = bitcast [16 x i8]* %273 to i32*
  %275 = select i1 %262, i32* %272, i32* %274
  %276 = load i32, i32* %275, align 4
  %277 = getelementptr inbounds i32, i32* %263, i64 1
  %278 = getelementptr inbounds i32, i32* %263, i64 2
  %279 = getelementptr inbounds [5 x i32], [5 x i32]* %264, i64 0, i64 1
  %280 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %281 = bitcast [16 x i8]* %280 to i32*
  %282 = select i1 %260, i32* %277, i32* %279
  %283 = select i1 %260, i32* %278, i32* %281
  %284 = load i32, i32* %282, align 4
  %285 = load i32, i32* %283, align 4
  %286 = getelementptr inbounds i32, i32* %263, i64 3
  %287 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %288 = bitcast i8* %287 to i32*
  %289 = select i1 %260, i32* %286, i32* %288
  %290 = load i32, i32* %289, align 4
  %291 = getelementptr inbounds i32, i32* %267, i64 3
  %292 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %293 = bitcast i8* %292 to i32*
  %294 = select i1 %262, i32* %291, i32* %293
  %295 = load i32, i32* %294, align 4
  %296 = icmp slt i32 %295, %290
  %297 = select i1 %296, i32 %295, i32 %290
  %298 = getelementptr inbounds i8, i8* %218, i64 4
  %299 = bitcast i8* %298 to i32*
  %300 = load i32, i32* %299, align 4
  %301 = getelementptr inbounds i8, i8* %218, i64 8
  %302 = bitcast i8* %301 to i32*
  %303 = load i32, i32* %302, align 4
  %304 = load i8, i8* %3, align 1
  %305 = mul i32 %297, %276
  %306 = mul i32 %305, %300
  %307 = sext i32 %306 to i64
  %308 = mul i32 %305, %258
  %309 = sext i32 %308 to i64
  %310 = mul nsw i32 %303, %297
  %311 = sext i32 %310 to i64
  %312 = mul nsw i32 %257, %297
  %313 = sext i32 %312 to i64
  %314 = mul nsw i32 %297, %285
  %315 = sext i32 %314 to i64
  %316 = icmp eq i32 %284, 0
  br i1 %316, label %336, label %317

317:                                              ; preds = %256
  %318 = icmp sgt i32 %271, 0
  br i1 %318, label %319, label %384

319:                                              ; preds = %317
  %320 = add nsw i64 %307, %311
  %321 = add nsw i32 %306, %310
  %322 = sext i32 %321 to i64
  %323 = icmp sgt i32 %284, 1
  %324 = add nsw i64 %313, %311
  %325 = add nsw i32 %312, %310
  %326 = sext i32 %325 to i64
  %327 = add nsw i64 %313, %309
  %328 = add nsw i32 %312, %308
  %329 = sext i32 %328 to i64
  %330 = add i32 %284, -1
  %331 = add i32 %284, -2
  %332 = and i32 %330, 3
  %333 = icmp ult i32 %331, 3
  %334 = sub i32 %330, %332
  %335 = icmp eq i32 %332, 0
  br label %338

336:                                              ; preds = %256
  %337 = add nsw i64 %309, %307
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 %304, i64 %337, i1 false)
  br label %384

338:                                              ; preds = %319, %360
  %339 = phi i32 [ 0, %319 ], [ %364, %360 ]
  %340 = phi i8* [ %2, %319 ], [ %361, %360 ]
  %341 = phi i8* [ %5, %319 ], [ %363, %360 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %341, i8 %304, i64 %320, i1 false)
  %342 = getelementptr inbounds i8, i8* %341, i64 %322
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %342, i8* align 1 %340, i64 %315, i1 false)
  %343 = getelementptr inbounds i8, i8* %340, i64 %315
  %344 = getelementptr inbounds i8, i8* %342, i64 %315
  br i1 %323, label %345, label %360

345:                                              ; preds = %338
  br i1 %333, label %346, label %366

346:                                              ; preds = %366, %345
  %347 = phi i8* [ undef, %345 ], [ %380, %366 ]
  %348 = phi i8* [ undef, %345 ], [ %381, %366 ]
  %349 = phi i8* [ %344, %345 ], [ %381, %366 ]
  %350 = phi i8* [ %343, %345 ], [ %380, %366 ]
  br i1 %335, label %360, label %351

351:                                              ; preds = %346, %351
  %352 = phi i8* [ %357, %351 ], [ %349, %346 ]
  %353 = phi i8* [ %356, %351 ], [ %350, %346 ]
  %354 = phi i32 [ %358, %351 ], [ %332, %346 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %352, i8 %304, i64 %324, i1 false)
  %355 = getelementptr inbounds i8, i8* %352, i64 %326
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %355, i8* align 1 %353, i64 %315, i1 false)
  %356 = getelementptr inbounds i8, i8* %353, i64 %315
  %357 = getelementptr inbounds i8, i8* %355, i64 %315
  %358 = add i32 %354, -1
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %360, label %351, !llvm.loop !266

360:                                              ; preds = %346, %351, %338
  %361 = phi i8* [ %343, %338 ], [ %347, %346 ], [ %356, %351 ]
  %362 = phi i8* [ %344, %338 ], [ %348, %346 ], [ %357, %351 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %362, i8 %304, i64 %327, i1 false)
  %363 = getelementptr inbounds i8, i8* %362, i64 %329
  %364 = add nuw nsw i32 %339, 1
  %365 = icmp slt i32 %364, %271
  br i1 %365, label %338, label %384

366:                                              ; preds = %345, %366
  %367 = phi i8* [ %381, %366 ], [ %344, %345 ]
  %368 = phi i8* [ %380, %366 ], [ %343, %345 ]
  %369 = phi i32 [ %382, %366 ], [ %334, %345 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %367, i8 %304, i64 %324, i1 false)
  %370 = getelementptr inbounds i8, i8* %367, i64 %326
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %370, i8* align 1 %368, i64 %315, i1 false)
  %371 = getelementptr inbounds i8, i8* %368, i64 %315
  %372 = getelementptr inbounds i8, i8* %370, i64 %315
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %372, i8 %304, i64 %324, i1 false)
  %373 = getelementptr inbounds i8, i8* %372, i64 %326
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %373, i8* align 1 %371, i64 %315, i1 false)
  %374 = getelementptr inbounds i8, i8* %371, i64 %315
  %375 = getelementptr inbounds i8, i8* %373, i64 %315
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %375, i8 %304, i64 %324, i1 false)
  %376 = getelementptr inbounds i8, i8* %375, i64 %326
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %376, i8* align 1 %374, i64 %315, i1 false)
  %377 = getelementptr inbounds i8, i8* %374, i64 %315
  %378 = getelementptr inbounds i8, i8* %376, i64 %315
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %378, i8 %304, i64 %324, i1 false)
  %379 = getelementptr inbounds i8, i8* %378, i64 %326
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %379, i8* align 1 %377, i64 %315, i1 false)
  %380 = getelementptr inbounds i8, i8* %377, i64 %315
  %381 = getelementptr inbounds i8, i8* %379, i64 %315
  %382 = add i32 %369, -4
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %346, label %366

384:                                              ; preds = %360, %317, %336
  tail call void @_ZdlPv(i8* nonnull %236) #9
  tail call void @_ZdlPv(i8* nonnull %218) #9
  %385 = xor i1 %262, true
  %386 = icmp eq i32* %267, null
  %387 = or i1 %386, %385
  br i1 %387, label %390, label %388

388:                                              ; preds = %384
  %389 = bitcast i32* %267 to i8*
  tail call void @_ZdaPv(i8* %389) #9
  br label %390

390:                                              ; preds = %384, %388
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #8
  %391 = xor i1 %260, true
  %392 = icmp eq i32* %263, null
  %393 = or i1 %392, %391
  br i1 %393, label %396, label %394

394:                                              ; preds = %390
  %395 = bitcast i32* %263 to i8*
  tail call void @_ZdaPv(i8* %395) #9
  br label %396

396:                                              ; preds = %390, %394
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops7PadImplIhhEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* dereferenceable(44), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #6 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !267
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 8, !noalias !267
  %13 = icmp sgt i32 %12, 4
  br i1 %13, label %14, label %15

14:                                               ; preds = %6
  tail call void @abort() #10, !noalias !267
  unreachable

15:                                               ; preds = %6
  store i32 4, i32* %10, align 8, !alias.scope !267
  %16 = sub i32 4, %12
  %17 = icmp sgt i32 %16, 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %17, label %19, label %99

19:                                               ; preds = %15
  %20 = bitcast %union.anon* %18 to [5 x i32]*
  %21 = zext i32 %16 to i64
  %22 = icmp ult i32 %16, 8
  br i1 %22, label %92, label %23

23:                                               ; preds = %19
  %24 = and i64 %21, 4294967288
  %25 = add nsw i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !267
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !267
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !267
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !267
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !267
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !267
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !267
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !267
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !267
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !267
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !267
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !267
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !267
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !267
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !267
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !267
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !270

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !267
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !267
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !271

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %21
  br i1 %91, label %99, label %92

92:                                               ; preds = %90, %19
  %93 = phi i64 [ 0, %19 ], [ %24, %90 ]
  br label %94

94:                                               ; preds = %92, %94
  %95 = phi i64 [ %97, %94 ], [ %93, %92 ]
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %95
  store i32 1, i32* %96, align 4, !alias.scope !267
  %97 = add nuw nsw i64 %95, 1
  %98 = icmp eq i64 %97, %21
  br i1 %98, label %99, label %94, !llvm.loop !272

99:                                               ; preds = %94, %90, %15
  %100 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %101 = bitcast %union.anon* %18 to i32*
  %102 = sext i32 %16 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  %104 = bitcast i32* %103 to i8*
  %105 = icmp sgt i32 %12, 5
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %107 = getelementptr inbounds %union.anon, %union.anon* %106, i64 0, i32 0
  %108 = load i32*, i32** %107, align 8, !noalias !267
  %109 = bitcast %union.anon* %106 to i32*
  %110 = select i1 %105, i32* %108, i32* %109
  %111 = bitcast i32* %110 to i8*
  %112 = sext i32 %12 to i64
  %113 = shl nsw i64 %112, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %111, i64 %113, i1 false) #8
  %114 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 32, i1 false)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !273
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %117 = load i32, i32* %116, align 8, !noalias !273
  %118 = icmp sgt i32 %117, 4
  br i1 %118, label %119, label %120

119:                                              ; preds = %99
  tail call void @abort() #10, !noalias !273
  unreachable

120:                                              ; preds = %99
  store i32 4, i32* %115, align 8, !alias.scope !273
  %121 = sub i32 4, %117
  %122 = icmp sgt i32 %121, 0
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %122, label %124, label %204

124:                                              ; preds = %120
  %125 = bitcast %union.anon* %123 to [5 x i32]*
  %126 = zext i32 %121 to i64
  %127 = icmp ult i32 %121, 8
  br i1 %127, label %197, label %128

128:                                              ; preds = %124
  %129 = and i64 %126, 4294967288
  %130 = add nsw i64 %129, -8
  %131 = lshr exact i64 %130, 3
  %132 = add nuw nsw i64 %131, 1
  %133 = and i64 %132, 7
  %134 = icmp ult i64 %130, 56
  br i1 %134, label %182, label %135

135:                                              ; preds = %128
  %136 = sub nsw i64 %132, %133
  br label %137

137:                                              ; preds = %137, %135
  %138 = phi i64 [ 0, %135 ], [ %179, %137 ]
  %139 = phi i64 [ %136, %135 ], [ %180, %137 ]
  %140 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %138
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %141, align 8, !alias.scope !273
  %142 = getelementptr inbounds i32, i32* %140, i64 4
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %143, align 8, !alias.scope !273
  %144 = or i64 %138, 8
  %145 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %144
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !273
  %147 = getelementptr inbounds i32, i32* %145, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %148, align 8, !alias.scope !273
  %149 = or i64 %138, 16
  %150 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %149
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !273
  %152 = getelementptr inbounds i32, i32* %150, i64 4
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %153, align 8, !alias.scope !273
  %154 = or i64 %138, 24
  %155 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %154
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !273
  %157 = getelementptr inbounds i32, i32* %155, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %158, align 8, !alias.scope !273
  %159 = or i64 %138, 32
  %160 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %159
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !273
  %162 = getelementptr inbounds i32, i32* %160, i64 4
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %163, align 8, !alias.scope !273
  %164 = or i64 %138, 40
  %165 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %164
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !273
  %167 = getelementptr inbounds i32, i32* %165, i64 4
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %168, align 8, !alias.scope !273
  %169 = or i64 %138, 48
  %170 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %169
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !273
  %172 = getelementptr inbounds i32, i32* %170, i64 4
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %173, align 8, !alias.scope !273
  %174 = or i64 %138, 56
  %175 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !273
  %177 = getelementptr inbounds i32, i32* %175, i64 4
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %178, align 8, !alias.scope !273
  %179 = add i64 %138, 64
  %180 = add i64 %139, -8
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %137, !llvm.loop !276

182:                                              ; preds = %137, %128
  %183 = phi i64 [ 0, %128 ], [ %179, %137 ]
  %184 = icmp eq i64 %133, 0
  br i1 %184, label %195, label %185

185:                                              ; preds = %182, %185
  %186 = phi i64 [ %192, %185 ], [ %183, %182 ]
  %187 = phi i64 [ %193, %185 ], [ %133, %182 ]
  %188 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %186
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !273
  %190 = getelementptr inbounds i32, i32* %188, i64 4
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %191, align 8, !alias.scope !273
  %192 = add i64 %186, 8
  %193 = add i64 %187, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %185, !llvm.loop !277

195:                                              ; preds = %185, %182
  %196 = icmp eq i64 %129, %126
  br i1 %196, label %204, label %197

197:                                              ; preds = %195, %124
  %198 = phi i64 [ 0, %124 ], [ %129, %195 ]
  br label %199

199:                                              ; preds = %197, %199
  %200 = phi i64 [ %202, %199 ], [ %198, %197 ]
  %201 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %200
  store i32 1, i32* %201, align 4, !alias.scope !273
  %202 = add nuw nsw i64 %200, 1
  %203 = icmp eq i64 %202, %126
  br i1 %203, label %204, label %199, !llvm.loop !278

204:                                              ; preds = %199, %195, %120
  %205 = bitcast %union.anon* %123 to i32*
  %206 = sext i32 %121 to i64
  %207 = getelementptr inbounds i32, i32* %205, i64 %206
  %208 = bitcast i32* %207 to i8*
  %209 = icmp sgt i32 %117, 5
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %211 = getelementptr inbounds %union.anon, %union.anon* %210, i64 0, i32 0
  %212 = load i32*, i32** %211, align 8, !noalias !273
  %213 = bitcast %union.anon* %210 to i32*
  %214 = select i1 %209, i32* %212, i32* %213
  %215 = bitcast i32* %214 to i8*
  %216 = sext i32 %117 to i64
  %217 = shl nsw i64 %216, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %208, i8* align 4 %215, i64 %217, i1 false) #8
  %218 = tail call i8* @_Znwm(i64 16) #9
  %219 = bitcast i8* %218 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %218, i8 0, i64 16, i1 false)
  %220 = getelementptr inbounds %union.anon, %union.anon* %123, i64 0, i32 0
  %221 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 2
  %222 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 0
  %223 = load i8, i8* %222, align 4
  %224 = sext i8 %223 to i32
  %225 = icmp sgt i8 %223, 0
  br i1 %225, label %226, label %236

226:                                              ; preds = %204
  %227 = zext i32 %224 to i64
  %228 = sub nsw i32 0, %224
  %229 = sext i32 %228 to i64
  %230 = shl nsw i64 %229, 2
  %231 = add nsw i64 %230, 16
  %232 = getelementptr i8, i8* %218, i64 %231
  %233 = getelementptr %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 0
  %234 = bitcast i32* %233 to i8*
  %235 = shl nuw nsw i64 %227, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %232, i8* align 4 %234, i64 %235, i1 false)
  br label %236

236:                                              ; preds = %226, %204
  %237 = tail call i8* @_Znwm(i64 16) #9
  %238 = bitcast i8* %237 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %237, i8 0, i64 16, i1 false)
  %239 = load i8, i8* %221, align 4
  %240 = sext i8 %239 to i32
  %241 = icmp sgt i8 %239, 0
  br i1 %241, label %242, label %252

242:                                              ; preds = %236
  %243 = zext i32 %240 to i64
  %244 = sub nsw i32 0, %240
  %245 = sext i32 %244 to i64
  %246 = shl nsw i64 %245, 2
  %247 = add nsw i64 %246, 16
  %248 = getelementptr i8, i8* %237, i64 %247
  %249 = getelementptr %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 0
  %250 = bitcast i32* %249 to i8*
  %251 = shl nuw nsw i64 %243, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %248, i8* align 4 %250, i64 %251, i1 false)
  br label %252

252:                                              ; preds = %242, %236
  %253 = load i32, i32* %115, align 8
  %254 = icmp sgt i32 %253, 5
  br i1 %254, label %255, label %260

255:                                              ; preds = %252
  %256 = load i32*, i32** %220, align 8
  %257 = getelementptr inbounds i32, i32* %256, i64 1
  %258 = getelementptr inbounds i32, i32* %256, i64 2
  %259 = getelementptr inbounds i32, i32* %256, i64 3
  br label %267

260:                                              ; preds = %252
  %261 = bitcast %union.anon* %123 to [5 x i32]*
  %262 = getelementptr inbounds [5 x i32], [5 x i32]* %261, i64 0, i64 1
  %263 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %264 = bitcast [16 x i8]* %263 to i32*
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %266 = bitcast i8* %265 to i32*
  br label %267

267:                                              ; preds = %255, %260
  %268 = phi i32* [ %258, %255 ], [ %264, %260 ]
  %269 = phi i32* [ %256, %255 ], [ %205, %260 ]
  %270 = phi i32* [ %257, %255 ], [ %262, %260 ]
  %271 = phi i32* [ %259, %255 ], [ %266, %260 ]
  %272 = load i32, i32* %270, align 4
  %273 = load i32, i32* %269, align 4
  %274 = load i32, i32* %268, align 4
  %275 = load i32, i32* %271, align 4
  %276 = load i32, i32* %219, align 4
  %277 = getelementptr inbounds i8, i8* %218, i64 4
  %278 = bitcast i8* %277 to i32*
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr inbounds i8, i8* %218, i64 8
  %281 = bitcast i8* %280 to i32*
  %282 = load i32, i32* %281, align 4
  %283 = getelementptr inbounds i8, i8* %218, i64 12
  %284 = bitcast i8* %283 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = load i32, i32* %238, align 4
  %287 = getelementptr inbounds i8, i8* %237, i64 4
  %288 = bitcast i8* %287 to i32*
  %289 = load i32, i32* %288, align 4
  %290 = getelementptr inbounds i8, i8* %237, i64 8
  %291 = bitcast i8* %290 to i32*
  %292 = load i32, i32* %291, align 4
  %293 = getelementptr inbounds i8, i8* %237, i64 12
  %294 = bitcast i8* %293 to i32*
  %295 = load i32, i32* %294, align 4
  %296 = load i32, i32* %10, align 8
  %297 = icmp sgt i32 %296, 5
  %298 = load i32*, i32** %100, align 8
  %299 = getelementptr inbounds i32, i32* %298, i64 3
  %300 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %301 = bitcast i8* %300 to i32*
  %302 = select i1 %297, i32* %299, i32* %301
  %303 = load i32, i32* %302, align 4
  %304 = load i8, i8* %3, align 1
  %305 = icmp eq i32 %276, 0
  br i1 %305, label %311, label %306

306:                                              ; preds = %267
  %307 = mul i32 %275, %274
  %308 = mul i32 %307, %272
  %309 = mul i32 %308, %276
  %310 = sext i32 %309 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 %304, i64 %310, i1 false) #8
  br label %311

311:                                              ; preds = %267, %306
  %312 = sub i32 %273, %286
  %313 = icmp slt i32 %276, %312
  br i1 %313, label %314, label %362

314:                                              ; preds = %311
  %315 = icmp eq i32 %279, 0
  %316 = getelementptr inbounds i32, i32* %205, i64 1
  %317 = load i32, i32* %316, align 4
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %319 = bitcast [16 x i8]* %318 to i32*
  %320 = load i32, i32* %319, align 8
  %321 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %322 = bitcast i8* %321 to i32*
  %323 = load i32, i32* %322, align 4
  %324 = mul i32 %275, %274
  %325 = mul i32 %324, %279
  %326 = sext i32 %325 to i64
  %327 = sub i32 %272, %289
  %328 = icmp slt i32 %279, %327
  %329 = icmp eq i32 %282, 0
  %330 = mul nsw i32 %282, %275
  %331 = sext i32 %330 to i64
  %332 = sub i32 %274, %292
  %333 = icmp slt i32 %282, %332
  %334 = icmp eq i32 %285, 0
  %335 = sext i32 %285 to i64
  %336 = getelementptr inbounds i32, i32* %101, i64 1
  %337 = load i32, i32* %336, align 4
  %338 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %339 = bitcast [16 x i8]* %338 to i32*
  %340 = load i32, i32* %339, align 8
  %341 = load i32, i32* %301, align 4
  %342 = sext i32 %303 to i64
  %343 = icmp eq i32 %295, 0
  %344 = sub i32 %275, %295
  %345 = sext i32 %295 to i64
  %346 = icmp eq i32 %292, 0
  %347 = mul nsw i32 %292, %275
  %348 = sext i32 %347 to i64
  %349 = icmp eq i32 %289, 0
  %350 = mul i32 %324, %289
  %351 = sext i32 %350 to i64
  %352 = sext i32 %282 to i64
  %353 = sext i32 %323 to i64
  %354 = sext i32 %344 to i64
  %355 = sext i32 %279 to i64
  %356 = sext i32 %320 to i64
  %357 = sext i32 %276 to i64
  %358 = sext i32 %317 to i64
  %359 = sext i32 %312 to i64
  %360 = sext i32 %327 to i64
  %361 = sext i32 %332 to i64
  br label %364

362:                                              ; preds = %436, %311
  %363 = icmp eq i32 %286, 0
  br i1 %363, label %458, label %440

364:                                              ; preds = %436, %314
  %365 = phi i64 [ %357, %314 ], [ %437, %436 ]
  %366 = phi i32 [ %276, %314 ], [ %438, %436 ]
  br i1 %315, label %372, label %367

367:                                              ; preds = %364
  %368 = mul nsw i64 %365, %358
  %369 = mul nsw i64 %368, %356
  %370 = mul nsw i64 %369, %353
  %371 = getelementptr inbounds i8, i8* %5, i64 %370
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %371, i8 %304, i64 %326, i1 false) #8
  br label %372

372:                                              ; preds = %364, %367
  br i1 %328, label %373, label %379

373:                                              ; preds = %372
  %374 = mul nsw i64 %365, %358
  %375 = trunc i64 %365 to i32
  %376 = sub i32 %375, %276
  %377 = mul i32 %337, %376
  %378 = trunc i64 %374 to i32
  br label %380

379:                                              ; preds = %425, %372
  br i1 %349, label %436, label %429

380:                                              ; preds = %425, %373
  %381 = phi i64 [ %355, %373 ], [ %426, %425 ]
  %382 = phi i32 [ %279, %373 ], [ %427, %425 ]
  br i1 %329, label %388, label %383

383:                                              ; preds = %380
  %384 = add nsw i64 %374, %381
  %385 = mul nsw i64 %384, %356
  %386 = mul nsw i64 %385, %353
  %387 = getelementptr inbounds i8, i8* %5, i64 %386
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %387, i8 %304, i64 %331, i1 false) #8
  br label %388

388:                                              ; preds = %380, %383
  br i1 %333, label %389, label %396

389:                                              ; preds = %388
  %390 = add nsw i64 %374, %381
  %391 = mul nsw i64 %390, %356
  %392 = trunc i64 %381 to i32
  %393 = sub i32 %392, %279
  %394 = add nsw i32 %393, %377
  %395 = mul nsw i32 %394, %340
  br label %397

396:                                              ; preds = %415, %388
  br i1 %346, label %425, label %418

397:                                              ; preds = %415, %389
  %398 = phi i64 [ %352, %389 ], [ %416, %415 ]
  %399 = add nsw i64 %391, %398
  %400 = mul nsw i64 %399, %353
  br i1 %334, label %403, label %401

401:                                              ; preds = %397
  %402 = getelementptr inbounds i8, i8* %5, i64 %400
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %402, i8 %304, i64 %335, i1 false) #8
  br label %403

403:                                              ; preds = %397, %401
  %404 = add nsw i64 %400, %335
  %405 = getelementptr inbounds i8, i8* %5, i64 %404
  %406 = trunc i64 %398 to i32
  %407 = sub i32 %406, %282
  %408 = add nsw i32 %407, %395
  %409 = mul nsw i32 %408, %341
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds i8, i8* %2, i64 %410
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %405, i8* align 1 %411, i64 %342, i1 false)
  br i1 %343, label %415, label %412

412:                                              ; preds = %403
  %413 = add nsw i64 %400, %354
  %414 = getelementptr inbounds i8, i8* %5, i64 %413
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %414, i8 %304, i64 %345, i1 false) #8
  br label %415

415:                                              ; preds = %403, %412
  %416 = add nsw i64 %398, 1
  %417 = icmp eq i64 %416, %361
  br i1 %417, label %396, label %397

418:                                              ; preds = %396
  %419 = add nsw i32 %382, %378
  %420 = mul nsw i32 %419, %320
  %421 = add nsw i32 %420, %332
  %422 = mul nsw i32 %421, %323
  %423 = sext i32 %422 to i64
  %424 = getelementptr inbounds i8, i8* %5, i64 %423
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %424, i8 %304, i64 %348, i1 false) #8
  br label %425

425:                                              ; preds = %396, %418
  %426 = add nsw i64 %381, 1
  %427 = add nsw i32 %382, 1
  %428 = icmp eq i64 %426, %360
  br i1 %428, label %379, label %380

429:                                              ; preds = %379
  %430 = mul nsw i32 %317, %366
  %431 = add nsw i32 %430, %327
  %432 = mul nsw i32 %431, %320
  %433 = mul nsw i32 %432, %323
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds i8, i8* %5, i64 %434
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %435, i8 %304, i64 %351, i1 false) #8
  br label %436

436:                                              ; preds = %379, %429
  %437 = add nsw i64 %365, 1
  %438 = add nsw i32 %366, 1
  %439 = icmp eq i64 %437, %359
  br i1 %439, label %362, label %364

440:                                              ; preds = %362
  %441 = getelementptr inbounds i32, i32* %205, i64 1
  %442 = load i32, i32* %441, align 4
  %443 = mul nsw i32 %442, %312
  %444 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %445 = bitcast [16 x i8]* %444 to i32*
  %446 = load i32, i32* %445, align 8
  %447 = mul nsw i32 %443, %446
  %448 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %449 = bitcast i8* %448 to i32*
  %450 = load i32, i32* %449, align 4
  %451 = mul nsw i32 %447, %450
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds i8, i8* %5, i64 %452
  %454 = mul i32 %275, %274
  %455 = mul i32 %454, %272
  %456 = mul i32 %455, %286
  %457 = sext i32 %456 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %453, i8 %304, i64 %457, i1 false) #8
  br label %458

458:                                              ; preds = %362, %440
  tail call void @_ZdlPv(i8* nonnull %237) #9
  tail call void @_ZdlPv(i8* nonnull %218) #9
  br i1 %254, label %459, label %465

459:                                              ; preds = %458
  %460 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %461 = load i32*, i32** %460, align 8
  %462 = icmp eq i32* %461, null
  br i1 %462, label %465, label %463

463:                                              ; preds = %459
  %464 = bitcast i32* %461 to i8*
  tail call void @_ZdaPv(i8* %464) #9
  br label %465

465:                                              ; preds = %458, %459, %463
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #8
  %466 = xor i1 %297, true
  %467 = icmp eq i32* %298, null
  %468 = or i1 %467, %466
  br i1 %468, label %471, label %469

469:                                              ; preds = %465
  %470 = bitcast i32* %298 to i8*
  tail call void @_ZdaPv(i8* %470) #9
  br label %471

471:                                              ; preds = %465, %469
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops7PadImplIiiEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* dereferenceable(44), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*) local_unnamed_addr #6 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !279
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 8, !noalias !279
  %13 = icmp sgt i32 %12, 4
  br i1 %13, label %14, label %15

14:                                               ; preds = %6
  tail call void @abort() #10, !noalias !279
  unreachable

15:                                               ; preds = %6
  store i32 4, i32* %10, align 8, !alias.scope !279
  %16 = sub i32 4, %12
  %17 = icmp sgt i32 %16, 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %17, label %19, label %99

19:                                               ; preds = %15
  %20 = bitcast %union.anon* %18 to [5 x i32]*
  %21 = zext i32 %16 to i64
  %22 = icmp ult i32 %16, 8
  br i1 %22, label %92, label %23

23:                                               ; preds = %19
  %24 = and i64 %21, 4294967288
  %25 = add nsw i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !279
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !279
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !279
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !279
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !279
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !279
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !279
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !279
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !279
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !279
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !279
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !279
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !279
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !279
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !279
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !279
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !282

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !279
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !279
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !283

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %21
  br i1 %91, label %99, label %92

92:                                               ; preds = %90, %19
  %93 = phi i64 [ 0, %19 ], [ %24, %90 ]
  br label %94

94:                                               ; preds = %92, %94
  %95 = phi i64 [ %97, %94 ], [ %93, %92 ]
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %95
  store i32 1, i32* %96, align 4, !alias.scope !279
  %97 = add nuw nsw i64 %95, 1
  %98 = icmp eq i64 %97, %21
  br i1 %98, label %99, label %94, !llvm.loop !284

99:                                               ; preds = %94, %90, %15
  %100 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %101 = bitcast %union.anon* %18 to i32*
  %102 = sext i32 %16 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  %104 = bitcast i32* %103 to i8*
  %105 = icmp sgt i32 %12, 5
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %107 = getelementptr inbounds %union.anon, %union.anon* %106, i64 0, i32 0
  %108 = load i32*, i32** %107, align 8, !noalias !279
  %109 = bitcast %union.anon* %106 to i32*
  %110 = select i1 %105, i32* %108, i32* %109
  %111 = bitcast i32* %110 to i8*
  %112 = sext i32 %12 to i64
  %113 = shl nsw i64 %112, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %111, i64 %113, i1 false) #8
  %114 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 32, i1 false)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !285
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %117 = load i32, i32* %116, align 8, !noalias !285
  %118 = icmp sgt i32 %117, 4
  br i1 %118, label %119, label %120

119:                                              ; preds = %99
  tail call void @abort() #10, !noalias !285
  unreachable

120:                                              ; preds = %99
  store i32 4, i32* %115, align 8, !alias.scope !285
  %121 = sub i32 4, %117
  %122 = icmp sgt i32 %121, 0
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %122, label %124, label %204

124:                                              ; preds = %120
  %125 = bitcast %union.anon* %123 to [5 x i32]*
  %126 = zext i32 %121 to i64
  %127 = icmp ult i32 %121, 8
  br i1 %127, label %197, label %128

128:                                              ; preds = %124
  %129 = and i64 %126, 4294967288
  %130 = add nsw i64 %129, -8
  %131 = lshr exact i64 %130, 3
  %132 = add nuw nsw i64 %131, 1
  %133 = and i64 %132, 7
  %134 = icmp ult i64 %130, 56
  br i1 %134, label %182, label %135

135:                                              ; preds = %128
  %136 = sub nsw i64 %132, %133
  br label %137

137:                                              ; preds = %137, %135
  %138 = phi i64 [ 0, %135 ], [ %179, %137 ]
  %139 = phi i64 [ %136, %135 ], [ %180, %137 ]
  %140 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %138
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %141, align 8, !alias.scope !285
  %142 = getelementptr inbounds i32, i32* %140, i64 4
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %143, align 8, !alias.scope !285
  %144 = or i64 %138, 8
  %145 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %144
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !285
  %147 = getelementptr inbounds i32, i32* %145, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %148, align 8, !alias.scope !285
  %149 = or i64 %138, 16
  %150 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %149
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !285
  %152 = getelementptr inbounds i32, i32* %150, i64 4
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %153, align 8, !alias.scope !285
  %154 = or i64 %138, 24
  %155 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %154
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !285
  %157 = getelementptr inbounds i32, i32* %155, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %158, align 8, !alias.scope !285
  %159 = or i64 %138, 32
  %160 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %159
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !285
  %162 = getelementptr inbounds i32, i32* %160, i64 4
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %163, align 8, !alias.scope !285
  %164 = or i64 %138, 40
  %165 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %164
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !285
  %167 = getelementptr inbounds i32, i32* %165, i64 4
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %168, align 8, !alias.scope !285
  %169 = or i64 %138, 48
  %170 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %169
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !285
  %172 = getelementptr inbounds i32, i32* %170, i64 4
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %173, align 8, !alias.scope !285
  %174 = or i64 %138, 56
  %175 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !285
  %177 = getelementptr inbounds i32, i32* %175, i64 4
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %178, align 8, !alias.scope !285
  %179 = add i64 %138, 64
  %180 = add i64 %139, -8
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %137, !llvm.loop !288

182:                                              ; preds = %137, %128
  %183 = phi i64 [ 0, %128 ], [ %179, %137 ]
  %184 = icmp eq i64 %133, 0
  br i1 %184, label %195, label %185

185:                                              ; preds = %182, %185
  %186 = phi i64 [ %192, %185 ], [ %183, %182 ]
  %187 = phi i64 [ %193, %185 ], [ %133, %182 ]
  %188 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %186
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !285
  %190 = getelementptr inbounds i32, i32* %188, i64 4
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %191, align 8, !alias.scope !285
  %192 = add i64 %186, 8
  %193 = add i64 %187, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %185, !llvm.loop !289

195:                                              ; preds = %185, %182
  %196 = icmp eq i64 %129, %126
  br i1 %196, label %204, label %197

197:                                              ; preds = %195, %124
  %198 = phi i64 [ 0, %124 ], [ %129, %195 ]
  br label %199

199:                                              ; preds = %197, %199
  %200 = phi i64 [ %202, %199 ], [ %198, %197 ]
  %201 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %200
  store i32 1, i32* %201, align 4, !alias.scope !285
  %202 = add nuw nsw i64 %200, 1
  %203 = icmp eq i64 %202, %126
  br i1 %203, label %204, label %199, !llvm.loop !290

204:                                              ; preds = %199, %195, %120
  %205 = bitcast %union.anon* %123 to i32*
  %206 = sext i32 %121 to i64
  %207 = getelementptr inbounds i32, i32* %205, i64 %206
  %208 = bitcast i32* %207 to i8*
  %209 = icmp sgt i32 %117, 5
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %211 = getelementptr inbounds %union.anon, %union.anon* %210, i64 0, i32 0
  %212 = load i32*, i32** %211, align 8, !noalias !285
  %213 = bitcast %union.anon* %210 to i32*
  %214 = select i1 %209, i32* %212, i32* %213
  %215 = bitcast i32* %214 to i8*
  %216 = sext i32 %117 to i64
  %217 = shl nsw i64 %216, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %208, i8* align 4 %215, i64 %217, i1 false) #8
  %218 = tail call i8* @_Znwm(i64 16) #9
  %219 = bitcast i8* %218 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %218, i8 0, i64 16, i1 false)
  %220 = getelementptr inbounds %union.anon, %union.anon* %123, i64 0, i32 0
  %221 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 2
  %222 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 0
  %223 = load i8, i8* %222, align 4
  %224 = sext i8 %223 to i32
  %225 = icmp sgt i8 %223, 0
  br i1 %225, label %226, label %236

226:                                              ; preds = %204
  %227 = zext i32 %224 to i64
  %228 = sub nsw i32 0, %224
  %229 = sext i32 %228 to i64
  %230 = shl nsw i64 %229, 2
  %231 = add nsw i64 %230, 16
  %232 = getelementptr i8, i8* %218, i64 %231
  %233 = getelementptr %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 0
  %234 = bitcast i32* %233 to i8*
  %235 = shl nuw nsw i64 %227, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %232, i8* align 4 %234, i64 %235, i1 false)
  br label %236

236:                                              ; preds = %226, %204
  %237 = tail call i8* @_Znwm(i64 16) #9
  %238 = bitcast i8* %237 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %237, i8 0, i64 16, i1 false)
  %239 = load i8, i8* %221, align 4
  %240 = sext i8 %239 to i32
  %241 = icmp sgt i8 %239, 0
  br i1 %241, label %242, label %252

242:                                              ; preds = %236
  %243 = zext i32 %240 to i64
  %244 = sub nsw i32 0, %240
  %245 = sext i32 %244 to i64
  %246 = shl nsw i64 %245, 2
  %247 = add nsw i64 %246, 16
  %248 = getelementptr i8, i8* %237, i64 %247
  %249 = getelementptr %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 0
  %250 = bitcast i32* %249 to i8*
  %251 = shl nuw nsw i64 %243, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %248, i8* align 4 %250, i64 %251, i1 false)
  br label %252

252:                                              ; preds = %242, %236
  %253 = load i32, i32* %115, align 8
  %254 = icmp sgt i32 %253, 5
  br i1 %254, label %255, label %260

255:                                              ; preds = %252
  %256 = load i32*, i32** %220, align 8
  %257 = getelementptr inbounds i32, i32* %256, i64 1
  %258 = getelementptr inbounds i32, i32* %256, i64 2
  %259 = getelementptr inbounds i32, i32* %256, i64 3
  br label %267

260:                                              ; preds = %252
  %261 = bitcast %union.anon* %123 to [5 x i32]*
  %262 = getelementptr inbounds [5 x i32], [5 x i32]* %261, i64 0, i64 1
  %263 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %264 = bitcast [16 x i8]* %263 to i32*
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %266 = bitcast i8* %265 to i32*
  br label %267

267:                                              ; preds = %255, %260
  %268 = phi i32* [ %258, %255 ], [ %264, %260 ]
  %269 = phi i32* [ %256, %255 ], [ %205, %260 ]
  %270 = phi i32* [ %257, %255 ], [ %262, %260 ]
  %271 = phi i32* [ %259, %255 ], [ %266, %260 ]
  %272 = load i32, i32* %270, align 4
  %273 = load i32, i32* %269, align 4
  %274 = load i32, i32* %268, align 4
  %275 = load i32, i32* %271, align 4
  %276 = load i32, i32* %219, align 4
  %277 = getelementptr inbounds i8, i8* %218, i64 4
  %278 = bitcast i8* %277 to i32*
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr inbounds i8, i8* %218, i64 8
  %281 = bitcast i8* %280 to i32*
  %282 = load i32, i32* %281, align 4
  %283 = getelementptr inbounds i8, i8* %218, i64 12
  %284 = bitcast i8* %283 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = load i32, i32* %238, align 4
  %287 = getelementptr inbounds i8, i8* %237, i64 4
  %288 = bitcast i8* %287 to i32*
  %289 = load i32, i32* %288, align 4
  %290 = getelementptr inbounds i8, i8* %237, i64 8
  %291 = bitcast i8* %290 to i32*
  %292 = load i32, i32* %291, align 4
  %293 = getelementptr inbounds i8, i8* %237, i64 12
  %294 = bitcast i8* %293 to i32*
  %295 = load i32, i32* %294, align 4
  %296 = load i32, i32* %10, align 8
  %297 = icmp sgt i32 %296, 5
  %298 = load i32*, i32** %100, align 8
  %299 = getelementptr inbounds i32, i32* %298, i64 3
  %300 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %301 = bitcast i8* %300 to i32*
  %302 = select i1 %297, i32* %299, i32* %301
  %303 = load i32, i32* %302, align 4
  %304 = load i32, i32* %3, align 4
  %305 = icmp eq i32 %276, 0
  br i1 %305, label %404, label %306

306:                                              ; preds = %267
  %307 = bitcast i32* %5 to i8*
  %308 = mul i32 %275, %274
  %309 = mul i32 %308, %272
  %310 = mul i32 %309, %276
  %311 = sext i32 %310 to i64
  %312 = icmp eq i32 %304, 0
  br i1 %312, label %395, label %313

313:                                              ; preds = %306
  %314 = icmp eq i32 %310, 0
  br i1 %314, label %404, label %315

315:                                              ; preds = %313
  %316 = icmp ult i32 %310, 8
  br i1 %316, label %317, label %320

317:                                              ; preds = %393, %315
  %318 = phi i64 [ 0, %315 ], [ %321, %393 ]
  %319 = phi i8* [ %307, %315 ], [ %323, %393 ]
  br label %397

320:                                              ; preds = %315
  %321 = and i64 %311, -8
  %322 = getelementptr i32, i32* %5, i64 %321
  %323 = bitcast i32* %322 to i8*
  %324 = insertelement <4 x i32> undef, i32 %304, i32 0
  %325 = shufflevector <4 x i32> %324, <4 x i32> undef, <4 x i32> zeroinitializer
  %326 = insertelement <4 x i32> undef, i32 %304, i32 0
  %327 = shufflevector <4 x i32> %326, <4 x i32> undef, <4 x i32> zeroinitializer
  %328 = add nsw i64 %321, -8
  %329 = lshr exact i64 %328, 3
  %330 = add nuw nsw i64 %329, 1
  %331 = and i64 %330, 7
  %332 = icmp ult i64 %328, 56
  br i1 %332, label %380, label %333

333:                                              ; preds = %320
  %334 = sub nsw i64 %330, %331
  br label %335

335:                                              ; preds = %335, %333
  %336 = phi i64 [ 0, %333 ], [ %377, %335 ]
  %337 = phi i64 [ %334, %333 ], [ %378, %335 ]
  %338 = getelementptr i32, i32* %5, i64 %336
  %339 = bitcast i32* %338 to <4 x i32>*
  store <4 x i32> %325, <4 x i32>* %339, align 1
  %340 = getelementptr i32, i32* %338, i64 4
  %341 = bitcast i32* %340 to <4 x i32>*
  store <4 x i32> %327, <4 x i32>* %341, align 1
  %342 = or i64 %336, 8
  %343 = getelementptr i32, i32* %5, i64 %342
  %344 = bitcast i32* %343 to <4 x i32>*
  store <4 x i32> %325, <4 x i32>* %344, align 1
  %345 = getelementptr i32, i32* %343, i64 4
  %346 = bitcast i32* %345 to <4 x i32>*
  store <4 x i32> %327, <4 x i32>* %346, align 1
  %347 = or i64 %336, 16
  %348 = getelementptr i32, i32* %5, i64 %347
  %349 = bitcast i32* %348 to <4 x i32>*
  store <4 x i32> %325, <4 x i32>* %349, align 1
  %350 = getelementptr i32, i32* %348, i64 4
  %351 = bitcast i32* %350 to <4 x i32>*
  store <4 x i32> %327, <4 x i32>* %351, align 1
  %352 = or i64 %336, 24
  %353 = getelementptr i32, i32* %5, i64 %352
  %354 = bitcast i32* %353 to <4 x i32>*
  store <4 x i32> %325, <4 x i32>* %354, align 1
  %355 = getelementptr i32, i32* %353, i64 4
  %356 = bitcast i32* %355 to <4 x i32>*
  store <4 x i32> %327, <4 x i32>* %356, align 1
  %357 = or i64 %336, 32
  %358 = getelementptr i32, i32* %5, i64 %357
  %359 = bitcast i32* %358 to <4 x i32>*
  store <4 x i32> %325, <4 x i32>* %359, align 1
  %360 = getelementptr i32, i32* %358, i64 4
  %361 = bitcast i32* %360 to <4 x i32>*
  store <4 x i32> %327, <4 x i32>* %361, align 1
  %362 = or i64 %336, 40
  %363 = getelementptr i32, i32* %5, i64 %362
  %364 = bitcast i32* %363 to <4 x i32>*
  store <4 x i32> %325, <4 x i32>* %364, align 1
  %365 = getelementptr i32, i32* %363, i64 4
  %366 = bitcast i32* %365 to <4 x i32>*
  store <4 x i32> %327, <4 x i32>* %366, align 1
  %367 = or i64 %336, 48
  %368 = getelementptr i32, i32* %5, i64 %367
  %369 = bitcast i32* %368 to <4 x i32>*
  store <4 x i32> %325, <4 x i32>* %369, align 1
  %370 = getelementptr i32, i32* %368, i64 4
  %371 = bitcast i32* %370 to <4 x i32>*
  store <4 x i32> %327, <4 x i32>* %371, align 1
  %372 = or i64 %336, 56
  %373 = getelementptr i32, i32* %5, i64 %372
  %374 = bitcast i32* %373 to <4 x i32>*
  store <4 x i32> %325, <4 x i32>* %374, align 1
  %375 = getelementptr i32, i32* %373, i64 4
  %376 = bitcast i32* %375 to <4 x i32>*
  store <4 x i32> %327, <4 x i32>* %376, align 1
  %377 = add i64 %336, 64
  %378 = add i64 %337, -8
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %380, label %335, !llvm.loop !291

380:                                              ; preds = %335, %320
  %381 = phi i64 [ 0, %320 ], [ %377, %335 ]
  %382 = icmp eq i64 %331, 0
  br i1 %382, label %393, label %383

383:                                              ; preds = %380, %383
  %384 = phi i64 [ %390, %383 ], [ %381, %380 ]
  %385 = phi i64 [ %391, %383 ], [ %331, %380 ]
  %386 = getelementptr i32, i32* %5, i64 %384
  %387 = bitcast i32* %386 to <4 x i32>*
  store <4 x i32> %325, <4 x i32>* %387, align 1
  %388 = getelementptr i32, i32* %386, i64 4
  %389 = bitcast i32* %388 to <4 x i32>*
  store <4 x i32> %327, <4 x i32>* %389, align 1
  %390 = add i64 %384, 8
  %391 = add i64 %385, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %383, !llvm.loop !292

393:                                              ; preds = %383, %380
  %394 = icmp eq i64 %321, %311
  br i1 %394, label %404, label %317

395:                                              ; preds = %306
  %396 = shl nsw i64 %311, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %307, i8 0, i64 %396, i1 false) #8
  br label %404

397:                                              ; preds = %317, %397
  %398 = phi i64 [ %402, %397 ], [ %318, %317 ]
  %399 = phi i8* [ %401, %397 ], [ %319, %317 ]
  %400 = bitcast i8* %399 to i32*
  store i32 %304, i32* %400, align 1
  %401 = getelementptr inbounds i8, i8* %399, i64 4
  %402 = add nuw i64 %398, 1
  %403 = icmp eq i64 %402, %311
  br i1 %403, label %404, label %397, !llvm.loop !293

404:                                              ; preds = %397, %393, %395, %313, %267
  %405 = sub i32 %273, %286
  %406 = icmp slt i32 %276, %405
  br i1 %406, label %407, label %535

407:                                              ; preds = %404
  %408 = icmp eq i32 %279, 0
  %409 = getelementptr inbounds i32, i32* %205, i64 1
  %410 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %411 = bitcast [16 x i8]* %410 to i32*
  %412 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %413 = bitcast i8* %412 to i32*
  %414 = mul i32 %275, %274
  %415 = mul i32 %414, %279
  %416 = sext i32 %415 to i64
  %417 = icmp eq i32 %304, 0
  %418 = icmp eq i32 %415, 0
  %419 = shl nsw i64 %416, 2
  %420 = sub i32 %272, %289
  %421 = icmp slt i32 %279, %420
  %422 = icmp eq i32 %282, 0
  %423 = mul nsw i32 %282, %275
  %424 = sext i32 %423 to i64
  %425 = icmp eq i32 %423, 0
  %426 = shl nsw i64 %424, 2
  %427 = sub i32 %274, %292
  %428 = icmp slt i32 %282, %427
  %429 = icmp eq i32 %285, 0
  %430 = sext i32 %285 to i64
  %431 = shl nsw i64 %430, 2
  %432 = getelementptr inbounds i32, i32* %101, i64 1
  %433 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %434 = bitcast [16 x i8]* %433 to i32*
  %435 = sext i32 %303 to i64
  %436 = shl nsw i64 %435, 2
  %437 = icmp eq i32 %295, 0
  %438 = sub i32 %275, %295
  %439 = sext i32 %295 to i64
  %440 = shl nsw i64 %439, 2
  %441 = icmp eq i32 %292, 0
  %442 = mul nsw i32 %292, %275
  %443 = sext i32 %442 to i64
  %444 = icmp eq i32 %442, 0
  %445 = shl nsw i64 %443, 2
  %446 = icmp eq i32 %289, 0
  %447 = mul i32 %414, %289
  %448 = sext i32 %447 to i64
  %449 = icmp eq i32 %447, 0
  %450 = shl nsw i64 %448, 2
  %451 = add nsw i64 %416, -8
  %452 = lshr i64 %451, 3
  %453 = add nuw nsw i64 %452, 1
  %454 = add nsw i64 %424, -8
  %455 = lshr i64 %454, 3
  %456 = add nuw nsw i64 %455, 1
  %457 = add nsw i64 %430, -8
  %458 = lshr i64 %457, 3
  %459 = add nuw nsw i64 %458, 1
  %460 = add nsw i64 %439, -8
  %461 = lshr i64 %460, 3
  %462 = add nuw nsw i64 %461, 1
  %463 = add nsw i64 %443, -8
  %464 = lshr i64 %463, 3
  %465 = add nuw nsw i64 %464, 1
  %466 = add nsw i64 %448, -8
  %467 = lshr i64 %466, 3
  %468 = add nuw nsw i64 %467, 1
  %469 = icmp ult i32 %415, 8
  %470 = and i64 %416, -8
  %471 = insertelement <4 x i32> undef, i32 %304, i32 0
  %472 = shufflevector <4 x i32> %471, <4 x i32> undef, <4 x i32> zeroinitializer
  %473 = insertelement <4 x i32> undef, i32 %304, i32 0
  %474 = shufflevector <4 x i32> %473, <4 x i32> undef, <4 x i32> zeroinitializer
  %475 = and i64 %453, 7
  %476 = icmp ult i64 %451, 56
  %477 = sub nsw i64 %453, %475
  %478 = icmp eq i64 %475, 0
  %479 = icmp eq i64 %470, %416
  %480 = icmp ult i32 %423, 8
  %481 = and i64 %424, -8
  %482 = insertelement <4 x i32> undef, i32 %304, i32 0
  %483 = shufflevector <4 x i32> %482, <4 x i32> undef, <4 x i32> zeroinitializer
  %484 = insertelement <4 x i32> undef, i32 %304, i32 0
  %485 = shufflevector <4 x i32> %484, <4 x i32> undef, <4 x i32> zeroinitializer
  %486 = and i64 %456, 7
  %487 = icmp ult i64 %454, 56
  %488 = sub nsw i64 %456, %486
  %489 = icmp eq i64 %486, 0
  %490 = icmp eq i64 %481, %424
  %491 = icmp ult i32 %285, 8
  %492 = and i64 %430, -8
  %493 = insertelement <4 x i32> undef, i32 %304, i32 0
  %494 = shufflevector <4 x i32> %493, <4 x i32> undef, <4 x i32> zeroinitializer
  %495 = insertelement <4 x i32> undef, i32 %304, i32 0
  %496 = shufflevector <4 x i32> %495, <4 x i32> undef, <4 x i32> zeroinitializer
  %497 = and i64 %459, 7
  %498 = icmp ult i64 %457, 56
  %499 = sub nsw i64 %459, %497
  %500 = icmp eq i64 %497, 0
  %501 = icmp eq i64 %492, %430
  %502 = icmp ult i32 %295, 8
  %503 = and i64 %439, -8
  %504 = insertelement <4 x i32> undef, i32 %304, i32 0
  %505 = shufflevector <4 x i32> %504, <4 x i32> undef, <4 x i32> zeroinitializer
  %506 = insertelement <4 x i32> undef, i32 %304, i32 0
  %507 = shufflevector <4 x i32> %506, <4 x i32> undef, <4 x i32> zeroinitializer
  %508 = and i64 %462, 7
  %509 = icmp ult i64 %460, 56
  %510 = sub nsw i64 %462, %508
  %511 = icmp eq i64 %508, 0
  %512 = icmp eq i64 %503, %439
  %513 = icmp ult i32 %442, 8
  %514 = and i64 %443, -8
  %515 = insertelement <4 x i32> undef, i32 %304, i32 0
  %516 = shufflevector <4 x i32> %515, <4 x i32> undef, <4 x i32> zeroinitializer
  %517 = insertelement <4 x i32> undef, i32 %304, i32 0
  %518 = shufflevector <4 x i32> %517, <4 x i32> undef, <4 x i32> zeroinitializer
  %519 = and i64 %465, 7
  %520 = icmp ult i64 %463, 56
  %521 = sub nsw i64 %465, %519
  %522 = icmp eq i64 %519, 0
  %523 = icmp eq i64 %514, %443
  %524 = icmp ult i32 %447, 8
  %525 = and i64 %448, -8
  %526 = insertelement <4 x i32> undef, i32 %304, i32 0
  %527 = shufflevector <4 x i32> %526, <4 x i32> undef, <4 x i32> zeroinitializer
  %528 = insertelement <4 x i32> undef, i32 %304, i32 0
  %529 = shufflevector <4 x i32> %528, <4 x i32> undef, <4 x i32> zeroinitializer
  %530 = and i64 %468, 7
  %531 = icmp ult i64 %466, 56
  %532 = sub nsw i64 %468, %530
  %533 = icmp eq i64 %530, 0
  %534 = icmp eq i64 %525, %448
  br label %537

535:                                              ; preds = %1085, %404
  %536 = icmp eq i32 %286, 0
  br i1 %536, label %1199, label %1088

537:                                              ; preds = %1085, %407
  %538 = phi i32 [ %276, %407 ], [ %1086, %1085 ]
  br i1 %408, label %623, label %539

539:                                              ; preds = %537
  %540 = load i32, i32* %409, align 4
  %541 = mul nsw i32 %540, %538
  %542 = load i32, i32* %411, align 8
  %543 = mul nsw i32 %541, %542
  %544 = load i32, i32* %413, align 4
  %545 = mul nsw i32 %543, %544
  %546 = sext i32 %545 to i64
  %547 = getelementptr inbounds i32, i32* %5, i64 %546
  %548 = bitcast i32* %547 to i8*
  br i1 %417, label %615, label %549

549:                                              ; preds = %539
  br i1 %418, label %623, label %550

550:                                              ; preds = %549
  br i1 %469, label %551, label %554

551:                                              ; preds = %614, %550
  %552 = phi i64 [ 0, %550 ], [ %470, %614 ]
  %553 = phi i8* [ %548, %550 ], [ %556, %614 ]
  br label %616

554:                                              ; preds = %550
  %555 = getelementptr i32, i32* %547, i64 %470
  %556 = bitcast i32* %555 to i8*
  br i1 %476, label %602, label %557

557:                                              ; preds = %554, %557
  %558 = phi i64 [ %599, %557 ], [ 0, %554 ]
  %559 = phi i64 [ %600, %557 ], [ %477, %554 ]
  %560 = getelementptr i32, i32* %547, i64 %558
  %561 = bitcast i32* %560 to <4 x i32>*
  store <4 x i32> %472, <4 x i32>* %561, align 1
  %562 = getelementptr i32, i32* %560, i64 4
  %563 = bitcast i32* %562 to <4 x i32>*
  store <4 x i32> %474, <4 x i32>* %563, align 1
  %564 = or i64 %558, 8
  %565 = getelementptr i32, i32* %547, i64 %564
  %566 = bitcast i32* %565 to <4 x i32>*
  store <4 x i32> %472, <4 x i32>* %566, align 1
  %567 = getelementptr i32, i32* %565, i64 4
  %568 = bitcast i32* %567 to <4 x i32>*
  store <4 x i32> %474, <4 x i32>* %568, align 1
  %569 = or i64 %558, 16
  %570 = getelementptr i32, i32* %547, i64 %569
  %571 = bitcast i32* %570 to <4 x i32>*
  store <4 x i32> %472, <4 x i32>* %571, align 1
  %572 = getelementptr i32, i32* %570, i64 4
  %573 = bitcast i32* %572 to <4 x i32>*
  store <4 x i32> %474, <4 x i32>* %573, align 1
  %574 = or i64 %558, 24
  %575 = getelementptr i32, i32* %547, i64 %574
  %576 = bitcast i32* %575 to <4 x i32>*
  store <4 x i32> %472, <4 x i32>* %576, align 1
  %577 = getelementptr i32, i32* %575, i64 4
  %578 = bitcast i32* %577 to <4 x i32>*
  store <4 x i32> %474, <4 x i32>* %578, align 1
  %579 = or i64 %558, 32
  %580 = getelementptr i32, i32* %547, i64 %579
  %581 = bitcast i32* %580 to <4 x i32>*
  store <4 x i32> %472, <4 x i32>* %581, align 1
  %582 = getelementptr i32, i32* %580, i64 4
  %583 = bitcast i32* %582 to <4 x i32>*
  store <4 x i32> %474, <4 x i32>* %583, align 1
  %584 = or i64 %558, 40
  %585 = getelementptr i32, i32* %547, i64 %584
  %586 = bitcast i32* %585 to <4 x i32>*
  store <4 x i32> %472, <4 x i32>* %586, align 1
  %587 = getelementptr i32, i32* %585, i64 4
  %588 = bitcast i32* %587 to <4 x i32>*
  store <4 x i32> %474, <4 x i32>* %588, align 1
  %589 = or i64 %558, 48
  %590 = getelementptr i32, i32* %547, i64 %589
  %591 = bitcast i32* %590 to <4 x i32>*
  store <4 x i32> %472, <4 x i32>* %591, align 1
  %592 = getelementptr i32, i32* %590, i64 4
  %593 = bitcast i32* %592 to <4 x i32>*
  store <4 x i32> %474, <4 x i32>* %593, align 1
  %594 = or i64 %558, 56
  %595 = getelementptr i32, i32* %547, i64 %594
  %596 = bitcast i32* %595 to <4 x i32>*
  store <4 x i32> %472, <4 x i32>* %596, align 1
  %597 = getelementptr i32, i32* %595, i64 4
  %598 = bitcast i32* %597 to <4 x i32>*
  store <4 x i32> %474, <4 x i32>* %598, align 1
  %599 = add i64 %558, 64
  %600 = add i64 %559, -8
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %602, label %557, !llvm.loop !294

602:                                              ; preds = %557, %554
  %603 = phi i64 [ 0, %554 ], [ %599, %557 ]
  br i1 %478, label %614, label %604

604:                                              ; preds = %602, %604
  %605 = phi i64 [ %611, %604 ], [ %603, %602 ]
  %606 = phi i64 [ %612, %604 ], [ %475, %602 ]
  %607 = getelementptr i32, i32* %547, i64 %605
  %608 = bitcast i32* %607 to <4 x i32>*
  store <4 x i32> %472, <4 x i32>* %608, align 1
  %609 = getelementptr i32, i32* %607, i64 4
  %610 = bitcast i32* %609 to <4 x i32>*
  store <4 x i32> %474, <4 x i32>* %610, align 1
  %611 = add i64 %605, 8
  %612 = add i64 %606, -1
  %613 = icmp eq i64 %612, 0
  br i1 %613, label %614, label %604, !llvm.loop !295

614:                                              ; preds = %604, %602
  br i1 %479, label %623, label %551

615:                                              ; preds = %539
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %548, i8 0, i64 %419, i1 false) #8
  br label %623

616:                                              ; preds = %551, %616
  %617 = phi i64 [ %621, %616 ], [ %552, %551 ]
  %618 = phi i8* [ %620, %616 ], [ %553, %551 ]
  %619 = bitcast i8* %618 to i32*
  store i32 %304, i32* %619, align 1
  %620 = getelementptr inbounds i8, i8* %618, i64 4
  %621 = add nuw i64 %617, 1
  %622 = icmp eq i64 %621, %416
  br i1 %622, label %623, label %616, !llvm.loop !296

623:                                              ; preds = %616, %614, %615, %549, %537
  br i1 %421, label %624, label %626

624:                                              ; preds = %623
  %625 = sub nsw i32 %538, %276
  br label %627

626:                                              ; preds = %997, %623
  br i1 %446, label %1085, label %1000

627:                                              ; preds = %997, %624
  %628 = phi i32 [ %279, %624 ], [ %998, %997 ]
  br i1 %422, label %714, label %629

629:                                              ; preds = %627
  %630 = load i32, i32* %409, align 4
  %631 = mul nsw i32 %630, %538
  %632 = add nsw i32 %631, %628
  %633 = load i32, i32* %411, align 8
  %634 = mul nsw i32 %632, %633
  %635 = load i32, i32* %413, align 4
  %636 = mul nsw i32 %634, %635
  %637 = sext i32 %636 to i64
  %638 = getelementptr inbounds i32, i32* %5, i64 %637
  %639 = bitcast i32* %638 to i8*
  br i1 %417, label %706, label %640

640:                                              ; preds = %629
  br i1 %425, label %714, label %641

641:                                              ; preds = %640
  br i1 %480, label %642, label %645

642:                                              ; preds = %705, %641
  %643 = phi i64 [ 0, %641 ], [ %481, %705 ]
  %644 = phi i8* [ %639, %641 ], [ %647, %705 ]
  br label %707

645:                                              ; preds = %641
  %646 = getelementptr i32, i32* %638, i64 %481
  %647 = bitcast i32* %646 to i8*
  br i1 %487, label %693, label %648

648:                                              ; preds = %645, %648
  %649 = phi i64 [ %690, %648 ], [ 0, %645 ]
  %650 = phi i64 [ %691, %648 ], [ %488, %645 ]
  %651 = getelementptr i32, i32* %638, i64 %649
  %652 = bitcast i32* %651 to <4 x i32>*
  store <4 x i32> %483, <4 x i32>* %652, align 1
  %653 = getelementptr i32, i32* %651, i64 4
  %654 = bitcast i32* %653 to <4 x i32>*
  store <4 x i32> %485, <4 x i32>* %654, align 1
  %655 = or i64 %649, 8
  %656 = getelementptr i32, i32* %638, i64 %655
  %657 = bitcast i32* %656 to <4 x i32>*
  store <4 x i32> %483, <4 x i32>* %657, align 1
  %658 = getelementptr i32, i32* %656, i64 4
  %659 = bitcast i32* %658 to <4 x i32>*
  store <4 x i32> %485, <4 x i32>* %659, align 1
  %660 = or i64 %649, 16
  %661 = getelementptr i32, i32* %638, i64 %660
  %662 = bitcast i32* %661 to <4 x i32>*
  store <4 x i32> %483, <4 x i32>* %662, align 1
  %663 = getelementptr i32, i32* %661, i64 4
  %664 = bitcast i32* %663 to <4 x i32>*
  store <4 x i32> %485, <4 x i32>* %664, align 1
  %665 = or i64 %649, 24
  %666 = getelementptr i32, i32* %638, i64 %665
  %667 = bitcast i32* %666 to <4 x i32>*
  store <4 x i32> %483, <4 x i32>* %667, align 1
  %668 = getelementptr i32, i32* %666, i64 4
  %669 = bitcast i32* %668 to <4 x i32>*
  store <4 x i32> %485, <4 x i32>* %669, align 1
  %670 = or i64 %649, 32
  %671 = getelementptr i32, i32* %638, i64 %670
  %672 = bitcast i32* %671 to <4 x i32>*
  store <4 x i32> %483, <4 x i32>* %672, align 1
  %673 = getelementptr i32, i32* %671, i64 4
  %674 = bitcast i32* %673 to <4 x i32>*
  store <4 x i32> %485, <4 x i32>* %674, align 1
  %675 = or i64 %649, 40
  %676 = getelementptr i32, i32* %638, i64 %675
  %677 = bitcast i32* %676 to <4 x i32>*
  store <4 x i32> %483, <4 x i32>* %677, align 1
  %678 = getelementptr i32, i32* %676, i64 4
  %679 = bitcast i32* %678 to <4 x i32>*
  store <4 x i32> %485, <4 x i32>* %679, align 1
  %680 = or i64 %649, 48
  %681 = getelementptr i32, i32* %638, i64 %680
  %682 = bitcast i32* %681 to <4 x i32>*
  store <4 x i32> %483, <4 x i32>* %682, align 1
  %683 = getelementptr i32, i32* %681, i64 4
  %684 = bitcast i32* %683 to <4 x i32>*
  store <4 x i32> %485, <4 x i32>* %684, align 1
  %685 = or i64 %649, 56
  %686 = getelementptr i32, i32* %638, i64 %685
  %687 = bitcast i32* %686 to <4 x i32>*
  store <4 x i32> %483, <4 x i32>* %687, align 1
  %688 = getelementptr i32, i32* %686, i64 4
  %689 = bitcast i32* %688 to <4 x i32>*
  store <4 x i32> %485, <4 x i32>* %689, align 1
  %690 = add i64 %649, 64
  %691 = add i64 %650, -8
  %692 = icmp eq i64 %691, 0
  br i1 %692, label %693, label %648, !llvm.loop !297

693:                                              ; preds = %648, %645
  %694 = phi i64 [ 0, %645 ], [ %690, %648 ]
  br i1 %489, label %705, label %695

695:                                              ; preds = %693, %695
  %696 = phi i64 [ %702, %695 ], [ %694, %693 ]
  %697 = phi i64 [ %703, %695 ], [ %486, %693 ]
  %698 = getelementptr i32, i32* %638, i64 %696
  %699 = bitcast i32* %698 to <4 x i32>*
  store <4 x i32> %483, <4 x i32>* %699, align 1
  %700 = getelementptr i32, i32* %698, i64 4
  %701 = bitcast i32* %700 to <4 x i32>*
  store <4 x i32> %485, <4 x i32>* %701, align 1
  %702 = add i64 %696, 8
  %703 = add i64 %697, -1
  %704 = icmp eq i64 %703, 0
  br i1 %704, label %705, label %695, !llvm.loop !298

705:                                              ; preds = %695, %693
  br i1 %490, label %714, label %642

706:                                              ; preds = %629
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %639, i8 0, i64 %426, i1 false) #8
  br label %714

707:                                              ; preds = %642, %707
  %708 = phi i64 [ %712, %707 ], [ %643, %642 ]
  %709 = phi i8* [ %711, %707 ], [ %644, %642 ]
  %710 = bitcast i8* %709 to i32*
  store i32 %304, i32* %710, align 1
  %711 = getelementptr inbounds i8, i8* %709, i64 4
  %712 = add nuw i64 %708, 1
  %713 = icmp eq i64 %712, %424
  br i1 %713, label %714, label %707, !llvm.loop !299

714:                                              ; preds = %707, %705, %706, %640, %627
  br i1 %428, label %715, label %717

715:                                              ; preds = %714
  %716 = sub i32 %628, %279
  br label %718

717:                                              ; preds = %908, %714
  br i1 %441, label %997, label %911

718:                                              ; preds = %908, %715
  %719 = phi i32 [ %282, %715 ], [ %909, %908 ]
  br i1 %429, label %805, label %720

720:                                              ; preds = %718
  %721 = load i32, i32* %409, align 4
  %722 = mul nsw i32 %721, %538
  %723 = add nsw i32 %722, %628
  %724 = load i32, i32* %411, align 8
  %725 = mul nsw i32 %723, %724
  %726 = add nsw i32 %725, %719
  %727 = load i32, i32* %413, align 4
  %728 = mul nsw i32 %726, %727
  %729 = sext i32 %728 to i64
  %730 = getelementptr inbounds i32, i32* %5, i64 %729
  %731 = bitcast i32* %730 to i8*
  br i1 %417, label %797, label %732

732:                                              ; preds = %720
  br i1 %491, label %733, label %736

733:                                              ; preds = %796, %732
  %734 = phi i64 [ 0, %732 ], [ %492, %796 ]
  %735 = phi i8* [ %731, %732 ], [ %738, %796 ]
  br label %798

736:                                              ; preds = %732
  %737 = getelementptr i32, i32* %730, i64 %492
  %738 = bitcast i32* %737 to i8*
  br i1 %498, label %784, label %739

739:                                              ; preds = %736, %739
  %740 = phi i64 [ %781, %739 ], [ 0, %736 ]
  %741 = phi i64 [ %782, %739 ], [ %499, %736 ]
  %742 = getelementptr i32, i32* %730, i64 %740
  %743 = bitcast i32* %742 to <4 x i32>*
  store <4 x i32> %494, <4 x i32>* %743, align 1
  %744 = getelementptr i32, i32* %742, i64 4
  %745 = bitcast i32* %744 to <4 x i32>*
  store <4 x i32> %496, <4 x i32>* %745, align 1
  %746 = or i64 %740, 8
  %747 = getelementptr i32, i32* %730, i64 %746
  %748 = bitcast i32* %747 to <4 x i32>*
  store <4 x i32> %494, <4 x i32>* %748, align 1
  %749 = getelementptr i32, i32* %747, i64 4
  %750 = bitcast i32* %749 to <4 x i32>*
  store <4 x i32> %496, <4 x i32>* %750, align 1
  %751 = or i64 %740, 16
  %752 = getelementptr i32, i32* %730, i64 %751
  %753 = bitcast i32* %752 to <4 x i32>*
  store <4 x i32> %494, <4 x i32>* %753, align 1
  %754 = getelementptr i32, i32* %752, i64 4
  %755 = bitcast i32* %754 to <4 x i32>*
  store <4 x i32> %496, <4 x i32>* %755, align 1
  %756 = or i64 %740, 24
  %757 = getelementptr i32, i32* %730, i64 %756
  %758 = bitcast i32* %757 to <4 x i32>*
  store <4 x i32> %494, <4 x i32>* %758, align 1
  %759 = getelementptr i32, i32* %757, i64 4
  %760 = bitcast i32* %759 to <4 x i32>*
  store <4 x i32> %496, <4 x i32>* %760, align 1
  %761 = or i64 %740, 32
  %762 = getelementptr i32, i32* %730, i64 %761
  %763 = bitcast i32* %762 to <4 x i32>*
  store <4 x i32> %494, <4 x i32>* %763, align 1
  %764 = getelementptr i32, i32* %762, i64 4
  %765 = bitcast i32* %764 to <4 x i32>*
  store <4 x i32> %496, <4 x i32>* %765, align 1
  %766 = or i64 %740, 40
  %767 = getelementptr i32, i32* %730, i64 %766
  %768 = bitcast i32* %767 to <4 x i32>*
  store <4 x i32> %494, <4 x i32>* %768, align 1
  %769 = getelementptr i32, i32* %767, i64 4
  %770 = bitcast i32* %769 to <4 x i32>*
  store <4 x i32> %496, <4 x i32>* %770, align 1
  %771 = or i64 %740, 48
  %772 = getelementptr i32, i32* %730, i64 %771
  %773 = bitcast i32* %772 to <4 x i32>*
  store <4 x i32> %494, <4 x i32>* %773, align 1
  %774 = getelementptr i32, i32* %772, i64 4
  %775 = bitcast i32* %774 to <4 x i32>*
  store <4 x i32> %496, <4 x i32>* %775, align 1
  %776 = or i64 %740, 56
  %777 = getelementptr i32, i32* %730, i64 %776
  %778 = bitcast i32* %777 to <4 x i32>*
  store <4 x i32> %494, <4 x i32>* %778, align 1
  %779 = getelementptr i32, i32* %777, i64 4
  %780 = bitcast i32* %779 to <4 x i32>*
  store <4 x i32> %496, <4 x i32>* %780, align 1
  %781 = add i64 %740, 64
  %782 = add i64 %741, -8
  %783 = icmp eq i64 %782, 0
  br i1 %783, label %784, label %739, !llvm.loop !300

784:                                              ; preds = %739, %736
  %785 = phi i64 [ 0, %736 ], [ %781, %739 ]
  br i1 %500, label %796, label %786

786:                                              ; preds = %784, %786
  %787 = phi i64 [ %793, %786 ], [ %785, %784 ]
  %788 = phi i64 [ %794, %786 ], [ %497, %784 ]
  %789 = getelementptr i32, i32* %730, i64 %787
  %790 = bitcast i32* %789 to <4 x i32>*
  store <4 x i32> %494, <4 x i32>* %790, align 1
  %791 = getelementptr i32, i32* %789, i64 4
  %792 = bitcast i32* %791 to <4 x i32>*
  store <4 x i32> %496, <4 x i32>* %792, align 1
  %793 = add i64 %787, 8
  %794 = add i64 %788, -1
  %795 = icmp eq i64 %794, 0
  br i1 %795, label %796, label %786, !llvm.loop !301

796:                                              ; preds = %786, %784
  br i1 %501, label %805, label %733

797:                                              ; preds = %720
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %731, i8 0, i64 %431, i1 false) #8
  br label %805

798:                                              ; preds = %733, %798
  %799 = phi i64 [ %803, %798 ], [ %734, %733 ]
  %800 = phi i8* [ %802, %798 ], [ %735, %733 ]
  %801 = bitcast i8* %800 to i32*
  store i32 %304, i32* %801, align 1
  %802 = getelementptr inbounds i8, i8* %800, i64 4
  %803 = add nuw i64 %799, 1
  %804 = icmp eq i64 %803, %430
  br i1 %804, label %805, label %798, !llvm.loop !302

805:                                              ; preds = %798, %796, %797, %718
  %806 = load i32, i32* %409, align 4
  %807 = mul nsw i32 %806, %538
  %808 = add nsw i32 %807, %628
  %809 = load i32, i32* %411, align 8
  %810 = mul nsw i32 %808, %809
  %811 = add nsw i32 %810, %719
  %812 = load i32, i32* %413, align 4
  %813 = mul nsw i32 %811, %812
  %814 = add nsw i32 %813, %285
  %815 = sext i32 %814 to i64
  %816 = getelementptr inbounds i32, i32* %5, i64 %815
  %817 = sub i32 %719, %282
  %818 = load i32, i32* %432, align 4
  %819 = mul nsw i32 %818, %625
  %820 = add nsw i32 %716, %819
  %821 = load i32, i32* %434, align 8
  %822 = mul nsw i32 %820, %821
  %823 = add nsw i32 %817, %822
  %824 = load i32, i32* %301, align 4
  %825 = mul nsw i32 %823, %824
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds i32, i32* %2, i64 %826
  %828 = bitcast i32* %816 to i8*
  %829 = bitcast i32* %827 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %828, i8* align 4 %829, i64 %436, i1 false)
  br i1 %437, label %908, label %830

830:                                              ; preds = %805
  %831 = add nsw i32 %438, %813
  %832 = sext i32 %831 to i64
  %833 = getelementptr inbounds i32, i32* %5, i64 %832
  %834 = bitcast i32* %833 to i8*
  br i1 %417, label %900, label %835

835:                                              ; preds = %830
  br i1 %502, label %836, label %839

836:                                              ; preds = %899, %835
  %837 = phi i64 [ 0, %835 ], [ %503, %899 ]
  %838 = phi i8* [ %834, %835 ], [ %841, %899 ]
  br label %901

839:                                              ; preds = %835
  %840 = getelementptr i32, i32* %833, i64 %503
  %841 = bitcast i32* %840 to i8*
  br i1 %509, label %887, label %842

842:                                              ; preds = %839, %842
  %843 = phi i64 [ %884, %842 ], [ 0, %839 ]
  %844 = phi i64 [ %885, %842 ], [ %510, %839 ]
  %845 = getelementptr i32, i32* %833, i64 %843
  %846 = bitcast i32* %845 to <4 x i32>*
  store <4 x i32> %505, <4 x i32>* %846, align 1
  %847 = getelementptr i32, i32* %845, i64 4
  %848 = bitcast i32* %847 to <4 x i32>*
  store <4 x i32> %507, <4 x i32>* %848, align 1
  %849 = or i64 %843, 8
  %850 = getelementptr i32, i32* %833, i64 %849
  %851 = bitcast i32* %850 to <4 x i32>*
  store <4 x i32> %505, <4 x i32>* %851, align 1
  %852 = getelementptr i32, i32* %850, i64 4
  %853 = bitcast i32* %852 to <4 x i32>*
  store <4 x i32> %507, <4 x i32>* %853, align 1
  %854 = or i64 %843, 16
  %855 = getelementptr i32, i32* %833, i64 %854
  %856 = bitcast i32* %855 to <4 x i32>*
  store <4 x i32> %505, <4 x i32>* %856, align 1
  %857 = getelementptr i32, i32* %855, i64 4
  %858 = bitcast i32* %857 to <4 x i32>*
  store <4 x i32> %507, <4 x i32>* %858, align 1
  %859 = or i64 %843, 24
  %860 = getelementptr i32, i32* %833, i64 %859
  %861 = bitcast i32* %860 to <4 x i32>*
  store <4 x i32> %505, <4 x i32>* %861, align 1
  %862 = getelementptr i32, i32* %860, i64 4
  %863 = bitcast i32* %862 to <4 x i32>*
  store <4 x i32> %507, <4 x i32>* %863, align 1
  %864 = or i64 %843, 32
  %865 = getelementptr i32, i32* %833, i64 %864
  %866 = bitcast i32* %865 to <4 x i32>*
  store <4 x i32> %505, <4 x i32>* %866, align 1
  %867 = getelementptr i32, i32* %865, i64 4
  %868 = bitcast i32* %867 to <4 x i32>*
  store <4 x i32> %507, <4 x i32>* %868, align 1
  %869 = or i64 %843, 40
  %870 = getelementptr i32, i32* %833, i64 %869
  %871 = bitcast i32* %870 to <4 x i32>*
  store <4 x i32> %505, <4 x i32>* %871, align 1
  %872 = getelementptr i32, i32* %870, i64 4
  %873 = bitcast i32* %872 to <4 x i32>*
  store <4 x i32> %507, <4 x i32>* %873, align 1
  %874 = or i64 %843, 48
  %875 = getelementptr i32, i32* %833, i64 %874
  %876 = bitcast i32* %875 to <4 x i32>*
  store <4 x i32> %505, <4 x i32>* %876, align 1
  %877 = getelementptr i32, i32* %875, i64 4
  %878 = bitcast i32* %877 to <4 x i32>*
  store <4 x i32> %507, <4 x i32>* %878, align 1
  %879 = or i64 %843, 56
  %880 = getelementptr i32, i32* %833, i64 %879
  %881 = bitcast i32* %880 to <4 x i32>*
  store <4 x i32> %505, <4 x i32>* %881, align 1
  %882 = getelementptr i32, i32* %880, i64 4
  %883 = bitcast i32* %882 to <4 x i32>*
  store <4 x i32> %507, <4 x i32>* %883, align 1
  %884 = add i64 %843, 64
  %885 = add i64 %844, -8
  %886 = icmp eq i64 %885, 0
  br i1 %886, label %887, label %842, !llvm.loop !303

887:                                              ; preds = %842, %839
  %888 = phi i64 [ 0, %839 ], [ %884, %842 ]
  br i1 %511, label %899, label %889

889:                                              ; preds = %887, %889
  %890 = phi i64 [ %896, %889 ], [ %888, %887 ]
  %891 = phi i64 [ %897, %889 ], [ %508, %887 ]
  %892 = getelementptr i32, i32* %833, i64 %890
  %893 = bitcast i32* %892 to <4 x i32>*
  store <4 x i32> %505, <4 x i32>* %893, align 1
  %894 = getelementptr i32, i32* %892, i64 4
  %895 = bitcast i32* %894 to <4 x i32>*
  store <4 x i32> %507, <4 x i32>* %895, align 1
  %896 = add i64 %890, 8
  %897 = add i64 %891, -1
  %898 = icmp eq i64 %897, 0
  br i1 %898, label %899, label %889, !llvm.loop !304

899:                                              ; preds = %889, %887
  br i1 %512, label %908, label %836

900:                                              ; preds = %830
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %834, i8 0, i64 %440, i1 false) #8
  br label %908

901:                                              ; preds = %836, %901
  %902 = phi i64 [ %906, %901 ], [ %837, %836 ]
  %903 = phi i8* [ %905, %901 ], [ %838, %836 ]
  %904 = bitcast i8* %903 to i32*
  store i32 %304, i32* %904, align 1
  %905 = getelementptr inbounds i8, i8* %903, i64 4
  %906 = add nuw i64 %902, 1
  %907 = icmp eq i64 %906, %439
  br i1 %907, label %908, label %901, !llvm.loop !305

908:                                              ; preds = %901, %899, %900, %805
  %909 = add nsw i32 %719, 1
  %910 = icmp eq i32 %909, %427
  br i1 %910, label %717, label %718

911:                                              ; preds = %717
  %912 = load i32, i32* %409, align 4
  %913 = mul nsw i32 %912, %538
  %914 = add nsw i32 %913, %628
  %915 = load i32, i32* %411, align 8
  %916 = mul nsw i32 %914, %915
  %917 = add nsw i32 %916, %427
  %918 = load i32, i32* %413, align 4
  %919 = mul nsw i32 %917, %918
  %920 = sext i32 %919 to i64
  %921 = getelementptr inbounds i32, i32* %5, i64 %920
  %922 = bitcast i32* %921 to i8*
  br i1 %417, label %989, label %923

923:                                              ; preds = %911
  br i1 %444, label %997, label %924

924:                                              ; preds = %923
  br i1 %513, label %925, label %928

925:                                              ; preds = %988, %924
  %926 = phi i64 [ 0, %924 ], [ %514, %988 ]
  %927 = phi i8* [ %922, %924 ], [ %930, %988 ]
  br label %990

928:                                              ; preds = %924
  %929 = getelementptr i32, i32* %921, i64 %514
  %930 = bitcast i32* %929 to i8*
  br i1 %520, label %976, label %931

931:                                              ; preds = %928, %931
  %932 = phi i64 [ %973, %931 ], [ 0, %928 ]
  %933 = phi i64 [ %974, %931 ], [ %521, %928 ]
  %934 = getelementptr i32, i32* %921, i64 %932
  %935 = bitcast i32* %934 to <4 x i32>*
  store <4 x i32> %516, <4 x i32>* %935, align 1
  %936 = getelementptr i32, i32* %934, i64 4
  %937 = bitcast i32* %936 to <4 x i32>*
  store <4 x i32> %518, <4 x i32>* %937, align 1
  %938 = or i64 %932, 8
  %939 = getelementptr i32, i32* %921, i64 %938
  %940 = bitcast i32* %939 to <4 x i32>*
  store <4 x i32> %516, <4 x i32>* %940, align 1
  %941 = getelementptr i32, i32* %939, i64 4
  %942 = bitcast i32* %941 to <4 x i32>*
  store <4 x i32> %518, <4 x i32>* %942, align 1
  %943 = or i64 %932, 16
  %944 = getelementptr i32, i32* %921, i64 %943
  %945 = bitcast i32* %944 to <4 x i32>*
  store <4 x i32> %516, <4 x i32>* %945, align 1
  %946 = getelementptr i32, i32* %944, i64 4
  %947 = bitcast i32* %946 to <4 x i32>*
  store <4 x i32> %518, <4 x i32>* %947, align 1
  %948 = or i64 %932, 24
  %949 = getelementptr i32, i32* %921, i64 %948
  %950 = bitcast i32* %949 to <4 x i32>*
  store <4 x i32> %516, <4 x i32>* %950, align 1
  %951 = getelementptr i32, i32* %949, i64 4
  %952 = bitcast i32* %951 to <4 x i32>*
  store <4 x i32> %518, <4 x i32>* %952, align 1
  %953 = or i64 %932, 32
  %954 = getelementptr i32, i32* %921, i64 %953
  %955 = bitcast i32* %954 to <4 x i32>*
  store <4 x i32> %516, <4 x i32>* %955, align 1
  %956 = getelementptr i32, i32* %954, i64 4
  %957 = bitcast i32* %956 to <4 x i32>*
  store <4 x i32> %518, <4 x i32>* %957, align 1
  %958 = or i64 %932, 40
  %959 = getelementptr i32, i32* %921, i64 %958
  %960 = bitcast i32* %959 to <4 x i32>*
  store <4 x i32> %516, <4 x i32>* %960, align 1
  %961 = getelementptr i32, i32* %959, i64 4
  %962 = bitcast i32* %961 to <4 x i32>*
  store <4 x i32> %518, <4 x i32>* %962, align 1
  %963 = or i64 %932, 48
  %964 = getelementptr i32, i32* %921, i64 %963
  %965 = bitcast i32* %964 to <4 x i32>*
  store <4 x i32> %516, <4 x i32>* %965, align 1
  %966 = getelementptr i32, i32* %964, i64 4
  %967 = bitcast i32* %966 to <4 x i32>*
  store <4 x i32> %518, <4 x i32>* %967, align 1
  %968 = or i64 %932, 56
  %969 = getelementptr i32, i32* %921, i64 %968
  %970 = bitcast i32* %969 to <4 x i32>*
  store <4 x i32> %516, <4 x i32>* %970, align 1
  %971 = getelementptr i32, i32* %969, i64 4
  %972 = bitcast i32* %971 to <4 x i32>*
  store <4 x i32> %518, <4 x i32>* %972, align 1
  %973 = add i64 %932, 64
  %974 = add i64 %933, -8
  %975 = icmp eq i64 %974, 0
  br i1 %975, label %976, label %931, !llvm.loop !306

976:                                              ; preds = %931, %928
  %977 = phi i64 [ 0, %928 ], [ %973, %931 ]
  br i1 %522, label %988, label %978

978:                                              ; preds = %976, %978
  %979 = phi i64 [ %985, %978 ], [ %977, %976 ]
  %980 = phi i64 [ %986, %978 ], [ %519, %976 ]
  %981 = getelementptr i32, i32* %921, i64 %979
  %982 = bitcast i32* %981 to <4 x i32>*
  store <4 x i32> %516, <4 x i32>* %982, align 1
  %983 = getelementptr i32, i32* %981, i64 4
  %984 = bitcast i32* %983 to <4 x i32>*
  store <4 x i32> %518, <4 x i32>* %984, align 1
  %985 = add i64 %979, 8
  %986 = add i64 %980, -1
  %987 = icmp eq i64 %986, 0
  br i1 %987, label %988, label %978, !llvm.loop !307

988:                                              ; preds = %978, %976
  br i1 %523, label %997, label %925

989:                                              ; preds = %911
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %922, i8 0, i64 %445, i1 false) #8
  br label %997

990:                                              ; preds = %925, %990
  %991 = phi i64 [ %995, %990 ], [ %926, %925 ]
  %992 = phi i8* [ %994, %990 ], [ %927, %925 ]
  %993 = bitcast i8* %992 to i32*
  store i32 %304, i32* %993, align 1
  %994 = getelementptr inbounds i8, i8* %992, i64 4
  %995 = add nuw i64 %991, 1
  %996 = icmp eq i64 %995, %443
  br i1 %996, label %997, label %990, !llvm.loop !308

997:                                              ; preds = %990, %988, %989, %923, %717
  %998 = add nsw i32 %628, 1
  %999 = icmp eq i32 %998, %420
  br i1 %999, label %626, label %627

1000:                                             ; preds = %626
  %1001 = load i32, i32* %409, align 4
  %1002 = mul nsw i32 %1001, %538
  %1003 = add nsw i32 %1002, %420
  %1004 = load i32, i32* %411, align 8
  %1005 = mul nsw i32 %1003, %1004
  %1006 = load i32, i32* %413, align 4
  %1007 = mul nsw i32 %1005, %1006
  %1008 = sext i32 %1007 to i64
  %1009 = getelementptr inbounds i32, i32* %5, i64 %1008
  %1010 = bitcast i32* %1009 to i8*
  br i1 %417, label %1077, label %1011

1011:                                             ; preds = %1000
  br i1 %449, label %1085, label %1012

1012:                                             ; preds = %1011
  br i1 %524, label %1013, label %1016

1013:                                             ; preds = %1076, %1012
  %1014 = phi i64 [ 0, %1012 ], [ %525, %1076 ]
  %1015 = phi i8* [ %1010, %1012 ], [ %1018, %1076 ]
  br label %1078

1016:                                             ; preds = %1012
  %1017 = getelementptr i32, i32* %1009, i64 %525
  %1018 = bitcast i32* %1017 to i8*
  br i1 %531, label %1064, label %1019

1019:                                             ; preds = %1016, %1019
  %1020 = phi i64 [ %1061, %1019 ], [ 0, %1016 ]
  %1021 = phi i64 [ %1062, %1019 ], [ %532, %1016 ]
  %1022 = getelementptr i32, i32* %1009, i64 %1020
  %1023 = bitcast i32* %1022 to <4 x i32>*
  store <4 x i32> %527, <4 x i32>* %1023, align 1
  %1024 = getelementptr i32, i32* %1022, i64 4
  %1025 = bitcast i32* %1024 to <4 x i32>*
  store <4 x i32> %529, <4 x i32>* %1025, align 1
  %1026 = or i64 %1020, 8
  %1027 = getelementptr i32, i32* %1009, i64 %1026
  %1028 = bitcast i32* %1027 to <4 x i32>*
  store <4 x i32> %527, <4 x i32>* %1028, align 1
  %1029 = getelementptr i32, i32* %1027, i64 4
  %1030 = bitcast i32* %1029 to <4 x i32>*
  store <4 x i32> %529, <4 x i32>* %1030, align 1
  %1031 = or i64 %1020, 16
  %1032 = getelementptr i32, i32* %1009, i64 %1031
  %1033 = bitcast i32* %1032 to <4 x i32>*
  store <4 x i32> %527, <4 x i32>* %1033, align 1
  %1034 = getelementptr i32, i32* %1032, i64 4
  %1035 = bitcast i32* %1034 to <4 x i32>*
  store <4 x i32> %529, <4 x i32>* %1035, align 1
  %1036 = or i64 %1020, 24
  %1037 = getelementptr i32, i32* %1009, i64 %1036
  %1038 = bitcast i32* %1037 to <4 x i32>*
  store <4 x i32> %527, <4 x i32>* %1038, align 1
  %1039 = getelementptr i32, i32* %1037, i64 4
  %1040 = bitcast i32* %1039 to <4 x i32>*
  store <4 x i32> %529, <4 x i32>* %1040, align 1
  %1041 = or i64 %1020, 32
  %1042 = getelementptr i32, i32* %1009, i64 %1041
  %1043 = bitcast i32* %1042 to <4 x i32>*
  store <4 x i32> %527, <4 x i32>* %1043, align 1
  %1044 = getelementptr i32, i32* %1042, i64 4
  %1045 = bitcast i32* %1044 to <4 x i32>*
  store <4 x i32> %529, <4 x i32>* %1045, align 1
  %1046 = or i64 %1020, 40
  %1047 = getelementptr i32, i32* %1009, i64 %1046
  %1048 = bitcast i32* %1047 to <4 x i32>*
  store <4 x i32> %527, <4 x i32>* %1048, align 1
  %1049 = getelementptr i32, i32* %1047, i64 4
  %1050 = bitcast i32* %1049 to <4 x i32>*
  store <4 x i32> %529, <4 x i32>* %1050, align 1
  %1051 = or i64 %1020, 48
  %1052 = getelementptr i32, i32* %1009, i64 %1051
  %1053 = bitcast i32* %1052 to <4 x i32>*
  store <4 x i32> %527, <4 x i32>* %1053, align 1
  %1054 = getelementptr i32, i32* %1052, i64 4
  %1055 = bitcast i32* %1054 to <4 x i32>*
  store <4 x i32> %529, <4 x i32>* %1055, align 1
  %1056 = or i64 %1020, 56
  %1057 = getelementptr i32, i32* %1009, i64 %1056
  %1058 = bitcast i32* %1057 to <4 x i32>*
  store <4 x i32> %527, <4 x i32>* %1058, align 1
  %1059 = getelementptr i32, i32* %1057, i64 4
  %1060 = bitcast i32* %1059 to <4 x i32>*
  store <4 x i32> %529, <4 x i32>* %1060, align 1
  %1061 = add i64 %1020, 64
  %1062 = add i64 %1021, -8
  %1063 = icmp eq i64 %1062, 0
  br i1 %1063, label %1064, label %1019, !llvm.loop !309

1064:                                             ; preds = %1019, %1016
  %1065 = phi i64 [ 0, %1016 ], [ %1061, %1019 ]
  br i1 %533, label %1076, label %1066

1066:                                             ; preds = %1064, %1066
  %1067 = phi i64 [ %1073, %1066 ], [ %1065, %1064 ]
  %1068 = phi i64 [ %1074, %1066 ], [ %530, %1064 ]
  %1069 = getelementptr i32, i32* %1009, i64 %1067
  %1070 = bitcast i32* %1069 to <4 x i32>*
  store <4 x i32> %527, <4 x i32>* %1070, align 1
  %1071 = getelementptr i32, i32* %1069, i64 4
  %1072 = bitcast i32* %1071 to <4 x i32>*
  store <4 x i32> %529, <4 x i32>* %1072, align 1
  %1073 = add i64 %1067, 8
  %1074 = add i64 %1068, -1
  %1075 = icmp eq i64 %1074, 0
  br i1 %1075, label %1076, label %1066, !llvm.loop !310

1076:                                             ; preds = %1066, %1064
  br i1 %534, label %1085, label %1013

1077:                                             ; preds = %1000
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %1010, i8 0, i64 %450, i1 false) #8
  br label %1085

1078:                                             ; preds = %1013, %1078
  %1079 = phi i64 [ %1083, %1078 ], [ %1014, %1013 ]
  %1080 = phi i8* [ %1082, %1078 ], [ %1015, %1013 ]
  %1081 = bitcast i8* %1080 to i32*
  store i32 %304, i32* %1081, align 1
  %1082 = getelementptr inbounds i8, i8* %1080, i64 4
  %1083 = add nuw i64 %1079, 1
  %1084 = icmp eq i64 %1083, %448
  br i1 %1084, label %1085, label %1078, !llvm.loop !311

1085:                                             ; preds = %1078, %1076, %1077, %1011, %626
  %1086 = add nsw i32 %538, 1
  %1087 = icmp eq i32 %1086, %405
  br i1 %1087, label %535, label %537

1088:                                             ; preds = %535
  %1089 = getelementptr inbounds i32, i32* %205, i64 1
  %1090 = load i32, i32* %1089, align 4
  %1091 = mul nsw i32 %1090, %405
  %1092 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %1093 = bitcast [16 x i8]* %1092 to i32*
  %1094 = load i32, i32* %1093, align 8
  %1095 = mul nsw i32 %1091, %1094
  %1096 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %1097 = bitcast i8* %1096 to i32*
  %1098 = load i32, i32* %1097, align 4
  %1099 = mul nsw i32 %1095, %1098
  %1100 = sext i32 %1099 to i64
  %1101 = getelementptr inbounds i32, i32* %5, i64 %1100
  %1102 = bitcast i32* %1101 to i8*
  %1103 = mul i32 %275, %274
  %1104 = mul i32 %1103, %272
  %1105 = mul i32 %1104, %286
  %1106 = sext i32 %1105 to i64
  %1107 = icmp eq i32 %304, 0
  br i1 %1107, label %1190, label %1108

1108:                                             ; preds = %1088
  %1109 = icmp eq i32 %1105, 0
  br i1 %1109, label %1199, label %1110

1110:                                             ; preds = %1108
  %1111 = icmp ult i32 %1105, 8
  br i1 %1111, label %1112, label %1115

1112:                                             ; preds = %1188, %1110
  %1113 = phi i64 [ 0, %1110 ], [ %1116, %1188 ]
  %1114 = phi i8* [ %1102, %1110 ], [ %1118, %1188 ]
  br label %1192

1115:                                             ; preds = %1110
  %1116 = and i64 %1106, -8
  %1117 = getelementptr i32, i32* %1101, i64 %1116
  %1118 = bitcast i32* %1117 to i8*
  %1119 = insertelement <4 x i32> undef, i32 %304, i32 0
  %1120 = shufflevector <4 x i32> %1119, <4 x i32> undef, <4 x i32> zeroinitializer
  %1121 = insertelement <4 x i32> undef, i32 %304, i32 0
  %1122 = shufflevector <4 x i32> %1121, <4 x i32> undef, <4 x i32> zeroinitializer
  %1123 = add nsw i64 %1116, -8
  %1124 = lshr exact i64 %1123, 3
  %1125 = add nuw nsw i64 %1124, 1
  %1126 = and i64 %1125, 7
  %1127 = icmp ult i64 %1123, 56
  br i1 %1127, label %1175, label %1128

1128:                                             ; preds = %1115
  %1129 = sub nsw i64 %1125, %1126
  br label %1130

1130:                                             ; preds = %1130, %1128
  %1131 = phi i64 [ 0, %1128 ], [ %1172, %1130 ]
  %1132 = phi i64 [ %1129, %1128 ], [ %1173, %1130 ]
  %1133 = getelementptr i32, i32* %1101, i64 %1131
  %1134 = bitcast i32* %1133 to <4 x i32>*
  store <4 x i32> %1120, <4 x i32>* %1134, align 1
  %1135 = getelementptr i32, i32* %1133, i64 4
  %1136 = bitcast i32* %1135 to <4 x i32>*
  store <4 x i32> %1122, <4 x i32>* %1136, align 1
  %1137 = or i64 %1131, 8
  %1138 = getelementptr i32, i32* %1101, i64 %1137
  %1139 = bitcast i32* %1138 to <4 x i32>*
  store <4 x i32> %1120, <4 x i32>* %1139, align 1
  %1140 = getelementptr i32, i32* %1138, i64 4
  %1141 = bitcast i32* %1140 to <4 x i32>*
  store <4 x i32> %1122, <4 x i32>* %1141, align 1
  %1142 = or i64 %1131, 16
  %1143 = getelementptr i32, i32* %1101, i64 %1142
  %1144 = bitcast i32* %1143 to <4 x i32>*
  store <4 x i32> %1120, <4 x i32>* %1144, align 1
  %1145 = getelementptr i32, i32* %1143, i64 4
  %1146 = bitcast i32* %1145 to <4 x i32>*
  store <4 x i32> %1122, <4 x i32>* %1146, align 1
  %1147 = or i64 %1131, 24
  %1148 = getelementptr i32, i32* %1101, i64 %1147
  %1149 = bitcast i32* %1148 to <4 x i32>*
  store <4 x i32> %1120, <4 x i32>* %1149, align 1
  %1150 = getelementptr i32, i32* %1148, i64 4
  %1151 = bitcast i32* %1150 to <4 x i32>*
  store <4 x i32> %1122, <4 x i32>* %1151, align 1
  %1152 = or i64 %1131, 32
  %1153 = getelementptr i32, i32* %1101, i64 %1152
  %1154 = bitcast i32* %1153 to <4 x i32>*
  store <4 x i32> %1120, <4 x i32>* %1154, align 1
  %1155 = getelementptr i32, i32* %1153, i64 4
  %1156 = bitcast i32* %1155 to <4 x i32>*
  store <4 x i32> %1122, <4 x i32>* %1156, align 1
  %1157 = or i64 %1131, 40
  %1158 = getelementptr i32, i32* %1101, i64 %1157
  %1159 = bitcast i32* %1158 to <4 x i32>*
  store <4 x i32> %1120, <4 x i32>* %1159, align 1
  %1160 = getelementptr i32, i32* %1158, i64 4
  %1161 = bitcast i32* %1160 to <4 x i32>*
  store <4 x i32> %1122, <4 x i32>* %1161, align 1
  %1162 = or i64 %1131, 48
  %1163 = getelementptr i32, i32* %1101, i64 %1162
  %1164 = bitcast i32* %1163 to <4 x i32>*
  store <4 x i32> %1120, <4 x i32>* %1164, align 1
  %1165 = getelementptr i32, i32* %1163, i64 4
  %1166 = bitcast i32* %1165 to <4 x i32>*
  store <4 x i32> %1122, <4 x i32>* %1166, align 1
  %1167 = or i64 %1131, 56
  %1168 = getelementptr i32, i32* %1101, i64 %1167
  %1169 = bitcast i32* %1168 to <4 x i32>*
  store <4 x i32> %1120, <4 x i32>* %1169, align 1
  %1170 = getelementptr i32, i32* %1168, i64 4
  %1171 = bitcast i32* %1170 to <4 x i32>*
  store <4 x i32> %1122, <4 x i32>* %1171, align 1
  %1172 = add i64 %1131, 64
  %1173 = add i64 %1132, -8
  %1174 = icmp eq i64 %1173, 0
  br i1 %1174, label %1175, label %1130, !llvm.loop !312

1175:                                             ; preds = %1130, %1115
  %1176 = phi i64 [ 0, %1115 ], [ %1172, %1130 ]
  %1177 = icmp eq i64 %1126, 0
  br i1 %1177, label %1188, label %1178

1178:                                             ; preds = %1175, %1178
  %1179 = phi i64 [ %1185, %1178 ], [ %1176, %1175 ]
  %1180 = phi i64 [ %1186, %1178 ], [ %1126, %1175 ]
  %1181 = getelementptr i32, i32* %1101, i64 %1179
  %1182 = bitcast i32* %1181 to <4 x i32>*
  store <4 x i32> %1120, <4 x i32>* %1182, align 1
  %1183 = getelementptr i32, i32* %1181, i64 4
  %1184 = bitcast i32* %1183 to <4 x i32>*
  store <4 x i32> %1122, <4 x i32>* %1184, align 1
  %1185 = add i64 %1179, 8
  %1186 = add i64 %1180, -1
  %1187 = icmp eq i64 %1186, 0
  br i1 %1187, label %1188, label %1178, !llvm.loop !313

1188:                                             ; preds = %1178, %1175
  %1189 = icmp eq i64 %1116, %1106
  br i1 %1189, label %1199, label %1112

1190:                                             ; preds = %1088
  %1191 = shl nsw i64 %1106, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %1102, i8 0, i64 %1191, i1 false) #8
  br label %1199

1192:                                             ; preds = %1112, %1192
  %1193 = phi i64 [ %1197, %1192 ], [ %1113, %1112 ]
  %1194 = phi i8* [ %1196, %1192 ], [ %1114, %1112 ]
  %1195 = bitcast i8* %1194 to i32*
  store i32 %304, i32* %1195, align 1
  %1196 = getelementptr inbounds i8, i8* %1194, i64 4
  %1197 = add nuw i64 %1193, 1
  %1198 = icmp eq i64 %1197, %1106
  br i1 %1198, label %1199, label %1192, !llvm.loop !314

1199:                                             ; preds = %1192, %1188, %1190, %1108, %535
  tail call void @_ZdlPv(i8* nonnull %237) #9
  tail call void @_ZdlPv(i8* nonnull %218) #9
  br i1 %254, label %1200, label %1206

1200:                                             ; preds = %1199
  %1201 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %1202 = load i32*, i32** %1201, align 8
  %1203 = icmp eq i32* %1202, null
  br i1 %1203, label %1206, label %1204

1204:                                             ; preds = %1200
  %1205 = bitcast i32* %1202 to i8*
  tail call void @_ZdaPv(i8* %1205) #9
  br label %1206

1206:                                             ; preds = %1199, %1200, %1204
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #8
  br i1 %297, label %1207, label %1213

1207:                                             ; preds = %1206
  %1208 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %1209 = load i32*, i32** %1208, align 8
  %1210 = icmp eq i32* %1209, null
  br i1 %1210, label %1213, label %1211

1211:                                             ; preds = %1207
  %1212 = bitcast i32* %1209 to i8*
  tail call void @_ZdaPv(i8* %1212) #9
  br label %1213

1213:                                             ; preds = %1206, %1207, %1211
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops7PadImplIllEEvRKNS_9PadParamsERKNS_12RuntimeShapeEPKT_PKT0_S7_PS8_(%"struct.tflite::PadParams"* dereferenceable(44), %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*) local_unnamed_addr #6 comdat {
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !315
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 8, !noalias !315
  %13 = icmp sgt i32 %12, 4
  br i1 %13, label %14, label %15

14:                                               ; preds = %6
  tail call void @abort() #10, !noalias !315
  unreachable

15:                                               ; preds = %6
  store i32 4, i32* %10, align 8, !alias.scope !315
  %16 = sub i32 4, %12
  %17 = icmp sgt i32 %16, 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %17, label %19, label %99

19:                                               ; preds = %15
  %20 = bitcast %union.anon* %18 to [5 x i32]*
  %21 = zext i32 %16 to i64
  %22 = icmp ult i32 %16, 8
  br i1 %22, label %92, label %23

23:                                               ; preds = %19
  %24 = and i64 %21, 4294967288
  %25 = add nsw i64 %24, -8
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, 1
  %28 = and i64 %27, 7
  %29 = icmp ult i64 %25, 56
  br i1 %29, label %77, label %30

30:                                               ; preds = %23
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i64 [ 0, %30 ], [ %74, %32 ]
  %34 = phi i64 [ %31, %30 ], [ %75, %32 ]
  %35 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %33
  %36 = bitcast i32* %35 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %36, align 8, !alias.scope !315
  %37 = getelementptr inbounds i32, i32* %35, i64 4
  %38 = bitcast i32* %37 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %38, align 8, !alias.scope !315
  %39 = or i64 %33, 8
  %40 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %39
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !315
  %42 = getelementptr inbounds i32, i32* %40, i64 4
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %43, align 8, !alias.scope !315
  %44 = or i64 %33, 16
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %44
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !315
  %47 = getelementptr inbounds i32, i32* %45, i64 4
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %48, align 8, !alias.scope !315
  %49 = or i64 %33, 24
  %50 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %49
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !315
  %52 = getelementptr inbounds i32, i32* %50, i64 4
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %53, align 8, !alias.scope !315
  %54 = or i64 %33, 32
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %54
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !315
  %57 = getelementptr inbounds i32, i32* %55, i64 4
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %58, align 8, !alias.scope !315
  %59 = or i64 %33, 40
  %60 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !315
  %62 = getelementptr inbounds i32, i32* %60, i64 4
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %63, align 8, !alias.scope !315
  %64 = or i64 %33, 48
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %64
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !315
  %67 = getelementptr inbounds i32, i32* %65, i64 4
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %68, align 8, !alias.scope !315
  %69 = or i64 %33, 56
  %70 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %69
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !315
  %72 = getelementptr inbounds i32, i32* %70, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %73, align 8, !alias.scope !315
  %74 = add i64 %33, 64
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %32, !llvm.loop !318

77:                                               ; preds = %32, %23
  %78 = phi i64 [ 0, %23 ], [ %74, %32 ]
  %79 = icmp eq i64 %28, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %77, %80
  %81 = phi i64 [ %87, %80 ], [ %78, %77 ]
  %82 = phi i64 [ %88, %80 ], [ %28, %77 ]
  %83 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %81
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %84, align 8, !alias.scope !315
  %85 = getelementptr inbounds i32, i32* %83, i64 4
  %86 = bitcast i32* %85 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %86, align 8, !alias.scope !315
  %87 = add i64 %81, 8
  %88 = add i64 %82, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !319

90:                                               ; preds = %80, %77
  %91 = icmp eq i64 %24, %21
  br i1 %91, label %99, label %92

92:                                               ; preds = %90, %19
  %93 = phi i64 [ 0, %19 ], [ %24, %90 ]
  br label %94

94:                                               ; preds = %92, %94
  %95 = phi i64 [ %97, %94 ], [ %93, %92 ]
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %20, i64 0, i64 %95
  store i32 1, i32* %96, align 4, !alias.scope !315
  %97 = add nuw nsw i64 %95, 1
  %98 = icmp eq i64 %97, %21
  br i1 %98, label %99, label %94, !llvm.loop !320

99:                                               ; preds = %94, %90, %15
  %100 = getelementptr inbounds %union.anon, %union.anon* %18, i64 0, i32 0
  %101 = bitcast %union.anon* %18 to i32*
  %102 = sext i32 %16 to i64
  %103 = getelementptr inbounds i32, i32* %101, i64 %102
  %104 = bitcast i32* %103 to i8*
  %105 = icmp sgt i32 %12, 5
  %106 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %107 = getelementptr inbounds %union.anon, %union.anon* %106, i64 0, i32 0
  %108 = load i32*, i32** %107, align 8, !noalias !315
  %109 = bitcast %union.anon* %106 to i32*
  %110 = select i1 %105, i32* %108, i32* %109
  %111 = bitcast i32* %110 to i8*
  %112 = sext i32 %12 to i64
  %113 = shl nsw i64 %112, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %111, i64 %113, i1 false) #8
  %114 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %114) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 32, i1 false)
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %115, align 8, !alias.scope !321
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %117 = load i32, i32* %116, align 8, !noalias !321
  %118 = icmp sgt i32 %117, 4
  br i1 %118, label %119, label %120

119:                                              ; preds = %99
  tail call void @abort() #10, !noalias !321
  unreachable

120:                                              ; preds = %99
  store i32 4, i32* %115, align 8, !alias.scope !321
  %121 = sub i32 4, %117
  %122 = icmp sgt i32 %121, 0
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  br i1 %122, label %124, label %204

124:                                              ; preds = %120
  %125 = bitcast %union.anon* %123 to [5 x i32]*
  %126 = zext i32 %121 to i64
  %127 = icmp ult i32 %121, 8
  br i1 %127, label %197, label %128

128:                                              ; preds = %124
  %129 = and i64 %126, 4294967288
  %130 = add nsw i64 %129, -8
  %131 = lshr exact i64 %130, 3
  %132 = add nuw nsw i64 %131, 1
  %133 = and i64 %132, 7
  %134 = icmp ult i64 %130, 56
  br i1 %134, label %182, label %135

135:                                              ; preds = %128
  %136 = sub nsw i64 %132, %133
  br label %137

137:                                              ; preds = %137, %135
  %138 = phi i64 [ 0, %135 ], [ %179, %137 ]
  %139 = phi i64 [ %136, %135 ], [ %180, %137 ]
  %140 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %138
  %141 = bitcast i32* %140 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %141, align 8, !alias.scope !321
  %142 = getelementptr inbounds i32, i32* %140, i64 4
  %143 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %143, align 8, !alias.scope !321
  %144 = or i64 %138, 8
  %145 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %144
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %146, align 8, !alias.scope !321
  %147 = getelementptr inbounds i32, i32* %145, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %148, align 8, !alias.scope !321
  %149 = or i64 %138, 16
  %150 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %149
  %151 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %151, align 8, !alias.scope !321
  %152 = getelementptr inbounds i32, i32* %150, i64 4
  %153 = bitcast i32* %152 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %153, align 8, !alias.scope !321
  %154 = or i64 %138, 24
  %155 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %154
  %156 = bitcast i32* %155 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %156, align 8, !alias.scope !321
  %157 = getelementptr inbounds i32, i32* %155, i64 4
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %158, align 8, !alias.scope !321
  %159 = or i64 %138, 32
  %160 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %159
  %161 = bitcast i32* %160 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %161, align 8, !alias.scope !321
  %162 = getelementptr inbounds i32, i32* %160, i64 4
  %163 = bitcast i32* %162 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %163, align 8, !alias.scope !321
  %164 = or i64 %138, 40
  %165 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %164
  %166 = bitcast i32* %165 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %166, align 8, !alias.scope !321
  %167 = getelementptr inbounds i32, i32* %165, i64 4
  %168 = bitcast i32* %167 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %168, align 8, !alias.scope !321
  %169 = or i64 %138, 48
  %170 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %169
  %171 = bitcast i32* %170 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %171, align 8, !alias.scope !321
  %172 = getelementptr inbounds i32, i32* %170, i64 4
  %173 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %173, align 8, !alias.scope !321
  %174 = or i64 %138, 56
  %175 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %174
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %176, align 8, !alias.scope !321
  %177 = getelementptr inbounds i32, i32* %175, i64 4
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %178, align 8, !alias.scope !321
  %179 = add i64 %138, 64
  %180 = add i64 %139, -8
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %137, !llvm.loop !324

182:                                              ; preds = %137, %128
  %183 = phi i64 [ 0, %128 ], [ %179, %137 ]
  %184 = icmp eq i64 %133, 0
  br i1 %184, label %195, label %185

185:                                              ; preds = %182, %185
  %186 = phi i64 [ %192, %185 ], [ %183, %182 ]
  %187 = phi i64 [ %193, %185 ], [ %133, %182 ]
  %188 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %186
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !321
  %190 = getelementptr inbounds i32, i32* %188, i64 4
  %191 = bitcast i32* %190 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %191, align 8, !alias.scope !321
  %192 = add i64 %186, 8
  %193 = add i64 %187, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %185, !llvm.loop !325

195:                                              ; preds = %185, %182
  %196 = icmp eq i64 %129, %126
  br i1 %196, label %204, label %197

197:                                              ; preds = %195, %124
  %198 = phi i64 [ 0, %124 ], [ %129, %195 ]
  br label %199

199:                                              ; preds = %197, %199
  %200 = phi i64 [ %202, %199 ], [ %198, %197 ]
  %201 = getelementptr inbounds [5 x i32], [5 x i32]* %125, i64 0, i64 %200
  store i32 1, i32* %201, align 4, !alias.scope !321
  %202 = add nuw nsw i64 %200, 1
  %203 = icmp eq i64 %202, %126
  br i1 %203, label %204, label %199, !llvm.loop !326

204:                                              ; preds = %199, %195, %120
  %205 = bitcast %union.anon* %123 to i32*
  %206 = sext i32 %121 to i64
  %207 = getelementptr inbounds i32, i32* %205, i64 %206
  %208 = bitcast i32* %207 to i8*
  %209 = icmp sgt i32 %117, 5
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %211 = getelementptr inbounds %union.anon, %union.anon* %210, i64 0, i32 0
  %212 = load i32*, i32** %211, align 8, !noalias !321
  %213 = bitcast %union.anon* %210 to i32*
  %214 = select i1 %209, i32* %212, i32* %213
  %215 = bitcast i32* %214 to i8*
  %216 = sext i32 %117 to i64
  %217 = shl nsw i64 %216, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %208, i8* align 4 %215, i64 %217, i1 false) #8
  %218 = tail call i8* @_Znwm(i64 16) #9
  %219 = bitcast i8* %218 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %218, i8 0, i64 16, i1 false)
  %220 = getelementptr inbounds %union.anon, %union.anon* %123, i64 0, i32 0
  %221 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 2
  %222 = getelementptr inbounds %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 0
  %223 = load i8, i8* %222, align 4
  %224 = sext i8 %223 to i32
  %225 = icmp sgt i8 %223, 0
  br i1 %225, label %226, label %236

226:                                              ; preds = %204
  %227 = zext i32 %224 to i64
  %228 = sub nsw i32 0, %224
  %229 = sext i32 %228 to i64
  %230 = shl nsw i64 %229, 2
  %231 = add nsw i64 %230, 16
  %232 = getelementptr i8, i8* %218, i64 %231
  %233 = getelementptr %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 1, i64 0
  %234 = bitcast i32* %233 to i8*
  %235 = shl nuw nsw i64 %227, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %232, i8* align 4 %234, i64 %235, i1 false)
  br label %236

236:                                              ; preds = %226, %204
  %237 = tail call i8* @_Znwm(i64 16) #9
  %238 = bitcast i8* %237 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %237, i8 0, i64 16, i1 false)
  %239 = load i8, i8* %221, align 4
  %240 = sext i8 %239 to i32
  %241 = icmp sgt i8 %239, 0
  br i1 %241, label %242, label %252

242:                                              ; preds = %236
  %243 = zext i32 %240 to i64
  %244 = sub nsw i32 0, %240
  %245 = sext i32 %244 to i64
  %246 = shl nsw i64 %245, 2
  %247 = add nsw i64 %246, 16
  %248 = getelementptr i8, i8* %237, i64 %247
  %249 = getelementptr %"struct.tflite::PadParams", %"struct.tflite::PadParams"* %0, i64 0, i32 3, i64 0
  %250 = bitcast i32* %249 to i8*
  %251 = shl nuw nsw i64 %243, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %248, i8* align 4 %250, i64 %251, i1 false)
  br label %252

252:                                              ; preds = %242, %236
  %253 = load i32, i32* %115, align 8
  %254 = icmp sgt i32 %253, 5
  br i1 %254, label %255, label %260

255:                                              ; preds = %252
  %256 = load i32*, i32** %220, align 8
  %257 = getelementptr inbounds i32, i32* %256, i64 1
  %258 = getelementptr inbounds i32, i32* %256, i64 2
  %259 = getelementptr inbounds i32, i32* %256, i64 3
  br label %267

260:                                              ; preds = %252
  %261 = bitcast %union.anon* %123 to [5 x i32]*
  %262 = getelementptr inbounds [5 x i32], [5 x i32]* %261, i64 0, i64 1
  %263 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %264 = bitcast [16 x i8]* %263 to i32*
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %266 = bitcast i8* %265 to i32*
  br label %267

267:                                              ; preds = %255, %260
  %268 = phi i32* [ %258, %255 ], [ %264, %260 ]
  %269 = phi i32* [ %256, %255 ], [ %205, %260 ]
  %270 = phi i32* [ %257, %255 ], [ %262, %260 ]
  %271 = phi i32* [ %259, %255 ], [ %266, %260 ]
  %272 = load i32, i32* %270, align 4
  %273 = load i32, i32* %269, align 4
  %274 = load i32, i32* %268, align 4
  %275 = load i32, i32* %271, align 4
  %276 = load i32, i32* %219, align 4
  %277 = getelementptr inbounds i8, i8* %218, i64 4
  %278 = bitcast i8* %277 to i32*
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr inbounds i8, i8* %218, i64 8
  %281 = bitcast i8* %280 to i32*
  %282 = load i32, i32* %281, align 4
  %283 = getelementptr inbounds i8, i8* %218, i64 12
  %284 = bitcast i8* %283 to i32*
  %285 = load i32, i32* %284, align 4
  %286 = load i32, i32* %238, align 4
  %287 = getelementptr inbounds i8, i8* %237, i64 4
  %288 = bitcast i8* %287 to i32*
  %289 = load i32, i32* %288, align 4
  %290 = getelementptr inbounds i8, i8* %237, i64 8
  %291 = bitcast i8* %290 to i32*
  %292 = load i32, i32* %291, align 4
  %293 = getelementptr inbounds i8, i8* %237, i64 12
  %294 = bitcast i8* %293 to i32*
  %295 = load i32, i32* %294, align 4
  %296 = load i32, i32* %10, align 8
  %297 = icmp sgt i32 %296, 5
  %298 = load i32*, i32** %100, align 8
  %299 = getelementptr inbounds i32, i32* %298, i64 3
  %300 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %301 = bitcast i8* %300 to i32*
  %302 = select i1 %297, i32* %299, i32* %301
  %303 = load i32, i32* %302, align 4
  %304 = load i64, i64* %3, align 8
  %305 = icmp eq i32 %276, 0
  br i1 %305, label %404, label %306

306:                                              ; preds = %267
  %307 = bitcast i64* %5 to i8*
  %308 = mul i32 %275, %274
  %309 = mul i32 %308, %272
  %310 = mul i32 %309, %276
  %311 = sext i32 %310 to i64
  %312 = icmp eq i64 %304, 0
  br i1 %312, label %395, label %313

313:                                              ; preds = %306
  %314 = icmp eq i32 %310, 0
  br i1 %314, label %404, label %315

315:                                              ; preds = %313
  %316 = icmp ult i32 %310, 4
  br i1 %316, label %317, label %320

317:                                              ; preds = %393, %315
  %318 = phi i64 [ 0, %315 ], [ %321, %393 ]
  %319 = phi i8* [ %307, %315 ], [ %323, %393 ]
  br label %397

320:                                              ; preds = %315
  %321 = and i64 %311, -4
  %322 = getelementptr i64, i64* %5, i64 %321
  %323 = bitcast i64* %322 to i8*
  %324 = insertelement <2 x i64> undef, i64 %304, i32 0
  %325 = shufflevector <2 x i64> %324, <2 x i64> undef, <2 x i32> zeroinitializer
  %326 = insertelement <2 x i64> undef, i64 %304, i32 0
  %327 = shufflevector <2 x i64> %326, <2 x i64> undef, <2 x i32> zeroinitializer
  %328 = add nsw i64 %321, -4
  %329 = lshr exact i64 %328, 2
  %330 = add nuw nsw i64 %329, 1
  %331 = and i64 %330, 7
  %332 = icmp ult i64 %328, 28
  br i1 %332, label %380, label %333

333:                                              ; preds = %320
  %334 = sub nsw i64 %330, %331
  br label %335

335:                                              ; preds = %335, %333
  %336 = phi i64 [ 0, %333 ], [ %377, %335 ]
  %337 = phi i64 [ %334, %333 ], [ %378, %335 ]
  %338 = getelementptr i64, i64* %5, i64 %336
  %339 = bitcast i64* %338 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %339, align 1
  %340 = getelementptr i64, i64* %338, i64 2
  %341 = bitcast i64* %340 to <2 x i64>*
  store <2 x i64> %327, <2 x i64>* %341, align 1
  %342 = or i64 %336, 4
  %343 = getelementptr i64, i64* %5, i64 %342
  %344 = bitcast i64* %343 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %344, align 1
  %345 = getelementptr i64, i64* %343, i64 2
  %346 = bitcast i64* %345 to <2 x i64>*
  store <2 x i64> %327, <2 x i64>* %346, align 1
  %347 = or i64 %336, 8
  %348 = getelementptr i64, i64* %5, i64 %347
  %349 = bitcast i64* %348 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %349, align 1
  %350 = getelementptr i64, i64* %348, i64 2
  %351 = bitcast i64* %350 to <2 x i64>*
  store <2 x i64> %327, <2 x i64>* %351, align 1
  %352 = or i64 %336, 12
  %353 = getelementptr i64, i64* %5, i64 %352
  %354 = bitcast i64* %353 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %354, align 1
  %355 = getelementptr i64, i64* %353, i64 2
  %356 = bitcast i64* %355 to <2 x i64>*
  store <2 x i64> %327, <2 x i64>* %356, align 1
  %357 = or i64 %336, 16
  %358 = getelementptr i64, i64* %5, i64 %357
  %359 = bitcast i64* %358 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %359, align 1
  %360 = getelementptr i64, i64* %358, i64 2
  %361 = bitcast i64* %360 to <2 x i64>*
  store <2 x i64> %327, <2 x i64>* %361, align 1
  %362 = or i64 %336, 20
  %363 = getelementptr i64, i64* %5, i64 %362
  %364 = bitcast i64* %363 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %364, align 1
  %365 = getelementptr i64, i64* %363, i64 2
  %366 = bitcast i64* %365 to <2 x i64>*
  store <2 x i64> %327, <2 x i64>* %366, align 1
  %367 = or i64 %336, 24
  %368 = getelementptr i64, i64* %5, i64 %367
  %369 = bitcast i64* %368 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %369, align 1
  %370 = getelementptr i64, i64* %368, i64 2
  %371 = bitcast i64* %370 to <2 x i64>*
  store <2 x i64> %327, <2 x i64>* %371, align 1
  %372 = or i64 %336, 28
  %373 = getelementptr i64, i64* %5, i64 %372
  %374 = bitcast i64* %373 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %374, align 1
  %375 = getelementptr i64, i64* %373, i64 2
  %376 = bitcast i64* %375 to <2 x i64>*
  store <2 x i64> %327, <2 x i64>* %376, align 1
  %377 = add i64 %336, 32
  %378 = add i64 %337, -8
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %380, label %335, !llvm.loop !327

380:                                              ; preds = %335, %320
  %381 = phi i64 [ 0, %320 ], [ %377, %335 ]
  %382 = icmp eq i64 %331, 0
  br i1 %382, label %393, label %383

383:                                              ; preds = %380, %383
  %384 = phi i64 [ %390, %383 ], [ %381, %380 ]
  %385 = phi i64 [ %391, %383 ], [ %331, %380 ]
  %386 = getelementptr i64, i64* %5, i64 %384
  %387 = bitcast i64* %386 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %387, align 1
  %388 = getelementptr i64, i64* %386, i64 2
  %389 = bitcast i64* %388 to <2 x i64>*
  store <2 x i64> %327, <2 x i64>* %389, align 1
  %390 = add i64 %384, 4
  %391 = add i64 %385, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %383, !llvm.loop !328

393:                                              ; preds = %383, %380
  %394 = icmp eq i64 %321, %311
  br i1 %394, label %404, label %317

395:                                              ; preds = %306
  %396 = shl nsw i64 %311, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %307, i8 0, i64 %396, i1 false) #8
  br label %404

397:                                              ; preds = %317, %397
  %398 = phi i64 [ %402, %397 ], [ %318, %317 ]
  %399 = phi i8* [ %401, %397 ], [ %319, %317 ]
  %400 = bitcast i8* %399 to i64*
  store i64 %304, i64* %400, align 1
  %401 = getelementptr inbounds i8, i8* %399, i64 8
  %402 = add nuw i64 %398, 1
  %403 = icmp eq i64 %402, %311
  br i1 %403, label %404, label %397, !llvm.loop !329

404:                                              ; preds = %397, %393, %395, %313, %267
  %405 = sub i32 %273, %286
  %406 = icmp slt i32 %276, %405
  br i1 %406, label %407, label %535

407:                                              ; preds = %404
  %408 = icmp eq i32 %279, 0
  %409 = getelementptr inbounds i32, i32* %205, i64 1
  %410 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %411 = bitcast [16 x i8]* %410 to i32*
  %412 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %413 = bitcast i8* %412 to i32*
  %414 = mul i32 %275, %274
  %415 = mul i32 %414, %279
  %416 = sext i32 %415 to i64
  %417 = icmp eq i64 %304, 0
  %418 = icmp eq i32 %415, 0
  %419 = shl nsw i64 %416, 3
  %420 = sub i32 %272, %289
  %421 = icmp slt i32 %279, %420
  %422 = icmp eq i32 %282, 0
  %423 = mul nsw i32 %282, %275
  %424 = sext i32 %423 to i64
  %425 = icmp eq i32 %423, 0
  %426 = shl nsw i64 %424, 3
  %427 = sub i32 %274, %292
  %428 = icmp slt i32 %282, %427
  %429 = icmp eq i32 %285, 0
  %430 = sext i32 %285 to i64
  %431 = shl nsw i64 %430, 3
  %432 = getelementptr inbounds i32, i32* %101, i64 1
  %433 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %434 = bitcast [16 x i8]* %433 to i32*
  %435 = sext i32 %303 to i64
  %436 = shl nsw i64 %435, 3
  %437 = icmp eq i32 %295, 0
  %438 = sub i32 %275, %295
  %439 = sext i32 %295 to i64
  %440 = shl nsw i64 %439, 3
  %441 = icmp eq i32 %292, 0
  %442 = mul nsw i32 %292, %275
  %443 = sext i32 %442 to i64
  %444 = icmp eq i32 %442, 0
  %445 = shl nsw i64 %443, 3
  %446 = icmp eq i32 %289, 0
  %447 = mul i32 %414, %289
  %448 = sext i32 %447 to i64
  %449 = icmp eq i32 %447, 0
  %450 = shl nsw i64 %448, 3
  %451 = add nsw i64 %416, -4
  %452 = lshr i64 %451, 2
  %453 = add nuw nsw i64 %452, 1
  %454 = add nsw i64 %424, -4
  %455 = lshr i64 %454, 2
  %456 = add nuw nsw i64 %455, 1
  %457 = add nsw i64 %430, -4
  %458 = lshr i64 %457, 2
  %459 = add nuw nsw i64 %458, 1
  %460 = add nsw i64 %439, -4
  %461 = lshr i64 %460, 2
  %462 = add nuw nsw i64 %461, 1
  %463 = add nsw i64 %443, -4
  %464 = lshr i64 %463, 2
  %465 = add nuw nsw i64 %464, 1
  %466 = add nsw i64 %448, -4
  %467 = lshr i64 %466, 2
  %468 = add nuw nsw i64 %467, 1
  %469 = icmp ult i32 %415, 4
  %470 = and i64 %416, -4
  %471 = insertelement <2 x i64> undef, i64 %304, i32 0
  %472 = shufflevector <2 x i64> %471, <2 x i64> undef, <2 x i32> zeroinitializer
  %473 = insertelement <2 x i64> undef, i64 %304, i32 0
  %474 = shufflevector <2 x i64> %473, <2 x i64> undef, <2 x i32> zeroinitializer
  %475 = and i64 %453, 7
  %476 = icmp ult i64 %451, 28
  %477 = sub nsw i64 %453, %475
  %478 = icmp eq i64 %475, 0
  %479 = icmp eq i64 %470, %416
  %480 = icmp ult i32 %423, 4
  %481 = and i64 %424, -4
  %482 = insertelement <2 x i64> undef, i64 %304, i32 0
  %483 = shufflevector <2 x i64> %482, <2 x i64> undef, <2 x i32> zeroinitializer
  %484 = insertelement <2 x i64> undef, i64 %304, i32 0
  %485 = shufflevector <2 x i64> %484, <2 x i64> undef, <2 x i32> zeroinitializer
  %486 = and i64 %456, 7
  %487 = icmp ult i64 %454, 28
  %488 = sub nsw i64 %456, %486
  %489 = icmp eq i64 %486, 0
  %490 = icmp eq i64 %481, %424
  %491 = icmp ult i32 %285, 4
  %492 = and i64 %430, -4
  %493 = insertelement <2 x i64> undef, i64 %304, i32 0
  %494 = shufflevector <2 x i64> %493, <2 x i64> undef, <2 x i32> zeroinitializer
  %495 = insertelement <2 x i64> undef, i64 %304, i32 0
  %496 = shufflevector <2 x i64> %495, <2 x i64> undef, <2 x i32> zeroinitializer
  %497 = and i64 %459, 7
  %498 = icmp ult i64 %457, 28
  %499 = sub nsw i64 %459, %497
  %500 = icmp eq i64 %497, 0
  %501 = icmp eq i64 %492, %430
  %502 = icmp ult i32 %295, 4
  %503 = and i64 %439, -4
  %504 = insertelement <2 x i64> undef, i64 %304, i32 0
  %505 = shufflevector <2 x i64> %504, <2 x i64> undef, <2 x i32> zeroinitializer
  %506 = insertelement <2 x i64> undef, i64 %304, i32 0
  %507 = shufflevector <2 x i64> %506, <2 x i64> undef, <2 x i32> zeroinitializer
  %508 = and i64 %462, 7
  %509 = icmp ult i64 %460, 28
  %510 = sub nsw i64 %462, %508
  %511 = icmp eq i64 %508, 0
  %512 = icmp eq i64 %503, %439
  %513 = icmp ult i32 %442, 4
  %514 = and i64 %443, -4
  %515 = insertelement <2 x i64> undef, i64 %304, i32 0
  %516 = shufflevector <2 x i64> %515, <2 x i64> undef, <2 x i32> zeroinitializer
  %517 = insertelement <2 x i64> undef, i64 %304, i32 0
  %518 = shufflevector <2 x i64> %517, <2 x i64> undef, <2 x i32> zeroinitializer
  %519 = and i64 %465, 7
  %520 = icmp ult i64 %463, 28
  %521 = sub nsw i64 %465, %519
  %522 = icmp eq i64 %519, 0
  %523 = icmp eq i64 %514, %443
  %524 = icmp ult i32 %447, 4
  %525 = and i64 %448, -4
  %526 = insertelement <2 x i64> undef, i64 %304, i32 0
  %527 = shufflevector <2 x i64> %526, <2 x i64> undef, <2 x i32> zeroinitializer
  %528 = insertelement <2 x i64> undef, i64 %304, i32 0
  %529 = shufflevector <2 x i64> %528, <2 x i64> undef, <2 x i32> zeroinitializer
  %530 = and i64 %468, 7
  %531 = icmp ult i64 %466, 28
  %532 = sub nsw i64 %468, %530
  %533 = icmp eq i64 %530, 0
  %534 = icmp eq i64 %525, %448
  br label %537

535:                                              ; preds = %1085, %404
  %536 = icmp eq i32 %286, 0
  br i1 %536, label %1199, label %1088

537:                                              ; preds = %1085, %407
  %538 = phi i32 [ %276, %407 ], [ %1086, %1085 ]
  br i1 %408, label %623, label %539

539:                                              ; preds = %537
  %540 = load i32, i32* %409, align 4
  %541 = mul nsw i32 %540, %538
  %542 = load i32, i32* %411, align 8
  %543 = mul nsw i32 %541, %542
  %544 = load i32, i32* %413, align 4
  %545 = mul nsw i32 %543, %544
  %546 = sext i32 %545 to i64
  %547 = getelementptr inbounds i64, i64* %5, i64 %546
  %548 = bitcast i64* %547 to i8*
  br i1 %417, label %615, label %549

549:                                              ; preds = %539
  br i1 %418, label %623, label %550

550:                                              ; preds = %549
  br i1 %469, label %551, label %554

551:                                              ; preds = %614, %550
  %552 = phi i64 [ 0, %550 ], [ %470, %614 ]
  %553 = phi i8* [ %548, %550 ], [ %556, %614 ]
  br label %616

554:                                              ; preds = %550
  %555 = getelementptr i64, i64* %547, i64 %470
  %556 = bitcast i64* %555 to i8*
  br i1 %476, label %602, label %557

557:                                              ; preds = %554, %557
  %558 = phi i64 [ %599, %557 ], [ 0, %554 ]
  %559 = phi i64 [ %600, %557 ], [ %477, %554 ]
  %560 = getelementptr i64, i64* %547, i64 %558
  %561 = bitcast i64* %560 to <2 x i64>*
  store <2 x i64> %472, <2 x i64>* %561, align 1
  %562 = getelementptr i64, i64* %560, i64 2
  %563 = bitcast i64* %562 to <2 x i64>*
  store <2 x i64> %474, <2 x i64>* %563, align 1
  %564 = or i64 %558, 4
  %565 = getelementptr i64, i64* %547, i64 %564
  %566 = bitcast i64* %565 to <2 x i64>*
  store <2 x i64> %472, <2 x i64>* %566, align 1
  %567 = getelementptr i64, i64* %565, i64 2
  %568 = bitcast i64* %567 to <2 x i64>*
  store <2 x i64> %474, <2 x i64>* %568, align 1
  %569 = or i64 %558, 8
  %570 = getelementptr i64, i64* %547, i64 %569
  %571 = bitcast i64* %570 to <2 x i64>*
  store <2 x i64> %472, <2 x i64>* %571, align 1
  %572 = getelementptr i64, i64* %570, i64 2
  %573 = bitcast i64* %572 to <2 x i64>*
  store <2 x i64> %474, <2 x i64>* %573, align 1
  %574 = or i64 %558, 12
  %575 = getelementptr i64, i64* %547, i64 %574
  %576 = bitcast i64* %575 to <2 x i64>*
  store <2 x i64> %472, <2 x i64>* %576, align 1
  %577 = getelementptr i64, i64* %575, i64 2
  %578 = bitcast i64* %577 to <2 x i64>*
  store <2 x i64> %474, <2 x i64>* %578, align 1
  %579 = or i64 %558, 16
  %580 = getelementptr i64, i64* %547, i64 %579
  %581 = bitcast i64* %580 to <2 x i64>*
  store <2 x i64> %472, <2 x i64>* %581, align 1
  %582 = getelementptr i64, i64* %580, i64 2
  %583 = bitcast i64* %582 to <2 x i64>*
  store <2 x i64> %474, <2 x i64>* %583, align 1
  %584 = or i64 %558, 20
  %585 = getelementptr i64, i64* %547, i64 %584
  %586 = bitcast i64* %585 to <2 x i64>*
  store <2 x i64> %472, <2 x i64>* %586, align 1
  %587 = getelementptr i64, i64* %585, i64 2
  %588 = bitcast i64* %587 to <2 x i64>*
  store <2 x i64> %474, <2 x i64>* %588, align 1
  %589 = or i64 %558, 24
  %590 = getelementptr i64, i64* %547, i64 %589
  %591 = bitcast i64* %590 to <2 x i64>*
  store <2 x i64> %472, <2 x i64>* %591, align 1
  %592 = getelementptr i64, i64* %590, i64 2
  %593 = bitcast i64* %592 to <2 x i64>*
  store <2 x i64> %474, <2 x i64>* %593, align 1
  %594 = or i64 %558, 28
  %595 = getelementptr i64, i64* %547, i64 %594
  %596 = bitcast i64* %595 to <2 x i64>*
  store <2 x i64> %472, <2 x i64>* %596, align 1
  %597 = getelementptr i64, i64* %595, i64 2
  %598 = bitcast i64* %597 to <2 x i64>*
  store <2 x i64> %474, <2 x i64>* %598, align 1
  %599 = add i64 %558, 32
  %600 = add i64 %559, -8
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %602, label %557, !llvm.loop !330

602:                                              ; preds = %557, %554
  %603 = phi i64 [ 0, %554 ], [ %599, %557 ]
  br i1 %478, label %614, label %604

604:                                              ; preds = %602, %604
  %605 = phi i64 [ %611, %604 ], [ %603, %602 ]
  %606 = phi i64 [ %612, %604 ], [ %475, %602 ]
  %607 = getelementptr i64, i64* %547, i64 %605
  %608 = bitcast i64* %607 to <2 x i64>*
  store <2 x i64> %472, <2 x i64>* %608, align 1
  %609 = getelementptr i64, i64* %607, i64 2
  %610 = bitcast i64* %609 to <2 x i64>*
  store <2 x i64> %474, <2 x i64>* %610, align 1
  %611 = add i64 %605, 4
  %612 = add i64 %606, -1
  %613 = icmp eq i64 %612, 0
  br i1 %613, label %614, label %604, !llvm.loop !331

614:                                              ; preds = %604, %602
  br i1 %479, label %623, label %551

615:                                              ; preds = %539
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %548, i8 0, i64 %419, i1 false) #8
  br label %623

616:                                              ; preds = %551, %616
  %617 = phi i64 [ %621, %616 ], [ %552, %551 ]
  %618 = phi i8* [ %620, %616 ], [ %553, %551 ]
  %619 = bitcast i8* %618 to i64*
  store i64 %304, i64* %619, align 1
  %620 = getelementptr inbounds i8, i8* %618, i64 8
  %621 = add nuw i64 %617, 1
  %622 = icmp eq i64 %621, %416
  br i1 %622, label %623, label %616, !llvm.loop !332

623:                                              ; preds = %616, %614, %615, %549, %537
  br i1 %421, label %624, label %626

624:                                              ; preds = %623
  %625 = sub nsw i32 %538, %276
  br label %627

626:                                              ; preds = %997, %623
  br i1 %446, label %1085, label %1000

627:                                              ; preds = %997, %624
  %628 = phi i32 [ %279, %624 ], [ %998, %997 ]
  br i1 %422, label %714, label %629

629:                                              ; preds = %627
  %630 = load i32, i32* %409, align 4
  %631 = mul nsw i32 %630, %538
  %632 = add nsw i32 %631, %628
  %633 = load i32, i32* %411, align 8
  %634 = mul nsw i32 %632, %633
  %635 = load i32, i32* %413, align 4
  %636 = mul nsw i32 %634, %635
  %637 = sext i32 %636 to i64
  %638 = getelementptr inbounds i64, i64* %5, i64 %637
  %639 = bitcast i64* %638 to i8*
  br i1 %417, label %706, label %640

640:                                              ; preds = %629
  br i1 %425, label %714, label %641

641:                                              ; preds = %640
  br i1 %480, label %642, label %645

642:                                              ; preds = %705, %641
  %643 = phi i64 [ 0, %641 ], [ %481, %705 ]
  %644 = phi i8* [ %639, %641 ], [ %647, %705 ]
  br label %707

645:                                              ; preds = %641
  %646 = getelementptr i64, i64* %638, i64 %481
  %647 = bitcast i64* %646 to i8*
  br i1 %487, label %693, label %648

648:                                              ; preds = %645, %648
  %649 = phi i64 [ %690, %648 ], [ 0, %645 ]
  %650 = phi i64 [ %691, %648 ], [ %488, %645 ]
  %651 = getelementptr i64, i64* %638, i64 %649
  %652 = bitcast i64* %651 to <2 x i64>*
  store <2 x i64> %483, <2 x i64>* %652, align 1
  %653 = getelementptr i64, i64* %651, i64 2
  %654 = bitcast i64* %653 to <2 x i64>*
  store <2 x i64> %485, <2 x i64>* %654, align 1
  %655 = or i64 %649, 4
  %656 = getelementptr i64, i64* %638, i64 %655
  %657 = bitcast i64* %656 to <2 x i64>*
  store <2 x i64> %483, <2 x i64>* %657, align 1
  %658 = getelementptr i64, i64* %656, i64 2
  %659 = bitcast i64* %658 to <2 x i64>*
  store <2 x i64> %485, <2 x i64>* %659, align 1
  %660 = or i64 %649, 8
  %661 = getelementptr i64, i64* %638, i64 %660
  %662 = bitcast i64* %661 to <2 x i64>*
  store <2 x i64> %483, <2 x i64>* %662, align 1
  %663 = getelementptr i64, i64* %661, i64 2
  %664 = bitcast i64* %663 to <2 x i64>*
  store <2 x i64> %485, <2 x i64>* %664, align 1
  %665 = or i64 %649, 12
  %666 = getelementptr i64, i64* %638, i64 %665
  %667 = bitcast i64* %666 to <2 x i64>*
  store <2 x i64> %483, <2 x i64>* %667, align 1
  %668 = getelementptr i64, i64* %666, i64 2
  %669 = bitcast i64* %668 to <2 x i64>*
  store <2 x i64> %485, <2 x i64>* %669, align 1
  %670 = or i64 %649, 16
  %671 = getelementptr i64, i64* %638, i64 %670
  %672 = bitcast i64* %671 to <2 x i64>*
  store <2 x i64> %483, <2 x i64>* %672, align 1
  %673 = getelementptr i64, i64* %671, i64 2
  %674 = bitcast i64* %673 to <2 x i64>*
  store <2 x i64> %485, <2 x i64>* %674, align 1
  %675 = or i64 %649, 20
  %676 = getelementptr i64, i64* %638, i64 %675
  %677 = bitcast i64* %676 to <2 x i64>*
  store <2 x i64> %483, <2 x i64>* %677, align 1
  %678 = getelementptr i64, i64* %676, i64 2
  %679 = bitcast i64* %678 to <2 x i64>*
  store <2 x i64> %485, <2 x i64>* %679, align 1
  %680 = or i64 %649, 24
  %681 = getelementptr i64, i64* %638, i64 %680
  %682 = bitcast i64* %681 to <2 x i64>*
  store <2 x i64> %483, <2 x i64>* %682, align 1
  %683 = getelementptr i64, i64* %681, i64 2
  %684 = bitcast i64* %683 to <2 x i64>*
  store <2 x i64> %485, <2 x i64>* %684, align 1
  %685 = or i64 %649, 28
  %686 = getelementptr i64, i64* %638, i64 %685
  %687 = bitcast i64* %686 to <2 x i64>*
  store <2 x i64> %483, <2 x i64>* %687, align 1
  %688 = getelementptr i64, i64* %686, i64 2
  %689 = bitcast i64* %688 to <2 x i64>*
  store <2 x i64> %485, <2 x i64>* %689, align 1
  %690 = add i64 %649, 32
  %691 = add i64 %650, -8
  %692 = icmp eq i64 %691, 0
  br i1 %692, label %693, label %648, !llvm.loop !333

693:                                              ; preds = %648, %645
  %694 = phi i64 [ 0, %645 ], [ %690, %648 ]
  br i1 %489, label %705, label %695

695:                                              ; preds = %693, %695
  %696 = phi i64 [ %702, %695 ], [ %694, %693 ]
  %697 = phi i64 [ %703, %695 ], [ %486, %693 ]
  %698 = getelementptr i64, i64* %638, i64 %696
  %699 = bitcast i64* %698 to <2 x i64>*
  store <2 x i64> %483, <2 x i64>* %699, align 1
  %700 = getelementptr i64, i64* %698, i64 2
  %701 = bitcast i64* %700 to <2 x i64>*
  store <2 x i64> %485, <2 x i64>* %701, align 1
  %702 = add i64 %696, 4
  %703 = add i64 %697, -1
  %704 = icmp eq i64 %703, 0
  br i1 %704, label %705, label %695, !llvm.loop !334

705:                                              ; preds = %695, %693
  br i1 %490, label %714, label %642

706:                                              ; preds = %629
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %639, i8 0, i64 %426, i1 false) #8
  br label %714

707:                                              ; preds = %642, %707
  %708 = phi i64 [ %712, %707 ], [ %643, %642 ]
  %709 = phi i8* [ %711, %707 ], [ %644, %642 ]
  %710 = bitcast i8* %709 to i64*
  store i64 %304, i64* %710, align 1
  %711 = getelementptr inbounds i8, i8* %709, i64 8
  %712 = add nuw i64 %708, 1
  %713 = icmp eq i64 %712, %424
  br i1 %713, label %714, label %707, !llvm.loop !335

714:                                              ; preds = %707, %705, %706, %640, %627
  br i1 %428, label %715, label %717

715:                                              ; preds = %714
  %716 = sub i32 %628, %279
  br label %718

717:                                              ; preds = %908, %714
  br i1 %441, label %997, label %911

718:                                              ; preds = %908, %715
  %719 = phi i32 [ %282, %715 ], [ %909, %908 ]
  br i1 %429, label %805, label %720

720:                                              ; preds = %718
  %721 = load i32, i32* %409, align 4
  %722 = mul nsw i32 %721, %538
  %723 = add nsw i32 %722, %628
  %724 = load i32, i32* %411, align 8
  %725 = mul nsw i32 %723, %724
  %726 = add nsw i32 %725, %719
  %727 = load i32, i32* %413, align 4
  %728 = mul nsw i32 %726, %727
  %729 = sext i32 %728 to i64
  %730 = getelementptr inbounds i64, i64* %5, i64 %729
  %731 = bitcast i64* %730 to i8*
  br i1 %417, label %797, label %732

732:                                              ; preds = %720
  br i1 %491, label %733, label %736

733:                                              ; preds = %796, %732
  %734 = phi i64 [ 0, %732 ], [ %492, %796 ]
  %735 = phi i8* [ %731, %732 ], [ %738, %796 ]
  br label %798

736:                                              ; preds = %732
  %737 = getelementptr i64, i64* %730, i64 %492
  %738 = bitcast i64* %737 to i8*
  br i1 %498, label %784, label %739

739:                                              ; preds = %736, %739
  %740 = phi i64 [ %781, %739 ], [ 0, %736 ]
  %741 = phi i64 [ %782, %739 ], [ %499, %736 ]
  %742 = getelementptr i64, i64* %730, i64 %740
  %743 = bitcast i64* %742 to <2 x i64>*
  store <2 x i64> %494, <2 x i64>* %743, align 1
  %744 = getelementptr i64, i64* %742, i64 2
  %745 = bitcast i64* %744 to <2 x i64>*
  store <2 x i64> %496, <2 x i64>* %745, align 1
  %746 = or i64 %740, 4
  %747 = getelementptr i64, i64* %730, i64 %746
  %748 = bitcast i64* %747 to <2 x i64>*
  store <2 x i64> %494, <2 x i64>* %748, align 1
  %749 = getelementptr i64, i64* %747, i64 2
  %750 = bitcast i64* %749 to <2 x i64>*
  store <2 x i64> %496, <2 x i64>* %750, align 1
  %751 = or i64 %740, 8
  %752 = getelementptr i64, i64* %730, i64 %751
  %753 = bitcast i64* %752 to <2 x i64>*
  store <2 x i64> %494, <2 x i64>* %753, align 1
  %754 = getelementptr i64, i64* %752, i64 2
  %755 = bitcast i64* %754 to <2 x i64>*
  store <2 x i64> %496, <2 x i64>* %755, align 1
  %756 = or i64 %740, 12
  %757 = getelementptr i64, i64* %730, i64 %756
  %758 = bitcast i64* %757 to <2 x i64>*
  store <2 x i64> %494, <2 x i64>* %758, align 1
  %759 = getelementptr i64, i64* %757, i64 2
  %760 = bitcast i64* %759 to <2 x i64>*
  store <2 x i64> %496, <2 x i64>* %760, align 1
  %761 = or i64 %740, 16
  %762 = getelementptr i64, i64* %730, i64 %761
  %763 = bitcast i64* %762 to <2 x i64>*
  store <2 x i64> %494, <2 x i64>* %763, align 1
  %764 = getelementptr i64, i64* %762, i64 2
  %765 = bitcast i64* %764 to <2 x i64>*
  store <2 x i64> %496, <2 x i64>* %765, align 1
  %766 = or i64 %740, 20
  %767 = getelementptr i64, i64* %730, i64 %766
  %768 = bitcast i64* %767 to <2 x i64>*
  store <2 x i64> %494, <2 x i64>* %768, align 1
  %769 = getelementptr i64, i64* %767, i64 2
  %770 = bitcast i64* %769 to <2 x i64>*
  store <2 x i64> %496, <2 x i64>* %770, align 1
  %771 = or i64 %740, 24
  %772 = getelementptr i64, i64* %730, i64 %771
  %773 = bitcast i64* %772 to <2 x i64>*
  store <2 x i64> %494, <2 x i64>* %773, align 1
  %774 = getelementptr i64, i64* %772, i64 2
  %775 = bitcast i64* %774 to <2 x i64>*
  store <2 x i64> %496, <2 x i64>* %775, align 1
  %776 = or i64 %740, 28
  %777 = getelementptr i64, i64* %730, i64 %776
  %778 = bitcast i64* %777 to <2 x i64>*
  store <2 x i64> %494, <2 x i64>* %778, align 1
  %779 = getelementptr i64, i64* %777, i64 2
  %780 = bitcast i64* %779 to <2 x i64>*
  store <2 x i64> %496, <2 x i64>* %780, align 1
  %781 = add i64 %740, 32
  %782 = add i64 %741, -8
  %783 = icmp eq i64 %782, 0
  br i1 %783, label %784, label %739, !llvm.loop !336

784:                                              ; preds = %739, %736
  %785 = phi i64 [ 0, %736 ], [ %781, %739 ]
  br i1 %500, label %796, label %786

786:                                              ; preds = %784, %786
  %787 = phi i64 [ %793, %786 ], [ %785, %784 ]
  %788 = phi i64 [ %794, %786 ], [ %497, %784 ]
  %789 = getelementptr i64, i64* %730, i64 %787
  %790 = bitcast i64* %789 to <2 x i64>*
  store <2 x i64> %494, <2 x i64>* %790, align 1
  %791 = getelementptr i64, i64* %789, i64 2
  %792 = bitcast i64* %791 to <2 x i64>*
  store <2 x i64> %496, <2 x i64>* %792, align 1
  %793 = add i64 %787, 4
  %794 = add i64 %788, -1
  %795 = icmp eq i64 %794, 0
  br i1 %795, label %796, label %786, !llvm.loop !337

796:                                              ; preds = %786, %784
  br i1 %501, label %805, label %733

797:                                              ; preds = %720
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %731, i8 0, i64 %431, i1 false) #8
  br label %805

798:                                              ; preds = %733, %798
  %799 = phi i64 [ %803, %798 ], [ %734, %733 ]
  %800 = phi i8* [ %802, %798 ], [ %735, %733 ]
  %801 = bitcast i8* %800 to i64*
  store i64 %304, i64* %801, align 1
  %802 = getelementptr inbounds i8, i8* %800, i64 8
  %803 = add nuw i64 %799, 1
  %804 = icmp eq i64 %803, %430
  br i1 %804, label %805, label %798, !llvm.loop !338

805:                                              ; preds = %798, %796, %797, %718
  %806 = load i32, i32* %409, align 4
  %807 = mul nsw i32 %806, %538
  %808 = add nsw i32 %807, %628
  %809 = load i32, i32* %411, align 8
  %810 = mul nsw i32 %808, %809
  %811 = add nsw i32 %810, %719
  %812 = load i32, i32* %413, align 4
  %813 = mul nsw i32 %811, %812
  %814 = add nsw i32 %813, %285
  %815 = sext i32 %814 to i64
  %816 = getelementptr inbounds i64, i64* %5, i64 %815
  %817 = sub i32 %719, %282
  %818 = load i32, i32* %432, align 4
  %819 = mul nsw i32 %818, %625
  %820 = add nsw i32 %716, %819
  %821 = load i32, i32* %434, align 8
  %822 = mul nsw i32 %820, %821
  %823 = add nsw i32 %817, %822
  %824 = load i32, i32* %301, align 4
  %825 = mul nsw i32 %823, %824
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds i64, i64* %2, i64 %826
  %828 = bitcast i64* %816 to i8*
  %829 = bitcast i64* %827 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %828, i8* align 8 %829, i64 %436, i1 false)
  br i1 %437, label %908, label %830

830:                                              ; preds = %805
  %831 = add nsw i32 %438, %813
  %832 = sext i32 %831 to i64
  %833 = getelementptr inbounds i64, i64* %5, i64 %832
  %834 = bitcast i64* %833 to i8*
  br i1 %417, label %900, label %835

835:                                              ; preds = %830
  br i1 %502, label %836, label %839

836:                                              ; preds = %899, %835
  %837 = phi i64 [ 0, %835 ], [ %503, %899 ]
  %838 = phi i8* [ %834, %835 ], [ %841, %899 ]
  br label %901

839:                                              ; preds = %835
  %840 = getelementptr i64, i64* %833, i64 %503
  %841 = bitcast i64* %840 to i8*
  br i1 %509, label %887, label %842

842:                                              ; preds = %839, %842
  %843 = phi i64 [ %884, %842 ], [ 0, %839 ]
  %844 = phi i64 [ %885, %842 ], [ %510, %839 ]
  %845 = getelementptr i64, i64* %833, i64 %843
  %846 = bitcast i64* %845 to <2 x i64>*
  store <2 x i64> %505, <2 x i64>* %846, align 1
  %847 = getelementptr i64, i64* %845, i64 2
  %848 = bitcast i64* %847 to <2 x i64>*
  store <2 x i64> %507, <2 x i64>* %848, align 1
  %849 = or i64 %843, 4
  %850 = getelementptr i64, i64* %833, i64 %849
  %851 = bitcast i64* %850 to <2 x i64>*
  store <2 x i64> %505, <2 x i64>* %851, align 1
  %852 = getelementptr i64, i64* %850, i64 2
  %853 = bitcast i64* %852 to <2 x i64>*
  store <2 x i64> %507, <2 x i64>* %853, align 1
  %854 = or i64 %843, 8
  %855 = getelementptr i64, i64* %833, i64 %854
  %856 = bitcast i64* %855 to <2 x i64>*
  store <2 x i64> %505, <2 x i64>* %856, align 1
  %857 = getelementptr i64, i64* %855, i64 2
  %858 = bitcast i64* %857 to <2 x i64>*
  store <2 x i64> %507, <2 x i64>* %858, align 1
  %859 = or i64 %843, 12
  %860 = getelementptr i64, i64* %833, i64 %859
  %861 = bitcast i64* %860 to <2 x i64>*
  store <2 x i64> %505, <2 x i64>* %861, align 1
  %862 = getelementptr i64, i64* %860, i64 2
  %863 = bitcast i64* %862 to <2 x i64>*
  store <2 x i64> %507, <2 x i64>* %863, align 1
  %864 = or i64 %843, 16
  %865 = getelementptr i64, i64* %833, i64 %864
  %866 = bitcast i64* %865 to <2 x i64>*
  store <2 x i64> %505, <2 x i64>* %866, align 1
  %867 = getelementptr i64, i64* %865, i64 2
  %868 = bitcast i64* %867 to <2 x i64>*
  store <2 x i64> %507, <2 x i64>* %868, align 1
  %869 = or i64 %843, 20
  %870 = getelementptr i64, i64* %833, i64 %869
  %871 = bitcast i64* %870 to <2 x i64>*
  store <2 x i64> %505, <2 x i64>* %871, align 1
  %872 = getelementptr i64, i64* %870, i64 2
  %873 = bitcast i64* %872 to <2 x i64>*
  store <2 x i64> %507, <2 x i64>* %873, align 1
  %874 = or i64 %843, 24
  %875 = getelementptr i64, i64* %833, i64 %874
  %876 = bitcast i64* %875 to <2 x i64>*
  store <2 x i64> %505, <2 x i64>* %876, align 1
  %877 = getelementptr i64, i64* %875, i64 2
  %878 = bitcast i64* %877 to <2 x i64>*
  store <2 x i64> %507, <2 x i64>* %878, align 1
  %879 = or i64 %843, 28
  %880 = getelementptr i64, i64* %833, i64 %879
  %881 = bitcast i64* %880 to <2 x i64>*
  store <2 x i64> %505, <2 x i64>* %881, align 1
  %882 = getelementptr i64, i64* %880, i64 2
  %883 = bitcast i64* %882 to <2 x i64>*
  store <2 x i64> %507, <2 x i64>* %883, align 1
  %884 = add i64 %843, 32
  %885 = add i64 %844, -8
  %886 = icmp eq i64 %885, 0
  br i1 %886, label %887, label %842, !llvm.loop !339

887:                                              ; preds = %842, %839
  %888 = phi i64 [ 0, %839 ], [ %884, %842 ]
  br i1 %511, label %899, label %889

889:                                              ; preds = %887, %889
  %890 = phi i64 [ %896, %889 ], [ %888, %887 ]
  %891 = phi i64 [ %897, %889 ], [ %508, %887 ]
  %892 = getelementptr i64, i64* %833, i64 %890
  %893 = bitcast i64* %892 to <2 x i64>*
  store <2 x i64> %505, <2 x i64>* %893, align 1
  %894 = getelementptr i64, i64* %892, i64 2
  %895 = bitcast i64* %894 to <2 x i64>*
  store <2 x i64> %507, <2 x i64>* %895, align 1
  %896 = add i64 %890, 4
  %897 = add i64 %891, -1
  %898 = icmp eq i64 %897, 0
  br i1 %898, label %899, label %889, !llvm.loop !340

899:                                              ; preds = %889, %887
  br i1 %512, label %908, label %836

900:                                              ; preds = %830
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %834, i8 0, i64 %440, i1 false) #8
  br label %908

901:                                              ; preds = %836, %901
  %902 = phi i64 [ %906, %901 ], [ %837, %836 ]
  %903 = phi i8* [ %905, %901 ], [ %838, %836 ]
  %904 = bitcast i8* %903 to i64*
  store i64 %304, i64* %904, align 1
  %905 = getelementptr inbounds i8, i8* %903, i64 8
  %906 = add nuw i64 %902, 1
  %907 = icmp eq i64 %906, %439
  br i1 %907, label %908, label %901, !llvm.loop !341

908:                                              ; preds = %901, %899, %900, %805
  %909 = add nsw i32 %719, 1
  %910 = icmp eq i32 %909, %427
  br i1 %910, label %717, label %718

911:                                              ; preds = %717
  %912 = load i32, i32* %409, align 4
  %913 = mul nsw i32 %912, %538
  %914 = add nsw i32 %913, %628
  %915 = load i32, i32* %411, align 8
  %916 = mul nsw i32 %914, %915
  %917 = add nsw i32 %916, %427
  %918 = load i32, i32* %413, align 4
  %919 = mul nsw i32 %917, %918
  %920 = sext i32 %919 to i64
  %921 = getelementptr inbounds i64, i64* %5, i64 %920
  %922 = bitcast i64* %921 to i8*
  br i1 %417, label %989, label %923

923:                                              ; preds = %911
  br i1 %444, label %997, label %924

924:                                              ; preds = %923
  br i1 %513, label %925, label %928

925:                                              ; preds = %988, %924
  %926 = phi i64 [ 0, %924 ], [ %514, %988 ]
  %927 = phi i8* [ %922, %924 ], [ %930, %988 ]
  br label %990

928:                                              ; preds = %924
  %929 = getelementptr i64, i64* %921, i64 %514
  %930 = bitcast i64* %929 to i8*
  br i1 %520, label %976, label %931

931:                                              ; preds = %928, %931
  %932 = phi i64 [ %973, %931 ], [ 0, %928 ]
  %933 = phi i64 [ %974, %931 ], [ %521, %928 ]
  %934 = getelementptr i64, i64* %921, i64 %932
  %935 = bitcast i64* %934 to <2 x i64>*
  store <2 x i64> %516, <2 x i64>* %935, align 1
  %936 = getelementptr i64, i64* %934, i64 2
  %937 = bitcast i64* %936 to <2 x i64>*
  store <2 x i64> %518, <2 x i64>* %937, align 1
  %938 = or i64 %932, 4
  %939 = getelementptr i64, i64* %921, i64 %938
  %940 = bitcast i64* %939 to <2 x i64>*
  store <2 x i64> %516, <2 x i64>* %940, align 1
  %941 = getelementptr i64, i64* %939, i64 2
  %942 = bitcast i64* %941 to <2 x i64>*
  store <2 x i64> %518, <2 x i64>* %942, align 1
  %943 = or i64 %932, 8
  %944 = getelementptr i64, i64* %921, i64 %943
  %945 = bitcast i64* %944 to <2 x i64>*
  store <2 x i64> %516, <2 x i64>* %945, align 1
  %946 = getelementptr i64, i64* %944, i64 2
  %947 = bitcast i64* %946 to <2 x i64>*
  store <2 x i64> %518, <2 x i64>* %947, align 1
  %948 = or i64 %932, 12
  %949 = getelementptr i64, i64* %921, i64 %948
  %950 = bitcast i64* %949 to <2 x i64>*
  store <2 x i64> %516, <2 x i64>* %950, align 1
  %951 = getelementptr i64, i64* %949, i64 2
  %952 = bitcast i64* %951 to <2 x i64>*
  store <2 x i64> %518, <2 x i64>* %952, align 1
  %953 = or i64 %932, 16
  %954 = getelementptr i64, i64* %921, i64 %953
  %955 = bitcast i64* %954 to <2 x i64>*
  store <2 x i64> %516, <2 x i64>* %955, align 1
  %956 = getelementptr i64, i64* %954, i64 2
  %957 = bitcast i64* %956 to <2 x i64>*
  store <2 x i64> %518, <2 x i64>* %957, align 1
  %958 = or i64 %932, 20
  %959 = getelementptr i64, i64* %921, i64 %958
  %960 = bitcast i64* %959 to <2 x i64>*
  store <2 x i64> %516, <2 x i64>* %960, align 1
  %961 = getelementptr i64, i64* %959, i64 2
  %962 = bitcast i64* %961 to <2 x i64>*
  store <2 x i64> %518, <2 x i64>* %962, align 1
  %963 = or i64 %932, 24
  %964 = getelementptr i64, i64* %921, i64 %963
  %965 = bitcast i64* %964 to <2 x i64>*
  store <2 x i64> %516, <2 x i64>* %965, align 1
  %966 = getelementptr i64, i64* %964, i64 2
  %967 = bitcast i64* %966 to <2 x i64>*
  store <2 x i64> %518, <2 x i64>* %967, align 1
  %968 = or i64 %932, 28
  %969 = getelementptr i64, i64* %921, i64 %968
  %970 = bitcast i64* %969 to <2 x i64>*
  store <2 x i64> %516, <2 x i64>* %970, align 1
  %971 = getelementptr i64, i64* %969, i64 2
  %972 = bitcast i64* %971 to <2 x i64>*
  store <2 x i64> %518, <2 x i64>* %972, align 1
  %973 = add i64 %932, 32
  %974 = add i64 %933, -8
  %975 = icmp eq i64 %974, 0
  br i1 %975, label %976, label %931, !llvm.loop !342

976:                                              ; preds = %931, %928
  %977 = phi i64 [ 0, %928 ], [ %973, %931 ]
  br i1 %522, label %988, label %978

978:                                              ; preds = %976, %978
  %979 = phi i64 [ %985, %978 ], [ %977, %976 ]
  %980 = phi i64 [ %986, %978 ], [ %519, %976 ]
  %981 = getelementptr i64, i64* %921, i64 %979
  %982 = bitcast i64* %981 to <2 x i64>*
  store <2 x i64> %516, <2 x i64>* %982, align 1
  %983 = getelementptr i64, i64* %981, i64 2
  %984 = bitcast i64* %983 to <2 x i64>*
  store <2 x i64> %518, <2 x i64>* %984, align 1
  %985 = add i64 %979, 4
  %986 = add i64 %980, -1
  %987 = icmp eq i64 %986, 0
  br i1 %987, label %988, label %978, !llvm.loop !343

988:                                              ; preds = %978, %976
  br i1 %523, label %997, label %925

989:                                              ; preds = %911
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %922, i8 0, i64 %445, i1 false) #8
  br label %997

990:                                              ; preds = %925, %990
  %991 = phi i64 [ %995, %990 ], [ %926, %925 ]
  %992 = phi i8* [ %994, %990 ], [ %927, %925 ]
  %993 = bitcast i8* %992 to i64*
  store i64 %304, i64* %993, align 1
  %994 = getelementptr inbounds i8, i8* %992, i64 8
  %995 = add nuw i64 %991, 1
  %996 = icmp eq i64 %995, %443
  br i1 %996, label %997, label %990, !llvm.loop !344

997:                                              ; preds = %990, %988, %989, %923, %717
  %998 = add nsw i32 %628, 1
  %999 = icmp eq i32 %998, %420
  br i1 %999, label %626, label %627

1000:                                             ; preds = %626
  %1001 = load i32, i32* %409, align 4
  %1002 = mul nsw i32 %1001, %538
  %1003 = add nsw i32 %1002, %420
  %1004 = load i32, i32* %411, align 8
  %1005 = mul nsw i32 %1003, %1004
  %1006 = load i32, i32* %413, align 4
  %1007 = mul nsw i32 %1005, %1006
  %1008 = sext i32 %1007 to i64
  %1009 = getelementptr inbounds i64, i64* %5, i64 %1008
  %1010 = bitcast i64* %1009 to i8*
  br i1 %417, label %1077, label %1011

1011:                                             ; preds = %1000
  br i1 %449, label %1085, label %1012

1012:                                             ; preds = %1011
  br i1 %524, label %1013, label %1016

1013:                                             ; preds = %1076, %1012
  %1014 = phi i64 [ 0, %1012 ], [ %525, %1076 ]
  %1015 = phi i8* [ %1010, %1012 ], [ %1018, %1076 ]
  br label %1078

1016:                                             ; preds = %1012
  %1017 = getelementptr i64, i64* %1009, i64 %525
  %1018 = bitcast i64* %1017 to i8*
  br i1 %531, label %1064, label %1019

1019:                                             ; preds = %1016, %1019
  %1020 = phi i64 [ %1061, %1019 ], [ 0, %1016 ]
  %1021 = phi i64 [ %1062, %1019 ], [ %532, %1016 ]
  %1022 = getelementptr i64, i64* %1009, i64 %1020
  %1023 = bitcast i64* %1022 to <2 x i64>*
  store <2 x i64> %527, <2 x i64>* %1023, align 1
  %1024 = getelementptr i64, i64* %1022, i64 2
  %1025 = bitcast i64* %1024 to <2 x i64>*
  store <2 x i64> %529, <2 x i64>* %1025, align 1
  %1026 = or i64 %1020, 4
  %1027 = getelementptr i64, i64* %1009, i64 %1026
  %1028 = bitcast i64* %1027 to <2 x i64>*
  store <2 x i64> %527, <2 x i64>* %1028, align 1
  %1029 = getelementptr i64, i64* %1027, i64 2
  %1030 = bitcast i64* %1029 to <2 x i64>*
  store <2 x i64> %529, <2 x i64>* %1030, align 1
  %1031 = or i64 %1020, 8
  %1032 = getelementptr i64, i64* %1009, i64 %1031
  %1033 = bitcast i64* %1032 to <2 x i64>*
  store <2 x i64> %527, <2 x i64>* %1033, align 1
  %1034 = getelementptr i64, i64* %1032, i64 2
  %1035 = bitcast i64* %1034 to <2 x i64>*
  store <2 x i64> %529, <2 x i64>* %1035, align 1
  %1036 = or i64 %1020, 12
  %1037 = getelementptr i64, i64* %1009, i64 %1036
  %1038 = bitcast i64* %1037 to <2 x i64>*
  store <2 x i64> %527, <2 x i64>* %1038, align 1
  %1039 = getelementptr i64, i64* %1037, i64 2
  %1040 = bitcast i64* %1039 to <2 x i64>*
  store <2 x i64> %529, <2 x i64>* %1040, align 1
  %1041 = or i64 %1020, 16
  %1042 = getelementptr i64, i64* %1009, i64 %1041
  %1043 = bitcast i64* %1042 to <2 x i64>*
  store <2 x i64> %527, <2 x i64>* %1043, align 1
  %1044 = getelementptr i64, i64* %1042, i64 2
  %1045 = bitcast i64* %1044 to <2 x i64>*
  store <2 x i64> %529, <2 x i64>* %1045, align 1
  %1046 = or i64 %1020, 20
  %1047 = getelementptr i64, i64* %1009, i64 %1046
  %1048 = bitcast i64* %1047 to <2 x i64>*
  store <2 x i64> %527, <2 x i64>* %1048, align 1
  %1049 = getelementptr i64, i64* %1047, i64 2
  %1050 = bitcast i64* %1049 to <2 x i64>*
  store <2 x i64> %529, <2 x i64>* %1050, align 1
  %1051 = or i64 %1020, 24
  %1052 = getelementptr i64, i64* %1009, i64 %1051
  %1053 = bitcast i64* %1052 to <2 x i64>*
  store <2 x i64> %527, <2 x i64>* %1053, align 1
  %1054 = getelementptr i64, i64* %1052, i64 2
  %1055 = bitcast i64* %1054 to <2 x i64>*
  store <2 x i64> %529, <2 x i64>* %1055, align 1
  %1056 = or i64 %1020, 28
  %1057 = getelementptr i64, i64* %1009, i64 %1056
  %1058 = bitcast i64* %1057 to <2 x i64>*
  store <2 x i64> %527, <2 x i64>* %1058, align 1
  %1059 = getelementptr i64, i64* %1057, i64 2
  %1060 = bitcast i64* %1059 to <2 x i64>*
  store <2 x i64> %529, <2 x i64>* %1060, align 1
  %1061 = add i64 %1020, 32
  %1062 = add i64 %1021, -8
  %1063 = icmp eq i64 %1062, 0
  br i1 %1063, label %1064, label %1019, !llvm.loop !345

1064:                                             ; preds = %1019, %1016
  %1065 = phi i64 [ 0, %1016 ], [ %1061, %1019 ]
  br i1 %533, label %1076, label %1066

1066:                                             ; preds = %1064, %1066
  %1067 = phi i64 [ %1073, %1066 ], [ %1065, %1064 ]
  %1068 = phi i64 [ %1074, %1066 ], [ %530, %1064 ]
  %1069 = getelementptr i64, i64* %1009, i64 %1067
  %1070 = bitcast i64* %1069 to <2 x i64>*
  store <2 x i64> %527, <2 x i64>* %1070, align 1
  %1071 = getelementptr i64, i64* %1069, i64 2
  %1072 = bitcast i64* %1071 to <2 x i64>*
  store <2 x i64> %529, <2 x i64>* %1072, align 1
  %1073 = add i64 %1067, 4
  %1074 = add i64 %1068, -1
  %1075 = icmp eq i64 %1074, 0
  br i1 %1075, label %1076, label %1066, !llvm.loop !346

1076:                                             ; preds = %1066, %1064
  br i1 %534, label %1085, label %1013

1077:                                             ; preds = %1000
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %1010, i8 0, i64 %450, i1 false) #8
  br label %1085

1078:                                             ; preds = %1013, %1078
  %1079 = phi i64 [ %1083, %1078 ], [ %1014, %1013 ]
  %1080 = phi i8* [ %1082, %1078 ], [ %1015, %1013 ]
  %1081 = bitcast i8* %1080 to i64*
  store i64 %304, i64* %1081, align 1
  %1082 = getelementptr inbounds i8, i8* %1080, i64 8
  %1083 = add nuw i64 %1079, 1
  %1084 = icmp eq i64 %1083, %448
  br i1 %1084, label %1085, label %1078, !llvm.loop !347

1085:                                             ; preds = %1078, %1076, %1077, %1011, %626
  %1086 = add nsw i32 %538, 1
  %1087 = icmp eq i32 %1086, %405
  br i1 %1087, label %535, label %537

1088:                                             ; preds = %535
  %1089 = getelementptr inbounds i32, i32* %205, i64 1
  %1090 = load i32, i32* %1089, align 4
  %1091 = mul nsw i32 %1090, %405
  %1092 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %1093 = bitcast [16 x i8]* %1092 to i32*
  %1094 = load i32, i32* %1093, align 8
  %1095 = mul nsw i32 %1091, %1094
  %1096 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %1097 = bitcast i8* %1096 to i32*
  %1098 = load i32, i32* %1097, align 4
  %1099 = mul nsw i32 %1095, %1098
  %1100 = sext i32 %1099 to i64
  %1101 = getelementptr inbounds i64, i64* %5, i64 %1100
  %1102 = bitcast i64* %1101 to i8*
  %1103 = mul i32 %275, %274
  %1104 = mul i32 %1103, %272
  %1105 = mul i32 %1104, %286
  %1106 = sext i32 %1105 to i64
  %1107 = icmp eq i64 %304, 0
  br i1 %1107, label %1190, label %1108

1108:                                             ; preds = %1088
  %1109 = icmp eq i32 %1105, 0
  br i1 %1109, label %1199, label %1110

1110:                                             ; preds = %1108
  %1111 = icmp ult i32 %1105, 4
  br i1 %1111, label %1112, label %1115

1112:                                             ; preds = %1188, %1110
  %1113 = phi i64 [ 0, %1110 ], [ %1116, %1188 ]
  %1114 = phi i8* [ %1102, %1110 ], [ %1118, %1188 ]
  br label %1192

1115:                                             ; preds = %1110
  %1116 = and i64 %1106, -4
  %1117 = getelementptr i64, i64* %1101, i64 %1116
  %1118 = bitcast i64* %1117 to i8*
  %1119 = insertelement <2 x i64> undef, i64 %304, i32 0
  %1120 = shufflevector <2 x i64> %1119, <2 x i64> undef, <2 x i32> zeroinitializer
  %1121 = insertelement <2 x i64> undef, i64 %304, i32 0
  %1122 = shufflevector <2 x i64> %1121, <2 x i64> undef, <2 x i32> zeroinitializer
  %1123 = add nsw i64 %1116, -4
  %1124 = lshr exact i64 %1123, 2
  %1125 = add nuw nsw i64 %1124, 1
  %1126 = and i64 %1125, 7
  %1127 = icmp ult i64 %1123, 28
  br i1 %1127, label %1175, label %1128

1128:                                             ; preds = %1115
  %1129 = sub nsw i64 %1125, %1126
  br label %1130

1130:                                             ; preds = %1130, %1128
  %1131 = phi i64 [ 0, %1128 ], [ %1172, %1130 ]
  %1132 = phi i64 [ %1129, %1128 ], [ %1173, %1130 ]
  %1133 = getelementptr i64, i64* %1101, i64 %1131
  %1134 = bitcast i64* %1133 to <2 x i64>*
  store <2 x i64> %1120, <2 x i64>* %1134, align 1
  %1135 = getelementptr i64, i64* %1133, i64 2
  %1136 = bitcast i64* %1135 to <2 x i64>*
  store <2 x i64> %1122, <2 x i64>* %1136, align 1
  %1137 = or i64 %1131, 4
  %1138 = getelementptr i64, i64* %1101, i64 %1137
  %1139 = bitcast i64* %1138 to <2 x i64>*
  store <2 x i64> %1120, <2 x i64>* %1139, align 1
  %1140 = getelementptr i64, i64* %1138, i64 2
  %1141 = bitcast i64* %1140 to <2 x i64>*
  store <2 x i64> %1122, <2 x i64>* %1141, align 1
  %1142 = or i64 %1131, 8
  %1143 = getelementptr i64, i64* %1101, i64 %1142
  %1144 = bitcast i64* %1143 to <2 x i64>*
  store <2 x i64> %1120, <2 x i64>* %1144, align 1
  %1145 = getelementptr i64, i64* %1143, i64 2
  %1146 = bitcast i64* %1145 to <2 x i64>*
  store <2 x i64> %1122, <2 x i64>* %1146, align 1
  %1147 = or i64 %1131, 12
  %1148 = getelementptr i64, i64* %1101, i64 %1147
  %1149 = bitcast i64* %1148 to <2 x i64>*
  store <2 x i64> %1120, <2 x i64>* %1149, align 1
  %1150 = getelementptr i64, i64* %1148, i64 2
  %1151 = bitcast i64* %1150 to <2 x i64>*
  store <2 x i64> %1122, <2 x i64>* %1151, align 1
  %1152 = or i64 %1131, 16
  %1153 = getelementptr i64, i64* %1101, i64 %1152
  %1154 = bitcast i64* %1153 to <2 x i64>*
  store <2 x i64> %1120, <2 x i64>* %1154, align 1
  %1155 = getelementptr i64, i64* %1153, i64 2
  %1156 = bitcast i64* %1155 to <2 x i64>*
  store <2 x i64> %1122, <2 x i64>* %1156, align 1
  %1157 = or i64 %1131, 20
  %1158 = getelementptr i64, i64* %1101, i64 %1157
  %1159 = bitcast i64* %1158 to <2 x i64>*
  store <2 x i64> %1120, <2 x i64>* %1159, align 1
  %1160 = getelementptr i64, i64* %1158, i64 2
  %1161 = bitcast i64* %1160 to <2 x i64>*
  store <2 x i64> %1122, <2 x i64>* %1161, align 1
  %1162 = or i64 %1131, 24
  %1163 = getelementptr i64, i64* %1101, i64 %1162
  %1164 = bitcast i64* %1163 to <2 x i64>*
  store <2 x i64> %1120, <2 x i64>* %1164, align 1
  %1165 = getelementptr i64, i64* %1163, i64 2
  %1166 = bitcast i64* %1165 to <2 x i64>*
  store <2 x i64> %1122, <2 x i64>* %1166, align 1
  %1167 = or i64 %1131, 28
  %1168 = getelementptr i64, i64* %1101, i64 %1167
  %1169 = bitcast i64* %1168 to <2 x i64>*
  store <2 x i64> %1120, <2 x i64>* %1169, align 1
  %1170 = getelementptr i64, i64* %1168, i64 2
  %1171 = bitcast i64* %1170 to <2 x i64>*
  store <2 x i64> %1122, <2 x i64>* %1171, align 1
  %1172 = add i64 %1131, 32
  %1173 = add i64 %1132, -8
  %1174 = icmp eq i64 %1173, 0
  br i1 %1174, label %1175, label %1130, !llvm.loop !348

1175:                                             ; preds = %1130, %1115
  %1176 = phi i64 [ 0, %1115 ], [ %1172, %1130 ]
  %1177 = icmp eq i64 %1126, 0
  br i1 %1177, label %1188, label %1178

1178:                                             ; preds = %1175, %1178
  %1179 = phi i64 [ %1185, %1178 ], [ %1176, %1175 ]
  %1180 = phi i64 [ %1186, %1178 ], [ %1126, %1175 ]
  %1181 = getelementptr i64, i64* %1101, i64 %1179
  %1182 = bitcast i64* %1181 to <2 x i64>*
  store <2 x i64> %1120, <2 x i64>* %1182, align 1
  %1183 = getelementptr i64, i64* %1181, i64 2
  %1184 = bitcast i64* %1183 to <2 x i64>*
  store <2 x i64> %1122, <2 x i64>* %1184, align 1
  %1185 = add i64 %1179, 4
  %1186 = add i64 %1180, -1
  %1187 = icmp eq i64 %1186, 0
  br i1 %1187, label %1188, label %1178, !llvm.loop !349

1188:                                             ; preds = %1178, %1175
  %1189 = icmp eq i64 %1116, %1106
  br i1 %1189, label %1199, label %1112

1190:                                             ; preds = %1088
  %1191 = shl nsw i64 %1106, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %1102, i8 0, i64 %1191, i1 false) #8
  br label %1199

1192:                                             ; preds = %1112, %1192
  %1193 = phi i64 [ %1197, %1192 ], [ %1113, %1112 ]
  %1194 = phi i8* [ %1196, %1192 ], [ %1114, %1112 ]
  %1195 = bitcast i8* %1194 to i64*
  store i64 %304, i64* %1195, align 1
  %1196 = getelementptr inbounds i8, i8* %1194, i64 8
  %1197 = add nuw i64 %1193, 1
  %1198 = icmp eq i64 %1197, %1106
  br i1 %1198, label %1199, label %1192, !llvm.loop !350

1199:                                             ; preds = %1192, %1188, %1190, %1108, %535
  tail call void @_ZdlPv(i8* nonnull %237) #9
  tail call void @_ZdlPv(i8* nonnull %218) #9
  br i1 %254, label %1200, label %1206

1200:                                             ; preds = %1199
  %1201 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %1202 = load i32*, i32** %1201, align 8
  %1203 = icmp eq i32* %1202, null
  br i1 %1203, label %1206, label %1204

1204:                                             ; preds = %1200
  %1205 = bitcast i32* %1202 to i8*
  tail call void @_ZdaPv(i8* %1205) #9
  br label %1206

1206:                                             ; preds = %1199, %1200, %1204
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %114) #8
  %1207 = xor i1 %297, true
  %1208 = icmp eq i32* %298, null
  %1209 = or i1 %1208, %1207
  br i1 %1209, label %1212, label %1210

1210:                                             ; preds = %1206
  %1211 = bitcast i32* %298 to i8*
  tail call void @_ZdaPv(i8* %1211) #9
  br label %1212

1212:                                             ; preds = %1206, %1210
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!4 = distinct !{!4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.isvectorized", i32 1}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = distinct !{!9, !10, !6}
!10 = !{!"llvm.loop.unroll.runtime.disable"}
!11 = distinct !{!11, !8}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !6}
!19 = distinct !{!19, !6}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!22 = distinct !{!22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!25 = distinct !{!25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!28 = distinct !{!28, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!31 = distinct !{!31, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!34 = distinct !{!34, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!37 = distinct !{!37, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!40 = distinct !{!40, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!43 = distinct !{!43, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!46 = distinct !{!46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!49 = distinct !{!49, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!52 = distinct !{!52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!55 = distinct !{!55, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!58 = distinct !{!58, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!61 = distinct !{!61, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!64 = distinct !{!64, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!67 = distinct !{!67, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!68 = distinct !{!68, !8}
!69 = distinct !{!69, !8}
!70 = !{!71}
!71 = distinct !{!71, !72}
!72 = distinct !{!72, !"LVerDomain"}
!73 = !{!74}
!74 = distinct !{!74, !72}
!75 = distinct !{!75, !6}
!76 = distinct !{!76, !6}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!79 = distinct !{!79, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!82 = distinct !{!82, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!85 = distinct !{!85, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!88 = distinct !{!88, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!91 = distinct !{!91, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!94 = distinct !{!94, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!97 = distinct !{!97, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!98 = !{!99}
!99 = distinct !{!99, !100, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!100 = distinct !{!100, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!101 = !{!102}
!102 = distinct !{!102, !103, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!103 = distinct !{!103, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!104 = !{!105}
!105 = distinct !{!105, !106, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!106 = distinct !{!106, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!109 = distinct !{!109, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!110 = !{!111}
!111 = distinct !{!111, !112, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!112 = distinct !{!112, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!113 = !{!114}
!114 = distinct !{!114, !115, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!115 = distinct !{!115, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!116 = !{!117}
!117 = distinct !{!117, !118, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!118 = distinct !{!118, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!121 = distinct !{!121, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!122 = !{!123}
!123 = distinct !{!123, !124, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!124 = distinct !{!124, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!127 = distinct !{!127, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!128 = distinct !{!128, !6}
!129 = distinct !{!129, !8}
!130 = distinct !{!130, !10, !6}
!131 = !{!132}
!132 = distinct !{!132, !133, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!133 = distinct !{!133, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!134 = distinct !{!134, !6}
!135 = distinct !{!135, !8}
!136 = distinct !{!136, !10, !6}
!137 = distinct !{!137, !6}
!138 = distinct !{!138, !6}
!139 = distinct !{!139, !6}
!140 = distinct !{!140, !6}
!141 = !{!142}
!142 = distinct !{!142, !143, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!143 = distinct !{!143, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!144 = distinct !{!144, !6}
!145 = distinct !{!145, !8}
!146 = distinct !{!146, !10, !6}
!147 = !{!148}
!148 = distinct !{!148, !149, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!149 = distinct !{!149, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!150 = distinct !{!150, !6}
!151 = distinct !{!151, !8}
!152 = distinct !{!152, !10, !6}
!153 = distinct !{!153, !6}
!154 = distinct !{!154, !6}
!155 = distinct !{!155, !6}
!156 = distinct !{!156, !6}
!157 = !{!158}
!158 = distinct !{!158, !159, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!159 = distinct !{!159, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!160 = distinct !{!160, !6}
!161 = distinct !{!161, !8}
!162 = distinct !{!162, !10, !6}
!163 = !{!164}
!164 = distinct !{!164, !165, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!165 = distinct !{!165, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!166 = distinct !{!166, !6}
!167 = distinct !{!167, !8}
!168 = distinct !{!168, !10, !6}
!169 = distinct !{!169, !6}
!170 = distinct !{!170, !6}
!171 = distinct !{!171, !6}
!172 = distinct !{!172, !6}
!173 = !{!174}
!174 = distinct !{!174, !175, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!175 = distinct !{!175, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!176 = distinct !{!176, !6}
!177 = distinct !{!177, !8}
!178 = distinct !{!178, !10, !6}
!179 = !{!180}
!180 = distinct !{!180, !181, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!181 = distinct !{!181, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!182 = distinct !{!182, !6}
!183 = distinct !{!183, !8}
!184 = distinct !{!184, !10, !6}
!185 = distinct !{!185, !6}
!186 = distinct !{!186, !6}
!187 = distinct !{!187, !6}
!188 = distinct !{!188, !6}
!189 = !{!190}
!190 = distinct !{!190, !191, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!191 = distinct !{!191, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!192 = distinct !{!192, !6}
!193 = distinct !{!193, !8}
!194 = distinct !{!194, !10, !6}
!195 = !{!196}
!196 = distinct !{!196, !197, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!197 = distinct !{!197, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!198 = distinct !{!198, !6}
!199 = distinct !{!199, !8}
!200 = distinct !{!200, !10, !6}
!201 = distinct !{!201, !6}
!202 = distinct !{!202, !6}
!203 = distinct !{!203, !6}
!204 = distinct !{!204, !6}
!205 = !{!206}
!206 = distinct !{!206, !207, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!207 = distinct !{!207, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!208 = distinct !{!208, !6}
!209 = distinct !{!209, !8}
!210 = distinct !{!210, !10, !6}
!211 = !{!212}
!212 = distinct !{!212, !213, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!213 = distinct !{!213, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!214 = distinct !{!214, !6}
!215 = distinct !{!215, !8}
!216 = distinct !{!216, !10, !6}
!217 = distinct !{!217, !8}
!218 = !{!219}
!219 = distinct !{!219, !220, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!220 = distinct !{!220, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!221 = distinct !{!221, !6}
!222 = distinct !{!222, !8}
!223 = distinct !{!223, !10, !6}
!224 = !{!225}
!225 = distinct !{!225, !226, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!226 = distinct !{!226, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!227 = distinct !{!227, !6}
!228 = distinct !{!228, !8}
!229 = distinct !{!229, !10, !6}
!230 = distinct !{!230, !6}
!231 = distinct !{!231, !8}
!232 = distinct !{!232, !10, !6}
!233 = distinct !{!233, !6}
!234 = distinct !{!234, !8}
!235 = distinct !{!235, !10, !6}
!236 = distinct !{!236, !6}
!237 = distinct !{!237, !8}
!238 = distinct !{!238, !10, !6}
!239 = distinct !{!239, !6}
!240 = distinct !{!240, !8}
!241 = distinct !{!241, !10, !6}
!242 = distinct !{!242, !6}
!243 = distinct !{!243, !8}
!244 = distinct !{!244, !10, !6}
!245 = distinct !{!245, !6}
!246 = distinct !{!246, !8}
!247 = distinct !{!247, !10, !6}
!248 = distinct !{!248, !6}
!249 = distinct !{!249, !8}
!250 = distinct !{!250, !10, !6}
!251 = distinct !{!251, !6}
!252 = distinct !{!252, !8}
!253 = distinct !{!253, !10, !6}
!254 = !{!255}
!255 = distinct !{!255, !256, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!256 = distinct !{!256, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!257 = distinct !{!257, !6}
!258 = distinct !{!258, !8}
!259 = distinct !{!259, !10, !6}
!260 = !{!261}
!261 = distinct !{!261, !262, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!262 = distinct !{!262, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!263 = distinct !{!263, !6}
!264 = distinct !{!264, !8}
!265 = distinct !{!265, !10, !6}
!266 = distinct !{!266, !8}
!267 = !{!268}
!268 = distinct !{!268, !269, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!269 = distinct !{!269, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!270 = distinct !{!270, !6}
!271 = distinct !{!271, !8}
!272 = distinct !{!272, !10, !6}
!273 = !{!274}
!274 = distinct !{!274, !275, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!275 = distinct !{!275, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!276 = distinct !{!276, !6}
!277 = distinct !{!277, !8}
!278 = distinct !{!278, !10, !6}
!279 = !{!280}
!280 = distinct !{!280, !281, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!281 = distinct !{!281, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!282 = distinct !{!282, !6}
!283 = distinct !{!283, !8}
!284 = distinct !{!284, !10, !6}
!285 = !{!286}
!286 = distinct !{!286, !287, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!287 = distinct !{!287, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!288 = distinct !{!288, !6}
!289 = distinct !{!289, !8}
!290 = distinct !{!290, !10, !6}
!291 = distinct !{!291, !6}
!292 = distinct !{!292, !8}
!293 = distinct !{!293, !10, !6}
!294 = distinct !{!294, !6}
!295 = distinct !{!295, !8}
!296 = distinct !{!296, !10, !6}
!297 = distinct !{!297, !6}
!298 = distinct !{!298, !8}
!299 = distinct !{!299, !10, !6}
!300 = distinct !{!300, !6}
!301 = distinct !{!301, !8}
!302 = distinct !{!302, !10, !6}
!303 = distinct !{!303, !6}
!304 = distinct !{!304, !8}
!305 = distinct !{!305, !10, !6}
!306 = distinct !{!306, !6}
!307 = distinct !{!307, !8}
!308 = distinct !{!308, !10, !6}
!309 = distinct !{!309, !6}
!310 = distinct !{!310, !8}
!311 = distinct !{!311, !10, !6}
!312 = distinct !{!312, !6}
!313 = distinct !{!313, !8}
!314 = distinct !{!314, !10, !6}
!315 = !{!316}
!316 = distinct !{!316, !317, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!317 = distinct !{!317, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!318 = distinct !{!318, !6}
!319 = distinct !{!319, !8}
!320 = distinct !{!320, !10, !6}
!321 = !{!322}
!322 = distinct !{!322, !323, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!323 = distinct !{!323, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!324 = distinct !{!324, !6}
!325 = distinct !{!325, !8}
!326 = distinct !{!326, !10, !6}
!327 = distinct !{!327, !6}
!328 = distinct !{!328, !8}
!329 = distinct !{!329, !10, !6}
!330 = distinct !{!330, !6}
!331 = distinct !{!331, !8}
!332 = distinct !{!332, !10, !6}
!333 = distinct !{!333, !6}
!334 = distinct !{!334, !8}
!335 = distinct !{!335, !10, !6}
!336 = distinct !{!336, !6}
!337 = distinct !{!337, !8}
!338 = distinct !{!338, !10, !6}
!339 = distinct !{!339, !6}
!340 = distinct !{!340, !8}
!341 = distinct !{!341, !10, !6}
!342 = distinct !{!342, !6}
!343 = distinct !{!343, !8}
!344 = distinct !{!344, !10, !6}
!345 = distinct !{!345, !6}
!346 = distinct !{!346, !8}
!347 = distinct !{!347, !10, !6}
!348 = distinct !{!348, !6}
!349 = distinct !{!349, !8}
!350 = distinct !{!350, !10, !6}
