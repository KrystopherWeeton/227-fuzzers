; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/subband_erle_estimator.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/subband_erle_estimator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::SubbandErleEstimator" = type { i8, float, %"struct.std::__1::array", i8, %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::vector.16" }
%"struct.std::__1::array" = type { [65 x float] }
%"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra" = type { %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::vector.9" }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { i32*, i32*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i32* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::array"*, %"struct.std::__1::array"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::array"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.std::__1::array.3"*, %"struct.std::__1::array.3"*, %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::array.3" = type { [65 x i8] }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::array.3"* }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"struct.std::__1::array.18"*, %"struct.std::__1::array.18"*, %"class.std::__1::__compressed_pair.19" }
%"struct.std::__1::array.18" = type { [65 x i32] }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::array.18"* }
%"struct.webrtc::EchoCanceller3Config" = type { %"struct.webrtc::EchoCanceller3Config::Buffering", %"struct.webrtc::EchoCanceller3Config::Delay", %"struct.webrtc::EchoCanceller3Config::Filter", %"struct.webrtc::EchoCanceller3Config::Erle", %"struct.webrtc::EchoCanceller3Config::EpStrength", %"struct.webrtc::EchoCanceller3Config::EchoAudibility", %"struct.webrtc::EchoCanceller3Config::RenderLevels", %"struct.webrtc::EchoCanceller3Config::EchoRemovalControl", [6 x i8], %"struct.webrtc::EchoCanceller3Config::EchoModel", %"struct.webrtc::EchoCanceller3Config::ComfortNoise", [4 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor" }
%"struct.webrtc::EchoCanceller3Config::Buffering" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Delay" = type { i64, i64, i64, i64, i64, i64, float, float, float, %"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds", i8, i8, %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing", %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" }
%"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds" = type { i32, i32 }
%"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" = type { i8, i8, float, i8 }
%"struct.webrtc::EchoCanceller3Config::Filter" = type <{ %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", i64, float, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration" = type { i64, float, float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration" = type { i64, float, float }
%"struct.webrtc::EchoCanceller3Config::Erle" = type <{ float, float, float, i8, [3 x i8], i64, i8, i8, [6 x i8] }>
%"struct.webrtc::EchoCanceller3Config::EpStrength" = type <{ float, float, i8, i8, i8, i8 }>
%"struct.webrtc::EchoCanceller3Config::EchoAudibility" = type <{ float, float, float, float, float, float, i8, i8, [2 x i8] }>
%"struct.webrtc::EchoCanceller3Config::RenderLevels" = type { float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::EchoRemovalControl" = type { i8, i8 }
%"struct.webrtc::EchoCanceller3Config::EchoModel" = type <{ i64, float, float, float, float, i64, i64, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::ComfortNoise" = type { float }
%"struct.webrtc::EchoCanceller3Config::Suppressor" = type <{ i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection", i8, [3 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression", float, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning" = type { %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds" = type { float, float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection" = type <{ float, float, float, i32, i32, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection" = type { i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression" = type { float, float, float, float }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.26" = type { i64*, i64, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i64 }
%"struct.std::__1::array.37" = type { [64 x float] }
%"struct.std::__1::array.38" = type { [64 x i8] }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.webrtc::ApmDataDumper"* }
%"class.webrtc::ApmDataDumper" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN6webrtc20SubbandErleEstimator18AccumulatedSpectraC2Em = comdat any

$_ZN6webrtc11field_trial9IsEnabledEPKc = comdat any

@.str.1 = private unnamed_addr constant [41 x i8] c"WebRTC-Aec3MinErleDuringOnsetsKillSwitch\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"Enabled\00", align 1

@_ZN6webrtc20SubbandErleEstimatorC1ERKNS_20EchoCanceller3ConfigEm = hidden unnamed_addr alias void (%"class.webrtc::SubbandErleEstimator"*, %"struct.webrtc::EchoCanceller3Config"*, i64), void (%"class.webrtc::SubbandErleEstimator"*, %"struct.webrtc::EchoCanceller3Config"*, i64)* @_ZN6webrtc20SubbandErleEstimatorC2ERKNS_20EchoCanceller3ConfigEm
@_ZN6webrtc20SubbandErleEstimatorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::SubbandErleEstimator"*), void (%"class.webrtc::SubbandErleEstimator"*)* @_ZN6webrtc20SubbandErleEstimatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20SubbandErleEstimatorC2ERKNS_20EchoCanceller3ConfigEm(%"class.webrtc::SubbandErleEstimator"*, %"struct.webrtc::EchoCanceller3Config"* nocapture readonly dereferenceable(560), i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %1, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %1, i64 0, i32 3, i32 3
  %7 = load i8, i8* %6, align 4, !range !2
  store i8 %7, i8* %4, align 8
  %8 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 1
  %9 = bitcast %"struct.webrtc::EchoCanceller3Config::Erle"* %5 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = bitcast float* %8 to i32*
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %1, i64 0, i32 3, i32 1
  %14 = bitcast float* %13 to <2 x i32>*
  %15 = load <2 x i32>, <2 x i32>* %14, align 4
  %16 = shufflevector <2 x i32> %15, <2 x i32> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %17 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 49
  %18 = bitcast float* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 -1, i64 64, i1 false) #11, !alias.scope !3
  %19 = extractelement <2 x i32> %15, i32 0
  %20 = shufflevector <2 x i32> %15, <2 x i32> undef, <4 x i32> zeroinitializer
  %21 = bitcast %"struct.std::__1::array"* %12 to <4 x i32>*
  store <4 x i32> %20, <4 x i32>* %21, align 4, !alias.scope !3
  %22 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 4
  %23 = bitcast float* %22 to <4 x i32>*
  store <4 x i32> %20, <4 x i32>* %23, align 4, !alias.scope !3
  %24 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 8
  %25 = bitcast float* %24 to <4 x i32>*
  store <4 x i32> %20, <4 x i32>* %25, align 4, !alias.scope !3
  %26 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 12
  %27 = bitcast float* %26 to i32*
  store i32 %19, i32* %27, align 4, !alias.scope !3
  %28 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 13
  %29 = bitcast float* %28 to i32*
  store i32 %19, i32* %29, align 4, !alias.scope !3
  %30 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 14
  %31 = bitcast float* %30 to <4 x i32>*
  store <4 x i32> %20, <4 x i32>* %31, align 4, !alias.scope !3
  %32 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 18
  %33 = bitcast float* %32 to <4 x i32>*
  store <4 x i32> %20, <4 x i32>* %33, align 4, !alias.scope !3
  %34 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 22
  %35 = bitcast float* %34 to <4 x i32>*
  store <4 x i32> %20, <4 x i32>* %35, align 4, !alias.scope !3
  %36 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 26
  %37 = bitcast float* %36 to <4 x i32>*
  store <4 x i32> %20, <4 x i32>* %37, align 4, !alias.scope !3
  %38 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 30
  %39 = bitcast float* %38 to <4 x i32>*
  store <4 x i32> %16, <4 x i32>* %39, align 4, !alias.scope !3
  %40 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 34
  %41 = bitcast float* %40 to i32*
  %42 = extractelement <2 x i32> %15, i32 1
  store i32 %42, i32* %41, align 4, !alias.scope !3
  %43 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 35
  %44 = bitcast float* %43 to i32*
  store i32 %42, i32* %44, align 4, !alias.scope !3
  %45 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 36
  %46 = bitcast float* %45 to i32*
  store i32 %42, i32* %46, align 4, !alias.scope !3
  %47 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 37
  %48 = bitcast float* %47 to i32*
  store i32 %42, i32* %48, align 4, !alias.scope !3
  %49 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 38
  %50 = bitcast float* %49 to i32*
  store i32 %42, i32* %50, align 4, !alias.scope !3
  %51 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 39
  %52 = bitcast float* %51 to i32*
  store i32 %42, i32* %52, align 4, !alias.scope !3
  %53 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 40
  %54 = bitcast float* %53 to i32*
  store i32 %42, i32* %54, align 4, !alias.scope !3
  %55 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 41
  %56 = bitcast float* %55 to i32*
  store i32 %42, i32* %56, align 4, !alias.scope !3
  %57 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 42
  %58 = bitcast float* %57 to i32*
  store i32 %42, i32* %58, align 4, !alias.scope !3
  %59 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 43
  %60 = bitcast float* %59 to i32*
  store i32 %42, i32* %60, align 4, !alias.scope !3
  %61 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 44
  %62 = bitcast float* %61 to i32*
  store i32 %42, i32* %62, align 4, !alias.scope !3
  %63 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 45
  %64 = bitcast float* %63 to i32*
  store i32 %42, i32* %64, align 4, !alias.scope !3
  %65 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 46
  %66 = bitcast float* %65 to i32*
  store i32 %42, i32* %66, align 4, !alias.scope !3
  %67 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 47
  %68 = bitcast float* %67 to i32*
  store i32 %42, i32* %68, align 4, !alias.scope !3
  %69 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 48
  %70 = bitcast float* %69 to i32*
  store i32 %42, i32* %70, align 4, !alias.scope !3
  %71 = bitcast float* %17 to i32*
  store i32 %42, i32* %71, align 4, !alias.scope !3
  %72 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 50
  %73 = bitcast float* %72 to i32*
  store i32 %42, i32* %73, align 4, !alias.scope !3
  %74 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 51
  %75 = bitcast float* %74 to i32*
  store i32 %42, i32* %75, align 4, !alias.scope !3
  %76 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 52
  %77 = bitcast float* %76 to i32*
  store i32 %42, i32* %77, align 4, !alias.scope !3
  %78 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 53
  %79 = bitcast float* %78 to i32*
  store i32 %42, i32* %79, align 4, !alias.scope !3
  %80 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 54
  %81 = bitcast float* %80 to i32*
  store i32 %42, i32* %81, align 4, !alias.scope !3
  %82 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 55
  %83 = bitcast float* %82 to i32*
  store i32 %42, i32* %83, align 4, !alias.scope !3
  %84 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 56
  %85 = bitcast float* %84 to i32*
  store i32 %42, i32* %85, align 4, !alias.scope !3
  %86 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 57
  %87 = bitcast float* %86 to i32*
  store i32 %42, i32* %87, align 4, !alias.scope !3
  %88 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 58
  %89 = bitcast float* %88 to i32*
  store i32 %42, i32* %89, align 4, !alias.scope !3
  %90 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 59
  %91 = bitcast float* %90 to i32*
  store i32 %42, i32* %91, align 4, !alias.scope !3
  %92 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 60
  %93 = bitcast float* %92 to i32*
  store i32 %42, i32* %93, align 4, !alias.scope !3
  %94 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 61
  %95 = bitcast float* %94 to i32*
  store i32 %42, i32* %95, align 4, !alias.scope !3
  %96 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 62
  %97 = bitcast float* %96 to i32*
  store i32 %42, i32* %97, align 4, !alias.scope !3
  %98 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 63
  %99 = bitcast float* %98 to i32*
  store i32 %42, i32* %99, align 4, !alias.scope !3
  %100 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 64
  %101 = bitcast float* %100 to i32*
  store i32 %42, i32* %101, align 4, !alias.scope !3
  %102 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 3
  %103 = tail call zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0)) #11
  %104 = xor i1 %103, true
  %105 = zext i1 %104 to i8
  store i8 %105, i8* %102, align 4
  %106 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4
  tail call void @_ZN6webrtc20SubbandErleEstimator18AccumulatedSpectraC2Em(%"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra"* %106, i64 %2)
  %107 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 5
  %108 = bitcast %"class.std::__1::vector"* %107 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 24, i1 false) #11
  %109 = icmp eq i64 %2, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %3
  %111 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 6
  %112 = bitcast %"class.std::__1::vector"* %111 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 96, i1 false)
  br label %200

113:                                              ; preds = %3
  %114 = icmp ugt i64 %2, 70949015668113660
  br i1 %114, label %115, label %117

115:                                              ; preds = %113
  %116 = bitcast %"class.std::__1::vector"* %107 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %116) #12
  unreachable

117:                                              ; preds = %113
  %118 = mul i64 %2, 260
  %119 = tail call i8* @_Znwm(i64 %118) #13
  %120 = bitcast i8* %119 to %"struct.std::__1::array"*
  %121 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 5, i32 0, i32 1
  %122 = bitcast %"class.std::__1::vector"* %107 to i8**
  store i8* %119, i8** %122, align 8
  %123 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %120, i64 %2
  %124 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array"* %123, %"struct.std::__1::array"** %124, align 8
  %125 = bitcast %"struct.std::__1::array"** %121 to i64*
  %126 = ptrtoint i8* %119 to i64
  %127 = add nsw i64 %2, -1
  %128 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %120, i64 %127, i32 0, i64 0
  %129 = ptrtoint float* %128 to i64
  %130 = sub i64 %129, %126
  %131 = urem i64 %130, 260
  %132 = add i64 %130, 260
  %133 = sub i64 %132, %131
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %119, i8 0, i64 %133, i1 false) #11
  %134 = ptrtoint %"struct.std::__1::array"* %123 to i64
  store i64 %134, i64* %125, align 8
  %135 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 6
  %136 = tail call i8* @_Znwm(i64 %118) #13
  %137 = bitcast i8* %136 to %"struct.std::__1::array"*
  %138 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 6, i32 0, i32 1
  %139 = bitcast %"class.std::__1::vector"* %135 to i8**
  store i8* %136, i8** %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %137, i64 %2
  %141 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array"* %140, %"struct.std::__1::array"** %141, align 8
  %142 = bitcast %"struct.std::__1::array"** %138 to i64*
  %143 = ptrtoint i8* %136 to i64
  %144 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %137, i64 %127, i32 0, i64 0
  %145 = ptrtoint float* %144 to i64
  %146 = sub i64 %145, %143
  %147 = urem i64 %146, 260
  %148 = add i64 %146, 260
  %149 = sub i64 %148, %147
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %136, i8 0, i64 %149, i1 false) #11
  %150 = ptrtoint %"struct.std::__1::array"* %140 to i64
  store i64 %150, i64* %142, align 8
  %151 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 7
  %152 = tail call i8* @_Znwm(i64 %118) #13
  %153 = bitcast i8* %152 to %"struct.std::__1::array"*
  %154 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 7, i32 0, i32 1
  %155 = bitcast %"class.std::__1::vector"* %151 to i8**
  store i8* %152, i8** %155, align 8
  %156 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %153, i64 %2
  %157 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array"* %156, %"struct.std::__1::array"** %157, align 8
  %158 = bitcast %"struct.std::__1::array"** %154 to i64*
  %159 = ptrtoint i8* %152 to i64
  %160 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %153, i64 %127, i32 0, i64 0
  %161 = ptrtoint float* %160 to i64
  %162 = sub i64 %161, %159
  %163 = urem i64 %162, 260
  %164 = add i64 %162, 260
  %165 = sub i64 %164, %163
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %152, i8 0, i64 %165, i1 false) #11
  %166 = ptrtoint %"struct.std::__1::array"* %156 to i64
  store i64 %166, i64* %158, align 8
  %167 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 8
  %168 = mul i64 %2, 65
  %169 = tail call i8* @_Znwm(i64 %168) #13
  %170 = bitcast i8* %169 to %"struct.std::__1::array.3"*
  %171 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 8, i32 0, i32 1
  %172 = bitcast %"class.std::__1::vector.1"* %167 to i8**
  store i8* %169, i8** %172, align 8
  %173 = getelementptr inbounds %"struct.std::__1::array.3", %"struct.std::__1::array.3"* %170, i64 %2
  %174 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array.3"* %173, %"struct.std::__1::array.3"** %174, align 8
  %175 = bitcast %"struct.std::__1::array.3"** %171 to i64*
  %176 = ptrtoint i8* %169 to i64
  %177 = sub i64 0, %176
  %178 = getelementptr %"struct.std::__1::array.3", %"struct.std::__1::array.3"* %170, i64 %127, i32 0, i64 %177
  %179 = ptrtoint i8* %178 to i64
  %180 = urem i64 %179, 65
  %181 = add i64 %179, 65
  %182 = sub i64 %181, %180
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %169, i8 0, i64 %182, i1 false) #11
  %183 = ptrtoint %"struct.std::__1::array.3"* %173 to i64
  store i64 %183, i64* %175, align 8
  %184 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 9
  %185 = tail call i8* @_Znwm(i64 %118) #13
  %186 = bitcast i8* %185 to %"struct.std::__1::array.18"*
  %187 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 9, i32 0, i32 1
  %188 = bitcast %"class.std::__1::vector.16"* %184 to i8**
  store i8* %185, i8** %188, align 8
  %189 = getelementptr inbounds %"struct.std::__1::array.18", %"struct.std::__1::array.18"* %186, i64 %2
  %190 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array.18"* %189, %"struct.std::__1::array.18"** %190, align 8
  %191 = bitcast %"struct.std::__1::array.18"** %187 to i64*
  %192 = ptrtoint i8* %185 to i64
  %193 = getelementptr %"struct.std::__1::array.18", %"struct.std::__1::array.18"* %186, i64 %127, i32 0, i64 0
  %194 = ptrtoint i32* %193 to i64
  %195 = sub i64 %194, %192
  %196 = urem i64 %195, 260
  %197 = add i64 %195, 260
  %198 = sub i64 %197, %196
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %185, i8 0, i64 %198, i1 false) #11
  %199 = ptrtoint %"struct.std::__1::array.18"* %189 to i64
  store i64 %199, i64* %191, align 8
  br label %200

200:                                              ; preds = %110, %117
  tail call void @_ZN6webrtc20SubbandErleEstimator5ResetEv(%"class.webrtc::SubbandErleEstimator"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc20SubbandErleEstimator18AccumulatedSpectraC2Em(%"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #11
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra", %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 72, i1 false)
  br label %79

8:                                                ; preds = %2
  %9 = icmp ugt i64 %1, 70949015668113660
  br i1 %9, label %10, label %12

10:                                               ; preds = %8
  %11 = bitcast %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %11) #12
  unreachable

12:                                               ; preds = %8
  %13 = mul i64 %1, 260
  %14 = tail call i8* @_Znwm(i64 %13) #13
  %15 = bitcast i8* %14 to %"struct.std::__1::array"*
  %16 = getelementptr inbounds %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra", %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra"* %0 to i8**
  store i8* %14, i8** %17, align 8
  %18 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %15, i64 %1
  %19 = getelementptr inbounds %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra", %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array"* %18, %"struct.std::__1::array"** %19, align 8
  %20 = bitcast %"struct.std::__1::array"** %16 to i64*
  %21 = ptrtoint i8* %14 to i64
  %22 = add nsw i64 %1, -1
  %23 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %15, i64 %22, i32 0, i64 0
  %24 = ptrtoint float* %23 to i64
  %25 = sub i64 %24, %21
  %26 = urem i64 %25, 260
  %27 = add i64 %25, 260
  %28 = sub i64 %27, %26
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 0, i64 %28, i1 false) #11
  %29 = ptrtoint %"struct.std::__1::array"* %18 to i64
  store i64 %29, i64* %20, align 8
  %30 = getelementptr inbounds %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra", %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra"* %0, i64 0, i32 1
  %31 = tail call i8* @_Znwm(i64 %13) #13
  %32 = bitcast i8* %31 to %"struct.std::__1::array"*
  %33 = getelementptr inbounds %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra", %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra"* %0, i64 0, i32 1, i32 0, i32 1
  %34 = bitcast %"class.std::__1::vector"* %30 to i8**
  store i8* %31, i8** %34, align 8
  %35 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %32, i64 %1
  %36 = getelementptr inbounds %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra", %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array"* %35, %"struct.std::__1::array"** %36, align 8
  %37 = bitcast %"struct.std::__1::array"** %33 to i64*
  %38 = ptrtoint i8* %31 to i64
  %39 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %32, i64 %22, i32 0, i64 0
  %40 = ptrtoint float* %39 to i64
  %41 = sub i64 %40, %38
  %42 = urem i64 %41, 260
  %43 = add i64 %41, 260
  %44 = sub i64 %43, %42
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %31, i8 0, i64 %44, i1 false) #11
  %45 = ptrtoint %"struct.std::__1::array"* %35 to i64
  store i64 %45, i64* %37, align 8
  %46 = getelementptr inbounds %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra", %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra"* %0, i64 0, i32 2
  %47 = mul i64 %1, 65
  %48 = tail call i8* @_Znwm(i64 %47) #13
  %49 = bitcast i8* %48 to %"struct.std::__1::array.3"*
  %50 = getelementptr inbounds %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra", %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra"* %0, i64 0, i32 2, i32 0, i32 1
  %51 = bitcast %"class.std::__1::vector.1"* %46 to i8**
  store i8* %48, i8** %51, align 8
  %52 = getelementptr inbounds %"struct.std::__1::array.3", %"struct.std::__1::array.3"* %49, i64 %1
  %53 = getelementptr inbounds %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra", %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::array.3"* %52, %"struct.std::__1::array.3"** %53, align 8
  %54 = bitcast %"struct.std::__1::array.3"** %50 to i64*
  %55 = ptrtoint i8* %48 to i64
  %56 = sub i64 0, %55
  %57 = getelementptr %"struct.std::__1::array.3", %"struct.std::__1::array.3"* %49, i64 %22, i32 0, i64 %56
  %58 = ptrtoint i8* %57 to i64
  %59 = urem i64 %58, 65
  %60 = add i64 %58, 65
  %61 = sub i64 %60, %59
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 0, i64 %61, i1 false) #11
  %62 = ptrtoint %"struct.std::__1::array.3"* %52 to i64
  store i64 %62, i64* %54, align 8
  %63 = getelementptr inbounds %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra", %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra"* %0, i64 0, i32 3
  %64 = shl i64 %1, 2
  %65 = tail call i8* @_Znwm(i64 %64) #13
  %66 = bitcast i8* %65 to i32*
  %67 = getelementptr inbounds %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra", %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra"* %0, i64 0, i32 3, i32 0, i32 1
  %68 = bitcast %"class.std::__1::vector.9"* %63 to i8**
  store i8* %65, i8** %68, align 8
  %69 = getelementptr inbounds i32, i32* %66, i64 %1
  %70 = getelementptr inbounds %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra", %"struct.webrtc::SubbandErleEstimator::AccumulatedSpectra"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store i32* %69, i32** %70, align 8
  %71 = bitcast i32** %67 to i64*
  %72 = ptrtoint i8* %65 to i64
  %73 = getelementptr i32, i32* %66, i64 %22
  %74 = ptrtoint i32* %73 to i64
  %75 = sub i64 4, %72
  %76 = add i64 %75, %74
  %77 = and i64 %76, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %65, i8 0, i64 %77, i1 false) #11
  %78 = ptrtoint i32* %69 to i64
  store i64 %78, i64* %71, align 8
  br label %79

79:                                               ; preds = %5, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20SubbandErleEstimator5ResetEv(%"class.webrtc::SubbandErleEstimator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 5, i32 0, i32 1
  %4 = bitcast %"struct.std::__1::array"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 260
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %29, label %11

11:                                               ; preds = %1
  %12 = inttoptr i64 %7 to %"struct.std::__1::array"*
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 1
  %15 = bitcast float* %14 to i32*
  %16 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 6, i32 0, i32 0
  %17 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 7, i32 0, i32 0
  %18 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 8, i32 0, i32 0
  %19 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 9, i32 0, i32 0
  %20 = getelementptr %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 1
  %21 = bitcast float* %20 to i8*
  %22 = getelementptr i8, i8* %21, i64 1
  %23 = getelementptr %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 1
  %24 = bitcast float* %23 to i8*
  %25 = getelementptr i8, i8* %24, i64 1
  %26 = getelementptr %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 1
  %27 = bitcast float* %26 to i8*
  %28 = getelementptr i8, i8* %27, i64 1
  br label %61

29:                                               ; preds = %470, %1
  %30 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 7
  %31 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 7, i32 0, i32 1
  %32 = bitcast %"struct.std::__1::array"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector"* %30 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %33, %35
  br i1 %36, label %60, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %40 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 3, i32 0, i32 0
  %41 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  br label %42

42:                                               ; preds = %42, %37
  %43 = phi i64 [ 0, %37 ], [ %54, %42 ]
  %44 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %38, align 8
  %45 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %44, i64 %43
  %46 = bitcast %"struct.std::__1::array"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 260, i1 false) #11
  %47 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %39, align 8
  %48 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %47, i64 %43
  %49 = bitcast %"struct.std::__1::array"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %49, i8 0, i64 260, i1 false) #11
  %50 = load i32*, i32** %40, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %43
  store i32 0, i32* %51, align 4
  %52 = load %"struct.std::__1::array.3"*, %"struct.std::__1::array.3"** %41, align 8
  %53 = getelementptr inbounds %"struct.std::__1::array.3", %"struct.std::__1::array.3"* %52, i64 %43, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %53, i8 0, i64 65, i1 false) #11
  %54 = add nuw i64 %43, 1
  %55 = load i64, i64* %32, align 8
  %56 = load i64, i64* %34, align 8
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 260
  %59 = icmp ult i64 %54, %58
  br i1 %59, label %42, label %60

60:                                               ; preds = %42, %29
  ret void

61:                                               ; preds = %478, %11
  %62 = phi %"struct.std::__1::array"* [ %12, %11 ], [ %479, %478 ]
  %63 = phi i64 [ 0, %11 ], [ %476, %478 ]
  %64 = add i64 %63, 1
  %65 = add i64 %63, 1
  %66 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %63, i32 0, i64 0
  %67 = add i64 %63, 1
  %68 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %63
  %69 = bitcast %"struct.std::__1::array"* %68 to i8*
  %70 = icmp ugt i8* %28, %69
  %71 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %67, i32 0, i64 0
  %72 = icmp ult float* %14, %71
  %73 = and i1 %70, %72
  br i1 %73, label %156, label %74

74:                                               ; preds = %61
  %75 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %63, i32 0, i64 64
  %76 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %63, i32 0, i64 0
  %77 = load i32, i32* %15, align 4, !alias.scope !6
  %78 = insertelement <4 x i32> undef, i32 %77, i32 0
  %79 = shufflevector <4 x i32> %78, <4 x i32> undef, <4 x i32> zeroinitializer
  %80 = bitcast float* %76 to <4 x i32>*
  store <4 x i32> %79, <4 x i32>* %80, align 4, !alias.scope !9, !noalias !6
  %81 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %63, i32 0, i64 4
  %82 = load i32, i32* %15, align 4, !alias.scope !6
  %83 = insertelement <4 x i32> undef, i32 %82, i32 0
  %84 = shufflevector <4 x i32> %83, <4 x i32> undef, <4 x i32> zeroinitializer
  %85 = bitcast float* %81 to <4 x i32>*
  store <4 x i32> %84, <4 x i32>* %85, align 4, !alias.scope !9, !noalias !6
  %86 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %63, i32 0, i64 8
  %87 = load i32, i32* %15, align 4, !alias.scope !6
  %88 = insertelement <4 x i32> undef, i32 %87, i32 0
  %89 = shufflevector <4 x i32> %88, <4 x i32> undef, <4 x i32> zeroinitializer
  %90 = bitcast float* %86 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %90, align 4, !alias.scope !9, !noalias !6
  %91 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %63, i32 0, i64 12
  %92 = load i32, i32* %15, align 4, !alias.scope !6
  %93 = insertelement <4 x i32> undef, i32 %92, i32 0
  %94 = shufflevector <4 x i32> %93, <4 x i32> undef, <4 x i32> zeroinitializer
  %95 = bitcast float* %91 to <4 x i32>*
  store <4 x i32> %94, <4 x i32>* %95, align 4, !alias.scope !9, !noalias !6
  %96 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %63, i32 0, i64 16
  %97 = load i32, i32* %15, align 4, !alias.scope !6
  %98 = insertelement <4 x i32> undef, i32 %97, i32 0
  %99 = shufflevector <4 x i32> %98, <4 x i32> undef, <4 x i32> zeroinitializer
  %100 = bitcast float* %96 to <4 x i32>*
  store <4 x i32> %99, <4 x i32>* %100, align 4, !alias.scope !9, !noalias !6
  %101 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %63, i32 0, i64 20
  %102 = load i32, i32* %15, align 4, !alias.scope !6
  %103 = insertelement <4 x i32> undef, i32 %102, i32 0
  %104 = shufflevector <4 x i32> %103, <4 x i32> undef, <4 x i32> zeroinitializer
  %105 = bitcast float* %101 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %105, align 4, !alias.scope !9, !noalias !6
  %106 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %63, i32 0, i64 24
  %107 = load i32, i32* %15, align 4, !alias.scope !6
  %108 = insertelement <4 x i32> undef, i32 %107, i32 0
  %109 = shufflevector <4 x i32> %108, <4 x i32> undef, <4 x i32> zeroinitializer
  %110 = bitcast float* %106 to <4 x i32>*
  store <4 x i32> %109, <4 x i32>* %110, align 4, !alias.scope !9, !noalias !6
  %111 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %63, i32 0, i64 28
  %112 = load i32, i32* %15, align 4, !alias.scope !6
  %113 = insertelement <4 x i32> undef, i32 %112, i32 0
  %114 = shufflevector <4 x i32> %113, <4 x i32> undef, <4 x i32> zeroinitializer
  %115 = bitcast float* %111 to <4 x i32>*
  store <4 x i32> %114, <4 x i32>* %115, align 4, !alias.scope !9, !noalias !6
  %116 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %63, i32 0, i64 32
  %117 = load i32, i32* %15, align 4, !alias.scope !6
  %118 = insertelement <4 x i32> undef, i32 %117, i32 0
  %119 = shufflevector <4 x i32> %118, <4 x i32> undef, <4 x i32> zeroinitializer
  %120 = bitcast float* %116 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %120, align 4, !alias.scope !9, !noalias !6
  %121 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %63, i32 0, i64 36
  %122 = load i32, i32* %15, align 4, !alias.scope !6
  %123 = insertelement <4 x i32> undef, i32 %122, i32 0
  %124 = shufflevector <4 x i32> %123, <4 x i32> undef, <4 x i32> zeroinitializer
  %125 = bitcast float* %121 to <4 x i32>*
  store <4 x i32> %124, <4 x i32>* %125, align 4, !alias.scope !9, !noalias !6
  %126 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %63, i32 0, i64 40
  %127 = load i32, i32* %15, align 4, !alias.scope !6
  %128 = insertelement <4 x i32> undef, i32 %127, i32 0
  %129 = shufflevector <4 x i32> %128, <4 x i32> undef, <4 x i32> zeroinitializer
  %130 = bitcast float* %126 to <4 x i32>*
  store <4 x i32> %129, <4 x i32>* %130, align 4, !alias.scope !9, !noalias !6
  %131 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %63, i32 0, i64 44
  %132 = load i32, i32* %15, align 4, !alias.scope !6
  %133 = insertelement <4 x i32> undef, i32 %132, i32 0
  %134 = shufflevector <4 x i32> %133, <4 x i32> undef, <4 x i32> zeroinitializer
  %135 = bitcast float* %131 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %135, align 4, !alias.scope !9, !noalias !6
  %136 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %63, i32 0, i64 48
  %137 = load i32, i32* %15, align 4, !alias.scope !6
  %138 = insertelement <4 x i32> undef, i32 %137, i32 0
  %139 = shufflevector <4 x i32> %138, <4 x i32> undef, <4 x i32> zeroinitializer
  %140 = bitcast float* %136 to <4 x i32>*
  store <4 x i32> %139, <4 x i32>* %140, align 4, !alias.scope !9, !noalias !6
  %141 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %63, i32 0, i64 52
  %142 = load i32, i32* %15, align 4, !alias.scope !6
  %143 = insertelement <4 x i32> undef, i32 %142, i32 0
  %144 = shufflevector <4 x i32> %143, <4 x i32> undef, <4 x i32> zeroinitializer
  %145 = bitcast float* %141 to <4 x i32>*
  store <4 x i32> %144, <4 x i32>* %145, align 4, !alias.scope !9, !noalias !6
  %146 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %63, i32 0, i64 56
  %147 = load i32, i32* %15, align 4, !alias.scope !6
  %148 = insertelement <4 x i32> undef, i32 %147, i32 0
  %149 = shufflevector <4 x i32> %148, <4 x i32> undef, <4 x i32> zeroinitializer
  %150 = bitcast float* %146 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %150, align 4, !alias.scope !9, !noalias !6
  %151 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %62, i64 %63, i32 0, i64 60
  %152 = load i32, i32* %15, align 4, !alias.scope !6
  %153 = insertelement <4 x i32> undef, i32 %152, i32 0
  %154 = shufflevector <4 x i32> %153, <4 x i32> undef, <4 x i32> zeroinitializer
  %155 = bitcast float* %151 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %155, align 4, !alias.scope !9, !noalias !6
  br label %156

156:                                              ; preds = %61, %74
  %157 = phi float* [ %66, %61 ], [ %75, %74 ]
  %158 = phi i64 [ 65, %61 ], [ 1, %74 ]
  br label %159

159:                                              ; preds = %159, %156
  %160 = phi float* [ %165, %159 ], [ %157, %156 ]
  %161 = phi i64 [ %166, %159 ], [ %158, %156 ]
  %162 = phi i64 [ %167, %159 ], [ 1, %156 ]
  %163 = load i32, i32* %15, align 4
  %164 = bitcast float* %160 to i32*
  store i32 %163, i32* %164, align 4
  %165 = getelementptr inbounds float, float* %160, i64 1
  %166 = add nsw i64 %161, -1
  %167 = add i64 %162, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %159, !llvm.loop !11

169:                                              ; preds = %159
  %170 = icmp eq i64 %158, 1
  br i1 %170, label %200, label %171

171:                                              ; preds = %169, %171
  %172 = phi float* [ %197, %171 ], [ %165, %169 ]
  %173 = phi i64 [ %198, %171 ], [ %166, %169 ]
  %174 = load i32, i32* %15, align 4
  %175 = bitcast float* %172 to i32*
  store i32 %174, i32* %175, align 4
  %176 = getelementptr inbounds float, float* %172, i64 1
  %177 = load i32, i32* %15, align 4
  %178 = bitcast float* %176 to i32*
  store i32 %177, i32* %178, align 4
  %179 = getelementptr inbounds float, float* %172, i64 2
  %180 = load i32, i32* %15, align 4
  %181 = bitcast float* %179 to i32*
  store i32 %180, i32* %181, align 4
  %182 = getelementptr inbounds float, float* %172, i64 3
  %183 = load i32, i32* %15, align 4
  %184 = bitcast float* %182 to i32*
  store i32 %183, i32* %184, align 4
  %185 = getelementptr inbounds float, float* %172, i64 4
  %186 = load i32, i32* %15, align 4
  %187 = bitcast float* %185 to i32*
  store i32 %186, i32* %187, align 4
  %188 = getelementptr inbounds float, float* %172, i64 5
  %189 = load i32, i32* %15, align 4
  %190 = bitcast float* %188 to i32*
  store i32 %189, i32* %190, align 4
  %191 = getelementptr inbounds float, float* %172, i64 6
  %192 = load i32, i32* %15, align 4
  %193 = bitcast float* %191 to i32*
  store i32 %192, i32* %193, align 4
  %194 = getelementptr inbounds float, float* %172, i64 7
  %195 = load i32, i32* %15, align 4
  %196 = bitcast float* %194 to i32*
  store i32 %195, i32* %196, align 4
  %197 = getelementptr inbounds float, float* %172, i64 8
  %198 = add nsw i64 %173, -8
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %171, !llvm.loop !13

200:                                              ; preds = %171, %169
  %201 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %16, align 8
  %202 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %63, i32 0, i64 0
  %203 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %63
  %204 = bitcast %"struct.std::__1::array"* %203 to i8*
  %205 = icmp ugt i8* %25, %204
  %206 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %64, i32 0, i64 0
  %207 = icmp ult float* %14, %206
  %208 = and i1 %205, %207
  br i1 %208, label %291, label %209

209:                                              ; preds = %200
  %210 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %63, i32 0, i64 64
  %211 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %63, i32 0, i64 0
  %212 = load i32, i32* %15, align 4, !alias.scope !15
  %213 = insertelement <4 x i32> undef, i32 %212, i32 0
  %214 = shufflevector <4 x i32> %213, <4 x i32> undef, <4 x i32> zeroinitializer
  %215 = bitcast float* %211 to <4 x i32>*
  store <4 x i32> %214, <4 x i32>* %215, align 4, !alias.scope !18, !noalias !15
  %216 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %63, i32 0, i64 4
  %217 = load i32, i32* %15, align 4, !alias.scope !15
  %218 = insertelement <4 x i32> undef, i32 %217, i32 0
  %219 = shufflevector <4 x i32> %218, <4 x i32> undef, <4 x i32> zeroinitializer
  %220 = bitcast float* %216 to <4 x i32>*
  store <4 x i32> %219, <4 x i32>* %220, align 4, !alias.scope !18, !noalias !15
  %221 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %63, i32 0, i64 8
  %222 = load i32, i32* %15, align 4, !alias.scope !15
  %223 = insertelement <4 x i32> undef, i32 %222, i32 0
  %224 = shufflevector <4 x i32> %223, <4 x i32> undef, <4 x i32> zeroinitializer
  %225 = bitcast float* %221 to <4 x i32>*
  store <4 x i32> %224, <4 x i32>* %225, align 4, !alias.scope !18, !noalias !15
  %226 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %63, i32 0, i64 12
  %227 = load i32, i32* %15, align 4, !alias.scope !15
  %228 = insertelement <4 x i32> undef, i32 %227, i32 0
  %229 = shufflevector <4 x i32> %228, <4 x i32> undef, <4 x i32> zeroinitializer
  %230 = bitcast float* %226 to <4 x i32>*
  store <4 x i32> %229, <4 x i32>* %230, align 4, !alias.scope !18, !noalias !15
  %231 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %63, i32 0, i64 16
  %232 = load i32, i32* %15, align 4, !alias.scope !15
  %233 = insertelement <4 x i32> undef, i32 %232, i32 0
  %234 = shufflevector <4 x i32> %233, <4 x i32> undef, <4 x i32> zeroinitializer
  %235 = bitcast float* %231 to <4 x i32>*
  store <4 x i32> %234, <4 x i32>* %235, align 4, !alias.scope !18, !noalias !15
  %236 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %63, i32 0, i64 20
  %237 = load i32, i32* %15, align 4, !alias.scope !15
  %238 = insertelement <4 x i32> undef, i32 %237, i32 0
  %239 = shufflevector <4 x i32> %238, <4 x i32> undef, <4 x i32> zeroinitializer
  %240 = bitcast float* %236 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %240, align 4, !alias.scope !18, !noalias !15
  %241 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %63, i32 0, i64 24
  %242 = load i32, i32* %15, align 4, !alias.scope !15
  %243 = insertelement <4 x i32> undef, i32 %242, i32 0
  %244 = shufflevector <4 x i32> %243, <4 x i32> undef, <4 x i32> zeroinitializer
  %245 = bitcast float* %241 to <4 x i32>*
  store <4 x i32> %244, <4 x i32>* %245, align 4, !alias.scope !18, !noalias !15
  %246 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %63, i32 0, i64 28
  %247 = load i32, i32* %15, align 4, !alias.scope !15
  %248 = insertelement <4 x i32> undef, i32 %247, i32 0
  %249 = shufflevector <4 x i32> %248, <4 x i32> undef, <4 x i32> zeroinitializer
  %250 = bitcast float* %246 to <4 x i32>*
  store <4 x i32> %249, <4 x i32>* %250, align 4, !alias.scope !18, !noalias !15
  %251 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %63, i32 0, i64 32
  %252 = load i32, i32* %15, align 4, !alias.scope !15
  %253 = insertelement <4 x i32> undef, i32 %252, i32 0
  %254 = shufflevector <4 x i32> %253, <4 x i32> undef, <4 x i32> zeroinitializer
  %255 = bitcast float* %251 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %255, align 4, !alias.scope !18, !noalias !15
  %256 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %63, i32 0, i64 36
  %257 = load i32, i32* %15, align 4, !alias.scope !15
  %258 = insertelement <4 x i32> undef, i32 %257, i32 0
  %259 = shufflevector <4 x i32> %258, <4 x i32> undef, <4 x i32> zeroinitializer
  %260 = bitcast float* %256 to <4 x i32>*
  store <4 x i32> %259, <4 x i32>* %260, align 4, !alias.scope !18, !noalias !15
  %261 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %63, i32 0, i64 40
  %262 = load i32, i32* %15, align 4, !alias.scope !15
  %263 = insertelement <4 x i32> undef, i32 %262, i32 0
  %264 = shufflevector <4 x i32> %263, <4 x i32> undef, <4 x i32> zeroinitializer
  %265 = bitcast float* %261 to <4 x i32>*
  store <4 x i32> %264, <4 x i32>* %265, align 4, !alias.scope !18, !noalias !15
  %266 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %63, i32 0, i64 44
  %267 = load i32, i32* %15, align 4, !alias.scope !15
  %268 = insertelement <4 x i32> undef, i32 %267, i32 0
  %269 = shufflevector <4 x i32> %268, <4 x i32> undef, <4 x i32> zeroinitializer
  %270 = bitcast float* %266 to <4 x i32>*
  store <4 x i32> %269, <4 x i32>* %270, align 4, !alias.scope !18, !noalias !15
  %271 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %63, i32 0, i64 48
  %272 = load i32, i32* %15, align 4, !alias.scope !15
  %273 = insertelement <4 x i32> undef, i32 %272, i32 0
  %274 = shufflevector <4 x i32> %273, <4 x i32> undef, <4 x i32> zeroinitializer
  %275 = bitcast float* %271 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %275, align 4, !alias.scope !18, !noalias !15
  %276 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %63, i32 0, i64 52
  %277 = load i32, i32* %15, align 4, !alias.scope !15
  %278 = insertelement <4 x i32> undef, i32 %277, i32 0
  %279 = shufflevector <4 x i32> %278, <4 x i32> undef, <4 x i32> zeroinitializer
  %280 = bitcast float* %276 to <4 x i32>*
  store <4 x i32> %279, <4 x i32>* %280, align 4, !alias.scope !18, !noalias !15
  %281 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %63, i32 0, i64 56
  %282 = load i32, i32* %15, align 4, !alias.scope !15
  %283 = insertelement <4 x i32> undef, i32 %282, i32 0
  %284 = shufflevector <4 x i32> %283, <4 x i32> undef, <4 x i32> zeroinitializer
  %285 = bitcast float* %281 to <4 x i32>*
  store <4 x i32> %284, <4 x i32>* %285, align 4, !alias.scope !18, !noalias !15
  %286 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %201, i64 %63, i32 0, i64 60
  %287 = load i32, i32* %15, align 4, !alias.scope !15
  %288 = insertelement <4 x i32> undef, i32 %287, i32 0
  %289 = shufflevector <4 x i32> %288, <4 x i32> undef, <4 x i32> zeroinitializer
  %290 = bitcast float* %286 to <4 x i32>*
  store <4 x i32> %289, <4 x i32>* %290, align 4, !alias.scope !18, !noalias !15
  br label %291

291:                                              ; preds = %200, %209
  %292 = phi float* [ %202, %200 ], [ %210, %209 ]
  %293 = phi i64 [ 65, %200 ], [ 1, %209 ]
  br label %294

294:                                              ; preds = %294, %291
  %295 = phi float* [ %300, %294 ], [ %292, %291 ]
  %296 = phi i64 [ %301, %294 ], [ %293, %291 ]
  %297 = phi i64 [ %302, %294 ], [ 1, %291 ]
  %298 = load i32, i32* %15, align 4
  %299 = bitcast float* %295 to i32*
  store i32 %298, i32* %299, align 4
  %300 = getelementptr inbounds float, float* %295, i64 1
  %301 = add nsw i64 %296, -1
  %302 = add i64 %297, -1
  %303 = icmp eq i64 %302, 0
  br i1 %303, label %304, label %294, !llvm.loop !20

304:                                              ; preds = %294
  %305 = icmp eq i64 %293, 1
  br i1 %305, label %335, label %306

306:                                              ; preds = %304, %306
  %307 = phi float* [ %332, %306 ], [ %300, %304 ]
  %308 = phi i64 [ %333, %306 ], [ %301, %304 ]
  %309 = load i32, i32* %15, align 4
  %310 = bitcast float* %307 to i32*
  store i32 %309, i32* %310, align 4
  %311 = getelementptr inbounds float, float* %307, i64 1
  %312 = load i32, i32* %15, align 4
  %313 = bitcast float* %311 to i32*
  store i32 %312, i32* %313, align 4
  %314 = getelementptr inbounds float, float* %307, i64 2
  %315 = load i32, i32* %15, align 4
  %316 = bitcast float* %314 to i32*
  store i32 %315, i32* %316, align 4
  %317 = getelementptr inbounds float, float* %307, i64 3
  %318 = load i32, i32* %15, align 4
  %319 = bitcast float* %317 to i32*
  store i32 %318, i32* %319, align 4
  %320 = getelementptr inbounds float, float* %307, i64 4
  %321 = load i32, i32* %15, align 4
  %322 = bitcast float* %320 to i32*
  store i32 %321, i32* %322, align 4
  %323 = getelementptr inbounds float, float* %307, i64 5
  %324 = load i32, i32* %15, align 4
  %325 = bitcast float* %323 to i32*
  store i32 %324, i32* %325, align 4
  %326 = getelementptr inbounds float, float* %307, i64 6
  %327 = load i32, i32* %15, align 4
  %328 = bitcast float* %326 to i32*
  store i32 %327, i32* %328, align 4
  %329 = getelementptr inbounds float, float* %307, i64 7
  %330 = load i32, i32* %15, align 4
  %331 = bitcast float* %329 to i32*
  store i32 %330, i32* %331, align 4
  %332 = getelementptr inbounds float, float* %307, i64 8
  %333 = add nsw i64 %308, -8
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %306, !llvm.loop !21

335:                                              ; preds = %306, %304
  %336 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %17, align 8
  %337 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %63, i32 0, i64 0
  %338 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %63
  %339 = bitcast %"struct.std::__1::array"* %338 to i8*
  %340 = icmp ugt i8* %22, %339
  %341 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %65, i32 0, i64 0
  %342 = icmp ult float* %14, %341
  %343 = and i1 %340, %342
  br i1 %343, label %426, label %344

344:                                              ; preds = %335
  %345 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %63, i32 0, i64 64
  %346 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %63, i32 0, i64 0
  %347 = load i32, i32* %15, align 4, !alias.scope !22
  %348 = insertelement <4 x i32> undef, i32 %347, i32 0
  %349 = shufflevector <4 x i32> %348, <4 x i32> undef, <4 x i32> zeroinitializer
  %350 = bitcast float* %346 to <4 x i32>*
  store <4 x i32> %349, <4 x i32>* %350, align 4, !alias.scope !25, !noalias !22
  %351 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %63, i32 0, i64 4
  %352 = load i32, i32* %15, align 4, !alias.scope !22
  %353 = insertelement <4 x i32> undef, i32 %352, i32 0
  %354 = shufflevector <4 x i32> %353, <4 x i32> undef, <4 x i32> zeroinitializer
  %355 = bitcast float* %351 to <4 x i32>*
  store <4 x i32> %354, <4 x i32>* %355, align 4, !alias.scope !25, !noalias !22
  %356 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %63, i32 0, i64 8
  %357 = load i32, i32* %15, align 4, !alias.scope !22
  %358 = insertelement <4 x i32> undef, i32 %357, i32 0
  %359 = shufflevector <4 x i32> %358, <4 x i32> undef, <4 x i32> zeroinitializer
  %360 = bitcast float* %356 to <4 x i32>*
  store <4 x i32> %359, <4 x i32>* %360, align 4, !alias.scope !25, !noalias !22
  %361 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %63, i32 0, i64 12
  %362 = load i32, i32* %15, align 4, !alias.scope !22
  %363 = insertelement <4 x i32> undef, i32 %362, i32 0
  %364 = shufflevector <4 x i32> %363, <4 x i32> undef, <4 x i32> zeroinitializer
  %365 = bitcast float* %361 to <4 x i32>*
  store <4 x i32> %364, <4 x i32>* %365, align 4, !alias.scope !25, !noalias !22
  %366 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %63, i32 0, i64 16
  %367 = load i32, i32* %15, align 4, !alias.scope !22
  %368 = insertelement <4 x i32> undef, i32 %367, i32 0
  %369 = shufflevector <4 x i32> %368, <4 x i32> undef, <4 x i32> zeroinitializer
  %370 = bitcast float* %366 to <4 x i32>*
  store <4 x i32> %369, <4 x i32>* %370, align 4, !alias.scope !25, !noalias !22
  %371 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %63, i32 0, i64 20
  %372 = load i32, i32* %15, align 4, !alias.scope !22
  %373 = insertelement <4 x i32> undef, i32 %372, i32 0
  %374 = shufflevector <4 x i32> %373, <4 x i32> undef, <4 x i32> zeroinitializer
  %375 = bitcast float* %371 to <4 x i32>*
  store <4 x i32> %374, <4 x i32>* %375, align 4, !alias.scope !25, !noalias !22
  %376 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %63, i32 0, i64 24
  %377 = load i32, i32* %15, align 4, !alias.scope !22
  %378 = insertelement <4 x i32> undef, i32 %377, i32 0
  %379 = shufflevector <4 x i32> %378, <4 x i32> undef, <4 x i32> zeroinitializer
  %380 = bitcast float* %376 to <4 x i32>*
  store <4 x i32> %379, <4 x i32>* %380, align 4, !alias.scope !25, !noalias !22
  %381 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %63, i32 0, i64 28
  %382 = load i32, i32* %15, align 4, !alias.scope !22
  %383 = insertelement <4 x i32> undef, i32 %382, i32 0
  %384 = shufflevector <4 x i32> %383, <4 x i32> undef, <4 x i32> zeroinitializer
  %385 = bitcast float* %381 to <4 x i32>*
  store <4 x i32> %384, <4 x i32>* %385, align 4, !alias.scope !25, !noalias !22
  %386 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %63, i32 0, i64 32
  %387 = load i32, i32* %15, align 4, !alias.scope !22
  %388 = insertelement <4 x i32> undef, i32 %387, i32 0
  %389 = shufflevector <4 x i32> %388, <4 x i32> undef, <4 x i32> zeroinitializer
  %390 = bitcast float* %386 to <4 x i32>*
  store <4 x i32> %389, <4 x i32>* %390, align 4, !alias.scope !25, !noalias !22
  %391 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %63, i32 0, i64 36
  %392 = load i32, i32* %15, align 4, !alias.scope !22
  %393 = insertelement <4 x i32> undef, i32 %392, i32 0
  %394 = shufflevector <4 x i32> %393, <4 x i32> undef, <4 x i32> zeroinitializer
  %395 = bitcast float* %391 to <4 x i32>*
  store <4 x i32> %394, <4 x i32>* %395, align 4, !alias.scope !25, !noalias !22
  %396 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %63, i32 0, i64 40
  %397 = load i32, i32* %15, align 4, !alias.scope !22
  %398 = insertelement <4 x i32> undef, i32 %397, i32 0
  %399 = shufflevector <4 x i32> %398, <4 x i32> undef, <4 x i32> zeroinitializer
  %400 = bitcast float* %396 to <4 x i32>*
  store <4 x i32> %399, <4 x i32>* %400, align 4, !alias.scope !25, !noalias !22
  %401 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %63, i32 0, i64 44
  %402 = load i32, i32* %15, align 4, !alias.scope !22
  %403 = insertelement <4 x i32> undef, i32 %402, i32 0
  %404 = shufflevector <4 x i32> %403, <4 x i32> undef, <4 x i32> zeroinitializer
  %405 = bitcast float* %401 to <4 x i32>*
  store <4 x i32> %404, <4 x i32>* %405, align 4, !alias.scope !25, !noalias !22
  %406 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %63, i32 0, i64 48
  %407 = load i32, i32* %15, align 4, !alias.scope !22
  %408 = insertelement <4 x i32> undef, i32 %407, i32 0
  %409 = shufflevector <4 x i32> %408, <4 x i32> undef, <4 x i32> zeroinitializer
  %410 = bitcast float* %406 to <4 x i32>*
  store <4 x i32> %409, <4 x i32>* %410, align 4, !alias.scope !25, !noalias !22
  %411 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %63, i32 0, i64 52
  %412 = load i32, i32* %15, align 4, !alias.scope !22
  %413 = insertelement <4 x i32> undef, i32 %412, i32 0
  %414 = shufflevector <4 x i32> %413, <4 x i32> undef, <4 x i32> zeroinitializer
  %415 = bitcast float* %411 to <4 x i32>*
  store <4 x i32> %414, <4 x i32>* %415, align 4, !alias.scope !25, !noalias !22
  %416 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %63, i32 0, i64 56
  %417 = load i32, i32* %15, align 4, !alias.scope !22
  %418 = insertelement <4 x i32> undef, i32 %417, i32 0
  %419 = shufflevector <4 x i32> %418, <4 x i32> undef, <4 x i32> zeroinitializer
  %420 = bitcast float* %416 to <4 x i32>*
  store <4 x i32> %419, <4 x i32>* %420, align 4, !alias.scope !25, !noalias !22
  %421 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %336, i64 %63, i32 0, i64 60
  %422 = load i32, i32* %15, align 4, !alias.scope !22
  %423 = insertelement <4 x i32> undef, i32 %422, i32 0
  %424 = shufflevector <4 x i32> %423, <4 x i32> undef, <4 x i32> zeroinitializer
  %425 = bitcast float* %421 to <4 x i32>*
  store <4 x i32> %424, <4 x i32>* %425, align 4, !alias.scope !25, !noalias !22
  br label %426

426:                                              ; preds = %335, %344
  %427 = phi float* [ %337, %335 ], [ %345, %344 ]
  %428 = phi i64 [ 65, %335 ], [ 1, %344 ]
  br label %429

429:                                              ; preds = %429, %426
  %430 = phi float* [ %435, %429 ], [ %427, %426 ]
  %431 = phi i64 [ %436, %429 ], [ %428, %426 ]
  %432 = phi i64 [ %437, %429 ], [ 1, %426 ]
  %433 = load i32, i32* %15, align 4
  %434 = bitcast float* %430 to i32*
  store i32 %433, i32* %434, align 4
  %435 = getelementptr inbounds float, float* %430, i64 1
  %436 = add nsw i64 %431, -1
  %437 = add i64 %432, -1
  %438 = icmp eq i64 %437, 0
  br i1 %438, label %439, label %429, !llvm.loop !27

439:                                              ; preds = %429
  %440 = icmp eq i64 %428, 1
  br i1 %440, label %470, label %441

441:                                              ; preds = %439, %441
  %442 = phi float* [ %467, %441 ], [ %435, %439 ]
  %443 = phi i64 [ %468, %441 ], [ %436, %439 ]
  %444 = load i32, i32* %15, align 4
  %445 = bitcast float* %442 to i32*
  store i32 %444, i32* %445, align 4
  %446 = getelementptr inbounds float, float* %442, i64 1
  %447 = load i32, i32* %15, align 4
  %448 = bitcast float* %446 to i32*
  store i32 %447, i32* %448, align 4
  %449 = getelementptr inbounds float, float* %442, i64 2
  %450 = load i32, i32* %15, align 4
  %451 = bitcast float* %449 to i32*
  store i32 %450, i32* %451, align 4
  %452 = getelementptr inbounds float, float* %442, i64 3
  %453 = load i32, i32* %15, align 4
  %454 = bitcast float* %452 to i32*
  store i32 %453, i32* %454, align 4
  %455 = getelementptr inbounds float, float* %442, i64 4
  %456 = load i32, i32* %15, align 4
  %457 = bitcast float* %455 to i32*
  store i32 %456, i32* %457, align 4
  %458 = getelementptr inbounds float, float* %442, i64 5
  %459 = load i32, i32* %15, align 4
  %460 = bitcast float* %458 to i32*
  store i32 %459, i32* %460, align 4
  %461 = getelementptr inbounds float, float* %442, i64 6
  %462 = load i32, i32* %15, align 4
  %463 = bitcast float* %461 to i32*
  store i32 %462, i32* %463, align 4
  %464 = getelementptr inbounds float, float* %442, i64 7
  %465 = load i32, i32* %15, align 4
  %466 = bitcast float* %464 to i32*
  store i32 %465, i32* %466, align 4
  %467 = getelementptr inbounds float, float* %442, i64 8
  %468 = add nsw i64 %443, -8
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %470, label %441, !llvm.loop !28

470:                                              ; preds = %441, %439
  %471 = load %"struct.std::__1::array.3"*, %"struct.std::__1::array.3"** %18, align 8
  %472 = getelementptr inbounds %"struct.std::__1::array.3", %"struct.std::__1::array.3"* %471, i64 %63, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %472, i8 1, i64 65, i1 false)
  %473 = load %"struct.std::__1::array.18"*, %"struct.std::__1::array.18"** %19, align 8
  %474 = getelementptr %"struct.std::__1::array.18", %"struct.std::__1::array.18"* %473, i64 %63
  %475 = bitcast %"struct.std::__1::array.18"* %474 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %475, i8 0, i64 260, i1 false)
  %476 = add nuw i64 %63, 1
  %477 = icmp ult i64 %476, %9
  br i1 %477, label %478, label %29

478:                                              ; preds = %470
  %479 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %13, align 8
  br label %61
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20SubbandErleEstimatorD2Ev(%"class.webrtc::SubbandErleEstimator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 9, i32 0, i32 0
  %3 = load %"struct.std::__1::array.18"*, %"struct.std::__1::array.18"** %2, align 8
  %4 = icmp eq %"struct.std::__1::array.18"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.std::__1::array.18"* %3 to i64
  %7 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 9, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::array.18"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.std::__1::array.18"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 8, i32 0, i32 0
  %12 = load %"struct.std::__1::array.3"*, %"struct.std::__1::array.3"** %11, align 8
  %13 = icmp eq %"struct.std::__1::array.3"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"struct.std::__1::array.3"* %12 to i64
  %16 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 8, i32 0, i32 1
  %17 = bitcast %"struct.std::__1::array.3"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds %"struct.std::__1::array.3", %"struct.std::__1::array.3"* %12, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 7, i32 0, i32 0
  %21 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %20, align 8
  %22 = icmp eq %"struct.std::__1::array"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"struct.std::__1::array"* %21 to i64
  %25 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 7, i32 0, i32 1
  %26 = bitcast %"struct.std::__1::array"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"struct.std::__1::array"* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #13
  br label %28

28:                                               ; preds = %19, %23
  %29 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 6, i32 0, i32 0
  %30 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %29, align 8
  %31 = icmp eq %"struct.std::__1::array"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = ptrtoint %"struct.std::__1::array"* %30 to i64
  %34 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 6, i32 0, i32 1
  %35 = bitcast %"struct.std::__1::array"** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = bitcast %"struct.std::__1::array"* %30 to i8*
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %28, %32
  %38 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 5, i32 0, i32 0
  %39 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %38, align 8
  %40 = icmp eq %"struct.std::__1::array"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = ptrtoint %"struct.std::__1::array"* %39 to i64
  %43 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 5, i32 0, i32 1
  %44 = bitcast %"struct.std::__1::array"** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = bitcast %"struct.std::__1::array"* %39 to i8*
  tail call void @_ZdlPv(i8* %45) #13
  br label %46

46:                                               ; preds = %37, %41
  %47 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 3, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = ptrtoint i32* %48 to i64
  %52 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 3, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = bitcast i32* %48 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  br label %55

55:                                               ; preds = %50, %46
  %56 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  %57 = load %"struct.std::__1::array.3"*, %"struct.std::__1::array.3"** %56, align 8
  %58 = icmp eq %"struct.std::__1::array.3"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = ptrtoint %"struct.std::__1::array.3"* %57 to i64
  %61 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 2, i32 0, i32 1
  %62 = bitcast %"struct.std::__1::array.3"** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = getelementptr inbounds %"struct.std::__1::array.3", %"struct.std::__1::array.3"* %57, i64 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %63) #13
  br label %64

64:                                               ; preds = %59, %55
  %65 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %66 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %65, align 8
  %67 = icmp eq %"struct.std::__1::array"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = ptrtoint %"struct.std::__1::array"* %66 to i64
  %70 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %71 = bitcast %"struct.std::__1::array"** %70 to i64*
  store i64 %69, i64* %71, align 8
  %72 = bitcast %"struct.std::__1::array"* %66 to i8*
  tail call void @_ZdlPv(i8* %72) #13
  br label %73

73:                                               ; preds = %68, %64
  %74 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %75 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %74, align 8
  %76 = icmp eq %"struct.std::__1::array"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %73
  %78 = ptrtoint %"struct.std::__1::array"* %75 to i64
  %79 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %80 = bitcast %"struct.std::__1::array"** %79 to i64*
  store i64 %78, i64* %80, align 8
  %81 = bitcast %"struct.std::__1::array"* %75 to i8*
  tail call void @_ZdlPv(i8* %81) #13
  br label %82

82:                                               ; preds = %73, %77
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20SubbandErleEstimator23ResetAccumulatedSpectraEv(%"class.webrtc::SubbandErleEstimator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 7, i32 0, i32 1
  %4 = bitcast %"struct.std::__1::array"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 3, i32 0, i32 0
  %13 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  br label %15

14:                                               ; preds = %15, %1
  ret void

15:                                               ; preds = %9, %15
  %16 = phi i64 [ 0, %9 ], [ %27, %15 ]
  %17 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %10, align 8
  %18 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %17, i64 %16
  %19 = bitcast %"struct.std::__1::array"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 260, i1 false)
  %20 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %11, align 8
  %21 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %20, i64 %16
  %22 = bitcast %"struct.std::__1::array"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 260, i1 false)
  %23 = load i32*, i32** %12, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 %16
  store i32 0, i32* %24, align 4
  %25 = load %"struct.std::__1::array.3"*, %"struct.std::__1::array.3"** %13, align 8
  %26 = getelementptr inbounds %"struct.std::__1::array.3", %"struct.std::__1::array.3"* %25, i64 %16, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %26, i8 0, i64 65, i1 false)
  %27 = add nuw i64 %16, 1
  %28 = load i64, i64* %4, align 8
  %29 = load i64, i64* %6, align 8
  %30 = sub i64 %28, %29
  %31 = sdiv exact i64 %30, 260
  %32 = icmp ult i64 %27, %31
  br i1 %32, label %15, label %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20SubbandErleEstimator6UpdateEN3rtc9ArrayViewIKfLl65EEENS2_IKNSt3__15arrayIfLm65EEELln4711EEES9_RKNS5_6vectorIbNS5_9allocatorIbEEEE(%"class.webrtc::SubbandErleEstimator"* nocapture readonly, float*, %"struct.std::__1::array"*, i64, %"struct.std::__1::array"*, i64, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %8 = alloca float, align 4
  %9 = icmp eq i64 %3, 0
  %10 = select i1 %9, %"struct.std::__1::array"* null, %"struct.std::__1::array"* %2
  %11 = icmp eq i64 %5, 0
  %12 = select i1 %11, %"struct.std::__1::array"* null, %"struct.std::__1::array"* %4
  tail call void @_ZN6webrtc20SubbandErleEstimator24UpdateAccumulatedSpectraEN3rtc9ArrayViewIKfLl65EEENS2_IKNSt3__15arrayIfLm65EEELln4711EEES9_RKNS5_6vectorIbNS5_9allocatorIbEEEE(%"class.webrtc::SubbandErleEstimator"* %0, float* %1, %"struct.std::__1::array"* %10, i64 %3, %"struct.std::__1::array"* %12, i64 %5, %"class.std::__1::vector.26"* dereferenceable(24) %6)
  tail call void @_ZN6webrtc20SubbandErleEstimator11UpdateBandsERKNSt3__16vectorIbNS1_9allocatorIbEEEE(%"class.webrtc::SubbandErleEstimator"* %0, %"class.std::__1::vector.26"* dereferenceable(24) %6)
  %13 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %78, label %16

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 0
  %18 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::array"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector"* %17 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = sdiv exact i64 %23, 260
  %25 = trunc i64 %24 to i32
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %78

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 9, i32 0, i32 0
  %29 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 6, i32 0, i32 0
  %30 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 7, i32 0, i32 0
  %31 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 8, i32 0, i32 0
  %32 = and i64 %24, 4294967295
  %33 = bitcast float* %8 to i8*
  br label %34

34:                                               ; preds = %36, %27
  %35 = phi i64 [ 0, %27 ], [ %37, %36 ]
  br label %39

36:                                               ; preds = %75
  %37 = add nuw nsw i64 %35, 1
  %38 = icmp eq i64 %37, %32
  br i1 %38, label %78, label %34

39:                                               ; preds = %75, %34
  %40 = phi i64 [ 1, %34 ], [ %76, %75 ]
  %41 = load %"struct.std::__1::array.18"*, %"struct.std::__1::array.18"** %28, align 8
  %42 = getelementptr inbounds %"struct.std::__1::array.18", %"struct.std::__1::array.18"* %41, i64 %35, i32 0, i64 %40
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %43, -1
  store i32 %44, i32* %42, align 4
  %45 = load %"struct.std::__1::array.18"*, %"struct.std::__1::array.18"** %28, align 8
  %46 = getelementptr inbounds %"struct.std::__1::array.18", %"struct.std::__1::array.18"* %45, i64 %35, i32 0, i64 %40
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %47, 151
  br i1 %48, label %49, label %75

49:                                               ; preds = %39
  %50 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %29, align 8
  %51 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %50, i64 %35, i32 0, i64 %40
  %52 = load float, float* %51, align 4
  %53 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %30, align 8
  %54 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %35, i32 0, i64 %40
  %55 = load float, float* %54, align 4
  %56 = fcmp ogt float %52, %55
  br i1 %56, label %57, label %67

57:                                               ; preds = %49
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33)
  %58 = fmul float %52, 0x3FEF0A3D80000000
  store float %58, float* %8, align 4
  %59 = fcmp olt float %55, %58
  %60 = select i1 %59, float* %8, float* %54
  %61 = bitcast float* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = bitcast float* %51 to i32*
  store i32 %62, i32* %63, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33)
  %64 = load %"struct.std::__1::array.18"*, %"struct.std::__1::array.18"** %28, align 8
  %65 = getelementptr inbounds %"struct.std::__1::array.18", %"struct.std::__1::array.18"* %64, i64 %35, i32 0, i64 %40
  %66 = load i32, i32* %65, align 4
  br label %67

67:                                               ; preds = %57, %49
  %68 = phi i32 [ %66, %57 ], [ %47, %49 ]
  %69 = icmp slt i32 %68, 1
  br i1 %69, label %70, label %75

70:                                               ; preds = %67
  %71 = load %"struct.std::__1::array.3"*, %"struct.std::__1::array.3"** %31, align 8
  %72 = getelementptr inbounds %"struct.std::__1::array.3", %"struct.std::__1::array.3"* %71, i64 %35, i32 0, i64 %40
  store i8 1, i8* %72, align 1
  %73 = load %"struct.std::__1::array.18"*, %"struct.std::__1::array.18"** %28, align 8
  %74 = getelementptr inbounds %"struct.std::__1::array.18", %"struct.std::__1::array.18"* %73, i64 %35, i32 0, i64 %40
  store i32 0, i32* %74, align 4
  br label %75

75:                                               ; preds = %70, %67, %39
  %76 = add nuw nsw i64 %40, 1
  %77 = icmp eq i64 %76, 64
  br i1 %77, label %36, label %39

78:                                               ; preds = %36, %16, %7
  %79 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 5
  %80 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 5, i32 0, i32 1
  %81 = bitcast %"struct.std::__1::array"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %"class.std::__1::vector"* %79 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 %82, %84
  %86 = sdiv exact i64 %85, 260
  %87 = icmp eq i64 %85, 0
  br i1 %87, label %92, label %88

88:                                               ; preds = %78
  %89 = inttoptr i64 %84 to %"struct.std::__1::array"*
  %90 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %79, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 6, i32 0, i32 0
  br label %93

92:                                               ; preds = %93, %78
  ret void

93:                                               ; preds = %119, %88
  %94 = phi %"struct.std::__1::array"* [ %89, %88 ], [ %120, %119 ]
  %95 = phi i64 [ 0, %88 ], [ %117, %119 ]
  %96 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %94, i64 %95
  %97 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %94, i64 %95, i32 0, i64 1
  %98 = bitcast float* %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = bitcast %"struct.std::__1::array"* %96 to i32*
  store i32 %99, i32* %100, align 4
  %101 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %94, i64 %95, i32 0, i64 63
  %102 = bitcast float* %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %94, i64 %95, i32 0, i64 64
  %105 = bitcast float* %104 to i32*
  store i32 %103, i32* %105, align 4
  %106 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %91, align 8
  %107 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %106, i64 %95
  %108 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %106, i64 %95, i32 0, i64 1
  %109 = bitcast float* %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = bitcast %"struct.std::__1::array"* %107 to i32*
  store i32 %110, i32* %111, align 4
  %112 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %106, i64 %95, i32 0, i64 63
  %113 = bitcast float* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %106, i64 %95, i32 0, i64 64
  %116 = bitcast float* %115 to i32*
  store i32 %114, i32* %116, align 4
  %117 = add nuw i64 %95, 1
  %118 = icmp ult i64 %117, %86
  br i1 %118, label %119, label %92

119:                                              ; preds = %93
  %120 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %90, align 8
  br label %93
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20SubbandErleEstimator24UpdateAccumulatedSpectraEN3rtc9ArrayViewIKfLl65EEENS2_IKNSt3__15arrayIfLm65EEELln4711EEES9_RKNS5_6vectorIbNS5_9allocatorIbEEEE(%"class.webrtc::SubbandErleEstimator"* nocapture readonly, float*, %"struct.std::__1::array"*, i64, %"struct.std::__1::array"*, i64, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %8 = trunc i64 %3 to i32
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %17

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %6, i64 0, i32 0
  %12 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 3, i32 0, i32 0
  %13 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  %16 = and i64 %3, 4294967295
  br label %18

17:                                               ; preds = %451, %7
  ret void

18:                                               ; preds = %451, %10
  %19 = phi i64 [ 0, %10 ], [ %452, %451 ]
  %20 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 64
  %21 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 64
  %22 = add nuw i64 %19, 1
  %23 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19
  %24 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %22
  %25 = add nuw i64 %19, 1
  %26 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19
  %27 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %25
  %28 = load i64*, i64** %11, align 8
  %29 = lshr i64 %19, 6
  %30 = getelementptr inbounds i64, i64* %28, i64 %29
  %31 = and i64 %19, 63
  %32 = shl i64 1, %31
  %33 = load i64, i64* %30, align 8
  %34 = and i64 %33, %32
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %451, label %36

36:                                               ; preds = %18
  %37 = load i32*, i32** %12, align 8
  %38 = getelementptr inbounds i32, i32* %37, i64 %19
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 6
  br i1 %40, label %41, label %50

41:                                               ; preds = %36
  store i32 0, i32* %38, align 4
  %42 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %13, align 8
  %43 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %42, i64 %19
  %44 = bitcast %"struct.std::__1::array"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %44, i8 0, i64 260, i1 false)
  %45 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %14, align 8
  %46 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %45, i64 %19
  %47 = bitcast %"struct.std::__1::array"* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %47, i8 0, i64 260, i1 false)
  %48 = load %"struct.std::__1::array.3"*, %"struct.std::__1::array.3"** %15, align 8
  %49 = getelementptr inbounds %"struct.std::__1::array.3", %"struct.std::__1::array.3"* %48, i64 %19, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %49, i8 0, i64 65, i1 false)
  br label %50

50:                                               ; preds = %41, %36
  %51 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 0
  %52 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 65
  %53 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %13, align 8
  %54 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %19, i32 0, i64 0
  %55 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %19
  %56 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %22
  %57 = icmp ult %"struct.std::__1::array"* %55, %24
  %58 = icmp ult %"struct.std::__1::array"* %23, %56
  %59 = and i1 %57, %58
  br i1 %59, label %191, label %60

60:                                               ; preds = %50
  %61 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 64
  %62 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %19, i32 0, i64 64
  %63 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %19, i32 0, i64 0
  %64 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 0
  %65 = bitcast float* %64 to <4 x float>*
  %66 = load <4 x float>, <4 x float>* %65, align 4, !alias.scope !29
  %67 = bitcast float* %63 to <4 x float>*
  %68 = load <4 x float>, <4 x float>* %67, align 4, !alias.scope !32, !noalias !29
  %69 = fadd <4 x float> %66, %68
  %70 = bitcast float* %63 to <4 x float>*
  store <4 x float> %69, <4 x float>* %70, align 4, !alias.scope !32, !noalias !29
  %71 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %19, i32 0, i64 4
  %72 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 4
  %73 = bitcast float* %72 to <4 x float>*
  %74 = load <4 x float>, <4 x float>* %73, align 4, !alias.scope !29
  %75 = bitcast float* %71 to <4 x float>*
  %76 = load <4 x float>, <4 x float>* %75, align 4, !alias.scope !32, !noalias !29
  %77 = fadd <4 x float> %74, %76
  %78 = bitcast float* %71 to <4 x float>*
  store <4 x float> %77, <4 x float>* %78, align 4, !alias.scope !32, !noalias !29
  %79 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %19, i32 0, i64 8
  %80 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 8
  %81 = bitcast float* %80 to <4 x float>*
  %82 = load <4 x float>, <4 x float>* %81, align 4, !alias.scope !29
  %83 = bitcast float* %79 to <4 x float>*
  %84 = load <4 x float>, <4 x float>* %83, align 4, !alias.scope !32, !noalias !29
  %85 = fadd <4 x float> %82, %84
  %86 = bitcast float* %79 to <4 x float>*
  store <4 x float> %85, <4 x float>* %86, align 4, !alias.scope !32, !noalias !29
  %87 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %19, i32 0, i64 12
  %88 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 12
  %89 = bitcast float* %88 to <4 x float>*
  %90 = load <4 x float>, <4 x float>* %89, align 4, !alias.scope !29
  %91 = bitcast float* %87 to <4 x float>*
  %92 = load <4 x float>, <4 x float>* %91, align 4, !alias.scope !32, !noalias !29
  %93 = fadd <4 x float> %90, %92
  %94 = bitcast float* %87 to <4 x float>*
  store <4 x float> %93, <4 x float>* %94, align 4, !alias.scope !32, !noalias !29
  %95 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %19, i32 0, i64 16
  %96 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 16
  %97 = bitcast float* %96 to <4 x float>*
  %98 = load <4 x float>, <4 x float>* %97, align 4, !alias.scope !29
  %99 = bitcast float* %95 to <4 x float>*
  %100 = load <4 x float>, <4 x float>* %99, align 4, !alias.scope !32, !noalias !29
  %101 = fadd <4 x float> %98, %100
  %102 = bitcast float* %95 to <4 x float>*
  store <4 x float> %101, <4 x float>* %102, align 4, !alias.scope !32, !noalias !29
  %103 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %19, i32 0, i64 20
  %104 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 20
  %105 = bitcast float* %104 to <4 x float>*
  %106 = load <4 x float>, <4 x float>* %105, align 4, !alias.scope !29
  %107 = bitcast float* %103 to <4 x float>*
  %108 = load <4 x float>, <4 x float>* %107, align 4, !alias.scope !32, !noalias !29
  %109 = fadd <4 x float> %106, %108
  %110 = bitcast float* %103 to <4 x float>*
  store <4 x float> %109, <4 x float>* %110, align 4, !alias.scope !32, !noalias !29
  %111 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %19, i32 0, i64 24
  %112 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 24
  %113 = bitcast float* %112 to <4 x float>*
  %114 = load <4 x float>, <4 x float>* %113, align 4, !alias.scope !29
  %115 = bitcast float* %111 to <4 x float>*
  %116 = load <4 x float>, <4 x float>* %115, align 4, !alias.scope !32, !noalias !29
  %117 = fadd <4 x float> %114, %116
  %118 = bitcast float* %111 to <4 x float>*
  store <4 x float> %117, <4 x float>* %118, align 4, !alias.scope !32, !noalias !29
  %119 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %19, i32 0, i64 28
  %120 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 28
  %121 = bitcast float* %120 to <4 x float>*
  %122 = load <4 x float>, <4 x float>* %121, align 4, !alias.scope !29
  %123 = bitcast float* %119 to <4 x float>*
  %124 = load <4 x float>, <4 x float>* %123, align 4, !alias.scope !32, !noalias !29
  %125 = fadd <4 x float> %122, %124
  %126 = bitcast float* %119 to <4 x float>*
  store <4 x float> %125, <4 x float>* %126, align 4, !alias.scope !32, !noalias !29
  %127 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %19, i32 0, i64 32
  %128 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 32
  %129 = bitcast float* %128 to <4 x float>*
  %130 = load <4 x float>, <4 x float>* %129, align 4, !alias.scope !29
  %131 = bitcast float* %127 to <4 x float>*
  %132 = load <4 x float>, <4 x float>* %131, align 4, !alias.scope !32, !noalias !29
  %133 = fadd <4 x float> %130, %132
  %134 = bitcast float* %127 to <4 x float>*
  store <4 x float> %133, <4 x float>* %134, align 4, !alias.scope !32, !noalias !29
  %135 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %19, i32 0, i64 36
  %136 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 36
  %137 = bitcast float* %136 to <4 x float>*
  %138 = load <4 x float>, <4 x float>* %137, align 4, !alias.scope !29
  %139 = bitcast float* %135 to <4 x float>*
  %140 = load <4 x float>, <4 x float>* %139, align 4, !alias.scope !32, !noalias !29
  %141 = fadd <4 x float> %138, %140
  %142 = bitcast float* %135 to <4 x float>*
  store <4 x float> %141, <4 x float>* %142, align 4, !alias.scope !32, !noalias !29
  %143 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %19, i32 0, i64 40
  %144 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 40
  %145 = bitcast float* %144 to <4 x float>*
  %146 = load <4 x float>, <4 x float>* %145, align 4, !alias.scope !29
  %147 = bitcast float* %143 to <4 x float>*
  %148 = load <4 x float>, <4 x float>* %147, align 4, !alias.scope !32, !noalias !29
  %149 = fadd <4 x float> %146, %148
  %150 = bitcast float* %143 to <4 x float>*
  store <4 x float> %149, <4 x float>* %150, align 4, !alias.scope !32, !noalias !29
  %151 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %19, i32 0, i64 44
  %152 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 44
  %153 = bitcast float* %152 to <4 x float>*
  %154 = load <4 x float>, <4 x float>* %153, align 4, !alias.scope !29
  %155 = bitcast float* %151 to <4 x float>*
  %156 = load <4 x float>, <4 x float>* %155, align 4, !alias.scope !32, !noalias !29
  %157 = fadd <4 x float> %154, %156
  %158 = bitcast float* %151 to <4 x float>*
  store <4 x float> %157, <4 x float>* %158, align 4, !alias.scope !32, !noalias !29
  %159 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %19, i32 0, i64 48
  %160 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 48
  %161 = bitcast float* %160 to <4 x float>*
  %162 = load <4 x float>, <4 x float>* %161, align 4, !alias.scope !29
  %163 = bitcast float* %159 to <4 x float>*
  %164 = load <4 x float>, <4 x float>* %163, align 4, !alias.scope !32, !noalias !29
  %165 = fadd <4 x float> %162, %164
  %166 = bitcast float* %159 to <4 x float>*
  store <4 x float> %165, <4 x float>* %166, align 4, !alias.scope !32, !noalias !29
  %167 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %19, i32 0, i64 52
  %168 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 52
  %169 = bitcast float* %168 to <4 x float>*
  %170 = load <4 x float>, <4 x float>* %169, align 4, !alias.scope !29
  %171 = bitcast float* %167 to <4 x float>*
  %172 = load <4 x float>, <4 x float>* %171, align 4, !alias.scope !32, !noalias !29
  %173 = fadd <4 x float> %170, %172
  %174 = bitcast float* %167 to <4 x float>*
  store <4 x float> %173, <4 x float>* %174, align 4, !alias.scope !32, !noalias !29
  %175 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %19, i32 0, i64 56
  %176 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 56
  %177 = bitcast float* %176 to <4 x float>*
  %178 = load <4 x float>, <4 x float>* %177, align 4, !alias.scope !29
  %179 = bitcast float* %175 to <4 x float>*
  %180 = load <4 x float>, <4 x float>* %179, align 4, !alias.scope !32, !noalias !29
  %181 = fadd <4 x float> %178, %180
  %182 = bitcast float* %175 to <4 x float>*
  store <4 x float> %181, <4 x float>* %182, align 4, !alias.scope !32, !noalias !29
  %183 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %53, i64 %19, i32 0, i64 60
  %184 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %19, i32 0, i64 60
  %185 = bitcast float* %184 to <4 x float>*
  %186 = load <4 x float>, <4 x float>* %185, align 4, !alias.scope !29
  %187 = bitcast float* %183 to <4 x float>*
  %188 = load <4 x float>, <4 x float>* %187, align 4, !alias.scope !32, !noalias !29
  %189 = fadd <4 x float> %186, %188
  %190 = bitcast float* %183 to <4 x float>*
  store <4 x float> %189, <4 x float>* %190, align 4, !alias.scope !32, !noalias !29
  br label %191

191:                                              ; preds = %60, %50
  %192 = phi float* [ %54, %50 ], [ %62, %60 ]
  %193 = phi float* [ %51, %50 ], [ %61, %60 ]
  %194 = ptrtoint float* %193 to i64
  %195 = ptrtoint float* %21 to i64
  %196 = sub i64 %195, %194
  %197 = lshr i64 %196, 2
  %198 = add nuw nsw i64 %197, 1
  %199 = and i64 %198, 3
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %212, label %201

201:                                              ; preds = %191, %201
  %202 = phi float* [ %209, %201 ], [ %192, %191 ]
  %203 = phi float* [ %208, %201 ], [ %193, %191 ]
  %204 = phi i64 [ %210, %201 ], [ %199, %191 ]
  %205 = load float, float* %203, align 4
  %206 = load float, float* %202, align 4
  %207 = fadd float %205, %206
  store float %207, float* %202, align 4
  %208 = getelementptr inbounds float, float* %203, i64 1
  %209 = getelementptr inbounds float, float* %202, i64 1
  %210 = add i64 %204, -1
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %201, !llvm.loop !34

212:                                              ; preds = %201, %191
  %213 = phi float* [ %192, %191 ], [ %209, %201 ]
  %214 = phi float* [ %193, %191 ], [ %208, %201 ]
  %215 = icmp ult i64 %196, 12
  br i1 %215, label %240, label %216

216:                                              ; preds = %212, %216
  %217 = phi float* [ %238, %216 ], [ %213, %212 ]
  %218 = phi float* [ %237, %216 ], [ %214, %212 ]
  %219 = load float, float* %218, align 4
  %220 = load float, float* %217, align 4
  %221 = fadd float %219, %220
  store float %221, float* %217, align 4
  %222 = getelementptr inbounds float, float* %218, i64 1
  %223 = getelementptr inbounds float, float* %217, i64 1
  %224 = load float, float* %222, align 4
  %225 = load float, float* %223, align 4
  %226 = fadd float %224, %225
  store float %226, float* %223, align 4
  %227 = getelementptr inbounds float, float* %218, i64 2
  %228 = getelementptr inbounds float, float* %217, i64 2
  %229 = load float, float* %227, align 4
  %230 = load float, float* %228, align 4
  %231 = fadd float %229, %230
  store float %231, float* %228, align 4
  %232 = getelementptr inbounds float, float* %218, i64 3
  %233 = getelementptr inbounds float, float* %217, i64 3
  %234 = load float, float* %232, align 4
  %235 = load float, float* %233, align 4
  %236 = fadd float %234, %235
  store float %236, float* %233, align 4
  %237 = getelementptr inbounds float, float* %218, i64 4
  %238 = getelementptr inbounds float, float* %217, i64 4
  %239 = icmp eq float* %237, %52
  br i1 %239, label %240, label %216, !llvm.loop !35

240:                                              ; preds = %216, %212
  %241 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 0
  %242 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 65
  %243 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %14, align 8
  %244 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %19, i32 0, i64 0
  %245 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %19
  %246 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %25
  %247 = icmp ult %"struct.std::__1::array"* %245, %27
  %248 = icmp ult %"struct.std::__1::array"* %26, %246
  %249 = and i1 %247, %248
  br i1 %249, label %381, label %250

250:                                              ; preds = %240
  %251 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 64
  %252 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %19, i32 0, i64 64
  %253 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %19, i32 0, i64 0
  %254 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 0
  %255 = bitcast float* %254 to <4 x float>*
  %256 = load <4 x float>, <4 x float>* %255, align 4, !alias.scope !36
  %257 = bitcast float* %253 to <4 x float>*
  %258 = load <4 x float>, <4 x float>* %257, align 4, !alias.scope !39, !noalias !36
  %259 = fadd <4 x float> %256, %258
  %260 = bitcast float* %253 to <4 x float>*
  store <4 x float> %259, <4 x float>* %260, align 4, !alias.scope !39, !noalias !36
  %261 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %19, i32 0, i64 4
  %262 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 4
  %263 = bitcast float* %262 to <4 x float>*
  %264 = load <4 x float>, <4 x float>* %263, align 4, !alias.scope !36
  %265 = bitcast float* %261 to <4 x float>*
  %266 = load <4 x float>, <4 x float>* %265, align 4, !alias.scope !39, !noalias !36
  %267 = fadd <4 x float> %264, %266
  %268 = bitcast float* %261 to <4 x float>*
  store <4 x float> %267, <4 x float>* %268, align 4, !alias.scope !39, !noalias !36
  %269 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %19, i32 0, i64 8
  %270 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 8
  %271 = bitcast float* %270 to <4 x float>*
  %272 = load <4 x float>, <4 x float>* %271, align 4, !alias.scope !36
  %273 = bitcast float* %269 to <4 x float>*
  %274 = load <4 x float>, <4 x float>* %273, align 4, !alias.scope !39, !noalias !36
  %275 = fadd <4 x float> %272, %274
  %276 = bitcast float* %269 to <4 x float>*
  store <4 x float> %275, <4 x float>* %276, align 4, !alias.scope !39, !noalias !36
  %277 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %19, i32 0, i64 12
  %278 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 12
  %279 = bitcast float* %278 to <4 x float>*
  %280 = load <4 x float>, <4 x float>* %279, align 4, !alias.scope !36
  %281 = bitcast float* %277 to <4 x float>*
  %282 = load <4 x float>, <4 x float>* %281, align 4, !alias.scope !39, !noalias !36
  %283 = fadd <4 x float> %280, %282
  %284 = bitcast float* %277 to <4 x float>*
  store <4 x float> %283, <4 x float>* %284, align 4, !alias.scope !39, !noalias !36
  %285 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %19, i32 0, i64 16
  %286 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 16
  %287 = bitcast float* %286 to <4 x float>*
  %288 = load <4 x float>, <4 x float>* %287, align 4, !alias.scope !36
  %289 = bitcast float* %285 to <4 x float>*
  %290 = load <4 x float>, <4 x float>* %289, align 4, !alias.scope !39, !noalias !36
  %291 = fadd <4 x float> %288, %290
  %292 = bitcast float* %285 to <4 x float>*
  store <4 x float> %291, <4 x float>* %292, align 4, !alias.scope !39, !noalias !36
  %293 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %19, i32 0, i64 20
  %294 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 20
  %295 = bitcast float* %294 to <4 x float>*
  %296 = load <4 x float>, <4 x float>* %295, align 4, !alias.scope !36
  %297 = bitcast float* %293 to <4 x float>*
  %298 = load <4 x float>, <4 x float>* %297, align 4, !alias.scope !39, !noalias !36
  %299 = fadd <4 x float> %296, %298
  %300 = bitcast float* %293 to <4 x float>*
  store <4 x float> %299, <4 x float>* %300, align 4, !alias.scope !39, !noalias !36
  %301 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %19, i32 0, i64 24
  %302 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 24
  %303 = bitcast float* %302 to <4 x float>*
  %304 = load <4 x float>, <4 x float>* %303, align 4, !alias.scope !36
  %305 = bitcast float* %301 to <4 x float>*
  %306 = load <4 x float>, <4 x float>* %305, align 4, !alias.scope !39, !noalias !36
  %307 = fadd <4 x float> %304, %306
  %308 = bitcast float* %301 to <4 x float>*
  store <4 x float> %307, <4 x float>* %308, align 4, !alias.scope !39, !noalias !36
  %309 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %19, i32 0, i64 28
  %310 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 28
  %311 = bitcast float* %310 to <4 x float>*
  %312 = load <4 x float>, <4 x float>* %311, align 4, !alias.scope !36
  %313 = bitcast float* %309 to <4 x float>*
  %314 = load <4 x float>, <4 x float>* %313, align 4, !alias.scope !39, !noalias !36
  %315 = fadd <4 x float> %312, %314
  %316 = bitcast float* %309 to <4 x float>*
  store <4 x float> %315, <4 x float>* %316, align 4, !alias.scope !39, !noalias !36
  %317 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %19, i32 0, i64 32
  %318 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 32
  %319 = bitcast float* %318 to <4 x float>*
  %320 = load <4 x float>, <4 x float>* %319, align 4, !alias.scope !36
  %321 = bitcast float* %317 to <4 x float>*
  %322 = load <4 x float>, <4 x float>* %321, align 4, !alias.scope !39, !noalias !36
  %323 = fadd <4 x float> %320, %322
  %324 = bitcast float* %317 to <4 x float>*
  store <4 x float> %323, <4 x float>* %324, align 4, !alias.scope !39, !noalias !36
  %325 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %19, i32 0, i64 36
  %326 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 36
  %327 = bitcast float* %326 to <4 x float>*
  %328 = load <4 x float>, <4 x float>* %327, align 4, !alias.scope !36
  %329 = bitcast float* %325 to <4 x float>*
  %330 = load <4 x float>, <4 x float>* %329, align 4, !alias.scope !39, !noalias !36
  %331 = fadd <4 x float> %328, %330
  %332 = bitcast float* %325 to <4 x float>*
  store <4 x float> %331, <4 x float>* %332, align 4, !alias.scope !39, !noalias !36
  %333 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %19, i32 0, i64 40
  %334 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 40
  %335 = bitcast float* %334 to <4 x float>*
  %336 = load <4 x float>, <4 x float>* %335, align 4, !alias.scope !36
  %337 = bitcast float* %333 to <4 x float>*
  %338 = load <4 x float>, <4 x float>* %337, align 4, !alias.scope !39, !noalias !36
  %339 = fadd <4 x float> %336, %338
  %340 = bitcast float* %333 to <4 x float>*
  store <4 x float> %339, <4 x float>* %340, align 4, !alias.scope !39, !noalias !36
  %341 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %19, i32 0, i64 44
  %342 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 44
  %343 = bitcast float* %342 to <4 x float>*
  %344 = load <4 x float>, <4 x float>* %343, align 4, !alias.scope !36
  %345 = bitcast float* %341 to <4 x float>*
  %346 = load <4 x float>, <4 x float>* %345, align 4, !alias.scope !39, !noalias !36
  %347 = fadd <4 x float> %344, %346
  %348 = bitcast float* %341 to <4 x float>*
  store <4 x float> %347, <4 x float>* %348, align 4, !alias.scope !39, !noalias !36
  %349 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %19, i32 0, i64 48
  %350 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 48
  %351 = bitcast float* %350 to <4 x float>*
  %352 = load <4 x float>, <4 x float>* %351, align 4, !alias.scope !36
  %353 = bitcast float* %349 to <4 x float>*
  %354 = load <4 x float>, <4 x float>* %353, align 4, !alias.scope !39, !noalias !36
  %355 = fadd <4 x float> %352, %354
  %356 = bitcast float* %349 to <4 x float>*
  store <4 x float> %355, <4 x float>* %356, align 4, !alias.scope !39, !noalias !36
  %357 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %19, i32 0, i64 52
  %358 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 52
  %359 = bitcast float* %358 to <4 x float>*
  %360 = load <4 x float>, <4 x float>* %359, align 4, !alias.scope !36
  %361 = bitcast float* %357 to <4 x float>*
  %362 = load <4 x float>, <4 x float>* %361, align 4, !alias.scope !39, !noalias !36
  %363 = fadd <4 x float> %360, %362
  %364 = bitcast float* %357 to <4 x float>*
  store <4 x float> %363, <4 x float>* %364, align 4, !alias.scope !39, !noalias !36
  %365 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %19, i32 0, i64 56
  %366 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 56
  %367 = bitcast float* %366 to <4 x float>*
  %368 = load <4 x float>, <4 x float>* %367, align 4, !alias.scope !36
  %369 = bitcast float* %365 to <4 x float>*
  %370 = load <4 x float>, <4 x float>* %369, align 4, !alias.scope !39, !noalias !36
  %371 = fadd <4 x float> %368, %370
  %372 = bitcast float* %365 to <4 x float>*
  store <4 x float> %371, <4 x float>* %372, align 4, !alias.scope !39, !noalias !36
  %373 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %243, i64 %19, i32 0, i64 60
  %374 = getelementptr %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %19, i32 0, i64 60
  %375 = bitcast float* %374 to <4 x float>*
  %376 = load <4 x float>, <4 x float>* %375, align 4, !alias.scope !36
  %377 = bitcast float* %373 to <4 x float>*
  %378 = load <4 x float>, <4 x float>* %377, align 4, !alias.scope !39, !noalias !36
  %379 = fadd <4 x float> %376, %378
  %380 = bitcast float* %373 to <4 x float>*
  store <4 x float> %379, <4 x float>* %380, align 4, !alias.scope !39, !noalias !36
  br label %381

381:                                              ; preds = %250, %240
  %382 = phi float* [ %244, %240 ], [ %252, %250 ]
  %383 = phi float* [ %241, %240 ], [ %251, %250 ]
  %384 = ptrtoint float* %383 to i64
  %385 = ptrtoint float* %20 to i64
  %386 = sub i64 %385, %384
  %387 = lshr i64 %386, 2
  %388 = add nuw nsw i64 %387, 1
  %389 = and i64 %388, 3
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %402, label %391

391:                                              ; preds = %381, %391
  %392 = phi float* [ %399, %391 ], [ %382, %381 ]
  %393 = phi float* [ %398, %391 ], [ %383, %381 ]
  %394 = phi i64 [ %400, %391 ], [ %389, %381 ]
  %395 = load float, float* %393, align 4
  %396 = load float, float* %392, align 4
  %397 = fadd float %395, %396
  store float %397, float* %392, align 4
  %398 = getelementptr inbounds float, float* %393, i64 1
  %399 = getelementptr inbounds float, float* %392, i64 1
  %400 = add i64 %394, -1
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %402, label %391, !llvm.loop !41

402:                                              ; preds = %391, %381
  %403 = phi float* [ %382, %381 ], [ %399, %391 ]
  %404 = phi float* [ %383, %381 ], [ %398, %391 ]
  %405 = icmp ult i64 %386, 12
  br i1 %405, label %430, label %406

406:                                              ; preds = %402, %406
  %407 = phi float* [ %428, %406 ], [ %403, %402 ]
  %408 = phi float* [ %427, %406 ], [ %404, %402 ]
  %409 = load float, float* %408, align 4
  %410 = load float, float* %407, align 4
  %411 = fadd float %409, %410
  store float %411, float* %407, align 4
  %412 = getelementptr inbounds float, float* %408, i64 1
  %413 = getelementptr inbounds float, float* %407, i64 1
  %414 = load float, float* %412, align 4
  %415 = load float, float* %413, align 4
  %416 = fadd float %414, %415
  store float %416, float* %413, align 4
  %417 = getelementptr inbounds float, float* %408, i64 2
  %418 = getelementptr inbounds float, float* %407, i64 2
  %419 = load float, float* %417, align 4
  %420 = load float, float* %418, align 4
  %421 = fadd float %419, %420
  store float %421, float* %418, align 4
  %422 = getelementptr inbounds float, float* %408, i64 3
  %423 = getelementptr inbounds float, float* %407, i64 3
  %424 = load float, float* %422, align 4
  %425 = load float, float* %423, align 4
  %426 = fadd float %424, %425
  store float %426, float* %423, align 4
  %427 = getelementptr inbounds float, float* %408, i64 4
  %428 = getelementptr inbounds float, float* %407, i64 4
  %429 = icmp eq float* %427, %242
  br i1 %429, label %430, label %406, !llvm.loop !42

430:                                              ; preds = %406, %402
  br label %436

431:                                              ; preds = %446
  %432 = load i32*, i32** %12, align 8
  %433 = getelementptr inbounds i32, i32* %432, i64 %19
  %434 = load i32, i32* %433, align 4
  %435 = add nsw i32 %434, 1
  store i32 %435, i32* %433, align 4
  br label %451

436:                                              ; preds = %463, %430
  %437 = phi i64 [ 0, %430 ], [ %466, %463 ]
  %438 = load %"struct.std::__1::array.3"*, %"struct.std::__1::array.3"** %15, align 8
  %439 = getelementptr inbounds %"struct.std::__1::array.3", %"struct.std::__1::array.3"* %438, i64 %19, i32 0, i64 %437
  %440 = load i8, i8* %439, align 1, !range !2
  %441 = icmp eq i8 %440, 0
  br i1 %441, label %442, label %446

442:                                              ; preds = %436
  %443 = getelementptr inbounds float, float* %1, i64 %437
  %444 = load float, float* %443, align 4
  %445 = fcmp olt float %444, 0x4184FCEEE0000000
  br label %446

446:                                              ; preds = %436, %442
  %447 = phi i1 [ true, %436 ], [ %445, %442 ]
  %448 = zext i1 %447 to i8
  store i8 %448, i8* %439, align 1
  %449 = or i64 %437, 1
  %450 = icmp eq i64 %449, 65
  br i1 %450, label %431, label %454

451:                                              ; preds = %18, %431
  %452 = add nuw nsw i64 %19, 1
  %453 = icmp eq i64 %452, %16
  br i1 %453, label %17, label %18

454:                                              ; preds = %446
  %455 = load %"struct.std::__1::array.3"*, %"struct.std::__1::array.3"** %15, align 8
  %456 = getelementptr inbounds %"struct.std::__1::array.3", %"struct.std::__1::array.3"* %455, i64 %19, i32 0, i64 %449
  %457 = load i8, i8* %456, align 1, !range !2
  %458 = icmp eq i8 %457, 0
  br i1 %458, label %459, label %463

459:                                              ; preds = %454
  %460 = getelementptr inbounds float, float* %1, i64 %449
  %461 = load float, float* %460, align 4
  %462 = fcmp olt float %461, 0x4184FCEEE0000000
  br label %463

463:                                              ; preds = %459, %454
  %464 = phi i1 [ true, %454 ], [ %462, %459 ]
  %465 = zext i1 %464 to i8
  store i8 %465, i8* %456, align 1
  %466 = add nuw nsw i64 %437, 2
  br label %436
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20SubbandErleEstimator11UpdateBandsERKNSt3__16vectorIbNS1_9allocatorIbEEEE(%"class.webrtc::SubbandErleEstimator"* nocapture readonly, %"class.std::__1::vector.26"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::array.37", align 4
  %4 = alloca %"struct.std::__1::array.38", align 1
  %5 = getelementptr inbounds %"struct.std::__1::array.38", %"struct.std::__1::array.38"* %4, i64 0, i32 0, i64 0
  %6 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 0
  %7 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::array"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 260
  %14 = trunc i64 %13 to i32
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %33

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0
  %18 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 3, i32 0, i32 0
  %19 = bitcast %"struct.std::__1::array.37"* %3 to i8*
  %20 = getelementptr inbounds %"struct.std::__1::array.38", %"struct.std::__1::array.38"* %4, i64 0, i32 0, i64 0
  %21 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 0
  %24 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  %25 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 8, i32 0, i32 0
  %26 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 3
  %27 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 7, i32 0, i32 0
  %28 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 1
  %29 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 9, i32 0, i32 0
  %30 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 5, i32 0, i32 0
  %31 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 6, i32 0, i32 0
  %32 = and i64 %13, 4294967295
  br label %34

33:                                               ; preds = %161, %2
  ret void

34:                                               ; preds = %161, %16
  %35 = phi i64 [ 0, %16 ], [ %162, %161 ]
  %36 = load i64*, i64** %17, align 8
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds i64, i64* %36, i64 %37
  %39 = and i64 %35, 63
  %40 = shl i64 1, %39
  %41 = load i64, i64* %38, align 8
  %42 = and i64 %41, %40
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %161, label %44

44:                                               ; preds = %34
  %45 = load i32*, i32** %18, align 8
  %46 = getelementptr inbounds i32, i32* %45, i64 %35
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 6
  br i1 %48, label %49, label %161

49:                                               ; preds = %44
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %19) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 -1, i64 256, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %20) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %5, i8 0, i64 64, i1 false)
  %50 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %21, align 8
  br label %55

51:                                               ; preds = %67
  %52 = load i8, i8* %23, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %70

54:                                               ; preds = %109, %51
  br label %113

55:                                               ; preds = %67, %49
  %56 = phi i64 [ 1, %49 ], [ %68, %67 ]
  %57 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %50, i64 %35, i32 0, i64 %56
  %58 = load float, float* %57, align 4
  %59 = fcmp ogt float %58, 0.000000e+00
  br i1 %59, label %60, label %67

60:                                               ; preds = %55
  %61 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %22, align 8
  %62 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %61, i64 %35, i32 0, i64 %56
  %63 = load float, float* %62, align 4
  %64 = fdiv float %63, %58
  %65 = getelementptr inbounds %"struct.std::__1::array.37", %"struct.std::__1::array.37"* %3, i64 0, i32 0, i64 %56
  store float %64, float* %65, align 4
  %66 = getelementptr inbounds %"struct.std::__1::array.38", %"struct.std::__1::array.38"* %4, i64 0, i32 0, i64 %56
  store i8 1, i8* %66, align 1
  br label %67

67:                                               ; preds = %55, %60
  %68 = add nuw nsw i64 %56, 1
  %69 = icmp eq i64 %68, 64
  br i1 %69, label %51, label %55

70:                                               ; preds = %51, %109
  %71 = phi i64 [ %110, %109 ], [ 1, %51 ]
  %72 = getelementptr inbounds %"struct.std::__1::array.38", %"struct.std::__1::array.38"* %4, i64 0, i32 0, i64 %71
  %73 = load i8, i8* %72, align 1, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %109, label %75

75:                                               ; preds = %70
  %76 = load %"struct.std::__1::array.3"*, %"struct.std::__1::array.3"** %24, align 8
  %77 = getelementptr inbounds %"struct.std::__1::array.3", %"struct.std::__1::array.3"* %76, i64 %35, i32 0, i64 %71
  %78 = load i8, i8* %77, align 1, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %109

80:                                               ; preds = %75
  %81 = load %"struct.std::__1::array.3"*, %"struct.std::__1::array.3"** %25, align 8
  %82 = getelementptr inbounds %"struct.std::__1::array.3", %"struct.std::__1::array.3"* %81, i64 %35, i32 0, i64 %71
  %83 = load i8, i8* %82, align 1, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %106, label %85

85:                                               ; preds = %80
  store i8 0, i8* %82, align 1
  %86 = load i8, i8* %26, align 4, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %106

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"struct.std::__1::array.37", %"struct.std::__1::array.37"* %3, i64 0, i32 0, i64 %71
  %90 = load float, float* %89, align 4
  %91 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %27, align 8
  %92 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %91, i64 %35, i32 0, i64 %71
  %93 = load float, float* %92, align 4
  %94 = fcmp olt float %90, %93
  %95 = select i1 %94, float 0x3FD3333340000000, float 0x3FC3333340000000
  %96 = fsub float %90, %93
  %97 = fmul float %96, %95
  %98 = fadd float %93, %97
  %99 = load float, float* %28, align 4
  %100 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 %71
  %101 = load float, float* %100, align 4
  %102 = fcmp ole float %98, %99
  %103 = fcmp oge float %98, %101
  %104 = select i1 %103, float %101, float %98
  %105 = select i1 %102, float %99, float %104
  store float %105, float* %92, align 4
  br label %106

106:                                              ; preds = %85, %80, %88
  %107 = load %"struct.std::__1::array.18"*, %"struct.std::__1::array.18"** %29, align 8
  %108 = getelementptr inbounds %"struct.std::__1::array.18", %"struct.std::__1::array.18"* %107, i64 %35, i32 0, i64 %71
  store i32 250, i32* %108, align 4
  br label %109

109:                                              ; preds = %75, %70, %106
  %110 = add nuw nsw i64 %71, 1
  %111 = icmp eq i64 %110, 64
  br i1 %111, label %54, label %70

112:                                              ; preds = %158
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %19) #11
  br label %161

113:                                              ; preds = %54, %158
  %114 = phi i64 [ %159, %158 ], [ 1, %54 ]
  %115 = getelementptr inbounds %"struct.std::__1::array.38", %"struct.std::__1::array.38"* %4, i64 0, i32 0, i64 %114
  %116 = load i8, i8* %115, align 1, !range !2
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %158, label %118

118:                                              ; preds = %113
  %119 = load %"struct.std::__1::array.3"*, %"struct.std::__1::array.3"** %24, align 8
  %120 = getelementptr inbounds %"struct.std::__1::array.3", %"struct.std::__1::array.3"* %119, i64 %35, i32 0, i64 %114
  %121 = load i8, i8* %120, align 1, !range !2
  %122 = icmp eq i8 %121, 0
  %123 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %30, align 8
  %124 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %123, i64 %35, i32 0, i64 %114
  %125 = getelementptr inbounds %"struct.std::__1::array.37", %"struct.std::__1::array.37"* %3, i64 0, i32 0, i64 %114
  %126 = load float, float* %125, align 4
  %127 = load float, float* %28, align 4
  %128 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 2, i32 0, i64 %114
  %129 = load float, float* %128, align 4
  %130 = load float, float* %124, align 4
  %131 = fcmp ogt float %130, %126
  %132 = select i1 %122, float 0x3FB99999A0000000, float 0.000000e+00
  %133 = select i1 %131, float %132, float 0x3FA99999A0000000
  %134 = fsub float %126, %130
  %135 = fmul float %134, %133
  %136 = fadd float %130, %135
  %137 = fcmp ole float %136, %127
  %138 = fcmp oge float %136, %129
  %139 = select i1 %138, float %129, float %136
  %140 = select i1 %137, float %127, float %139
  store float %140, float* %124, align 4
  %141 = load i8, i8* %23, align 8, !range !2
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %158, label %143

143:                                              ; preds = %118
  %144 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %31, align 8
  %145 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %144, i64 %35, i32 0, i64 %114
  %146 = load float, float* %28, align 4
  %147 = load float, float* %128, align 4
  %148 = load float, float* %145, align 4
  %149 = fcmp ogt float %148, %126
  %150 = select i1 %149, float %132, float 0x3FA99999A0000000
  %151 = fsub float %126, %148
  %152 = fmul float %151, %150
  %153 = fadd float %148, %152
  %154 = fcmp ole float %153, %146
  %155 = fcmp oge float %153, %147
  %156 = select i1 %155, float %147, float %153
  %157 = select i1 %154, float %146, float %156
  store float %157, float* %145, align 4
  br label %158

158:                                              ; preds = %143, %118, %113
  %159 = add nuw nsw i64 %114, 1
  %160 = icmp eq i64 %159, 64
  br i1 %160, label %112, label %113

161:                                              ; preds = %34, %44, %112
  %162 = add nuw nsw i64 %35, 1
  %163 = icmp eq i64 %162, %32
  br i1 %163, label %33, label %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20SubbandErleEstimator38DecreaseErlePerBandForLowRenderSignalsEv(%"class.webrtc::SubbandErleEstimator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca float, align 4
  %3 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 0
  %4 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.std::__1::array"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 260
  %11 = trunc i64 %10 to i32
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %22

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 9, i32 0, i32 0
  %15 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 6, i32 0, i32 0
  %16 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 7, i32 0, i32 0
  %17 = bitcast float* %2 to i8*
  %18 = getelementptr inbounds %"class.webrtc::SubbandErleEstimator", %"class.webrtc::SubbandErleEstimator"* %0, i64 0, i32 8, i32 0, i32 0
  %19 = and i64 %10, 4294967295
  br label %20

20:                                               ; preds = %23, %13
  %21 = phi i64 [ 0, %13 ], [ %24, %23 ]
  br label %26

22:                                               ; preds = %23, %1
  ret void

23:                                               ; preds = %62
  %24 = add nuw nsw i64 %21, 1
  %25 = icmp eq i64 %24, %19
  br i1 %25, label %22, label %20

26:                                               ; preds = %62, %20
  %27 = phi i64 [ 1, %20 ], [ %63, %62 ]
  %28 = load %"struct.std::__1::array.18"*, %"struct.std::__1::array.18"** %14, align 8
  %29 = getelementptr inbounds %"struct.std::__1::array.18", %"struct.std::__1::array.18"* %28, i64 %21, i32 0, i64 %27
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %30, -1
  store i32 %31, i32* %29, align 4
  %32 = load %"struct.std::__1::array.18"*, %"struct.std::__1::array.18"** %14, align 8
  %33 = getelementptr inbounds %"struct.std::__1::array.18", %"struct.std::__1::array.18"* %32, i64 %21, i32 0, i64 %27
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 151
  br i1 %35, label %36, label %62

36:                                               ; preds = %26
  %37 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %15, align 8
  %38 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %37, i64 %21, i32 0, i64 %27
  %39 = load float, float* %38, align 4
  %40 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %16, align 8
  %41 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %40, i64 %21, i32 0, i64 %27
  %42 = load float, float* %41, align 4
  %43 = fcmp ogt float %39, %42
  br i1 %43, label %44, label %54

44:                                               ; preds = %36
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17)
  %45 = fmul float %39, 0x3FEF0A3D80000000
  store float %45, float* %2, align 4
  %46 = fcmp olt float %42, %45
  %47 = select i1 %46, float* %2, float* %41
  %48 = bitcast float* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = bitcast float* %38 to i32*
  store i32 %49, i32* %50, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17)
  %51 = load %"struct.std::__1::array.18"*, %"struct.std::__1::array.18"** %14, align 8
  %52 = getelementptr inbounds %"struct.std::__1::array.18", %"struct.std::__1::array.18"* %51, i64 %21, i32 0, i64 %27
  %53 = load i32, i32* %52, align 4
  br label %54

54:                                               ; preds = %44, %36
  %55 = phi i32 [ %53, %44 ], [ %34, %36 ]
  %56 = icmp slt i32 %55, 1
  br i1 %56, label %57, label %62

57:                                               ; preds = %54
  %58 = load %"struct.std::__1::array.3"*, %"struct.std::__1::array.3"** %18, align 8
  %59 = getelementptr inbounds %"struct.std::__1::array.3", %"struct.std::__1::array.3"* %58, i64 %21, i32 0, i64 %27
  store i8 1, i8* %59, align 1
  %60 = load %"struct.std::__1::array.18"*, %"struct.std::__1::array.18"** %14, align 8
  %61 = getelementptr inbounds %"struct.std::__1::array.18", %"struct.std::__1::array.18"* %60, i64 %21, i32 0, i64 %27
  store i32 0, i32* %61, align 4
  br label %62

62:                                               ; preds = %26, %57, %54
  %63 = add nuw nsw i64 %27, 1
  %64 = icmp eq i64 %63, 64
  br i1 %64, label %23, label %26
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden void @_ZNK6webrtc20SubbandErleEstimator4DumpERKNSt3__110unique_ptrINS_13ApmDataDumperENS1_14default_deleteIS3_EEEE(%"class.webrtc::SubbandErleEstimator"* nocapture, %"class.std::__1::unique_ptr"* nocapture dereferenceable(8)) local_unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8*) local_unnamed_addr #3 comdat {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = tail call i64 @strlen(i8* %0) #11
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #12
  unreachable

10:                                               ; preds = %1
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #13
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  br label %25

20:                                               ; preds = %10
  %21 = trunc i64 %6 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = icmp eq i64 %6, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20, %12
  %26 = phi i8* [ %15, %12 ], [ %5, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %0, i64 %6, i1 false) #11
  br label %27

27:                                               ; preds = %20, %25
  %28 = phi i8* [ %5, %20 ], [ %26, %25 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 %6
  store i8 0, i8* %29, align 1
  call void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #11
  %30 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = select i1 %33, i8* %35, i8* %4
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %32 to i64
  %40 = select i1 %33, i64 %38, i64 %39
  %41 = getelementptr inbounds i8, i8* %36, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = ptrtoint i8* %36 to i64
  %44 = icmp slt i64 %40, 7
  br i1 %44, label %63, label %45

45:                                               ; preds = %27, %58
  %46 = phi i64 [ %61, %58 ], [ %40, %27 ]
  %47 = phi i8* [ %59, %58 ], [ %36, %27 ]
  %48 = add nsw i64 %46, -6
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %45
  %51 = call i8* @memchr(i8* %47, i32 69, i64 %48) #11
  %52 = icmp eq i8* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %50
  %54 = call i32 @bcmp(i8* nonnull %51, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64 7) #11
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = ptrtoint i8* %51 to i64
  br label %63

58:                                               ; preds = %53
  %59 = getelementptr inbounds i8, i8* %51, i64 1
  %60 = ptrtoint i8* %59 to i64
  %61 = sub i64 %42, %60
  %62 = icmp slt i64 %61, 7
  br i1 %62, label %63, label %45

63:                                               ; preds = %58, %50, %45, %56, %27
  %64 = phi i64 [ %42, %27 ], [ %57, %56 ], [ %42, %45 ], [ %42, %50 ], [ %42, %58 ]
  %65 = phi i8* [ %41, %27 ], [ %51, %56 ], [ %41, %45 ], [ %41, %50 ], [ %41, %58 ]
  %66 = icmp ne i8* %65, %41
  %67 = icmp eq i64 %64, %43
  %68 = and i1 %67, %66
  br i1 %33, label %69, label %70

69:                                               ; preds = %63
  call void @_ZdlPv(i8* %35) #13
  br label %70

70:                                               ; preds = %63, %69
  %71 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #13
  br label %78

78:                                               ; preds = %70, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret i1 %68
}

declare void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN6webrtc12_GLOBAL__N_115SetMaxErleBandsEff: argument 0"}
!5 = distinct !{!5, !"_ZN6webrtc12_GLOBAL__N_115SetMaxErleBandsEff"}
!6 = !{!7}
!7 = distinct !{!7, !8}
!8 = distinct !{!8, !"LVerDomain"}
!9 = !{!10}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !12}
!21 = distinct !{!21, !14}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !12}
!28 = distinct !{!28, !14}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !12}
!35 = distinct !{!35, !14}
!36 = !{!37}
!37 = distinct !{!37, !38}
!38 = distinct !{!38, !"LVerDomain"}
!39 = !{!40}
!40 = distinct !{!40, !38}
!41 = distinct !{!41, !12}
!42 = distinct !{!42, !14}
