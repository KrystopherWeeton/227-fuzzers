; ModuleID = '../../third_party/pdfium/xfa/fxfa/parser/cxfa_arraynodelist.cpp'
source_filename = "../../third_party/pdfium/xfa/fxfa/parser/cxfa_arraynodelist.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CXFA_ArrayNodeList = type { %class.CXFA_TreeList, %"class.std::__1::vector" }
%class.CXFA_TreeList = type { %class.CXFA_List }
%class.CXFA_List = type { %class.CXFA_Object }
%class.CXFA_Object = type { i32 (...)**, i32, i16, %"class.fxcrt::StringViewTemplate", i32, %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.0" }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.0" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"*, %"class.std::__1::__compressed_pair" }
%"class.cppgc::internal::BasicMember.1" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::BasicMember.1"* }
%class.CXFA_Document = type opaque
%"class.cppgc::Visitor" = type { i32 (...)** }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %class.CXFA_Node**, %class.CXFA_Node**, %"class.std::__1::__compressed_pair.12" }
%class.CXFA_Node = type { %class.CXFA_Object, %"class.fxjs::GCedTreeNodeMixin", i32, i8, i8, i8, %"class.pdfium::span.5", %"class.pdfium::span.7", i32, %"class.fxcrt::UnownedPtr.9", i8, i8, i8, i32, %"class.cppgc::internal::BasicMember.1", %"class.std::__1::vector", %"class.cppgc::internal::BasicMember.10", %"class.cppgc::internal::BasicMember.11" }
%"class.fxjs::GCedTreeNodeMixin" = type { %"class.cppgc::GarbageCollectedMixin", %"class.fxcrt::TreeNode" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.fxcrt::TreeNode" = type { i32 (...)**, %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1" }
%"class.pdfium::span.5" = type { %"class.fxcrt::UnownedPtr.6", i64 }
%"class.fxcrt::UnownedPtr.6" = type { %"struct.CXFA_Node::PropertyData"* }
%"struct.CXFA_Node::PropertyData" = type { i16, i8, i8 }
%"class.pdfium::span.7" = type { %"class.fxcrt::UnownedPtr.8", i64 }
%"class.fxcrt::UnownedPtr.8" = type { %"struct.CXFA_Node::AttributeData"* }
%"struct.CXFA_Node::AttributeData" = type { i16, i8, i8* }
%"class.fxcrt::UnownedPtr.9" = type { %class.CFX_XMLNode* }
%class.CFX_XMLNode = type opaque
%"class.cppgc::internal::BasicMember.10" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.11" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %class.CXFA_Node** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__split_buffer" = type { %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::allocator"* }
%"class.std::__1::allocator" = type { i8 }
%"struct.cppgc::internal::CagedHeapLocalData" = type { i8, %"class.cppgc::internal::HeapBase"* }
%"class.cppgc::internal::HeapBase" = type opaque

$_ZNSt3__16vectorIN5cppgc8internal11BasicMemberI9CXFA_NodeNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_9allocatorIS8_EEE6insertENS_11__wrap_iterIPKS8_EEOS8_ = comdat any

$_ZN5cppgc8internal14TraceTraitBaseI9CXFA_NodeE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNSt3__114__split_bufferIN5cppgc8internal11BasicMemberI9CXFA_NodeNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEERNS_9allocatorIS8_EEE9push_backEOS8_ = comdat any

@_ZTV18CXFA_ArrayNodeList = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CXFA_ArrayNodeList*)* @_ZN18CXFA_ArrayNodeListD2Ev to i8*), i8* bitcast (void (%class.CXFA_ArrayNodeList*)* @_ZN18CXFA_ArrayNodeListD0Ev to i8*), i8* bitcast (void (%class.CXFA_ArrayNodeList*, %"class.cppgc::Visitor"*)* @_ZNK18CXFA_ArrayNodeList5TraceEPN5cppgc7VisitorE to i8*), i8* bitcast (i64 (%class.CXFA_ArrayNodeList*)* @_ZN18CXFA_ArrayNodeList9GetLengthEv to i8*), i8* bitcast (void (%class.CXFA_ArrayNodeList*, %class.CXFA_Node*)* @_ZN18CXFA_ArrayNodeList6AppendEP9CXFA_Node to i8*), i8* bitcast (i1 (%class.CXFA_ArrayNodeList*, %class.CXFA_Node*, %class.CXFA_Node*)* @_ZN18CXFA_ArrayNodeList6InsertEP9CXFA_NodeS1_ to i8*), i8* bitcast (void (%class.CXFA_ArrayNodeList*, %class.CXFA_Node*)* @_ZN18CXFA_ArrayNodeList6RemoveEP9CXFA_Node to i8*), i8* bitcast (%class.CXFA_Node* (%class.CXFA_ArrayNodeList*, i64)* @_ZN18CXFA_ArrayNodeList4ItemEm to i8*)] }, align 8

@_ZN18CXFA_ArrayNodeListC1EP13CXFA_Document = hidden unnamed_addr alias void (%class.CXFA_ArrayNodeList*, %class.CXFA_Document*), void (%class.CXFA_ArrayNodeList*, %class.CXFA_Document*)* @_ZN18CXFA_ArrayNodeListC2EP13CXFA_Document
@_ZN18CXFA_ArrayNodeListD1Ev = hidden unnamed_addr alias void (%class.CXFA_ArrayNodeList*), void (%class.CXFA_ArrayNodeList*)* @_ZN18CXFA_ArrayNodeListD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_ArrayNodeListC2EP13CXFA_Document(%class.CXFA_ArrayNodeList*, %class.CXFA_Document*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 0
  tail call void @_ZN13CXFA_TreeListC2EP13CXFA_Document(%class.CXFA_TreeList* %3, %class.CXFA_Document* %1) #10
  %4 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV18CXFA_ArrayNodeList, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #10
  ret void
}

declare void @_ZN13CXFA_TreeListC2EP13CXFA_Document(%class.CXFA_TreeList*, %class.CXFA_Document*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_ArrayNodeListD2Ev(%class.CXFA_ArrayNodeList*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV18CXFA_ArrayNodeList, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %3, align 8
  %5 = icmp eq %"class.cppgc::internal::BasicMember.1"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %4 to i64
  %8 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.cppgc::internal::BasicMember.1"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.cppgc::internal::BasicMember.1"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 0
  tail call void @_ZN13CXFA_TreeListD2Ev(%class.CXFA_TreeList* %12) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN13CXFA_TreeListD2Ev(%class.CXFA_TreeList*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_ArrayNodeListD0Ev(%class.CXFA_ArrayNodeList*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV18CXFA_ArrayNodeList, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %3, align 8
  %5 = icmp eq %"class.cppgc::internal::BasicMember.1"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %4 to i64
  %8 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.cppgc::internal::BasicMember.1"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.cppgc::internal::BasicMember.1"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 0
  tail call void @_ZN13CXFA_TreeListD2Ev(%class.CXFA_TreeList* %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18CXFA_ArrayNodeList5TraceEPN5cppgc7VisitorE(%class.CXFA_ArrayNodeList*, %"class.cppgc::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK11CXFA_Object5TraceEPN5cppgc7VisitorE(%class.CXFA_Object* %3, %"class.cppgc::Visitor"* %1) #10
  %4 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %4, align 8
  %6 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %6, align 8
  %8 = icmp eq %"class.cppgc::internal::BasicMember.1"* %5, %7
  br i1 %8, label %24, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  br label %11

11:                                               ; preds = %21, %9
  %12 = phi %"class.cppgc::internal::BasicMember.1"* [ %5, %9 ], [ %22, %21 ]
  %13 = bitcast %"class.cppgc::internal::BasicMember.1"* %12 to i64*
  %14 = load atomic i64, i64* %13 monotonic, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = inttoptr i64 %14 to i8*
  %18 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %10, align 8
  %19 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %18, i64 4
  %20 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %19, align 8
  tail call void %20(%"class.cppgc::Visitor"* %1, i8* nonnull %17, i8* nonnull %17, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI9CXFA_NodeE5TraceEPNS_7VisitorEPKv) #10
  br label %21

21:                                               ; preds = %16, %11
  %22 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %12, i64 1
  %23 = icmp eq %"class.cppgc::internal::BasicMember.1"* %22, %7
  br i1 %23, label %24, label %11

24:                                               ; preds = %21, %2
  ret void
}

declare void @_ZNK11CXFA_Object5TraceEPN5cppgc7VisitorE(%class.CXFA_Object*, %"class.cppgc::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_ArrayNodeList16SetArrayNodeListERKNSt3__16vectorIP9CXFA_NodeNS0_9allocatorIS3_EEEE(%class.CXFA_ArrayNodeList* nocapture, %"class.std::__1::vector.3"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1, i64 0, i32 0, i32 0
  %5 = load %class.CXFA_Node**, %class.CXFA_Node*** %4, align 8
  %6 = bitcast %class.CXFA_Node** %5 to i8*
  %7 = ptrtoint %class.CXFA_Node** %5 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1, i64 0, i32 0, i32 1
  %9 = load %class.CXFA_Node**, %class.CXFA_Node*** %8, align 8
  %10 = icmp eq %class.CXFA_Node** %5, %9
  br i1 %10, label %228, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #10
  %13 = ptrtoint %class.CXFA_Node** %9 to i64
  %14 = sub i64 %13, %7
  %15 = ashr exact i64 %14, 3
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %206, label %17

17:                                               ; preds = %11
  %18 = icmp ugt i64 %15, 2305843009213693951
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %20) #12
  unreachable

21:                                               ; preds = %17
  %22 = tail call i8* @_Znwm(i64 %14) #11
  %23 = bitcast i8* %22 to %"class.cppgc::internal::BasicMember.1"*
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %25 = bitcast %"class.cppgc::internal::BasicMember.1"** %24 to i8**
  store i8* %22, i8** %25, align 8
  %26 = bitcast %"class.std::__1::vector"* %3 to i8**
  store i8* %22, i8** %26, align 8
  %27 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %23, i64 %15
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.cppgc::internal::BasicMember.1"* %27, %"class.cppgc::internal::BasicMember.1"** %28, align 8
  %29 = ptrtoint i8* %22 to i64
  %30 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %9, i64 -1
  %31 = ptrtoint %class.CXFA_Node** %30 to i64
  %32 = sub i64 %31, %7
  %33 = lshr i64 %32, 3
  %34 = add nuw nsw i64 %33, 1
  %35 = icmp ult i64 %34, 4
  br i1 %35, label %131, label %36

36:                                               ; preds = %21
  %37 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %9, i64 -1
  %38 = ptrtoint %class.CXFA_Node** %37 to i64
  %39 = sub i64 %38, %7
  %40 = lshr i64 %39, 3
  %41 = add i64 %39, 8
  %42 = and i64 %41, -8
  %43 = getelementptr i8, i8* %22, i64 %42
  %44 = add nuw nsw i64 %40, 1
  %45 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %5, i64 %44
  %46 = bitcast %class.CXFA_Node** %45 to i8*
  %47 = icmp ult i8* %22, %46
  %48 = icmp ugt i8* %43, %6
  %49 = and i1 %47, %48
  br i1 %49, label %131, label %50

50:                                               ; preds = %36
  %51 = and i64 %34, 4611686018427387900
  %52 = getelementptr %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %23, i64 %51
  %53 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %5, i64 %51
  %54 = add nsw i64 %51, -4
  %55 = lshr exact i64 %54, 2
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 3
  %58 = icmp ult i64 %54, 12
  br i1 %58, label %110, label %59

59:                                               ; preds = %50
  %60 = sub nsw i64 %56, %57
  br label %61

61:                                               ; preds = %61, %59
  %62 = phi i64 [ 0, %59 ], [ %107, %61 ]
  %63 = phi i64 [ %60, %59 ], [ %108, %61 ]
  %64 = getelementptr %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %23, i64 %62
  %65 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %5, i64 %62
  %66 = bitcast %class.CXFA_Node** %65 to <2 x i64>*
  %67 = load <2 x i64>, <2 x i64>* %66, align 8, !alias.scope !2
  %68 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %65, i64 2
  %69 = bitcast %class.CXFA_Node** %68 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8, !alias.scope !2
  %71 = bitcast %"class.cppgc::internal::BasicMember.1"* %64 to <2 x i64>*
  store <2 x i64> %67, <2 x i64>* %71, align 8, !alias.scope !5, !noalias !2
  %72 = getelementptr %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %64, i64 2
  %73 = bitcast %"class.cppgc::internal::BasicMember.1"* %72 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %73, align 8, !alias.scope !5, !noalias !2
  %74 = or i64 %62, 4
  %75 = getelementptr %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %23, i64 %74
  %76 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %5, i64 %74
  %77 = bitcast %class.CXFA_Node** %76 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8, !alias.scope !2
  %79 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %76, i64 2
  %80 = bitcast %class.CXFA_Node** %79 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 8, !alias.scope !2
  %82 = bitcast %"class.cppgc::internal::BasicMember.1"* %75 to <2 x i64>*
  store <2 x i64> %78, <2 x i64>* %82, align 8, !alias.scope !5, !noalias !2
  %83 = getelementptr %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %75, i64 2
  %84 = bitcast %"class.cppgc::internal::BasicMember.1"* %83 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %84, align 8, !alias.scope !5, !noalias !2
  %85 = or i64 %62, 8
  %86 = getelementptr %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %23, i64 %85
  %87 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %5, i64 %85
  %88 = bitcast %class.CXFA_Node** %87 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 8, !alias.scope !2
  %90 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %87, i64 2
  %91 = bitcast %class.CXFA_Node** %90 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8, !alias.scope !2
  %93 = bitcast %"class.cppgc::internal::BasicMember.1"* %86 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %93, align 8, !alias.scope !5, !noalias !2
  %94 = getelementptr %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %86, i64 2
  %95 = bitcast %"class.cppgc::internal::BasicMember.1"* %94 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %95, align 8, !alias.scope !5, !noalias !2
  %96 = or i64 %62, 12
  %97 = getelementptr %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %23, i64 %96
  %98 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %5, i64 %96
  %99 = bitcast %class.CXFA_Node** %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8, !alias.scope !2
  %101 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %98, i64 2
  %102 = bitcast %class.CXFA_Node** %101 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 8, !alias.scope !2
  %104 = bitcast %"class.cppgc::internal::BasicMember.1"* %97 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %104, align 8, !alias.scope !5, !noalias !2
  %105 = getelementptr %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %97, i64 2
  %106 = bitcast %"class.cppgc::internal::BasicMember.1"* %105 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %106, align 8, !alias.scope !5, !noalias !2
  %107 = add i64 %62, 16
  %108 = add i64 %63, -4
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %61, !llvm.loop !7

110:                                              ; preds = %61, %50
  %111 = phi i64 [ 0, %50 ], [ %107, %61 ]
  %112 = icmp eq i64 %57, 0
  br i1 %112, label %129, label %113

113:                                              ; preds = %110, %113
  %114 = phi i64 [ %126, %113 ], [ %111, %110 ]
  %115 = phi i64 [ %127, %113 ], [ %57, %110 ]
  %116 = getelementptr %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %23, i64 %114
  %117 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %5, i64 %114
  %118 = bitcast %class.CXFA_Node** %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !2
  %120 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %117, i64 2
  %121 = bitcast %class.CXFA_Node** %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !2
  %123 = bitcast %"class.cppgc::internal::BasicMember.1"* %116 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %123, align 8, !alias.scope !5, !noalias !2
  %124 = getelementptr %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %116, i64 2
  %125 = bitcast %"class.cppgc::internal::BasicMember.1"* %124 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %125, align 8, !alias.scope !5, !noalias !2
  %126 = add i64 %114, 4
  %127 = add i64 %115, -1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %113, !llvm.loop !9

129:                                              ; preds = %113, %110
  %130 = icmp eq i64 %34, %51
  br i1 %130, label %202, label %131

131:                                              ; preds = %129, %36, %21
  %132 = phi %"class.cppgc::internal::BasicMember.1"* [ %23, %36 ], [ %23, %21 ], [ %52, %129 ]
  %133 = phi %class.CXFA_Node** [ %5, %36 ], [ %5, %21 ], [ %53, %129 ]
  %134 = ptrtoint %class.CXFA_Node** %133 to i64
  %135 = getelementptr %class.CXFA_Node*, %class.CXFA_Node** %9, i64 -1
  %136 = ptrtoint %class.CXFA_Node** %135 to i64
  %137 = sub i64 %136, %134
  %138 = lshr i64 %137, 3
  %139 = add nuw nsw i64 %138, 1
  %140 = and i64 %139, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %131, %142
  %143 = phi %"class.cppgc::internal::BasicMember.1"* [ %150, %142 ], [ %132, %131 ]
  %144 = phi %class.CXFA_Node** [ %149, %142 ], [ %133, %131 ]
  %145 = phi i64 [ %151, %142 ], [ %140, %131 ]
  %146 = bitcast %"class.cppgc::internal::BasicMember.1"* %143 to i64*
  %147 = bitcast %class.CXFA_Node** %144 to i64*
  %148 = load i64, i64* %147, align 8
  store i64 %148, i64* %146, align 8
  %149 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %144, i64 1
  %150 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %143, i64 1
  %151 = add i64 %145, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !11

153:                                              ; preds = %142, %131
  %154 = phi %"class.cppgc::internal::BasicMember.1"* [ undef, %131 ], [ %150, %142 ]
  %155 = phi %"class.cppgc::internal::BasicMember.1"* [ %132, %131 ], [ %150, %142 ]
  %156 = phi %class.CXFA_Node** [ %133, %131 ], [ %149, %142 ]
  %157 = icmp ult i64 %137, 56
  br i1 %157, label %202, label %158

158:                                              ; preds = %153, %158
  %159 = phi %"class.cppgc::internal::BasicMember.1"* [ %200, %158 ], [ %155, %153 ]
  %160 = phi %class.CXFA_Node** [ %199, %158 ], [ %156, %153 ]
  %161 = bitcast %"class.cppgc::internal::BasicMember.1"* %159 to i64*
  %162 = bitcast %class.CXFA_Node** %160 to i64*
  %163 = load i64, i64* %162, align 8
  store i64 %163, i64* %161, align 8
  %164 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %160, i64 1
  %165 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %159, i64 1
  %166 = bitcast %"class.cppgc::internal::BasicMember.1"* %165 to i64*
  %167 = bitcast %class.CXFA_Node** %164 to i64*
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %166, align 8
  %169 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %160, i64 2
  %170 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %159, i64 2
  %171 = bitcast %"class.cppgc::internal::BasicMember.1"* %170 to i64*
  %172 = bitcast %class.CXFA_Node** %169 to i64*
  %173 = load i64, i64* %172, align 8
  store i64 %173, i64* %171, align 8
  %174 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %160, i64 3
  %175 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %159, i64 3
  %176 = bitcast %"class.cppgc::internal::BasicMember.1"* %175 to i64*
  %177 = bitcast %class.CXFA_Node** %174 to i64*
  %178 = load i64, i64* %177, align 8
  store i64 %178, i64* %176, align 8
  %179 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %160, i64 4
  %180 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %159, i64 4
  %181 = bitcast %"class.cppgc::internal::BasicMember.1"* %180 to i64*
  %182 = bitcast %class.CXFA_Node** %179 to i64*
  %183 = load i64, i64* %182, align 8
  store i64 %183, i64* %181, align 8
  %184 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %160, i64 5
  %185 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %159, i64 5
  %186 = bitcast %"class.cppgc::internal::BasicMember.1"* %185 to i64*
  %187 = bitcast %class.CXFA_Node** %184 to i64*
  %188 = load i64, i64* %187, align 8
  store i64 %188, i64* %186, align 8
  %189 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %160, i64 6
  %190 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %159, i64 6
  %191 = bitcast %"class.cppgc::internal::BasicMember.1"* %190 to i64*
  %192 = bitcast %class.CXFA_Node** %189 to i64*
  %193 = load i64, i64* %192, align 8
  store i64 %193, i64* %191, align 8
  %194 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %160, i64 7
  %195 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %159, i64 7
  %196 = bitcast %"class.cppgc::internal::BasicMember.1"* %195 to i64*
  %197 = bitcast %class.CXFA_Node** %194 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = getelementptr inbounds %class.CXFA_Node*, %class.CXFA_Node** %160, i64 8
  %200 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %159, i64 8
  %201 = icmp eq %class.CXFA_Node** %199, %9
  br i1 %201, label %202, label %158, !llvm.loop !12

202:                                              ; preds = %153, %158, %129
  %203 = phi %"class.cppgc::internal::BasicMember.1"* [ %52, %129 ], [ %154, %153 ], [ %200, %158 ]
  %204 = bitcast %"class.cppgc::internal::BasicMember.1"** %24 to i64*
  %205 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %203 to i64
  store i64 %205, i64* %204, align 8
  br label %206

206:                                              ; preds = %11, %202
  %207 = phi i64 [ 0, %11 ], [ %205, %202 ]
  %208 = phi i64 [ 0, %11 ], [ %29, %202 ]
  %209 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1
  %210 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %209, i64 0, i32 0, i32 0
  %211 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %210, align 8
  %212 = icmp eq %"class.cppgc::internal::BasicMember.1"* %211, null
  br i1 %212, label %219, label %213

213:                                              ; preds = %206
  %214 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %211 to i64
  %215 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1, i32 0, i32 1
  %216 = bitcast %"class.cppgc::internal::BasicMember.1"** %215 to i64*
  store i64 %214, i64* %216, align 8
  %217 = bitcast %"class.cppgc::internal::BasicMember.1"* %211 to i8*
  tail call void @_ZdlPv(i8* %217) #11
  %218 = bitcast %"class.std::__1::vector"* %209 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %218, i8 0, i64 24, i1 false) #10
  br label %219

219:                                              ; preds = %213, %206
  %220 = bitcast %"class.std::__1::vector"* %209 to i64*
  store i64 %208, i64* %220, align 8
  %221 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1, i32 0, i32 1
  %222 = bitcast %"class.cppgc::internal::BasicMember.1"** %221 to i64*
  store i64 %207, i64* %222, align 8
  %223 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %224 = bitcast %"class.cppgc::internal::BasicMember.1"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %227 = bitcast %"class.cppgc::internal::BasicMember.1"** %226 to i64*
  store i64 %225, i64* %227, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  br label %228

228:                                              ; preds = %219, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN18CXFA_ArrayNodeList9GetLengthEv(%class.CXFA_ArrayNodeList* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1
  %3 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"class.cppgc::internal::BasicMember.1"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_ArrayNodeList6AppendEP9CXFA_Node(%class.CXFA_ArrayNodeList*, %class.CXFA_Node*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1
  %4 = ptrtoint %class.CXFA_Node* %1 to i64
  %5 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %5, align 8
  %7 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %7, align 8
  %9 = icmp ult %"class.cppgc::internal::BasicMember.1"* %6, %8
  %10 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %8 to i64
  br i1 %9, label %11, label %16

11:                                               ; preds = %2
  %12 = bitcast %"class.cppgc::internal::BasicMember.1"* %6 to i64*
  store i64 %4, i64* %12, align 8
  %13 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %6, i64 1
  %14 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %13 to i64
  %15 = bitcast %"class.cppgc::internal::BasicMember.1"** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %137

16:                                               ; preds = %2
  %17 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %6 to i64
  %18 = bitcast %"class.cppgc::internal::BasicMember.1"** %5 to i64*
  %19 = bitcast %"class.std::__1::vector"* %3 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #12
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.cppgc::internal::BasicMember.1"** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #12
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #11
  %44 = bitcast i8* %43 to %"class.cppgc::internal::BasicMember.1"*
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi %"class.cppgc::internal::BasicMember.1"* [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %47, i64 %22
  %49 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %47, i64 %46
  %50 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %49 to i64
  %51 = bitcast %"class.cppgc::internal::BasicMember.1"* %48 to i64*
  store i64 %4, i64* %51, align 8
  %52 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %48, i64 1
  %53 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %55 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %54, align 8
  %56 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %55 to i64
  %57 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %5, align 8
  %58 = icmp eq %"class.cppgc::internal::BasicMember.1"* %57, %55
  br i1 %58, label %130, label %59

59:                                               ; preds = %45
  %60 = getelementptr %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %57, i64 -1, i32 0, i32 0
  %61 = ptrtoint i8** %60 to i64
  %62 = sub i64 %61, %56
  %63 = lshr i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 7
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %78, label %67

67:                                               ; preds = %59, %67
  %68 = phi %"class.cppgc::internal::BasicMember.1"* [ %71, %67 ], [ %48, %59 ]
  %69 = phi %"class.cppgc::internal::BasicMember.1"* [ %72, %67 ], [ %57, %59 ]
  %70 = phi i64 [ %76, %67 ], [ %65, %59 ]
  %71 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %68, i64 -1
  %72 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %69, i64 -1
  %73 = bitcast %"class.cppgc::internal::BasicMember.1"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.cppgc::internal::BasicMember.1"* %71 to i64*
  store i64 %74, i64* %75, align 8
  store atomic i64 0, i64* %73 monotonic, align 8
  %76 = add i64 %70, -1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %67, !llvm.loop !13

78:                                               ; preds = %67, %59
  %79 = phi %"class.cppgc::internal::BasicMember.1"* [ undef, %59 ], [ %71, %67 ]
  %80 = phi %"class.cppgc::internal::BasicMember.1"* [ %48, %59 ], [ %71, %67 ]
  %81 = phi %"class.cppgc::internal::BasicMember.1"* [ %57, %59 ], [ %72, %67 ]
  %82 = icmp ult i64 %62, 56
  br i1 %82, label %127, label %83

83:                                               ; preds = %78, %83
  %84 = phi %"class.cppgc::internal::BasicMember.1"* [ %121, %83 ], [ %80, %78 ]
  %85 = phi %"class.cppgc::internal::BasicMember.1"* [ %122, %83 ], [ %81, %78 ]
  %86 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %84, i64 -1
  %87 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %85, i64 -1
  %88 = bitcast %"class.cppgc::internal::BasicMember.1"* %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.cppgc::internal::BasicMember.1"* %86 to i64*
  store i64 %89, i64* %90, align 8
  store atomic i64 0, i64* %88 monotonic, align 8
  %91 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %84, i64 -2
  %92 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %85, i64 -2
  %93 = bitcast %"class.cppgc::internal::BasicMember.1"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.cppgc::internal::BasicMember.1"* %91 to i64*
  store i64 %94, i64* %95, align 8
  store atomic i64 0, i64* %93 monotonic, align 8
  %96 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %84, i64 -3
  %97 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %85, i64 -3
  %98 = bitcast %"class.cppgc::internal::BasicMember.1"* %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.cppgc::internal::BasicMember.1"* %96 to i64*
  store i64 %99, i64* %100, align 8
  store atomic i64 0, i64* %98 monotonic, align 8
  %101 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %84, i64 -4
  %102 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %85, i64 -4
  %103 = bitcast %"class.cppgc::internal::BasicMember.1"* %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.cppgc::internal::BasicMember.1"* %101 to i64*
  store i64 %104, i64* %105, align 8
  store atomic i64 0, i64* %103 monotonic, align 8
  %106 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %84, i64 -5
  %107 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %85, i64 -5
  %108 = bitcast %"class.cppgc::internal::BasicMember.1"* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.cppgc::internal::BasicMember.1"* %106 to i64*
  store i64 %109, i64* %110, align 8
  store atomic i64 0, i64* %108 monotonic, align 8
  %111 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %84, i64 -6
  %112 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %85, i64 -6
  %113 = bitcast %"class.cppgc::internal::BasicMember.1"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.cppgc::internal::BasicMember.1"* %111 to i64*
  store i64 %114, i64* %115, align 8
  store atomic i64 0, i64* %113 monotonic, align 8
  %116 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %84, i64 -7
  %117 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %85, i64 -7
  %118 = bitcast %"class.cppgc::internal::BasicMember.1"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.cppgc::internal::BasicMember.1"* %116 to i64*
  store i64 %119, i64* %120, align 8
  store atomic i64 0, i64* %118 monotonic, align 8
  %121 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %84, i64 -8
  %122 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %85, i64 -8
  %123 = bitcast %"class.cppgc::internal::BasicMember.1"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.cppgc::internal::BasicMember.1"* %121 to i64*
  store i64 %124, i64* %125, align 8
  store atomic i64 0, i64* %123 monotonic, align 8
  %126 = icmp eq %"class.cppgc::internal::BasicMember.1"* %122, %55
  br i1 %126, label %127, label %83

127:                                              ; preds = %83, %78
  %128 = phi %"class.cppgc::internal::BasicMember.1"* [ %79, %78 ], [ %121, %83 ]
  %129 = load i64, i64* %19, align 8
  br label %130

130:                                              ; preds = %45, %127
  %131 = phi %"class.cppgc::internal::BasicMember.1"* [ %128, %127 ], [ %48, %45 ]
  %132 = phi i64 [ %129, %127 ], [ %56, %45 ]
  %133 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %131 to i64
  store i64 %133, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %134 = icmp eq i64 %132, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %130
  %136 = inttoptr i64 %132 to i8*
  tail call void @_ZdlPv(i8* %136) #11
  br label %137

137:                                              ; preds = %135, %130, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CXFA_ArrayNodeList6InsertEP9CXFA_NodeS1_(%class.CXFA_ArrayNodeList*, %class.CXFA_Node*, %class.CXFA_Node*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.cppgc::internal::BasicMember.1", align 8
  %5 = icmp eq %class.CXFA_Node* %2, null
  %6 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1
  br i1 %5, label %7, label %141

7:                                                ; preds = %3
  %8 = ptrtoint %class.CXFA_Node* %1 to i64
  %9 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %9, align 8
  %11 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %12 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %11, align 8
  %13 = icmp ult %"class.cppgc::internal::BasicMember.1"* %10, %12
  %14 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %12 to i64
  br i1 %13, label %15, label %20

15:                                               ; preds = %7
  %16 = bitcast %"class.cppgc::internal::BasicMember.1"* %10 to i64*
  store i64 %8, i64* %16, align 8
  %17 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %10, i64 1
  %18 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %17 to i64
  %19 = bitcast %"class.cppgc::internal::BasicMember.1"** %9 to i64*
  store i64 %18, i64* %19, align 8
  br label %162

20:                                               ; preds = %7
  %21 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %10 to i64
  %22 = bitcast %"class.cppgc::internal::BasicMember.1"** %9 to i64*
  %23 = bitcast %"class.std::__1::vector"* %6 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %21, %24
  %26 = ashr exact i64 %25, 3
  %27 = add nsw i64 %26, 1
  %28 = icmp ugt i64 %27, 2305843009213693951
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %30) #12
  unreachable

31:                                               ; preds = %20
  %32 = bitcast %"class.cppgc::internal::BasicMember.1"** %11 to i64*
  %33 = sub i64 %14, %24
  %34 = ashr exact i64 %33, 3
  %35 = icmp ult i64 %34, 1152921504606846975
  br i1 %35, label %36, label %44

36:                                               ; preds = %31
  %37 = ashr exact i64 %33, 2
  %38 = icmp ult i64 %37, %27
  %39 = select i1 %38, i64 %27, i64 %37
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %36
  %42 = icmp ugt i64 %39, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  tail call void @abort() #12
  unreachable

44:                                               ; preds = %41, %31
  %45 = phi i64 [ %39, %41 ], [ 2305843009213693951, %31 ]
  %46 = shl i64 %45, 3
  %47 = tail call i8* @_Znwm(i64 %46) #11
  %48 = bitcast i8* %47 to %"class.cppgc::internal::BasicMember.1"*
  br label %49

49:                                               ; preds = %44, %36
  %50 = phi i64 [ %45, %44 ], [ 0, %36 ]
  %51 = phi %"class.cppgc::internal::BasicMember.1"* [ %48, %44 ], [ null, %36 ]
  %52 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %51, i64 %26
  %53 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %51, i64 %50
  %54 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %53 to i64
  %55 = bitcast %"class.cppgc::internal::BasicMember.1"* %52 to i64*
  store i64 %8, i64* %55, align 8
  %56 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %52, i64 1
  %57 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %59 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %58, align 8
  %60 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %59 to i64
  %61 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %9, align 8
  %62 = icmp eq %"class.cppgc::internal::BasicMember.1"* %61, %59
  br i1 %62, label %134, label %63

63:                                               ; preds = %49
  %64 = getelementptr %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %61, i64 -1, i32 0, i32 0
  %65 = ptrtoint i8** %64 to i64
  %66 = sub i64 %65, %60
  %67 = lshr i64 %66, 3
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 7
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %82, label %71

71:                                               ; preds = %63, %71
  %72 = phi %"class.cppgc::internal::BasicMember.1"* [ %75, %71 ], [ %52, %63 ]
  %73 = phi %"class.cppgc::internal::BasicMember.1"* [ %76, %71 ], [ %61, %63 ]
  %74 = phi i64 [ %80, %71 ], [ %69, %63 ]
  %75 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %72, i64 -1
  %76 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %73, i64 -1
  %77 = bitcast %"class.cppgc::internal::BasicMember.1"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.cppgc::internal::BasicMember.1"* %75 to i64*
  store i64 %78, i64* %79, align 8
  store atomic i64 0, i64* %77 monotonic, align 8
  %80 = add i64 %74, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %71, !llvm.loop !14

82:                                               ; preds = %71, %63
  %83 = phi %"class.cppgc::internal::BasicMember.1"* [ undef, %63 ], [ %75, %71 ]
  %84 = phi %"class.cppgc::internal::BasicMember.1"* [ %52, %63 ], [ %75, %71 ]
  %85 = phi %"class.cppgc::internal::BasicMember.1"* [ %61, %63 ], [ %76, %71 ]
  %86 = icmp ult i64 %66, 56
  br i1 %86, label %131, label %87

87:                                               ; preds = %82, %87
  %88 = phi %"class.cppgc::internal::BasicMember.1"* [ %125, %87 ], [ %84, %82 ]
  %89 = phi %"class.cppgc::internal::BasicMember.1"* [ %126, %87 ], [ %85, %82 ]
  %90 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %88, i64 -1
  %91 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %89, i64 -1
  %92 = bitcast %"class.cppgc::internal::BasicMember.1"* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.cppgc::internal::BasicMember.1"* %90 to i64*
  store i64 %93, i64* %94, align 8
  store atomic i64 0, i64* %92 monotonic, align 8
  %95 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %88, i64 -2
  %96 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %89, i64 -2
  %97 = bitcast %"class.cppgc::internal::BasicMember.1"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.cppgc::internal::BasicMember.1"* %95 to i64*
  store i64 %98, i64* %99, align 8
  store atomic i64 0, i64* %97 monotonic, align 8
  %100 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %88, i64 -3
  %101 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %89, i64 -3
  %102 = bitcast %"class.cppgc::internal::BasicMember.1"* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.cppgc::internal::BasicMember.1"* %100 to i64*
  store i64 %103, i64* %104, align 8
  store atomic i64 0, i64* %102 monotonic, align 8
  %105 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %88, i64 -4
  %106 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %89, i64 -4
  %107 = bitcast %"class.cppgc::internal::BasicMember.1"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.cppgc::internal::BasicMember.1"* %105 to i64*
  store i64 %108, i64* %109, align 8
  store atomic i64 0, i64* %107 monotonic, align 8
  %110 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %88, i64 -5
  %111 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %89, i64 -5
  %112 = bitcast %"class.cppgc::internal::BasicMember.1"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.cppgc::internal::BasicMember.1"* %110 to i64*
  store i64 %113, i64* %114, align 8
  store atomic i64 0, i64* %112 monotonic, align 8
  %115 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %88, i64 -6
  %116 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %89, i64 -6
  %117 = bitcast %"class.cppgc::internal::BasicMember.1"* %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.cppgc::internal::BasicMember.1"* %115 to i64*
  store i64 %118, i64* %119, align 8
  store atomic i64 0, i64* %117 monotonic, align 8
  %120 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %88, i64 -7
  %121 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %89, i64 -7
  %122 = bitcast %"class.cppgc::internal::BasicMember.1"* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.cppgc::internal::BasicMember.1"* %120 to i64*
  store i64 %123, i64* %124, align 8
  store atomic i64 0, i64* %122 monotonic, align 8
  %125 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %88, i64 -8
  %126 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %89, i64 -8
  %127 = bitcast %"class.cppgc::internal::BasicMember.1"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.cppgc::internal::BasicMember.1"* %125 to i64*
  store i64 %128, i64* %129, align 8
  store atomic i64 0, i64* %127 monotonic, align 8
  %130 = icmp eq %"class.cppgc::internal::BasicMember.1"* %126, %59
  br i1 %130, label %131, label %87

131:                                              ; preds = %87, %82
  %132 = phi %"class.cppgc::internal::BasicMember.1"* [ %83, %82 ], [ %125, %87 ]
  %133 = load i64, i64* %23, align 8
  br label %134

134:                                              ; preds = %49, %131
  %135 = phi %"class.cppgc::internal::BasicMember.1"* [ %132, %131 ], [ %52, %49 ]
  %136 = phi i64 [ %133, %131 ], [ %60, %49 ]
  %137 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %135 to i64
  store i64 %137, i64* %23, align 8
  store i64 %57, i64* %22, align 8
  store i64 %54, i64* %32, align 8
  %138 = icmp eq i64 %136, 0
  br i1 %138, label %162, label %139

139:                                              ; preds = %134
  %140 = inttoptr i64 %136 to i8*
  tail call void @_ZdlPv(i8* %140) #11
  br label %162

141:                                              ; preds = %3
  %142 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %143 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %142, align 8
  %144 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1, i32 0, i32 1
  %145 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %144, align 8
  %146 = icmp eq %"class.cppgc::internal::BasicMember.1"* %143, %145
  br i1 %146, label %155, label %147

147:                                              ; preds = %141, %152
  %148 = phi %"class.cppgc::internal::BasicMember.1"* [ %153, %152 ], [ %143, %141 ]
  %149 = bitcast %"class.cppgc::internal::BasicMember.1"* %148 to %class.CXFA_Node**
  %150 = load %class.CXFA_Node*, %class.CXFA_Node** %149, align 8
  %151 = icmp eq %class.CXFA_Node* %150, %2
  br i1 %151, label %155, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %148, i64 1
  %154 = icmp eq %"class.cppgc::internal::BasicMember.1"* %153, %145
  br i1 %154, label %162, label %147

155:                                              ; preds = %147, %141
  %156 = phi %"class.cppgc::internal::BasicMember.1"* [ %143, %141 ], [ %148, %147 ]
  %157 = icmp eq %"class.cppgc::internal::BasicMember.1"* %156, %145
  br i1 %157, label %162, label %158

158:                                              ; preds = %155
  %159 = bitcast %"class.cppgc::internal::BasicMember.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #10
  %160 = bitcast %"class.cppgc::internal::BasicMember.1"* %4 to %class.CXFA_Node**
  store %class.CXFA_Node* %1, %class.CXFA_Node** %160, align 8
  %161 = call %"class.cppgc::internal::BasicMember.1"* @_ZNSt3__16vectorIN5cppgc8internal11BasicMemberI9CXFA_NodeNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_9allocatorIS8_EEE6insertENS_11__wrap_iterIPKS8_EEOS8_(%"class.std::__1::vector"* %6, %"class.cppgc::internal::BasicMember.1"* %156, %"class.cppgc::internal::BasicMember.1"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #10
  br label %162

162:                                              ; preds = %152, %158, %155, %15, %134, %139
  %163 = phi i1 [ true, %139 ], [ true, %134 ], [ true, %15 ], [ true, %158 ], [ false, %155 ], [ false, %152 ]
  ret i1 %163
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.cppgc::internal::BasicMember.1"* @_ZNSt3__16vectorIN5cppgc8internal11BasicMemberI9CXFA_NodeNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEENS_9allocatorIS8_EEE6insertENS_11__wrap_iterIPKS8_EEOS8_(%"class.std::__1::vector"*, %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %9, align 8
  %11 = icmp ult %"class.cppgc::internal::BasicMember.1"* %8, %10
  %12 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %8 to i64
  %13 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %10 to i64
  br i1 %11, label %14, label %148

14:                                               ; preds = %3
  %15 = icmp eq %"class.cppgc::internal::BasicMember.1"* %8, %1
  br i1 %15, label %16, label %23

16:                                               ; preds = %14
  %17 = bitcast %"class.cppgc::internal::BasicMember.1"* %2 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.cppgc::internal::BasicMember.1"* %1 to i64*
  store i64 %18, i64* %19, align 8
  store atomic i64 0, i64* %17 monotonic, align 8
  %20 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %1, i64 1
  %21 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %20 to i64
  %22 = bitcast %"class.cppgc::internal::BasicMember.1"** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %360

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %1, i64 1
  %25 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %24 to i64
  %26 = sub i64 %12, %25
  %27 = ashr exact i64 %26, 3
  %28 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %1, i64 %27
  %29 = bitcast %"class.cppgc::internal::BasicMember.1"** %7 to i64*
  %30 = icmp ult %"class.cppgc::internal::BasicMember.1"* %28, %8
  br i1 %30, label %31, label %61

31:                                               ; preds = %23
  %32 = sub nsw i64 0, %27
  %33 = getelementptr %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %8, i64 %32, i32 0, i32 0
  %34 = bitcast i8** %33 to i8*
  %35 = xor i64 %4, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = lshr i64 %37, 3
  %39 = add nuw nsw i64 %38, 1
  %40 = and i64 %39, 7
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %53, label %42

42:                                               ; preds = %31, %42
  %43 = phi %"class.cppgc::internal::BasicMember.1"* [ %50, %42 ], [ %8, %31 ]
  %44 = phi %"class.cppgc::internal::BasicMember.1"* [ %49, %42 ], [ %28, %31 ]
  %45 = phi i64 [ %51, %42 ], [ %40, %31 ]
  %46 = bitcast %"class.cppgc::internal::BasicMember.1"* %44 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.cppgc::internal::BasicMember.1"* %43 to i64*
  store i64 %47, i64* %48, align 8
  store atomic i64 0, i64* %46 monotonic, align 8
  %49 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %44, i64 1
  %50 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %43, i64 1
  %51 = add i64 %45, -1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %42, !llvm.loop !15

53:                                               ; preds = %42, %31
  %54 = phi %"class.cppgc::internal::BasicMember.1"* [ %8, %31 ], [ %50, %42 ]
  %55 = phi %"class.cppgc::internal::BasicMember.1"* [ %28, %31 ], [ %49, %42 ]
  %56 = phi %"class.cppgc::internal::BasicMember.1"* [ undef, %31 ], [ %50, %42 ]
  %57 = icmp ult i8* %36, inttoptr (i64 56 to i8*)
  br i1 %57, label %58, label %87

58:                                               ; preds = %87, %53
  %59 = phi %"class.cppgc::internal::BasicMember.1"* [ %56, %53 ], [ %129, %87 ]
  %60 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %59 to i64
  br label %61

61:                                               ; preds = %58, %23
  %62 = phi i64 [ %60, %58 ], [ %12, %23 ]
  store i64 %62, i64* %29, align 8
  %63 = icmp eq i64 %26, 0
  br i1 %63, label %131, label %64

64:                                               ; preds = %61, %84
  %65 = phi %"class.cppgc::internal::BasicMember.1"* [ %68, %84 ], [ %8, %61 ]
  %66 = phi %"class.cppgc::internal::BasicMember.1"* [ %67, %84 ], [ %28, %61 ]
  %67 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %66, i64 -1
  %68 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %65, i64 -1
  %69 = bitcast %"class.cppgc::internal::BasicMember.1"* %67 to %class.CXFA_Node**
  %70 = load %class.CXFA_Node*, %class.CXFA_Node** %69, align 8
  %71 = ptrtoint %class.CXFA_Node* %70 to i64
  %72 = bitcast %"class.cppgc::internal::BasicMember.1"* %68 to i64*
  store atomic i64 %71, i64* %72 monotonic, align 8
  %73 = bitcast %class.CXFA_Node* %70 to i8*
  %74 = and i64 %71, -4294967296
  %75 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %68 to i64
  %76 = sub i64 %75, %74
  %77 = icmp ult i64 %76, 4294967297
  br i1 %77, label %78, label %84

78:                                               ; preds = %64
  %79 = inttoptr i64 %74 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %80 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %79, i64 0, i32 0
  %81 = load i8, i8* %80, align 536870912, !range !16
  %82 = icmp eq i8 %81, 1
  br i1 %82, label %83, label %84, !prof !17

83:                                               ; preds = %78
  tail call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %73) #10
  br label %84

84:                                               ; preds = %83, %78, %64
  %85 = bitcast %"class.cppgc::internal::BasicMember.1"* %67 to i64*
  store atomic i64 0, i64* %85 monotonic, align 8
  %86 = icmp eq %"class.cppgc::internal::BasicMember.1"* %67, %1
  br i1 %86, label %131, label %64

87:                                               ; preds = %53, %87
  %88 = phi %"class.cppgc::internal::BasicMember.1"* [ %129, %87 ], [ %54, %53 ]
  %89 = phi %"class.cppgc::internal::BasicMember.1"* [ %128, %87 ], [ %55, %53 ]
  %90 = bitcast %"class.cppgc::internal::BasicMember.1"* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.cppgc::internal::BasicMember.1"* %88 to i64*
  store i64 %91, i64* %92, align 8
  store atomic i64 0, i64* %90 monotonic, align 8
  %93 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %89, i64 1
  %94 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %88, i64 1
  %95 = bitcast %"class.cppgc::internal::BasicMember.1"* %93 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.cppgc::internal::BasicMember.1"* %94 to i64*
  store i64 %96, i64* %97, align 8
  store atomic i64 0, i64* %95 monotonic, align 8
  %98 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %89, i64 2
  %99 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %88, i64 2
  %100 = bitcast %"class.cppgc::internal::BasicMember.1"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.cppgc::internal::BasicMember.1"* %99 to i64*
  store i64 %101, i64* %102, align 8
  store atomic i64 0, i64* %100 monotonic, align 8
  %103 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %89, i64 3
  %104 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %88, i64 3
  %105 = bitcast %"class.cppgc::internal::BasicMember.1"* %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.cppgc::internal::BasicMember.1"* %104 to i64*
  store i64 %106, i64* %107, align 8
  store atomic i64 0, i64* %105 monotonic, align 8
  %108 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %89, i64 4
  %109 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %88, i64 4
  %110 = bitcast %"class.cppgc::internal::BasicMember.1"* %108 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.cppgc::internal::BasicMember.1"* %109 to i64*
  store i64 %111, i64* %112, align 8
  store atomic i64 0, i64* %110 monotonic, align 8
  %113 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %89, i64 5
  %114 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %88, i64 5
  %115 = bitcast %"class.cppgc::internal::BasicMember.1"* %113 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"class.cppgc::internal::BasicMember.1"* %114 to i64*
  store i64 %116, i64* %117, align 8
  store atomic i64 0, i64* %115 monotonic, align 8
  %118 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %89, i64 6
  %119 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %88, i64 6
  %120 = bitcast %"class.cppgc::internal::BasicMember.1"* %118 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.cppgc::internal::BasicMember.1"* %119 to i64*
  store i64 %121, i64* %122, align 8
  store atomic i64 0, i64* %120 monotonic, align 8
  %123 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %89, i64 7
  %124 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %88, i64 7
  %125 = bitcast %"class.cppgc::internal::BasicMember.1"* %123 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.cppgc::internal::BasicMember.1"* %124 to i64*
  store i64 %126, i64* %127, align 8
  store atomic i64 0, i64* %125 monotonic, align 8
  %128 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %89, i64 8
  %129 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %88, i64 8
  %130 = icmp ult %"class.cppgc::internal::BasicMember.1"* %128, %8
  br i1 %130, label %87, label %58

131:                                              ; preds = %84, %61
  %132 = bitcast %"class.cppgc::internal::BasicMember.1"* %2 to %class.CXFA_Node**
  %133 = load %class.CXFA_Node*, %class.CXFA_Node** %132, align 8
  %134 = ptrtoint %class.CXFA_Node* %133 to i64
  %135 = bitcast %"class.cppgc::internal::BasicMember.1"* %1 to i64*
  store atomic i64 %134, i64* %135 monotonic, align 8
  %136 = bitcast %class.CXFA_Node* %133 to i8*
  %137 = and i64 %134, -4294967296
  %138 = sub i64 %4, %137
  %139 = icmp ult i64 %138, 4294967297
  br i1 %139, label %140, label %146

140:                                              ; preds = %131
  %141 = inttoptr i64 %137 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %142 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %141, i64 0, i32 0
  %143 = load i8, i8* %142, align 536870912, !range !16
  %144 = icmp eq i8 %143, 1
  br i1 %144, label %145, label %146, !prof !17

145:                                              ; preds = %140
  tail call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %136) #10
  br label %146

146:                                              ; preds = %131, %140, %145
  %147 = bitcast %"class.cppgc::internal::BasicMember.1"* %2 to i64*
  store atomic i64 0, i64* %147 monotonic, align 8
  br label %360

148:                                              ; preds = %3
  %149 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %150 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %150) #10
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %152 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %155 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %156 = bitcast %"class.cppgc::internal::BasicMember.1"** %7 to i64*
  %157 = bitcast %"class.std::__1::vector"* %0 to i64*
  %158 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 -86, i64 40, i1 false)
  %159 = load i64, i64* %157, align 8
  %160 = sub i64 %12, %159
  %161 = ashr exact i64 %160, 3
  %162 = add nsw i64 %161, 1
  %163 = icmp ugt i64 %162, 2305843009213693951
  br i1 %163, label %164, label %166

164:                                              ; preds = %148
  %165 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %165) #12
  unreachable

166:                                              ; preds = %148
  %167 = bitcast %"class.cppgc::internal::BasicMember.1"** %9 to i64*
  %168 = sub i64 %13, %159
  %169 = ashr exact i64 %168, 3
  %170 = icmp ult i64 %169, 1152921504606846975
  br i1 %170, label %175, label %171

171:                                              ; preds = %166
  %172 = sub i64 %4, %159
  %173 = ashr exact i64 %172, 3
  store %"class.cppgc::internal::BasicMember.1"* null, %"class.cppgc::internal::BasicMember.1"** %154, align 8
  %174 = bitcast %"class.std::__1::allocator"** %155 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %149, %"class.std::__1::__compressed_pair"** %174, align 8
  br label %186

175:                                              ; preds = %166
  %176 = ashr exact i64 %168, 2
  %177 = icmp ult i64 %176, %162
  %178 = select i1 %177, i64 %162, i64 %176
  %179 = sub i64 %4, %159
  %180 = ashr exact i64 %179, 3
  store %"class.cppgc::internal::BasicMember.1"* null, %"class.cppgc::internal::BasicMember.1"** %154, align 8
  %181 = bitcast %"class.std::__1::allocator"** %155 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %149, %"class.std::__1::__compressed_pair"** %181, align 8
  %182 = icmp eq i64 %178, 0
  br i1 %182, label %192, label %183

183:                                              ; preds = %175
  %184 = icmp ugt i64 %178, 2305843009213693951
  br i1 %184, label %185, label %186

185:                                              ; preds = %183
  tail call void @abort() #12
  unreachable

186:                                              ; preds = %171, %183
  %187 = phi i64 [ 2305843009213693951, %171 ], [ %178, %183 ]
  %188 = phi i64 [ %173, %171 ], [ %180, %183 ]
  %189 = shl i64 %187, 3
  %190 = tail call i8* @_Znwm(i64 %189) #11
  %191 = bitcast i8* %190 to %"class.cppgc::internal::BasicMember.1"*
  br label %192

192:                                              ; preds = %175, %186
  %193 = phi i64 [ %188, %186 ], [ %180, %175 ]
  %194 = phi i64 [ %187, %186 ], [ 0, %175 ]
  %195 = phi %"class.cppgc::internal::BasicMember.1"* [ %191, %186 ], [ null, %175 ]
  store %"class.cppgc::internal::BasicMember.1"* %195, %"class.cppgc::internal::BasicMember.1"** %151, align 8
  %196 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %195, i64 %193
  store %"class.cppgc::internal::BasicMember.1"* %196, %"class.cppgc::internal::BasicMember.1"** %153, align 8
  store %"class.cppgc::internal::BasicMember.1"* %196, %"class.cppgc::internal::BasicMember.1"** %152, align 8
  %197 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %195, i64 %194
  store %"class.cppgc::internal::BasicMember.1"* %197, %"class.cppgc::internal::BasicMember.1"** %154, align 8
  call void @_ZNSt3__114__split_bufferIN5cppgc8internal11BasicMemberI9CXFA_NodeNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEERNS_9allocatorIS8_EEE9push_backEOS8_(%"struct.std::__1::__split_buffer"* nonnull %5, %"class.cppgc::internal::BasicMember.1"* dereferenceable(8) %2)
  %198 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %152, align 8
  %199 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %6, align 8
  %200 = icmp eq %"class.cppgc::internal::BasicMember.1"* %199, %1
  br i1 %200, label %260, label %201

201:                                              ; preds = %192
  %202 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %199 to i64
  %203 = getelementptr %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %1, i64 -1, i32 0, i32 0
  %204 = ptrtoint i8** %203 to i64
  %205 = sub i64 %204, %202
  %206 = lshr i64 %205, 3
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %223, label %210

210:                                              ; preds = %201, %210
  %211 = phi %"class.cppgc::internal::BasicMember.1"* [ %220, %210 ], [ %198, %201 ]
  %212 = phi %"class.cppgc::internal::BasicMember.1"* [ %215, %210 ], [ %1, %201 ]
  %213 = phi i64 [ %221, %210 ], [ %208, %201 ]
  %214 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %211, i64 -1
  %215 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %212, i64 -1
  %216 = bitcast %"class.cppgc::internal::BasicMember.1"* %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"class.cppgc::internal::BasicMember.1"* %214 to i64*
  store i64 %217, i64* %218, align 8
  store atomic i64 0, i64* %216 monotonic, align 8
  %219 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %152, align 8
  %220 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %219, i64 -1
  store %"class.cppgc::internal::BasicMember.1"* %220, %"class.cppgc::internal::BasicMember.1"** %152, align 8
  %221 = add i64 %213, -1
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %210, !llvm.loop !18

223:                                              ; preds = %210, %201
  %224 = phi %"class.cppgc::internal::BasicMember.1"* [ undef, %201 ], [ %220, %210 ]
  %225 = phi %"class.cppgc::internal::BasicMember.1"* [ %198, %201 ], [ %220, %210 ]
  %226 = phi %"class.cppgc::internal::BasicMember.1"* [ %1, %201 ], [ %215, %210 ]
  %227 = icmp ult i64 %205, 24
  br i1 %227, label %260, label %228

228:                                              ; preds = %223, %228
  %229 = phi %"class.cppgc::internal::BasicMember.1"* [ %258, %228 ], [ %225, %223 ]
  %230 = phi %"class.cppgc::internal::BasicMember.1"* [ %253, %228 ], [ %226, %223 ]
  %231 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %229, i64 -1
  %232 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %230, i64 -1
  %233 = bitcast %"class.cppgc::internal::BasicMember.1"* %232 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = bitcast %"class.cppgc::internal::BasicMember.1"* %231 to i64*
  store i64 %234, i64* %235, align 8
  store atomic i64 0, i64* %233 monotonic, align 8
  %236 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %152, align 8
  %237 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %236, i64 -1
  store %"class.cppgc::internal::BasicMember.1"* %237, %"class.cppgc::internal::BasicMember.1"** %152, align 8
  %238 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %236, i64 -2
  %239 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %230, i64 -2
  %240 = bitcast %"class.cppgc::internal::BasicMember.1"* %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"class.cppgc::internal::BasicMember.1"* %238 to i64*
  store i64 %241, i64* %242, align 8
  store atomic i64 0, i64* %240 monotonic, align 8
  %243 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %152, align 8
  %244 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %243, i64 -1
  store %"class.cppgc::internal::BasicMember.1"* %244, %"class.cppgc::internal::BasicMember.1"** %152, align 8
  %245 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %243, i64 -2
  %246 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %230, i64 -3
  %247 = bitcast %"class.cppgc::internal::BasicMember.1"* %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = bitcast %"class.cppgc::internal::BasicMember.1"* %245 to i64*
  store i64 %248, i64* %249, align 8
  store atomic i64 0, i64* %247 monotonic, align 8
  %250 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %152, align 8
  %251 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %250, i64 -1
  store %"class.cppgc::internal::BasicMember.1"* %251, %"class.cppgc::internal::BasicMember.1"** %152, align 8
  %252 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %250, i64 -2
  %253 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %230, i64 -4
  %254 = bitcast %"class.cppgc::internal::BasicMember.1"* %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = bitcast %"class.cppgc::internal::BasicMember.1"* %252 to i64*
  store i64 %255, i64* %256, align 8
  store atomic i64 0, i64* %254 monotonic, align 8
  %257 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %152, align 8
  %258 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %257, i64 -1
  store %"class.cppgc::internal::BasicMember.1"* %258, %"class.cppgc::internal::BasicMember.1"** %152, align 8
  %259 = icmp eq %"class.cppgc::internal::BasicMember.1"* %253, %199
  br i1 %259, label %260, label %228

260:                                              ; preds = %223, %228, %192
  %261 = phi %"class.cppgc::internal::BasicMember.1"* [ %198, %192 ], [ %224, %223 ], [ %258, %228 ]
  %262 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %7, align 8
  %263 = icmp eq %"class.cppgc::internal::BasicMember.1"* %262, %1
  br i1 %263, label %264, label %270

264:                                              ; preds = %260
  %265 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %262 to i64
  %266 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %261 to i64
  %267 = bitcast %"class.cppgc::internal::BasicMember.1"** %152 to i64*
  %268 = bitcast %"class.cppgc::internal::BasicMember.1"** %153 to i64*
  %269 = load i64, i64* %268, align 8
  br label %334

270:                                              ; preds = %260
  %271 = bitcast %"class.cppgc::internal::BasicMember.1"** %153 to i64**
  %272 = load i64*, i64** %271, align 8
  %273 = getelementptr %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %262, i64 -1, i32 0, i32 0
  %274 = ptrtoint i8** %273 to i64
  %275 = sub i64 %274, %4
  %276 = lshr i64 %275, 3
  %277 = add nuw nsw i64 %276, 1
  %278 = and i64 %277, 3
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %294, label %280

280:                                              ; preds = %270, %280
  %281 = phi i64* [ %289, %280 ], [ %272, %270 ]
  %282 = phi %"class.cppgc::internal::BasicMember.1"* [ %286, %280 ], [ %1, %270 ]
  %283 = phi i64 [ %290, %280 ], [ %278, %270 ]
  %284 = bitcast %"class.cppgc::internal::BasicMember.1"* %282 to i64*
  %285 = load i64, i64* %284, align 8
  store i64 %285, i64* %281, align 8
  store atomic i64 0, i64* %284 monotonic, align 8
  %286 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %282, i64 1
  %287 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %153, align 8
  %288 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %287, i64 1
  store %"class.cppgc::internal::BasicMember.1"* %288, %"class.cppgc::internal::BasicMember.1"** %153, align 8
  %289 = bitcast %"class.cppgc::internal::BasicMember.1"* %288 to i64*
  %290 = add i64 %283, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %280, !llvm.loop !19

292:                                              ; preds = %280
  %293 = bitcast %"class.cppgc::internal::BasicMember.1"* %288 to i64*
  br label %294

294:                                              ; preds = %270, %292
  %295 = phi %"class.cppgc::internal::BasicMember.1"* [ undef, %270 ], [ %288, %292 ]
  %296 = phi i64* [ %272, %270 ], [ %293, %292 ]
  %297 = phi %"class.cppgc::internal::BasicMember.1"* [ %1, %270 ], [ %286, %292 ]
  %298 = icmp ult i64 %275, 24
  br i1 %298, label %327, label %299

299:                                              ; preds = %294, %299
  %300 = phi i64* [ %326, %299 ], [ %296, %294 ]
  %301 = phi %"class.cppgc::internal::BasicMember.1"* [ %322, %299 ], [ %297, %294 ]
  %302 = bitcast %"class.cppgc::internal::BasicMember.1"* %301 to i64*
  %303 = load i64, i64* %302, align 8
  store i64 %303, i64* %300, align 8
  store atomic i64 0, i64* %302 monotonic, align 8
  %304 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %301, i64 1
  %305 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %153, align 8
  %306 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %305, i64 1
  store %"class.cppgc::internal::BasicMember.1"* %306, %"class.cppgc::internal::BasicMember.1"** %153, align 8
  %307 = bitcast %"class.cppgc::internal::BasicMember.1"* %306 to i64*
  %308 = bitcast %"class.cppgc::internal::BasicMember.1"* %304 to i64*
  %309 = load i64, i64* %308, align 8
  store i64 %309, i64* %307, align 8
  store atomic i64 0, i64* %308 monotonic, align 8
  %310 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %301, i64 2
  %311 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %153, align 8
  %312 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %311, i64 1
  store %"class.cppgc::internal::BasicMember.1"* %312, %"class.cppgc::internal::BasicMember.1"** %153, align 8
  %313 = bitcast %"class.cppgc::internal::BasicMember.1"* %312 to i64*
  %314 = bitcast %"class.cppgc::internal::BasicMember.1"* %310 to i64*
  %315 = load i64, i64* %314, align 8
  store i64 %315, i64* %313, align 8
  store atomic i64 0, i64* %314 monotonic, align 8
  %316 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %301, i64 3
  %317 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %153, align 8
  %318 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %317, i64 1
  store %"class.cppgc::internal::BasicMember.1"* %318, %"class.cppgc::internal::BasicMember.1"** %153, align 8
  %319 = bitcast %"class.cppgc::internal::BasicMember.1"* %318 to i64*
  %320 = bitcast %"class.cppgc::internal::BasicMember.1"* %316 to i64*
  %321 = load i64, i64* %320, align 8
  store i64 %321, i64* %319, align 8
  store atomic i64 0, i64* %320 monotonic, align 8
  %322 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %301, i64 4
  %323 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %153, align 8
  %324 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %323, i64 1
  store %"class.cppgc::internal::BasicMember.1"* %324, %"class.cppgc::internal::BasicMember.1"** %153, align 8
  %325 = icmp eq %"class.cppgc::internal::BasicMember.1"* %322, %262
  %326 = bitcast %"class.cppgc::internal::BasicMember.1"* %324 to i64*
  br i1 %325, label %327, label %299

327:                                              ; preds = %299, %294
  %328 = phi %"class.cppgc::internal::BasicMember.1"* [ %295, %294 ], [ %324, %299 ]
  %329 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %328 to i64
  %330 = bitcast %"class.cppgc::internal::BasicMember.1"** %152 to i64*
  %331 = load i64, i64* %330, align 8
  %332 = load i64, i64* %156, align 8
  %333 = bitcast %"class.cppgc::internal::BasicMember.1"** %153 to i64*
  br label %334

334:                                              ; preds = %264, %327
  %335 = phi i64* [ %268, %264 ], [ %333, %327 ]
  %336 = phi i64 [ %269, %264 ], [ %329, %327 ]
  %337 = phi i64 [ %265, %264 ], [ %332, %327 ]
  %338 = phi i64* [ %267, %264 ], [ %330, %327 ]
  %339 = phi i64 [ %266, %264 ], [ %331, %327 ]
  %340 = load i64, i64* %157, align 8
  store i64 %339, i64* %157, align 8
  store i64 %340, i64* %338, align 8
  store i64 %336, i64* %156, align 8
  store i64 %337, i64* %335, align 8
  %341 = load i64, i64* %167, align 8
  %342 = bitcast %"class.cppgc::internal::BasicMember.1"** %154 to i64*
  %343 = load i64, i64* %342, align 8
  store i64 %343, i64* %167, align 8
  store i64 %341, i64* %342, align 8
  %344 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %340, i64* %344, align 8
  %345 = inttoptr i64 %340 to %"class.cppgc::internal::BasicMember.1"*
  %346 = inttoptr i64 %337 to %"class.cppgc::internal::BasicMember.1"*
  %347 = icmp eq %"class.cppgc::internal::BasicMember.1"* %346, %345
  br i1 %347, label %355, label %348

348:                                              ; preds = %334
  %349 = getelementptr %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %346, i64 -1, i32 0, i32 0
  %350 = ptrtoint i8** %349 to i64
  %351 = sub i64 %350, %340
  %352 = lshr i64 %351, 3
  %353 = xor i64 %352, -1
  %354 = getelementptr %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %346, i64 %353
  store %"class.cppgc::internal::BasicMember.1"* %354, %"class.cppgc::internal::BasicMember.1"** %153, align 8
  br label %355

355:                                              ; preds = %348, %334
  %356 = icmp eq i64 %340, 0
  br i1 %356, label %359, label %357

357:                                              ; preds = %355
  %358 = inttoptr i64 %340 to i8*
  call void @_ZdlPv(i8* %358) #11
  br label %359

359:                                              ; preds = %355, %357
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %150) #10
  br label %360

360:                                              ; preds = %16, %146, %359
  %361 = phi %"class.cppgc::internal::BasicMember.1"* [ %1, %16 ], [ %1, %146 ], [ %198, %359 ]
  ret %"class.cppgc::internal::BasicMember.1"* %361
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CXFA_ArrayNodeList6RemoveEP9CXFA_Node(%class.CXFA_ArrayNodeList* nocapture, %class.CXFA_Node*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %3, align 8
  %5 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1, i32 0, i32 1
  %6 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %5, align 8
  %7 = icmp eq %"class.cppgc::internal::BasicMember.1"* %4, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %2, %13
  %9 = phi %"class.cppgc::internal::BasicMember.1"* [ %14, %13 ], [ %4, %2 ]
  %10 = bitcast %"class.cppgc::internal::BasicMember.1"* %9 to %class.CXFA_Node**
  %11 = load %class.CXFA_Node*, %class.CXFA_Node** %10, align 8
  %12 = icmp eq %class.CXFA_Node* %11, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %9, i64 1
  %15 = icmp eq %"class.cppgc::internal::BasicMember.1"* %14, %6
  br i1 %15, label %47, label %8

16:                                               ; preds = %8, %2
  %17 = phi %"class.cppgc::internal::BasicMember.1"* [ %4, %2 ], [ %9, %8 ]
  %18 = icmp eq %"class.cppgc::internal::BasicMember.1"* %17, %6
  br i1 %18, label %47, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %17, i64 1
  %21 = icmp eq %"class.cppgc::internal::BasicMember.1"* %20, %6
  br i1 %21, label %45, label %22

22:                                               ; preds = %19, %40
  %23 = phi %"class.cppgc::internal::BasicMember.1"* [ %43, %40 ], [ %17, %19 ]
  %24 = phi %"class.cppgc::internal::BasicMember.1"* [ %42, %40 ], [ %20, %19 ]
  %25 = bitcast %"class.cppgc::internal::BasicMember.1"* %24 to %class.CXFA_Node**
  %26 = load %class.CXFA_Node*, %class.CXFA_Node** %25, align 8
  %27 = ptrtoint %class.CXFA_Node* %26 to i64
  %28 = bitcast %"class.cppgc::internal::BasicMember.1"* %23 to i64*
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = bitcast %class.CXFA_Node* %26 to i8*
  %30 = and i64 %27, -4294967296
  %31 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %23 to i64
  %32 = sub i64 %31, %30
  %33 = icmp ult i64 %32, 4294967297
  br i1 %33, label %34, label %40

34:                                               ; preds = %22
  %35 = inttoptr i64 %30 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %36 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %35, i64 0, i32 0
  %37 = load i8, i8* %36, align 536870912, !range !16
  %38 = icmp eq i8 %37, 1
  br i1 %38, label %39, label %40, !prof !17

39:                                               ; preds = %34
  tail call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %29) #10
  br label %40

40:                                               ; preds = %39, %34, %22
  %41 = bitcast %"class.cppgc::internal::BasicMember.1"* %24 to i64*
  store atomic i64 0, i64* %41 monotonic, align 8
  %42 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %24, i64 1
  %43 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %23, i64 1
  %44 = icmp eq %"class.cppgc::internal::BasicMember.1"* %42, %6
  br i1 %44, label %45, label %22

45:                                               ; preds = %40, %19
  %46 = phi %"class.cppgc::internal::BasicMember.1"* [ %17, %19 ], [ %43, %40 ]
  store %"class.cppgc::internal::BasicMember.1"* %46, %"class.cppgc::internal::BasicMember.1"** %5, align 8
  br label %47

47:                                               ; preds = %13, %16, %45
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %class.CXFA_Node* @_ZN18CXFA_ArrayNodeList4ItemEm(%class.CXFA_ArrayNodeList* nocapture readonly, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.CXFA_ArrayNodeList, %class.CXFA_ArrayNodeList* %0, i64 0, i32 1, i32 0, i32 1
  %5 = bitcast %"class.cppgc::internal::BasicMember.1"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ugt i64 %10, %1
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.cppgc::internal::BasicMember.1"*
  %14 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %13, i64 %1
  %15 = bitcast %"class.cppgc::internal::BasicMember.1"* %14 to %class.CXFA_Node**
  %16 = load %class.CXFA_Node*, %class.CXFA_Node** %15, align 8
  br label %17

17:                                               ; preds = %2, %12
  %18 = phi %class.CXFA_Node* [ %16, %12 ], [ null, %2 ]
  ret %class.CXFA_Node* %18
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI9CXFA_NodeE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CXFA_Node*
  %4 = bitcast i8* %1 to void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)***
  %5 = load void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)**, void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)*, void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)** %5, i64 2
  %7 = load void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)*, void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)** %6, align 8
  tail call void %7(%class.CXFA_Node* %3, %"class.cppgc::Visitor"* %0) #10
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN5cppgc8internal11BasicMemberI9CXFA_NodeNS2_15StrongMemberTagENS2_26DijkstraWriteBarrierPolicyENS2_22DisabledCheckingPolicyEEERNS_9allocatorIS8_EEE9push_backEOS8_(%"struct.std::__1::__split_buffer"*, %"class.cppgc::internal::BasicMember.1"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %5, align 8
  %7 = icmp eq %"class.cppgc::internal::BasicMember.1"* %4, %6
  %8 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %6 to i64
  %9 = bitcast %"class.cppgc::internal::BasicMember.1"* %4 to i64*
  br i1 %7, label %10, label %166

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %13, align 8
  %15 = icmp ugt %"class.cppgc::internal::BasicMember.1"* %12, %14
  %16 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %14 to i64
  br i1 %15, label %17, label %55

17:                                               ; preds = %10
  %18 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %12, i64 %22
  %24 = icmp eq %"class.cppgc::internal::BasicMember.1"* %12, %4
  br i1 %24, label %50, label %25

25:                                               ; preds = %17, %43
  %26 = phi %"class.cppgc::internal::BasicMember.1"* [ %46, %43 ], [ %23, %17 ]
  %27 = phi %"class.cppgc::internal::BasicMember.1"* [ %45, %43 ], [ %12, %17 ]
  %28 = bitcast %"class.cppgc::internal::BasicMember.1"* %27 to %class.CXFA_Node**
  %29 = load %class.CXFA_Node*, %class.CXFA_Node** %28, align 8
  %30 = ptrtoint %class.CXFA_Node* %29 to i64
  %31 = bitcast %"class.cppgc::internal::BasicMember.1"* %26 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = bitcast %class.CXFA_Node* %29 to i8*
  %33 = and i64 %30, -4294967296
  %34 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %26 to i64
  %35 = sub i64 %34, %33
  %36 = icmp ult i64 %35, 4294967297
  br i1 %36, label %37, label %43

37:                                               ; preds = %25
  %38 = inttoptr i64 %33 to %"struct.cppgc::internal::CagedHeapLocalData"*
  %39 = getelementptr inbounds %"struct.cppgc::internal::CagedHeapLocalData", %"struct.cppgc::internal::CagedHeapLocalData"* %38, i64 0, i32 0
  %40 = load i8, i8* %39, align 536870912, !range !16
  %41 = icmp eq i8 %40, 1
  br i1 %41, label %42, label %43, !prof !17

42:                                               ; preds = %37
  tail call void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8* %32) #10
  br label %43

43:                                               ; preds = %42, %37, %25
  %44 = bitcast %"class.cppgc::internal::BasicMember.1"* %27 to i64*
  store atomic i64 0, i64* %44 monotonic, align 8
  %45 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %27, i64 1
  %46 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %26, i64 1
  %47 = icmp eq %"class.cppgc::internal::BasicMember.1"* %45, %4
  br i1 %47, label %48, label %25

48:                                               ; preds = %43
  %49 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %11, align 8
  br label %50

50:                                               ; preds = %48, %17
  %51 = phi %"class.cppgc::internal::BasicMember.1"* [ %4, %17 ], [ %49, %48 ]
  %52 = phi %"class.cppgc::internal::BasicMember.1"* [ %23, %17 ], [ %46, %48 ]
  store %"class.cppgc::internal::BasicMember.1"* %52, %"class.cppgc::internal::BasicMember.1"** %3, align 8
  %53 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %51, i64 %22
  store %"class.cppgc::internal::BasicMember.1"* %53, %"class.cppgc::internal::BasicMember.1"** %11, align 8
  %54 = bitcast %"class.cppgc::internal::BasicMember.1"* %52 to i64*
  br label %166

55:                                               ; preds = %10
  %56 = bitcast %"class.cppgc::internal::BasicMember.1"** %5 to i64*
  %57 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %58 = sub i64 %8, %16
  %59 = ashr exact i64 %58, 2
  %60 = icmp eq i64 %58, 0
  %61 = select i1 %60, i64 1, i64 %59
  %62 = icmp ugt i64 %61, 2305843009213693951
  br i1 %62, label %63, label %64

63:                                               ; preds = %55
  tail call void @abort() #12
  unreachable

64:                                               ; preds = %55
  %65 = lshr i64 %61, 2
  %66 = shl i64 %61, 3
  %67 = tail call i8* @_Znwm(i64 %66) #11
  %68 = bitcast i8* %67 to %"class.cppgc::internal::BasicMember.1"*
  %69 = ptrtoint i8* %67 to i64
  %70 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %68, i64 %65
  %71 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %70 to i64
  %72 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %68, i64 %61
  %73 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %72 to i64
  %74 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %12 to i64
  %75 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %4 to i64
  %76 = sub i64 %75, %74
  %77 = ashr exact i64 %76, 3
  %78 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %70, i64 %77
  %79 = icmp eq i64 %76, 0
  br i1 %79, label %155, label %80

80:                                               ; preds = %64
  %81 = add i64 %76, -8
  %82 = lshr i64 %81, 3
  %83 = add nuw nsw i64 %82, 1
  %84 = and i64 %83, 7
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %101, label %86

86:                                               ; preds = %80, %86
  %87 = phi %"class.cppgc::internal::BasicMember.1"* [ %94, %86 ], [ %70, %80 ]
  %88 = phi i64 [ %95, %86 ], [ %71, %80 ]
  %89 = phi %"class.cppgc::internal::BasicMember.1"* [ %96, %86 ], [ %12, %80 ]
  %90 = phi i64 [ %97, %86 ], [ %84, %80 ]
  %91 = bitcast %"class.cppgc::internal::BasicMember.1"* %89 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = inttoptr i64 %88 to i64*
  store i64 %92, i64* %93, align 8
  store atomic i64 0, i64* %91 monotonic, align 8
  %94 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %87, i64 1
  %95 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %94 to i64
  %96 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %89, i64 1
  %97 = add i64 %90, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %86, !llvm.loop !20

99:                                               ; preds = %86
  %100 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %94 to i64
  br label %101

101:                                              ; preds = %80, %99
  %102 = phi %"class.cppgc::internal::BasicMember.1"* [ %70, %80 ], [ %94, %99 ]
  %103 = phi i64 [ %71, %80 ], [ %100, %99 ]
  %104 = phi %"class.cppgc::internal::BasicMember.1"* [ %12, %80 ], [ %96, %99 ]
  %105 = icmp ult i64 %81, 56
  br i1 %105, label %152, label %106

106:                                              ; preds = %101, %106
  %107 = phi %"class.cppgc::internal::BasicMember.1"* [ %148, %106 ], [ %102, %101 ]
  %108 = phi i64 [ %149, %106 ], [ %103, %101 ]
  %109 = phi %"class.cppgc::internal::BasicMember.1"* [ %150, %106 ], [ %104, %101 ]
  %110 = bitcast %"class.cppgc::internal::BasicMember.1"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = inttoptr i64 %108 to i64*
  store i64 %111, i64* %112, align 8
  store atomic i64 0, i64* %110 monotonic, align 8
  %113 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %107, i64 1
  %114 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %109, i64 1
  %115 = bitcast %"class.cppgc::internal::BasicMember.1"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"class.cppgc::internal::BasicMember.1"* %113 to i64*
  store i64 %116, i64* %117, align 8
  store atomic i64 0, i64* %115 monotonic, align 8
  %118 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %107, i64 2
  %119 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %109, i64 2
  %120 = bitcast %"class.cppgc::internal::BasicMember.1"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.cppgc::internal::BasicMember.1"* %118 to i64*
  store i64 %121, i64* %122, align 8
  store atomic i64 0, i64* %120 monotonic, align 8
  %123 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %107, i64 3
  %124 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %109, i64 3
  %125 = bitcast %"class.cppgc::internal::BasicMember.1"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.cppgc::internal::BasicMember.1"* %123 to i64*
  store i64 %126, i64* %127, align 8
  store atomic i64 0, i64* %125 monotonic, align 8
  %128 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %107, i64 4
  %129 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %109, i64 4
  %130 = bitcast %"class.cppgc::internal::BasicMember.1"* %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.cppgc::internal::BasicMember.1"* %128 to i64*
  store i64 %131, i64* %132, align 8
  store atomic i64 0, i64* %130 monotonic, align 8
  %133 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %107, i64 5
  %134 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %109, i64 5
  %135 = bitcast %"class.cppgc::internal::BasicMember.1"* %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.cppgc::internal::BasicMember.1"* %133 to i64*
  store i64 %136, i64* %137, align 8
  store atomic i64 0, i64* %135 monotonic, align 8
  %138 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %107, i64 6
  %139 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %109, i64 6
  %140 = bitcast %"class.cppgc::internal::BasicMember.1"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.cppgc::internal::BasicMember.1"* %138 to i64*
  store i64 %141, i64* %142, align 8
  store atomic i64 0, i64* %140 monotonic, align 8
  %143 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %107, i64 7
  %144 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %109, i64 7
  %145 = bitcast %"class.cppgc::internal::BasicMember.1"* %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"class.cppgc::internal::BasicMember.1"* %143 to i64*
  store i64 %146, i64* %147, align 8
  store atomic i64 0, i64* %145 monotonic, align 8
  %148 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %107, i64 8
  %149 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %148 to i64
  %150 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %109, i64 8
  %151 = icmp eq %"class.cppgc::internal::BasicMember.1"* %78, %148
  br i1 %151, label %152, label %106

152:                                              ; preds = %106, %101
  %153 = ptrtoint %"class.cppgc::internal::BasicMember.1"* %78 to i64
  %154 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %13, align 8
  br label %155

155:                                              ; preds = %64, %152
  %156 = phi %"class.cppgc::internal::BasicMember.1"* [ %154, %152 ], [ %14, %64 ]
  %157 = phi i64 [ %153, %152 ], [ %71, %64 ]
  store i64 %69, i64* %57, align 8
  %158 = bitcast %"class.cppgc::internal::BasicMember.1"** %11 to i64*
  store i64 %71, i64* %158, align 8
  %159 = bitcast %"class.cppgc::internal::BasicMember.1"** %3 to i64*
  store i64 %157, i64* %159, align 8
  store i64 %73, i64* %56, align 8
  %160 = icmp eq %"class.cppgc::internal::BasicMember.1"* %156, null
  %161 = inttoptr i64 %157 to i64*
  br i1 %160, label %166, label %162

162:                                              ; preds = %155
  %163 = bitcast %"class.cppgc::internal::BasicMember.1"* %156 to i8*
  tail call void @_ZdlPv(i8* %163) #11
  %164 = bitcast %"class.cppgc::internal::BasicMember.1"** %3 to i64**
  %165 = load i64*, i64** %164, align 8
  br label %166

166:                                              ; preds = %162, %155, %50, %2
  %167 = phi i64* [ %165, %162 ], [ %161, %155 ], [ %54, %50 ], [ %9, %2 ]
  %168 = bitcast %"class.cppgc::internal::BasicMember.1"* %1 to i64*
  %169 = load i64, i64* %168, align 8
  store i64 %169, i64* %167, align 8
  store atomic i64 0, i64* %168 monotonic, align 8
  %170 = load %"class.cppgc::internal::BasicMember.1"*, %"class.cppgc::internal::BasicMember.1"** %3, align 8
  %171 = getelementptr inbounds %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.1"* %170, i64 1
  store %"class.cppgc::internal::BasicMember.1"* %171, %"class.cppgc::internal::BasicMember.1"** %3, align 8
  ret void
}

declare void @_ZN5cppgc8internal12WriteBarrier26DijkstraMarkingBarrierSlowEPKv(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = distinct !{!13, !10}
!14 = distinct !{!14, !10}
!15 = distinct !{!15, !10}
!16 = !{i8 0, i8 2}
!17 = !{!"branch_weights", i32 1, i32 2000}
!18 = distinct !{!18, !10}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
