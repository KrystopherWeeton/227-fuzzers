; ModuleID = '../../third_party/libjxl/src/lib/jxl/color_encoding_internal.cc'
source_filename = "../../third_party/libjxl/src/lib/jxl/color_encoding_internal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::array" = type { [2 x %"struct.jxl::ColorEncoding"] }
%"struct.jxl::ColorEncoding" = type { %"class.jxl::Fields", i8, i32, i32, %"struct.jxl::CustomTransferFunction", i32, i8, i8, %"class.jxl::PaddedBytes", i32, %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy", %"struct.jxl::Customxy" }
%"class.jxl::Fields" = type { i32 (...)** }
%"struct.jxl::CustomTransferFunction" = type { %"class.jxl::Fields", i32, i8, i32, i32 }
%"class.jxl::PaddedBytes" = type { i64, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"struct.jxl::Customxy" = type { %"class.jxl::Fields", i32, i32 }
%"struct.jxl::CIExy" = type { double, double }
%"struct.jxl::PrimariesCIExy" = type { %"struct.jxl::CIExy", %"struct.jxl::CIExy", %"struct.jxl::CIExy" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.jxl::(anonymous namespace)::Tokenizer" = type { %"class.std::__1::basic_string"*, i8, i64 }
%"class.std::__1::allocator" = type { i8 }
%"class.jxl::Visitor" = type { i32 (...)** }
%struct.JxlColorEncoding = type { i32, i32, [2 x double], i32, [2 x double], [2 x double], [2 x double], i32, double, i32 }

$_ZNSt3__15arrayIN3jxl13ColorEncodingELm2EED2Ev = comdat any

$_ZN3jxl13ColorEncodingD2Ev = comdat any

$_ZN3jxl12Inv3x3MatrixIfEENS_6StatusEPT_ = comdat any

$_ZN3jxl13ColorEncodingD0Ev = comdat any

$_ZNK3jxl13ColorEncoding4NameEv = comdat any

$_ZN3jxl22CustomTransferFunctionD0Ev = comdat any

$_ZNK3jxl22CustomTransferFunction4NameEv = comdat any

$_ZN3jxl6FieldsD2Ev = comdat any

$_ZN3jxl8CustomxyD0Ev = comdat any

$_ZNK3jxl8Customxy4NameEv = comdat any

@.str.1 = private unnamed_addr constant [64 x i8] c"../../third_party/libjxl/src/lib/jxl/color_encoding_internal.cc\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"%s:%d: JXL_ASSERT: %s\0A\00", align 1
@_ZZN3jxl13ColorEncoding4SRGBEbE2c2 = internal global %"struct.std::__1::array" zeroinitializer, align 8
@_ZGVZN3jxl13ColorEncoding4SRGBEbE2c2 = internal global i64 0, align 8
@__dso_handle = external hidden global i8
@_ZZN3jxl13ColorEncoding10LinearSRGBEbE2c2 = internal global %"struct.std::__1::array" zeroinitializer, align 8
@_ZGVZN3jxl13ColorEncoding10LinearSRGBEbE2c2 = internal global i64 0, align 8
@.str.8 = private unnamed_addr constant [41 x i8] c"%s:%d: JXL_ABORT: Invalid WhitePoint %u\0A\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"HasPrimaries()\00", align 1
@.str.11 = private unnamed_addr constant [40 x i8] c"%s:%d: JXL_ABORT: Invalid Primaries %u\0A\00", align 1
@_ZTVN3jxl8CustomxyE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.jxl::Fields"*)* @_ZN3jxl6FieldsD2Ev to i8*), i8* bitcast (void (%"struct.jxl::Customxy"*)* @_ZN3jxl8CustomxyD0Ev to i8*), i8* bitcast (i8* (%"struct.jxl::Customxy"*)* @_ZNK3jxl8Customxy4NameEv to i8*), i8* bitcast (i32 (%"struct.jxl::Customxy"*, %"class.jxl::Visitor"*)* @_ZN3jxl8Customxy11VisitFieldsEPNS_7VisitorE to i8*)] }, align 8
@_ZTVN3jxl22CustomTransferFunctionE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.jxl::Fields"*)* @_ZN3jxl6FieldsD2Ev to i8*), i8* bitcast (void (%"struct.jxl::CustomTransferFunction"*)* @_ZN3jxl22CustomTransferFunctionD0Ev to i8*), i8* bitcast (i8* (%"struct.jxl::CustomTransferFunction"*)* @_ZNK3jxl22CustomTransferFunction4NameEv to i8*), i8* bitcast (i32 (%"struct.jxl::CustomTransferFunction"*, %"class.jxl::Visitor"*)* @_ZN3jxl22CustomTransferFunction11VisitFieldsEPNS_7VisitorE to i8*)] }, align 8
@_ZTVN3jxl13ColorEncodingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.jxl::ColorEncoding"*)* @_ZN3jxl13ColorEncodingD2Ev to i8*), i8* bitcast (void (%"struct.jxl::ColorEncoding"*)* @_ZN3jxl13ColorEncodingD0Ev to i8*), i8* bitcast (i8* (%"struct.jxl::ColorEncoding"*)* @_ZNK3jxl13ColorEncoding4NameEv to i8*), i8* bitcast (i32 (%"struct.jxl::ColorEncoding"*, %"class.jxl::Visitor"*)* @_ZN3jxl13ColorEncoding11VisitFieldsEPNS_7VisitorE to i8*)] }, align 8
@.str.32 = private unnamed_addr constant [22 x i8] c"%s:%d: JXL_CHECK: %s\0A\00", align 1
@.str.33 = private unnamed_addr constant [19 x i8] c"c_rgb->CreateICC()\00", align 1
@.str.34 = private unnamed_addr constant [20 x i8] c"c_gray->CreateICC()\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"RGB\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"Gra\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"XYB\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"CS?\00", align 1
@.str.39 = private unnamed_addr constant [41 x i8] c"%s:%d: JXL_ABORT: Invalid ColorSpace %u\0A\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"D65\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"Cst\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"EER\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"DCI\00", align 1
@.str.45 = private unnamed_addr constant [4 x i8] c"SRG\00", align 1
@.str.46 = private unnamed_addr constant [4 x i8] c"202\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"Per\00", align 1
@.str.48 = private unnamed_addr constant [4 x i8] c"Rel\00", align 1
@.str.49 = private unnamed_addr constant [4 x i8] c"Sat\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"Abs\00", align 1
@.str.51 = private unnamed_addr constant [46 x i8] c"%s:%d: JXL_ABORT: Invalid RenderingIntent %u\0A\00", align 1
@.str.52 = private unnamed_addr constant [63 x i8] c"../../third_party/libjxl/src/lib/jxl/color_encoding_internal.h\00", align 1
@.str.53 = private unnamed_addr constant [10 x i8] c"IsGamma()\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"Lin\00", align 1
@.str.55 = private unnamed_addr constant [4 x i8] c"709\00", align 1
@.str.56 = private unnamed_addr constant [4 x i8] c"PeQ\00", align 1
@.str.57 = private unnamed_addr constant [4 x i8] c"HLG\00", align 1
@.str.58 = private unnamed_addr constant [4 x i8] c"TF?\00", align 1
@.str.59 = private unnamed_addr constant [47 x i8] c"%s:%d: JXL_ABORT: Invalid TransferFunction %u\0A\00", align 1
@.str.80 = private unnamed_addr constant [14 x i8] c"ColorEncoding\00", align 1
@.str.81 = private unnamed_addr constant [23 x i8] c"CustomTransferFunction\00", align 1
@.str.82 = private unnamed_addr constant [9 x i8] c"Customxy\00", align 1
@.str.83 = private unnamed_addr constant [3 x i8] c"%g\00", align 1

@_ZN3jxl8CustomxyC1Ev = hidden unnamed_addr alias void (%"struct.jxl::Customxy"*), void (%"struct.jxl::Customxy"*)* @_ZN3jxl8CustomxyC2Ev
@_ZN3jxl22CustomTransferFunctionC1Ev = hidden unnamed_addr alias void (%"struct.jxl::CustomTransferFunction"*), void (%"struct.jxl::CustomTransferFunction"*)* @_ZN3jxl22CustomTransferFunctionC2Ev
@_ZN3jxl13ColorEncodingC1Ev = hidden unnamed_addr alias void (%"struct.jxl::ColorEncoding"*), void (%"struct.jxl::ColorEncoding"*)* @_ZN3jxl13ColorEncodingC2Ev

; Function Attrs: nounwind readonly ssp uwtable
define hidden { double, double } @_ZNK3jxl8Customxy3GetEv(%"struct.jxl::Customxy"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = sitofp i32 %3 to double
  %5 = fmul double %4, 0x3EB0C6F7A0B5ED8D
  %6 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = sitofp i32 %7 to double
  %9 = fmul double %8, 0x3EB0C6F7A0B5ED8D
  %10 = insertvalue { double, double } undef, double %5, 0
  %11 = insertvalue { double, double } %10, double %9, 1
  ret { double, double } %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3jxl8Customxy3SetERKNS_5CIExyE(%"struct.jxl::Customxy"*, %"struct.jxl::CIExy"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"struct.jxl::CIExy", %"struct.jxl::CIExy"* %1, i64 0, i32 0
  %6 = load double, double* %5, align 8
  %7 = fcmp oge double %6, -4.000000e+00
  %8 = fcmp ole double %6, 4.000000e+00
  %9 = and i1 %7, %8
  br i1 %9, label %10, label %33

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %0, i64 0, i32 1
  %12 = fmul double %6, 1.000000e+06
  %13 = fptrunc double %12 to float
  %14 = tail call float @llvm.round.f32(float %13) #15
  %15 = fptosi float %14 to i32
  store i32 %15, i32* %11, align 4, !alias.scope !2
  %16 = getelementptr inbounds %"struct.jxl::CIExy", %"struct.jxl::CIExy"* %1, i64 0, i32 1
  %17 = load double, double* %16, align 8
  %18 = fcmp oge double %17, -4.000000e+00
  %19 = fcmp ole double %17, 4.000000e+00
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %33

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %0, i64 0, i32 2
  %23 = fmul double %17, 1.000000e+06
  %24 = fptrunc double %23 to float
  %25 = tail call float @llvm.round.f32(float %24) #15
  %26 = fptosi float %25 to i32
  store i32 %26, i32* %22, align 4, !alias.scope !5
  %27 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #15
  store i64 -6148914691236517206, i64* %3, align 8
  %28 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  store i64 -6148914691236517206, i64* %4, align 8
  %29 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %0, i64 0, i32 0
  %30 = call i32 @_ZN3jxl6Bundle9CanEncodeERKNS_6FieldsEPmS4_(%"class.jxl::Fields"* dereferenceable(8) %29, i64* nonnull %3, i64* nonnull %4) #15
  %31 = icmp ne i32 %30, 0
  %32 = zext i1 %31 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #15
  br label %33

33:                                               ; preds = %10, %2, %21
  %34 = phi i32 [ %32, %21 ], [ 1, %2 ], [ 1, %10 ]
  ret i32 %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZN3jxl6Bundle9CanEncodeERKNS_6FieldsEPmS4_(%"class.jxl::Fields"* dereferenceable(8), i64*, i64*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3jxl22CustomTransferFunction11SetImplicitEv(%"struct.jxl::CustomTransferFunction"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %0, i64 0, i32 2
  store i8 1, i8* %6, align 4
  %7 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %0, i64 0, i32 3
  store i32 3333333, i32* %7, align 8
  %8 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %0, i64 0, i32 4
  store i32 2, i32* %8, align 4
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ true, %5 ], [ false, %1 ]
  ret i1 %10
}

; Function Attrs: nofree nounwind ssp uwtable writeonly
define hidden i32 @_ZN3jxl22CustomTransferFunction8SetGammaEd(%"struct.jxl::CustomTransferFunction"* nocapture, double) local_unnamed_addr #4 align 2 {
  %3 = fcmp olt double %1, 0x3F20000000000000
  %4 = fcmp ogt double %1, 1.000000e+00
  %5 = or i1 %3, %4
  br i1 %5, label %24, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = fadd double %1, -1.000000e+00
  %9 = tail call double @llvm.fabs.f64(double %8) #15
  %10 = fcmp ugt double %9, 1.000000e-03
  br i1 %10, label %11, label %21

11:                                               ; preds = %6
  %12 = fadd double %1, 0xBFD89D89D89D89D8
  %13 = tail call double @llvm.fabs.f64(double %12) #15
  %14 = fcmp ugt double %13, 1.000000e-03
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  store i8 1, i8* %7, align 4
  %16 = fmul double %1, 1.000000e+07
  %17 = fptrunc double %16 to float
  %18 = tail call float @llvm.round.f32(float %17)
  %19 = fptoui float %18 to i32
  %20 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %0, i64 0, i32 3
  store i32 %19, i32* %20, align 8
  br label %21

21:                                               ; preds = %11, %6, %15
  %22 = phi i32 [ 2, %15 ], [ 8, %6 ], [ 17, %11 ]
  %23 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %0, i64 0, i32 4
  store i32 %22, i32* %23, align 4
  br label %24

24:                                               ; preds = %21, %2
  %25 = phi i32 [ 1, %2 ], [ 0, %21 ]
  ret i32 %25
}

declare zeroext i1 @_ZN3jxl5DebugEPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: noreturn
declare zeroext i1 @_ZN3jxl5AbortEv() local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #6

; Function Attrs: nounwind ssp uwtable
define hidden nonnull dereferenceable(152) %"struct.jxl::ColorEncoding"* @_ZN3jxl13ColorEncoding4SRGBEb(i1 zeroext) local_unnamed_addr #1 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN3jxl13ColorEncoding4SRGBEbE2c2 to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %9, !prof !8

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3jxl13ColorEncoding4SRGBEbE2c2) #15
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  tail call fastcc void @_ZN3jxl12_GLOBAL__N_18CreateC2ENS_9PrimariesENS_16TransferFunctionE(%"struct.std::__1::array"* nonnull sret @_ZZN3jxl13ColorEncoding4SRGBEbE2c2, i32 13)
  %8 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"struct.std::__1::array"*)* @_ZNSt3__15arrayIN3jxl13ColorEncodingELm2EED2Ev to void (i8*)*), i8* bitcast (%"struct.std::__1::array"* @_ZZN3jxl13ColorEncoding4SRGBEbE2c2 to i8*), i8* nonnull @__dso_handle) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3jxl13ColorEncoding4SRGBEbE2c2) #15
  br label %9

9:                                                ; preds = %4, %7, %1
  %10 = zext i1 %0 to i64
  %11 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* @_ZZN3jxl13ColorEncoding4SRGBEbE2c2, i64 0, i32 0, i64 %10
  ret %"struct.jxl::ColorEncoding"* %11
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3jxl12_GLOBAL__N_18CreateC2ENS_9PrimariesENS_16TransferFunctionE(%"struct.std::__1::array"* noalias sret, i32) unnamed_addr #1 {
  %3 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 296, i1 false)
  %4 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ColorEncodingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 4
  %7 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %6, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl22CustomTransferFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 4, i32 1
  store i32 0, i32* %9, align 8
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %7) #15
  %10 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 7
  store i8 1, i8* %10, align 1
  %11 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 8
  %12 = bitcast %"class.jxl::PaddedBytes"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #15
  %13 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 10
  %14 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %13, i64 0, i32 0
  %15 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %13, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %14) #15
  %16 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 11
  %17 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %16, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %16, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %17) #15
  %19 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 12
  %20 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %19, i64 0, i32 0
  %21 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %19, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %20) #15
  %22 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 13
  %23 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %22, i64 0, i32 0
  %24 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %22, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %23) #15
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %4) #15
  %25 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1
  %26 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %25, i64 0, i32 0
  %27 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %25, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ColorEncodingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 4
  %29 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %28, i64 0, i32 0
  %30 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %28, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl22CustomTransferFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 4, i32 1
  store i32 0, i32* %31, align 8
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %29) #15
  %32 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 7
  store i8 1, i8* %32, align 1
  %33 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 8
  %34 = bitcast %"class.jxl::PaddedBytes"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #15
  %35 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 10
  %36 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %35, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %35, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %36) #15
  %38 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 11
  %39 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %38, i64 0, i32 0
  %40 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %38, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %39) #15
  %41 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 12
  %42 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %41, i64 0, i32 0
  %43 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %41, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %42) #15
  %44 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 13
  %45 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %44, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %44, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %45) #15
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %26) #15
  %47 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0
  %48 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 9
  store i32 0, i32* %48, align 8
  store i32 0, i32* %9, align 8
  %49 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 2
  store i32 1, i32* %49, align 4
  %50 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 3
  store i32 1, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 4, i32 2
  store i8 0, i8* %51, align 4
  %52 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 4, i32 4
  store i32 %1, i32* %52, align 4
  %53 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 8, i32 0
  store i64 0, i64* %53, align 8
  %54 = tail call i32 @_ZN3jxl18MaybeCreateProfileERKNS_13ColorEncodingEPNS_11PaddedBytesE(%"struct.jxl::ColorEncoding"* dereferenceable(152) %47, %"class.jxl::PaddedBytes"* %11) #15
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %2
  %57 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 327, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.33, i64 0, i64 0)) #15
  %58 = tail call zeroext i1 @_ZN3jxl5AbortEv() #16
  unreachable

59:                                               ; preds = %2
  %60 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 9
  store i32 1, i32* %60, align 8
  store i32 1, i32* %31, align 8
  %61 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 2
  store i32 1, i32* %61, align 4
  %62 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 3
  store i32 1, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 4, i32 2
  store i8 0, i8* %63, align 4
  %64 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 4, i32 4
  store i32 %1, i32* %64, align 4
  %65 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 8, i32 0
  store i64 0, i64* %65, align 8
  %66 = tail call i32 @_ZN3jxl18MaybeCreateProfileERKNS_13ColorEncodingEPNS_11PaddedBytesE(%"struct.jxl::ColorEncoding"* dereferenceable(152) %25, %"class.jxl::PaddedBytes"* %33) #15
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %71, label %68

68:                                               ; preds = %59
  %69 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 336, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.34, i64 0, i64 0)) #15
  %70 = tail call zeroext i1 @_ZN3jxl5AbortEv() #16
  unreachable

71:                                               ; preds = %59
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15arrayIN3jxl13ColorEncodingELm2EED2Ev(%"struct.std::__1::array"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ColorEncodingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1, i32 8, i32 2, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %4) #15
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ColorEncodingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8* null, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %10) #15
  br label %13

13:                                               ; preds = %12, %7
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden nonnull dereferenceable(152) %"struct.jxl::ColorEncoding"* @_ZN3jxl13ColorEncoding10LinearSRGBEb(i1 zeroext) local_unnamed_addr #1 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN3jxl13ColorEncoding10LinearSRGBEbE2c2 to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %9, !prof !8

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN3jxl13ColorEncoding10LinearSRGBEbE2c2) #15
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  tail call fastcc void @_ZN3jxl12_GLOBAL__N_18CreateC2ENS_9PrimariesENS_16TransferFunctionE(%"struct.std::__1::array"* nonnull sret @_ZZN3jxl13ColorEncoding10LinearSRGBEbE2c2, i32 8)
  %8 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"struct.std::__1::array"*)* @_ZNSt3__15arrayIN3jxl13ColorEncodingELm2EED2Ev to void (i8*)*), i8* bitcast (%"struct.std::__1::array"* @_ZZN3jxl13ColorEncoding10LinearSRGBEbE2c2 to i8*), i8* nonnull @__dso_handle) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN3jxl13ColorEncoding10LinearSRGBEbE2c2) #15
  br label %9

9:                                                ; preds = %4, %7, %1
  %10 = zext i1 %0 to i64
  %11 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* @_ZZN3jxl13ColorEncoding10LinearSRGBEbE2c2, i64 0, i32 0, i64 %10
  ret %"struct.jxl::ColorEncoding"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden { double, double } @_ZNK3jxl13ColorEncoding13GetWhitePointEv(%"struct.jxl::ColorEncoding"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %15 [
    i32 2, label %4
    i32 1, label %18
    i32 11, label %13
    i32 10, label %14
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 10, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = sitofp i32 %6 to double
  %8 = fmul double %7, 0x3EB0C6F7A0B5ED8D
  %9 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 10, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = sitofp i32 %10 to double
  %12 = fmul double %11, 0x3EB0C6F7A0B5ED8D
  br label %18

13:                                               ; preds = %1
  br label %18

14:                                               ; preds = %1
  br label %18

15:                                               ; preds = %1
  %16 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 377, i32 %3) #15
  %17 = tail call zeroext i1 @_ZN3jxl5AbortEv() #16
  unreachable

18:                                               ; preds = %1, %14, %13, %4
  %19 = phi double [ 0x3FD5555555555555, %14 ], [ 3.140000e-01, %13 ], [ %8, %4 ], [ 3.127000e-01, %1 ]
  %20 = phi double [ 0x3FD5555555555555, %14 ], [ 3.510000e-01, %13 ], [ %12, %4 ], [ 3.290000e-01, %1 ]
  %21 = insertvalue { double, double } undef, double %19, 0
  %22 = insertvalue { double, double } %21, double %20, 1
  ret { double, double } %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3jxl13ColorEncoding13SetWhitePointERKNS_5CIExyE(%"struct.jxl::ColorEncoding"*, %"struct.jxl::CIExy"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"struct.jxl::CIExy", %"struct.jxl::CIExy"* %1, i64 0, i32 0
  %6 = load double, double* %5, align 8
  %7 = fcmp oeq double %6, 0.000000e+00
  br i1 %7, label %70, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.jxl::CIExy", %"struct.jxl::CIExy"* %1, i64 0, i32 1
  %10 = load double, double* %9, align 8
  %11 = fcmp oeq double %10, 0.000000e+00
  br i1 %11, label %70, label %12

12:                                               ; preds = %8
  %13 = fadd double %6, -3.127000e-01
  %14 = tail call double @llvm.fabs.f64(double %13) #15
  %15 = fcmp ugt double %14, 1.000000e-03
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = fadd double %10, -3.290000e-01
  %18 = tail call double @llvm.fabs.f64(double %17) #15
  %19 = fcmp ugt double %18, 1.000000e-03
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 2
  store i32 1, i32* %21, align 4
  br label %70

22:                                               ; preds = %16, %12
  %23 = fadd double %6, 0xBFD5555555555555
  %24 = tail call double @llvm.fabs.f64(double %23) #15
  %25 = fcmp ugt double %24, 1.000000e-03
  br i1 %25, label %32, label %26

26:                                               ; preds = %22
  %27 = fadd double %10, 0xBFD5555555555555
  %28 = tail call double @llvm.fabs.f64(double %27) #15
  %29 = fcmp ugt double %28, 1.000000e-03
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 2
  store i32 10, i32* %31, align 4
  br label %70

32:                                               ; preds = %26, %22
  %33 = fadd double %6, -3.140000e-01
  %34 = tail call double @llvm.fabs.f64(double %33) #15
  %35 = fcmp ugt double %34, 1.000000e-03
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = fadd double %10, -3.510000e-01
  %38 = tail call double @llvm.fabs.f64(double %37) #15
  %39 = fcmp ugt double %38, 1.000000e-03
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 2
  store i32 11, i32* %41, align 4
  br label %70

42:                                               ; preds = %36, %32
  %43 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 2
  store i32 2, i32* %43, align 4
  %44 = load double, double* %5, align 8
  %45 = fcmp oge double %44, -4.000000e+00
  %46 = fcmp ole double %44, 4.000000e+00
  %47 = and i1 %45, %46
  br i1 %47, label %48, label %70

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 10, i32 1
  %50 = fmul double %44, 1.000000e+06
  %51 = fptrunc double %50 to float
  %52 = tail call float @llvm.round.f32(float %51) #15
  %53 = fptosi float %52 to i32
  store i32 %53, i32* %49, align 4, !alias.scope !9
  %54 = load double, double* %9, align 8
  %55 = fcmp oge double %54, -4.000000e+00
  %56 = fcmp ole double %54, 4.000000e+00
  %57 = and i1 %55, %56
  br i1 %57, label %58, label %70

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 10, i32 2
  %60 = fmul double %54, 1.000000e+06
  %61 = fptrunc double %60 to float
  %62 = tail call float @llvm.round.f32(float %61) #15
  %63 = fptosi float %62 to i32
  store i32 %63, i32* %59, align 4, !alias.scope !12
  %64 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #15
  store i64 -6148914691236517206, i64* %3, align 8
  %65 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #15
  store i64 -6148914691236517206, i64* %4, align 8
  %66 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 10, i32 0
  %67 = call i32 @_ZN3jxl6Bundle9CanEncodeERKNS_6FieldsEPmS4_(%"class.jxl::Fields"* dereferenceable(8) %66, i64* nonnull %3, i64* nonnull %4) #15
  %68 = icmp ne i32 %67, 0
  %69 = zext i1 %68 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #15
  br label %70

70:                                               ; preds = %2, %8, %58, %48, %42, %40, %30, %20
  %71 = phi i32 [ 0, %20 ], [ 0, %30 ], [ 0, %40 ], [ %69, %58 ], [ 1, %42 ], [ 1, %48 ], [ 1, %8 ], [ 1, %2 ]
  ret i32 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3jxl13ColorEncoding12GetPrimariesEv(%"struct.jxl::PrimariesCIExy"* noalias nocapture sret, %"struct.jxl::ColorEncoding"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 9
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, -1
  %6 = icmp ugt i32 %5, 1
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0)) #15
  %9 = tail call zeroext i1 @_ZN3jxl5AbortEv() #16
  unreachable

10:                                               ; preds = %2
  %11 = bitcast %"struct.jxl::PrimariesCIExy"* %0 to i8*
  %12 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %0, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %0, i64 0, i32 2, i32 0
  %14 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %0, i64 0, i32 2, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 48, i1 false) #15
  %15 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  switch i32 %16, label %54 [
    i32 2, label %17
    i32 1, label %45
    i32 9, label %48
    i32 11, label %51
  ]

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %0, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %0, i64 0, i32 1, i32 1
  %20 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %0, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 11, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = sitofp i32 %22 to double
  %24 = fmul double %23, 0x3EB0C6F7A0B5ED8D
  %25 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 11, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = sitofp i32 %26 to double
  %28 = fmul double %27, 0x3EB0C6F7A0B5ED8D
  store double %24, double* %18, align 8
  store double %28, double* %20, align 8
  %29 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 12, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = sitofp i32 %30 to double
  %32 = fmul double %31, 0x3EB0C6F7A0B5ED8D
  %33 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 12, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = sitofp i32 %34 to double
  %36 = fmul double %35, 0x3EB0C6F7A0B5ED8D
  store double %32, double* %12, align 8
  store double %36, double* %19, align 8
  %37 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 13, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = sitofp i32 %38 to double
  %40 = fmul double %39, 0x3EB0C6F7A0B5ED8D
  %41 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 13, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = sitofp i32 %42 to double
  %44 = fmul double %43, 0x3EB0C6F7A0B5ED8D
  br label %57

45:                                               ; preds = %10
  %46 = bitcast %"struct.jxl::PrimariesCIExy"* %0 to <2 x double>*
  store <2 x double> <double 0x3FE47ADE863B4B8E, double 0x3FD51EE2D783BD98>, <2 x double>* %46, align 8
  %47 = bitcast double* %12 to <2 x double>*
  store <2 x double> <double 0x3FD33343123D332B, double 0x3FE3333A3D79C44D>, <2 x double>* %47, align 8
  br label %57

48:                                               ; preds = %10
  %49 = bitcast %"struct.jxl::PrimariesCIExy"* %0 to <2 x double>*
  store <2 x double> <double 0x3FE6A7EF9DB22D0E, double 2.920000e-01>, <2 x double>* %49, align 8
  %50 = bitcast double* %12 to <2 x double>*
  store <2 x double> <double 1.700000e-01, double 7.970000e-01>, <2 x double>* %50, align 8
  br label %57

51:                                               ; preds = %10
  %52 = bitcast %"struct.jxl::PrimariesCIExy"* %0 to <2 x double>*
  store <2 x double> <double 6.800000e-01, double 3.200000e-01>, <2 x double>* %52, align 8
  %53 = bitcast double* %12 to <2 x double>*
  store <2 x double> <double 2.650000e-01, double 6.900000e-01>, <2 x double>* %53, align 8
  br label %57

54:                                               ; preds = %10
  %55 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 439, i32 %16) #15
  %56 = tail call zeroext i1 @_ZN3jxl5AbortEv() #16
  unreachable

57:                                               ; preds = %51, %48, %45, %17
  %58 = phi double [ 1.500000e-01, %51 ], [ 1.310000e-01, %48 ], [ 0x3FC333445CF39860, %45 ], [ %40, %17 ]
  %59 = phi double [ 6.000000e-02, %51 ], [ 4.600000e-02, %48 ], [ 0x3FAEB7F41A1018F4, %45 ], [ %44, %17 ]
  store double %58, double* %13, align 8
  store double %59, double* %14, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3jxl13ColorEncoding12SetPrimariesERKNS_14PrimariesCIExyE(%"struct.jxl::ColorEncoding"*, %"struct.jxl::PrimariesCIExy"* nocapture readonly dereferenceable(48)) local_unnamed_addr #1 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = icmp ugt i32 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 444, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0)) #15
  %15 = tail call zeroext i1 @_ZN3jxl5AbortEv() #16
  unreachable

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %1, i64 0, i32 0, i32 0
  %18 = load double, double* %17, align 8
  %19 = fcmp oeq double %18, 0.000000e+00
  br i1 %19, label %198, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %1, i64 0, i32 0, i32 1
  %22 = load double, double* %21, align 8
  %23 = fcmp oeq double %22, 0.000000e+00
  br i1 %23, label %198, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %1, i64 0, i32 1, i32 0
  %26 = load double, double* %25, align 8
  %27 = fcmp oeq double %26, 0.000000e+00
  br i1 %27, label %198, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %1, i64 0, i32 1, i32 1
  %30 = load double, double* %29, align 8
  %31 = fcmp oeq double %30, 0.000000e+00
  br i1 %31, label %198, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %1, i64 0, i32 2, i32 0
  %34 = load double, double* %33, align 8
  %35 = fcmp oeq double %34, 0.000000e+00
  br i1 %35, label %198, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %1, i64 0, i32 2, i32 1
  %38 = load double, double* %37, align 8
  %39 = fcmp oeq double %38, 0.000000e+00
  br i1 %39, label %198, label %40

40:                                               ; preds = %36
  %41 = fadd double %18, -6.400000e-01
  %42 = tail call double @llvm.fabs.f64(double %41) #15
  %43 = fcmp ugt double %42, 1.000000e-03
  br i1 %43, label %66, label %44

44:                                               ; preds = %40
  %45 = fadd double %22, -3.300000e-01
  %46 = tail call double @llvm.fabs.f64(double %45) #15
  %47 = fcmp ugt double %46, 1.000000e-03
  br i1 %47, label %66, label %48

48:                                               ; preds = %44
  %49 = fadd double %26, -3.000000e-01
  %50 = tail call double @llvm.fabs.f64(double %49) #15
  %51 = fcmp ugt double %50, 1.000000e-03
  br i1 %51, label %66, label %52

52:                                               ; preds = %48
  %53 = fadd double %30, -6.000000e-01
  %54 = tail call double @llvm.fabs.f64(double %53) #15
  %55 = fcmp ugt double %54, 1.000000e-03
  br i1 %55, label %66, label %56

56:                                               ; preds = %52
  %57 = fadd double %34, -1.500000e-01
  %58 = tail call double @llvm.fabs.f64(double %57) #15
  %59 = fcmp ugt double %58, 1.000000e-03
  br i1 %59, label %66, label %60

60:                                               ; preds = %56
  %61 = fadd double %38, -6.000000e-02
  %62 = tail call double @llvm.fabs.f64(double %61) #15
  %63 = fcmp ugt double %62, 1.000000e-03
  br i1 %63, label %66, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 3
  store i32 1, i32* %65, align 8
  br label %198

66:                                               ; preds = %60, %56, %52, %48, %44, %40
  %67 = fadd double %18, 0xBFE6A7EF9DB22D0E
  %68 = tail call double @llvm.fabs.f64(double %67) #15
  %69 = fcmp ugt double %68, 1.000000e-03
  br i1 %69, label %92, label %70

70:                                               ; preds = %66
  %71 = fadd double %22, -2.920000e-01
  %72 = tail call double @llvm.fabs.f64(double %71) #15
  %73 = fcmp ugt double %72, 1.000000e-03
  br i1 %73, label %92, label %74

74:                                               ; preds = %70
  %75 = fadd double %26, -1.700000e-01
  %76 = tail call double @llvm.fabs.f64(double %75) #15
  %77 = fcmp ugt double %76, 1.000000e-03
  br i1 %77, label %92, label %78

78:                                               ; preds = %74
  %79 = fadd double %30, -7.970000e-01
  %80 = tail call double @llvm.fabs.f64(double %79) #15
  %81 = fcmp ugt double %80, 1.000000e-03
  br i1 %81, label %92, label %82

82:                                               ; preds = %78
  %83 = fadd double %34, -1.310000e-01
  %84 = tail call double @llvm.fabs.f64(double %83) #15
  %85 = fcmp ugt double %84, 1.000000e-03
  br i1 %85, label %92, label %86

86:                                               ; preds = %82
  %87 = fadd double %38, -4.600000e-02
  %88 = tail call double @llvm.fabs.f64(double %87) #15
  %89 = fcmp ugt double %88, 1.000000e-03
  br i1 %89, label %92, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 3
  store i32 9, i32* %91, align 8
  br label %198

92:                                               ; preds = %86, %82, %78, %74, %70, %66
  %93 = fadd double %18, -6.800000e-01
  %94 = tail call double @llvm.fabs.f64(double %93) #15
  %95 = fcmp ugt double %94, 1.000000e-03
  br i1 %95, label %118, label %96

96:                                               ; preds = %92
  %97 = fadd double %22, -3.200000e-01
  %98 = tail call double @llvm.fabs.f64(double %97) #15
  %99 = fcmp ugt double %98, 1.000000e-03
  br i1 %99, label %118, label %100

100:                                              ; preds = %96
  %101 = fadd double %26, -2.650000e-01
  %102 = tail call double @llvm.fabs.f64(double %101) #15
  %103 = fcmp ugt double %102, 1.000000e-03
  br i1 %103, label %118, label %104

104:                                              ; preds = %100
  %105 = fadd double %30, -6.900000e-01
  %106 = tail call double @llvm.fabs.f64(double %105) #15
  %107 = fcmp ugt double %106, 1.000000e-03
  br i1 %107, label %118, label %108

108:                                              ; preds = %104
  %109 = fadd double %34, -1.500000e-01
  %110 = tail call double @llvm.fabs.f64(double %109) #15
  %111 = fcmp ugt double %110, 1.000000e-03
  br i1 %111, label %118, label %112

112:                                              ; preds = %108
  %113 = fadd double %38, -6.000000e-02
  %114 = tail call double @llvm.fabs.f64(double %113) #15
  %115 = fcmp ugt double %114, 1.000000e-03
  br i1 %115, label %118, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 3
  store i32 11, i32* %117, align 8
  br label %198

118:                                              ; preds = %112, %108, %104, %100, %96, %92
  %119 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 3
  store i32 2, i32* %119, align 8
  %120 = load double, double* %17, align 8
  %121 = fcmp oge double %120, -4.000000e+00
  %122 = fcmp ole double %120, 4.000000e+00
  %123 = and i1 %121, %122
  br i1 %123, label %124, label %198

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 11, i32 1
  %126 = fmul double %120, 1.000000e+06
  %127 = fptrunc double %126 to float
  %128 = tail call float @llvm.round.f32(float %127) #15
  %129 = fptosi float %128 to i32
  store i32 %129, i32* %125, align 4, !alias.scope !15
  %130 = load double, double* %21, align 8
  %131 = fcmp oge double %130, -4.000000e+00
  %132 = fcmp ole double %130, 4.000000e+00
  %133 = and i1 %131, %132
  br i1 %133, label %134, label %198

134:                                              ; preds = %124
  %135 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 11, i32 2
  %136 = fmul double %130, 1.000000e+06
  %137 = fptrunc double %136 to float
  %138 = tail call float @llvm.round.f32(float %137) #15
  %139 = fptosi float %138 to i32
  store i32 %139, i32* %135, align 4, !alias.scope !18
  %140 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #15
  store i64 -6148914691236517206, i64* %3, align 8
  %141 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #15
  store i64 -6148914691236517206, i64* %4, align 8
  %142 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 11, i32 0
  %143 = call i32 @_ZN3jxl6Bundle9CanEncodeERKNS_6FieldsEPmS4_(%"class.jxl::Fields"* dereferenceable(8) %142, i64* nonnull %3, i64* nonnull %4) #15
  %144 = icmp eq i32 %143, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #15
  br i1 %144, label %145, label %198

145:                                              ; preds = %134
  %146 = load double, double* %25, align 8
  %147 = fcmp oge double %146, -4.000000e+00
  %148 = fcmp ole double %146, 4.000000e+00
  %149 = and i1 %147, %148
  br i1 %149, label %150, label %198

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 12, i32 1
  %152 = fmul double %146, 1.000000e+06
  %153 = fptrunc double %152 to float
  %154 = call float @llvm.round.f32(float %153) #15
  %155 = fptosi float %154 to i32
  store i32 %155, i32* %151, align 4, !alias.scope !21
  %156 = load double, double* %29, align 8
  %157 = fcmp oge double %156, -4.000000e+00
  %158 = fcmp ole double %156, 4.000000e+00
  %159 = and i1 %157, %158
  br i1 %159, label %160, label %198

160:                                              ; preds = %150
  %161 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 12, i32 2
  %162 = fmul double %156, 1.000000e+06
  %163 = fptrunc double %162 to float
  %164 = call float @llvm.round.f32(float %163) #15
  %165 = fptosi float %164 to i32
  store i32 %165, i32* %161, align 4, !alias.scope !24
  %166 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #15
  store i64 -6148914691236517206, i64* %5, align 8
  %167 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #15
  store i64 -6148914691236517206, i64* %6, align 8
  %168 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 12, i32 0
  %169 = call i32 @_ZN3jxl6Bundle9CanEncodeERKNS_6FieldsEPmS4_(%"class.jxl::Fields"* dereferenceable(8) %168, i64* nonnull %5, i64* nonnull %6) #15
  %170 = icmp eq i32 %169, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #15
  br i1 %170, label %171, label %198

171:                                              ; preds = %160
  %172 = load double, double* %33, align 8
  %173 = fcmp oge double %172, -4.000000e+00
  %174 = fcmp ole double %172, 4.000000e+00
  %175 = and i1 %173, %174
  br i1 %175, label %176, label %198

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 13, i32 1
  %178 = fmul double %172, 1.000000e+06
  %179 = fptrunc double %178 to float
  %180 = call float @llvm.round.f32(float %179) #15
  %181 = fptosi float %180 to i32
  store i32 %181, i32* %177, align 4, !alias.scope !27
  %182 = load double, double* %37, align 8
  %183 = fcmp oge double %182, -4.000000e+00
  %184 = fcmp ole double %182, 4.000000e+00
  %185 = and i1 %183, %184
  br i1 %185, label %186, label %198

186:                                              ; preds = %176
  %187 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 13, i32 2
  %188 = fmul double %182, 1.000000e+06
  %189 = fptrunc double %188 to float
  %190 = call float @llvm.round.f32(float %189) #15
  %191 = fptosi float %190 to i32
  store i32 %191, i32* %187, align 4, !alias.scope !30
  %192 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %192) #15
  store i64 -6148914691236517206, i64* %7, align 8
  %193 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #15
  store i64 -6148914691236517206, i64* %8, align 8
  %194 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 13, i32 0
  %195 = call i32 @_ZN3jxl6Bundle9CanEncodeERKNS_6FieldsEPmS4_(%"class.jxl::Fields"* dereferenceable(8) %194, i64* nonnull %7, i64* nonnull %8) #15
  %196 = icmp ne i32 %195, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %192) #15
  %197 = zext i1 %196 to i32
  ret i32 %197

198:                                              ; preds = %16, %20, %24, %28, %32, %36, %176, %171, %150, %145, %124, %118, %160, %134, %116, %90, %64
  %199 = phi i32 [ 0, %64 ], [ 0, %90 ], [ 0, %116 ], [ 1, %134 ], [ 1, %160 ], [ 1, %118 ], [ 1, %124 ], [ 1, %145 ], [ 1, %150 ], [ 1, %171 ], [ 1, %176 ], [ 1, %36 ], [ 1, %32 ], [ 1, %28 ], [ 1, %24 ], [ 1, %20 ], [ 1, %16 ]
  ret i32 %199
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3jxl13ColorEncoding9CreateICCEv(%"struct.jxl::ColorEncoding"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 8, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 8
  %4 = tail call i32 @_ZN3jxl18MaybeCreateProfileERKNS_13ColorEncodingEPNS_11PaddedBytesE(%"struct.jxl::ColorEncoding"* dereferenceable(152) %0, %"class.jxl::PaddedBytes"* %3) #15
  %5 = icmp ne i32 %4, 0
  %6 = zext i1 %5 to i32
  ret i32 %6
}

declare i32 @_ZN3jxl18MaybeCreateProfileERKNS_13ColorEncodingEPNS_11PaddedBytesE(%"struct.jxl::ColorEncoding"* dereferenceable(152), %"class.jxl::PaddedBytes"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl11DescriptionERKNS_13ColorEncodingE(%"class.std::__1::basic_string"* noalias sret, %"struct.jxl::ColorEncoding"* nocapture readonly dereferenceable(152)) local_unnamed_addr #1 {
  %3 = alloca [32 x i8], align 16
  %4 = alloca %"struct.jxl::ColorEncoding", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"struct.jxl::PrimariesCIExy", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = bitcast %"struct.jxl::ColorEncoding"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %25) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 152, i1 false)
  %26 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ColorEncodingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 12, i1 false) #15
  %29 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 4, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl22CustomTransferFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 4, i32 1
  %31 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 4, i32 1
  %32 = bitcast i32* %30 to i8*
  %33 = bitcast i32* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 16, i1 false) #15
  %34 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 5
  %35 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 5
  %36 = bitcast i32* %34 to i8*
  %37 = bitcast i32* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 6, i1 false) #15
  %38 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 8
  %39 = getelementptr inbounds %"class.jxl::PaddedBytes", %"class.jxl::PaddedBytes"* %38, i64 0, i32 0
  %40 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 8, i32 0
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 8, i32 1
  %43 = icmp eq i64 %41, 0
  %44 = bitcast i64* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #15
  br i1 %43, label %53, label %45

45:                                               ; preds = %2
  call void @_ZN3jxl11PaddedBytes18IncreaseCapacityToEm(%"class.jxl::PaddedBytes"* %38, i64 %41) #15
  %46 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %53, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = load i64, i64* %39, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %47, i8* align 1 %51, i64 %52, i1 false) #15
  br label %53

53:                                               ; preds = %2, %45, %49
  %54 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 9
  %55 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 9
  %56 = load i32, i32* %55, align 8
  store i32 %56, i32* %54, align 8
  %57 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 10, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 10, i32 1
  %59 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 10, i32 1
  %60 = bitcast i32* %59 to i64*
  %61 = bitcast i32* %58 to i64*
  %62 = load i64, i64* %60, align 8
  store i64 %62, i64* %61, align 8
  %63 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 11, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %64 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 11, i32 1
  %65 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 11, i32 1
  %66 = bitcast i32* %65 to i64*
  %67 = bitcast i32* %64 to i64*
  %68 = load i64, i64* %66, align 8
  store i64 %68, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 12, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %70 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 12, i32 1
  %71 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 12, i32 1
  %72 = bitcast i32* %71 to i64*
  %73 = bitcast i32* %70 to i64*
  %74 = load i64, i64* %72, align 8
  store i64 %74, i64* %73, align 8
  %75 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 13, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  %76 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 13, i32 1
  %77 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 13, i32 1
  %78 = bitcast i32* %77 to i64*
  %79 = bitcast i32* %76 to i64*
  %80 = load i64, i64* %78, align 8
  store i64 %80, i64* %79, align 8
  %81 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 -86, i64 24, i1 false)
  switch i32 %56, label %94 [
    i32 0, label %82
    i32 1, label %86
    i32 2, label %97
    i32 3, label %90
  ]

82:                                               ; preds = %53
  %83 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  store i8 3, i8* %84, align 1, !alias.scope !33
  %85 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i64 3, i1 false) #15
  br label %103

86:                                               ; preds = %53
  %87 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  store i8 3, i8* %88, align 1, !alias.scope !33
  %89 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0), i64 3, i1 false) #15
  br label %103

90:                                               ; preds = %53
  %91 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  store i8 3, i8* %92, align 1, !alias.scope !33
  %93 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0), i64 3, i1 false) #15
  br label %103

94:                                               ; preds = %53
  %95 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 47, i32 %56) #15, !noalias !33
  %96 = call zeroext i1 @_ZN3jxl5AbortEv() #16, !noalias !33
  unreachable

97:                                               ; preds = %53
  %98 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  store i8 3, i8* %99, align 1, !alias.scope !33
  %100 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i64 3, i1 false) #15
  %101 = getelementptr inbounds i8, i8* %100, i64 3
  store i8 0, i8* %101, align 1, !alias.scope !33
  %102 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 2
  store i32 1, i32* %102, align 4
  br label %240

103:                                              ; preds = %90, %86, %82
  %104 = phi i8* [ %93, %90 ], [ %89, %86 ], [ %85, %82 ]
  %105 = getelementptr inbounds i8, i8* %104, i64 3
  store i8 0, i8* %105, align 1, !alias.scope !33
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %0, i8 signext 95) #15
  %106 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 2
  br i1 %108, label %109, label %215

109:                                              ; preds = %103
  %110 = load i32, i32* %58, align 8
  %111 = sitofp i32 %110 to double
  %112 = fmul double %111, 0x3EB0C6F7A0B5ED8D
  %113 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 10, i32 2
  %114 = load i32, i32* %113, align 4
  %115 = sitofp i32 %114 to double
  %116 = fmul double %115, 0x3EB0C6F7A0B5ED8D
  %117 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #15
  %118 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #15
  %119 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %119) #15, !noalias !36
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %119, i8 0, i64 32, i1 false) #15, !noalias !36
  %120 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %119, i64 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i64 0, i64 0), double %112) #15, !noalias !36
  %121 = call i64 @strlen(i8* nonnull %119) #15, !noalias !36
  %122 = icmp ugt i64 %121, -17
  br i1 %122, label %123, label %125

123:                                              ; preds = %109
  %124 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %124) #16
  unreachable

125:                                              ; preds = %109
  %126 = icmp ult i64 %121, 23
  br i1 %126, label %135, label %127

127:                                              ; preds = %125
  %128 = add nuw i64 %121, 16
  %129 = and i64 %128, -16
  %130 = call i8* @_Znwm(i64 %129) #17
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %130, i8** %131, align 8, !alias.scope !36
  %132 = or i64 %129, -9223372036854775808
  %133 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %132, i64* %133, align 8, !alias.scope !36
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %121, i64* %134, align 8, !alias.scope !36
  br label %140

135:                                              ; preds = %125
  %136 = trunc i64 %121 to i8
  %137 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  store i8 %136, i8* %138, align 1, !alias.scope !36
  %139 = icmp eq i64 %121, 0
  br i1 %139, label %142, label %140

140:                                              ; preds = %135, %127
  %141 = phi i8* [ %130, %127 ], [ %118, %135 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %141, i8* nonnull align 16 %119, i64 %121, i1 false) #15
  br label %142

142:                                              ; preds = %135, %140
  %143 = phi i8* [ %118, %135 ], [ %141, %140 ]
  %144 = getelementptr inbounds i8, i8* %143, i64 %121
  store i8 0, i8* %144, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %119) #15, !noalias !36
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %6, i8 signext 59) #15, !noalias !39
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %117, i8* nonnull align 8 %118, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 0, i64 24, i1 false) #15, !noalias !39
  %145 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %145, i64 0, i32 1, i32 0
  %147 = load i8, i8* %146, align 1
  %148 = icmp slt i8 %147, 0
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %152 = load i64, i64* %151, align 8
  %153 = zext i8 %147 to i64
  %154 = select i1 %148, i8* %150, i8* %117
  %155 = select i1 %148, i64 %152, i64 %153
  %156 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %154, i64 %155) #15
  %157 = load i8, i8* %146, align 1
  %158 = icmp slt i8 %157, 0
  br i1 %158, label %159, label %161

159:                                              ; preds = %142
  %160 = load i8*, i8** %149, align 8
  call void @_ZdlPv(i8* %160) #17
  br label %161

161:                                              ; preds = %142, %159
  %162 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load i8*, i8** %167, align 8
  call void @_ZdlPv(i8* %168) #17
  br label %169

169:                                              ; preds = %161, %166
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #15
  %170 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #15
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %119) #15, !noalias !42
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %119, i8 0, i64 32, i1 false) #15, !noalias !42
  %171 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %119, i64 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i64 0, i64 0), double %116) #15, !noalias !42
  %172 = call i64 @strlen(i8* nonnull %119) #15, !noalias !42
  %173 = icmp ugt i64 %172, -17
  br i1 %173, label %174, label %176

174:                                              ; preds = %169
  %175 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %175) #16
  unreachable

176:                                              ; preds = %169
  %177 = icmp ult i64 %172, 23
  br i1 %177, label %187, label %178

178:                                              ; preds = %176
  %179 = add nuw i64 %172, 16
  %180 = and i64 %179, -16
  %181 = call i8* @_Znwm(i64 %180) #17
  %182 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %181, i8** %182, align 8, !alias.scope !42
  %183 = or i64 %180, -9223372036854775808
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %183, i64* %184, align 8, !alias.scope !42
  %185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %172, i64* %185, align 8, !alias.scope !42
  %186 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %192

187:                                              ; preds = %176
  %188 = trunc i64 %172 to i8
  %189 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %190 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %189, i64 0, i32 1, i32 0
  store i8 %188, i8* %190, align 1, !alias.scope !42
  %191 = icmp eq i64 %172, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %187, %178
  %193 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %189, %187 ], [ %186, %178 ]
  %194 = phi i8* [ %170, %187 ], [ %181, %178 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %194, i8* nonnull align 16 %119, i64 %172, i1 false) #15
  br label %195

195:                                              ; preds = %187, %192
  %196 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %189, %187 ], [ %193, %192 ]
  %197 = phi i8* [ %170, %187 ], [ %194, %192 ]
  %198 = getelementptr inbounds i8, i8* %197, i64 %172
  store i8 0, i8* %198, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %119) #15, !noalias !42
  %199 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %196, i64 0, i32 1, i32 0
  %200 = load i8, i8* %199, align 1
  %201 = icmp slt i8 %200, 0
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i8*, i8** %202, align 8
  %204 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %205 = load i64, i64* %204, align 8
  %206 = zext i8 %200 to i64
  %207 = select i1 %201, i8* %203, i8* %170
  %208 = select i1 %201, i64 %205, i64 %206
  %209 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %207, i64 %208) #15
  %210 = load i8, i8* %199, align 1
  %211 = icmp slt i8 %210, 0
  br i1 %211, label %212, label %214

212:                                              ; preds = %195
  %213 = load i8*, i8** %202, align 8
  call void @_ZdlPv(i8* %213) #17
  br label %214

214:                                              ; preds = %195, %212
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #15
  br label %240

215:                                              ; preds = %103
  %216 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %216) #15
  switch i32 %107, label %226 [
    i32 1, label %217
    i32 11, label %223
    i32 10, label %220
  ]

217:                                              ; preds = %215
  %218 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %219 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %218, i64 0, i32 1, i32 0
  store i8 3, i8* %219, align 1, !alias.scope !45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %216, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0), i64 3, i1 false) #15
  br label %229

220:                                              ; preds = %215
  %221 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %222 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %221, i64 0, i32 1, i32 0
  store i8 3, i8* %222, align 1, !alias.scope !45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %216, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i64 3, i1 false) #15
  br label %229

223:                                              ; preds = %215
  %224 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %225 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %224, i64 0, i32 1, i32 0
  store i8 3, i8* %225, align 1, !alias.scope !45
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %216, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i64 3, i1 false) #15
  br label %229

226:                                              ; preds = %215
  %227 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 62, i32 %107) #15, !noalias !45
  %228 = call zeroext i1 @_ZN3jxl5AbortEv() #16, !noalias !45
  unreachable

229:                                              ; preds = %217, %220, %223
  %230 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %218, %217 ], [ %221, %220 ], [ %224, %223 ]
  %231 = getelementptr inbounds i8, i8* %216, i64 3
  store i8 0, i8* %231, align 1, !alias.scope !45
  %232 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %230, i64 0, i32 1, i32 0
  %233 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* nonnull %216, i64 3) #15
  %234 = load i8, i8* %232, align 1
  %235 = icmp slt i8 %234, 0
  br i1 %235, label %236, label %239

236:                                              ; preds = %229
  %237 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i8*, i8** %237, align 8
  call void @_ZdlPv(i8* %238) #17
  br label %239

239:                                              ; preds = %229, %236
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %216) #15
  br label %240

240:                                              ; preds = %97, %214, %239
  %241 = load i32, i32* %54, align 8
  %242 = add i32 %241, -1
  %243 = icmp ugt i32 %242, 1
  br i1 %243, label %244, label %594

244:                                              ; preds = %240
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %0, i8 signext 95) #15
  %245 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 3
  %246 = load i32, i32* %245, align 8
  %247 = icmp eq i32 %246, 2
  br i1 %247, label %248, label %569

248:                                              ; preds = %244
  %249 = bitcast %"struct.jxl::PrimariesCIExy"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %249) #15
  %250 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %9, i64 0, i32 0, i32 0
  %251 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %9, i64 0, i32 0, i32 1
  %252 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %9, i64 0, i32 1, i32 0
  %253 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %9, i64 0, i32 1, i32 1
  %254 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %9, i64 0, i32 2, i32 0
  %255 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %9, i64 0, i32 2, i32 1
  %256 = bitcast %"struct.jxl::PrimariesCIExy"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %256, i8 -1, i64 48, i1 false)
  call void @_ZNK3jxl13ColorEncoding12GetPrimariesEv(%"struct.jxl::PrimariesCIExy"* nonnull sret %9, %"struct.jxl::ColorEncoding"* nonnull %4)
  %257 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %257) #15
  %258 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %258) #15
  %259 = load double, double* %250, align 8
  %260 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %260) #15, !noalias !48
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %260, i8 0, i64 32, i1 false) #15, !noalias !48
  %261 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %260, i64 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i64 0, i64 0), double %259) #15, !noalias !48
  %262 = call i64 @strlen(i8* nonnull %260) #15, !noalias !48
  %263 = icmp ugt i64 %262, -17
  br i1 %263, label %264, label %266

264:                                              ; preds = %248
  %265 = bitcast %"class.std::__1::basic_string"* %11 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %265) #16
  unreachable

266:                                              ; preds = %248
  %267 = icmp ult i64 %262, 23
  br i1 %267, label %276, label %268

268:                                              ; preds = %266
  %269 = add nuw i64 %262, 16
  %270 = and i64 %269, -16
  %271 = call i8* @_Znwm(i64 %270) #17
  %272 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %271, i8** %272, align 8, !alias.scope !48
  %273 = or i64 %270, -9223372036854775808
  %274 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %273, i64* %274, align 8, !alias.scope !48
  %275 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %262, i64* %275, align 8, !alias.scope !48
  br label %281

276:                                              ; preds = %266
  %277 = trunc i64 %262 to i8
  %278 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %279 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %278, i64 0, i32 1, i32 0
  store i8 %277, i8* %279, align 1, !alias.scope !48
  %280 = icmp eq i64 %262, 0
  br i1 %280, label %283, label %281

281:                                              ; preds = %276, %268
  %282 = phi i8* [ %271, %268 ], [ %258, %276 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %282, i8* nonnull align 16 %260, i64 %262, i1 false) #15
  br label %283

283:                                              ; preds = %276, %281
  %284 = phi i8* [ %258, %276 ], [ %282, %281 ]
  %285 = getelementptr inbounds i8, i8* %284, i64 %262
  store i8 0, i8* %285, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %260) #15, !noalias !48
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %11, i8 signext 59) #15, !noalias !51
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %257, i8* nonnull align 8 %258, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %258, i8 0, i64 24, i1 false) #15, !noalias !51
  %286 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %287 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %286, i64 0, i32 1, i32 0
  %288 = load i8, i8* %287, align 1
  %289 = icmp slt i8 %288, 0
  %290 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = load i8*, i8** %290, align 8
  %292 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %293 = load i64, i64* %292, align 8
  %294 = zext i8 %288 to i64
  %295 = select i1 %289, i8* %291, i8* %257
  %296 = select i1 %289, i64 %293, i64 %294
  %297 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %295, i64 %296) #15
  %298 = load i8, i8* %287, align 1
  %299 = icmp slt i8 %298, 0
  br i1 %299, label %300, label %302

300:                                              ; preds = %283
  %301 = load i8*, i8** %290, align 8
  call void @_ZdlPv(i8* %301) #17
  br label %302

302:                                              ; preds = %283, %300
  %303 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %304 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %303, i64 0, i32 1, i32 0
  %305 = load i8, i8* %304, align 1
  %306 = icmp slt i8 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %302
  %308 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load i8*, i8** %308, align 8
  call void @_ZdlPv(i8* %309) #17
  br label %310

310:                                              ; preds = %302, %307
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %258) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %257) #15
  %311 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %311) #15
  %312 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %312) #15
  %313 = load double, double* %251, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %260) #15, !noalias !54
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %260, i8 0, i64 32, i1 false) #15, !noalias !54
  %314 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %260, i64 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i64 0, i64 0), double %313) #15, !noalias !54
  %315 = call i64 @strlen(i8* nonnull %260) #15, !noalias !54
  %316 = icmp ugt i64 %315, -17
  br i1 %316, label %317, label %319

317:                                              ; preds = %310
  %318 = bitcast %"class.std::__1::basic_string"* %13 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %318) #16
  unreachable

319:                                              ; preds = %310
  %320 = icmp ult i64 %315, 23
  br i1 %320, label %329, label %321

321:                                              ; preds = %319
  %322 = add nuw i64 %315, 16
  %323 = and i64 %322, -16
  %324 = call i8* @_Znwm(i64 %323) #17
  %325 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %324, i8** %325, align 8, !alias.scope !54
  %326 = or i64 %323, -9223372036854775808
  %327 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %326, i64* %327, align 8, !alias.scope !54
  %328 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %315, i64* %328, align 8, !alias.scope !54
  br label %334

329:                                              ; preds = %319
  %330 = trunc i64 %315 to i8
  %331 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %331, i64 0, i32 1, i32 0
  store i8 %330, i8* %332, align 1, !alias.scope !54
  %333 = icmp eq i64 %315, 0
  br i1 %333, label %336, label %334

334:                                              ; preds = %329, %321
  %335 = phi i8* [ %324, %321 ], [ %312, %329 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %335, i8* nonnull align 16 %260, i64 %315, i1 false) #15
  br label %336

336:                                              ; preds = %329, %334
  %337 = phi i8* [ %312, %329 ], [ %335, %334 ]
  %338 = getelementptr inbounds i8, i8* %337, i64 %315
  store i8 0, i8* %338, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %260) #15, !noalias !54
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %13, i8 signext 59) #15, !noalias !57
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %311, i8* nonnull align 8 %312, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %312, i8 0, i64 24, i1 false) #15, !noalias !57
  %339 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %340 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %339, i64 0, i32 1, i32 0
  %341 = load i8, i8* %340, align 1
  %342 = icmp slt i8 %341, 0
  %343 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = load i8*, i8** %343, align 8
  %345 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %346 = load i64, i64* %345, align 8
  %347 = zext i8 %341 to i64
  %348 = select i1 %342, i8* %344, i8* %311
  %349 = select i1 %342, i64 %346, i64 %347
  %350 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %348, i64 %349) #15
  %351 = load i8, i8* %340, align 1
  %352 = icmp slt i8 %351, 0
  br i1 %352, label %353, label %355

353:                                              ; preds = %336
  %354 = load i8*, i8** %343, align 8
  call void @_ZdlPv(i8* %354) #17
  br label %355

355:                                              ; preds = %336, %353
  %356 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %357 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %356, i64 0, i32 1, i32 0
  %358 = load i8, i8* %357, align 1
  %359 = icmp slt i8 %358, 0
  br i1 %359, label %360, label %363

360:                                              ; preds = %355
  %361 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %362 = load i8*, i8** %361, align 8
  call void @_ZdlPv(i8* %362) #17
  br label %363

363:                                              ; preds = %355, %360
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %312) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %311) #15
  %364 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %364) #15
  %365 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %365) #15
  %366 = load double, double* %252, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %260) #15, !noalias !60
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %260, i8 0, i64 32, i1 false) #15, !noalias !60
  %367 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %260, i64 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i64 0, i64 0), double %366) #15, !noalias !60
  %368 = call i64 @strlen(i8* nonnull %260) #15, !noalias !60
  %369 = icmp ugt i64 %368, -17
  br i1 %369, label %370, label %372

370:                                              ; preds = %363
  %371 = bitcast %"class.std::__1::basic_string"* %15 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %371) #16
  unreachable

372:                                              ; preds = %363
  %373 = icmp ult i64 %368, 23
  br i1 %373, label %382, label %374

374:                                              ; preds = %372
  %375 = add nuw i64 %368, 16
  %376 = and i64 %375, -16
  %377 = call i8* @_Znwm(i64 %376) #17
  %378 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %377, i8** %378, align 8, !alias.scope !60
  %379 = or i64 %376, -9223372036854775808
  %380 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %379, i64* %380, align 8, !alias.scope !60
  %381 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %368, i64* %381, align 8, !alias.scope !60
  br label %387

382:                                              ; preds = %372
  %383 = trunc i64 %368 to i8
  %384 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %385 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %384, i64 0, i32 1, i32 0
  store i8 %383, i8* %385, align 1, !alias.scope !60
  %386 = icmp eq i64 %368, 0
  br i1 %386, label %389, label %387

387:                                              ; preds = %382, %374
  %388 = phi i8* [ %377, %374 ], [ %365, %382 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %388, i8* nonnull align 16 %260, i64 %368, i1 false) #15
  br label %389

389:                                              ; preds = %382, %387
  %390 = phi i8* [ %365, %382 ], [ %388, %387 ]
  %391 = getelementptr inbounds i8, i8* %390, i64 %368
  store i8 0, i8* %391, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %260) #15, !noalias !60
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %15, i8 signext 59) #15, !noalias !63
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %364, i8* nonnull align 8 %365, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %365, i8 0, i64 24, i1 false) #15, !noalias !63
  %392 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %393 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %392, i64 0, i32 1, i32 0
  %394 = load i8, i8* %393, align 1
  %395 = icmp slt i8 %394, 0
  %396 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %397 = load i8*, i8** %396, align 8
  %398 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %399 = load i64, i64* %398, align 8
  %400 = zext i8 %394 to i64
  %401 = select i1 %395, i8* %397, i8* %364
  %402 = select i1 %395, i64 %399, i64 %400
  %403 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %401, i64 %402) #15
  %404 = load i8, i8* %393, align 1
  %405 = icmp slt i8 %404, 0
  br i1 %405, label %406, label %408

406:                                              ; preds = %389
  %407 = load i8*, i8** %396, align 8
  call void @_ZdlPv(i8* %407) #17
  br label %408

408:                                              ; preds = %389, %406
  %409 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %410 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %409, i64 0, i32 1, i32 0
  %411 = load i8, i8* %410, align 1
  %412 = icmp slt i8 %411, 0
  br i1 %412, label %413, label %416

413:                                              ; preds = %408
  %414 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = load i8*, i8** %414, align 8
  call void @_ZdlPv(i8* %415) #17
  br label %416

416:                                              ; preds = %408, %413
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %365) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %364) #15
  %417 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %417) #15
  %418 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %418) #15
  %419 = load double, double* %253, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %260) #15, !noalias !66
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %260, i8 0, i64 32, i1 false) #15, !noalias !66
  %420 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %260, i64 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i64 0, i64 0), double %419) #15, !noalias !66
  %421 = call i64 @strlen(i8* nonnull %260) #15, !noalias !66
  %422 = icmp ugt i64 %421, -17
  br i1 %422, label %423, label %425

423:                                              ; preds = %416
  %424 = bitcast %"class.std::__1::basic_string"* %17 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %424) #16
  unreachable

425:                                              ; preds = %416
  %426 = icmp ult i64 %421, 23
  br i1 %426, label %435, label %427

427:                                              ; preds = %425
  %428 = add nuw i64 %421, 16
  %429 = and i64 %428, -16
  %430 = call i8* @_Znwm(i64 %429) #17
  %431 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %430, i8** %431, align 8, !alias.scope !66
  %432 = or i64 %429, -9223372036854775808
  %433 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %432, i64* %433, align 8, !alias.scope !66
  %434 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %421, i64* %434, align 8, !alias.scope !66
  br label %440

435:                                              ; preds = %425
  %436 = trunc i64 %421 to i8
  %437 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %438 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %437, i64 0, i32 1, i32 0
  store i8 %436, i8* %438, align 1, !alias.scope !66
  %439 = icmp eq i64 %421, 0
  br i1 %439, label %442, label %440

440:                                              ; preds = %435, %427
  %441 = phi i8* [ %430, %427 ], [ %418, %435 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %441, i8* nonnull align 16 %260, i64 %421, i1 false) #15
  br label %442

442:                                              ; preds = %435, %440
  %443 = phi i8* [ %418, %435 ], [ %441, %440 ]
  %444 = getelementptr inbounds i8, i8* %443, i64 %421
  store i8 0, i8* %444, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %260) #15, !noalias !66
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %17, i8 signext 59) #15, !noalias !69
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %417, i8* nonnull align 8 %418, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %418, i8 0, i64 24, i1 false) #15, !noalias !69
  %445 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %446 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %445, i64 0, i32 1, i32 0
  %447 = load i8, i8* %446, align 1
  %448 = icmp slt i8 %447, 0
  %449 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %450 = load i8*, i8** %449, align 8
  %451 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %452 = load i64, i64* %451, align 8
  %453 = zext i8 %447 to i64
  %454 = select i1 %448, i8* %450, i8* %417
  %455 = select i1 %448, i64 %452, i64 %453
  %456 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %454, i64 %455) #15
  %457 = load i8, i8* %446, align 1
  %458 = icmp slt i8 %457, 0
  br i1 %458, label %459, label %461

459:                                              ; preds = %442
  %460 = load i8*, i8** %449, align 8
  call void @_ZdlPv(i8* %460) #17
  br label %461

461:                                              ; preds = %442, %459
  %462 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %463 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %462, i64 0, i32 1, i32 0
  %464 = load i8, i8* %463, align 1
  %465 = icmp slt i8 %464, 0
  br i1 %465, label %466, label %469

466:                                              ; preds = %461
  %467 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %468 = load i8*, i8** %467, align 8
  call void @_ZdlPv(i8* %468) #17
  br label %469

469:                                              ; preds = %461, %466
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %418) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %417) #15
  %470 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %470) #15
  %471 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %471) #15
  %472 = load double, double* %254, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %260) #15, !noalias !72
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %260, i8 0, i64 32, i1 false) #15, !noalias !72
  %473 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %260, i64 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i64 0, i64 0), double %472) #15, !noalias !72
  %474 = call i64 @strlen(i8* nonnull %260) #15, !noalias !72
  %475 = icmp ugt i64 %474, -17
  br i1 %475, label %476, label %478

476:                                              ; preds = %469
  %477 = bitcast %"class.std::__1::basic_string"* %19 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %477) #16
  unreachable

478:                                              ; preds = %469
  %479 = icmp ult i64 %474, 23
  br i1 %479, label %488, label %480

480:                                              ; preds = %478
  %481 = add nuw i64 %474, 16
  %482 = and i64 %481, -16
  %483 = call i8* @_Znwm(i64 %482) #17
  %484 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %483, i8** %484, align 8, !alias.scope !72
  %485 = or i64 %482, -9223372036854775808
  %486 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %485, i64* %486, align 8, !alias.scope !72
  %487 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %474, i64* %487, align 8, !alias.scope !72
  br label %493

488:                                              ; preds = %478
  %489 = trunc i64 %474 to i8
  %490 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %491 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %490, i64 0, i32 1, i32 0
  store i8 %489, i8* %491, align 1, !alias.scope !72
  %492 = icmp eq i64 %474, 0
  br i1 %492, label %495, label %493

493:                                              ; preds = %488, %480
  %494 = phi i8* [ %483, %480 ], [ %471, %488 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %494, i8* nonnull align 16 %260, i64 %474, i1 false) #15
  br label %495

495:                                              ; preds = %488, %493
  %496 = phi i8* [ %471, %488 ], [ %494, %493 ]
  %497 = getelementptr inbounds i8, i8* %496, i64 %474
  store i8 0, i8* %497, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %260) #15, !noalias !72
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %19, i8 signext 59) #15, !noalias !75
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %470, i8* nonnull align 8 %471, i64 24, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %471, i8 0, i64 24, i1 false) #15, !noalias !75
  %498 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %499 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %498, i64 0, i32 1, i32 0
  %500 = load i8, i8* %499, align 1
  %501 = icmp slt i8 %500, 0
  %502 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %503 = load i8*, i8** %502, align 8
  %504 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %505 = load i64, i64* %504, align 8
  %506 = zext i8 %500 to i64
  %507 = select i1 %501, i8* %503, i8* %470
  %508 = select i1 %501, i64 %505, i64 %506
  %509 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %507, i64 %508) #15
  %510 = load i8, i8* %499, align 1
  %511 = icmp slt i8 %510, 0
  br i1 %511, label %512, label %514

512:                                              ; preds = %495
  %513 = load i8*, i8** %502, align 8
  call void @_ZdlPv(i8* %513) #17
  br label %514

514:                                              ; preds = %495, %512
  %515 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %516 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %515, i64 0, i32 1, i32 0
  %517 = load i8, i8* %516, align 1
  %518 = icmp slt i8 %517, 0
  br i1 %518, label %519, label %522

519:                                              ; preds = %514
  %520 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %521 = load i8*, i8** %520, align 8
  call void @_ZdlPv(i8* %521) #17
  br label %522

522:                                              ; preds = %514, %519
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %471) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %470) #15
  %523 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %523) #15
  %524 = load double, double* %255, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %260) #15, !noalias !78
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %260, i8 0, i64 32, i1 false) #15, !noalias !78
  %525 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %260, i64 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i64 0, i64 0), double %524) #15, !noalias !78
  %526 = call i64 @strlen(i8* nonnull %260) #15, !noalias !78
  %527 = icmp ugt i64 %526, -17
  br i1 %527, label %528, label %530

528:                                              ; preds = %522
  %529 = bitcast %"class.std::__1::basic_string"* %20 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %529) #16
  unreachable

530:                                              ; preds = %522
  %531 = icmp ult i64 %526, 23
  br i1 %531, label %541, label %532

532:                                              ; preds = %530
  %533 = add nuw i64 %526, 16
  %534 = and i64 %533, -16
  %535 = call i8* @_Znwm(i64 %534) #17
  %536 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %535, i8** %536, align 8, !alias.scope !78
  %537 = or i64 %534, -9223372036854775808
  %538 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %537, i64* %538, align 8, !alias.scope !78
  %539 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %526, i64* %539, align 8, !alias.scope !78
  %540 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %546

541:                                              ; preds = %530
  %542 = trunc i64 %526 to i8
  %543 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %544 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %543, i64 0, i32 1, i32 0
  store i8 %542, i8* %544, align 1, !alias.scope !78
  %545 = icmp eq i64 %526, 0
  br i1 %545, label %549, label %546

546:                                              ; preds = %541, %532
  %547 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %543, %541 ], [ %540, %532 ]
  %548 = phi i8* [ %523, %541 ], [ %535, %532 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %548, i8* nonnull align 16 %260, i64 %526, i1 false) #15
  br label %549

549:                                              ; preds = %541, %546
  %550 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %543, %541 ], [ %547, %546 ]
  %551 = phi i8* [ %523, %541 ], [ %548, %546 ]
  %552 = getelementptr inbounds i8, i8* %551, i64 %526
  store i8 0, i8* %552, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %260) #15, !noalias !78
  %553 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %550, i64 0, i32 1, i32 0
  %554 = load i8, i8* %553, align 1
  %555 = icmp slt i8 %554, 0
  %556 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %557 = load i8*, i8** %556, align 8
  %558 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %559 = load i64, i64* %558, align 8
  %560 = zext i8 %554 to i64
  %561 = select i1 %555, i8* %557, i8* %523
  %562 = select i1 %555, i64 %559, i64 %560
  %563 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %561, i64 %562) #15
  %564 = load i8, i8* %553, align 1
  %565 = icmp slt i8 %564, 0
  br i1 %565, label %566, label %568

566:                                              ; preds = %549
  %567 = load i8*, i8** %556, align 8
  call void @_ZdlPv(i8* %567) #17
  br label %568

568:                                              ; preds = %549, %566
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %523) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %249) #15
  br label %594

569:                                              ; preds = %244
  %570 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %570) #15
  switch i32 %246, label %580 [
    i32 1, label %571
    i32 9, label %574
    i32 11, label %577
  ]

571:                                              ; preds = %569
  %572 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %573 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %572, i64 0, i32 1, i32 0
  store i8 3, i8* %573, align 1, !alias.scope !81
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %570, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i64 0, i64 0), i64 3, i1 false) #15
  br label %583

574:                                              ; preds = %569
  %575 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %576 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %575, i64 0, i32 1, i32 0
  store i8 3, i8* %576, align 1, !alias.scope !81
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %570, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), i64 3, i1 false) #15
  br label %583

577:                                              ; preds = %569
  %578 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %579 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %578, i64 0, i32 1, i32 0
  store i8 3, i8* %579, align 1, !alias.scope !81
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %570, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i64 3, i1 false) #15
  br label %583

580:                                              ; preds = %569
  %581 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 77, i32 %246) #15, !noalias !81
  %582 = call zeroext i1 @_ZN3jxl5AbortEv() #16, !noalias !81
  unreachable

583:                                              ; preds = %571, %574, %577
  %584 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %572, %571 ], [ %575, %574 ], [ %578, %577 ]
  %585 = getelementptr inbounds i8, i8* %570, i64 3
  store i8 0, i8* %585, align 1, !alias.scope !81
  %586 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %584, i64 0, i32 1, i32 0
  %587 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* nonnull %570, i64 3) #15
  %588 = load i8, i8* %586, align 1
  %589 = icmp slt i8 %588, 0
  br i1 %589, label %590, label %593

590:                                              ; preds = %583
  %591 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %592 = load i8*, i8** %591, align 8
  call void @_ZdlPv(i8* %592) #17
  br label %593

593:                                              ; preds = %583, %590
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %570) #15
  br label %594

594:                                              ; preds = %568, %593, %240
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %0, i8 signext 95) #15
  %595 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %595) #15
  %596 = load i32, i32* %34, align 8
  switch i32 %596, label %609 [
    i32 0, label %597
    i32 1, label %600
    i32 2, label %603
    i32 3, label %606
  ]

597:                                              ; preds = %594
  %598 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %599 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %598, i64 0, i32 1, i32 0
  store i8 3, i8* %599, align 1, !alias.scope !84
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %595, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i64 0, i64 0), i64 3, i1 false) #15
  br label %612

600:                                              ; preds = %594
  %601 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %602 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %601, i64 0, i32 1, i32 0
  store i8 3, i8* %602, align 1, !alias.scope !84
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %595, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i64 0, i64 0), i64 3, i1 false) #15
  br label %612

603:                                              ; preds = %594
  %604 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %605 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %604, i64 0, i32 1, i32 0
  store i8 3, i8* %605, align 1, !alias.scope !84
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %595, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i64 0, i64 0), i64 3, i1 false) #15
  br label %612

606:                                              ; preds = %594
  %607 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %608 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %607, i64 0, i32 1, i32 0
  store i8 3, i8* %608, align 1, !alias.scope !84
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %595, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0), i64 3, i1 false) #15
  br label %612

609:                                              ; preds = %594
  %610 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 115, i32 %596) #15, !noalias !84
  %611 = call zeroext i1 @_ZN3jxl5AbortEv() #16, !noalias !84
  unreachable

612:                                              ; preds = %597, %600, %603, %606
  %613 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %598, %597 ], [ %601, %600 ], [ %604, %603 ], [ %607, %606 ]
  %614 = getelementptr inbounds i8, i8* %595, i64 3
  store i8 0, i8* %614, align 1, !alias.scope !84
  %615 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %613, i64 0, i32 1, i32 0
  %616 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* nonnull %595, i64 3) #15
  %617 = load i8, i8* %615, align 1
  %618 = icmp slt i8 %617, 0
  br i1 %618, label %619, label %622

619:                                              ; preds = %612
  %620 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %621 = load i8*, i8** %620, align 8
  call void @_ZdlPv(i8* %621) #17
  br label %622

622:                                              ; preds = %612, %619
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %595) #15
  %623 = load i32, i32* %30, align 8
  %624 = icmp eq i32 %623, 2
  br i1 %624, label %625, label %629

625:                                              ; preds = %622
  %626 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 4, i32 2
  store i8 1, i8* %626, align 4
  %627 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 4, i32 3
  store i32 3333333, i32* %627, align 8
  %628 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 4, i32 4
  store i32 2, i32* %628, align 4
  br label %729

629:                                              ; preds = %622
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %0, i8 signext 95) #15
  %630 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 4, i32 2
  %631 = load i8, i8* %630, align 4, !range !87
  %632 = icmp eq i8 %631, 0
  br i1 %632, label %690, label %633

633:                                              ; preds = %629
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %0, i8 signext 103) #15
  %634 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %634) #15
  %635 = load i8, i8* %630, align 4, !range !87
  %636 = icmp eq i8 %635, 0
  br i1 %636, label %637, label %640

637:                                              ; preds = %633
  %638 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.52, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i64 0, i64 0)) #15
  %639 = call zeroext i1 @_ZN3jxl5AbortEv() #16
  unreachable

640:                                              ; preds = %633
  %641 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 4, i32 3
  %642 = load i32, i32* %641, align 8
  %643 = uitofp i32 %642 to double
  %644 = fmul double %643, 0x3E7AD7F29ABCAF48
  %645 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %645) #15, !noalias !88
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %645, i8 0, i64 32, i1 false) #15, !noalias !88
  %646 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %645, i64 32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.83, i64 0, i64 0), double %644) #15, !noalias !88
  %647 = call i64 @strlen(i8* nonnull %645) #15, !noalias !88
  %648 = icmp ugt i64 %647, -17
  br i1 %648, label %649, label %651

649:                                              ; preds = %640
  %650 = bitcast %"class.std::__1::basic_string"* %23 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %650) #16
  unreachable

651:                                              ; preds = %640
  %652 = icmp ult i64 %647, 23
  br i1 %652, label %662, label %653

653:                                              ; preds = %651
  %654 = add nuw i64 %647, 16
  %655 = and i64 %654, -16
  %656 = call i8* @_Znwm(i64 %655) #17
  %657 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %656, i8** %657, align 8, !alias.scope !88
  %658 = or i64 %655, -9223372036854775808
  %659 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %658, i64* %659, align 8, !alias.scope !88
  %660 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %647, i64* %660, align 8, !alias.scope !88
  %661 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %667

662:                                              ; preds = %651
  %663 = trunc i64 %647 to i8
  %664 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %665 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %664, i64 0, i32 1, i32 0
  store i8 %663, i8* %665, align 1, !alias.scope !88
  %666 = icmp eq i64 %647, 0
  br i1 %666, label %670, label %667

667:                                              ; preds = %662, %653
  %668 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %664, %662 ], [ %661, %653 ]
  %669 = phi i8* [ %634, %662 ], [ %656, %653 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %669, i8* nonnull align 16 %645, i64 %647, i1 false) #15
  br label %670

670:                                              ; preds = %662, %667
  %671 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %664, %662 ], [ %668, %667 ]
  %672 = phi i8* [ %634, %662 ], [ %669, %667 ]
  %673 = getelementptr inbounds i8, i8* %672, i64 %647
  store i8 0, i8* %673, align 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %645) #15, !noalias !88
  %674 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %671, i64 0, i32 1, i32 0
  %675 = load i8, i8* %674, align 1
  %676 = icmp slt i8 %675, 0
  %677 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %678 = load i8*, i8** %677, align 8
  %679 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %680 = load i64, i64* %679, align 8
  %681 = zext i8 %675 to i64
  %682 = select i1 %676, i8* %678, i8* %634
  %683 = select i1 %676, i64 %680, i64 %681
  %684 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %682, i64 %683) #15
  %685 = load i8, i8* %674, align 1
  %686 = icmp slt i8 %685, 0
  br i1 %686, label %687, label %689

687:                                              ; preds = %670
  %688 = load i8*, i8** %677, align 8
  call void @_ZdlPv(i8* %688) #17
  br label %689

689:                                              ; preds = %670, %687
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %634) #15
  br label %729

690:                                              ; preds = %629
  %691 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %691) #15
  %692 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 4, i32 4
  %693 = load i32, i32* %692, align 4
  switch i32 %693, label %715 [
    i32 13, label %694
    i32 8, label %697
    i32 1, label %700
    i32 16, label %703
    i32 18, label %706
    i32 17, label %709
    i32 2, label %712
  ]

694:                                              ; preds = %690
  %695 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %696 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %695, i64 0, i32 1, i32 0
  store i8 3, i8* %696, align 1, !alias.scope !91
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %691, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i64 0, i64 0), i64 3, i1 false) #15
  br label %718

697:                                              ; preds = %690
  %698 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %699 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %698, i64 0, i32 1, i32 0
  store i8 3, i8* %699, align 1, !alias.scope !91
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %691, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i64 3, i1 false) #15
  br label %718

700:                                              ; preds = %690
  %701 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %702 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %701, i64 0, i32 1, i32 0
  store i8 3, i8* %702, align 1, !alias.scope !91
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %691, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i64 3, i1 false) #15
  br label %718

703:                                              ; preds = %690
  %704 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %705 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %704, i64 0, i32 1, i32 0
  store i8 3, i8* %705, align 1, !alias.scope !91
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %691, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0), i64 3, i1 false) #15
  br label %718

706:                                              ; preds = %690
  %707 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %708 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %707, i64 0, i32 1, i32 0
  store i8 3, i8* %708, align 1, !alias.scope !91
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %691, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i64 0, i64 0), i64 3, i1 false) #15
  br label %718

709:                                              ; preds = %690
  %710 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %711 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %710, i64 0, i32 1, i32 0
  store i8 3, i8* %711, align 1, !alias.scope !91
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %691, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i64 3, i1 false) #15
  br label %718

712:                                              ; preds = %690
  %713 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %714 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %713, i64 0, i32 1, i32 0
  store i8 3, i8* %714, align 1, !alias.scope !91
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %691, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58, i64 0, i64 0), i64 3, i1 false) #15
  br label %718

715:                                              ; preds = %690
  %716 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 99, i32 %693) #15, !noalias !91
  %717 = call zeroext i1 @_ZN3jxl5AbortEv() #16, !noalias !91
  unreachable

718:                                              ; preds = %694, %697, %700, %703, %706, %709, %712
  %719 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %695, %694 ], [ %698, %697 ], [ %701, %700 ], [ %704, %703 ], [ %707, %706 ], [ %710, %709 ], [ %713, %712 ]
  %720 = getelementptr inbounds i8, i8* %691, i64 3
  store i8 0, i8* %720, align 1, !alias.scope !91
  %721 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %719, i64 0, i32 1, i32 0
  %722 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* nonnull %691, i64 3) #15
  %723 = load i8, i8* %721, align 1
  %724 = icmp slt i8 %723, 0
  br i1 %724, label %725, label %728

725:                                              ; preds = %718
  %726 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %727 = load i8*, i8** %726, align 8
  call void @_ZdlPv(i8* %727) #17
  br label %728

728:                                              ; preds = %718, %725
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %691) #15
  br label %729

729:                                              ; preds = %625, %728, %689
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ColorEncodingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %730 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %4, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %731 = load i8*, i8** %730, align 8
  store i8* null, i8** %730, align 8
  %732 = icmp eq i8* %731, null
  br i1 %732, label %734, label %733

733:                                              ; preds = %729
  call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %731) #15
  br label %734

734:                                              ; preds = %729, %733
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %25) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl13ColorEncodingD2Ev(%"struct.jxl::ColorEncoding"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ColorEncodingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %4) #15
  br label %7

7:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3jxl16ParseDescriptionERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS_13ColorEncodingE(%"class.std::__1::basic_string"* dereferenceable(24), %"struct.jxl::ColorEncoding"* noalias) local_unnamed_addr #1 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"struct.jxl::PrimariesCIExy", align 8
  %8 = alloca %"class.jxl::(anonymous namespace)::Tokenizer", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"struct.jxl::CIExy", align 8
  %12 = alloca %"class.jxl::(anonymous namespace)::Tokenizer", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca i8*, align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.jxl::(anonymous namespace)::Tokenizer", align 8
  %20 = bitcast %"class.jxl::(anonymous namespace)::Tokenizer"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.jxl::(anonymous namespace)::Tokenizer", %"class.jxl::(anonymous namespace)::Tokenizer"* %19, i64 0, i32 0
  store %"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"** %21, align 8
  %22 = getelementptr inbounds %"class.jxl::(anonymous namespace)::Tokenizer", %"class.jxl::(anonymous namespace)::Tokenizer"* %19, i64 0, i32 1
  store i8 95, i8* %22, align 8
  %23 = getelementptr inbounds %"class.jxl::(anonymous namespace)::Tokenizer", %"class.jxl::(anonymous namespace)::Tokenizer"* %19, i64 0, i32 2
  store i64 0, i64* %23, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #15, !noalias !94
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #15, !noalias !94
  %27 = call fastcc i32 @_ZN3jxl12_GLOBAL__N_19Tokenizer4NextEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.jxl::(anonymous namespace)::Tokenizer"* nonnull %19, %"class.std::__1::basic_string"* nonnull %14) #15, !noalias !98
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1, !noalias !94
  br label %83

33:                                               ; preds = %2
  %34 = tail call i8* @_Znwm(i64 16) #17, !noalias !99
  %35 = bitcast i8* %34 to i32*
  %36 = getelementptr inbounds i8, i8* %34, i64 16
  %37 = bitcast i8* %34 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 2, i32 3>, <4 x i32>* %37, align 4, !noalias !94
  %38 = bitcast i8* %36 to i32*
  %39 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %40 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds i8, i8* %39, i64 3
  %43 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = bitcast %"class.std::__1::basic_string"* %13 to i64*
  %46 = getelementptr inbounds i8, i8* %39, i64 1
  %47 = getelementptr inbounds i8, i8* %39, i64 2
  br label %48

48:                                               ; preds = %80, %33
  %49 = phi i32 [ 0, %33 ], [ %81, %80 ]
  %50 = phi i32* [ %35, %33 ], [ %78, %80 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #15, !noalias !94
  switch i32 %49, label %55 [
    i32 0, label %51
    i32 1, label %52
    i32 2, label %53
    i32 3, label %54
  ]

51:                                               ; preds = %48
  store i8 3, i8* %41, align 1, !alias.scope !102, !noalias !94
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i64 3, i1 false) #15, !noalias !94
  br label %58

52:                                               ; preds = %48
  store i8 3, i8* %41, align 1, !alias.scope !102, !noalias !94
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0), i64 3, i1 false) #15, !noalias !94
  br label %58

53:                                               ; preds = %48
  store i8 3, i8* %41, align 1, !alias.scope !102, !noalias !94
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i64 3, i1 false) #15, !noalias !94
  br label %58

54:                                               ; preds = %48
  store i8 3, i8* %41, align 1, !alias.scope !102, !noalias !94
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0), i64 3, i1 false) #15, !noalias !94
  br label %58

55:                                               ; preds = %48
  %56 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 47, i32 %49) #15, !noalias !105
  %57 = tail call zeroext i1 @_ZN3jxl5AbortEv() #16, !noalias !105
  unreachable

58:                                               ; preds = %54, %53, %52, %51
  store i8 0, i8* %42, align 1, !alias.scope !102, !noalias !94
  %59 = load i8, i8* %44, align 1, !noalias !94
  %60 = icmp slt i8 %59, 0
  %61 = load i64, i64* %26, align 8, !noalias !94
  %62 = zext i8 %59 to i64
  %63 = select i1 %60, i64 %61, i64 %62
  %64 = icmp eq i64 %63, 3
  br i1 %64, label %65, label %77

65:                                               ; preds = %58
  %66 = load i64, i64* %45, align 8, !noalias !94
  %67 = load i8*, i8** %25, align 8, !noalias !94
  %68 = select i1 %60, i8* %67, i8* %24
  %69 = trunc i64 %66 to i8
  %70 = load i8, i8* %68, align 1, !noalias !94
  %71 = icmp eq i8 %70, %69
  br i1 %71, label %72, label %77

72:                                               ; preds = %65
  %73 = getelementptr inbounds i8, i8* %68, i64 1
  %74 = load i8, i8* %46, align 1, !noalias !94
  %75 = load i8, i8* %73, align 1, !noalias !94
  %76 = icmp eq i8 %74, %75
  br i1 %76, label %540, label %77

77:                                               ; preds = %72, %540, %65, %58
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #15, !noalias !94
  %78 = getelementptr inbounds i32, i32* %50, i64 1
  %79 = icmp eq i32* %78, %38
  br i1 %79, label %82, label %80

80:                                               ; preds = %77
  %81 = load i32, i32* %78, align 4, !noalias !94
  br label %48

82:                                               ; preds = %77
  tail call void @_ZdlPv(i8* nonnull %34) #17, !noalias !94
  br label %83

83:                                               ; preds = %29, %545, %82
  %84 = phi i8 [ %32, %29 ], [ %59, %545 ], [ %59, %82 ]
  %85 = phi i32 [ %27, %29 ], [ 0, %545 ], [ 1, %82 ]
  %86 = icmp slt i8 %84, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = load i8*, i8** %25, align 8, !noalias !94
  tail call void @_ZdlPv(i8* %88) #17, !noalias !94
  br label %89

89:                                               ; preds = %83, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #15, !noalias !94
  %90 = icmp eq i32 %85, 0
  br i1 %90, label %91, label %512

91:                                               ; preds = %89
  %92 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 9
  %93 = load i32, i32* %92, align 8, !alias.scope !106, !noalias !109
  %94 = icmp eq i32 %93, 2
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 2
  store i32 1, i32* %96, align 4, !alias.scope !106, !noalias !109
  br label %291

97:                                               ; preds = %91
  %98 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #15, !noalias !111
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 0, i64 24, i1 false) #15, !noalias !111
  %101 = call fastcc i32 @_ZN3jxl12_GLOBAL__N_19Tokenizer4NextEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.jxl::(anonymous namespace)::Tokenizer"* nonnull %19, %"class.std::__1::basic_string"* nonnull %10) #15, !noalias !106
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %97
  %104 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %174

105:                                              ; preds = %97
  %106 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 2
  %107 = tail call i8* @_Znwm(i64 16) #17, !noalias !112
  %108 = bitcast i8* %107 to i32*
  %109 = getelementptr inbounds i8, i8* %107, i64 16
  %110 = bitcast i8* %107 to <4 x i32>*
  store <4 x i32> <i32 1, i32 2, i32 10, i32 11>, <4 x i32>* %110, align 4, !noalias !111
  %111 = bitcast i8* %109 to i32*
  %112 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %113 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  %115 = getelementptr inbounds i8, i8* %112, i64 3
  %116 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = bitcast %"class.std::__1::basic_string"* %9 to i64*
  %119 = getelementptr inbounds i8, i8* %112, i64 1
  %120 = getelementptr inbounds i8, i8* %112, i64 2
  br label %121

121:                                              ; preds = %153, %105
  %122 = phi i32 [ 1, %105 ], [ %154, %153 ]
  %123 = phi i32* [ %108, %105 ], [ %151, %153 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #15, !noalias !111
  switch i32 %122, label %128 [
    i32 1, label %124
    i32 2, label %125
    i32 10, label %126
    i32 11, label %127
  ]

124:                                              ; preds = %121
  store i8 3, i8* %114, align 1, !alias.scope !115, !noalias !111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %112, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0), i64 3, i1 false) #15, !noalias !109
  br label %131

125:                                              ; preds = %121
  store i8 3, i8* %114, align 1, !alias.scope !115, !noalias !111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %112, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), i64 3, i1 false) #15, !noalias !109
  br label %131

126:                                              ; preds = %121
  store i8 3, i8* %114, align 1, !alias.scope !115, !noalias !111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %112, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i64 3, i1 false) #15, !noalias !109
  br label %131

127:                                              ; preds = %121
  store i8 3, i8* %114, align 1, !alias.scope !115, !noalias !111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %112, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i64 3, i1 false) #15, !noalias !109
  br label %131

128:                                              ; preds = %121
  %129 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 62, i32 %122) #15, !noalias !118
  %130 = tail call zeroext i1 @_ZN3jxl5AbortEv() #16, !noalias !118
  unreachable

131:                                              ; preds = %127, %126, %125, %124
  store i8 0, i8* %115, align 1, !alias.scope !115, !noalias !111
  %132 = load i8, i8* %117, align 1, !noalias !111
  %133 = icmp slt i8 %132, 0
  %134 = load i64, i64* %100, align 8, !noalias !111
  %135 = zext i8 %132 to i64
  %136 = select i1 %133, i64 %134, i64 %135
  %137 = icmp eq i64 %136, 3
  br i1 %137, label %138, label %150

138:                                              ; preds = %131
  %139 = load i64, i64* %118, align 8, !noalias !111
  %140 = load i8*, i8** %99, align 8, !noalias !111
  %141 = select i1 %133, i8* %140, i8* %98
  %142 = trunc i64 %139 to i8
  %143 = load i8, i8* %141, align 1, !noalias !109
  %144 = icmp eq i8 %143, %142
  br i1 %144, label %145, label %150

145:                                              ; preds = %138
  %146 = getelementptr inbounds i8, i8* %141, i64 1
  %147 = load i8, i8* %119, align 1, !noalias !111
  %148 = load i8, i8* %146, align 1, !noalias !109
  %149 = icmp eq i8 %147, %148
  br i1 %149, label %534, label %150

150:                                              ; preds = %145, %534, %138, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #15, !noalias !111
  %151 = getelementptr inbounds i32, i32* %123, i64 1
  %152 = icmp eq i32* %151, %111
  br i1 %152, label %155, label %153

153:                                              ; preds = %150
  %154 = load i32, i32* %151, align 4, !noalias !111
  br label %121

155:                                              ; preds = %150
  tail call void @_ZdlPv(i8* nonnull %107) #17, !noalias !111
  %156 = bitcast %"struct.jxl::CIExy"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %156) #15, !noalias !111
  %157 = getelementptr inbounds %"struct.jxl::CIExy", %"struct.jxl::CIExy"* %11, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %156, i8 0, i64 16, i1 false) #15, !noalias !111
  %158 = bitcast %"class.jxl::(anonymous namespace)::Tokenizer"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %158) #15, !noalias !111
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 -86, i64 16, i1 false) #15, !noalias !111
  %159 = getelementptr inbounds %"class.jxl::(anonymous namespace)::Tokenizer", %"class.jxl::(anonymous namespace)::Tokenizer"* %12, i64 0, i32 0
  store %"class.std::__1::basic_string"* %10, %"class.std::__1::basic_string"** %159, align 8, !noalias !111
  %160 = getelementptr inbounds %"class.jxl::(anonymous namespace)::Tokenizer", %"class.jxl::(anonymous namespace)::Tokenizer"* %12, i64 0, i32 1
  store i8 59, i8* %160, align 8, !noalias !111
  %161 = getelementptr inbounds %"class.jxl::(anonymous namespace)::Tokenizer", %"class.jxl::(anonymous namespace)::Tokenizer"* %12, i64 0, i32 2
  store i64 0, i64* %161, align 8, !noalias !111
  %162 = call fastcc i32 @_ZN3jxl12_GLOBAL__N_111ParseDoubleEPNS0_9TokenizerEPd(%"class.jxl::(anonymous namespace)::Tokenizer"* nonnull %12, double* nonnull %157) #15, !noalias !111
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %172

164:                                              ; preds = %155
  %165 = getelementptr inbounds %"struct.jxl::CIExy", %"struct.jxl::CIExy"* %11, i64 0, i32 1
  %166 = call fastcc i32 @_ZN3jxl12_GLOBAL__N_111ParseDoubleEPNS0_9TokenizerEPd(%"class.jxl::(anonymous namespace)::Tokenizer"* nonnull %12, double* %165) #15, !noalias !111
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %172

168:                                              ; preds = %164
  %169 = call i32 @_ZN3jxl13ColorEncoding13SetWhitePointERKNS_5CIExyE(%"struct.jxl::ColorEncoding"* %1, %"struct.jxl::CIExy"* nonnull dereferenceable(16) %11) #15, !noalias !109
  %170 = icmp ne i32 %169, 0
  %171 = zext i1 %170 to i32
  br label %172

172:                                              ; preds = %168, %164, %155
  %173 = phi i32 [ %162, %155 ], [ %166, %164 ], [ %171, %168 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %158) #15, !noalias !111
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %156) #15, !noalias !111
  br label %174

174:                                              ; preds = %103, %172, %539
  %175 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %104, %103 ], [ %116, %172 ], [ %116, %539 ]
  %176 = phi i32 [ %101, %103 ], [ %173, %172 ], [ 0, %539 ]
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %175, i64 0, i32 1, i32 0
  %178 = load i8, i8* %177, align 1, !noalias !111
  %179 = icmp slt i8 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %174
  %181 = load i8*, i8** %99, align 8, !noalias !111
  call void @_ZdlPv(i8* %181) #17, !noalias !109
  br label %182

182:                                              ; preds = %174, %180
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #15, !noalias !111
  %183 = icmp eq i32 %176, 0
  br i1 %183, label %184, label %512

184:                                              ; preds = %182
  %185 = load i32, i32* %92, align 8, !alias.scope !119, !noalias !122
  %186 = add i32 %185, -1
  %187 = icmp ugt i32 %186, 1
  br i1 %187, label %188, label %291

188:                                              ; preds = %184
  %189 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %189) #15, !noalias !124
  %190 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 0, i64 24, i1 false) #15, !noalias !124
  %192 = call fastcc i32 @_ZN3jxl12_GLOBAL__N_19Tokenizer4NextEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.jxl::(anonymous namespace)::Tokenizer"* nonnull %19, %"class.std::__1::basic_string"* nonnull %6) #15, !noalias !119
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %188
  %195 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %281

196:                                              ; preds = %188
  %197 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 3
  %198 = call i8* @_Znwm(i64 16) #17, !noalias !125
  %199 = bitcast i8* %198 to i32*
  %200 = getelementptr inbounds i8, i8* %198, i64 16
  %201 = bitcast i8* %198 to <4 x i32>*
  store <4 x i32> <i32 1, i32 2, i32 9, i32 11>, <4 x i32>* %201, align 4, !noalias !124
  %202 = bitcast i8* %200 to i32*
  %203 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %204 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %204, i64 0, i32 1, i32 0
  %206 = getelementptr inbounds i8, i8* %203, i64 3
  %207 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %207, i64 0, i32 1, i32 0
  %209 = bitcast %"class.std::__1::basic_string"* %5 to i64*
  %210 = getelementptr inbounds i8, i8* %203, i64 1
  %211 = getelementptr inbounds i8, i8* %203, i64 2
  br label %212

212:                                              ; preds = %244, %196
  %213 = phi i32 [ 1, %196 ], [ %245, %244 ]
  %214 = phi i32* [ %199, %196 ], [ %242, %244 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %203) #15, !noalias !124
  switch i32 %213, label %219 [
    i32 1, label %215
    i32 9, label %216
    i32 11, label %217
    i32 2, label %218
  ]

215:                                              ; preds = %212
  store i8 3, i8* %205, align 1, !alias.scope !128, !noalias !124
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %203, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i64 0, i64 0), i64 3, i1 false) #15, !noalias !122
  br label %222

216:                                              ; preds = %212
  store i8 3, i8* %205, align 1, !alias.scope !128, !noalias !124
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %203, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), i64 3, i1 false) #15, !noalias !122
  br label %222

217:                                              ; preds = %212
  store i8 3, i8* %205, align 1, !alias.scope !128, !noalias !124
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %203, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i64 3, i1 false) #15, !noalias !122
  br label %222

218:                                              ; preds = %212
  store i8 3, i8* %205, align 1, !alias.scope !128, !noalias !124
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %203, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), i64 3, i1 false) #15, !noalias !122
  br label %222

219:                                              ; preds = %212
  %220 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 77, i32 %213) #15, !noalias !131
  %221 = call zeroext i1 @_ZN3jxl5AbortEv() #16, !noalias !131
  unreachable

222:                                              ; preds = %218, %217, %216, %215
  store i8 0, i8* %206, align 1, !alias.scope !128, !noalias !124
  %223 = load i8, i8* %208, align 1, !noalias !124
  %224 = icmp slt i8 %223, 0
  %225 = load i64, i64* %191, align 8, !noalias !124
  %226 = zext i8 %223 to i64
  %227 = select i1 %224, i64 %225, i64 %226
  %228 = icmp eq i64 %227, 3
  br i1 %228, label %229, label %241

229:                                              ; preds = %222
  %230 = load i64, i64* %209, align 8, !noalias !124
  %231 = load i8*, i8** %190, align 8, !noalias !124
  %232 = select i1 %224, i8* %231, i8* %189
  %233 = trunc i64 %230 to i8
  %234 = load i8, i8* %232, align 1, !noalias !122
  %235 = icmp eq i8 %234, %233
  br i1 %235, label %236, label %241

236:                                              ; preds = %229
  %237 = getelementptr inbounds i8, i8* %232, i64 1
  %238 = load i8, i8* %210, align 1, !noalias !124
  %239 = load i8, i8* %237, align 1, !noalias !122
  %240 = icmp eq i8 %238, %239
  br i1 %240, label %528, label %241

241:                                              ; preds = %236, %528, %229, %222
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %203) #15, !noalias !124
  %242 = getelementptr inbounds i32, i32* %214, i64 1
  %243 = icmp eq i32* %242, %202
  br i1 %243, label %246, label %244

244:                                              ; preds = %241
  %245 = load i32, i32* %242, align 4, !noalias !124
  br label %212

246:                                              ; preds = %241
  call void @_ZdlPv(i8* nonnull %198) #17, !noalias !124
  %247 = bitcast %"struct.jxl::PrimariesCIExy"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %247) #15, !noalias !124
  %248 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %7, i64 0, i32 0, i32 0
  %249 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %7, i64 0, i32 1, i32 0
  %250 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %7, i64 0, i32 1, i32 1
  %251 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %7, i64 0, i32 2, i32 0
  %252 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %7, i64 0, i32 2, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %247, i8 0, i64 48, i1 false) #15, !noalias !124
  %253 = bitcast %"class.jxl::(anonymous namespace)::Tokenizer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %253) #15, !noalias !124
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %253, i8 -86, i64 16, i1 false) #15, !noalias !124
  %254 = getelementptr inbounds %"class.jxl::(anonymous namespace)::Tokenizer", %"class.jxl::(anonymous namespace)::Tokenizer"* %8, i64 0, i32 0
  store %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"** %254, align 8, !noalias !124
  %255 = getelementptr inbounds %"class.jxl::(anonymous namespace)::Tokenizer", %"class.jxl::(anonymous namespace)::Tokenizer"* %8, i64 0, i32 1
  store i8 59, i8* %255, align 8, !noalias !124
  %256 = getelementptr inbounds %"class.jxl::(anonymous namespace)::Tokenizer", %"class.jxl::(anonymous namespace)::Tokenizer"* %8, i64 0, i32 2
  store i64 0, i64* %256, align 8, !noalias !124
  %257 = call fastcc i32 @_ZN3jxl12_GLOBAL__N_111ParseDoubleEPNS0_9TokenizerEPd(%"class.jxl::(anonymous namespace)::Tokenizer"* nonnull %8, double* nonnull %248) #15, !noalias !124
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %279

259:                                              ; preds = %246
  %260 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %7, i64 0, i32 0, i32 1
  %261 = call fastcc i32 @_ZN3jxl12_GLOBAL__N_111ParseDoubleEPNS0_9TokenizerEPd(%"class.jxl::(anonymous namespace)::Tokenizer"* nonnull %8, double* %260) #15, !noalias !124
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %279

263:                                              ; preds = %259
  %264 = call fastcc i32 @_ZN3jxl12_GLOBAL__N_111ParseDoubleEPNS0_9TokenizerEPd(%"class.jxl::(anonymous namespace)::Tokenizer"* nonnull %8, double* %249) #15, !noalias !124
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %279

266:                                              ; preds = %263
  %267 = call fastcc i32 @_ZN3jxl12_GLOBAL__N_111ParseDoubleEPNS0_9TokenizerEPd(%"class.jxl::(anonymous namespace)::Tokenizer"* nonnull %8, double* %250) #15, !noalias !124
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %279

269:                                              ; preds = %266
  %270 = call fastcc i32 @_ZN3jxl12_GLOBAL__N_111ParseDoubleEPNS0_9TokenizerEPd(%"class.jxl::(anonymous namespace)::Tokenizer"* nonnull %8, double* %251) #15, !noalias !124
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %279

272:                                              ; preds = %269
  %273 = call fastcc i32 @_ZN3jxl12_GLOBAL__N_111ParseDoubleEPNS0_9TokenizerEPd(%"class.jxl::(anonymous namespace)::Tokenizer"* nonnull %8, double* %252) #15, !noalias !124
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %279

275:                                              ; preds = %272
  %276 = call i32 @_ZN3jxl13ColorEncoding12SetPrimariesERKNS_14PrimariesCIExyE(%"struct.jxl::ColorEncoding"* %1, %"struct.jxl::PrimariesCIExy"* nonnull dereferenceable(48) %7) #15, !noalias !122
  %277 = icmp ne i32 %276, 0
  %278 = zext i1 %277 to i32
  br label %279

279:                                              ; preds = %275, %272, %269, %266, %263, %259, %246
  %280 = phi i32 [ %257, %246 ], [ %261, %259 ], [ %264, %263 ], [ %267, %266 ], [ %270, %269 ], [ %273, %272 ], [ %278, %275 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %253) #15, !noalias !124
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %247) #15, !noalias !124
  br label %281

281:                                              ; preds = %194, %279, %533
  %282 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %195, %194 ], [ %207, %279 ], [ %207, %533 ]
  %283 = phi i32 [ %192, %194 ], [ %280, %279 ], [ 0, %533 ]
  %284 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %282, i64 0, i32 1, i32 0
  %285 = load i8, i8* %284, align 1, !noalias !124
  %286 = icmp slt i8 %285, 0
  br i1 %286, label %287, label %289

287:                                              ; preds = %281
  %288 = load i8*, i8** %190, align 8, !noalias !124
  call void @_ZdlPv(i8* %288) #17, !noalias !122
  br label %289

289:                                              ; preds = %281, %287
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %189) #15, !noalias !124
  %290 = icmp eq i32 %283, 0
  br i1 %290, label %291, label %512

291:                                              ; preds = %95, %184, %289
  %292 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %292) #15, !noalias !132
  %293 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %292, i8 0, i64 24, i1 false) #15, !noalias !132
  %295 = call fastcc i32 @_ZN3jxl12_GLOBAL__N_19Tokenizer4NextEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.jxl::(anonymous namespace)::Tokenizer"* nonnull %19, %"class.std::__1::basic_string"* nonnull %4) #15, !noalias !136
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %301, label %297

297:                                              ; preds = %291
  %298 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %299 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %298, i64 0, i32 1, i32 0
  %300 = load i8, i8* %299, align 1, !noalias !132
  br label %353

301:                                              ; preds = %291
  %302 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 5
  %303 = call i8* @_Znwm(i64 16) #17, !noalias !137
  %304 = bitcast i8* %303 to i32*
  %305 = getelementptr inbounds i8, i8* %303, i64 16
  %306 = bitcast i8* %303 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 2, i32 3>, <4 x i32>* %306, align 4, !noalias !132
  %307 = bitcast i8* %305 to i32*
  %308 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %309 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %310 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %309, i64 0, i32 1, i32 0
  %311 = getelementptr inbounds i8, i8* %308, i64 3
  %312 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %313 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %312, i64 0, i32 1, i32 0
  %314 = bitcast %"class.std::__1::basic_string"* %3 to i64*
  %315 = getelementptr inbounds i8, i8* %308, i64 1
  %316 = getelementptr inbounds i8, i8* %308, i64 2
  br label %317

317:                                              ; preds = %349, %301
  %318 = phi i32 [ 0, %301 ], [ %350, %349 ]
  %319 = phi i32* [ %304, %301 ], [ %347, %349 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %308) #15, !noalias !132
  switch i32 %318, label %324 [
    i32 0, label %320
    i32 1, label %321
    i32 2, label %322
    i32 3, label %323
  ]

320:                                              ; preds = %317
  store i8 3, i8* %310, align 1, !alias.scope !140, !noalias !132
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %308, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i64 0, i64 0), i64 3, i1 false) #15, !noalias !132
  br label %327

321:                                              ; preds = %317
  store i8 3, i8* %310, align 1, !alias.scope !140, !noalias !132
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %308, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i64 0, i64 0), i64 3, i1 false) #15, !noalias !132
  br label %327

322:                                              ; preds = %317
  store i8 3, i8* %310, align 1, !alias.scope !140, !noalias !132
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %308, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i64 0, i64 0), i64 3, i1 false) #15, !noalias !132
  br label %327

323:                                              ; preds = %317
  store i8 3, i8* %310, align 1, !alias.scope !140, !noalias !132
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %308, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0), i64 3, i1 false) #15, !noalias !132
  br label %327

324:                                              ; preds = %317
  %325 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 115, i32 %318) #15, !noalias !143
  %326 = call zeroext i1 @_ZN3jxl5AbortEv() #16, !noalias !143
  unreachable

327:                                              ; preds = %323, %322, %321, %320
  store i8 0, i8* %311, align 1, !alias.scope !140, !noalias !132
  %328 = load i8, i8* %313, align 1, !noalias !132
  %329 = icmp slt i8 %328, 0
  %330 = load i64, i64* %294, align 8, !noalias !132
  %331 = zext i8 %328 to i64
  %332 = select i1 %329, i64 %330, i64 %331
  %333 = icmp eq i64 %332, 3
  br i1 %333, label %334, label %346

334:                                              ; preds = %327
  %335 = load i64, i64* %314, align 8, !noalias !132
  %336 = load i8*, i8** %293, align 8, !noalias !132
  %337 = select i1 %329, i8* %336, i8* %292
  %338 = trunc i64 %335 to i8
  %339 = load i8, i8* %337, align 1, !noalias !132
  %340 = icmp eq i8 %339, %338
  br i1 %340, label %341, label %346

341:                                              ; preds = %334
  %342 = getelementptr inbounds i8, i8* %337, i64 1
  %343 = load i8, i8* %315, align 1, !noalias !132
  %344 = load i8, i8* %342, align 1, !noalias !132
  %345 = icmp eq i8 %343, %344
  br i1 %345, label %522, label %346

346:                                              ; preds = %341, %522, %334, %327
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %308) #15, !noalias !132
  %347 = getelementptr inbounds i32, i32* %319, i64 1
  %348 = icmp eq i32* %347, %307
  br i1 %348, label %351, label %349

349:                                              ; preds = %346
  %350 = load i32, i32* %347, align 4, !noalias !132
  br label %317

351:                                              ; preds = %346, %527
  %352 = phi i32 [ 0, %527 ], [ 1, %346 ]
  call void @_ZdlPv(i8* nonnull %303) #17, !noalias !132
  br label %353

353:                                              ; preds = %297, %351
  %354 = phi i8 [ %300, %297 ], [ %328, %351 ]
  %355 = phi i32 [ %295, %297 ], [ %352, %351 ]
  %356 = icmp slt i8 %354, 0
  br i1 %356, label %357, label %359

357:                                              ; preds = %353
  %358 = load i8*, i8** %293, align 8, !noalias !132
  call void @_ZdlPv(i8* %358) #17, !noalias !132
  br label %359

359:                                              ; preds = %353, %357
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %292) #15, !noalias !132
  %360 = icmp eq i32 %355, 0
  br i1 %360, label %361, label %512

361:                                              ; preds = %359
  %362 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 4, i32 1
  %363 = load i32, i32* %362, align 8, !alias.scope !144, !noalias !147
  %364 = icmp eq i32 %363, 2
  br i1 %364, label %365, label %369

365:                                              ; preds = %361
  %366 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 4, i32 2
  store i8 1, i8* %366, align 4, !alias.scope !144, !noalias !147
  %367 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 4, i32 3
  store i32 3333333, i32* %367, align 8, !alias.scope !144, !noalias !147
  %368 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 4, i32 4
  store i32 2, i32* %368, align 4, !alias.scope !144, !noalias !147
  br label %511

369:                                              ; preds = %361
  %370 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %370) #15, !noalias !149
  %371 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %372 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %370, i8 0, i64 24, i1 false) #15, !noalias !149
  %373 = call fastcc i32 @_ZN3jxl12_GLOBAL__N_19Tokenizer4NextEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.jxl::(anonymous namespace)::Tokenizer"* nonnull %19, %"class.std::__1::basic_string"* nonnull %17) #15, !noalias !144
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %377, label %375

375:                                              ; preds = %369
  %376 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %501

377:                                              ; preds = %369
  %378 = call i8* @_Znwm(i64 28) #17, !noalias !150
  %379 = bitcast i8* %378 to i32*
  %380 = bitcast i8* %378 to <4 x i32>*
  store <4 x i32> <i32 1, i32 2, i32 8, i32 13>, <4 x i32>* %380, align 4, !noalias !149
  %381 = getelementptr inbounds i8, i8* %378, i64 16
  %382 = bitcast i8* %381 to i32*
  store i32 16, i32* %382, align 4, !noalias !149
  %383 = getelementptr inbounds i8, i8* %378, i64 20
  %384 = bitcast i8* %383 to i32*
  store i32 17, i32* %384, align 4, !noalias !149
  %385 = getelementptr inbounds i8, i8* %378, i64 24
  %386 = bitcast i8* %385 to i32*
  store i32 18, i32* %386, align 4, !noalias !149
  %387 = getelementptr inbounds i8, i8* %378, i64 28
  %388 = bitcast i8* %387 to i32*
  %389 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %390 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %391 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %390, i64 0, i32 1, i32 0
  %392 = getelementptr inbounds i8, i8* %389, i64 3
  %393 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %394 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %393, i64 0, i32 1, i32 0
  %395 = bitcast %"class.std::__1::basic_string"* %15 to i64*
  %396 = getelementptr inbounds i8, i8* %389, i64 1
  %397 = getelementptr inbounds i8, i8* %389, i64 2
  br label %398

398:                                              ; preds = %433, %377
  %399 = phi i32 [ 1, %377 ], [ %434, %433 ]
  %400 = phi i32* [ %379, %377 ], [ %431, %433 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %389) #15, !noalias !149
  switch i32 %399, label %408 [
    i32 13, label %401
    i32 8, label %402
    i32 1, label %403
    i32 16, label %404
    i32 18, label %405
    i32 17, label %406
    i32 2, label %407
  ]

401:                                              ; preds = %398
  store i8 3, i8* %391, align 1, !alias.scope !153, !noalias !149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %389, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i64 0, i64 0), i64 3, i1 false) #15, !noalias !149
  br label %411

402:                                              ; preds = %398
  store i8 3, i8* %391, align 1, !alias.scope !153, !noalias !149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %389, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i64 3, i1 false) #15, !noalias !149
  br label %411

403:                                              ; preds = %398
  store i8 3, i8* %391, align 1, !alias.scope !153, !noalias !149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %389, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0), i64 3, i1 false) #15, !noalias !149
  br label %411

404:                                              ; preds = %398
  store i8 3, i8* %391, align 1, !alias.scope !153, !noalias !149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %389, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0), i64 3, i1 false) #15, !noalias !149
  br label %411

405:                                              ; preds = %398
  store i8 3, i8* %391, align 1, !alias.scope !153, !noalias !149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %389, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i64 0, i64 0), i64 3, i1 false) #15, !noalias !149
  br label %411

406:                                              ; preds = %398
  store i8 3, i8* %391, align 1, !alias.scope !153, !noalias !149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %389, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i64 3, i1 false) #15, !noalias !149
  br label %411

407:                                              ; preds = %398
  store i8 3, i8* %391, align 1, !alias.scope !153, !noalias !149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %389, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58, i64 0, i64 0), i64 3, i1 false) #15, !noalias !149
  br label %411

408:                                              ; preds = %398
  %409 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 99, i32 %399) #15, !noalias !156
  %410 = call zeroext i1 @_ZN3jxl5AbortEv() #16, !noalias !156
  unreachable

411:                                              ; preds = %407, %406, %405, %404, %403, %402, %401
  store i8 0, i8* %392, align 1, !alias.scope !153, !noalias !149
  %412 = load i8, i8* %394, align 1, !noalias !149
  %413 = icmp slt i8 %412, 0
  %414 = load i64, i64* %372, align 8, !noalias !149
  %415 = zext i8 %412 to i64
  %416 = select i1 %413, i64 %414, i64 %415
  %417 = icmp eq i64 %416, 3
  br i1 %417, label %418, label %430

418:                                              ; preds = %411
  %419 = load i64, i64* %395, align 8, !noalias !149
  %420 = load i8*, i8** %371, align 8, !noalias !149
  %421 = select i1 %413, i8* %420, i8* %370
  %422 = trunc i64 %419 to i8
  %423 = load i8, i8* %421, align 1, !noalias !149
  %424 = icmp eq i8 %423, %422
  br i1 %424, label %425, label %430

425:                                              ; preds = %418
  %426 = getelementptr inbounds i8, i8* %421, i64 1
  %427 = load i8, i8* %396, align 1, !noalias !149
  %428 = load i8, i8* %426, align 1, !noalias !149
  %429 = icmp eq i8 %427, %428
  br i1 %429, label %514, label %430

430:                                              ; preds = %425, %514, %418, %411
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %389) #15, !noalias !149
  %431 = getelementptr inbounds i32, i32* %400, i64 1
  %432 = icmp eq i32* %431, %388
  br i1 %432, label %435, label %433

433:                                              ; preds = %430
  %434 = load i32, i32* %431, align 4, !noalias !149
  br label %398

435:                                              ; preds = %430
  call void @_ZdlPv(i8* nonnull %378) #17, !noalias !149
  %436 = load i8*, i8** %371, align 8, !noalias !149
  %437 = select i1 %413, i8* %436, i8* %370
  %438 = load i8, i8* %437, align 1, !noalias !149
  %439 = icmp eq i8 %438, 103
  br i1 %439, label %440, label %501

440:                                              ; preds = %435
  %441 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %441) #15, !noalias !149
  %442 = bitcast %"class.std::__1::basic_string"* %17 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %18, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %17, i64 1, i64 -1, %"class.std::__1::allocator"* nonnull dereferenceable(1) %442) #15, !noalias !149
  %443 = bitcast i8** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %443) #15, !noalias !157
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %16, align 8, !noalias !157
  %444 = tail call i32* @__errno_location() #18
  store i32 0, i32* %444, align 4, !noalias !157
  %445 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %446 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %445, i64 0, i32 1, i32 0
  %447 = load i8, i8* %446, align 1, !noalias !157
  %448 = icmp slt i8 %447, 0
  %449 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %450 = load i8*, i8** %449, align 8, !noalias !157
  %451 = select i1 %448, i8* %450, i8* %441
  %452 = call double @strtod(i8* %451, i8** nonnull %16) #15, !noalias !157
  %453 = fcmp oeq double %452, 0.000000e+00
  br i1 %453, label %454, label %463

454:                                              ; preds = %440
  %455 = load i8*, i8** %16, align 8, !noalias !157
  %456 = load i8, i8* %446, align 1, !noalias !157
  %457 = icmp slt i8 %456, 0
  %458 = load i8*, i8** %449, align 8, !noalias !157
  %459 = select i1 %457, i8* %458, i8* %441
  %460 = icmp eq i8* %455, %459
  %461 = fcmp uno double %452, 0.000000e+00
  %462 = or i1 %461, %460
  br i1 %462, label %469, label %465

463:                                              ; preds = %440
  %464 = fcmp uno double %452, 0.000000e+00
  br i1 %464, label %469, label %465

465:                                              ; preds = %463, %454
  %466 = load i32, i32* %444, align 4, !noalias !157
  %467 = icmp eq i32 %466, 34
  %468 = zext i1 %467 to i32
  br label %469

469:                                              ; preds = %465, %463, %454
  %470 = phi i32 [ 1, %454 ], [ 1, %463 ], [ %468, %465 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %443) #15, !noalias !157
  %471 = load i8, i8* %446, align 1, !noalias !149
  %472 = icmp slt i8 %471, 0
  br i1 %472, label %473, label %475

473:                                              ; preds = %469
  %474 = load i8*, i8** %449, align 8, !noalias !149
  call void @_ZdlPv(i8* %474) #17, !noalias !149
  br label %475

475:                                              ; preds = %473, %469
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %441) #15, !noalias !149
  %476 = icmp eq i32 %470, 0
  br i1 %476, label %477, label %501

477:                                              ; preds = %475
  %478 = fcmp olt double %452, 0x3F20000000000000
  %479 = fcmp ogt double %452, 1.000000e+00
  %480 = or i1 %478, %479
  br i1 %480, label %501, label %481

481:                                              ; preds = %477
  %482 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 4, i32 2
  store i8 0, i8* %482, align 4, !alias.scope !144, !noalias !147
  %483 = fadd double %452, -1.000000e+00
  %484 = call double @llvm.fabs.f64(double %483) #15
  %485 = fcmp ugt double %484, 1.000000e-03
  br i1 %485, label %488, label %486

486:                                              ; preds = %481
  %487 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 4, i32 4
  store i32 8, i32* %487, align 4, !alias.scope !144, !noalias !147
  br label %501

488:                                              ; preds = %481
  %489 = fadd double %452, 0xBFD89D89D89D89D8
  %490 = call double @llvm.fabs.f64(double %489) #15
  %491 = fcmp ugt double %490, 1.000000e-03
  br i1 %491, label %494, label %492

492:                                              ; preds = %488
  %493 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 4, i32 4
  store i32 17, i32* %493, align 4, !alias.scope !144, !noalias !147
  br label %501

494:                                              ; preds = %488
  store i8 1, i8* %482, align 4, !alias.scope !144, !noalias !147
  %495 = fmul double %452, 1.000000e+07
  %496 = fptrunc double %495 to float
  %497 = call float @llvm.round.f32(float %496) #15
  %498 = fptoui float %497 to i32
  %499 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 4, i32 3
  store i32 %498, i32* %499, align 8, !alias.scope !144, !noalias !147
  %500 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 4, i32 4
  store i32 2, i32* %500, align 4, !alias.scope !144, !noalias !147
  br label %501

501:                                              ; preds = %375, %494, %492, %486, %477, %475, %435, %519
  %502 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %376, %375 ], [ %393, %494 ], [ %393, %492 ], [ %393, %486 ], [ %393, %477 ], [ %393, %475 ], [ %393, %435 ], [ %393, %519 ]
  %503 = phi i32 [ %373, %375 ], [ 0, %494 ], [ 0, %492 ], [ 0, %486 ], [ 1, %477 ], [ 1, %475 ], [ 1, %435 ], [ 0, %519 ]
  %504 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %502, i64 0, i32 1, i32 0
  %505 = load i8, i8* %504, align 1, !noalias !149
  %506 = icmp slt i8 %505, 0
  br i1 %506, label %507, label %509

507:                                              ; preds = %501
  %508 = load i8*, i8** %371, align 8, !noalias !149
  call void @_ZdlPv(i8* %508) #17, !noalias !149
  br label %509

509:                                              ; preds = %501, %507
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %370) #15, !noalias !149
  %510 = icmp eq i32 %503, 0
  br i1 %510, label %511, label %512

511:                                              ; preds = %365, %509
  br label %512

512:                                              ; preds = %509, %359, %289, %182, %89, %511
  %513 = phi i32 [ 0, %511 ], [ %85, %89 ], [ %176, %182 ], [ %283, %289 ], [ %355, %359 ], [ %503, %509 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #15
  ret i32 %513

514:                                              ; preds = %425
  %515 = getelementptr inbounds i8, i8* %421, i64 2
  %516 = load i8, i8* %397, align 2, !noalias !149
  %517 = load i8, i8* %515, align 1, !noalias !149
  %518 = icmp eq i8 %516, %517
  br i1 %518, label %519, label %430

519:                                              ; preds = %514
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %389) #15, !noalias !149
  call void @_ZdlPv(i8* nonnull %378) #17, !noalias !149
  %520 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 4, i32 2
  store i8 0, i8* %520, align 4, !alias.scope !144, !noalias !147
  %521 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 4, i32 4
  store i32 %399, i32* %521, align 4, !alias.scope !144, !noalias !147
  br label %501

522:                                              ; preds = %341
  %523 = getelementptr inbounds i8, i8* %337, i64 2
  %524 = load i8, i8* %316, align 2, !noalias !132
  %525 = load i8, i8* %523, align 1, !noalias !132
  %526 = icmp eq i8 %524, %525
  br i1 %526, label %527, label %346

527:                                              ; preds = %522
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %308) #15, !noalias !132
  store i32 %318, i32* %302, align 4, !alias.scope !136, !noalias !160
  br label %351

528:                                              ; preds = %236
  %529 = getelementptr inbounds i8, i8* %232, i64 2
  %530 = load i8, i8* %211, align 2, !noalias !124
  %531 = load i8, i8* %529, align 1, !noalias !122
  %532 = icmp eq i8 %530, %531
  br i1 %532, label %533, label %241

533:                                              ; preds = %528
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %203) #15, !noalias !124
  store i32 %213, i32* %197, align 4, !alias.scope !119, !noalias !122
  call void @_ZdlPv(i8* nonnull %198) #17, !noalias !122
  br label %281

534:                                              ; preds = %145
  %535 = getelementptr inbounds i8, i8* %141, i64 2
  %536 = load i8, i8* %120, align 2, !noalias !111
  %537 = load i8, i8* %535, align 1, !noalias !109
  %538 = icmp eq i8 %536, %537
  br i1 %538, label %539, label %150

539:                                              ; preds = %534
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #15, !noalias !111
  store i32 %122, i32* %106, align 4, !alias.scope !106, !noalias !109
  tail call void @_ZdlPv(i8* nonnull %107) #17, !noalias !109
  br label %174

540:                                              ; preds = %72
  %541 = getelementptr inbounds i8, i8* %68, i64 2
  %542 = load i8, i8* %47, align 2, !noalias !94
  %543 = load i8, i8* %541, align 1, !noalias !94
  %544 = icmp eq i8 %542, %543
  br i1 %544, label %545, label %77

545:                                              ; preds = %540
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #15, !noalias !94
  tail call void @_ZdlPv(i8* nonnull %34) #17, !noalias !94
  %546 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 9
  store i32 %49, i32* %546, align 8, !alias.scope !98, !noalias !161
  %547 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %1, i64 0, i32 4, i32 1
  store i32 %49, i32* %547, align 8, !alias.scope !98, !noalias !161
  br label %83
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl8CustomxyC2Ev(%"struct.jxl::Customxy"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %2) #15
  ret void
}

declare void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3jxl8Customxy11VisitFieldsEPNS_7VisitorE(%"struct.jxl::Customxy"* nocapture, %"class.jxl::Visitor"* noalias) unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = ashr i32 %7, 31
  %10 = xor i32 %8, %9
  store i32 %10, i32* %3, align 4
  %11 = bitcast %"class.jxl::Visitor"* %1 to i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)***
  %12 = load i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)**, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*** %11, align 8, !noalias !162
  %13 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)** %12, i64 4
  %14 = load i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)** %13, align 8, !noalias !162
  %15 = call i32 %14(%"class.jxl::Visitor"* %1, i64 72057671347339282, i64 288230462084612115, i32 0, i32* nonnull %3) #15
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %45

17:                                               ; preds = %2
  %18 = load i32, i32* %3, align 4
  %19 = zext i32 %18 to i64
  %20 = lshr i64 %19, 1
  %21 = shl i64 %19, 63
  %22 = ashr exact i64 %21, 63
  %23 = xor i64 %22, %20
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %6, align 8
  %25 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #15
  %26 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %0, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = shl i32 %27, 1
  %29 = ashr i32 %27, 31
  %30 = xor i32 %28, %29
  store i32 %30, i32* %4, align 4
  %31 = load i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)**, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*** %11, align 8, !noalias !165
  %32 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)** %31, i64 4
  %33 = load i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)** %32, align 8, !noalias !165
  %34 = call i32 %33(%"class.jxl::Visitor"* %1, i64 72057671347339282, i64 288230462084612115, i32 0, i32* nonnull %4) #15
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %44

36:                                               ; preds = %17
  %37 = load i32, i32* %4, align 4
  %38 = zext i32 %37 to i64
  %39 = lshr i64 %38, 1
  %40 = shl i64 %38, 63
  %41 = ashr exact i64 %40, 63
  %42 = xor i64 %41, %39
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %26, align 4
  br label %44

44:                                               ; preds = %17, %36
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #15
  br label %45

45:                                               ; preds = %2, %44
  %46 = phi i32 [ %34, %44 ], [ %15, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #15
  ret i32 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl22CustomTransferFunctionC2Ev(%"struct.jxl::CustomTransferFunction"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl22CustomTransferFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3jxl22CustomTransferFunction11VisitFieldsEPNS_7VisitorE(%"struct.jxl::CustomTransferFunction"*, %"class.jxl::Visitor"* noalias) unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %0, i64 0, i32 2
  store i8 1, i8* %8, align 4
  %9 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %0, i64 0, i32 3
  store i32 3333333, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %0, i64 0, i32 4
  store i32 2, i32* %10, align 4
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi i1 [ false, %7 ], [ true, %2 ]
  %13 = bitcast %"class.jxl::Visitor"* %1 to i32 (%"class.jxl::Visitor"*, i1)***
  %14 = load i32 (%"class.jxl::Visitor"*, i1)**, i32 (%"class.jxl::Visitor"*, i1)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i1)*, i32 (%"class.jxl::Visitor"*, i1)** %14, i64 8
  %16 = load i32 (%"class.jxl::Visitor"*, i1)*, i32 (%"class.jxl::Visitor"*, i1)** %15, align 8
  %17 = tail call i32 %16(%"class.jxl::Visitor"* %1, i1 zeroext %12) #15
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %77

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %0, i64 0, i32 2
  %21 = bitcast %"class.jxl::Visitor"* %1 to i32 (%"class.jxl::Visitor"*, i1, i8*)***
  %22 = load i32 (%"class.jxl::Visitor"*, i1, i8*)**, i32 (%"class.jxl::Visitor"*, i1, i8*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i1, i8*)*, i32 (%"class.jxl::Visitor"*, i1, i8*)** %22, i64 3
  %24 = load i32 (%"class.jxl::Visitor"*, i1, i8*)*, i32 (%"class.jxl::Visitor"*, i1, i8*)** %23, align 8
  %25 = tail call i32 %24(%"class.jxl::Visitor"* %1, i1 zeroext false, i8* %20) #15
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %78

27:                                               ; preds = %19
  %28 = load i8, i8* %20, align 4, !range !87
  %29 = icmp ne i8 %28, 0
  %30 = load i32 (%"class.jxl::Visitor"*, i1)**, i32 (%"class.jxl::Visitor"*, i1)*** %13, align 8
  %31 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i1)*, i32 (%"class.jxl::Visitor"*, i1)** %30, i64 8
  %32 = load i32 (%"class.jxl::Visitor"*, i1)*, i32 (%"class.jxl::Visitor"*, i1)** %31, align 8
  %33 = tail call i32 %32(%"class.jxl::Visitor"* %1, i1 zeroext %29) #15
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %49

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %0, i64 0, i32 3
  %37 = bitcast %"class.jxl::Visitor"* %1 to i32 (%"class.jxl::Visitor"*, i64, i32, i32*)***
  %38 = load i32 (%"class.jxl::Visitor"*, i64, i32, i32*)**, i32 (%"class.jxl::Visitor"*, i64, i32, i32*)*** %37, align 8
  %39 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i32, i32*)** %38, i64 5
  %40 = load i32 (%"class.jxl::Visitor"*, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i32, i32*)** %39, align 8
  %41 = tail call i32 %40(%"class.jxl::Visitor"* %1, i64 24, i32 10000000, i32* %36) #15
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %78

43:                                               ; preds = %35
  %44 = load i32, i32* %36, align 8
  %45 = icmp ugt i32 %44, 10000000
  %46 = shl i32 %44, 13
  %47 = icmp ult i32 %46, 10000000
  %48 = or i1 %45, %47
  br i1 %48, label %78, label %49

49:                                               ; preds = %43, %27
  %50 = load i8, i8* %20, align 4, !range !87
  %51 = icmp eq i8 %50, 0
  %52 = load i32 (%"class.jxl::Visitor"*, i1)**, i32 (%"class.jxl::Visitor"*, i1)*** %13, align 8
  %53 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i1)*, i32 (%"class.jxl::Visitor"*, i1)** %52, i64 8
  %54 = load i32 (%"class.jxl::Visitor"*, i1)*, i32 (%"class.jxl::Visitor"*, i1)** %53, align 8
  %55 = tail call i32 %54(%"class.jxl::Visitor"* %1, i1 zeroext %51) #15
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %77

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %0, i64 0, i32 4
  %59 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #15, !noalias !168
  %60 = load i32, i32* %58, align 4, !alias.scope !168
  store i32 %60, i32* %3, align 4, !noalias !168
  %61 = bitcast %"class.jxl::Visitor"* %1 to i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)***
  %62 = load i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)**, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*** %61, align 8, !noalias !171
  %63 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)** %62, i64 4
  %64 = load i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)** %63, align 8, !noalias !171
  %65 = call i32 %64(%"class.jxl::Visitor"* %1, i64 -9223372030412324864, i64 2495375999043, i32 13, i32* nonnull %3) #15, !noalias !168
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %57
  %68 = load i32, i32* %3, align 4, !noalias !168
  store i32 %68, i32* %58, align 4, !alias.scope !168
  %69 = icmp ugt i32 %68, 63
  br i1 %69, label %70, label %72

70:                                               ; preds = %57, %67
  %71 = phi i32 [ 1, %67 ], [ %65, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #15, !noalias !168
  br label %78

72:                                               ; preds = %67
  %73 = zext i32 %68 to i64
  %74 = shl i64 1, %73
  %75 = and i64 %74, 467206
  %76 = icmp eq i64 %75, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #15, !noalias !168
  br i1 %76, label %78, label %77

77:                                               ; preds = %72, %49, %11
  br label %78

78:                                               ; preds = %72, %70, %43, %35, %19, %77
  %79 = phi i32 [ 0, %77 ], [ 1, %72 ], [ %41, %35 ], [ %25, %19 ], [ 1, %43 ], [ %71, %70 ]
  ret i32 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl13ColorEncodingC2Ev(%"struct.jxl::ColorEncoding"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ColorEncodingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.jxl::CustomTransferFunction", %"struct.jxl::CustomTransferFunction"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl22CustomTransferFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 4, i32 1
  store i32 0, i32* %7, align 8
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %5) #15
  %8 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 7
  store i8 1, i8* %8, align 1
  %9 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 8
  %10 = bitcast %"class.jxl::PaddedBytes"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #15
  %11 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 10
  %12 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %12) #15
  %14 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 11
  %15 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %14, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %14, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %15) #15
  %17 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 12
  %18 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %17, i64 0, i32 0
  %19 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %17, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %18) #15
  %20 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 13
  %21 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %20, i64 0, i32 0
  %22 = getelementptr inbounds %"struct.jxl::Customxy", %"struct.jxl::Customxy"* %20, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl8CustomxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %21) #15
  tail call void @_ZN3jxl6Bundle4InitEPNS_6FieldsE(%"class.jxl::Fields"* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3jxl13ColorEncoding11VisitFieldsEPNS_7VisitorE(%"struct.jxl::ColorEncoding"*, %"class.jxl::Visitor"* noalias) unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 1
  %9 = bitcast %"class.jxl::Visitor"* %1 to i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*, i8*)***
  %10 = load i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*, i8*)**, i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*, i8*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*, i8*)*, i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*, i8*)** %10, i64 9
  %12 = load i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*, i8*)*, i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*, i8*)** %11, align 8
  %13 = tail call i32 %12(%"class.jxl::Visitor"* %1, %"class.jxl::Fields"* dereferenceable(8) %7, i8* %8) #15
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %2
  %16 = bitcast %"class.jxl::Visitor"* %1 to void (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)***
  %17 = load void (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)**, void (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)*, void (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)** %17, i64 10
  %19 = load void (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)*, void (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)** %18, align 8
  tail call void %19(%"class.jxl::Visitor"* %1, %"class.jxl::Fields"* %7) #15
  br label %192

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 6
  %22 = bitcast %"class.jxl::Visitor"* %1 to i32 (%"class.jxl::Visitor"*, i1, i8*)***
  %23 = load i32 (%"class.jxl::Visitor"*, i1, i8*)**, i32 (%"class.jxl::Visitor"*, i1, i8*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i1, i8*)*, i32 (%"class.jxl::Visitor"*, i1, i8*)** %23, i64 3
  %25 = load i32 (%"class.jxl::Visitor"*, i1, i8*)*, i32 (%"class.jxl::Visitor"*, i1, i8*)** %24, align 8
  %26 = tail call i32 %25(%"class.jxl::Visitor"* %1, i1 zeroext false, i8* %21) #15
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %192

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 9
  %30 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #15, !noalias !174
  %31 = load i32, i32* %29, align 4, !alias.scope !174
  store i32 %31, i32* %6, align 4, !noalias !174
  %32 = bitcast %"class.jxl::Visitor"* %1 to i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)***
  %33 = load i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)**, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*** %32, align 8, !noalias !177
  %34 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)** %33, i64 4
  %35 = load i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)** %34, align 8, !noalias !177
  %36 = call i32 %35(%"class.jxl::Visitor"* %1, i64 -9223372030412324864, i64 2495375999043, i32 0, i32* nonnull %6) #15, !noalias !174
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %28
  %39 = load i32, i32* %6, align 4, !noalias !174
  store i32 %39, i32* %29, align 4, !alias.scope !174
  %40 = icmp ugt i32 %39, 63
  br i1 %40, label %41, label %43

41:                                               ; preds = %28, %38
  %42 = phi i32 [ 1, %38 ], [ %36, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #15, !noalias !174
  br label %192

43:                                               ; preds = %38
  %44 = icmp ult i32 %39, 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #15, !noalias !174
  br i1 %44, label %45, label %192

45:                                               ; preds = %43
  %46 = load i8, i8* %21, align 4, !range !87
  %47 = icmp eq i8 %46, 0
  %48 = bitcast %"class.jxl::Visitor"* %1 to i32 (%"class.jxl::Visitor"*, i1)***
  %49 = load i32 (%"class.jxl::Visitor"*, i1)**, i32 (%"class.jxl::Visitor"*, i1)*** %48, align 8
  %50 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i1)*, i32 (%"class.jxl::Visitor"*, i1)** %49, i64 8
  %51 = load i32 (%"class.jxl::Visitor"*, i1)*, i32 (%"class.jxl::Visitor"*, i1)** %50, align 8
  %52 = call i32 %51(%"class.jxl::Visitor"* %1, i1 zeroext %47) #15
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %199

54:                                               ; preds = %45
  %55 = load i32, i32* %29, align 8
  %56 = icmp eq i32 %55, 2
  br i1 %56, label %57, label %59

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 2
  store i32 1, i32* %58, align 4
  br label %59

59:                                               ; preds = %54, %57
  %60 = phi i1 [ false, %57 ], [ true, %54 ]
  %61 = load i32 (%"class.jxl::Visitor"*, i1)**, i32 (%"class.jxl::Visitor"*, i1)*** %48, align 8
  %62 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i1)*, i32 (%"class.jxl::Visitor"*, i1)** %61, i64 8
  %63 = load i32 (%"class.jxl::Visitor"*, i1)*, i32 (%"class.jxl::Visitor"*, i1)** %62, align 8
  %64 = call i32 %63(%"class.jxl::Visitor"* %1, i1 zeroext %60) #15
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %100

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 2
  %68 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #15, !noalias !180
  %69 = load i32, i32* %67, align 4, !alias.scope !180
  store i32 %69, i32* %4, align 4, !noalias !180
  %70 = load i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)**, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*** %32, align 8, !noalias !183
  %71 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)** %70, i64 4
  %72 = load i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)** %71, align 8, !noalias !183
  %73 = call i32 %72(%"class.jxl::Visitor"* %1, i64 -9223372030412324864, i64 2495375999043, i32 1, i32* nonnull %4) #15, !noalias !180
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %66
  %76 = load i32, i32* %4, align 4, !noalias !180
  store i32 %76, i32* %67, align 4, !alias.scope !180
  %77 = icmp ugt i32 %76, 63
  br i1 %77, label %78, label %80

78:                                               ; preds = %66, %75
  %79 = phi i32 [ 1, %75 ], [ %73, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #15, !noalias !180
  br label %192

80:                                               ; preds = %75
  %81 = zext i32 %76 to i64
  %82 = shl i64 1, %81
  %83 = and i64 %82, 3078
  %84 = icmp eq i64 %83, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #15, !noalias !180
  br i1 %84, label %192, label %85

85:                                               ; preds = %80
  %86 = icmp eq i32 %76, 2
  %87 = load i32 (%"class.jxl::Visitor"*, i1)**, i32 (%"class.jxl::Visitor"*, i1)*** %48, align 8
  %88 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i1)*, i32 (%"class.jxl::Visitor"*, i1)** %87, i64 8
  %89 = load i32 (%"class.jxl::Visitor"*, i1)*, i32 (%"class.jxl::Visitor"*, i1)** %88, align 8
  %90 = call i32 %89(%"class.jxl::Visitor"* %1, i1 zeroext %86) #15
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %100

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 10, i32 0
  %94 = bitcast %"class.jxl::Visitor"* %1 to i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)***
  %95 = load i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)**, i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)*** %94, align 8
  %96 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)*, i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)** %95, i64 11
  %97 = load i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)*, i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)** %96, align 8
  %98 = call i32 %97(%"class.jxl::Visitor"* %1, %"class.jxl::Fields"* %93) #15
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %192

100:                                              ; preds = %85, %92, %59
  %101 = load i32, i32* %29, align 8
  %102 = add i32 %101, -1
  %103 = icmp ugt i32 %102, 1
  %104 = load i32 (%"class.jxl::Visitor"*, i1)**, i32 (%"class.jxl::Visitor"*, i1)*** %48, align 8
  %105 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i1)*, i32 (%"class.jxl::Visitor"*, i1)** %104, i64 8
  %106 = load i32 (%"class.jxl::Visitor"*, i1)*, i32 (%"class.jxl::Visitor"*, i1)** %105, align 8
  %107 = call i32 %106(%"class.jxl::Visitor"* %1, i1 zeroext %103) #15
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %157

109:                                              ; preds = %100
  %110 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 3
  %111 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111) #15, !noalias !186
  %112 = load i32, i32* %110, align 4, !alias.scope !186
  store i32 %112, i32* %3, align 4, !noalias !186
  %113 = load i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)**, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*** %32, align 8, !noalias !189
  %114 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)** %113, i64 4
  %115 = load i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)** %114, align 8, !noalias !189
  %116 = call i32 %115(%"class.jxl::Visitor"* %1, i64 -9223372030412324864, i64 2495375999043, i32 1, i32* nonnull %3) #15, !noalias !186
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %109
  %119 = load i32, i32* %3, align 4, !noalias !186
  store i32 %119, i32* %110, align 4, !alias.scope !186
  %120 = icmp ugt i32 %119, 63
  br i1 %120, label %121, label %123

121:                                              ; preds = %109, %118
  %122 = phi i32 [ 1, %118 ], [ %116, %109 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111) #15, !noalias !186
  br label %192

123:                                              ; preds = %118
  %124 = zext i32 %119 to i64
  %125 = shl i64 1, %124
  %126 = and i64 %125, 2566
  %127 = icmp eq i64 %126, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111) #15, !noalias !186
  br i1 %127, label %192, label %128

128:                                              ; preds = %123
  %129 = icmp eq i32 %119, 2
  %130 = load i32 (%"class.jxl::Visitor"*, i1)**, i32 (%"class.jxl::Visitor"*, i1)*** %48, align 8
  %131 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i1)*, i32 (%"class.jxl::Visitor"*, i1)** %130, i64 8
  %132 = load i32 (%"class.jxl::Visitor"*, i1)*, i32 (%"class.jxl::Visitor"*, i1)** %131, align 8
  %133 = call i32 %132(%"class.jxl::Visitor"* %1, i1 zeroext %129) #15
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %157

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 11, i32 0
  %137 = bitcast %"class.jxl::Visitor"* %1 to i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)***
  %138 = load i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)**, i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)*** %137, align 8
  %139 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)*, i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)** %138, i64 11
  %140 = load i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)*, i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)** %139, align 8
  %141 = call i32 %140(%"class.jxl::Visitor"* %1, %"class.jxl::Fields"* %136) #15
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %192

143:                                              ; preds = %135
  %144 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 12, i32 0
  %145 = load i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)**, i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)*** %137, align 8
  %146 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)*, i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)** %145, i64 11
  %147 = load i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)*, i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)** %146, align 8
  %148 = call i32 %147(%"class.jxl::Visitor"* %1, %"class.jxl::Fields"* %144) #15
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %192

150:                                              ; preds = %143
  %151 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 13, i32 0
  %152 = load i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)**, i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)*** %137, align 8
  %153 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)*, i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)** %152, i64 11
  %154 = load i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)*, i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)** %153, align 8
  %155 = call i32 %154(%"class.jxl::Visitor"* %1, %"class.jxl::Fields"* %151) #15
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %192

157:                                              ; preds = %100, %150, %128
  %158 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 4, i32 0
  %159 = bitcast %"class.jxl::Visitor"* %1 to i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)***
  %160 = load i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)**, i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)*** %159, align 8
  %161 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)*, i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)** %160, i64 11
  %162 = load i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)*, i32 (%"class.jxl::Visitor"*, %"class.jxl::Fields"*)** %161, align 8
  %163 = call i32 %162(%"class.jxl::Visitor"* %1, %"class.jxl::Fields"* %158) #15
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %192

165:                                              ; preds = %157
  %166 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 5
  %167 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %167) #15, !noalias !192
  %168 = load i32, i32* %166, align 4, !alias.scope !192
  store i32 %168, i32* %5, align 4, !noalias !192
  %169 = load i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)**, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*** %32, align 8, !noalias !195
  %170 = getelementptr inbounds i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)** %169, i64 4
  %171 = load i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)*, i32 (%"class.jxl::Visitor"*, i64, i64, i32, i32*)** %170, align 8, !noalias !195
  %172 = call i32 %171(%"class.jxl::Visitor"* %1, i64 -9223372030412324864, i64 2495375999043, i32 1, i32* nonnull %5) #15, !noalias !192
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %177

174:                                              ; preds = %165
  %175 = load i32, i32* %5, align 4, !noalias !192
  store i32 %175, i32* %166, align 4, !alias.scope !192
  %176 = icmp ugt i32 %175, 63
  br i1 %176, label %177, label %179

177:                                              ; preds = %165, %174
  %178 = phi i32 [ 1, %174 ], [ %172, %165 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %167) #15, !noalias !192
  br label %192

179:                                              ; preds = %174
  %180 = icmp ult i32 %175, 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %167) #15, !noalias !192
  br i1 %180, label %181, label %192

181:                                              ; preds = %179
  %182 = load i32, i32* %29, align 8
  %183 = icmp eq i32 %182, 3
  br i1 %183, label %192, label %184

184:                                              ; preds = %181
  %185 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 4, i32 2
  %186 = load i8, i8* %185, align 4, !range !87
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %188, label %194

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 4, i32 4
  %190 = load i32, i32* %189, align 4
  %191 = icmp eq i32 %190, 2
  br i1 %191, label %192, label %194

192:                                              ; preds = %15, %212, %20, %43, %92, %135, %143, %150, %157, %179, %41, %78, %121, %177, %194, %208, %123, %80, %188, %181
  %193 = phi i32 [ 1, %188 ], [ 1, %181 ], [ 0, %15 ], [ 0, %212 ], [ 1, %179 ], [ %163, %157 ], [ %155, %150 ], [ %148, %143 ], [ %141, %135 ], [ 1, %123 ], [ %98, %92 ], [ 1, %80 ], [ 1, %43 ], [ %26, %20 ], [ %42, %41 ], [ %79, %78 ], [ %122, %121 ], [ %178, %177 ], [ 1, %194 ], [ 1, %208 ]
  ret i32 %193

194:                                              ; preds = %184, %188
  %195 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 8, i32 0
  store i64 0, i64* %195, align 8
  %196 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 8
  %197 = call i32 @_ZN3jxl18MaybeCreateProfileERKNS_13ColorEncodingEPNS_11PaddedBytesE(%"struct.jxl::ColorEncoding"* dereferenceable(152) %0, %"class.jxl::PaddedBytes"* %196) #15
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %192

199:                                              ; preds = %194, %45
  %200 = load i8, i8* %21, align 4, !range !87
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %208, label %202

202:                                              ; preds = %199
  %203 = bitcast %"class.jxl::Visitor"* %1 to i1 (%"class.jxl::Visitor"*)***
  %204 = load i1 (%"class.jxl::Visitor"*)**, i1 (%"class.jxl::Visitor"*)*** %203, align 8
  %205 = getelementptr inbounds i1 (%"class.jxl::Visitor"*)*, i1 (%"class.jxl::Visitor"*)** %204, i64 12
  %206 = load i1 (%"class.jxl::Visitor"*)*, i1 (%"class.jxl::Visitor"*)** %205, align 8
  %207 = call zeroext i1 %206(%"class.jxl::Visitor"* %1) #15
  br i1 %207, label %212, label %208

208:                                              ; preds = %199, %202
  %209 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 8, i32 0
  %210 = load i64, i64* %209, align 8
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %192, label %212

212:                                              ; preds = %208, %202
  br label %192
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl38ConvertInternalToExternalColorEncodingERKNS_13ColorEncodingEP16JxlColorEncoding(%"struct.jxl::ColorEncoding"* nocapture readonly dereferenceable(152), %struct.JxlColorEncoding* nocapture) local_unnamed_addr #1 {
  %3 = alloca %"struct.jxl::PrimariesCIExy", align 16
  %4 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 9
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %struct.JxlColorEncoding, %struct.JxlColorEncoding* %1, i64 0, i32 0
  store i32 %5, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.JxlColorEncoding, %struct.JxlColorEncoding* %1, i64 0, i32 1
  store i32 %8, i32* %9, align 4
  %10 = load i32, i32* %7, align 4
  switch i32 %10, label %22 [
    i32 2, label %11
    i32 1, label %25
    i32 11, label %20
    i32 10, label %21
  ]

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 10, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = sitofp i32 %13 to double
  %15 = fmul double %14, 0x3EB0C6F7A0B5ED8D
  %16 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 10, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = sitofp i32 %17 to double
  %19 = fmul double %18, 0x3EB0C6F7A0B5ED8D
  br label %25

20:                                               ; preds = %2
  br label %25

21:                                               ; preds = %2
  br label %25

22:                                               ; preds = %2
  %23 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 377, i32 %10) #15
  %24 = tail call zeroext i1 @_ZN3jxl5AbortEv() #16
  unreachable

25:                                               ; preds = %2, %11, %20, %21
  %26 = phi double [ 0x3FD5555555555555, %21 ], [ 3.140000e-01, %20 ], [ %15, %11 ], [ 3.127000e-01, %2 ]
  %27 = phi double [ 0x3FD5555555555555, %21 ], [ 3.510000e-01, %20 ], [ %19, %11 ], [ 3.290000e-01, %2 ]
  %28 = getelementptr inbounds %struct.JxlColorEncoding, %struct.JxlColorEncoding* %1, i64 0, i32 2, i64 0
  store double %26, double* %28, align 8
  %29 = getelementptr inbounds %struct.JxlColorEncoding, %struct.JxlColorEncoding* %1, i64 0, i32 2, i64 1
  store double %27, double* %29, align 8
  switch i32 %5, label %50 [
    i32 0, label %30
    i32 3, label %30
  ]

30:                                               ; preds = %25, %25
  %31 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %struct.JxlColorEncoding, %struct.JxlColorEncoding* %1, i64 0, i32 3
  store i32 %32, i32* %33, align 8
  %34 = bitcast %"struct.jxl::PrimariesCIExy"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %34) #15
  %35 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %3, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"struct.jxl::PrimariesCIExy", %"struct.jxl::PrimariesCIExy"* %3, i64 0, i32 2, i32 0
  %37 = bitcast %"struct.jxl::PrimariesCIExy"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 -1, i64 48, i1 false)
  call void @_ZNK3jxl13ColorEncoding12GetPrimariesEv(%"struct.jxl::PrimariesCIExy"* nonnull sret %3, %"struct.jxl::ColorEncoding"* %0)
  %38 = getelementptr inbounds %struct.JxlColorEncoding, %struct.JxlColorEncoding* %1, i64 0, i32 4
  %39 = bitcast %"struct.jxl::PrimariesCIExy"* %3 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 16
  %41 = bitcast [2 x double]* %38 to <2 x i64>*
  store <2 x i64> %40, <2 x i64>* %41, align 8
  %42 = getelementptr inbounds %struct.JxlColorEncoding, %struct.JxlColorEncoding* %1, i64 0, i32 5
  %43 = bitcast double* %35 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 16
  %45 = bitcast [2 x double]* %42 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %45, align 8
  %46 = getelementptr inbounds %struct.JxlColorEncoding, %struct.JxlColorEncoding* %1, i64 0, i32 6
  %47 = bitcast double* %36 to <2 x i64>*
  %48 = load <2 x i64>, <2 x i64>* %47, align 16
  %49 = bitcast [2 x double]* %46 to <2 x i64>*
  store <2 x i64> %48, <2 x i64>* %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %34) #15
  br label %50

50:                                               ; preds = %25, %30
  %51 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 4, i32 2
  %52 = load i8, i8* %51, align 4, !range !87
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %66, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.JxlColorEncoding, %struct.JxlColorEncoding* %1, i64 0, i32 7
  store i32 65535, i32* %55, align 8
  %56 = load i8, i8* %51, align 4, !range !87
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %54
  %59 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.52, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i64 0, i64 0)) #15
  %60 = tail call zeroext i1 @_ZN3jxl5AbortEv() #16
  unreachable

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 4, i32 3
  %63 = load i32, i32* %62, align 8
  %64 = uitofp i32 %63 to double
  %65 = fmul double %64, 0x3E7AD7F29ABCAF48
  br label %70

66:                                               ; preds = %50
  %67 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 4, i32 4
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %struct.JxlColorEncoding, %struct.JxlColorEncoding* %1, i64 0, i32 7
  store i32 %68, i32* %69, align 8
  br label %70

70:                                               ; preds = %66, %61
  %71 = phi double [ 0.000000e+00, %66 ], [ %65, %61 ]
  %72 = getelementptr inbounds %struct.JxlColorEncoding, %struct.JxlColorEncoding* %1, i64 0, i32 8
  store double %71, double* %72, align 8
  %73 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 5
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %struct.JxlColorEncoding, %struct.JxlColorEncoding* %1, i64 0, i32 9
  store i32 %74, i32* %75, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3jxl13AdaptToXYZD50EffPf(float, float, float* nocapture) local_unnamed_addr #1 {
  %4 = alloca [3 x float], align 4
  %5 = alloca [9 x float], align 16
  %6 = fcmp olt float %0, 0.000000e+00
  %7 = fcmp ogt float %0, 1.000000e+00
  %8 = or i1 %6, %7
  %9 = fcmp olt float %1, 0.000000e+00
  %10 = or i1 %8, %9
  %11 = fcmp ogt float %1, 1.000000e+00
  %12 = or i1 %11, %10
  br i1 %12, label %221, label %13

13:                                               ; preds = %3
  %14 = bitcast [3 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #15
  %15 = getelementptr inbounds [3 x float], [3 x float]* %4, i64 0, i64 0
  %16 = getelementptr inbounds [3 x float], [3 x float]* %4, i64 0, i64 1
  %17 = getelementptr inbounds [3 x float], [3 x float]* %4, i64 0, i64 2
  %18 = fdiv float %0, %1
  store float %18, float* %15, align 4
  store float 1.000000e+00, float* %16, align 4
  %19 = fsub float 1.000000e+00, %0
  %20 = fsub float %19, %1
  %21 = fdiv float %20, %1
  store float %21, float* %17, align 4
  %22 = tail call i8* @_Znwm(i64 12) #17
  %23 = bitcast i8* %22 to float*
  %24 = ptrtoint i8* %22 to i64
  %25 = getelementptr i8, i8* %22, i64 8
  %26 = ptrtoint i8* %25 to i64
  %27 = sub i64 4, %24
  %28 = add i64 %27, %26
  %29 = and i64 %28, -4
  %30 = bitcast [3 x float]* %4 to i8*
  %31 = icmp ult i64 %29, 13
  %32 = add i64 %29, -12
  %33 = select i1 %31, i64 0, i64 %32
  %34 = getelementptr i8, i8* %22, i64 12
  call void @llvm.memset.p0i8.i64(i8* align 4 %34, i8 0, i64 %33, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* nonnull align 4 %30, i64 12, i1 false)
  %35 = load float, float* %23, align 4
  %36 = fmul float %35, 0x3FECA4A8C0000000
  %37 = fpext float %36 to double
  %38 = fadd double %37, 0.000000e+00
  %39 = getelementptr inbounds i8, i8* %22, i64 4
  %40 = bitcast i8* %39 to float*
  %41 = load float, float* %40, align 4
  %42 = fmul float %41, 0x3FD10CB2A0000000
  %43 = fpext float %42 to double
  %44 = fadd double %38, %43
  %45 = getelementptr inbounds i8, i8* %22, i64 8
  %46 = bitcast i8* %45 to float*
  %47 = load float, float* %46, align 4
  %48 = fmul float %47, 0xBFC4A8C160000000
  %49 = fpext float %48 to double
  %50 = fadd double %44, %49
  %51 = fptrunc double %50 to float
  %52 = fmul float %35, 0xBFE801A360000000
  %53 = fpext float %52 to double
  %54 = fadd double %53, 0.000000e+00
  %55 = fmul float %41, 0x3FFB6A7F00000000
  %56 = fpext float %55 to double
  %57 = fadd double %54, %56
  %58 = fmul float %47, 0x3FA2CA57A0000000
  %59 = fpext float %58 to double
  %60 = fadd double %57, %59
  %61 = fptrunc double %60 to float
  %62 = fmul float %35, 0x3FA3EAB360000000
  %63 = fpext float %62 to double
  %64 = fadd double %63, 0.000000e+00
  %65 = fmul float %41, 0xBFB1893740000000
  %66 = fpext float %65 to double
  %67 = fadd double %64, %66
  %68 = fmul float %47, 0x3FF0793DE0000000
  %69 = fpext float %68 to double
  %70 = fadd double %67, %69
  %71 = fptrunc double %70 to float
  tail call void @_ZdlPv(i8* nonnull %22) #17
  %72 = fdiv float 0x3FEFE18FE0000000, %51
  %73 = fdiv float 0x3FF053ABC0000000, %61
  %74 = fdiv float 0x3FEA3255A0000000, %71
  %75 = bitcast [9 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %75) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %75, i8 -1, i64 36, i1 false)
  %76 = tail call i8* @_Znwm(i64 12) #17
  %77 = ptrtoint i8* %76 to i64
  %78 = getelementptr i8, i8* %76, i64 8
  %79 = ptrtoint i8* %78 to i64
  %80 = sub i64 4, %77
  %81 = add i64 %80, %79
  %82 = and i64 %81, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %76, i8 0, i64 %82, i1 false) #15
  %83 = bitcast i8* %76 to i32*
  %84 = getelementptr inbounds i8, i8* %76, i64 4
  %85 = bitcast i8* %84 to i32*
  %86 = getelementptr inbounds i8, i8* %76, i64 8
  %87 = bitcast i8* %86 to i32*
  %88 = insertelement <2 x float> undef, float %74, i32 0
  %89 = shufflevector <2 x float> %88, <2 x float> undef, <2 x i32> zeroinitializer
  %90 = insertelement <2 x float> undef, float %73, i32 0
  %91 = shufflevector <2 x float> %90, <2 x float> undef, <2 x i32> zeroinitializer
  %92 = insertelement <2 x float> undef, float %72, i32 0
  %93 = shufflevector <2 x float> %92, <2 x float> undef, <2 x i32> zeroinitializer
  %94 = fmul <2 x float> %93, <float 0x3FECA4A8C0000000, float 0x3FD10CB2A0000000>
  %95 = fpext <2 x float> %94 to <2 x double>
  %96 = fadd <2 x double> %95, zeroinitializer
  %97 = fadd <2 x double> %96, <double -0.000000e+00, double 0.000000e+00>
  %98 = fadd <2 x double> %97, <double 0.000000e+00, double -0.000000e+00>
  %99 = fptrunc <2 x double> %98 to <2 x float>
  %100 = bitcast [9 x float]* %5 to <2 x float>*
  store <2 x float> %99, <2 x float>* %100, align 16
  %101 = fmul <2 x float> %91, <float 0xBFE801A360000000, float 0x3FFB6A7F00000000>
  %102 = fpext <2 x float> %101 to <2 x double>
  %103 = fadd <2 x double> %102, zeroinitializer
  %104 = fadd <2 x double> %103, <double 0.000000e+00, double -0.000000e+00>
  %105 = fptrunc <2 x double> %104 to <2 x float>
  %106 = getelementptr inbounds [9 x float], [9 x float]* %5, i64 0, i64 3
  %107 = bitcast float* %106 to <2 x float>*
  store <2 x float> %105, <2 x float>* %107, align 4
  %108 = fmul <2 x float> %89, <float 0x3FA3EAB360000000, float 0xBFB1893740000000>
  %109 = fadd <2 x float> %108, zeroinitializer
  %110 = getelementptr inbounds [9 x float], [9 x float]* %5, i64 0, i64 6
  %111 = bitcast float* %110 to <2 x float>*
  store <2 x float> %109, <2 x float>* %111, align 8
  %112 = fmul float %72, 0xBFC4A8C160000000
  %113 = fadd float %112, 0.000000e+00
  %114 = getelementptr inbounds [9 x float], [9 x float]* %5, i64 0, i64 2
  store float %113, float* %114, align 8
  %115 = fmul float %73, 0x3FA2CA57A0000000
  %116 = fadd float %115, 0.000000e+00
  %117 = getelementptr inbounds [9 x float], [9 x float]* %5, i64 0, i64 5
  store float %116, float* %117, align 4
  %118 = fmul float %74, 0x3FF0793DE0000000
  %119 = fadd float %118, 0.000000e+00
  %120 = getelementptr inbounds [9 x float], [9 x float]* %5, i64 0, i64 8
  store float %119, float* %120, align 16
  store i32 -1104853493, i32* %83, align 4
  store i32 1024873149, i32* %85, align 4
  store i32 1065601519, i32* %87, align 4
  tail call void @_ZdlPv(i8* nonnull %76) #17
  %121 = tail call i8* @_Znwm(i64 12) #17
  %122 = ptrtoint i8* %121 to i64
  %123 = getelementptr i8, i8* %121, i64 8
  %124 = ptrtoint i8* %123 to i64
  %125 = sub i64 4, %122
  %126 = add i64 %125, %124
  %127 = and i64 %126, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %121, i8 0, i64 %127, i1 false) #15
  %128 = bitcast i8* %121 to i32*
  %129 = getelementptr inbounds i8, i8* %121, i64 4
  %130 = bitcast i8* %129 to i32*
  %131 = getelementptr inbounds i8, i8* %121, i64 8
  %132 = bitcast i8* %131 to i32*
  %133 = bitcast [9 x float]* %5 to <2 x float>*
  %134 = load <2 x float>, <2 x float>* %133, align 16
  %135 = getelementptr inbounds [9 x float], [9 x float]* %5, i64 0, i64 3
  %136 = bitcast float* %135 to <2 x float>*
  %137 = load <2 x float>, <2 x float>* %136, align 4
  %138 = getelementptr inbounds [9 x float], [9 x float]* %5, i64 0, i64 6
  %139 = bitcast float* %138 to <2 x float>*
  %140 = load <2 x float>, <2 x float>* %139, align 8
  %141 = fmul <2 x float> %134, <float 0x3FEF957220000000, float 0x3FEF957220000000>
  %142 = fpext <2 x float> %141 to <2 x double>
  %143 = fadd <2 x double> %142, zeroinitializer
  %144 = fmul <2 x float> %137, <float 0xBFC2D2ACE0000000, float 0xBFC2D2ACE0000000>
  %145 = fpext <2 x float> %144 to <2 x double>
  %146 = fadd <2 x double> %143, %145
  %147 = fmul <2 x float> %140, <float 0x3FC479A860000000, float 0x3FC479A860000000>
  %148 = fpext <2 x float> %147 to <2 x double>
  %149 = fadd <2 x double> %146, %148
  %150 = fptrunc <2 x double> %149 to <2 x float>
  %151 = bitcast float* %2 to <2 x float>*
  store <2 x float> %150, <2 x float>* %151, align 4
  %152 = fmul <2 x float> %134, <float 0x3FDBAAE3E0000000, float 0x3FDBAAE3E0000000>
  %153 = fpext <2 x float> %152 to <2 x double>
  %154 = fadd <2 x double> %153, zeroinitializer
  %155 = fmul <2 x float> %137, <float 0x3FE0966860000000, float 0x3FE0966860000000>
  %156 = fpext <2 x float> %155 to <2 x double>
  %157 = fadd <2 x double> %154, %156
  %158 = fmul <2 x float> %140, <float 0x3FA93CB240000000, float 0x3FA93CB240000000>
  %159 = fpext <2 x float> %158 to <2 x double>
  %160 = fadd <2 x double> %157, %159
  %161 = fptrunc <2 x double> %160 to <2 x float>
  %162 = getelementptr inbounds float, float* %2, i64 3
  %163 = bitcast float* %162 to <2 x float>*
  store <2 x float> %161, <2 x float>* %163, align 4
  %164 = fmul <2 x float> %134, <float 0xBF81777EC0000000, float 0xBF81777EC0000000>
  %165 = fpext <2 x float> %164 to <2 x double>
  %166 = fadd <2 x double> %165, zeroinitializer
  %167 = fmul <2 x float> %137, <float 0x3FA4807D60000000, float 0x3FA4807D60000000>
  %168 = fpext <2 x float> %167 to <2 x double>
  %169 = fadd <2 x double> %166, %168
  %170 = fmul <2 x float> %140, <float 0x3FEEFDD7E0000000, float 0x3FEEFDD7E0000000>
  %171 = fpext <2 x float> %170 to <2 x double>
  %172 = fadd <2 x double> %169, %171
  %173 = fptrunc <2 x double> %172 to <2 x float>
  %174 = getelementptr inbounds float, float* %2, i64 6
  %175 = bitcast float* %174 to <2 x float>*
  store <2 x float> %173, <2 x float>* %175, align 4
  %176 = getelementptr inbounds [9 x float], [9 x float]* %5, i64 0, i64 2
  %177 = bitcast float* %176 to i32*
  %178 = load i32, i32* %177, align 8
  %179 = getelementptr inbounds [9 x float], [9 x float]* %5, i64 0, i64 5
  %180 = bitcast float* %179 to i32*
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds [9 x float], [9 x float]* %5, i64 0, i64 8
  %183 = bitcast float* %182 to i32*
  %184 = load i32, i32* %183, align 16
  %185 = bitcast i32 %178 to float
  %186 = fmul float %185, 0x3FEF957220000000
  %187 = fpext float %186 to double
  %188 = fadd double %187, 0.000000e+00
  %189 = bitcast i32 %181 to float
  %190 = fmul float %189, 0xBFC2D2ACE0000000
  %191 = fpext float %190 to double
  %192 = fadd double %188, %191
  %193 = bitcast i32 %184 to float
  %194 = fmul float %193, 0x3FC479A860000000
  %195 = fpext float %194 to double
  %196 = fadd double %192, %195
  %197 = fptrunc double %196 to float
  %198 = getelementptr inbounds float, float* %2, i64 2
  store float %197, float* %198, align 4
  %199 = fmul float %185, 0x3FDBAAE3E0000000
  %200 = fpext float %199 to double
  %201 = fadd double %200, 0.000000e+00
  %202 = fmul float %189, 0x3FE0966860000000
  %203 = fpext float %202 to double
  %204 = fadd double %201, %203
  %205 = fmul float %193, 0x3FA93CB240000000
  %206 = fpext float %205 to double
  %207 = fadd double %204, %206
  %208 = fptrunc double %207 to float
  %209 = getelementptr inbounds float, float* %2, i64 5
  store float %208, float* %209, align 4
  %210 = fmul float %185, 0xBF81777EC0000000
  %211 = fpext float %210 to double
  %212 = fadd double %211, 0.000000e+00
  %213 = fmul float %189, 0x3FA4807D60000000
  %214 = fpext float %213 to double
  %215 = fadd double %212, %214
  %216 = fmul float %193, 0x3FEEFDD7E0000000
  %217 = fpext float %216 to double
  %218 = fadd double %215, %217
  %219 = fptrunc double %218 to float
  %220 = getelementptr inbounds float, float* %2, i64 8
  store float %219, float* %220, align 4
  store i32 %178, i32* %128, align 4
  store i32 %181, i32* %130, align 4
  store i32 %184, i32* %132, align 4
  tail call void @_ZdlPv(i8* nonnull %121) #17
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %75) #15
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #15
  br label %221

221:                                              ; preds = %3, %13
  %222 = phi i32 [ 0, %13 ], [ 1, %3 ]
  ret i32 %222
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3jxl17PrimariesToXYZD50EffffffffPf(float, float, float, float, float, float, float, float, float* nocapture) local_unnamed_addr #1 {
  %10 = alloca [9 x float], align 16
  %11 = alloca [9 x float], align 16
  %12 = alloca [3 x float], align 4
  %13 = alloca [9 x float], align 16
  %14 = alloca [9 x float], align 16
  %15 = alloca [9 x float], align 16
  %16 = fcmp olt float %0, 0.000000e+00
  %17 = fcmp ogt float %0, 1.000000e+00
  %18 = or i1 %16, %17
  %19 = fcmp olt float %1, 0.000000e+00
  %20 = or i1 %18, %19
  %21 = fcmp ogt float %1, 1.000000e+00
  %22 = or i1 %21, %20
  %23 = fcmp olt float %2, 0.000000e+00
  %24 = or i1 %23, %22
  %25 = fcmp ogt float %2, 1.000000e+00
  %26 = or i1 %25, %24
  %27 = fcmp olt float %3, 0.000000e+00
  %28 = or i1 %27, %26
  %29 = fcmp ogt float %3, 1.000000e+00
  %30 = or i1 %29, %28
  %31 = fcmp olt float %4, 0.000000e+00
  %32 = or i1 %31, %30
  %33 = fcmp ogt float %4, 1.000000e+00
  %34 = or i1 %33, %32
  %35 = fcmp olt float %5, 0.000000e+00
  %36 = or i1 %35, %34
  %37 = fcmp ogt float %5, 1.000000e+00
  %38 = or i1 %37, %36
  %39 = fcmp olt float %6, 0.000000e+00
  %40 = or i1 %39, %38
  %41 = fcmp ogt float %6, 1.000000e+00
  %42 = or i1 %41, %40
  %43 = fcmp olt float %7, 0.000000e+00
  %44 = or i1 %43, %42
  %45 = fcmp ogt float %7, 1.000000e+00
  %46 = or i1 %45, %44
  br i1 %46, label %426, label %47

47:                                               ; preds = %9
  %48 = bitcast [9 x float]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %48) #15
  %49 = getelementptr inbounds [9 x float], [9 x float]* %10, i64 0, i64 0
  store float %0, float* %49, align 16
  %50 = getelementptr inbounds [9 x float], [9 x float]* %10, i64 0, i64 1
  store float %2, float* %50, align 4
  %51 = getelementptr inbounds [9 x float], [9 x float]* %10, i64 0, i64 2
  store float %4, float* %51, align 8
  %52 = getelementptr inbounds [9 x float], [9 x float]* %10, i64 0, i64 3
  store float %1, float* %52, align 4
  %53 = getelementptr inbounds [9 x float], [9 x float]* %10, i64 0, i64 4
  store float %3, float* %53, align 16
  %54 = getelementptr inbounds [9 x float], [9 x float]* %10, i64 0, i64 5
  store float %5, float* %54, align 4
  %55 = getelementptr inbounds [9 x float], [9 x float]* %10, i64 0, i64 6
  %56 = fsub float 1.000000e+00, %0
  %57 = fsub float %56, %1
  store float %57, float* %55, align 8
  %58 = getelementptr inbounds [9 x float], [9 x float]* %10, i64 0, i64 7
  %59 = fsub float 1.000000e+00, %2
  %60 = fsub float %59, %3
  store float %60, float* %58, align 4
  %61 = getelementptr inbounds [9 x float], [9 x float]* %10, i64 0, i64 8
  %62 = fsub float 1.000000e+00, %4
  %63 = fsub float %62, %5
  store float %63, float* %61, align 16
  %64 = bitcast [9 x float]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %64) #15
  %65 = getelementptr inbounds [9 x float], [9 x float]* %11, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %64, i8* nonnull align 16 %48, i64 36, i1 false)
  %66 = call i32 @_ZN3jxl12Inv3x3MatrixIfEENS_6StatusEPT_(float* nonnull %65)
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %424

68:                                               ; preds = %47
  %69 = bitcast [3 x float]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %69) #15
  %70 = getelementptr inbounds [3 x float], [3 x float]* %12, i64 0, i64 0
  %71 = getelementptr inbounds [3 x float], [3 x float]* %12, i64 0, i64 1
  %72 = getelementptr inbounds [3 x float], [3 x float]* %12, i64 0, i64 2
  %73 = fdiv float %6, %7
  store float %73, float* %70, align 4
  store float 1.000000e+00, float* %71, align 4
  %74 = fsub float 1.000000e+00, %6
  %75 = fsub float %74, %7
  %76 = fdiv float %75, %7
  store float %76, float* %72, align 4
  %77 = call i8* @_Znwm(i64 12) #17
  %78 = bitcast i8* %77 to float*
  %79 = ptrtoint i8* %77 to i64
  %80 = getelementptr i8, i8* %77, i64 8
  %81 = ptrtoint i8* %80 to i64
  %82 = sub i64 4, %79
  %83 = add i64 %82, %81
  %84 = and i64 %83, -4
  %85 = getelementptr inbounds [9 x float], [9 x float]* %11, i64 0, i64 6
  %86 = bitcast [3 x float]* %12 to i8*
  %87 = icmp ult i64 %84, 13
  %88 = add i64 %84, -12
  %89 = select i1 %87, i64 0, i64 %88
  %90 = getelementptr i8, i8* %77, i64 12
  call void @llvm.memset.p0i8.i64(i8* align 4 %90, i8 0, i64 %89, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %77, i8* nonnull align 4 %86, i64 12, i1 false)
  %91 = load float, float* %65, align 16
  %92 = load float, float* %78, align 4
  %93 = fmul float %91, %92
  %94 = fpext float %93 to double
  %95 = fadd double %94, 0.000000e+00
  %96 = getelementptr inbounds [9 x float], [9 x float]* %11, i64 0, i64 1
  %97 = load float, float* %96, align 4
  %98 = getelementptr inbounds i8, i8* %77, i64 4
  %99 = bitcast i8* %98 to float*
  %100 = load float, float* %99, align 4
  %101 = fmul float %97, %100
  %102 = fpext float %101 to double
  %103 = fadd double %95, %102
  %104 = getelementptr inbounds [9 x float], [9 x float]* %11, i64 0, i64 2
  %105 = load float, float* %104, align 8
  %106 = getelementptr inbounds i8, i8* %77, i64 8
  %107 = bitcast i8* %106 to float*
  %108 = load float, float* %107, align 4
  %109 = fmul float %105, %108
  %110 = fpext float %109 to double
  %111 = fadd double %103, %110
  %112 = fptrunc double %111 to float
  %113 = getelementptr inbounds [9 x float], [9 x float]* %11, i64 0, i64 3
  %114 = load float, float* %113, align 4
  %115 = fmul float %114, %92
  %116 = fpext float %115 to double
  %117 = fadd double %116, 0.000000e+00
  %118 = getelementptr inbounds [9 x float], [9 x float]* %11, i64 0, i64 4
  %119 = load float, float* %118, align 16
  %120 = fmul float %119, %100
  %121 = fpext float %120 to double
  %122 = fadd double %117, %121
  %123 = getelementptr inbounds [9 x float], [9 x float]* %11, i64 0, i64 5
  %124 = load float, float* %123, align 4
  %125 = fmul float %124, %108
  %126 = fpext float %125 to double
  %127 = fadd double %122, %126
  %128 = fptrunc double %127 to float
  %129 = load float, float* %85, align 8
  %130 = fmul float %129, %92
  %131 = fpext float %130 to double
  %132 = fadd double %131, 0.000000e+00
  %133 = getelementptr inbounds [9 x float], [9 x float]* %11, i64 0, i64 7
  %134 = load float, float* %133, align 4
  %135 = fmul float %134, %100
  %136 = fpext float %135 to double
  %137 = fadd double %132, %136
  %138 = getelementptr inbounds [9 x float], [9 x float]* %11, i64 0, i64 8
  %139 = load float, float* %138, align 16
  %140 = fmul float %139, %108
  %141 = fpext float %140 to double
  %142 = fadd double %137, %141
  %143 = fptrunc double %142 to float
  call void @_ZdlPv(i8* nonnull %77) #17
  %144 = bitcast [9 x float]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %144) #15
  %145 = getelementptr inbounds [9 x float], [9 x float]* %13, i64 0, i64 0
  store float %112, float* %145, align 16
  %146 = getelementptr inbounds [9 x float], [9 x float]* %13, i64 0, i64 1
  store float 0.000000e+00, float* %146, align 4
  %147 = getelementptr inbounds [9 x float], [9 x float]* %13, i64 0, i64 2
  store float 0.000000e+00, float* %147, align 8
  %148 = getelementptr inbounds [9 x float], [9 x float]* %13, i64 0, i64 3
  store float 0.000000e+00, float* %148, align 4
  %149 = getelementptr inbounds [9 x float], [9 x float]* %13, i64 0, i64 4
  store float %128, float* %149, align 16
  %150 = getelementptr inbounds [9 x float], [9 x float]* %13, i64 0, i64 5
  store float 0.000000e+00, float* %150, align 4
  %151 = getelementptr inbounds [9 x float], [9 x float]* %13, i64 0, i64 6
  store float 0.000000e+00, float* %151, align 8
  %152 = getelementptr inbounds [9 x float], [9 x float]* %13, i64 0, i64 7
  store float 0.000000e+00, float* %152, align 4
  %153 = getelementptr inbounds [9 x float], [9 x float]* %13, i64 0, i64 8
  store float %143, float* %153, align 16
  %154 = bitcast [9 x float]* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %154) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %154, i8 -1, i64 36, i1 false)
  %155 = call i8* @_Znwm(i64 12) #17
  %156 = ptrtoint i8* %155 to i64
  %157 = getelementptr i8, i8* %155, i64 8
  %158 = ptrtoint i8* %157 to i64
  %159 = sub i64 4, %156
  %160 = add i64 %159, %158
  %161 = and i64 %160, -4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %155, i8 0, i64 %161, i1 false) #15
  %162 = load float, float* %49, align 16
  %163 = load float, float* %50, align 4
  %164 = load float, float* %51, align 8
  %165 = load float, float* %52, align 4
  %166 = load float, float* %53, align 16
  %167 = load float, float* %54, align 4
  %168 = load float, float* %55, align 8
  %169 = load float, float* %58, align 4
  %170 = load float, float* %61, align 16
  %171 = bitcast i8* %155 to i32*
  %172 = getelementptr inbounds i8, i8* %155, i64 4
  %173 = bitcast i8* %172 to i32*
  %174 = getelementptr inbounds i8, i8* %155, i64 8
  %175 = bitcast i8* %174 to i32*
  %176 = insertelement <2 x float> undef, float %170, i32 0
  %177 = shufflevector <2 x float> %176, <2 x float> undef, <2 x i32> zeroinitializer
  %178 = insertelement <2 x float> undef, float %169, i32 0
  %179 = shufflevector <2 x float> %178, <2 x float> undef, <2 x i32> zeroinitializer
  %180 = insertelement <2 x float> undef, float %168, i32 0
  %181 = shufflevector <2 x float> %180, <2 x float> undef, <2 x i32> zeroinitializer
  %182 = insertelement <2 x float> undef, float %167, i32 0
  %183 = shufflevector <2 x float> %182, <2 x float> undef, <2 x i32> zeroinitializer
  %184 = insertelement <2 x float> undef, float %166, i32 0
  %185 = shufflevector <2 x float> %184, <2 x float> undef, <2 x i32> zeroinitializer
  %186 = insertelement <2 x float> undef, float %165, i32 0
  %187 = shufflevector <2 x float> %186, <2 x float> undef, <2 x i32> zeroinitializer
  %188 = insertelement <2 x float> undef, float %164, i32 0
  %189 = shufflevector <2 x float> %188, <2 x float> undef, <2 x i32> zeroinitializer
  %190 = insertelement <2 x float> undef, float %163, i32 0
  %191 = shufflevector <2 x float> %190, <2 x float> undef, <2 x i32> zeroinitializer
  %192 = insertelement <2 x float> undef, float %162, i32 0
  %193 = shufflevector <2 x float> %192, <2 x float> undef, <2 x i32> zeroinitializer
  %194 = bitcast [9 x float]* %13 to <2 x float>*
  %195 = load <2 x float>, <2 x float>* %194, align 16
  %196 = getelementptr inbounds [9 x float], [9 x float]* %13, i64 0, i64 3
  %197 = bitcast float* %196 to <2 x float>*
  %198 = load <2 x float>, <2 x float>* %197, align 4
  %199 = getelementptr inbounds [9 x float], [9 x float]* %13, i64 0, i64 6
  %200 = bitcast float* %199 to <2 x float>*
  %201 = load <2 x float>, <2 x float>* %200, align 8
  %202 = fmul <2 x float> %193, %195
  %203 = fpext <2 x float> %202 to <2 x double>
  %204 = fadd <2 x double> %203, zeroinitializer
  %205 = fmul <2 x float> %191, %198
  %206 = fpext <2 x float> %205 to <2 x double>
  %207 = fadd <2 x double> %204, %206
  %208 = fmul <2 x float> %189, %201
  %209 = fpext <2 x float> %208 to <2 x double>
  %210 = fadd <2 x double> %207, %209
  %211 = fptrunc <2 x double> %210 to <2 x float>
  %212 = bitcast [9 x float]* %14 to <2 x float>*
  store <2 x float> %211, <2 x float>* %212, align 16
  %213 = fmul <2 x float> %187, %195
  %214 = fpext <2 x float> %213 to <2 x double>
  %215 = fadd <2 x double> %214, zeroinitializer
  %216 = fmul <2 x float> %185, %198
  %217 = fpext <2 x float> %216 to <2 x double>
  %218 = fadd <2 x double> %215, %217
  %219 = fmul <2 x float> %183, %201
  %220 = fpext <2 x float> %219 to <2 x double>
  %221 = fadd <2 x double> %218, %220
  %222 = fptrunc <2 x double> %221 to <2 x float>
  %223 = getelementptr inbounds [9 x float], [9 x float]* %14, i64 0, i64 3
  %224 = bitcast float* %223 to <2 x float>*
  store <2 x float> %222, <2 x float>* %224, align 4
  %225 = fmul <2 x float> %181, %195
  %226 = fpext <2 x float> %225 to <2 x double>
  %227 = fadd <2 x double> %226, zeroinitializer
  %228 = fmul <2 x float> %179, %198
  %229 = fpext <2 x float> %228 to <2 x double>
  %230 = fadd <2 x double> %227, %229
  %231 = fmul <2 x float> %177, %201
  %232 = fpext <2 x float> %231 to <2 x double>
  %233 = fadd <2 x double> %230, %232
  %234 = fptrunc <2 x double> %233 to <2 x float>
  %235 = getelementptr inbounds [9 x float], [9 x float]* %14, i64 0, i64 6
  %236 = bitcast float* %235 to <2 x float>*
  store <2 x float> %234, <2 x float>* %236, align 8
  %237 = getelementptr inbounds [9 x float], [9 x float]* %13, i64 0, i64 2
  %238 = bitcast float* %237 to i32*
  %239 = load i32, i32* %238, align 8
  %240 = getelementptr inbounds [9 x float], [9 x float]* %13, i64 0, i64 5
  %241 = bitcast float* %240 to i32*
  %242 = load i32, i32* %241, align 4
  %243 = getelementptr inbounds [9 x float], [9 x float]* %13, i64 0, i64 8
  %244 = bitcast float* %243 to i32*
  %245 = load i32, i32* %244, align 16
  %246 = bitcast i32 %239 to float
  %247 = fmul float %162, %246
  %248 = fpext float %247 to double
  %249 = fadd double %248, 0.000000e+00
  %250 = bitcast i32 %242 to float
  %251 = fmul float %163, %250
  %252 = fpext float %251 to double
  %253 = fadd double %249, %252
  %254 = bitcast i32 %245 to float
  %255 = fmul float %164, %254
  %256 = fpext float %255 to double
  %257 = fadd double %253, %256
  %258 = fptrunc double %257 to float
  %259 = getelementptr inbounds [9 x float], [9 x float]* %14, i64 0, i64 2
  store float %258, float* %259, align 8
  %260 = fmul float %165, %246
  %261 = fpext float %260 to double
  %262 = fadd double %261, 0.000000e+00
  %263 = fmul float %166, %250
  %264 = fpext float %263 to double
  %265 = fadd double %262, %264
  %266 = fmul float %167, %254
  %267 = fpext float %266 to double
  %268 = fadd double %265, %267
  %269 = fptrunc double %268 to float
  %270 = getelementptr inbounds [9 x float], [9 x float]* %14, i64 0, i64 5
  store float %269, float* %270, align 4
  %271 = fmul float %168, %246
  %272 = fpext float %271 to double
  %273 = fadd double %272, 0.000000e+00
  %274 = fmul float %169, %250
  %275 = fpext float %274 to double
  %276 = fadd double %273, %275
  %277 = fmul float %170, %254
  %278 = fpext float %277 to double
  %279 = fadd double %276, %278
  %280 = fptrunc double %279 to float
  %281 = getelementptr inbounds [9 x float], [9 x float]* %14, i64 0, i64 8
  store float %280, float* %281, align 16
  store i32 %239, i32* %171, align 4
  store i32 %242, i32* %173, align 4
  store i32 %245, i32* %175, align 4
  call void @_ZdlPv(i8* nonnull %155) #17
  %282 = bitcast [9 x float]* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %282) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %282, i8 -1, i64 36, i1 false)
  %283 = getelementptr inbounds [9 x float], [9 x float]* %15, i64 0, i64 0
  %284 = call i32 @_ZN3jxl13AdaptToXYZD50EffPf(float %6, float %7, float* nonnull %283)
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %422

286:                                              ; preds = %68
  %287 = call i8* @_Znwm(i64 12) #17
  %288 = ptrtoint i8* %287 to i64
  %289 = getelementptr i8, i8* %287, i64 8
  %290 = ptrtoint i8* %289 to i64
  %291 = sub i64 4, %288
  %292 = add i64 %291, %290
  %293 = and i64 %292, -4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %287, i8 0, i64 %293, i1 false) #15
  %294 = getelementptr inbounds [9 x float], [9 x float]* %15, i64 0, i64 6
  %295 = load float, float* %283, align 16
  %296 = getelementptr inbounds [9 x float], [9 x float]* %15, i64 0, i64 1
  %297 = load float, float* %296, align 4
  %298 = getelementptr inbounds [9 x float], [9 x float]* %15, i64 0, i64 2
  %299 = load float, float* %298, align 8
  %300 = getelementptr inbounds [9 x float], [9 x float]* %15, i64 0, i64 3
  %301 = load float, float* %300, align 4
  %302 = getelementptr inbounds [9 x float], [9 x float]* %15, i64 0, i64 4
  %303 = load float, float* %302, align 16
  %304 = getelementptr inbounds [9 x float], [9 x float]* %15, i64 0, i64 5
  %305 = load float, float* %304, align 4
  %306 = load float, float* %294, align 8
  %307 = getelementptr inbounds [9 x float], [9 x float]* %15, i64 0, i64 7
  %308 = load float, float* %307, align 4
  %309 = getelementptr inbounds [9 x float], [9 x float]* %15, i64 0, i64 8
  %310 = load float, float* %309, align 16
  %311 = bitcast i8* %287 to i32*
  %312 = getelementptr inbounds i8, i8* %287, i64 4
  %313 = bitcast i8* %312 to i32*
  %314 = getelementptr inbounds i8, i8* %287, i64 8
  %315 = bitcast i8* %314 to i32*
  %316 = insertelement <2 x float> undef, float %310, i32 0
  %317 = shufflevector <2 x float> %316, <2 x float> undef, <2 x i32> zeroinitializer
  %318 = insertelement <2 x float> undef, float %308, i32 0
  %319 = shufflevector <2 x float> %318, <2 x float> undef, <2 x i32> zeroinitializer
  %320 = insertelement <2 x float> undef, float %306, i32 0
  %321 = shufflevector <2 x float> %320, <2 x float> undef, <2 x i32> zeroinitializer
  %322 = insertelement <2 x float> undef, float %305, i32 0
  %323 = shufflevector <2 x float> %322, <2 x float> undef, <2 x i32> zeroinitializer
  %324 = insertelement <2 x float> undef, float %303, i32 0
  %325 = shufflevector <2 x float> %324, <2 x float> undef, <2 x i32> zeroinitializer
  %326 = insertelement <2 x float> undef, float %301, i32 0
  %327 = shufflevector <2 x float> %326, <2 x float> undef, <2 x i32> zeroinitializer
  %328 = insertelement <2 x float> undef, float %299, i32 0
  %329 = shufflevector <2 x float> %328, <2 x float> undef, <2 x i32> zeroinitializer
  %330 = insertelement <2 x float> undef, float %297, i32 0
  %331 = shufflevector <2 x float> %330, <2 x float> undef, <2 x i32> zeroinitializer
  %332 = insertelement <2 x float> undef, float %295, i32 0
  %333 = shufflevector <2 x float> %332, <2 x float> undef, <2 x i32> zeroinitializer
  %334 = bitcast [9 x float]* %14 to <2 x float>*
  %335 = load <2 x float>, <2 x float>* %334, align 16
  %336 = getelementptr inbounds [9 x float], [9 x float]* %14, i64 0, i64 3
  %337 = bitcast float* %336 to <2 x float>*
  %338 = load <2 x float>, <2 x float>* %337, align 4
  %339 = getelementptr inbounds [9 x float], [9 x float]* %14, i64 0, i64 6
  %340 = bitcast float* %339 to <2 x float>*
  %341 = load <2 x float>, <2 x float>* %340, align 8
  %342 = fmul <2 x float> %333, %335
  %343 = fpext <2 x float> %342 to <2 x double>
  %344 = fadd <2 x double> %343, zeroinitializer
  %345 = fmul <2 x float> %331, %338
  %346 = fpext <2 x float> %345 to <2 x double>
  %347 = fadd <2 x double> %344, %346
  %348 = fmul <2 x float> %329, %341
  %349 = fpext <2 x float> %348 to <2 x double>
  %350 = fadd <2 x double> %347, %349
  %351 = fptrunc <2 x double> %350 to <2 x float>
  %352 = bitcast float* %8 to <2 x float>*
  store <2 x float> %351, <2 x float>* %352, align 4
  %353 = fmul <2 x float> %327, %335
  %354 = fpext <2 x float> %353 to <2 x double>
  %355 = fadd <2 x double> %354, zeroinitializer
  %356 = fmul <2 x float> %325, %338
  %357 = fpext <2 x float> %356 to <2 x double>
  %358 = fadd <2 x double> %355, %357
  %359 = fmul <2 x float> %323, %341
  %360 = fpext <2 x float> %359 to <2 x double>
  %361 = fadd <2 x double> %358, %360
  %362 = fptrunc <2 x double> %361 to <2 x float>
  %363 = getelementptr inbounds float, float* %8, i64 3
  %364 = bitcast float* %363 to <2 x float>*
  store <2 x float> %362, <2 x float>* %364, align 4
  %365 = fmul <2 x float> %321, %335
  %366 = fpext <2 x float> %365 to <2 x double>
  %367 = fadd <2 x double> %366, zeroinitializer
  %368 = fmul <2 x float> %319, %338
  %369 = fpext <2 x float> %368 to <2 x double>
  %370 = fadd <2 x double> %367, %369
  %371 = fmul <2 x float> %317, %341
  %372 = fpext <2 x float> %371 to <2 x double>
  %373 = fadd <2 x double> %370, %372
  %374 = fptrunc <2 x double> %373 to <2 x float>
  %375 = getelementptr inbounds float, float* %8, i64 6
  %376 = bitcast float* %375 to <2 x float>*
  store <2 x float> %374, <2 x float>* %376, align 4
  %377 = getelementptr inbounds [9 x float], [9 x float]* %14, i64 0, i64 2
  %378 = bitcast float* %377 to i32*
  %379 = load i32, i32* %378, align 8
  %380 = getelementptr inbounds [9 x float], [9 x float]* %14, i64 0, i64 5
  %381 = bitcast float* %380 to i32*
  %382 = load i32, i32* %381, align 4
  %383 = getelementptr inbounds [9 x float], [9 x float]* %14, i64 0, i64 8
  %384 = bitcast float* %383 to i32*
  %385 = load i32, i32* %384, align 16
  %386 = bitcast i32 %379 to float
  %387 = fmul float %295, %386
  %388 = fpext float %387 to double
  %389 = fadd double %388, 0.000000e+00
  %390 = bitcast i32 %382 to float
  %391 = fmul float %297, %390
  %392 = fpext float %391 to double
  %393 = fadd double %389, %392
  %394 = bitcast i32 %385 to float
  %395 = fmul float %299, %394
  %396 = fpext float %395 to double
  %397 = fadd double %393, %396
  %398 = fptrunc double %397 to float
  %399 = getelementptr inbounds float, float* %8, i64 2
  store float %398, float* %399, align 4
  %400 = fmul float %301, %386
  %401 = fpext float %400 to double
  %402 = fadd double %401, 0.000000e+00
  %403 = fmul float %303, %390
  %404 = fpext float %403 to double
  %405 = fadd double %402, %404
  %406 = fmul float %305, %394
  %407 = fpext float %406 to double
  %408 = fadd double %405, %407
  %409 = fptrunc double %408 to float
  %410 = getelementptr inbounds float, float* %8, i64 5
  store float %409, float* %410, align 4
  %411 = fmul float %306, %386
  %412 = fpext float %411 to double
  %413 = fadd double %412, 0.000000e+00
  %414 = fmul float %308, %390
  %415 = fpext float %414 to double
  %416 = fadd double %413, %415
  %417 = fmul float %310, %394
  %418 = fpext float %417 to double
  %419 = fadd double %416, %418
  %420 = fptrunc double %419 to float
  %421 = getelementptr inbounds float, float* %8, i64 8
  store float %420, float* %421, align 4
  store i32 %379, i32* %311, align 4
  store i32 %382, i32* %313, align 4
  store i32 %385, i32* %315, align 4
  call void @_ZdlPv(i8* nonnull %287) #17
  br label %422

422:                                              ; preds = %68, %286
  %423 = phi i32 [ 0, %286 ], [ %284, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %282) #15
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %154) #15
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %144) #15
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %69) #15
  br label %424

424:                                              ; preds = %47, %422
  %425 = phi i32 [ %423, %422 ], [ %66, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %64) #15
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %48) #15
  br label %426

426:                                              ; preds = %9, %424
  %427 = phi i32 [ %425, %424 ], [ 1, %9 ]
  ret i32 %427
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3jxl12Inv3x3MatrixIfEENS_6StatusEPT_(float*) local_unnamed_addr #1 comdat {
  %2 = getelementptr inbounds float, float* %0, i64 4
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds float, float* %0, i64 8
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds float, float* %0, i64 2
  %7 = load float, float* %6, align 4
  %8 = insertelement <2 x float> undef, float %5, i32 0
  %9 = insertelement <2 x float> %8, float %7, i32 1
  %10 = fpext <2 x float> %9 to <2 x double>
  %11 = extractelement <2 x double> %10, i32 0
  %12 = getelementptr inbounds float, float* %0, i64 5
  %13 = getelementptr inbounds float, float* %0, i64 7
  %14 = load float, float* %13, align 4
  %15 = insertelement <2 x float> undef, float %14, i32 0
  %16 = insertelement <2 x float> %15, float %3, i32 1
  %17 = fpext <2 x float> %16 to <2 x double>
  %18 = getelementptr inbounds float, float* %0, i64 1
  %19 = load float, float* %18, align 4
  %20 = fpext float %19 to double
  %21 = bitcast float* %12 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 4
  %23 = fpext <2 x float> %22 to <2 x double>
  %24 = extractelement <2 x double> %23, i32 0
  %25 = extractelement <2 x double> %23, i32 1
  %26 = fmul double %24, %25
  %27 = getelementptr inbounds float, float* %0, i64 3
  %28 = load float, float* %27, align 4
  %29 = load float, float* %0, align 4
  %30 = insertelement <2 x float> undef, float %29, i32 0
  %31 = insertelement <2 x float> %30, float %28, i32 1
  %32 = fpext <2 x float> %31 to <2 x double>
  %33 = extractelement <2 x double> %32, i32 1
  %34 = fmul double %11, %33
  %35 = fsub double %26, %34
  %36 = shufflevector <2 x double> %32, <2 x double> %10, <2 x i32> <i32 1, i32 2>
  %37 = fmul <2 x double> %36, %17
  %38 = extractelement <2 x double> %17, i32 1
  %39 = shufflevector <2 x double> %17, <2 x double> %23, <2 x i32> <i32 1, i32 2>
  %40 = shufflevector <2 x double> %23, <2 x double> undef, <2 x i32> <i32 1, i32 undef>
  %41 = extractelement <2 x double> %17, i32 0
  %42 = shufflevector <2 x double> %40, <2 x double> %17, <2 x i32> <i32 0, i32 2>
  %43 = fmul <2 x double> %39, %42
  %44 = fsub <2 x double> %37, %43
  %45 = extractelement <2 x double> %32, i32 0
  %46 = fmul double %35, %20
  %47 = extractelement <2 x double> %10, i32 1
  %48 = shufflevector <2 x double> %10, <2 x double> undef, <2 x i32> <i32 1, i32 undef>
  %49 = shufflevector <2 x double> %48, <2 x double> %32, <2 x i32> <i32 0, i32 2>
  %50 = fmul <2 x double> %44, %49
  %51 = extractelement <2 x double> %50, i32 1
  %52 = fadd double %51, %46
  %53 = extractelement <2 x double> %50, i32 0
  %54 = fadd double %53, %52
  %55 = tail call double @llvm.fabs.f64(double %54) #15
  %56 = fcmp olt double %55, 1.000000e-10
  br i1 %56, label %98, label %57

57:                                               ; preds = %1
  %58 = fmul double %38, %45
  %59 = fmul double %33, %20
  %60 = fsub double %58, %59
  %61 = fmul double %25, %20
  %62 = fmul double %41, %45
  %63 = fsub double %61, %62
  %64 = fmul <2 x double> %10, %32
  %65 = shufflevector <2 x double> %48, <2 x double> %23, <2 x i32> <i32 0, i32 2>
  %66 = shufflevector <2 x double> %40, <2 x double> %32, <2 x i32> <i32 0, i32 2>
  %67 = fmul <2 x double> %65, %66
  %68 = fsub <2 x double> %64, %67
  %69 = fmul double %24, %20
  %70 = fmul double %38, %47
  %71 = fsub double %69, %70
  %72 = fmul double %41, %47
  %73 = fmul double %11, %20
  %74 = fsub double %72, %73
  %75 = fdiv double 1.000000e+00, %54
  %76 = insertelement <4 x double> undef, double %75, i32 0
  %77 = shufflevector <4 x double> %76, <4 x double> undef, <4 x i32> zeroinitializer
  %78 = extractelement <2 x double> %44, i32 1
  %79 = insertelement <4 x double> undef, double %78, i32 0
  %80 = insertelement <4 x double> %79, double %74, i32 1
  %81 = insertelement <4 x double> %80, double %71, i32 2
  %82 = insertelement <4 x double> %81, double %35, i32 3
  %83 = fmul <4 x double> %77, %82
  %84 = fptrunc <4 x double> %83 to <4 x float>
  %85 = bitcast float* %0 to <4 x float>*
  store <4 x float> %84, <4 x float>* %85, align 4
  %86 = extractelement <2 x double> %68, i32 0
  %87 = insertelement <4 x double> undef, double %86, i32 0
  %88 = extractelement <2 x double> %68, i32 1
  %89 = insertelement <4 x double> %87, double %88, i32 1
  %90 = extractelement <2 x double> %44, i32 0
  %91 = insertelement <4 x double> %89, double %90, i32 2
  %92 = insertelement <4 x double> %91, double %63, i32 3
  %93 = fmul <4 x double> %77, %92
  %94 = fptrunc <4 x double> %93 to <4 x float>
  %95 = bitcast float* %2 to <4 x float>*
  store <4 x float> %94, <4 x float>* %95, align 4
  %96 = fmul double %75, %60
  %97 = fptrunc double %96 to float
  store float %97, float* %4, align 4
  br label %98

98:                                               ; preds = %57, %1
  %99 = phi i32 [ 1, %1 ], [ 0, %57 ]
  ret i32 %99
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl13ColorEncodingD0Ev(%"struct.jxl::ColorEncoding"*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3jxl13ColorEncodingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.jxl::ColorEncoding", %"struct.jxl::ColorEncoding"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN3jxl12CacheAligned4FreeEPKv(i8* nonnull %4) #15
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %"struct.jxl::ColorEncoding"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK3jxl13ColorEncoding4NameEv(%"struct.jxl::ColorEncoding"*) unnamed_addr #1 comdat align 2 {
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.80, i64 0, i64 0)
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl22CustomTransferFunctionD0Ev(%"struct.jxl::CustomTransferFunction"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"struct.jxl::CustomTransferFunction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK3jxl22CustomTransferFunction4NameEv(%"struct.jxl::CustomTransferFunction"*) unnamed_addr #1 comdat align 2 {
  ret i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.81, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl6FieldsD2Ev(%"class.jxl::Fields"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3jxl8CustomxyD0Ev(%"struct.jxl::Customxy"*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %"struct.jxl::Customxy"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK3jxl8Customxy4NameEv(%"struct.jxl::Customxy"*) unnamed_addr #1 comdat align 2 {
  ret i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.82, i64 0, i64 0)
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #6

declare void @_ZN3jxl11PaddedBytes18IncreaseCapacityToEm(%"class.jxl::PaddedBytes"*, i64) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare void @_ZN3jxl12CacheAligned4FreeEPKv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN3jxl12_GLOBAL__N_19Tokenizer4NextEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.jxl::(anonymous namespace)::Tokenizer"* nocapture, %"class.std::__1::basic_string"* noalias nocapture) unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.jxl::(anonymous namespace)::Tokenizer", %"class.jxl::(anonymous namespace)::Tokenizer"* %0, i64 0, i32 0
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = getelementptr inbounds %"class.jxl::(anonymous namespace)::Tokenizer", %"class.jxl::(anonymous namespace)::Tokenizer"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 8
  %9 = getelementptr inbounds %"class.jxl::(anonymous namespace)::Tokenizer", %"class.jxl::(anonymous namespace)::Tokenizer"* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %6, i8 signext %8, i64 %10) #15
  %12 = icmp eq i64 %11, -1
  br i1 %12, label %13, label %25

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #15
  %15 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %16 = load i64, i64* %9, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %15 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %3, %"class.std::__1::basic_string"* dereferenceable(24) %15, i64 %16, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %17) #15
  %18 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %38

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #17
  br label %38

25:                                               ; preds = %2
  %26 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #15
  %27 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %28 = load i64, i64* %9, align 8
  %29 = sub i64 %11, %28
  %30 = bitcast %"class.std::__1::basic_string"* %27 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %27, i64 %28, i64 %29, %"class.std::__1::allocator"* dereferenceable(1) %30) #15
  %31 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #17
  br label %38

38:                                               ; preds = %25, %35, %13, %22
  %39 = phi i8* [ %14, %22 ], [ %14, %13 ], [ %26, %35 ], [ %26, %25 ]
  %40 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %18, %22 ], [ %18, %13 ], [ %31, %35 ], [ %31, %25 ]
  %41 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 8 %39, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #15
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  br label %50

48:                                               ; preds = %38
  %49 = zext i8 %43 to i64
  br label %50

50:                                               ; preds = %45, %48
  %51 = phi i64 [ %47, %45 ], [ %49, %48 ]
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %50
  %54 = add i64 %11, 1
  store i64 %54, i64* %9, align 8
  br label %55

55:                                               ; preds = %50, %53
  %56 = phi i32 [ 0, %53 ], [ 1, %50 ]
  ret i32 %56
}

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #11

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN3jxl12_GLOBAL__N_111ParseDoubleEPNS0_9TokenizerEPd(%"class.jxl::(anonymous namespace)::Tokenizer"* nocapture, double* noalias nocapture) unnamed_addr #1 {
  %3 = alloca i8*, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #15
  %7 = call fastcc i32 @_ZN3jxl12_GLOBAL__N_19Tokenizer4NextEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.jxl::(anonymous namespace)::Tokenizer"* %0, %"class.std::__1::basic_string"* nonnull %4)
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %39

11:                                               ; preds = %2
  %12 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15, !noalias !198
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8, !noalias !198
  %13 = tail call i32* @__errno_location() #18
  store i32 0, i32* %13, align 4, !noalias !198
  %14 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1, !noalias !198
  %17 = icmp slt i8 %16, 0
  %18 = load i8*, i8** %6, align 8, !noalias !198
  %19 = select i1 %17, i8* %18, i8* %5
  %20 = call double @strtod(i8* %19, i8** nonnull %3) #15, !noalias !198
  store double %20, double* %1, align 8, !alias.scope !198
  %21 = fcmp oeq double %20, 0.000000e+00
  br i1 %21, label %22, label %31

22:                                               ; preds = %11
  %23 = load i8*, i8** %3, align 8, !noalias !198
  %24 = load i8, i8* %15, align 1, !noalias !198
  %25 = icmp slt i8 %24, 0
  %26 = load i8*, i8** %6, align 8, !noalias !198
  %27 = select i1 %25, i8* %26, i8* %5
  %28 = icmp eq i8* %23, %27
  %29 = fcmp uno double %20, 0.000000e+00
  %30 = or i1 %29, %28
  br i1 %30, label %37, label %33

31:                                               ; preds = %11
  %32 = fcmp uno double %20, 0.000000e+00
  br i1 %32, label %37, label %33

33:                                               ; preds = %31, %22
  %34 = load i32, i32* %13, align 4, !noalias !198
  %35 = icmp eq i32 %34, 34
  %36 = zext i1 %35 to i32
  br label %37

37:                                               ; preds = %22, %31, %33
  %38 = phi i32 [ 1, %22 ], [ 1, %31 ], [ %36, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15, !noalias !198
  br label %39

39:                                               ; preds = %9, %37
  %40 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %10, %9 ], [ %14, %37 ]
  %41 = phi i32 [ %7, %9 ], [ %38, %37 ]
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %46) #17
  br label %47

47:                                               ; preds = %39, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #15
  ret i32 %41
}

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #13

; Function Attrs: nofree nounwind
declare double @strtod(i8* readonly, i8** nocapture) local_unnamed_addr #14

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #14

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nofree nounwind }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi: argument 0"}
!4 = distinct !{!4, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi: argument 0"}
!7 = distinct !{!7, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi"}
!8 = !{!"branch_weights", i32 1, i32 1048575}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi: argument 0"}
!11 = distinct !{!11, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi: argument 0"}
!14 = distinct !{!14, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi: argument 0"}
!17 = distinct !{!17, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi: argument 0"}
!20 = distinct !{!20, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi: argument 0"}
!23 = distinct !{!23, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi: argument 0"}
!26 = distinct !{!26, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi: argument 0"}
!29 = distinct !{!29, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi: argument 0"}
!32 = distinct !{!32, !"_ZN3jxl12_GLOBAL__N_116F64ToCustomxyI32EdPi"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_10ColorSpaceE: argument 0"}
!35 = distinct !{!35, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_10ColorSpaceE"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN3jxl8ToStringIdEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEET_: argument 0"}
!38 = distinct !{!38, !"_ZN3jxl8ToStringIdEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEET_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_: argument 0"}
!41 = distinct !{!41, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN3jxl8ToStringIdEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEET_: argument 0"}
!44 = distinct !{!44, !"_ZN3jxl8ToStringIdEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEET_"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_10WhitePointE: argument 0"}
!47 = distinct !{!47, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_10WhitePointE"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN3jxl8ToStringIdEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEET_: argument 0"}
!50 = distinct !{!50, !"_ZN3jxl8ToStringIdEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEET_"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_: argument 0"}
!53 = distinct !{!53, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZN3jxl8ToStringIdEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEET_: argument 0"}
!56 = distinct !{!56, !"_ZN3jxl8ToStringIdEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEET_"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_: argument 0"}
!59 = distinct !{!59, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZN3jxl8ToStringIdEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEET_: argument 0"}
!62 = distinct !{!62, !"_ZN3jxl8ToStringIdEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEET_"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_: argument 0"}
!65 = distinct !{!65, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZN3jxl8ToStringIdEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEET_: argument 0"}
!68 = distinct !{!68, !"_ZN3jxl8ToStringIdEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEET_"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_: argument 0"}
!71 = distinct !{!71, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZN3jxl8ToStringIdEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEET_: argument 0"}
!74 = distinct !{!74, !"_ZN3jxl8ToStringIdEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEET_"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_: argument 0"}
!77 = distinct !{!77, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZN3jxl8ToStringIdEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEET_: argument 0"}
!80 = distinct !{!80, !"_ZN3jxl8ToStringIdEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEET_"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_9PrimariesE: argument 0"}
!83 = distinct !{!83, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_9PrimariesE"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_15RenderingIntentE: argument 0"}
!86 = distinct !{!86, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_15RenderingIntentE"}
!87 = !{i8 0, i8 2}
!88 = !{!89}
!89 = distinct !{!89, !90, !"_ZN3jxl8ToStringIdEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEET_: argument 0"}
!90 = distinct !{!90, !"_ZN3jxl8ToStringIdEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEET_"}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_16TransferFunctionE: argument 0"}
!93 = distinct !{!93, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_16TransferFunctionE"}
!94 = !{!95, !97}
!95 = distinct !{!95, !96, !"_ZN3jxl12_GLOBAL__N_115ParseColorSpaceEPNS0_9TokenizerEPNS_13ColorEncodingE: argument 0"}
!96 = distinct !{!96, !"_ZN3jxl12_GLOBAL__N_115ParseColorSpaceEPNS0_9TokenizerEPNS_13ColorEncodingE"}
!97 = distinct !{!97, !96, !"_ZN3jxl12_GLOBAL__N_115ParseColorSpaceEPNS0_9TokenizerEPNS_13ColorEncodingE: argument 1"}
!98 = !{!97}
!99 = !{!100, !95, !97}
!100 = distinct !{!100, !101, !"_ZN3jxl6ValuesINS_10ColorSpaceEEENSt3__16vectorIT_NS2_9allocatorIS4_EEEEv: argument 0"}
!101 = distinct !{!101, !"_ZN3jxl6ValuesINS_10ColorSpaceEEENSt3__16vectorIT_NS2_9allocatorIS4_EEEEv"}
!102 = !{!103}
!103 = distinct !{!103, !104, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_10ColorSpaceE: argument 0"}
!104 = distinct !{!104, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_10ColorSpaceE"}
!105 = !{!103, !95, !97}
!106 = !{!107}
!107 = distinct !{!107, !108, !"_ZN3jxl12_GLOBAL__N_115ParseWhitePointEPNS0_9TokenizerEPNS_13ColorEncodingE: argument 1"}
!108 = distinct !{!108, !"_ZN3jxl12_GLOBAL__N_115ParseWhitePointEPNS0_9TokenizerEPNS_13ColorEncodingE"}
!109 = !{!110}
!110 = distinct !{!110, !108, !"_ZN3jxl12_GLOBAL__N_115ParseWhitePointEPNS0_9TokenizerEPNS_13ColorEncodingE: argument 0"}
!111 = !{!110, !107}
!112 = !{!113, !110, !107}
!113 = distinct !{!113, !114, !"_ZN3jxl6ValuesINS_10WhitePointEEENSt3__16vectorIT_NS2_9allocatorIS4_EEEEv: argument 0"}
!114 = distinct !{!114, !"_ZN3jxl6ValuesINS_10WhitePointEEENSt3__16vectorIT_NS2_9allocatorIS4_EEEEv"}
!115 = !{!116}
!116 = distinct !{!116, !117, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_10WhitePointE: argument 0"}
!117 = distinct !{!117, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_10WhitePointE"}
!118 = !{!116, !110}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZN3jxl12_GLOBAL__N_114ParsePrimariesEPNS0_9TokenizerEPNS_13ColorEncodingE: argument 1"}
!121 = distinct !{!121, !"_ZN3jxl12_GLOBAL__N_114ParsePrimariesEPNS0_9TokenizerEPNS_13ColorEncodingE"}
!122 = !{!123}
!123 = distinct !{!123, !121, !"_ZN3jxl12_GLOBAL__N_114ParsePrimariesEPNS0_9TokenizerEPNS_13ColorEncodingE: argument 0"}
!124 = !{!123, !120}
!125 = !{!126, !123, !120}
!126 = distinct !{!126, !127, !"_ZN3jxl6ValuesINS_9PrimariesEEENSt3__16vectorIT_NS2_9allocatorIS4_EEEEv: argument 0"}
!127 = distinct !{!127, !"_ZN3jxl6ValuesINS_9PrimariesEEENSt3__16vectorIT_NS2_9allocatorIS4_EEEEv"}
!128 = !{!129}
!129 = distinct !{!129, !130, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_9PrimariesE: argument 0"}
!130 = distinct !{!130, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_9PrimariesE"}
!131 = !{!129, !123}
!132 = !{!133, !135}
!133 = distinct !{!133, !134, !"_ZN3jxl12_GLOBAL__N_120ParseRenderingIntentEPNS0_9TokenizerEPNS_13ColorEncodingE: argument 0"}
!134 = distinct !{!134, !"_ZN3jxl12_GLOBAL__N_120ParseRenderingIntentEPNS0_9TokenizerEPNS_13ColorEncodingE"}
!135 = distinct !{!135, !134, !"_ZN3jxl12_GLOBAL__N_120ParseRenderingIntentEPNS0_9TokenizerEPNS_13ColorEncodingE: argument 1"}
!136 = !{!135}
!137 = !{!138, !133, !135}
!138 = distinct !{!138, !139, !"_ZN3jxl6ValuesINS_15RenderingIntentEEENSt3__16vectorIT_NS2_9allocatorIS4_EEEEv: argument 0"}
!139 = distinct !{!139, !"_ZN3jxl6ValuesINS_15RenderingIntentEEENSt3__16vectorIT_NS2_9allocatorIS4_EEEEv"}
!140 = !{!141}
!141 = distinct !{!141, !142, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_15RenderingIntentE: argument 0"}
!142 = distinct !{!142, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_15RenderingIntentE"}
!143 = !{!141, !133, !135}
!144 = !{!145}
!145 = distinct !{!145, !146, !"_ZN3jxl12_GLOBAL__N_121ParseTransferFunctionEPNS0_9TokenizerEPNS_13ColorEncodingE: argument 1"}
!146 = distinct !{!146, !"_ZN3jxl12_GLOBAL__N_121ParseTransferFunctionEPNS0_9TokenizerEPNS_13ColorEncodingE"}
!147 = !{!148}
!148 = distinct !{!148, !146, !"_ZN3jxl12_GLOBAL__N_121ParseTransferFunctionEPNS0_9TokenizerEPNS_13ColorEncodingE: argument 0"}
!149 = !{!148, !145}
!150 = !{!151, !148, !145}
!151 = distinct !{!151, !152, !"_ZN3jxl6ValuesINS_16TransferFunctionEEENSt3__16vectorIT_NS2_9allocatorIS4_EEEEv: argument 0"}
!152 = distinct !{!152, !"_ZN3jxl6ValuesINS_16TransferFunctionEEENSt3__16vectorIT_NS2_9allocatorIS4_EEEEv"}
!153 = !{!154}
!154 = distinct !{!154, !155, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_16TransferFunctionE: argument 0"}
!155 = distinct !{!155, !"_ZN3jxl12_GLOBAL__N_18ToStringENS_16TransferFunctionE"}
!156 = !{!154, !148, !145}
!157 = !{!158, !148, !145}
!158 = distinct !{!158, !159, !"_ZN3jxl12_GLOBAL__N_111ParseDoubleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPd: argument 0"}
!159 = distinct !{!159, !"_ZN3jxl12_GLOBAL__N_111ParseDoubleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPd"}
!160 = !{!133}
!161 = !{!95}
!162 = !{!163}
!163 = distinct !{!163, !164, !"_ZN3jxl7Visitor3U32ENS_8U32DistrES1_S1_S1_jPj: argument 0"}
!164 = distinct !{!164, !"_ZN3jxl7Visitor3U32ENS_8U32DistrES1_S1_S1_jPj"}
!165 = !{!166}
!166 = distinct !{!166, !167, !"_ZN3jxl7Visitor3U32ENS_8U32DistrES1_S1_S1_jPj: argument 0"}
!167 = distinct !{!167, !"_ZN3jxl7Visitor3U32ENS_8U32DistrES1_S1_S1_jPj"}
!168 = !{!169}
!169 = distinct !{!169, !170, !"_ZN3jxl7Visitor4EnumINS_16TransferFunctionEEENS_6StatusET_PS4_: argument 0"}
!170 = distinct !{!170, !"_ZN3jxl7Visitor4EnumINS_16TransferFunctionEEENS_6StatusET_PS4_"}
!171 = !{!172, !169}
!172 = distinct !{!172, !173, !"_ZN3jxl7Visitor3U32ENS_8U32DistrES1_S1_S1_jPj: argument 0"}
!173 = distinct !{!173, !"_ZN3jxl7Visitor3U32ENS_8U32DistrES1_S1_S1_jPj"}
!174 = !{!175}
!175 = distinct !{!175, !176, !"_ZN3jxl7Visitor4EnumINS_10ColorSpaceEEENS_6StatusET_PS4_: argument 0"}
!176 = distinct !{!176, !"_ZN3jxl7Visitor4EnumINS_10ColorSpaceEEENS_6StatusET_PS4_"}
!177 = !{!178, !175}
!178 = distinct !{!178, !179, !"_ZN3jxl7Visitor3U32ENS_8U32DistrES1_S1_S1_jPj: argument 0"}
!179 = distinct !{!179, !"_ZN3jxl7Visitor3U32ENS_8U32DistrES1_S1_S1_jPj"}
!180 = !{!181}
!181 = distinct !{!181, !182, !"_ZN3jxl7Visitor4EnumINS_10WhitePointEEENS_6StatusET_PS4_: argument 0"}
!182 = distinct !{!182, !"_ZN3jxl7Visitor4EnumINS_10WhitePointEEENS_6StatusET_PS4_"}
!183 = !{!184, !181}
!184 = distinct !{!184, !185, !"_ZN3jxl7Visitor3U32ENS_8U32DistrES1_S1_S1_jPj: argument 0"}
!185 = distinct !{!185, !"_ZN3jxl7Visitor3U32ENS_8U32DistrES1_S1_S1_jPj"}
!186 = !{!187}
!187 = distinct !{!187, !188, !"_ZN3jxl7Visitor4EnumINS_9PrimariesEEENS_6StatusET_PS4_: argument 0"}
!188 = distinct !{!188, !"_ZN3jxl7Visitor4EnumINS_9PrimariesEEENS_6StatusET_PS4_"}
!189 = !{!190, !187}
!190 = distinct !{!190, !191, !"_ZN3jxl7Visitor3U32ENS_8U32DistrES1_S1_S1_jPj: argument 0"}
!191 = distinct !{!191, !"_ZN3jxl7Visitor3U32ENS_8U32DistrES1_S1_S1_jPj"}
!192 = !{!193}
!193 = distinct !{!193, !194, !"_ZN3jxl7Visitor4EnumINS_15RenderingIntentEEENS_6StatusET_PS4_: argument 0"}
!194 = distinct !{!194, !"_ZN3jxl7Visitor4EnumINS_15RenderingIntentEEENS_6StatusET_PS4_"}
!195 = !{!196, !193}
!196 = distinct !{!196, !197, !"_ZN3jxl7Visitor3U32ENS_8U32DistrES1_S1_S1_jPj: argument 0"}
!197 = distinct !{!197, !"_ZN3jxl7Visitor3U32ENS_8U32DistrES1_S1_S1_jPj"}
!198 = !{!199}
!199 = distinct !{!199, !200, !"_ZN3jxl12_GLOBAL__N_111ParseDoubleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPd: argument 0"}
!200 = distinct !{!200, !"_ZN3jxl12_GLOBAL__N_111ParseDoubleERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPd"}
