; ModuleID = '../../chrome/browser/ui/views/tabs/tab_group_views.cc'
source_filename = "../../chrome/browser/ui/views/tabs/tab_group_views.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.TabGroupViews = type { %class.TabStrip*, %"class.tab_groups::TabGroupId", %class.TabGroupHeader*, %class.TabGroupHighlight*, %class.TabGroupUnderline* }
%"class.tab_groups::TabGroupId" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.TabGroupHeader = type { %class.TabSlotView.base, %"class.views::ContextMenuController", %"class.views::ViewTargeterDelegate", %class.TabStrip*, %"class.views::View"*, %"class.views::Label"*, %"class.views::FocusRing"*, %"class.base::TimeTicks", %"class.TabGroupHeader::EditorBubbleTracker" }
%class.TabSlotView.base = type <{ %"class.views::View.base", [4 x i8], %"class.absl::optional.427", i8, i8, i8 }>
%"class.views::View.base" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.49", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.56", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.75", %"class.absl::optional.81", i8, [7 x i8], %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.118", i8, i8, [3 x i8], %"class.std::__1::vector.123", %"class.std::__1::unique_ptr.130", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.249", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.269", %"class.base::ObserverList.275", i32 }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.1" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.4", %"class.std::__1::vector.20", %"class.ui::EventHandler"* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.27" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.20" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.13" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.6" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.8" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.base::flat_map.16"* }
%"class.base::flat_map.16" = type opaque
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.40" }
%"class.std::__1::map.40" = type { %"class.std::__1::__tree.41" }
%"class.std::__1::__tree.41" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.views::View"** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.std::__1::vector.49"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.65", %"struct.std::__1::atomic.65", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.63, %class.SkTDArray.64, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.63 = type { i8*, i32, i32 }
%class.SkTDArray.64 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.70 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.65" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.70 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.71", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.71" = type { %"struct.std::__1::__atomic_base.72" }
%"struct.std::__1::__atomic_base.72" = type { %"struct.std::__1::__cxx_atomic_impl.73" }
%"struct.std::__1::__cxx_atomic_impl.73" = type { %"struct.std::__1::__cxx_atomic_base_impl.74" }
%"struct.std::__1::__cxx_atomic_base_impl.74" = type { i8 }
%"struct.std::__1::atomic.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__atomic_base.67" }
%"struct.std::__1::__atomic_base.67" = type { %"struct.std::__1::__cxx_atomic_impl.68" }
%"struct.std::__1::__cxx_atomic_impl.68" = type { %"struct.std::__1::__cxx_atomic_base_impl.69" }
%"struct.std::__1::__cxx_atomic_base_impl.69" = type { i8 }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.81" = type { %"class.absl::optional_internal::optional_data.82" }
%"class.absl::optional_internal::optional_data.82" = type { %"class.absl::optional_internal::optional_data_base.83" }
%"class.absl::optional_internal::optional_data_base.83" = type { %"class.absl::optional_internal::optional_data_dtor_base.84" }
%"class.absl::optional_internal::optional_data_dtor_base.84" = type { i8, %union.anon.85 }
%union.anon.85 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.views::Background"* }
%"class.views::Background" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.views::Border"* }
%"class.views::Border" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.ui::PaintCache" = type <{ %class.sk_sp.98, float, [4 x i8] }>
%class.sk_sp.98 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.99", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { i8* }
%"class.ui::NativeTheme" = type <{ i32 (...)**, %"class.std::__1::map.103", %"class.base::ObserverList.114", i8, i8, [2 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::map.103" = type { %"class.std::__1::__tree.104" }
%"class.std::__1::__tree.104" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.base::ObserverList.114" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.115", i64, i32, [4 x i8] }>
%"class.base::LinkedList.115" = type { %"class.base::LinkNode.116" }
%"class.base::LinkNode.116" = type { %"class.base::internal::LinkNodeBase" }
%"class.absl::optional.118" = type { %"class.absl::optional_internal::optional_data.119" }
%"class.absl::optional_internal::optional_data.119" = type { %"class.absl::optional_internal::optional_data_base.120" }
%"class.absl::optional_internal::optional_data_base.120" = type { %"class.absl::optional_internal::optional_data_dtor_base.121" }
%"class.absl::optional_internal::optional_data_dtor_base.121" = type { i8, %union.anon.122 }
%union.anon.122 = type { i8 }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type { %"class.views::ViewObserver", %"class.views::Widget"*, %"class.std::__1::unique_ptr.221", %"class.views::View"*, %"class.ui::AcceleratorManager", i8, %"class.std::__1::unique_ptr.238", i32, [4 x i8], %"class.base::ObserverList.245", i8, i8, i32 }
%"class.views::ViewObserver" = type { i32 (...)** }
%"class.views::Widget" = type { %"class.views::internal::NativeWidgetDelegate", %"class.ui::EventSource", %"class.views::FocusTraversable", %"class.ui::NativeThemeObserver", %"class.ui::metadata::MetaDataProvider", %"class.views::internal::NativeWidgetPrivate"*, %"class.base::ObserverList.140", %"class.base::ObserverList.151", %"class.base::RepeatingCallbackList", %"class.views::WidgetDelegate"*, %"class.views::Widget"*, %"class.std::__1::unique_ptr.208", %"class.views::NonClientView"*, %"class.std::__1::unique_ptr.214", %"class.views::View"*, i32, i8, i32, i8, i64, i8, i32, i32, %"class.gfx::Rect", i8, i8, i8, i8, i8, i8, i8, %"class.gfx::Point", i8, %"class.std::__1::vector.49", i8, i8, i8, %"class.ui::NativeTheme"*, %"class.base::ScopedObservation", %"class.base::WeakPtrFactory.220" }
%"class.views::internal::NativeWidgetDelegate" = type { i32 (...)** }
%"class.ui::EventSource" = type { i32 (...)**, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.136" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.views::FocusTraversable" = type { i32 (...)** }
%"class.ui::NativeThemeObserver" = type { i32 (...)** }
%"class.views::internal::NativeWidgetPrivate" = type opaque
%"class.base::ObserverList.140" = type <{ %"class.std::__1::vector.141", %"class.base::LinkedList.148", i64, i32, [4 x i8] }>
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.143" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.65" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.148" = type { %"class.base::LinkNode.149" }
%"class.base::LinkNode.149" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.151" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.152", i64, i32, [4 x i8] }>
%"class.base::LinkedList.152" = type { %"class.base::LinkNode.153" }
%"class.base::LinkNode.153" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list.155", i8, %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory" }
%"class.std::__1::list.155" = type { %"class.std::__1::__list_imp.156" }
%"class.std::__1::__list_imp.156" = type { %"struct.std::__1::__list_node_base.157", %"class.std::__1::__compressed_pair.158" }
%"struct.std::__1::__list_node_base.157" = type { %"struct.std::__1::__list_node_base.157"*, %"struct.std::__1::__list_node_base.157"* }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.162 }
%class.scoped_refptr.162 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.163", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.163" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.164 }
%class.scoped_refptr.164 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.views::WidgetDelegate" = type { i32 (...)**, %"class.views::Widget"*, %"struct.views::WidgetDelegate::Params", %"class.views::View"*, i8, i8, %"class.views::View"*, %"class.std::__1::unique_ptr.186", i8, i8*, %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.192", %"class.std::__1::vector.195", %"class.std::__1::vector.195", %"class.std::__1::vector.195", %"class.base::OnceCallback.205", %"class.base::RepeatingCallback.206", %"class.base::OnceCallback.207" }
%"struct.views::WidgetDelegate::Params" = type { i32, %"class.std::__1::basic_string", i8, i8, i8, i8, i8, i8, %"class.gfx::ImageSkia", %"class.gfx::ImageSkia", %"class.absl::optional.172", %"class.std::__1::basic_string.177", i32, i8, i8, i8, i8, %"class.std::__1::basic_string" }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.171 }
%class.scoped_refptr.171 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.absl::optional.172" = type { %"class.absl::optional_internal::optional_data.173" }
%"class.absl::optional_internal::optional_data.173" = type { %"class.absl::optional_internal::optional_data_base.174" }
%"class.absl::optional_internal::optional_data_base.174" = type { %"class.absl::optional_internal::optional_data_dtor_base.175" }
%"class.absl::optional_internal::optional_data_dtor_base.175" = type { i8, %union.anon.176 }
%union.anon.176 = type { %"class.views::View"* }
%"class.std::__1::basic_string.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.180 }
%union.anon.180 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.167 }
%union.anon.167 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.views::View"* }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.std::__1::vector.195"* }
%"class.std::__1::vector.195" = type { %"class.std::__1::__vector_base.196" }
%"class.std::__1::__vector_base.196" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.197" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.base::OnceCallback"* }
%"class.base::OnceCallback.205" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.206" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::OnceCallback.207" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.views::internal::RootView"* }
%"class.views::internal::RootView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate", %"class.views::FocusTraversable", %"class.ui::EventProcessor", %"class.views::Widget"*, %"class.views::View"*, %"class.views::View"*, %"class.views::View"*, i8, i32, i32, i32, %"class.views::View"*, i8, %"class.std::__1::unique_ptr.587", %"class.std::__1::unique_ptr.593", %"class.views::FocusSearch", %"class.views::FocusTraversable"*, %"class.views::View"*, %"class.views::View"*, %"class.views::View"*, %"struct.views::View::DragInfo", %"class.views::internal::AnnounceTextView"* }
%"class.ui::EventProcessor" = type { %"class.ui::EventDispatcherDelegate", %"class.ui::EventSink", %"class.base::WeakPtrFactory.586" }
%"class.ui::EventSink" = type { i32 (...)** }
%"class.base::WeakPtrFactory.586" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.views::internal::PreEventDispatchHandler"* }
%"class.views::internal::PreEventDispatchHandler" = type opaque
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.views::internal::PostEventDispatchHandler"* }
%"class.views::internal::PostEventDispatchHandler" = type opaque
%"class.views::FocusSearch" = type <{ i32 (...)**, %"class.views::View"*, i8, i8, [6 x i8] }>
%"struct.views::View::DragInfo" = type { i8, %"class.gfx::Point" }
%"class.views::internal::AnnounceTextView" = type opaque
%"class.views::NonClientView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate", %"class.views::ClientView"*, %"class.std::__1::unique_ptr.580", %"class.views::View"*, %"class.std::__1::basic_string" }
%"class.views::ClientView" = type { %"class.views::View.base", %"class.views::View"* }
%"class.std::__1::unique_ptr.580" = type { %"class.std::__1::__compressed_pair.581" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"class.views::NonClientFrameView"* }
%"class.views::NonClientFrameView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate" }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.views::FocusManager"* }
%"class.base::ScopedObservation" = type { %"class.ui::NativeThemeObserver"*, %"class.ui::NativeTheme"* }
%"class.base::WeakPtrFactory.220" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.views::FocusManagerDelegate"* }
%"class.views::FocusManagerDelegate" = type opaque
%"class.ui::AcceleratorManager" = type { %"class.ui::AcceleratorMap" }
%"class.ui::AcceleratorMap" = type { %"class.std::__1::map.227" }
%"class.std::__1::map.227" = type { %"class.std::__1::__tree.228" }
%"class.std::__1::__tree.228" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.229", %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.views::ViewTracker"* }
%"class.views::ViewTracker" = type { %"class.views::ViewObserver", %"class.views::View"*, %"class.base::ScopedObservation.241" }
%"class.base::ScopedObservation.241" = type { %"class.views::ViewObserver"*, %"class.views::View"* }
%"class.base::ObserverList.245" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.246", i64, i32, [4 x i8] }>
%"class.base::LinkedList.246" = type { %"class.base::LinkNode.247" }
%"class.base::LinkNode.247" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.std::__1::vector.252"* }
%"class.std::__1::vector.252" = type { %"class.std::__1::__vector_base.253" }
%"class.std::__1::__vector_base.253" = type { %"class.ui::Accelerator"*, %"class.ui::Accelerator"*, %"class.std::__1::__compressed_pair.254" }
%"class.ui::Accelerator" = type { i32, i32, i32, %"class.base::TimeTicks", i8, i32 }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.ui::Accelerator"* }
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.views::ViewAccessibility"* }
%"class.views::ViewAccessibility" = type opaque
%"class.base::ObserverList.275" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.276", i64, i32, [4 x i8] }>
%"class.base::LinkedList.276" = type { %"class.base::LinkNode.277" }
%"class.base::LinkNode.277" = type { %"class.base::internal::LinkNodeBase" }
%"class.absl::optional.427" = type { %"class.absl::optional_internal::optional_data.428" }
%"class.absl::optional_internal::optional_data.428" = type { %"class.absl::optional_internal::optional_data_base.429" }
%"class.absl::optional_internal::optional_data_base.429" = type { %"class.absl::optional_internal::optional_data_dtor_base.430" }
%"class.absl::optional_internal::optional_data_dtor_base.430" = type { i8, %union.anon.431 }
%union.anon.431 = type { %"class.tab_groups::TabGroupId" }
%"class.views::ContextMenuController" = type { i32 (...)**, i8, %"class.base::WeakPtrFactory.262" }
%"class.base::WeakPtrFactory.262" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.views::ViewTargeterDelegate" = type { i32 (...)** }
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.49", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.56", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.75", %"class.absl::optional.81", i8, [7 x i8], %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.118", i8, i8, [3 x i8], %"class.std::__1::vector.123", %"class.std::__1::unique_ptr.130", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.249", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.269", %"class.base::ObserverList.275", i32, [4 x i8] }>
%"class.views::Label" = type { %"class.views::View.base", %"class.views::ContextMenuController", %"class.views::WordLookupClient", %"class.views::SelectionControllerDelegate", %"class.ui::SimpleMenuModel::Delegate", i32, i32, %"class.absl::optional.363", %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.432", %"class.gfx::Range", i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, %"class.std::__1::basic_string", i8, i8, i32, i32, i32, %"class.std::__1::unique_ptr.537", %"class.std::__1::basic_string", %"class.ui::SimpleMenuModel", %"class.std::__1::unique_ptr.558" }
%"class.views::WordLookupClient" = type { i32 (...)** }
%"class.views::SelectionControllerDelegate" = type { i32 (...)** }
%"class.ui::SimpleMenuModel::Delegate" = type { %"class.ui::AcceleratorProvider" }
%"class.ui::AcceleratorProvider" = type { i32 (...)** }
%"class.absl::optional.363" = type { %"class.absl::optional_internal::optional_data.364" }
%"class.absl::optional_internal::optional_data.364" = type { %"class.absl::optional_internal::optional_data_base.365" }
%"class.absl::optional_internal::optional_data_base.365" = type { %"class.absl::optional_internal::optional_data_dtor_base.366" }
%"class.absl::optional_internal::optional_data_dtor_base.366" = type { i8, %union.anon.367 }
%union.anon.367 = type { i32 }
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.gfx::RenderText"* }
%"class.gfx::RenderText" = type <{ i32 (...)**, float, float, %"class.std::__1::basic_string", i32, i32, i32, i32, i32, [4 x i8], %"class.gfx::FontList", %"class.gfx::SelectionModel", %"class.gfx::Rect", i8, i8, [2 x i8], i32, i32, i8, i8, [2 x i8], %"class.gfx::Range", %"class.gfx::BreakList", %"class.gfx::BreakList.451", %"class.gfx::BreakList.461", %"class.gfx::BreakList.471", %"struct.std::__1::array", %"class.gfx::BreakList", %"class.gfx::BreakList.451", %"class.gfx::BreakList.461", %"class.gfx::BreakList.471", %"struct.std::__1::array", %"class.std::__1::vector.491", i8, [3 x i8], i32, i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.absl::optional.118", i8, i8, i32, i8, [3 x i8], i64, i32, i8, [3 x i8], %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Vector2d", i32, i8, [7 x i8], %"class.std::__1::vector.498", %"class.gfx::BreakList.505", %"class.std::__1::unique_ptr.514", float, i32, %"class.absl::optional.363", i8, [7 x i8] }>
%"class.gfx::FontList" = type { %class.scoped_refptr.435 }
%class.scoped_refptr.435 = type { %"class.gfx::FontListImpl"* }
%"class.gfx::FontListImpl" = type opaque
%"class.gfx::SelectionModel" = type <{ %"class.gfx::Range", %"class.std::__1::vector.436", i32, [4 x i8] }>
%"class.std::__1::vector.436" = type { %"class.std::__1::__vector_base.437" }
%"class.std::__1::__vector_base.437" = type { %"class.gfx::Range"*, %"class.gfx::Range"*, %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.gfx::Range"* }
%"class.gfx::BreakList" = type { %"class.std::__1::vector.443", i64 }
%"class.std::__1::vector.443" = type { %"class.std::__1::__vector_base.444" }
%"class.std::__1::__vector_base.444" = type { %"struct.std::__1::pair.445"*, %"struct.std::__1::pair.445"*, %"class.std::__1::__compressed_pair.446" }
%"struct.std::__1::pair.445" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.447" }
%"struct.std::__1::__compressed_pair_elem.447" = type { %"struct.std::__1::pair.445"* }
%"class.gfx::BreakList.451" = type { %"class.std::__1::vector.452", i64 }
%"class.std::__1::vector.452" = type { %"class.std::__1::__vector_base.453" }
%"class.std::__1::__vector_base.453" = type { %"struct.std::__1::pair.454"*, %"struct.std::__1::pair.454"*, %"class.std::__1::__compressed_pair.456" }
%"struct.std::__1::pair.454" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"struct.std::__1::pair.454"* }
%"class.gfx::BreakList.461" = type { %"class.std::__1::vector.462", i64 }
%"class.std::__1::vector.462" = type { %"class.std::__1::__vector_base.463" }
%"class.std::__1::__vector_base.463" = type { %"struct.std::__1::pair.464"*, %"struct.std::__1::pair.464"*, %"class.std::__1::__compressed_pair.466" }
%"struct.std::__1::pair.464" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.std::__1::pair.464"* }
%"class.gfx::BreakList.471" = type { %"class.std::__1::vector.472", i64 }
%"class.std::__1::vector.472" = type { %"class.std::__1::__vector_base.473" }
%"class.std::__1::__vector_base.473" = type { %"struct.std::__1::pair.474"*, %"struct.std::__1::pair.474"*, %"class.std::__1::__compressed_pair.476" }
%"struct.std::__1::pair.474" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"struct.std::__1::pair.474"* }
%"struct.std::__1::array" = type { [4 x %"class.gfx::BreakList.481"] }
%"class.gfx::BreakList.481" = type { %"class.std::__1::vector.482", i64 }
%"class.std::__1::vector.482" = type { %"class.std::__1::__vector_base.483" }
%"class.std::__1::__vector_base.483" = type { %"struct.std::__1::pair.484"*, %"struct.std::__1::pair.484"*, %"class.std::__1::__compressed_pair.486" }
%"struct.std::__1::pair.484" = type <{ i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::pair.484"* }
%"class.std::__1::vector.491" = type { %"class.std::__1::__vector_base.492" }
%"class.std::__1::__vector_base.492" = type { %"struct.gfx::internal::TextToDisplayIndex"*, %"struct.gfx::internal::TextToDisplayIndex"*, %"class.std::__1::__compressed_pair.493" }
%"struct.gfx::internal::TextToDisplayIndex" = type { i64, i64 }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"struct.gfx::internal::TextToDisplayIndex"* }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"*, %"class.std::__1::__compressed_pair.500" }
%"class.gfx::ShadowValue" = type <{ %"class.gfx::Vector2d", double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.gfx::ShadowValue"* }
%"class.gfx::BreakList.505" = type { %"class.std::__1::vector.506", i64 }
%"class.std::__1::vector.506" = type { %"class.std::__1::__vector_base.507" }
%"class.std::__1::__vector_base.507" = type { %"struct.std::__1::pair.508"*, %"struct.std::__1::pair.508"*, %"class.std::__1::__compressed_pair.509" }
%"struct.std::__1::pair.508" = type { i64, i64 }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"struct.std::__1::pair.508"* }
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.gfx::internal::ShapedText"* }
%"class.gfx::internal::ShapedText" = type { %"class.std::__1::vector.517" }
%"class.std::__1::vector.517" = type { %"class.std::__1::__vector_base.518" }
%"class.std::__1::__vector_base.518" = type { %"struct.gfx::internal::Line"*, %"struct.gfx::internal::Line"*, %"class.std::__1::__compressed_pair.526" }
%"struct.gfx::internal::Line" = type <{ %"class.std::__1::vector.519", %"class.gfx::SizeF", i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"struct.gfx::internal::LineSegment"*, %"struct.gfx::internal::LineSegment"*, %"class.std::__1::__compressed_pair.521" }
%"struct.gfx::internal::LineSegment" = type { %"class.gfx::RangeF", %"class.gfx::Range", i64 }
%"class.gfx::RangeF" = type { float, float }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"struct.gfx::internal::LineSegment"* }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"struct.gfx::internal::Line"* }
%"class.gfx::Range" = type { i32, i32 }
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.views::SelectionController"* }
%"class.views::SelectionController" = type opaque
%"class.ui::SimpleMenuModel" = type { %"class.ui::MenuModel", %"class.std::__1::vector.543", %"class.ui::SimpleMenuModel::Delegate"*, %"class.base::WeakPtrFactory.557" }
%"class.ui::MenuModel" = type { i32 (...)**, %"class.base::SupportsWeakPtr", %"class.ui::MenuModelDelegate"* }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.ui::MenuModelDelegate" = type { i32 (...)** }
%"class.std::__1::vector.543" = type { %"class.std::__1::__vector_base.544" }
%"class.std::__1::__vector_base.544" = type { %"struct.ui::SimpleMenuModel::Item"*, %"struct.ui::SimpleMenuModel::Item"*, %"class.std::__1::__compressed_pair.552" }
%"struct.ui::SimpleMenuModel::Item" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.ui::ImageModel", %"class.ui::ImageModel", i32, %"class.ui::MenuModel"*, %"class.ui::ButtonMenuItemModel"*, i32, i8, i8, i8, i8, %"class.ui::ElementIdentifier" }
%"class.ui::ImageModel" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"class.ui::VectorIconModel" }
%"class.ui::VectorIconModel" = type { %"struct.gfx::VectorIcon"*, i32, %"class.absl::variant.545", %"struct.gfx::VectorIcon"* }
%"class.absl::variant.545" = type { %"class.absl::variant_internal::VariantStateBase.546" }
%"class.absl::variant_internal::VariantStateBase.546" = type { %"union.absl::variant_internal::Union", i64 }
%"union.absl::variant_internal::Union" = type { i32 }
%"struct.gfx::VectorIcon" = type opaque
%"class.ui::ButtonMenuItemModel" = type opaque
%"class.ui::ElementIdentifier" = type { i8* }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"struct.ui::SimpleMenuModel::Item"* }
%"class.base::WeakPtrFactory.557" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.views::MenuRunner"* }
%"class.views::MenuRunner" = type opaque
%"class.views::FocusRing" = type { %"class.views::View.base", %"class.views::ViewObserver", %"class.std::__1::unique_ptr.564", i8, i8, %"class.absl::optional.570", %"class.absl::optional.575", %"class.base::ScopedObservation.241" }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.views::HighlightPathGenerator"* }
%"class.views::HighlightPathGenerator" = type opaque
%"class.absl::optional.570" = type { %"class.absl::optional_internal::optional_data.571" }
%"class.absl::optional_internal::optional_data.571" = type { %"class.absl::optional_internal::optional_data_base.572" }
%"class.absl::optional_internal::optional_data_base.572" = type { %"class.absl::optional_internal::optional_data_dtor_base.573" }
%"class.absl::optional_internal::optional_data_dtor_base.573" = type { i8, %union.anon.574 }
%union.anon.574 = type { i32 }
%"class.absl::optional.575" = type { %"class.absl::optional_internal::optional_data.576" }
%"class.absl::optional_internal::optional_data.576" = type { %"class.absl::optional_internal::optional_data_base.577" }
%"class.absl::optional_internal::optional_data_base.577" = type { %"class.absl::optional_internal::optional_data_dtor_base.578" }
%"class.absl::optional_internal::optional_data_dtor_base.578" = type { i8, %union.anon.579 }
%union.anon.579 = type { %"class.std::__1::function" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.views::View"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.TabGroupHeader::EditorBubbleTracker" = type { %"class.views::WidgetObserver", i8, %"class.views::Widget"* }
%"class.views::WidgetObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory.279" }
%"class.base::WeakPtrFactory.279" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.TabGroupHighlight = type { %"class.views::View.base", %class.TabGroupViews*, %"class.tab_groups::TabGroupId" }
%class.TabGroupUnderline = type { %"class.views::View.base", %class.TabGroupViews*, %"class.tab_groups::TabGroupId" }
%class.TabStrip = type { %"class.views::View.base", %"class.views::MouseWatcherListener", %"class.views::ViewObserver", %"class.views::ViewTargeterDelegate", %"class.views::WidgetObserver", %"class.views::BoundsAnimatorObserver", %class.TabController, %"class.BrowserRootView::DropTarget", %"class.base::ObserverList.280", %"class.views::ViewModelT", %"class.std::__1::map.291", %"class.std::__1::unique_ptr.302", %"class.base::RepeatingCallback.308", %"class.std::__1::unique_ptr.309", %"class.views::BoundsAnimator", %"class.std::__1::unique_ptr.357", %"class.absl::optional.363", i32, i8, %"class.std::__1::unique_ptr.368", %"class.std::__1::unique_ptr.375", %"class.gfx::Size", i32, i8, i8, %"class.std::__1::unique_ptr.393", i8, %"class.gfx::Point", %"class.base::TimeTicks", %"class.absl::optional.399", %"class.absl::optional.399", i32, %"class.base::OneShotTimer", %"class.ui::ListSelectionModel", float, float, float, i32, %"class.std::__1::unique_ptr.415", %"class.base::CallbackListSubscription", %"class.std::__1::unique_ptr.421", %"class.TabStrip::TabContextMenuController" }
%"class.views::MouseWatcherListener" = type { i32 (...)** }
%"class.views::BoundsAnimatorObserver" = type { i32 (...)** }
%class.TabController = type { i32 (...)** }
%"class.BrowserRootView::DropTarget" = type { i32 (...)** }
%"class.base::ObserverList.280" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.281", i64, i32, [4 x i8] }>
%"class.base::LinkedList.281" = type { %"class.base::LinkNode.282" }
%"class.base::LinkNode.282" = type { %"class.base::internal::LinkNodeBase" }
%"class.views::ViewModelT" = type { %"class.views::ViewModelBase" }
%"class.views::ViewModelBase" = type { %"class.std::__1::vector.284" }
%"class.std::__1::vector.284" = type { %"class.std::__1::__vector_base.285" }
%"class.std::__1::__vector_base.285" = type { %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"*, %"class.std::__1::__compressed_pair.286" }
%"struct.views::ViewModelBase::Entry" = type { %"class.views::View"*, %"class.gfx::Rect" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"struct.views::ViewModelBase::Entry"* }
%"class.std::__1::map.291" = type { %"class.std::__1::__tree.292" }
%"class.std::__1::__tree.292" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %class.TabStripController* }
%class.TabStripController = type { i32 (...)** }
%"class.base::RepeatingCallback.308" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %class.TabStripLayoutHelper* }
%class.TabStripLayoutHelper = type opaque
%"class.views::BoundsAnimator" = type <{ %"class.views::AnimationDelegateViews", %"class.views::View"*, i8, [7 x i8], %"class.base::ObserverList.330", %class.scoped_refptr.334, %"class.std::__1::map.335", %"class.std::__1::map.346", %"class.gfx::Rect", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.views::AnimationDelegateViews" = type { %"class.gfx::AnimationDelegate", %"class.views::ViewObserver", %"class.gfx::AnimationContainerObserver", %"class.views::View"*, %"class.gfx::AnimationContainer"*, %"class.views::CompositorAnimationRunner"*, %"class.base::ScopedObservation.241" }
%"class.gfx::AnimationDelegate" = type { i32 (...)** }
%"class.gfx::AnimationContainerObserver" = type { i32 (...)** }
%"class.gfx::AnimationContainer" = type { %"class.base::RefCounted", %"class.base::TimeTicks", %"class.base::internal::flat_tree.315", %"class.base::TimeDelta", i64, %"class.std::__1::unique_ptr.323", i8, %"class.gfx::AnimationContainerObserver"* }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::internal::flat_tree.315" = type { %"class.std::__1::vector.316" }
%"class.std::__1::vector.316" = type { %"class.std::__1::__vector_base.317" }
%"class.std::__1::__vector_base.317" = type { %"class.gfx::AnimationContainerElement"**, %"class.gfx::AnimationContainerElement"**, %"class.std::__1::__compressed_pair.318" }
%"class.gfx::AnimationContainerElement" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.gfx::AnimationContainerElement"** }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.gfx::AnimationRunner"* }
%"class.gfx::AnimationRunner" = type { i32 (...)**, %"class.base::RepeatingCallback.326" }
%"class.base::RepeatingCallback.326" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.views::CompositorAnimationRunner" = type opaque
%"class.base::ObserverList.330" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.331", i64, i32, [4 x i8] }>
%"class.base::LinkedList.331" = type { %"class.base::LinkNode.332" }
%"class.base::LinkNode.332" = type { %"class.base::internal::LinkNodeBase" }
%class.scoped_refptr.334 = type { %"class.gfx::AnimationContainer"* }
%"class.std::__1::map.335" = type { %"class.std::__1::__tree.336" }
%"class.std::__1::__tree.336" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.337", %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::map.346" = type { %"class.std::__1::__tree.347" }
%"class.std::__1::__tree.347" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.gfx::LinearAnimation"* }
%"class.gfx::LinearAnimation" = type <{ %"class.gfx::Animation", %"class.base::TimeDelta", double, i8, [7 x i8] }>
%"class.gfx::Animation" = type { %"class.gfx::AnimationContainerElement", %"class.base::TimeDelta", i8, %"class.gfx::AnimationDelegate"*, %class.scoped_refptr.334, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.TabStrip::DropArrow"* }
%"class.TabStrip::DropArrow" = type { %"class.views::WidgetObserver", %"struct.BrowserRootView::DropIndex", i8, %"class.views::Widget"*, %"class.views::ImageView"*, %"class.base::ScopedObservation.371" }
%"struct.BrowserRootView::DropIndex" = type <{ i32, i8, i8, [2 x i8] }>
%"class.views::ImageView" = type opaque
%"class.base::ScopedObservation.371" = type { %"class.views::WidgetObserver"*, %"class.views::Widget"* }
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.views::MouseWatcher"* }
%"class.views::MouseWatcher" = type { %"class.std::__1::unique_ptr.378", %"class.views::MouseWatcherListener"*, %"class.std::__1::unique_ptr.384", %"class.base::TimeDelta" }
%"class.std::__1::unique_ptr.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.views::MouseWatcherHost"* }
%"class.views::MouseWatcherHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.views::MouseWatcher::Observer"* }
%"class.views::MouseWatcher::Observer" = type opaque
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %class.StackedTabStripLayout* }
%class.StackedTabStripLayout = type opaque
%"class.absl::optional.399" = type { %"class.absl::optional_internal::optional_data.400" }
%"class.absl::optional_internal::optional_data.400" = type { %"class.absl::optional_internal::optional_data_base.401" }
%"class.absl::optional_internal::optional_data_base.401" = type { %"class.absl::optional_internal::optional_data_dtor_base.402" }
%"class.absl::optional_internal::optional_data_dtor_base.402" = type { i8, %union.anon.403 }
%union.anon.403 = type { %"class.base::TimeTicks" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.404, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.406" }
%class.scoped_refptr.404 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.405" }>
%"class.base::RefCountedThreadSafe.405" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.406" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.ui::ListSelectionModel" = type { %"class.base::internal::flat_tree.407", i32, i32 }
%"class.base::internal::flat_tree.407" = type { %"class.std::__1::vector.408" }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { i32*, i32*, %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { i32* }
%"class.std::__1::unique_ptr.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %class.TabHoverCardController* }
%class.TabHoverCardController = type opaque
%"class.base::CallbackListSubscription" = type { %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.TabStrip::TabDragContextImpl"* }
%"class.TabStrip::TabDragContextImpl" = type opaque
%"class.TabStrip::TabContextMenuController" = type { %"class.views::ContextMenuController", %class.TabStrip* }
%class.Tab = type { %"class.gfx::AnimationDelegate", %"class.views::MaskedTargeterDelegate", %"class.views::ViewObserver", %class.TabSlotView.base, %class.TabController*, %struct.TabRendererData, %"class.std::__1::unique_ptr.641", i8, %class.TabIcon*, %class.AlertIndicator*, %class.TabCloseButton*, %"class.views::Label"*, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::LinearAnimation", i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, %"class.std::__1::unique_ptr.647", %"class.views::FocusRing"*, %"class.std::__1::unique_ptr.653" }
%"class.views::MaskedTargeterDelegate" = type { %"class.views::ViewTargeterDelegate" }
%struct.TabRendererData = type <{ %"class.gfx::ImageSkia", %class.scoped_refptr.617, i32, [4 x i8], %"class.std::__1::basic_string", %class.GURL, %class.GURL, i32, i8, i8, i8, i8, %"class.std::__1::vector.634", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.617 = type { %class.ThumbnailImage* }
%class.ThumbnailImage = type { i32 (...)**, %"class.base::RefCounted.618", %"class.ThumbnailImage::Delegate"*, %class.scoped_refptr.619, %"class.base::Token", %"class.std::__1::vector.620", %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory.627" }
%"class.base::RefCounted.618" = type { %"class.base::subtle::RefCountedBase" }
%"class.ThumbnailImage::Delegate" = type { i32 (...)**, %class.ThumbnailImage* }
%class.scoped_refptr.619 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%"class.std::__1::vector.620" = type { %"class.std::__1::__vector_base.621" }
%"class.std::__1::__vector_base.621" = type { %"class.ThumbnailImage::Subscription"**, %"class.ThumbnailImage::Subscription"**, %"class.std::__1::__compressed_pair.622" }
%"class.ThumbnailImage::Subscription" = type { %class.scoped_refptr.617, %"class.absl::optional", %"class.base::RepeatingCallback.659", %"class.base::RepeatingCallback.660" }
%"class.base::RepeatingCallback.659" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.660" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.ThumbnailImage::Subscription"** }
%"class.base::WeakPtrFactory.627" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.GURL = type { %"class.std::__1::basic_string.177", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.628" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.628" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %class.GURL* }
%"class.std::__1::vector.634" = type { %"class.std::__1::__vector_base.635" }
%"class.std::__1::__vector_base.635" = type { i32*, i32*, %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { i32* }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %class.TabStyleViews* }
%class.TabStyleViews = type opaque
%class.TabIcon = type opaque
%class.AlertIndicator = type opaque
%class.TabCloseButton = type opaque
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.Tab::TabCloseButtonObserver"* }
%"class.Tab::TabCloseButtonObserver" = type opaque
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.performance_manager::freezing::FreezingVoteToken"* }
%"class.performance_manager::freezing::FreezingVoteToken" = type { i32 (...)** }

@_ZN13TabGroupViewsC1EP8TabStripRKN10tab_groups10TabGroupIdE = hidden unnamed_addr alias void (%class.TabGroupViews*, %class.TabStrip*, %"class.tab_groups::TabGroupId"*), void (%class.TabGroupViews*, %class.TabStrip*, %"class.tab_groups::TabGroupId"*)* @_ZN13TabGroupViewsC2EP8TabStripRKN10tab_groups10TabGroupIdE
@_ZN13TabGroupViewsD1Ev = hidden unnamed_addr alias void (%class.TabGroupViews*), void (%class.TabGroupViews*)* @_ZN13TabGroupViewsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13TabGroupViewsC2EP8TabStripRKN10tab_groups10TabGroupIdE(%class.TabGroupViews*, %class.TabStrip*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 0
  store %class.TabStrip* %1, %class.TabStrip** %4, align 8
  %5 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 1
  tail call void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"* %5, %"class.tab_groups::TabGroupId"* dereferenceable(16) %2) #4
  %6 = bitcast %class.TabGroupViews* %0 to %"class.views::View"**
  %7 = load %"class.views::View"*, %"class.views::View"** %6, align 8
  %8 = tail call i8* @_Znwm(i64 816) #5
  %9 = bitcast i8* %8 to %class.TabGroupHeader*
  %10 = bitcast %"class.views::View"* %7 to %class.TabStrip*
  tail call void @_ZN14TabGroupHeaderC1EP8TabStripRKN10tab_groups10TabGroupIdE(%class.TabGroupHeader* nonnull %9, %class.TabStrip* %10, %"class.tab_groups::TabGroupId"* dereferenceable(16) %5) #4
  %11 = bitcast i8* %8 to %"class.views::View"*
  %12 = getelementptr inbounds %"class.views::View", %"class.views::View"* %7, i64 0, i32 14
  %13 = getelementptr inbounds %"class.views::View", %"class.views::View"* %7, i64 0, i32 14, i32 0, i32 1
  %14 = bitcast %"class.views::View"*** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.49"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = lshr exact i64 %18, 3
  %20 = trunc i64 %19 to i32
  tail call void @_ZN5views4View18AddChildViewAtImplEPS0_i(%"class.views::View"* %7, %"class.views::View"* nonnull %11, i32 %20) #4
  %21 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 2
  %22 = bitcast %class.TabGroupHeader** %21 to i8**
  store i8* %8, i8** %22, align 8
  %23 = load %"class.views::View"*, %"class.views::View"** %6, align 8
  %24 = tail call i8* @_Znwm(i64 688) #5
  %25 = bitcast i8* %24 to %class.TabGroupUnderline*
  tail call void @_ZN17TabGroupUnderlineC1EP13TabGroupViewsRKN10tab_groups10TabGroupIdE(%class.TabGroupUnderline* nonnull %25, %class.TabGroupViews* %0, %"class.tab_groups::TabGroupId"* dereferenceable(16) %5) #4
  %26 = bitcast i8* %24 to %"class.views::View"*
  %27 = getelementptr inbounds %"class.views::View", %"class.views::View"* %23, i64 0, i32 14
  %28 = getelementptr inbounds %"class.views::View", %"class.views::View"* %23, i64 0, i32 14, i32 0, i32 1
  %29 = bitcast %"class.views::View"*** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector.49"* %27 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = lshr exact i64 %33, 3
  %35 = trunc i64 %34 to i32
  tail call void @_ZN5views4View18AddChildViewAtImplEPS0_i(%"class.views::View"* %23, %"class.views::View"* nonnull %26, i32 %35) #4
  %36 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 4
  %37 = bitcast %class.TabGroupUnderline** %36 to i8**
  store i8* %24, i8** %37, align 8
  %38 = load %"class.views::View"*, %"class.views::View"** %6, align 8
  %39 = tail call i8* @_Znwm(i64 688) #5
  %40 = bitcast i8* %39 to %class.TabGroupHighlight*
  tail call void @_ZN17TabGroupHighlightC1EP13TabGroupViewsRKN10tab_groups10TabGroupIdE(%class.TabGroupHighlight* nonnull %40, %class.TabGroupViews* %0, %"class.tab_groups::TabGroupId"* dereferenceable(16) %5) #4
  %41 = bitcast i8* %39 to %"class.views::View"*
  %42 = getelementptr inbounds %"class.views::View", %"class.views::View"* %38, i64 0, i32 14
  %43 = getelementptr inbounds %"class.views::View", %"class.views::View"* %38, i64 0, i32 14, i32 0, i32 1
  %44 = bitcast %"class.views::View"*** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector.49"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = lshr exact i64 %48, 3
  %50 = trunc i64 %49 to i32
  tail call void @_ZN5views4View18AddChildViewAtImplEPS0_i(%"class.views::View"* %38, %"class.views::View"* nonnull %41, i32 %50) #4
  %51 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 3
  %52 = bitcast %class.TabGroupHighlight** %51 to i8**
  store i8* %39, i8** %52, align 8
  ret void
}

declare void @_ZN10tab_groups10TabGroupIdC1ERKS0_(%"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13TabGroupViewsD2Ev(%class.TabGroupViews* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = bitcast %class.TabGroupViews* %0 to %"class.views::View"**
  %3 = load %"class.views::View"*, %"class.views::View"** %2, align 8
  %4 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 2
  %5 = load %class.TabGroupHeader*, %class.TabGroupHeader** %4, align 8
  %6 = bitcast %class.TabGroupHeader* %5 to %"class.views::View"*
  tail call void @_ZN5views4View15RemoveChildViewEPS0_(%"class.views::View"* %3, %"class.views::View"* %6) #4
  %7 = icmp eq %class.TabGroupHeader* %5, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.TabGroupHeader* %5 to void (%class.TabGroupHeader*)***
  %10 = load void (%class.TabGroupHeader*)**, void (%class.TabGroupHeader*)*** %9, align 8
  %11 = getelementptr inbounds void (%class.TabGroupHeader*)*, void (%class.TabGroupHeader*)** %10, i64 9
  %12 = load void (%class.TabGroupHeader*)*, void (%class.TabGroupHeader*)** %11, align 8
  tail call void %12(%class.TabGroupHeader* nonnull %5) #4
  br label %13

13:                                               ; preds = %1, %8
  %14 = load %"class.views::View"*, %"class.views::View"** %2, align 8
  %15 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 4
  %16 = load %class.TabGroupUnderline*, %class.TabGroupUnderline** %15, align 8
  %17 = bitcast %class.TabGroupUnderline* %16 to %"class.views::View"*
  tail call void @_ZN5views4View15RemoveChildViewEPS0_(%"class.views::View"* %14, %"class.views::View"* %17) #4
  %18 = icmp eq %class.TabGroupUnderline* %16, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %13
  %20 = bitcast %class.TabGroupUnderline* %16 to void (%class.TabGroupUnderline*)***
  %21 = load void (%class.TabGroupUnderline*)**, void (%class.TabGroupUnderline*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.TabGroupUnderline*)*, void (%class.TabGroupUnderline*)** %21, i64 9
  %23 = load void (%class.TabGroupUnderline*)*, void (%class.TabGroupUnderline*)** %22, align 8
  tail call void %23(%class.TabGroupUnderline* nonnull %16) #4
  br label %24

24:                                               ; preds = %13, %19
  %25 = load %"class.views::View"*, %"class.views::View"** %2, align 8
  %26 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 3
  %27 = load %class.TabGroupHighlight*, %class.TabGroupHighlight** %26, align 8
  %28 = bitcast %class.TabGroupHighlight* %27 to %"class.views::View"*
  tail call void @_ZN5views4View15RemoveChildViewEPS0_(%"class.views::View"* %25, %"class.views::View"* %28) #4
  %29 = icmp eq %class.TabGroupHighlight* %27, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %24
  %31 = bitcast %class.TabGroupHighlight* %27 to void (%class.TabGroupHighlight*)***
  %32 = load void (%class.TabGroupHighlight*)**, void (%class.TabGroupHighlight*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.TabGroupHighlight*)*, void (%class.TabGroupHighlight*)** %32, i64 9
  %34 = load void (%class.TabGroupHighlight*)*, void (%class.TabGroupHighlight*)** %33, align 8
  tail call void %34(%class.TabGroupHighlight* nonnull %27) #4
  br label %35

35:                                               ; preds = %24, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13TabGroupViews12UpdateBoundsEv(%class.TabGroupViews*) local_unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"class.gfx::Rect"*
  %4 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #4
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %6 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 2
  %7 = bitcast %class.TabGroupHeader** %6 to %"class.views::View"**
  %8 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %"class.views::View"*, %"class.views::View"** %7, align 8
  %10 = getelementptr inbounds %"class.views::View", %"class.views::View"* %9, i64 0, i32 18
  %11 = bitcast %"class.gfx::Rect"* %10 to i64*
  %12 = load i64, i64* %11, align 4
  %13 = trunc i64 %12 to i32
  %14 = getelementptr inbounds %"class.views::View", %"class.views::View"* %9, i64 0, i32 18, i32 1
  %15 = bitcast %"class.gfx::Size"* %14 to i64*
  %16 = load i64, i64* %15, align 4
  %17 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 0
  %18 = load %class.TabStrip*, %class.TabStrip** %17, align 8
  %19 = getelementptr inbounds %class.TabStrip, %class.TabStrip* %18, i64 0, i32 11, i32 0, i32 0, i32 0
  %20 = load %class.TabStripController*, %class.TabStripController** %19, align 8
  %21 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 1
  %22 = bitcast %class.TabStripController* %20 to i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)***
  %23 = load i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)**, i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)*** %22, align 8
  %24 = getelementptr inbounds i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)*, i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)** %23, i64 35
  %25 = load i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)*, i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)** %24, align 8
  %26 = tail call i64 %25(%class.TabStripController* %20, %"class.tab_groups::TabGroupId"* dereferenceable(16) %21) #4
  %27 = trunc i64 %26 to i8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %59, label %29

29:                                               ; preds = %1
  %30 = load %class.TabStrip*, %class.TabStrip** %17, align 8
  %31 = ashr i64 %26, 32
  %32 = getelementptr inbounds %class.TabStrip, %class.TabStrip* %30, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %32, align 8
  %34 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %33, i64 %31, i32 0
  %35 = load %"class.views::View"*, %"class.views::View"** %34, align 8
  %36 = icmp eq %"class.views::View"* %35, null
  %37 = getelementptr inbounds %"class.views::View", %"class.views::View"* %35, i64 -1, i32 56, i32 2
  br i1 %36, label %59, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds i64, i64* %37, i64 45
  %40 = bitcast i64* %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds i64, i64* %37, i64 46
  %43 = bitcast i64* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = sub i32 %41, %13
  %46 = add i32 %45, %44
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %59

48:                                               ; preds = %38
  %49 = icmp sgt i32 %13, 0
  %50 = sub nuw nsw i32 2147483647, %13
  %51 = icmp ult i32 %50, %46
  %52 = and i1 %49, %51
  %53 = select i1 %52, i32 %50, i32 %46
  %54 = icmp sgt i32 %53, 0
  %55 = select i1 %54, i32 %53, i32 0
  %56 = zext i32 %55 to i64
  %57 = and i64 %16, -4294967296
  %58 = or i64 %57, %56
  br label %59

59:                                               ; preds = %1, %29, %38, %48
  %60 = phi i64 [ %58, %48 ], [ %16, %38 ], [ %16, %1 ], [ %16, %29 ]
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  store i64 %12, i64* %61, align 8
  store i64 %60, i64* %5, align 8
  %62 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 4
  %63 = load %class.TabGroupUnderline*, %class.TabGroupUnderline** %62, align 8
  call void @_ZN17TabGroupUnderline12UpdateBoundsERKN3gfx4RectE(%class.TabGroupUnderline* %63, %"class.gfx::Rect"* nonnull dereferenceable(16) %3) #4
  %64 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 3
  %65 = bitcast %class.TabGroupHighlight** %64 to %"class.views::View"**
  %66 = load %"class.views::View"*, %"class.views::View"** %65, align 8
  call void @_ZN5views4View13SetBoundsRectERKN3gfx4RectE(%"class.views::View"* %66, %"class.gfx::Rect"* nonnull dereferenceable(16) %3) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK13TabGroupViews9GetBoundsEv(%class.TabGroupViews*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 2
  %3 = bitcast %class.TabGroupHeader** %2 to %"class.views::View"**
  %4 = load %"class.views::View"*, %"class.views::View"** %3, align 8
  %5 = getelementptr inbounds %"class.views::View", %"class.views::View"* %4, i64 0, i32 18
  %6 = bitcast %"class.gfx::Rect"* %5 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = trunc i64 %7 to i32
  %9 = getelementptr inbounds %"class.views::View", %"class.views::View"* %4, i64 0, i32 18, i32 1
  %10 = bitcast %"class.gfx::Size"* %9 to i64*
  %11 = load i64, i64* %10, align 4
  %12 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 0
  %13 = load %class.TabStrip*, %class.TabStrip** %12, align 8
  %14 = getelementptr inbounds %class.TabStrip, %class.TabStrip* %13, i64 0, i32 11, i32 0, i32 0, i32 0
  %15 = load %class.TabStripController*, %class.TabStripController** %14, align 8
  %16 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 1
  %17 = bitcast %class.TabStripController* %15 to i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)***
  %18 = load i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)**, i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)*** %17, align 8
  %19 = getelementptr inbounds i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)*, i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)** %18, i64 35
  %20 = load i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)*, i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)** %19, align 8
  %21 = tail call i64 %20(%class.TabStripController* %15, %"class.tab_groups::TabGroupId"* dereferenceable(16) %16) #4
  %22 = trunc i64 %21 to i8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %56, label %24

24:                                               ; preds = %1
  %25 = load %class.TabStrip*, %class.TabStrip** %12, align 8
  %26 = ashr i64 %21, 32
  %27 = getelementptr inbounds %class.TabStrip, %class.TabStrip* %25, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %27, align 8
  %29 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %28, i64 %26, i32 0
  %30 = load %"class.views::View"*, %"class.views::View"** %29, align 8
  %31 = icmp eq %"class.views::View"* %30, null
  %32 = getelementptr inbounds %"class.views::View", %"class.views::View"* %30, i64 -1, i32 56, i32 2
  %33 = icmp eq i64* %32, null
  %34 = or i1 %31, %33
  br i1 %34, label %56, label %35

35:                                               ; preds = %24
  %36 = getelementptr inbounds i64, i64* %32, i64 45
  %37 = bitcast i64* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds i64, i64* %32, i64 46
  %40 = bitcast i64* %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = sub i32 %38, %8
  %43 = add i32 %42, %41
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %56

45:                                               ; preds = %35
  %46 = icmp sgt i32 %8, 0
  %47 = sub nuw nsw i32 2147483647, %8
  %48 = icmp ult i32 %47, %43
  %49 = and i1 %46, %48
  %50 = select i1 %49, i32 %47, i32 %43
  %51 = icmp sgt i32 %50, 0
  %52 = select i1 %51, i32 %50, i32 0
  %53 = zext i32 %52 to i64
  %54 = and i64 %11, -4294967296
  %55 = or i64 %54, %53
  br label %56

56:                                               ; preds = %24, %1, %35, %45
  %57 = phi i64 [ %55, %45 ], [ %11, %35 ], [ %11, %1 ], [ %11, %24 ]
  %58 = insertvalue { i64, i64 } undef, i64 %7, 0
  %59 = insertvalue { i64, i64 } %58, i64 %57, 1
  ret { i64, i64 } %59
}

declare void @_ZN17TabGroupUnderline12UpdateBoundsERKN3gfx4RectE(%class.TabGroupUnderline*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5views4View13SetBoundsRectERKN3gfx4RectE(%"class.views::View"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13TabGroupViews21OnGroupVisualsChangedEv(%class.TabGroupViews* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 2
  %3 = load %class.TabGroupHeader*, %class.TabGroupHeader** %2, align 8
  tail call void @_ZN14TabGroupHeader14VisualsChangedEv(%class.TabGroupHeader* %3) #4
  %4 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 4
  %5 = bitcast %class.TabGroupUnderline** %4 to %"class.views::View"**
  %6 = load %"class.views::View"*, %"class.views::View"** %5, align 8
  tail call void @_ZN5views4View13SchedulePaintEv(%"class.views::View"* %6) #4
  %7 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 0
  %8 = load %class.TabStrip*, %class.TabStrip** %7, align 8
  %9 = getelementptr inbounds %class.TabStrip, %class.TabStrip* %8, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %class.TabStripController*, %class.TabStripController** %9, align 8
  %11 = bitcast %class.TabStripController* %10 to i32 (%class.TabStripController*)***
  %12 = load i32 (%class.TabStripController*)**, i32 (%class.TabStripController*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%class.TabStripController*)*, i32 (%class.TabStripController*)** %12, i64 6
  %14 = load i32 (%class.TabStripController*)*, i32 (%class.TabStripController*)** %13, align 8
  %15 = tail call i32 %14(%class.TabStripController* %10) #4
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %30, label %17

17:                                               ; preds = %1
  %18 = load %class.TabStrip*, %class.TabStrip** %7, align 8
  %19 = sext i32 %15 to i64
  %20 = getelementptr inbounds %class.TabStrip, %class.TabStrip* %18, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %20, align 8
  %22 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %21, i64 %19, i32 0
  %23 = load %"class.views::View"*, %"class.views::View"** %22, align 8
  %24 = icmp eq %"class.views::View"* %23, null
  %25 = getelementptr inbounds %"class.views::View", %"class.views::View"* %23, i64 -1, i32 56, i32 2
  %26 = bitcast i64* %25 to %class.Tab*
  %27 = select i1 %24, %class.Tab* null, %class.Tab* %26
  %28 = getelementptr inbounds %class.Tab, %class.Tab* %27, i64 0, i32 3
  %29 = bitcast %class.TabSlotView.base* %28 to %"class.views::View"*
  tail call void @_ZN5views4View13SchedulePaintEv(%"class.views::View"* %29) #4
  br label %30

30:                                               ; preds = %1, %17
  ret void
}

declare void @_ZN14TabGroupHeader14VisualsChangedEv(%class.TabGroupHeader*) local_unnamed_addr #1

declare void @_ZN5views4View13SchedulePaintEv(%"class.views::View"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.Tab* @_ZNK13TabGroupViews17GetLastTabInGroupEv(%class.TabGroupViews*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 0
  %3 = load %class.TabStrip*, %class.TabStrip** %2, align 8
  %4 = getelementptr inbounds %class.TabStrip, %class.TabStrip* %3, i64 0, i32 11, i32 0, i32 0, i32 0
  %5 = load %class.TabStripController*, %class.TabStripController** %4, align 8
  %6 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 1
  %7 = bitcast %class.TabStripController* %5 to i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)***
  %8 = load i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)**, i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)*, i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)** %8, i64 35
  %10 = load i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)*, i64 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)** %9, align 8
  %11 = tail call i64 %10(%class.TabStripController* %5, %"class.tab_groups::TabGroupId"* dereferenceable(16) %6) #4
  %12 = trunc i64 %11 to i8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %1
  %15 = load %class.TabStrip*, %class.TabStrip** %2, align 8
  %16 = ashr i64 %11, 32
  %17 = getelementptr inbounds %class.TabStrip, %class.TabStrip* %15, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %18 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %17, align 8
  %19 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %18, i64 %16, i32 0
  %20 = load %"class.views::View"*, %"class.views::View"** %19, align 8
  %21 = icmp eq %"class.views::View"* %20, null
  %22 = getelementptr inbounds %"class.views::View", %"class.views::View"* %20, i64 -1, i32 56, i32 2
  %23 = bitcast i64* %22 to %class.Tab*
  %24 = select i1 %21, %class.Tab* null, %class.Tab* %23
  br label %25

25:                                               ; preds = %1, %14
  %26 = phi %class.Tab* [ %24, %14 ], [ null, %1 ]
  ret %class.Tab* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK13TabGroupViews13GetGroupColorEv(%class.TabGroupViews*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 0
  %4 = load %class.TabStrip*, %class.TabStrip** %3, align 8
  %5 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #4
  %6 = getelementptr inbounds %class.TabStrip, %class.TabStrip* %4, i64 0, i32 11, i32 0, i32 0, i32 0
  %7 = load %class.TabStripController*, %class.TabStripController** %6, align 8
  %8 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 1
  %9 = bitcast %class.TabStripController* %7 to i32 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)***
  %10 = load i32 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)**, i32 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)*, i32 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)** %10, i64 31
  %12 = load i32 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)*, i32 (%class.TabStripController*, %"class.tab_groups::TabGroupId"*)** %11, align 8
  %13 = tail call i32 %12(%class.TabStripController* %7, %"class.tab_groups::TabGroupId"* dereferenceable(16) %8) #4
  store i32 %13, i32* %2, align 4
  %14 = bitcast %class.TabStrip* %4 to i32 (%class.TabStrip*, i32*)***
  %15 = load i32 (%class.TabStrip*, i32*)**, i32 (%class.TabStrip*, i32*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%class.TabStrip*, i32*)*, i32 (%class.TabStrip*, i32*)** %15, i64 158
  %17 = load i32 (%class.TabStrip*, i32*)*, i32 (%class.TabStrip*, i32*)** %16, align 8
  %18 = call i32 %17(%class.TabStrip* %4, i32* nonnull dereferenceable(4) %2) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #4
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK13TabGroupViews21GetTabBackgroundColorEv(%class.TabGroupViews* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 0
  %3 = load %class.TabStrip*, %class.TabStrip** %2, align 8
  %4 = bitcast %class.TabStrip* %3 to i32 (%class.TabStrip*, i32, i32)***
  %5 = load i32 (%class.TabStrip*, i32, i32)**, i32 (%class.TabStrip*, i32, i32)*** %4, align 8
  %6 = getelementptr inbounds i32 (%class.TabStrip*, i32, i32)*, i32 (%class.TabStrip*, i32, i32)** %5, i64 149
  %7 = load i32 (%class.TabStrip*, i32, i32)*, i32 (%class.TabStrip*, i32, i32)** %6, align 8
  %8 = tail call i32 %7(%class.TabStrip* %3, i32 1, i32 0) #4
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK13TabGroupViews23GetGroupBackgroundColorEv(%class.TabGroupViews* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TabGroupViews, %class.TabGroupViews* %0, i64 0, i32 0
  %3 = load %class.TabStrip*, %class.TabStrip** %2, align 8
  %4 = bitcast %class.TabStrip* %3 to i32 (%class.TabStrip*, i32, i32)***
  %5 = load i32 (%class.TabStrip*, i32, i32)**, i32 (%class.TabStrip*, i32, i32)*** %4, align 8
  %6 = getelementptr inbounds i32 (%class.TabStrip*, i32, i32)*, i32 (%class.TabStrip*, i32, i32)** %5, i64 149
  %7 = load i32 (%class.TabStrip*, i32, i32)*, i32 (%class.TabStrip*, i32, i32)** %6, align 8
  %8 = tail call i32 %7(%class.TabStrip* %3, i32 0, i32 0) #4
  %9 = tail call i32 @_ZN3gfx5Tween15IntValueBetweenEdii(double 7.500000e-01, i32 0, i32 255) #4
  %10 = and i32 %8, 16777215
  %11 = shl i32 %9, 24
  %12 = or i32 %11, %10
  ret i32 %12
}

declare i32 @_ZN3gfx5Tween15IntValueBetweenEdii(double, i32, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN14TabGroupHeaderC1EP8TabStripRKN10tab_groups10TabGroupIdE(%class.TabGroupHeader*, %class.TabStrip*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5views4View18AddChildViewAtImplEPS0_i(%"class.views::View"*, %"class.views::View"*, i32) local_unnamed_addr #1

declare void @_ZN17TabGroupUnderlineC1EP13TabGroupViewsRKN10tab_groups10TabGroupIdE(%class.TabGroupUnderline*, %class.TabGroupViews*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN17TabGroupHighlightC1EP13TabGroupViewsRKN10tab_groups10TabGroupIdE(%class.TabGroupHighlight*, %class.TabGroupViews*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5views4View15RemoveChildViewEPS0_(%"class.views::View"*, %"class.views::View"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
