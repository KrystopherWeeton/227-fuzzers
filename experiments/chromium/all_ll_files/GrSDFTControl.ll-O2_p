; ModuleID = '../../third_party/skia/src/gpu/text/GrSDFTControl.cpp'
source_filename = "../../third_party/skia/src/gpu/text/GrSDFTControl.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrSDFTControl = type <{ float, float, i8, [3 x i8] }>
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.SkPaint = type <{ %class.sk_sp.6, %class.sk_sp.7, %class.sk_sp.8, %class.sk_sp.9, %class.sk_sp.10, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.6 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.7 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.8 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.9 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.10 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkMatrix = type { [9 x float], i32 }

@.str = private unnamed_addr constant [54 x i8] c"../../third_party/skia/src/gpu/text/GrSDFTControl.cpp\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"0 < min && min <= max\00", align 1

@_ZN13GrSDFTControlC1Ebbff = hidden unnamed_addr alias void (%class.GrSDFTControl*, i1, i1, float, float), void (%class.GrSDFTControl*, i1, i1, float, float)* @_ZN13GrSDFTControlC2Ebbff

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZN13GrSDFTControl12MinSDFTRangeEbf(i1 zeroext, float) local_unnamed_addr #0 align 2 {
  %3 = select i1 %0, float %1, float 1.620000e+02
  ret float %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13GrSDFTControlC2Ebbff(%class.GrSDFTControl* nocapture, i1 zeroext, i1 zeroext, float, float) unnamed_addr #1 align 2 {
  %6 = zext i1 %1 to i8
  %7 = getelementptr inbounds %class.GrSDFTControl, %class.GrSDFTControl* %0, i64 0, i32 0
  %8 = select i1 %2, float %3, float 1.620000e+02
  store float %8, float* %7, align 4
  %9 = getelementptr inbounds %class.GrSDFTControl, %class.GrSDFTControl* %0, i64 0, i32 1
  store float %4, float* %9, align 4
  %10 = getelementptr inbounds %class.GrSDFTControl, %class.GrSDFTControl* %0, i64 0, i32 2
  store i8 %6, i8* %10, align 4
  %11 = fcmp ule float %3, 0.000000e+00
  %12 = fcmp ugt float %3, %4
  %13 = or i1 %11, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %5
  tail call fastcc void @"_ZZN13GrSDFTControlC1EbbffENK3$_0clEv"()
  unreachable

15:                                               ; preds = %5
  ret void
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal fastcc void @"_ZZN13GrSDFTControlC1EbbffENK3$_0clEv"() unnamed_addr #2 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 45, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #8
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK13GrSDFTControl11drawingTypeERK6SkFontRK7SkPaintRK8SkMatrix(%class.GrSDFTControl* nocapture readonly, %class.SkFont* nocapture readonly dereferenceable(24), %class.SkPaint* nocapture readonly dereferenceable(72), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 192
  %8 = icmp eq i32 %7, 64
  br i1 %8, label %9, label %13

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 6
  %11 = load float, float* %10, align 8
  %12 = fcmp oeq float %11, 0.000000e+00
  br i1 %12, label %53, label %13

13:                                               ; preds = %9, %4
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 192
  %17 = icmp eq i32 %16, 128
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %3) #9
  %20 = zext i8 %19 to i32
  store i32 %20, i32* %14, align 4
  br label %21

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ %15, %13 ]
  %23 = and i32 %22, 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %53

25:                                               ; preds = %21
  %26 = tail call float @_ZNK8SkMatrix11getMaxScaleEv(%class.SkMatrix* %3) #9
  %27 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 1
  %28 = load float, float* %27, align 8
  %29 = fmul float %26, %28
  %30 = getelementptr inbounds %class.GrSDFTControl, %class.GrSDFTControl* %0, i64 0, i32 2
  %31 = load i8, i8* %30, align 4, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %41, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 2, i32 0
  %35 = load %class.SkMaskFilter*, %class.SkMaskFilter** %34, align 8
  %36 = icmp eq %class.SkMaskFilter* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = load i32, i32* %5, align 8
  %39 = and i32 %38, 192
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %37, %33, %25
  %42 = fcmp olt float %29, 2.560000e+02
  %43 = select i1 %42, i8 1, i8 4
  br label %53

44:                                               ; preds = %37
  %45 = getelementptr inbounds %class.GrSDFTControl, %class.GrSDFTControl* %0, i64 0, i32 0
  %46 = load float, float* %45, align 4
  %47 = fcmp olt float %29, %46
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %class.GrSDFTControl, %class.GrSDFTControl* %0, i64 0, i32 1
  %50 = load float, float* %49, align 4
  %51 = fcmp olt float %50, %29
  %52 = select i1 %51, i8 4, i8 2
  br label %53

53:                                               ; preds = %21, %41, %44, %48, %9
  %54 = phi i8 [ 4, %21 ], [ 4, %9 ], [ %43, %41 ], [ 1, %44 ], [ %52, %48 ]
  ret i8 %54
}

declare float @_ZNK8SkMatrix11getMaxScaleEv(%class.SkMatrix*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden float @_Z16scaled_text_sizefRK8SkMatrix(float, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 192
  %6 = icmp eq i32 %5, 128
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %1) #9
  %9 = zext i8 %8 to i32
  store i32 %9, i32* %3, align 4
  br label %10

10:                                               ; preds = %2, %7
  %11 = phi i32 [ %9, %7 ], [ %4, %2 ]
  %12 = and i32 %11, 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %23

14:                                               ; preds = %10
  %15 = tail call float @_ZNK8SkMatrix11getMaxScaleEv(%class.SkMatrix* %1) #9
  %16 = fcmp ogt float %15, 0.000000e+00
  br i1 %16, label %17, label %23

17:                                               ; preds = %14
  %18 = fadd float %15, -1.000000e+00
  %19 = tail call float @llvm.fabs.f32(float %18) #9
  %20 = fcmp ole float %19, 0x3F30000000000000
  %21 = fmul float %15, %0
  %22 = select i1 %20, float %0, float %21
  ret float %22

23:                                               ; preds = %10, %14
  %24 = phi float [ 7.200000e+01, %10 ], [ %0, %14 ]
  ret float %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13GrSDFTControl10getSDFFontERK6SkFontRK8SkMatrixPf(%class.SkFont* noalias sret, %class.GrSDFTControl* nocapture readnone, %class.SkFont* nocapture readonly dereferenceable(24), %class.SkMatrix* dereferenceable(40), float* nocapture) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %class.SkFont, %class.SkFont* %2, i64 0, i32 1
  %7 = load float, float* %6, align 8
  %8 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = and i32 %9, 192
  %11 = icmp eq i32 %10, 128
  br i1 %11, label %12, label %15

12:                                               ; preds = %5
  %13 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %3) #9
  %14 = zext i8 %13 to i32
  store i32 %14, i32* %8, align 4
  br label %15

15:                                               ; preds = %12, %5
  %16 = phi i32 [ %14, %12 ], [ %9, %5 ]
  %17 = and i32 %16, 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %28

19:                                               ; preds = %15
  %20 = tail call float @_ZNK8SkMatrix11getMaxScaleEv(%class.SkMatrix* %3) #9
  %21 = fcmp ogt float %20, 0.000000e+00
  br i1 %21, label %22, label %28

22:                                               ; preds = %19
  %23 = fadd float %20, -1.000000e+00
  %24 = tail call float @llvm.fabs.f32(float %23) #9
  %25 = fcmp ole float %24, 0x3F30000000000000
  %26 = fmul float %7, %20
  %27 = select i1 %25, float %7, float %26
  br label %28

28:                                               ; preds = %15, %19, %22
  %29 = phi float [ %27, %22 ], [ 7.200000e+01, %15 ], [ %7, %19 ]
  %30 = getelementptr inbounds %class.SkFont, %class.SkFont* %0, i64 0, i32 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %30, align 8
  %31 = getelementptr inbounds %class.SkFont, %class.SkFont* %0, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %31, align 8
  %32 = getelementptr inbounds %class.SkFont, %class.SkFont* %0, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %32, align 4
  %33 = getelementptr inbounds %class.SkFont, %class.SkFont* %0, i64 0, i32 3
  store float 0xFFFFFFFFE0000000, float* %33, align 8
  %34 = getelementptr inbounds %class.SkFont, %class.SkFont* %0, i64 0, i32 4
  %35 = getelementptr inbounds %class.SkFont, %class.SkFont* %2, i64 0, i32 0, i32 0
  %36 = bitcast i8* %34 to i32*
  store i32 -1431655766, i32* %36, align 4
  %37 = load %class.SkTypeface*, %class.SkTypeface** %35, align 8
  %38 = icmp eq %class.SkTypeface* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %37, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 1 monotonic
  br label %42

42:                                               ; preds = %28, %39
  store %class.SkTypeface* %37, %class.SkTypeface** %30, align 8
  %43 = bitcast float* %31 to i8*
  %44 = bitcast float* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 15, i1 false) #9
  %45 = fcmp ugt float %29, 3.200000e+01
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = fmul float %7, 3.125000e-02
  br label %54

48:                                               ; preds = %42
  %49 = fcmp ugt float %29, 7.200000e+01
  br i1 %49, label %52, label %50

50:                                               ; preds = %48
  %51 = fdiv float %7, 7.200000e+01
  br label %54

52:                                               ; preds = %48
  %53 = fdiv float %7, 1.620000e+02
  br label %54

54:                                               ; preds = %50, %52, %46
  %55 = phi float [ %51, %50 ], [ %53, %52 ], [ %47, %46 ]
  %56 = phi float [ 7.200000e+01, %50 ], [ 1.620000e+02, %52 ], [ 3.200000e+01, %46 ]
  store float %55, float* %4, align 4
  tail call void @_ZN6SkFont7setSizeEf(%class.SkFont* %0, float %56) #9
  tail call void @_ZN6SkFont9setEdgingENS_6EdgingE(%class.SkFont* %0, i32 1) #9
  tail call void @_ZN6SkFont19setForceAutoHintingEb(%class.SkFont* %0, i1 zeroext false) #9
  tail call void @_ZN6SkFont10setHintingE13SkFontHinting(%class.SkFont* %0, i32 2) #9
  tail call void @_ZN6SkFont11setSubpixelEb(%class.SkFont* %0, i1 zeroext false) #9
  ret void
}

declare void @_ZN6SkFont7setSizeEf(%class.SkFont*, float) local_unnamed_addr #3

declare void @_ZN6SkFont9setEdgingENS_6EdgingE(%class.SkFont*, i32) local_unnamed_addr #3

declare void @_ZN6SkFont19setForceAutoHintingEb(%class.SkFont*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN6SkFont10setHintingE13SkFontHinting(%class.SkFont*, i32) local_unnamed_addr #3

declare void @_ZN6SkFont11setSubpixelEb(%class.SkFont*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK13GrSDFTControl21computeSDFMinMaxScaleEfRK8SkMatrix(%class.GrSDFTControl* nocapture readonly, float, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 192
  %7 = icmp eq i32 %6, 128
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %2) #9
  %10 = zext i8 %9 to i32
  store i32 %10, i32* %4, align 4
  br label %11

11:                                               ; preds = %8, %3
  %12 = phi i32 [ %10, %8 ], [ %5, %3 ]
  %13 = and i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %35

15:                                               ; preds = %11
  %16 = tail call float @_ZNK8SkMatrix11getMaxScaleEv(%class.SkMatrix* %2) #9
  %17 = fcmp ogt float %16, 0.000000e+00
  br i1 %17, label %18, label %24

18:                                               ; preds = %15
  %19 = fadd float %16, -1.000000e+00
  %20 = tail call float @llvm.fabs.f32(float %19) #9
  %21 = fcmp ole float %20, 0x3F30000000000000
  %22 = fmul float %16, %1
  %23 = select i1 %21, float %1, float %22
  br label %24

24:                                               ; preds = %15, %18
  %25 = phi float [ %23, %18 ], [ %1, %15 ]
  %26 = fcmp ugt float %25, 3.200000e+01
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %class.GrSDFTControl, %class.GrSDFTControl* %0, i64 0, i32 0
  %29 = load float, float* %28, align 4
  br label %35

30:                                               ; preds = %24
  %31 = fcmp ugt float %25, 7.200000e+01
  br i1 %31, label %32, label %35

32:                                               ; preds = %30
  %33 = getelementptr inbounds %class.GrSDFTControl, %class.GrSDFTControl* %0, i64 0, i32 1
  %34 = load float, float* %33, align 4
  br label %35

35:                                               ; preds = %11, %30, %32, %27
  %36 = phi float [ %25, %27 ], [ %25, %32 ], [ %25, %30 ], [ 7.200000e+01, %11 ]
  %37 = phi float [ %29, %27 ], [ 7.200000e+01, %32 ], [ 3.200000e+01, %30 ], [ 3.200000e+01, %11 ]
  %38 = phi float [ 3.200000e+01, %27 ], [ %34, %32 ], [ 7.200000e+01, %30 ], [ 7.200000e+01, %11 ]
  %39 = fdiv float %37, %36
  %40 = fdiv float %38, %36
  %41 = insertelement <2 x float> undef, float %39, i32 0
  %42 = insertelement <2 x float> %41, float %40, i32 1
  ret <2 x float> %42
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #5

declare zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { argmemonly nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
