; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/erl_estimator.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/erl_estimator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::ErlEstimator" = type { i64, %"struct.std::__1::array", %"struct.std::__1::array.0", float, i32, i64 }
%"struct.std::__1::array" = type { [65 x float] }
%"struct.std::__1::array.0" = type { [63 x i32] }
%"class.std::__1::vector" = type { i64*, i64, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }

@_ZN6webrtc12ErlEstimatorC1Em = hidden unnamed_addr alias void (%"class.webrtc::ErlEstimator"*, i64), void (%"class.webrtc::ErlEstimator"*, i64)* @_ZN6webrtc12ErlEstimatorC2Em
@_ZN6webrtc12ErlEstimatorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::ErlEstimator"*), void (%"class.webrtc::ErlEstimator"*)* @_ZN6webrtc12ErlEstimatorD2Ev

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc12ErlEstimatorC2Em(%"class.webrtc::ErlEstimator"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 5
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 0
  %6 = bitcast float* %5 to <4 x i32>*
  store <4 x i32> <i32 1148846080, i32 1148846080, i32 1148846080, i32 1148846080>, <4 x i32>* %6, align 4
  %7 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 4
  %8 = bitcast float* %7 to <4 x i32>*
  store <4 x i32> <i32 1148846080, i32 1148846080, i32 1148846080, i32 1148846080>, <4 x i32>* %8, align 4
  %9 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 8
  %10 = bitcast float* %9 to <4 x i32>*
  store <4 x i32> <i32 1148846080, i32 1148846080, i32 1148846080, i32 1148846080>, <4 x i32>* %10, align 4
  %11 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 12
  %12 = bitcast float* %11 to i32*
  store i32 1148846080, i32* %12, align 4
  %13 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 13
  %14 = bitcast float* %13 to i32*
  store i32 1148846080, i32* %14, align 4
  %15 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 14
  %16 = bitcast float* %15 to <4 x i32>*
  store <4 x i32> <i32 1148846080, i32 1148846080, i32 1148846080, i32 1148846080>, <4 x i32>* %16, align 4
  %17 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 18
  %18 = bitcast float* %17 to <4 x i32>*
  store <4 x i32> <i32 1148846080, i32 1148846080, i32 1148846080, i32 1148846080>, <4 x i32>* %18, align 4
  %19 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 22
  %20 = bitcast float* %19 to <4 x i32>*
  store <4 x i32> <i32 1148846080, i32 1148846080, i32 1148846080, i32 1148846080>, <4 x i32>* %20, align 4
  %21 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 26
  %22 = bitcast float* %21 to <4 x i32>*
  store <4 x i32> <i32 1148846080, i32 1148846080, i32 1148846080, i32 1148846080>, <4 x i32>* %22, align 4
  %23 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 30
  %24 = bitcast float* %23 to <4 x i32>*
  store <4 x i32> <i32 1148846080, i32 1148846080, i32 1148846080, i32 1148846080>, <4 x i32>* %24, align 4
  %25 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 34
  %26 = bitcast float* %25 to <4 x i32>*
  store <4 x i32> <i32 1148846080, i32 1148846080, i32 1148846080, i32 1148846080>, <4 x i32>* %26, align 4
  %27 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 38
  %28 = bitcast float* %27 to <4 x i32>*
  store <4 x i32> <i32 1148846080, i32 1148846080, i32 1148846080, i32 1148846080>, <4 x i32>* %28, align 4
  %29 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 42
  %30 = bitcast float* %29 to <4 x i32>*
  store <4 x i32> <i32 1148846080, i32 1148846080, i32 1148846080, i32 1148846080>, <4 x i32>* %30, align 4
  %31 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 46
  %32 = bitcast float* %31 to <4 x i32>*
  store <4 x i32> <i32 1148846080, i32 1148846080, i32 1148846080, i32 1148846080>, <4 x i32>* %32, align 4
  %33 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 50
  %34 = bitcast float* %33 to <4 x i32>*
  store <4 x i32> <i32 1148846080, i32 1148846080, i32 1148846080, i32 1148846080>, <4 x i32>* %34, align 4
  %35 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 54
  %36 = bitcast float* %35 to <4 x i32>*
  store <4 x i32> <i32 1148846080, i32 1148846080, i32 1148846080, i32 1148846080>, <4 x i32>* %36, align 4
  %37 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 58
  %38 = bitcast float* %37 to <4 x i32>*
  store <4 x i32> <i32 1148846080, i32 1148846080, i32 1148846080, i32 1148846080>, <4 x i32>* %38, align 4
  %39 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 62
  %40 = bitcast float* %39 to i32*
  store i32 1148846080, i32* %40, align 4
  %41 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 63
  %42 = bitcast float* %41 to i32*
  store i32 1148846080, i32* %42, align 4
  %43 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 64
  %44 = bitcast float* %43 to i32*
  store i32 1148846080, i32* %44, align 4
  %45 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 0
  %46 = bitcast i32* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 252, i1 false)
  %47 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 3
  store float 1.000000e+03, float* %47, align 8
  %48 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 4
  store i32 0, i32* %48, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc12ErlEstimatorD2Ev(%"class.webrtc::ErlEstimator"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc12ErlEstimator5ResetEv(%"class.webrtc::ErlEstimator"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 5
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12ErlEstimator6UpdateERKNSt3__16vectorIbNS1_9allocatorIbEEEEN3rtc9ArrayViewIKNS1_5arrayIfLm65EEELln4711EEESD_(%"class.webrtc::ErlEstimator"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"struct.std::__1::array"*, i64, %"struct.std::__1::array"*, i64) local_unnamed_addr #4 align 2 {
  %7 = alloca %"struct.std::__1::array", align 16
  %8 = alloca %"struct.std::__1::array", align 4
  %9 = alloca %"struct.std::__1::array", align 16
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = lshr i64 %11, 6
  %15 = getelementptr inbounds i64, i64* %13, i64 %14
  %16 = trunc i64 %11 to i32
  %17 = and i32 %16, 63
  %18 = and i64 %11, -64
  %19 = zext i32 %17 to i64
  %20 = or i64 %18, %19
  %21 = icmp ugt i64 %20, 63
  br i1 %21, label %22, label %33

22:                                               ; preds = %6, %29
  %23 = phi i64 [ %31, %29 ], [ %20, %6 ]
  %24 = phi i64* [ %30, %29 ], [ %13, %6 ]
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %22
  %28 = tail call i64 @llvm.cttz.i64(i64 %25, i1 true) #6, !range !2
  br label %45

29:                                               ; preds = %22
  %30 = getelementptr inbounds i64, i64* %24, i64 1
  %31 = add i64 %23, -64
  %32 = icmp ugt i64 %31, 63
  br i1 %32, label %22, label %33

33:                                               ; preds = %29, %6
  %34 = phi i64* [ %13, %6 ], [ %30, %29 ]
  %35 = phi i64 [ %20, %6 ], [ %31, %29 ]
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %33
  %38 = sub nuw nsw i64 64, %35
  %39 = lshr i64 -1, %38
  %40 = load i64, i64* %34, align 8
  %41 = and i64 %40, %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %37
  %44 = tail call i64 @llvm.cttz.i64(i64 %41, i1 true) #6, !range !2
  br label %45

45:                                               ; preds = %33, %37, %43, %27
  %46 = phi i64* [ %24, %27 ], [ %34, %43 ], [ %34, %37 ], [ %34, %33 ]
  %47 = phi i64 [ %28, %27 ], [ %44, %43 ], [ %35, %37 ], [ 0, %33 ]
  %48 = trunc i64 %47 to i32
  %49 = icmp eq i64* %46, %15
  %50 = icmp eq i32 %17, %48
  %51 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 5
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %51, align 8
  %54 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %53, %55
  %57 = and i1 %49, %50
  %58 = or i1 %57, %56
  br i1 %58, label %979, label %59

59:                                               ; preds = %45
  %60 = bitcast %"struct.std::__1::array"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %60) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %60, i8 -1, i64 260, i1 false)
  %61 = bitcast %"struct.std::__1::array"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %61) #6
  %62 = bitcast %"struct.std::__1::array"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* align 4 %62, i64 260, i1 false)
  %63 = icmp ugt i64 %11, 1
  br i1 %63, label %64, label %259

64:                                               ; preds = %59
  %65 = load i64*, i64** %12, align 8
  %66 = ptrtoint i64* %65 to i64
  %67 = ptrtoint i64* %46 to i64
  %68 = sub i64 %67, %66
  %69 = shl i64 %68, 3
  %70 = and i64 %47, 4294967295
  %71 = add i64 %69, %70
  %72 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %71
  %73 = bitcast %"struct.std::__1::array"* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %60, i8* align 4 %73, i64 260, i1 false)
  %74 = add i64 %71, 1
  %75 = icmp ult i64 %74, %11
  br i1 %75, label %76, label %127

76:                                               ; preds = %64
  %77 = bitcast %"struct.std::__1::array"* %7 to <4 x float>*
  %78 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 4
  %79 = bitcast float* %78 to <4 x float>*
  %80 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 8
  %81 = bitcast float* %80 to <4 x float>*
  %82 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 12
  %83 = bitcast float* %82 to <4 x float>*
  %84 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 16
  %85 = bitcast float* %84 to <4 x float>*
  %86 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 20
  %87 = bitcast float* %86 to <4 x float>*
  %88 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 24
  %89 = bitcast float* %88 to <4 x float>*
  %90 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 28
  %91 = bitcast float* %90 to <4 x float>*
  %92 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 32
  %93 = bitcast float* %92 to <4 x float>*
  %94 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 36
  %95 = bitcast float* %94 to <4 x float>*
  %96 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 40
  %97 = bitcast float* %96 to <4 x float>*
  %98 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 44
  %99 = bitcast float* %98 to <4 x float>*
  %100 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 48
  %101 = bitcast float* %100 to <4 x float>*
  %102 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 52
  %103 = bitcast float* %102 to <4 x float>*
  %104 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 56
  %105 = bitcast float* %104 to <4 x float>*
  %106 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 60
  %107 = bitcast float* %106 to <4 x float>*
  %108 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 64
  %109 = load <4 x float>, <4 x float>* %77, align 16
  %110 = load <4 x float>, <4 x float>* %79, align 16
  %111 = load <4 x float>, <4 x float>* %81, align 16
  %112 = load <4 x float>, <4 x float>* %83, align 16
  %113 = load <4 x float>, <4 x float>* %85, align 16
  %114 = load <4 x float>, <4 x float>* %87, align 16
  %115 = load <4 x float>, <4 x float>* %89, align 16
  %116 = load <4 x float>, <4 x float>* %91, align 16
  %117 = load <4 x float>, <4 x float>* %93, align 16
  %118 = load <4 x float>, <4 x float>* %95, align 16
  %119 = load <4 x float>, <4 x float>* %97, align 16
  %120 = load <4 x float>, <4 x float>* %99, align 16
  %121 = load <4 x float>, <4 x float>* %101, align 16
  %122 = load <4 x float>, <4 x float>* %103, align 16
  %123 = load <4 x float>, <4 x float>* %105, align 16
  %124 = load <4 x float>, <4 x float>* %107, align 16
  %125 = load float, float* %108, align 16
  br label %128

126:                                              ; preds = %239
  store <4 x float> %256, <4 x float>* %77, align 16
  store <4 x float> %255, <4 x float>* %79, align 16
  store <4 x float> %254, <4 x float>* %81, align 16
  store <4 x float> %253, <4 x float>* %83, align 16
  store <4 x float> %252, <4 x float>* %85, align 16
  store <4 x float> %251, <4 x float>* %87, align 16
  store <4 x float> %250, <4 x float>* %89, align 16
  store <4 x float> %249, <4 x float>* %91, align 16
  store <4 x float> %248, <4 x float>* %93, align 16
  store <4 x float> %247, <4 x float>* %95, align 16
  store <4 x float> %246, <4 x float>* %97, align 16
  store <4 x float> %245, <4 x float>* %99, align 16
  store <4 x float> %244, <4 x float>* %101, align 16
  store <4 x float> %243, <4 x float>* %103, align 16
  store <4 x float> %242, <4 x float>* %105, align 16
  store <4 x float> %241, <4 x float>* %107, align 16
  store float %240, float* %108, align 16
  br label %127

127:                                              ; preds = %126, %64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* nonnull align 16 %60, i64 260, i1 false)
  br label %259

128:                                              ; preds = %76, %239
  %129 = phi float [ %240, %239 ], [ %125, %76 ]
  %130 = phi <4 x float> [ %241, %239 ], [ %124, %76 ]
  %131 = phi <4 x float> [ %242, %239 ], [ %123, %76 ]
  %132 = phi <4 x float> [ %243, %239 ], [ %122, %76 ]
  %133 = phi <4 x float> [ %244, %239 ], [ %121, %76 ]
  %134 = phi <4 x float> [ %245, %239 ], [ %120, %76 ]
  %135 = phi <4 x float> [ %246, %239 ], [ %119, %76 ]
  %136 = phi <4 x float> [ %247, %239 ], [ %118, %76 ]
  %137 = phi <4 x float> [ %248, %239 ], [ %117, %76 ]
  %138 = phi <4 x float> [ %249, %239 ], [ %116, %76 ]
  %139 = phi <4 x float> [ %250, %239 ], [ %115, %76 ]
  %140 = phi <4 x float> [ %251, %239 ], [ %114, %76 ]
  %141 = phi <4 x float> [ %252, %239 ], [ %113, %76 ]
  %142 = phi <4 x float> [ %253, %239 ], [ %112, %76 ]
  %143 = phi <4 x float> [ %254, %239 ], [ %111, %76 ]
  %144 = phi <4 x float> [ %255, %239 ], [ %110, %76 ]
  %145 = phi <4 x float> [ %256, %239 ], [ %109, %76 ]
  %146 = phi i64 [ %257, %239 ], [ %74, %76 ]
  %147 = lshr i64 %146, 6
  %148 = getelementptr inbounds i64, i64* %65, i64 %147
  %149 = and i64 %146, 63
  %150 = shl i64 1, %149
  %151 = load i64, i64* %148, align 8
  %152 = and i64 %151, %150
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %239, label %154

154:                                              ; preds = %128
  %155 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %146, i32 0, i64 0
  %156 = bitcast float* %155 to <4 x float>*
  %157 = load <4 x float>, <4 x float>* %156, align 4
  %158 = fcmp olt <4 x float> %145, %157
  %159 = select <4 x i1> %158, <4 x float> %157, <4 x float> %145
  %160 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %146, i32 0, i64 4
  %161 = bitcast float* %160 to <4 x float>*
  %162 = load <4 x float>, <4 x float>* %161, align 4
  %163 = fcmp olt <4 x float> %144, %162
  %164 = select <4 x i1> %163, <4 x float> %162, <4 x float> %144
  %165 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %146, i32 0, i64 8
  %166 = bitcast float* %165 to <4 x float>*
  %167 = load <4 x float>, <4 x float>* %166, align 4
  %168 = fcmp olt <4 x float> %143, %167
  %169 = select <4 x i1> %168, <4 x float> %167, <4 x float> %143
  %170 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %146, i32 0, i64 12
  %171 = bitcast float* %170 to <4 x float>*
  %172 = load <4 x float>, <4 x float>* %171, align 4
  %173 = fcmp olt <4 x float> %142, %172
  %174 = select <4 x i1> %173, <4 x float> %172, <4 x float> %142
  %175 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %146, i32 0, i64 16
  %176 = bitcast float* %175 to <4 x float>*
  %177 = load <4 x float>, <4 x float>* %176, align 4
  %178 = fcmp olt <4 x float> %141, %177
  %179 = select <4 x i1> %178, <4 x float> %177, <4 x float> %141
  %180 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %146, i32 0, i64 20
  %181 = bitcast float* %180 to <4 x float>*
  %182 = load <4 x float>, <4 x float>* %181, align 4
  %183 = fcmp olt <4 x float> %140, %182
  %184 = select <4 x i1> %183, <4 x float> %182, <4 x float> %140
  %185 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %146, i32 0, i64 24
  %186 = bitcast float* %185 to <4 x float>*
  %187 = load <4 x float>, <4 x float>* %186, align 4
  %188 = fcmp olt <4 x float> %139, %187
  %189 = select <4 x i1> %188, <4 x float> %187, <4 x float> %139
  %190 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %146, i32 0, i64 28
  %191 = bitcast float* %190 to <4 x float>*
  %192 = load <4 x float>, <4 x float>* %191, align 4
  %193 = fcmp olt <4 x float> %138, %192
  %194 = select <4 x i1> %193, <4 x float> %192, <4 x float> %138
  %195 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %146, i32 0, i64 32
  %196 = bitcast float* %195 to <4 x float>*
  %197 = load <4 x float>, <4 x float>* %196, align 4
  %198 = fcmp olt <4 x float> %137, %197
  %199 = select <4 x i1> %198, <4 x float> %197, <4 x float> %137
  %200 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %146, i32 0, i64 36
  %201 = bitcast float* %200 to <4 x float>*
  %202 = load <4 x float>, <4 x float>* %201, align 4
  %203 = fcmp olt <4 x float> %136, %202
  %204 = select <4 x i1> %203, <4 x float> %202, <4 x float> %136
  %205 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %146, i32 0, i64 40
  %206 = bitcast float* %205 to <4 x float>*
  %207 = load <4 x float>, <4 x float>* %206, align 4
  %208 = fcmp olt <4 x float> %135, %207
  %209 = select <4 x i1> %208, <4 x float> %207, <4 x float> %135
  %210 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %146, i32 0, i64 44
  %211 = bitcast float* %210 to <4 x float>*
  %212 = load <4 x float>, <4 x float>* %211, align 4
  %213 = fcmp olt <4 x float> %134, %212
  %214 = select <4 x i1> %213, <4 x float> %212, <4 x float> %134
  %215 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %146, i32 0, i64 48
  %216 = bitcast float* %215 to <4 x float>*
  %217 = load <4 x float>, <4 x float>* %216, align 4
  %218 = fcmp olt <4 x float> %133, %217
  %219 = select <4 x i1> %218, <4 x float> %217, <4 x float> %133
  %220 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %146, i32 0, i64 52
  %221 = bitcast float* %220 to <4 x float>*
  %222 = load <4 x float>, <4 x float>* %221, align 4
  %223 = fcmp olt <4 x float> %132, %222
  %224 = select <4 x i1> %223, <4 x float> %222, <4 x float> %132
  %225 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %146, i32 0, i64 56
  %226 = bitcast float* %225 to <4 x float>*
  %227 = load <4 x float>, <4 x float>* %226, align 4
  %228 = fcmp olt <4 x float> %131, %227
  %229 = select <4 x i1> %228, <4 x float> %227, <4 x float> %131
  %230 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %146, i32 0, i64 60
  %231 = bitcast float* %230 to <4 x float>*
  %232 = load <4 x float>, <4 x float>* %231, align 4
  %233 = fcmp olt <4 x float> %130, %232
  %234 = select <4 x i1> %233, <4 x float> %232, <4 x float> %130
  %235 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 %146, i32 0, i64 64
  %236 = load float, float* %235, align 4
  %237 = fcmp olt float %129, %236
  %238 = select i1 %237, float %236, float %129
  br label %239

239:                                              ; preds = %154, %128
  %240 = phi float [ %238, %154 ], [ %129, %128 ]
  %241 = phi <4 x float> [ %234, %154 ], [ %130, %128 ]
  %242 = phi <4 x float> [ %229, %154 ], [ %131, %128 ]
  %243 = phi <4 x float> [ %224, %154 ], [ %132, %128 ]
  %244 = phi <4 x float> [ %219, %154 ], [ %133, %128 ]
  %245 = phi <4 x float> [ %214, %154 ], [ %134, %128 ]
  %246 = phi <4 x float> [ %209, %154 ], [ %135, %128 ]
  %247 = phi <4 x float> [ %204, %154 ], [ %136, %128 ]
  %248 = phi <4 x float> [ %199, %154 ], [ %137, %128 ]
  %249 = phi <4 x float> [ %194, %154 ], [ %138, %128 ]
  %250 = phi <4 x float> [ %189, %154 ], [ %139, %128 ]
  %251 = phi <4 x float> [ %184, %154 ], [ %140, %128 ]
  %252 = phi <4 x float> [ %179, %154 ], [ %141, %128 ]
  %253 = phi <4 x float> [ %174, %154 ], [ %142, %128 ]
  %254 = phi <4 x float> [ %169, %154 ], [ %143, %128 ]
  %255 = phi <4 x float> [ %164, %154 ], [ %144, %128 ]
  %256 = phi <4 x float> [ %159, %154 ], [ %145, %128 ]
  %257 = add i64 %146, 1
  %258 = icmp eq i64 %257, %11
  br i1 %258, label %126, label %128

259:                                              ; preds = %127, %59
  %260 = bitcast %"struct.std::__1::array"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %260) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %260, i8 -1, i64 260, i1 false)
  %261 = icmp ugt i64 %3, 1
  br i1 %261, label %262, label %419

262:                                              ; preds = %259
  %263 = bitcast %"struct.std::__1::array"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %260, i8* align 4 %263, i64 260, i1 false) #6
  %264 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 64
  %265 = bitcast %"struct.std::__1::array"* %9 to <4 x float>*
  %266 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 4
  %267 = bitcast float* %266 to <4 x float>*
  %268 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 8
  %269 = bitcast float* %268 to <4 x float>*
  %270 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 12
  %271 = bitcast float* %270 to <4 x float>*
  %272 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 16
  %273 = bitcast float* %272 to <4 x float>*
  %274 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 20
  %275 = bitcast float* %274 to <4 x float>*
  %276 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 24
  %277 = bitcast float* %276 to <4 x float>*
  %278 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 28
  %279 = bitcast float* %278 to <4 x float>*
  %280 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 32
  %281 = bitcast float* %280 to <4 x float>*
  %282 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 36
  %283 = bitcast float* %282 to <4 x float>*
  %284 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 40
  %285 = bitcast float* %284 to <4 x float>*
  %286 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 44
  %287 = bitcast float* %286 to <4 x float>*
  %288 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 48
  %289 = bitcast float* %288 to <4 x float>*
  %290 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 52
  %291 = bitcast float* %290 to <4 x float>*
  %292 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 56
  %293 = bitcast float* %292 to <4 x float>*
  %294 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %9, i64 0, i32 0, i64 60
  %295 = bitcast float* %294 to <4 x float>*
  %296 = load <4 x float>, <4 x float>* %265, align 16
  %297 = load <4 x float>, <4 x float>* %267, align 16
  %298 = load <4 x float>, <4 x float>* %269, align 16
  %299 = load <4 x float>, <4 x float>* %271, align 16
  %300 = load <4 x float>, <4 x float>* %273, align 16
  %301 = load <4 x float>, <4 x float>* %275, align 16
  %302 = load <4 x float>, <4 x float>* %277, align 16
  %303 = load <4 x float>, <4 x float>* %279, align 16
  %304 = load <4 x float>, <4 x float>* %281, align 16
  %305 = load <4 x float>, <4 x float>* %283, align 16
  %306 = load <4 x float>, <4 x float>* %285, align 16
  %307 = load <4 x float>, <4 x float>* %287, align 16
  %308 = load <4 x float>, <4 x float>* %289, align 16
  %309 = load <4 x float>, <4 x float>* %291, align 16
  %310 = load <4 x float>, <4 x float>* %293, align 16
  %311 = load <4 x float>, <4 x float>* %295, align 16
  %312 = load float, float* %264, align 16
  br label %313

313:                                              ; preds = %262, %313
  %314 = phi float [ %312, %262 ], [ %415, %313 ]
  %315 = phi <4 x float> [ %311, %262 ], [ %411, %313 ]
  %316 = phi <4 x float> [ %310, %262 ], [ %406, %313 ]
  %317 = phi <4 x float> [ %309, %262 ], [ %401, %313 ]
  %318 = phi <4 x float> [ %308, %262 ], [ %396, %313 ]
  %319 = phi <4 x float> [ %307, %262 ], [ %391, %313 ]
  %320 = phi <4 x float> [ %306, %262 ], [ %386, %313 ]
  %321 = phi <4 x float> [ %305, %262 ], [ %381, %313 ]
  %322 = phi <4 x float> [ %304, %262 ], [ %376, %313 ]
  %323 = phi <4 x float> [ %303, %262 ], [ %371, %313 ]
  %324 = phi <4 x float> [ %302, %262 ], [ %366, %313 ]
  %325 = phi <4 x float> [ %301, %262 ], [ %361, %313 ]
  %326 = phi <4 x float> [ %300, %262 ], [ %356, %313 ]
  %327 = phi <4 x float> [ %299, %262 ], [ %351, %313 ]
  %328 = phi <4 x float> [ %298, %262 ], [ %346, %313 ]
  %329 = phi <4 x float> [ %297, %262 ], [ %341, %313 ]
  %330 = phi <4 x float> [ %296, %262 ], [ %336, %313 ]
  %331 = phi i64 [ 1, %262 ], [ %416, %313 ]
  %332 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %331, i32 0, i64 0
  %333 = bitcast float* %332 to <4 x float>*
  %334 = load <4 x float>, <4 x float>* %333, align 4
  %335 = fcmp olt <4 x float> %330, %334
  %336 = select <4 x i1> %335, <4 x float> %334, <4 x float> %330
  %337 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %331, i32 0, i64 4
  %338 = bitcast float* %337 to <4 x float>*
  %339 = load <4 x float>, <4 x float>* %338, align 4
  %340 = fcmp olt <4 x float> %329, %339
  %341 = select <4 x i1> %340, <4 x float> %339, <4 x float> %329
  %342 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %331, i32 0, i64 8
  %343 = bitcast float* %342 to <4 x float>*
  %344 = load <4 x float>, <4 x float>* %343, align 4
  %345 = fcmp olt <4 x float> %328, %344
  %346 = select <4 x i1> %345, <4 x float> %344, <4 x float> %328
  %347 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %331, i32 0, i64 12
  %348 = bitcast float* %347 to <4 x float>*
  %349 = load <4 x float>, <4 x float>* %348, align 4
  %350 = fcmp olt <4 x float> %327, %349
  %351 = select <4 x i1> %350, <4 x float> %349, <4 x float> %327
  %352 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %331, i32 0, i64 16
  %353 = bitcast float* %352 to <4 x float>*
  %354 = load <4 x float>, <4 x float>* %353, align 4
  %355 = fcmp olt <4 x float> %326, %354
  %356 = select <4 x i1> %355, <4 x float> %354, <4 x float> %326
  %357 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %331, i32 0, i64 20
  %358 = bitcast float* %357 to <4 x float>*
  %359 = load <4 x float>, <4 x float>* %358, align 4
  %360 = fcmp olt <4 x float> %325, %359
  %361 = select <4 x i1> %360, <4 x float> %359, <4 x float> %325
  %362 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %331, i32 0, i64 24
  %363 = bitcast float* %362 to <4 x float>*
  %364 = load <4 x float>, <4 x float>* %363, align 4
  %365 = fcmp olt <4 x float> %324, %364
  %366 = select <4 x i1> %365, <4 x float> %364, <4 x float> %324
  %367 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %331, i32 0, i64 28
  %368 = bitcast float* %367 to <4 x float>*
  %369 = load <4 x float>, <4 x float>* %368, align 4
  %370 = fcmp olt <4 x float> %323, %369
  %371 = select <4 x i1> %370, <4 x float> %369, <4 x float> %323
  %372 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %331, i32 0, i64 32
  %373 = bitcast float* %372 to <4 x float>*
  %374 = load <4 x float>, <4 x float>* %373, align 4
  %375 = fcmp olt <4 x float> %322, %374
  %376 = select <4 x i1> %375, <4 x float> %374, <4 x float> %322
  %377 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %331, i32 0, i64 36
  %378 = bitcast float* %377 to <4 x float>*
  %379 = load <4 x float>, <4 x float>* %378, align 4
  %380 = fcmp olt <4 x float> %321, %379
  %381 = select <4 x i1> %380, <4 x float> %379, <4 x float> %321
  %382 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %331, i32 0, i64 40
  %383 = bitcast float* %382 to <4 x float>*
  %384 = load <4 x float>, <4 x float>* %383, align 4
  %385 = fcmp olt <4 x float> %320, %384
  %386 = select <4 x i1> %385, <4 x float> %384, <4 x float> %320
  %387 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %331, i32 0, i64 44
  %388 = bitcast float* %387 to <4 x float>*
  %389 = load <4 x float>, <4 x float>* %388, align 4
  %390 = fcmp olt <4 x float> %319, %389
  %391 = select <4 x i1> %390, <4 x float> %389, <4 x float> %319
  %392 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %331, i32 0, i64 48
  %393 = bitcast float* %392 to <4 x float>*
  %394 = load <4 x float>, <4 x float>* %393, align 4
  %395 = fcmp olt <4 x float> %318, %394
  %396 = select <4 x i1> %395, <4 x float> %394, <4 x float> %318
  %397 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %331, i32 0, i64 52
  %398 = bitcast float* %397 to <4 x float>*
  %399 = load <4 x float>, <4 x float>* %398, align 4
  %400 = fcmp olt <4 x float> %317, %399
  %401 = select <4 x i1> %400, <4 x float> %399, <4 x float> %317
  %402 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %331, i32 0, i64 56
  %403 = bitcast float* %402 to <4 x float>*
  %404 = load <4 x float>, <4 x float>* %403, align 4
  %405 = fcmp olt <4 x float> %316, %404
  %406 = select <4 x i1> %405, <4 x float> %404, <4 x float> %316
  %407 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %331, i32 0, i64 60
  %408 = bitcast float* %407 to <4 x float>*
  %409 = load <4 x float>, <4 x float>* %408, align 4
  %410 = fcmp olt <4 x float> %315, %409
  %411 = select <4 x i1> %410, <4 x float> %409, <4 x float> %315
  %412 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %2, i64 %331, i32 0, i64 64
  %413 = load float, float* %412, align 4
  %414 = fcmp olt float %314, %413
  %415 = select i1 %414, float %413, float %314
  %416 = add nuw i64 %331, 1
  %417 = icmp eq i64 %416, %3
  br i1 %417, label %418, label %313

418:                                              ; preds = %313
  store <4 x float> %336, <4 x float>* %265, align 16
  store <4 x float> %341, <4 x float>* %267, align 16
  store <4 x float> %346, <4 x float>* %269, align 16
  store <4 x float> %351, <4 x float>* %271, align 16
  store <4 x float> %356, <4 x float>* %273, align 16
  store <4 x float> %361, <4 x float>* %275, align 16
  store <4 x float> %366, <4 x float>* %277, align 16
  store <4 x float> %371, <4 x float>* %279, align 16
  store <4 x float> %376, <4 x float>* %281, align 16
  store <4 x float> %381, <4 x float>* %283, align 16
  store <4 x float> %386, <4 x float>* %285, align 16
  store <4 x float> %391, <4 x float>* %287, align 16
  store <4 x float> %396, <4 x float>* %289, align 16
  store <4 x float> %401, <4 x float>* %291, align 16
  store <4 x float> %406, <4 x float>* %293, align 16
  store <4 x float> %411, <4 x float>* %295, align 16
  store float %415, float* %264, align 16
  br label %419

419:                                              ; preds = %418, %259
  %420 = phi %"struct.std::__1::array"* [ %2, %259 ], [ %9, %418 ]
  br label %731

421:                                              ; preds = %753
  %422 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 60
  %423 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 0
  %424 = bitcast i32* %423 to <4 x i32>*
  %425 = load <4 x i32>, <4 x i32>* %424, align 4
  %426 = add nsw <4 x i32> %425, <i32 -1, i32 -1, i32 -1, i32 -1>
  %427 = bitcast i32* %423 to <4 x i32>*
  store <4 x i32> %426, <4 x i32>* %427, align 4
  %428 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 4
  %429 = bitcast i32* %428 to <4 x i32>*
  %430 = load <4 x i32>, <4 x i32>* %429, align 4
  %431 = add nsw <4 x i32> %430, <i32 -1, i32 -1, i32 -1, i32 -1>
  %432 = bitcast i32* %428 to <4 x i32>*
  store <4 x i32> %431, <4 x i32>* %432, align 4
  %433 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 8
  %434 = bitcast i32* %433 to <4 x i32>*
  %435 = load <4 x i32>, <4 x i32>* %434, align 4
  %436 = add nsw <4 x i32> %435, <i32 -1, i32 -1, i32 -1, i32 -1>
  %437 = bitcast i32* %433 to <4 x i32>*
  store <4 x i32> %436, <4 x i32>* %437, align 4
  %438 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 12
  %439 = bitcast i32* %438 to <4 x i32>*
  %440 = load <4 x i32>, <4 x i32>* %439, align 4
  %441 = add nsw <4 x i32> %440, <i32 -1, i32 -1, i32 -1, i32 -1>
  %442 = bitcast i32* %438 to <4 x i32>*
  store <4 x i32> %441, <4 x i32>* %442, align 4
  %443 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 16
  %444 = bitcast i32* %443 to <4 x i32>*
  %445 = load <4 x i32>, <4 x i32>* %444, align 4
  %446 = add nsw <4 x i32> %445, <i32 -1, i32 -1, i32 -1, i32 -1>
  %447 = bitcast i32* %443 to <4 x i32>*
  store <4 x i32> %446, <4 x i32>* %447, align 4
  %448 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 20
  %449 = bitcast i32* %448 to <4 x i32>*
  %450 = load <4 x i32>, <4 x i32>* %449, align 4
  %451 = add nsw <4 x i32> %450, <i32 -1, i32 -1, i32 -1, i32 -1>
  %452 = bitcast i32* %448 to <4 x i32>*
  store <4 x i32> %451, <4 x i32>* %452, align 4
  %453 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 24
  %454 = bitcast i32* %453 to <4 x i32>*
  %455 = load <4 x i32>, <4 x i32>* %454, align 4
  %456 = add nsw <4 x i32> %455, <i32 -1, i32 -1, i32 -1, i32 -1>
  %457 = bitcast i32* %453 to <4 x i32>*
  store <4 x i32> %456, <4 x i32>* %457, align 4
  %458 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 28
  %459 = bitcast i32* %458 to <4 x i32>*
  %460 = load <4 x i32>, <4 x i32>* %459, align 4
  %461 = add nsw <4 x i32> %460, <i32 -1, i32 -1, i32 -1, i32 -1>
  %462 = bitcast i32* %458 to <4 x i32>*
  store <4 x i32> %461, <4 x i32>* %462, align 4
  %463 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 32
  %464 = bitcast i32* %463 to <4 x i32>*
  %465 = load <4 x i32>, <4 x i32>* %464, align 4
  %466 = add nsw <4 x i32> %465, <i32 -1, i32 -1, i32 -1, i32 -1>
  %467 = bitcast i32* %463 to <4 x i32>*
  store <4 x i32> %466, <4 x i32>* %467, align 4
  %468 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 36
  %469 = bitcast i32* %468 to <4 x i32>*
  %470 = load <4 x i32>, <4 x i32>* %469, align 4
  %471 = add nsw <4 x i32> %470, <i32 -1, i32 -1, i32 -1, i32 -1>
  %472 = bitcast i32* %468 to <4 x i32>*
  store <4 x i32> %471, <4 x i32>* %472, align 4
  %473 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 40
  %474 = bitcast i32* %473 to <4 x i32>*
  %475 = load <4 x i32>, <4 x i32>* %474, align 4
  %476 = add nsw <4 x i32> %475, <i32 -1, i32 -1, i32 -1, i32 -1>
  %477 = bitcast i32* %473 to <4 x i32>*
  store <4 x i32> %476, <4 x i32>* %477, align 4
  %478 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 44
  %479 = bitcast i32* %478 to <4 x i32>*
  %480 = load <4 x i32>, <4 x i32>* %479, align 4
  %481 = add nsw <4 x i32> %480, <i32 -1, i32 -1, i32 -1, i32 -1>
  %482 = bitcast i32* %478 to <4 x i32>*
  store <4 x i32> %481, <4 x i32>* %482, align 4
  %483 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 48
  %484 = bitcast i32* %483 to <4 x i32>*
  %485 = load <4 x i32>, <4 x i32>* %484, align 4
  %486 = add nsw <4 x i32> %485, <i32 -1, i32 -1, i32 -1, i32 -1>
  %487 = bitcast i32* %483 to <4 x i32>*
  store <4 x i32> %486, <4 x i32>* %487, align 4
  %488 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 52
  %489 = bitcast i32* %488 to <4 x i32>*
  %490 = load <4 x i32>, <4 x i32>* %489, align 4
  %491 = add nsw <4 x i32> %490, <i32 -1, i32 -1, i32 -1, i32 -1>
  %492 = bitcast i32* %488 to <4 x i32>*
  store <4 x i32> %491, <4 x i32>* %492, align 4
  %493 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 56
  %494 = bitcast i32* %493 to <4 x i32>*
  %495 = load <4 x i32>, <4 x i32>* %494, align 4
  %496 = add nsw <4 x i32> %495, <i32 -1, i32 -1, i32 -1, i32 -1>
  %497 = bitcast i32* %493 to <4 x i32>*
  store <4 x i32> %496, <4 x i32>* %497, align 4
  %498 = load i32, i32* %422, align 4
  %499 = add nsw i32 %498, -1
  store i32 %499, i32* %422, align 4
  %500 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 61
  %501 = load i32, i32* %500, align 4
  %502 = add nsw i32 %501, -1
  store i32 %502, i32* %500, align 4
  %503 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 62
  %504 = load i32, i32* %503, align 4
  %505 = add nsw i32 %504, -1
  store i32 %505, i32* %503, align 4
  %506 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 1
  %507 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 61
  %508 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 60
  %509 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 0
  %510 = bitcast i32* %509 to <4 x i32>*
  %511 = load <4 x i32>, <4 x i32>* %510, align 4
  %512 = bitcast float* %506 to <4 x float>*
  %513 = load <4 x float>, <4 x float>* %512, align 4
  %514 = icmp sgt <4 x i32> %511, zeroinitializer
  %515 = fmul <4 x float> %513, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>
  %516 = fcmp olt <4 x float> %515, <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %517 = select <4 x i1> %516, <4 x float> %515, <4 x float> <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %518 = select <4 x i1> %514, <4 x float> %513, <4 x float> %517
  %519 = bitcast float* %506 to <4 x float>*
  store <4 x float> %518, <4 x float>* %519, align 4
  %520 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 5
  %521 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 4
  %522 = bitcast i32* %521 to <4 x i32>*
  %523 = load <4 x i32>, <4 x i32>* %522, align 4
  %524 = bitcast float* %520 to <4 x float>*
  %525 = load <4 x float>, <4 x float>* %524, align 4
  %526 = icmp sgt <4 x i32> %523, zeroinitializer
  %527 = fmul <4 x float> %525, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>
  %528 = fcmp olt <4 x float> %527, <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %529 = select <4 x i1> %528, <4 x float> %527, <4 x float> <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %530 = select <4 x i1> %526, <4 x float> %525, <4 x float> %529
  %531 = bitcast float* %520 to <4 x float>*
  store <4 x float> %530, <4 x float>* %531, align 4
  %532 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 9
  %533 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 8
  %534 = bitcast i32* %533 to <4 x i32>*
  %535 = load <4 x i32>, <4 x i32>* %534, align 4
  %536 = bitcast float* %532 to <4 x float>*
  %537 = load <4 x float>, <4 x float>* %536, align 4
  %538 = icmp sgt <4 x i32> %535, zeroinitializer
  %539 = fmul <4 x float> %537, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>
  %540 = fcmp olt <4 x float> %539, <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %541 = select <4 x i1> %540, <4 x float> %539, <4 x float> <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %542 = select <4 x i1> %538, <4 x float> %537, <4 x float> %541
  %543 = bitcast float* %532 to <4 x float>*
  store <4 x float> %542, <4 x float>* %543, align 4
  %544 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 13
  %545 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 12
  %546 = bitcast i32* %545 to <4 x i32>*
  %547 = load <4 x i32>, <4 x i32>* %546, align 4
  %548 = bitcast float* %544 to <4 x float>*
  %549 = load <4 x float>, <4 x float>* %548, align 4
  %550 = icmp sgt <4 x i32> %547, zeroinitializer
  %551 = fmul <4 x float> %549, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>
  %552 = fcmp olt <4 x float> %551, <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %553 = select <4 x i1> %552, <4 x float> %551, <4 x float> <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %554 = select <4 x i1> %550, <4 x float> %549, <4 x float> %553
  %555 = bitcast float* %544 to <4 x float>*
  store <4 x float> %554, <4 x float>* %555, align 4
  %556 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 17
  %557 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 16
  %558 = bitcast i32* %557 to <4 x i32>*
  %559 = load <4 x i32>, <4 x i32>* %558, align 4
  %560 = bitcast float* %556 to <4 x float>*
  %561 = load <4 x float>, <4 x float>* %560, align 4
  %562 = icmp sgt <4 x i32> %559, zeroinitializer
  %563 = fmul <4 x float> %561, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>
  %564 = fcmp olt <4 x float> %563, <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %565 = select <4 x i1> %564, <4 x float> %563, <4 x float> <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %566 = select <4 x i1> %562, <4 x float> %561, <4 x float> %565
  %567 = bitcast float* %556 to <4 x float>*
  store <4 x float> %566, <4 x float>* %567, align 4
  %568 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 21
  %569 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 20
  %570 = bitcast i32* %569 to <4 x i32>*
  %571 = load <4 x i32>, <4 x i32>* %570, align 4
  %572 = bitcast float* %568 to <4 x float>*
  %573 = load <4 x float>, <4 x float>* %572, align 4
  %574 = icmp sgt <4 x i32> %571, zeroinitializer
  %575 = fmul <4 x float> %573, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>
  %576 = fcmp olt <4 x float> %575, <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %577 = select <4 x i1> %576, <4 x float> %575, <4 x float> <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %578 = select <4 x i1> %574, <4 x float> %573, <4 x float> %577
  %579 = bitcast float* %568 to <4 x float>*
  store <4 x float> %578, <4 x float>* %579, align 4
  %580 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 25
  %581 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 24
  %582 = bitcast i32* %581 to <4 x i32>*
  %583 = load <4 x i32>, <4 x i32>* %582, align 4
  %584 = bitcast float* %580 to <4 x float>*
  %585 = load <4 x float>, <4 x float>* %584, align 4
  %586 = icmp sgt <4 x i32> %583, zeroinitializer
  %587 = fmul <4 x float> %585, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>
  %588 = fcmp olt <4 x float> %587, <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %589 = select <4 x i1> %588, <4 x float> %587, <4 x float> <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %590 = select <4 x i1> %586, <4 x float> %585, <4 x float> %589
  %591 = bitcast float* %580 to <4 x float>*
  store <4 x float> %590, <4 x float>* %591, align 4
  %592 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 29
  %593 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 28
  %594 = bitcast i32* %593 to <4 x i32>*
  %595 = load <4 x i32>, <4 x i32>* %594, align 4
  %596 = bitcast float* %592 to <4 x float>*
  %597 = load <4 x float>, <4 x float>* %596, align 4
  %598 = icmp sgt <4 x i32> %595, zeroinitializer
  %599 = fmul <4 x float> %597, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>
  %600 = fcmp olt <4 x float> %599, <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %601 = select <4 x i1> %600, <4 x float> %599, <4 x float> <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %602 = select <4 x i1> %598, <4 x float> %597, <4 x float> %601
  %603 = bitcast float* %592 to <4 x float>*
  store <4 x float> %602, <4 x float>* %603, align 4
  %604 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 33
  %605 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 32
  %606 = bitcast i32* %605 to <4 x i32>*
  %607 = load <4 x i32>, <4 x i32>* %606, align 4
  %608 = bitcast float* %604 to <4 x float>*
  %609 = load <4 x float>, <4 x float>* %608, align 4
  %610 = icmp sgt <4 x i32> %607, zeroinitializer
  %611 = fmul <4 x float> %609, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>
  %612 = fcmp olt <4 x float> %611, <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %613 = select <4 x i1> %612, <4 x float> %611, <4 x float> <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %614 = select <4 x i1> %610, <4 x float> %609, <4 x float> %613
  %615 = bitcast float* %604 to <4 x float>*
  store <4 x float> %614, <4 x float>* %615, align 4
  %616 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 37
  %617 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 36
  %618 = bitcast i32* %617 to <4 x i32>*
  %619 = load <4 x i32>, <4 x i32>* %618, align 4
  %620 = bitcast float* %616 to <4 x float>*
  %621 = load <4 x float>, <4 x float>* %620, align 4
  %622 = icmp sgt <4 x i32> %619, zeroinitializer
  %623 = fmul <4 x float> %621, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>
  %624 = fcmp olt <4 x float> %623, <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %625 = select <4 x i1> %624, <4 x float> %623, <4 x float> <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %626 = select <4 x i1> %622, <4 x float> %621, <4 x float> %625
  %627 = bitcast float* %616 to <4 x float>*
  store <4 x float> %626, <4 x float>* %627, align 4
  %628 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 41
  %629 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 40
  %630 = bitcast i32* %629 to <4 x i32>*
  %631 = load <4 x i32>, <4 x i32>* %630, align 4
  %632 = bitcast float* %628 to <4 x float>*
  %633 = load <4 x float>, <4 x float>* %632, align 4
  %634 = icmp sgt <4 x i32> %631, zeroinitializer
  %635 = fmul <4 x float> %633, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>
  %636 = fcmp olt <4 x float> %635, <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %637 = select <4 x i1> %636, <4 x float> %635, <4 x float> <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %638 = select <4 x i1> %634, <4 x float> %633, <4 x float> %637
  %639 = bitcast float* %628 to <4 x float>*
  store <4 x float> %638, <4 x float>* %639, align 4
  %640 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 45
  %641 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 44
  %642 = bitcast i32* %641 to <4 x i32>*
  %643 = load <4 x i32>, <4 x i32>* %642, align 4
  %644 = bitcast float* %640 to <4 x float>*
  %645 = load <4 x float>, <4 x float>* %644, align 4
  %646 = icmp sgt <4 x i32> %643, zeroinitializer
  %647 = fmul <4 x float> %645, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>
  %648 = fcmp olt <4 x float> %647, <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %649 = select <4 x i1> %648, <4 x float> %647, <4 x float> <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %650 = select <4 x i1> %646, <4 x float> %645, <4 x float> %649
  %651 = bitcast float* %640 to <4 x float>*
  store <4 x float> %650, <4 x float>* %651, align 4
  %652 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 49
  %653 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 48
  %654 = bitcast i32* %653 to <4 x i32>*
  %655 = load <4 x i32>, <4 x i32>* %654, align 4
  %656 = bitcast float* %652 to <4 x float>*
  %657 = load <4 x float>, <4 x float>* %656, align 4
  %658 = icmp sgt <4 x i32> %655, zeroinitializer
  %659 = fmul <4 x float> %657, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>
  %660 = fcmp olt <4 x float> %659, <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %661 = select <4 x i1> %660, <4 x float> %659, <4 x float> <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %662 = select <4 x i1> %658, <4 x float> %657, <4 x float> %661
  %663 = bitcast float* %652 to <4 x float>*
  store <4 x float> %662, <4 x float>* %663, align 4
  %664 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 53
  %665 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 52
  %666 = bitcast i32* %665 to <4 x i32>*
  %667 = load <4 x i32>, <4 x i32>* %666, align 4
  %668 = bitcast float* %664 to <4 x float>*
  %669 = load <4 x float>, <4 x float>* %668, align 4
  %670 = icmp sgt <4 x i32> %667, zeroinitializer
  %671 = fmul <4 x float> %669, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>
  %672 = fcmp olt <4 x float> %671, <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %673 = select <4 x i1> %672, <4 x float> %671, <4 x float> <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %674 = select <4 x i1> %670, <4 x float> %669, <4 x float> %673
  %675 = bitcast float* %664 to <4 x float>*
  store <4 x float> %674, <4 x float>* %675, align 4
  %676 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 57
  %677 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 56
  %678 = bitcast i32* %677 to <4 x i32>*
  %679 = load <4 x i32>, <4 x i32>* %678, align 4
  %680 = bitcast float* %676 to <4 x float>*
  %681 = load <4 x float>, <4 x float>* %680, align 4
  %682 = icmp sgt <4 x i32> %679, zeroinitializer
  %683 = fmul <4 x float> %681, <float 2.000000e+00, float 2.000000e+00, float 2.000000e+00, float 2.000000e+00>
  %684 = fcmp olt <4 x float> %683, <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %685 = select <4 x i1> %684, <4 x float> %683, <4 x float> <float 1.000000e+03, float 1.000000e+03, float 1.000000e+03, float 1.000000e+03>
  %686 = select <4 x i1> %682, <4 x float> %681, <4 x float> %685
  %687 = bitcast float* %676 to <4 x float>*
  store <4 x float> %686, <4 x float>* %687, align 4
  %688 = load i32, i32* %508, align 4
  %689 = load float, float* %507, align 4
  %690 = icmp sgt i32 %688, 0
  br i1 %690, label %695, label %691

691:                                              ; preds = %421
  %692 = fmul float %689, 2.000000e+00
  %693 = fcmp olt float %692, 1.000000e+03
  %694 = select i1 %693, float %692, float 1.000000e+03
  br label %695

695:                                              ; preds = %691, %421
  %696 = phi float [ %694, %691 ], [ %689, %421 ]
  store float %696, float* %507, align 4
  %697 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 61
  %698 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 62
  %699 = load i32, i32* %697, align 4
  %700 = load float, float* %698, align 4
  %701 = icmp sgt i32 %699, 0
  br i1 %701, label %984, label %980

702:                                              ; preds = %702, %995
  %703 = phi float [ 0.000000e+00, %995 ], [ %723, %702 ]
  %704 = phi i64 [ 0, %995 ], [ %724, %702 ]
  %705 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %420, i64 0, i32 0, i64 %704
  %706 = load float, float* %705, align 4
  %707 = fadd float %703, %706
  %708 = add nuw nsw i64 %704, 1
  %709 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %420, i64 0, i32 0, i64 %708
  %710 = load float, float* %709, align 4
  %711 = fadd float %707, %710
  %712 = add nuw nsw i64 %704, 2
  %713 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %420, i64 0, i32 0, i64 %712
  %714 = load float, float* %713, align 4
  %715 = fadd float %711, %714
  %716 = add nuw nsw i64 %704, 3
  %717 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %420, i64 0, i32 0, i64 %716
  %718 = load float, float* %717, align 4
  %719 = fadd float %715, %718
  %720 = add nuw nsw i64 %704, 4
  %721 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %420, i64 0, i32 0, i64 %720
  %722 = load float, float* %721, align 4
  %723 = fadd float %719, %722
  %724 = add nuw nsw i64 %704, 5
  %725 = icmp eq i64 %724, 65
  br i1 %725, label %726, label %702

726:                                              ; preds = %702
  %727 = fcmp ogt float %723, 0x41E550E2A0000000
  br i1 %727, label %756, label %728

728:                                              ; preds = %726
  %729 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 3
  %730 = load float, float* %729, align 8
  br label %966

731:                                              ; preds = %753, %419
  %732 = phi i64 [ 1, %419 ], [ %754, %753 ]
  %733 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %420, i64 0, i32 0, i64 %732
  %734 = load float, float* %733, align 4
  %735 = fcmp ogt float %734, 0x4184FCEEE0000000
  br i1 %735, label %736, label %753

736:                                              ; preds = %731
  %737 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 %732
  %738 = load float, float* %737, align 4
  %739 = fdiv float %738, %734
  %740 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 %732
  %741 = load float, float* %740, align 4
  %742 = fcmp olt float %739, %741
  br i1 %742, label %743, label %753

743:                                              ; preds = %736
  %744 = add nsw i64 %732, -1
  %745 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 %744
  store i32 1000, i32* %745, align 4
  %746 = fsub float %739, %741
  %747 = fmul float %746, 0x3FB99999A0000000
  %748 = fadd float %741, %747
  %749 = fcmp olt float %748, 0x3F847AE140000000
  %750 = bitcast float %748 to i32
  %751 = select i1 %749, i32 1008981770, i32 %750
  %752 = bitcast float* %740 to i32*
  store i32 %751, i32* %752, align 4
  br label %753

753:                                              ; preds = %736, %743, %731
  %754 = add nuw nsw i64 %732, 1
  %755 = icmp eq i64 %754, 64
  br i1 %755, label %421, label %731

756:                                              ; preds = %726
  %757 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 0
  %758 = load float, float* %757, align 4
  %759 = fadd float %758, 0.000000e+00
  %760 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 1
  %761 = load float, float* %760, align 4
  %762 = fadd float %759, %761
  %763 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 2
  %764 = load float, float* %763, align 4
  %765 = fadd float %762, %764
  %766 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 3
  %767 = load float, float* %766, align 4
  %768 = fadd float %765, %767
  %769 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 4
  %770 = load float, float* %769, align 4
  %771 = fadd float %768, %770
  %772 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 5
  %773 = load float, float* %772, align 4
  %774 = fadd float %771, %773
  %775 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 6
  %776 = load float, float* %775, align 4
  %777 = fadd float %774, %776
  %778 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 7
  %779 = load float, float* %778, align 4
  %780 = fadd float %777, %779
  %781 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 8
  %782 = load float, float* %781, align 4
  %783 = fadd float %780, %782
  %784 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 9
  %785 = load float, float* %784, align 4
  %786 = fadd float %783, %785
  %787 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 10
  %788 = load float, float* %787, align 4
  %789 = fadd float %786, %788
  %790 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 11
  %791 = load float, float* %790, align 4
  %792 = fadd float %789, %791
  %793 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 12
  %794 = load float, float* %793, align 4
  %795 = fadd float %792, %794
  %796 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 13
  %797 = load float, float* %796, align 4
  %798 = fadd float %795, %797
  %799 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 14
  %800 = load float, float* %799, align 4
  %801 = fadd float %798, %800
  %802 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 15
  %803 = load float, float* %802, align 4
  %804 = fadd float %801, %803
  %805 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 16
  %806 = load float, float* %805, align 4
  %807 = fadd float %804, %806
  %808 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 17
  %809 = load float, float* %808, align 4
  %810 = fadd float %807, %809
  %811 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 18
  %812 = load float, float* %811, align 4
  %813 = fadd float %810, %812
  %814 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 19
  %815 = load float, float* %814, align 4
  %816 = fadd float %813, %815
  %817 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 20
  %818 = load float, float* %817, align 4
  %819 = fadd float %816, %818
  %820 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 21
  %821 = load float, float* %820, align 4
  %822 = fadd float %819, %821
  %823 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 22
  %824 = load float, float* %823, align 4
  %825 = fadd float %822, %824
  %826 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 23
  %827 = load float, float* %826, align 4
  %828 = fadd float %825, %827
  %829 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 24
  %830 = load float, float* %829, align 4
  %831 = fadd float %828, %830
  %832 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 25
  %833 = load float, float* %832, align 4
  %834 = fadd float %831, %833
  %835 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 26
  %836 = load float, float* %835, align 4
  %837 = fadd float %834, %836
  %838 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 27
  %839 = load float, float* %838, align 4
  %840 = fadd float %837, %839
  %841 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 28
  %842 = load float, float* %841, align 4
  %843 = fadd float %840, %842
  %844 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 29
  %845 = load float, float* %844, align 4
  %846 = fadd float %843, %845
  %847 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 30
  %848 = load float, float* %847, align 4
  %849 = fadd float %846, %848
  %850 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 31
  %851 = load float, float* %850, align 4
  %852 = fadd float %849, %851
  %853 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 32
  %854 = load float, float* %853, align 4
  %855 = fadd float %852, %854
  %856 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 33
  %857 = load float, float* %856, align 4
  %858 = fadd float %855, %857
  %859 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 34
  %860 = load float, float* %859, align 4
  %861 = fadd float %858, %860
  %862 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 35
  %863 = load float, float* %862, align 4
  %864 = fadd float %861, %863
  %865 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 36
  %866 = load float, float* %865, align 4
  %867 = fadd float %864, %866
  %868 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 37
  %869 = load float, float* %868, align 4
  %870 = fadd float %867, %869
  %871 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 38
  %872 = load float, float* %871, align 4
  %873 = fadd float %870, %872
  %874 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 39
  %875 = load float, float* %874, align 4
  %876 = fadd float %873, %875
  %877 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 40
  %878 = load float, float* %877, align 4
  %879 = fadd float %876, %878
  %880 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 41
  %881 = load float, float* %880, align 4
  %882 = fadd float %879, %881
  %883 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 42
  %884 = load float, float* %883, align 4
  %885 = fadd float %882, %884
  %886 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 43
  %887 = load float, float* %886, align 4
  %888 = fadd float %885, %887
  %889 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 44
  %890 = load float, float* %889, align 4
  %891 = fadd float %888, %890
  %892 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 45
  %893 = load float, float* %892, align 4
  %894 = fadd float %891, %893
  %895 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 46
  %896 = load float, float* %895, align 4
  %897 = fadd float %894, %896
  %898 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 47
  %899 = load float, float* %898, align 4
  %900 = fadd float %897, %899
  %901 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 48
  %902 = load float, float* %901, align 4
  %903 = fadd float %900, %902
  %904 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 49
  %905 = load float, float* %904, align 4
  %906 = fadd float %903, %905
  %907 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 50
  %908 = load float, float* %907, align 4
  %909 = fadd float %906, %908
  %910 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 51
  %911 = load float, float* %910, align 4
  %912 = fadd float %909, %911
  %913 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 52
  %914 = load float, float* %913, align 4
  %915 = fadd float %912, %914
  %916 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 53
  %917 = load float, float* %916, align 4
  %918 = fadd float %915, %917
  %919 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 54
  %920 = load float, float* %919, align 4
  %921 = fadd float %918, %920
  %922 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 55
  %923 = load float, float* %922, align 4
  %924 = fadd float %921, %923
  %925 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 56
  %926 = load float, float* %925, align 4
  %927 = fadd float %924, %926
  %928 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 57
  %929 = load float, float* %928, align 4
  %930 = fadd float %927, %929
  %931 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 58
  %932 = load float, float* %931, align 4
  %933 = fadd float %930, %932
  %934 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 59
  %935 = load float, float* %934, align 4
  %936 = fadd float %933, %935
  %937 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 60
  %938 = load float, float* %937, align 4
  %939 = fadd float %936, %938
  %940 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 61
  %941 = load float, float* %940, align 4
  %942 = fadd float %939, %941
  %943 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 62
  %944 = load float, float* %943, align 4
  %945 = fadd float %942, %944
  %946 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 63
  %947 = load float, float* %946, align 4
  %948 = fadd float %945, %947
  %949 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %8, i64 0, i32 0, i64 64
  %950 = load float, float* %949, align 4
  %951 = fadd float %948, %950
  %952 = fdiv float %951, %723
  %953 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 3
  %954 = load float, float* %953, align 8
  %955 = fcmp olt float %952, %954
  br i1 %955, label %956, label %966

956:                                              ; preds = %756
  %957 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 4
  store i32 1000, i32* %957, align 4
  %958 = fsub float %952, %954
  %959 = fmul float %958, 0x3FB99999A0000000
  %960 = fadd float %954, %959
  %961 = fcmp olt float %960, 0x3F847AE140000000
  %962 = bitcast float %960 to i32
  %963 = select i1 %961, i32 1008981770, i32 %962
  %964 = bitcast float* %953 to i32*
  store i32 %963, i32* %964, align 8
  %965 = bitcast i32 %963 to float
  br label %966

966:                                              ; preds = %728, %756, %956
  %967 = phi float [ %730, %728 ], [ %954, %756 ], [ %965, %956 ]
  %968 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 4
  %969 = load i32, i32* %968, align 4
  %970 = add nsw i32 %969, -1
  store i32 %970, i32* %968, align 4
  %971 = icmp sgt i32 %970, 0
  %972 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 3
  br i1 %971, label %977, label %973

973:                                              ; preds = %966
  %974 = fmul float %967, 2.000000e+00
  %975 = fcmp olt float %974, 1.000000e+03
  %976 = select i1 %975, float %974, float 1.000000e+03
  br label %977

977:                                              ; preds = %966, %973
  %978 = phi float [ %976, %973 ], [ %967, %966 ]
  store float %978, float* %972, align 8
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %260) #6
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %61) #6
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %60) #6
  br label %979

979:                                              ; preds = %45, %977
  ret void

980:                                              ; preds = %695
  %981 = fmul float %700, 2.000000e+00
  %982 = fcmp olt float %981, 1.000000e+03
  %983 = select i1 %982, float %981, float 1.000000e+03
  br label %984

984:                                              ; preds = %980, %695
  %985 = phi float [ %983, %980 ], [ %700, %695 ]
  store float %985, float* %698, align 4
  %986 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 2, i32 0, i64 62
  %987 = getelementptr %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 63
  %988 = load i32, i32* %986, align 4
  %989 = load float, float* %987, align 4
  %990 = icmp sgt i32 %988, 0
  br i1 %990, label %995, label %991

991:                                              ; preds = %984
  %992 = fmul float %989, 2.000000e+00
  %993 = fcmp olt float %992, 1.000000e+03
  %994 = select i1 %993, float %992, float 1.000000e+03
  br label %995

995:                                              ; preds = %991, %984
  %996 = phi float [ %994, %991 ], [ %989, %984 ]
  store float %996, float* %987, align 4
  %997 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1
  %998 = bitcast float* %506 to i32*
  %999 = load i32, i32* %998, align 4
  %1000 = bitcast %"struct.std::__1::array"* %997 to i32*
  store i32 %999, i32* %1000, align 4
  %1001 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 63
  %1002 = bitcast float* %1001 to i32*
  %1003 = load i32, i32* %1002, align 4
  %1004 = getelementptr inbounds %"class.webrtc::ErlEstimator", %"class.webrtc::ErlEstimator"* %0, i64 0, i32 1, i32 0, i64 64
  %1005 = bitcast float* %1004 to i32*
  store i32 %1003, i32* %1005, align 4
  br label %702
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
