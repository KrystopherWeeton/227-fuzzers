; ModuleID = '../../components/password_manager/core/browser/well_known_change_password_util.cc'
source_filename = "../../components/password_manager/core/browser/well_known_change_password_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.url::StringPieceReplacements" = type { %"class.url::Replacements" }
%"class.url::Replacements" = type { %"struct.url::URLComponentSource", %"struct.url::Parsed" }
%"struct.url::URLComponentSource" = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }

@_ZN16password_manager28kWellKnownChangePasswordPathE = hidden constant [29 x i8] c"/.well-known/change-password\00", align 16
@_ZN16password_manager33kWellKnownNotExistingResourcePathE = hidden constant [80 x i8] c"/.well-known/resource-that-should-not-exist-whose-status-code-should-not-be-200\00", align 16
@.str = private unnamed_addr constant [2 x i8] c"/\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16password_manager28IsWellKnownChangePasswordUrlERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %2 = alloca %"class.base::BasicStringPiece", align 8
  %3 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %34, label %6

6:                                                ; preds = %1
  %7 = tail call zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL* %0) #5
  br i1 %7, label %8, label %34

8:                                                ; preds = %6
  %9 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 2, i32 5, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, -1
  br i1 %11, label %12, label %34

12:                                               ; preds = %8
  %13 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #5
  %14 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 0
  %15 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 1
  %16 = tail call { i8*, i64 } @_ZNK4GURL19PathForRequestPieceEv(%class.GURL* %0) #5
  %17 = extractvalue { i8*, i64 } %16, 0
  store i8* %17, i8** %14, align 8
  %18 = extractvalue { i8*, i64 } %16, 1
  store i64 %18, i64* %15, align 8
  %19 = tail call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %17, i64 %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 0) #5
  br i1 %19, label %20, label %25

20:                                               ; preds = %12
  %21 = add i64 %18, -1
  %22 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %2, i64 0, i64 %21)
  %23 = extractvalue { i8*, i64 } %22, 0
  %24 = extractvalue { i8*, i64 } %22, 1
  store i8* %23, i8** %14, align 8
  store i64 %24, i64* %15, align 8
  br label %25

25:                                               ; preds = %20, %12
  %26 = phi i8* [ %23, %20 ], [ %17, %12 ]
  %27 = phi i64 [ %24, %20 ], [ %18, %12 ]
  %28 = icmp eq i64 %27, 28
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = call i32 @bcmp(i8* %26, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZN16password_manager28kWellKnownChangePasswordPathE, i64 0, i64 0), i64 28) #5
  %31 = icmp eq i32 %30, 0
  br label %32

32:                                               ; preds = %25, %29
  %33 = phi i1 [ false, %25 ], [ %31, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #5
  br label %34

34:                                               ; preds = %1, %6, %8, %32
  %35 = phi i1 [ %33, %32 ], [ false, %8 ], [ false, %6 ], [ false, %1 ]
  ret i1 %35
}

declare zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare { i8*, i64 } @_ZNK4GURL19PathForRequestPieceEv(%class.GURL*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager23CreateChangePasswordUrlERK4GURL(%class.GURL* noalias sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %3 = alloca %"class.url::StringPieceReplacements", align 8
  %4 = alloca %class.GURL, align 8
  %5 = bitcast %"class.url::StringPieceReplacements"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %3, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.url::Parsed"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 80, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 64, i1 false) #5
  %8 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %3, i64 0, i32 0, i32 1
  call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* %8) #5
  %9 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %3, i64 0, i32 0, i32 0, i32 5
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZN16password_manager28kWellKnownChangePasswordPathE, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %3, i64 0, i32 0, i32 1, i32 5
  %11 = bitcast %"struct.url::Component"* %10 to i64*
  store i64 120259084288, i64* %11, align 8
  %12 = bitcast %class.GURL* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %12) #5
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %4, %class.GURL* %1) #5
  %13 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %3, i64 0, i32 0
  call void @_ZNK4GURL17ReplaceComponentsERKN3url12ReplacementsIcEE(%class.GURL* sret %0, %class.GURL* nonnull %4, %"class.url::Replacements"* nonnull dereferenceable(144) %13) #5
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %12) #5
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %8) #5
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %5) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK4GURL9GetOriginEv(%class.GURL* sret, %class.GURL*) local_unnamed_addr #1

declare void @_ZNK4GURL17ReplaceComponentsERKN3url12ReplacementsIcEE(%class.GURL* sret, %class.GURL*, %"class.url::Replacements"* dereferenceable(144)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager37CreateWellKnownNonExistingResourceURLERK4GURL(%class.GURL* noalias sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %3 = alloca %"class.url::StringPieceReplacements", align 8
  %4 = bitcast %"class.url::StringPieceReplacements"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %4) #5
  %5 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %3, i64 0, i32 0, i32 1
  %6 = bitcast %"struct.url::Parsed"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 80, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 64, i1 false) #5
  %7 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %3, i64 0, i32 0, i32 1
  call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* %7) #5
  %8 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %3, i64 0, i32 0, i32 0, i32 5
  store i8* getelementptr inbounds ([80 x i8], [80 x i8]* @_ZN16password_manager33kWellKnownNotExistingResourcePathE, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %3, i64 0, i32 0, i32 1, i32 5
  %10 = bitcast %"struct.url::Component"* %9 to i64*
  store i64 339302416384, i64* %10, align 8
  %11 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %3, i64 0, i32 0
  call void @_ZNK4GURL17ReplaceComponentsERKN3url12ReplacementsIcEE(%class.GURL* sret %0, %class.GURL* %1, %"class.url::Replacements"* nonnull dereferenceable(144) %11) #5
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %7) #5
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %4) #5
  ret void
}

declare void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"*) unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
