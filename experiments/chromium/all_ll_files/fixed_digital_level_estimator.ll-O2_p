; ModuleID = '../../third_party/webrtc/modules/audio_processing/agc2/fixed_digital_level_estimator.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/agc2/fixed_digital_level_estimator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::FixedDigitalLevelEstimator" = type <{ %"class.webrtc::ApmDataDumper"*, float, i32, i32, [4 x i8] }>
%"class.webrtc::ApmDataDumper" = type { i8 }
%"struct.std::__1::array" = type { [20 x float] }
%"class.webrtc::AudioFrameView" = type { float**, i64, i64 }

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t = comdat any

@.str.3 = private unnamed_addr constant [43 x i8] c"../../third_party/webrtc/rtc_base/checks.h\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"a % b == 0\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c" is not evenly divisible by \00", align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t = linkonce_odr hidden constant [7 x i8] c"\0D\01\01\01\09\01\00", comdat, align 1

@_ZN6webrtc26FixedDigitalLevelEstimatorC1EiPNS_13ApmDataDumperE = hidden unnamed_addr alias void (%"class.webrtc::FixedDigitalLevelEstimator"*, i32, %"class.webrtc::ApmDataDumper"*), void (%"class.webrtc::FixedDigitalLevelEstimator"*, i32, %"class.webrtc::ApmDataDumper"*)* @_ZN6webrtc26FixedDigitalLevelEstimatorC2EiPNS_13ApmDataDumperE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc26FixedDigitalLevelEstimatorC2EiPNS_13ApmDataDumperE(%"class.webrtc::FixedDigitalLevelEstimator"* nocapture, i32, %"class.webrtc::ApmDataDumper"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::FixedDigitalLevelEstimator", %"class.webrtc::FixedDigitalLevelEstimator"* %0, i64 0, i32 0
  store %"class.webrtc::ApmDataDumper"* %2, %"class.webrtc::ApmDataDumper"** %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::FixedDigitalLevelEstimator", %"class.webrtc::FixedDigitalLevelEstimator"* %0, i64 0, i32 1
  store float 0.000000e+00, float* %5, align 8
  %6 = mul nsw i32 %1, 10
  %7 = srem i32 %6, 1000
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %3
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0), i32 466, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t, i64 0, i64 0), i32 %7, i32 0, i32 %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i32 1000) #6
  unreachable

10:                                               ; preds = %3
  %11 = sdiv i32 %1, 100
  %12 = getelementptr inbounds %"class.webrtc::FixedDigitalLevelEstimator", %"class.webrtc::FixedDigitalLevelEstimator"* %0, i64 0, i32 2
  store i32 %11, i32* %12, align 4
  %13 = srem i32 %11, 20
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %10
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0), i32 466, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t, i64 0, i64 0), i32 %13, i32 0, i32 %11, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i32 20) #6
  unreachable

16:                                               ; preds = %10
  %17 = sdiv i32 %1, 2000
  %18 = getelementptr inbounds %"class.webrtc::FixedDigitalLevelEstimator", %"class.webrtc::FixedDigitalLevelEstimator"* %0, i64 0, i32 3
  store i32 %17, i32* %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc26FixedDigitalLevelEstimator13SetSampleRateEi(%"class.webrtc::FixedDigitalLevelEstimator"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = mul nsw i32 %1, 10
  %4 = srem i32 %3, 1000
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0), i32 466, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t, i64 0, i64 0), i32 %4, i32 0, i32 %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i32 1000) #6
  unreachable

7:                                                ; preds = %2
  %8 = sdiv i32 %1, 100
  %9 = getelementptr inbounds %"class.webrtc::FixedDigitalLevelEstimator", %"class.webrtc::FixedDigitalLevelEstimator"* %0, i64 0, i32 2
  store i32 %8, i32* %9, align 4
  %10 = srem i32 %8, 20
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0), i32 466, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t, i64 0, i64 0), i32 %10, i32 0, i32 %8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i32 20) #6
  unreachable

13:                                               ; preds = %7
  %14 = sdiv i32 %1, 2000
  %15 = getelementptr inbounds %"class.webrtc::FixedDigitalLevelEstimator", %"class.webrtc::FixedDigitalLevelEstimator"* %0, i64 0, i32 3
  store i32 %14, i32* %15, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc26FixedDigitalLevelEstimator25CheckParameterCombinationEv(%"class.webrtc::FixedDigitalLevelEstimator"* nocapture) local_unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc26FixedDigitalLevelEstimator12ComputeLevelERKNS_14AudioFrameViewIKfEE(%"struct.std::__1::array"* noalias nocapture sret, %"class.webrtc::FixedDigitalLevelEstimator"* nocapture, %"class.webrtc::AudioFrameView"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca float, align 4
  %5 = bitcast %"struct.std::__1::array"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 80, i1 false)
  %6 = getelementptr inbounds %"class.webrtc::AudioFrameView", %"class.webrtc::AudioFrameView"* %2, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %86, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.webrtc::AudioFrameView", %"class.webrtc::AudioFrameView"* %2, i64 0, i32 0
  %11 = load float**, float*** %10, align 8
  %12 = getelementptr inbounds %"class.webrtc::AudioFrameView", %"class.webrtc::AudioFrameView"* %2, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  %15 = getelementptr inbounds %"class.webrtc::FixedDigitalLevelEstimator", %"class.webrtc::FixedDigitalLevelEstimator"* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = icmp sgt i32 %16, 0
  %18 = bitcast float* %4 to i8*
  %19 = and i32 %16, 1
  %20 = icmp eq i32 %16, 1
  %21 = sub i32 %16, %19
  %22 = icmp eq i32 %19, 0
  br label %26

23:                                               ; preds = %39
  %24 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0
  %25 = load float, float* %24, align 4
  br label %86

26:                                               ; preds = %9, %39
  %27 = phi i64 [ 0, %9 ], [ %40, %39 ]
  %28 = getelementptr inbounds float*, float** %11, i64 %27
  %29 = load float*, float** %28, align 8
  %30 = select i1 %14, float* null, float* %29
  br label %31

31:                                               ; preds = %55, %26
  %32 = phi i64 [ 0, %26 ], [ %56, %55 ]
  br i1 %17, label %33, label %55

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 %32
  %35 = bitcast float* %34 to i32*
  %36 = load float, float* %34, align 4
  %37 = trunc i64 %32 to i32
  %38 = mul nsw i32 %16, %37
  br i1 %20, label %42, label %58

39:                                               ; preds = %55
  %40 = add nuw i64 %27, 1
  %41 = icmp ult i64 %40, %7
  br i1 %41, label %26, label %23

42:                                               ; preds = %58, %33
  %43 = phi float [ %36, %33 ], [ %83, %58 ]
  %44 = phi i32 [ 0, %33 ], [ %82, %58 ]
  br i1 %22, label %55, label %45

45:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18)
  %46 = add nsw i32 %38, %44
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds float, float* %30, i64 %47
  %49 = load float, float* %48, align 4
  %50 = tail call float @llvm.fabs.f32(float %49) #7
  store float %50, float* %4, align 4
  %51 = fcmp olt float %43, %50
  %52 = select i1 %51, float* %4, float* %34
  %53 = bitcast float* %52 to i32*
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %35, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18)
  br label %55

55:                                               ; preds = %45, %42, %31
  %56 = add nuw nsw i64 %32, 1
  %57 = icmp eq i64 %56, 20
  br i1 %57, label %39, label %31

58:                                               ; preds = %33, %58
  %59 = phi float [ %83, %58 ], [ %36, %33 ]
  %60 = phi i32 [ %82, %58 ], [ 0, %33 ]
  %61 = phi i32 [ %84, %58 ], [ %21, %33 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18)
  %62 = add nsw i32 %38, %60
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds float, float* %30, i64 %63
  %65 = load float, float* %64, align 4
  %66 = tail call float @llvm.fabs.f32(float %65) #7
  store float %66, float* %4, align 4
  %67 = fcmp olt float %59, %66
  %68 = select i1 %67, float* %4, float* %34
  %69 = bitcast float* %68 to i32*
  %70 = load i32, i32* %69, align 4
  store i32 %70, i32* %35, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18)
  %71 = or i32 %60, 1
  %72 = bitcast i32 %70 to float
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18)
  %73 = add nsw i32 %38, %71
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds float, float* %30, i64 %74
  %76 = load float, float* %75, align 4
  %77 = tail call float @llvm.fabs.f32(float %76) #7
  store float %77, float* %4, align 4
  %78 = fcmp ogt float %77, %72
  %79 = select i1 %78, float* %4, float* %34
  %80 = bitcast float* %79 to i32*
  %81 = load i32, i32* %80, align 4
  store i32 %81, i32* %35, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18)
  %82 = add nuw nsw i32 %60, 2
  %83 = bitcast i32 %81 to float
  %84 = add i32 %61, -2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %42, label %58

86:                                               ; preds = %3, %23
  %87 = phi float [ 0.000000e+00, %3 ], [ %25, %23 ]
  %88 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1
  %89 = load float, float* %88, align 4
  %90 = fcmp olt float %87, %89
  br i1 %90, label %91, label %93

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 0
  store float %89, float* %92, align 4
  br label %93

93:                                               ; preds = %86, %91
  %94 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2
  %95 = load float, float* %94, align 4
  %96 = fcmp olt float %89, %95
  br i1 %96, label %120, label %122

97:                                               ; preds = %98
  store float %117, float* %225, align 8
  ret void

98:                                               ; preds = %98, %224
  %99 = phi i64 [ 0, %224 ], [ %118, %98 ]
  %100 = phi float [ %226, %224 ], [ %117, %98 ]
  %101 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 %99
  %102 = load float, float* %101, align 4
  %103 = fcmp ogt float %102, %100
  %104 = fmul float %102, 0x3F1E2C0000000000
  %105 = select i1 %103, float 0.000000e+00, float 0x3FEFFF0EA0000000
  %106 = select i1 %103, float %102, float %104
  %107 = fmul float %100, %105
  %108 = fadd float %106, %107
  store float %108, float* %101, align 4
  %109 = or i64 %99, 1
  %110 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 %109
  %111 = load float, float* %110, align 4
  %112 = fcmp ogt float %111, %108
  %113 = fmul float %111, 0x3F1E2C0000000000
  %114 = select i1 %112, float 0.000000e+00, float 0x3FEFFF0EA0000000
  %115 = select i1 %112, float %111, float %113
  %116 = fmul float %108, %114
  %117 = fadd float %115, %116
  store float %117, float* %110, align 4
  %118 = add nuw nsw i64 %99, 2
  %119 = icmp eq i64 %118, 20
  br i1 %119, label %97, label %98

120:                                              ; preds = %93
  %121 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 1
  store float %95, float* %121, align 4
  br label %122

122:                                              ; preds = %120, %93
  %123 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3
  %124 = load float, float* %123, align 4
  %125 = fcmp olt float %95, %124
  br i1 %125, label %126, label %128

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 2
  store float %124, float* %127, align 4
  br label %128

128:                                              ; preds = %126, %122
  %129 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 4
  %130 = load float, float* %129, align 4
  %131 = fcmp olt float %124, %130
  br i1 %131, label %132, label %134

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 3
  store float %130, float* %133, align 4
  br label %134

134:                                              ; preds = %132, %128
  %135 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 5
  %136 = load float, float* %135, align 4
  %137 = fcmp olt float %130, %136
  br i1 %137, label %138, label %140

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 4
  store float %136, float* %139, align 4
  br label %140

140:                                              ; preds = %138, %134
  %141 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 6
  %142 = load float, float* %141, align 4
  %143 = fcmp olt float %136, %142
  br i1 %143, label %144, label %146

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 5
  store float %142, float* %145, align 4
  br label %146

146:                                              ; preds = %144, %140
  %147 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 7
  %148 = load float, float* %147, align 4
  %149 = fcmp olt float %142, %148
  br i1 %149, label %150, label %152

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 6
  store float %148, float* %151, align 4
  br label %152

152:                                              ; preds = %150, %146
  %153 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 8
  %154 = load float, float* %153, align 4
  %155 = fcmp olt float %148, %154
  br i1 %155, label %156, label %158

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 7
  store float %154, float* %157, align 4
  br label %158

158:                                              ; preds = %156, %152
  %159 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 9
  %160 = load float, float* %159, align 4
  %161 = fcmp olt float %154, %160
  br i1 %161, label %162, label %164

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 8
  store float %160, float* %163, align 4
  br label %164

164:                                              ; preds = %162, %158
  %165 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 10
  %166 = load float, float* %165, align 4
  %167 = fcmp olt float %160, %166
  br i1 %167, label %168, label %170

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 9
  store float %166, float* %169, align 4
  br label %170

170:                                              ; preds = %168, %164
  %171 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 11
  %172 = load float, float* %171, align 4
  %173 = fcmp olt float %166, %172
  br i1 %173, label %174, label %176

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 10
  store float %172, float* %175, align 4
  br label %176

176:                                              ; preds = %174, %170
  %177 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 12
  %178 = load float, float* %177, align 4
  %179 = fcmp olt float %172, %178
  br i1 %179, label %180, label %182

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 11
  store float %178, float* %181, align 4
  br label %182

182:                                              ; preds = %180, %176
  %183 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 13
  %184 = load float, float* %183, align 4
  %185 = fcmp olt float %178, %184
  br i1 %185, label %186, label %188

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 12
  store float %184, float* %187, align 4
  br label %188

188:                                              ; preds = %186, %182
  %189 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 14
  %190 = load float, float* %189, align 4
  %191 = fcmp olt float %184, %190
  br i1 %191, label %192, label %194

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 13
  store float %190, float* %193, align 4
  br label %194

194:                                              ; preds = %192, %188
  %195 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 15
  %196 = load float, float* %195, align 4
  %197 = fcmp olt float %190, %196
  br i1 %197, label %198, label %200

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 14
  store float %196, float* %199, align 4
  br label %200

200:                                              ; preds = %198, %194
  %201 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 16
  %202 = load float, float* %201, align 4
  %203 = fcmp olt float %196, %202
  br i1 %203, label %204, label %206

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 15
  store float %202, float* %205, align 4
  br label %206

206:                                              ; preds = %204, %200
  %207 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 17
  %208 = load float, float* %207, align 4
  %209 = fcmp olt float %202, %208
  br i1 %209, label %210, label %212

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 16
  store float %208, float* %211, align 4
  br label %212

212:                                              ; preds = %210, %206
  %213 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 18
  %214 = load float, float* %213, align 4
  %215 = fcmp olt float %208, %214
  br i1 %215, label %216, label %218

216:                                              ; preds = %212
  %217 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 17
  store float %214, float* %217, align 4
  br label %218

218:                                              ; preds = %216, %212
  %219 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 19
  %220 = load float, float* %219, align 4
  %221 = fcmp olt float %214, %220
  br i1 %221, label %222, label %224

222:                                              ; preds = %218
  %223 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %0, i64 0, i32 0, i64 18
  store float %220, float* %223, align 4
  br label %224

224:                                              ; preds = %222, %218
  %225 = getelementptr inbounds %"class.webrtc::FixedDigitalLevelEstimator", %"class.webrtc::FixedDigitalLevelEstimator"* %1, i64 0, i32 1
  %226 = load float, float* %225, align 8
  br label %98
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc26FixedDigitalLevelEstimator5ResetEv(%"class.webrtc::FixedDigitalLevelEstimator"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::FixedDigitalLevelEstimator", %"class.webrtc::FixedDigitalLevelEstimator"* %0, i64 0, i32 1
  store float 0.000000e+00, float* %2, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #4

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8*, i32, i8*, i8*, ...) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
