; ModuleID = '../../third_party/freetype/src/src/base/ftbase.c'
source_filename = "../../third_party/freetype/src/src/base/ftbase.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i32, [32 x %struct.FT_ModuleRec_*], %struct.FT_ListRec_, %struct.FT_RendererRec_*, %struct.FT_ModuleRec_*, [4 x i32 (i8*)*], [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_RendererRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Renderer_Class_*, i32, %struct.FT_Glyph_Class_, %struct.FT_RasterRec_*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)* }
%struct.FT_ModuleRec_ = type { %struct.FT_Module_Class_*, %struct.FT_LibraryRec_*, %struct.FT_MemoryRec_* }
%struct.FT_Module_Class_ = type { i64, i64, i8*, i64, i64, i8*, i32 (%struct.FT_ModuleRec_*)*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* }
%struct.FT_Renderer_Class_ = type { %struct.FT_Module_Class_, i32, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_RendererRec_*, i64, i8*)*, %struct.FT_Raster_Funcs_* }
%struct.FT_Matrix_ = type { i64, i64, i64, i64 }
%struct.FT_Raster_Funcs_ = type { i32, i32 (i8*, %struct.FT_RasterRec_**)*, void (%struct.FT_RasterRec_*, i8*, i64)*, i32 (%struct.FT_RasterRec_*, i64, i8*)*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, void (%struct.FT_RasterRec_*)* }
%struct.FT_Glyph_Class_ = type { i64, i32, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphRec_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphRec_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)* }
%struct.FT_GlyphRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_Glyph_Class_*, i32, %struct.FT_Vector_ }
%struct.FT_RasterRec_ = type opaque
%struct.FT_Raster_Params_ = type { %struct.FT_Bitmap_*, i8*, i32, void (i32, i32, %struct.FT_Span_*, i8*)*, void (i32, i32, %struct.FT_Span_*, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i8*)*, i8*, %struct.FT_BBox_ }
%struct.FT_Span_ = type { i16, i16, i8 }
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type { i32, i16, i32, i32, %struct.FT_Matrix_ }
%struct.FT_Slot_InternalRec_ = type { %struct.FT_GlyphLoaderRec_*, i32, i8, %struct.FT_Matrix_, %struct.FT_Vector_, i8*, i32 }
%struct.FT_GlyphLoaderRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i8, %struct.FT_GlyphLoadRec_, %struct.FT_GlyphLoadRec_, i8* }
%struct.FT_GlyphLoadRec_ = type { %struct.FT_Outline_, %struct.FT_Vector_*, %struct.FT_Vector_*, i32, %struct.FT_SubGlyphRec_* }
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type { i8*, i32, %struct.FT_Size_Metrics_ }
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Driver_ClassRec_*, %struct.FT_ListRec_, %struct.FT_GlyphLoaderRec_* }
%struct.FT_Driver_ClassRec_ = type { %struct.FT_Module_Class_, i64, i64, i64, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.FT_FaceRec_*)*, i32 (%struct.FT_SizeRec_*)*, void (%struct.FT_SizeRec_*)*, i32 (%struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphSlotRec_*)*, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)*, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)*, i32 (%struct.FT_SizeRec_*, i64)* }
%struct.FT_Parameter_ = type { i64, i8* }
%struct.FT_Size_RequestRec_ = type { i32, i64, i64, i32, i32 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type { %struct.FT_Matrix_, %struct.FT_Vector_, i32, %struct.FT_ServiceCacheRec_, %struct.FT_Incremental_InterfaceRec_*, i8, i32, [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_ServiceCacheRec_ = type { i8*, i8*, i8*, i8*, i8*, i8* }
%struct.FT_Incremental_InterfaceRec_ = type { %struct.FT_Incremental_FuncsRec_*, %struct.FT_IncrementalRec_* }
%struct.FT_Incremental_FuncsRec_ = type { i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* }
%struct.FT_Data_ = type { i8*, i32 }
%struct.FT_Incremental_MetricsRec_ = type { i64, i64, i64, i64 }
%struct.FT_IncrementalRec_ = type opaque
%struct.TT_MaxProfile_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.FT_AutoHinter_InterfaceRec_ = type { void (%struct.FT_AutoHinterRec_*, %struct.FT_FaceRec_*)*, void (%struct.FT_AutoHinterRec_*, %struct.FT_FaceRec_*, i8**, i64*)*, void (%struct.FT_AutoHinterRec_*, i8*)*, i32 (%struct.FT_AutoHinterRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)* }
%struct.FT_AutoHinterRec_ = type opaque
%struct.FT_Palette_Data_ = type { i16, i16*, i16*, i16, i16* }
%struct.FT_Color_ = type { i8, i8, i8, i8 }
%struct.TT_FaceRec_ = type { %struct.FT_FaceRec_, %struct.TTC_HeaderRec_, i64, i16, %struct.TT_TableRec_*, %struct.TT_Header_, %struct.TT_HoriHeader_, %struct.TT_MaxProfile_, i8, %struct.TT_VertHeader_, i16, %struct.TT_NameTableRec_, %struct.TT_OS2_, %struct.TT_Postscript_, i8*, i64, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_LoaderRec_*, i32, i64, i32)*, void (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i8*, i8*, i8*, i8*, i8*, %struct.TT_Gasp_, %struct.TT_PCLT_, i64, %struct.TT_SBit_ScaleRec_*, %struct.TT_Post_NamesRec_, %struct.FT_Palette_Data_, i16, %struct.FT_Color_*, i8, %struct.FT_Color_, i64, i8*, i64, i8*, i64, i32*, i32 (i8*)*, %struct.FT_Generic_, i8*, i64, i64, i8, i8, %struct.GX_BlendRec_*, i32, i8*, i32, i64, i64, i64, i8*, i8*, i64, i32, i64, i8*, i8*, i64, i32, i32, i32*, i8*, i64, i32, i32, i32, i64, i64, i64, i64, i8*, i8* }
%struct.TTC_HeaderRec_ = type { i64, i64, i64, i64* }
%struct.TT_TableRec_ = type { i64, i64, i64, i64 }
%struct.TT_Header_ = type { i64, i64, i64, i64, i16, i16, [2 x i64], [2 x i64], i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_HoriHeader_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i16], i16, i16, i8*, i8* }
%struct.TT_VertHeader_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i16], i16, i16, i8*, i8* }
%struct.TT_NameTableRec_ = type { i16, i32, i32, %struct.TT_NameRec_*, i32, %struct.TT_LangTagRec_*, %struct.FT_StreamRec_* }
%struct.TT_NameRec_ = type { i16, i16, i16, i16, i16, i64, i8* }
%struct.TT_LangTagRec_ = type { i16, i64, i8* }
%struct.TT_OS2_ = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [10 x i8], i64, i64, i64, i64, [4 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i64, i64, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_Postscript_ = type { i64, i64, i16, i16, i64, i64, i64, i64, i64 }
%struct.TT_LoaderRec_ = type { %struct.TT_FaceRec_*, %struct.TT_SizeRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphLoaderRec_*, i64, i32, %struct.FT_StreamRec_*, i32, i16, %struct.FT_BBox_, i32, i32, i32, i8, %struct.FT_Vector_, %struct.FT_Vector_, %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_, %struct.TT_ExecContextRec_*, i8*, i64, i8*, i32, i32, %struct.FT_Vector_, %struct.FT_Vector_, i8*, i8*, %struct.FT_ListRec_ }
%struct.TT_SizeRec_ = type opaque
%struct.TT_GlyphZoneRec_ = type { %struct.FT_MemoryRec_*, i16, i16, i16, i16, %struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, i8*, i16*, i16 }
%struct.TT_ExecContextRec_ = type opaque
%struct.TT_Gasp_ = type { i16, i16, %struct.TT_GaspRangeRec_* }
%struct.TT_GaspRangeRec_ = type { i16, i16 }
%struct.TT_PCLT_ = type { i64, i64, i16, i16, i16, i16, i16, i16, [16 x i8], [8 x i8], [6 x i8], i8, i8, i8, i8 }
%struct.TT_SBit_ScaleRec_ = type { %struct.TT_SBit_LineMetricsRec_, %struct.TT_SBit_LineMetricsRec_, i8, i8, i8, i8 }
%struct.TT_SBit_LineMetricsRec_ = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8] }
%struct.TT_Post_NamesRec_ = type { i8, %union.anon }
%union.anon = type { %struct.TT_Post_20Rec_ }
%struct.TT_Post_20Rec_ = type { i16, i16, i16*, i8** }
%struct.GX_BlendRec_ = type opaque
%struct.SFNT_Interface_ = type { i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.TT_FaceRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)*, i32 (%struct.TT_FaceRec_*, i64, i64, i8*, i64*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, void (%struct.TT_FaceRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, i64, i32, i32, %struct.FT_StreamRec_*, %struct.FT_Bitmap_*, %struct.TT_SBit_MetricsRec_*)*, i32 (%struct.TT_FaceRec_*, i32, i8**)*, void (%struct.TT_FaceRec_*)*, i32 (%struct.TT_FaceRec_*, i32, i32)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, void (%struct.TT_FaceRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_Size_RequestRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_Size_Metrics_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, void (%struct.TT_FaceRec_*)*, void (%struct.TT_FaceRec_*)*, i32 (%struct.TT_FaceRec_*, i32)*, i8 (%struct.TT_FaceRec_*, i32, i32*, i32*, %struct.FT_LayerIterator_*)*, i8 (%struct.TT_FaceRec_*, i32, i32, %struct.FT_Opaque_Paint_*)*, i8 (%struct.TT_FaceRec_*, %struct.FT_LayerIterator_*, %struct.FT_Opaque_Paint_*)*, i8 (%struct.TT_FaceRec_*, %struct.FT_ColorStop_*, %struct.FT_ColorStopIterator_*)*, i8 (%struct.TT_FaceRec_*, i8*, i8, %struct.FT_COLR_Paint_*)*, i32 (%struct.TT_FaceRec_*, i32, %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_*)*, void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)*, i32 (%struct.TT_FaceRec_*, i16, i8**)*, i8 (%struct.TT_FaceRec_*, i16, i32*, i32*)* }
%struct.TT_SBit_MetricsRec_ = type { i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.FT_LayerIterator_ = type { i32, i32, i8* }
%struct.FT_Opaque_Paint_ = type { i8*, i8 }
%struct.FT_ColorStop_ = type { i16, %struct.FT_ColorIndex_ }
%struct.FT_ColorIndex_ = type { i16, i16 }
%struct.FT_ColorStopIterator_ = type { i32, i32, i8* }
%struct.FT_COLR_Paint_ = type { i32, %union.anon.0 }
%union.anon.0 = type { %struct.FT_PaintLinearGradient_ }
%struct.FT_PaintLinearGradient_ = type { %struct.FT_ColorLine_, %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_Vector_ }
%struct.FT_ColorLine_ = type { i32, %struct.FT_ColorStopIterator_ }
%struct.FT_HashRec_ = type { i32, i32, i32, i64 (%union.FT_Hashkey_*)*, i8 (%union.FT_Hashkey_*, %union.FT_Hashkey_*)*, %struct.FT_HashnodeRec_** }
%union.FT_Hashkey_ = type { i8* }
%struct.FT_HashnodeRec_ = type { %union.FT_Hashkey_, i64 }
%struct.FT_ServiceDescRec_ = type { i8*, i8* }
%struct.FT_ValidatorRec_ = type { [1 x %struct.__jmp_buf_tag], i8*, i8*, i32, i32 }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.FT_Open_Args_ = type { i32, i8*, i64, i8*, %struct.FT_StreamRec_*, %struct.FT_ModuleRec_*, i32, %struct.FT_Parameter_* }
%struct.FT_CMapRec_ = type { %struct.FT_CharMapRec_, %struct.FT_CMap_ClassRec_* }
%struct.FT_CMap_ClassRec_ = type { i64, i32 (%struct.FT_CMapRec_*, i8*)*, {}*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }
%struct.TT_CMapInfo_ = type { i64, i64 }
%struct.FT_Outline_Funcs_ = type { i32 (%struct.FT_Vector_*, i8*)*, i32 (%struct.FT_Vector_*, i8*)*, i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, i8*)*, i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, i8*)*, i32, i64 }
%struct.PS_DriverRec_ = type { %struct.FT_DriverRec_, i32, i8, [8 x i32], i32 }
%struct.FT_RFork_Ref_ = type { i16, i64 }
%struct.FT_SfntName_ = type { i16, i16, i16, i16, i8*, i32 }
%struct.FT_SfntLangTag_ = type { i8*, i32 }
%struct.FT_Frame_Field_ = type { i8, i8, i16 }

@.str = private unnamed_addr constant [12 x i8] c"font-format\00", align 1
@FT_Library_SetLcdFilter.default_weights = internal unnamed_addr constant [5 x i8] c"\08MVM\08", align 1
@FT_Library_SetLcdFilter.light_weights = internal unnamed_addr constant [5 x i8] c"\00UVU\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"Type 1\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"kerning\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"glyph-dict\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"postscript-font-name\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"sfnt-table\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"tt-cmaps\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"type42\00", align 1
@__const.FT_Done_Library.driver_name = private unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), i8* null], align 16
@.str.8 = private unnamed_addr constant [9 x i8] c"truetype\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"truetype-engine\00", align 1
@.str.10 = private unnamed_addr constant [21 x i8] c"darkening-parameters\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"hinting-engine\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"adobe\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"no-stem-darkening\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"random-seed\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"properties\00", align 1
@ft_trig_arctan_table = internal unnamed_addr constant [22 x i64] [i64 1740967, i64 919879, i64 466945, i64 234379, i64 117304, i64 58666, i64 29335, i64 14668, i64 7334, i64 3667, i64 1833, i64 917, i64 458, i64 229, i64 115, i64 57, i64 29, i64 14, i64 7, i64 4, i64 2, i64 1], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_Advance(%struct.FT_FaceRec_*, i32, i32, i64*) local_unnamed_addr #0 {
  %5 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %5, label %66, label %6

6:                                                ; preds = %4
  %7 = icmp eq i64* %3, null
  br i1 %7, label %66, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 4
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp ugt i32 %11, %1
  br i1 %12, label %13, label %66

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %15 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %14, align 8
  %16 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %15, i64 0, i32 1
  %17 = load %struct.FT_Driver_ClassRec_*, %struct.FT_Driver_ClassRec_** %16, align 8
  %18 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %17, i64 0, i32 13
  %19 = load i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)** %18, align 8
  %20 = icmp eq i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)* %19, null
  br i1 %20, label %64, label %21

21:                                               ; preds = %13
  %22 = and i32 %2, 3
  %23 = icmp ne i32 %22, 0
  %24 = and i32 %2, 983040
  %25 = icmp eq i32 %24, 65536
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %64

27:                                               ; preds = %21
  %28 = tail call i32 %19(%struct.FT_FaceRec_* nonnull %0, i32 %1, i32 1, i32 %2, i64* nonnull %3) #16
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %61

30:                                               ; preds = %27
  %31 = sext i32 %2 to i64
  %32 = and i64 %31, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %66

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 22
  %36 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %35, align 8
  %37 = icmp eq %struct.FT_SizeRec_* %36, null
  br i1 %37, label %66, label %38

38:                                               ; preds = %34
  %39 = and i64 %31, 16
  %40 = icmp eq i64 %39, 0
  %41 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %36, i64 0, i32 2, i32 3
  %42 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %36, i64 0, i32 2, i32 2
  %43 = select i1 %40, i64* %42, i64* %41
  %44 = load i64, i64* %43, align 8
  %45 = icmp slt i64 %44, 0
  %46 = sub i64 0, %44
  %47 = select i1 %45, i64 %46, i64 %44
  %48 = load i64, i64* %3, align 8
  %49 = icmp slt i64 %48, 0
  %50 = select i1 %49, i32 -1, i32 1
  %51 = sub nsw i32 0, %50
  %52 = select i1 %45, i32 %51, i32 %50
  %53 = sub i64 0, %48
  %54 = select i1 %49, i64 %53, i64 %48
  %55 = mul i64 %54, %47
  %56 = add i64 %55, 32
  %57 = lshr i64 %56, 6
  %58 = icmp slt i32 %52, 0
  %59 = sub nsw i64 0, %57
  %60 = select i1 %58, i64 %59, i64 %57
  store i64 %60, i64* %3, align 8
  br label %66

61:                                               ; preds = %27
  %62 = and i32 %28, 255
  %63 = icmp eq i32 %62, 7
  br i1 %63, label %64, label %66

64:                                               ; preds = %21, %13, %61
  %65 = tail call i32 @FT_Get_Advances(%struct.FT_FaceRec_* nonnull %0, i32 %1, i32 1, i32 %2, i64* nonnull %3)
  br label %66

66:                                               ; preds = %38, %34, %30, %8, %6, %4, %61, %64
  %67 = phi i32 [ %65, %64 ], [ %28, %61 ], [ 35, %4 ], [ 6, %6 ], [ 16, %8 ], [ 36, %34 ], [ 0, %30 ], [ 0, %38 ]
  ret i32 %67
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_Advances(%struct.FT_FaceRec_*, i32, i32, i32, i64*) local_unnamed_addr #0 {
  %6 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %6, label %107, label %7

7:                                                ; preds = %5
  %8 = icmp eq i64* %4, null
  br i1 %8, label %107, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = add i32 %2, %1
  %14 = icmp ule i32 %12, %1
  %15 = icmp ult i32 %13, %1
  %16 = or i1 %15, %14
  %17 = icmp ugt i32 %13, %12
  %18 = or i1 %17, %16
  br i1 %18, label %107, label %19

19:                                               ; preds = %9
  %20 = icmp eq i32 %2, 0
  br i1 %20, label %107, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %23 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %22, align 8
  %24 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %23, i64 0, i32 1
  %25 = load %struct.FT_Driver_ClassRec_*, %struct.FT_Driver_ClassRec_** %24, align 8
  %26 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %25, i64 0, i32 13
  %27 = load i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)** %26, align 8
  %28 = icmp eq i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)* %27, null
  br i1 %28, label %78, label %29

29:                                               ; preds = %21
  %30 = and i32 %3, 3
  %31 = icmp ne i32 %30, 0
  %32 = and i32 %3, 983040
  %33 = icmp eq i32 %32, 65536
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %78

35:                                               ; preds = %29
  %36 = tail call i32 %27(%struct.FT_FaceRec_* nonnull %0, i32 %1, i32 %2, i32 %3, i64* nonnull %4) #16
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %75

38:                                               ; preds = %35
  %39 = sext i32 %3 to i64
  %40 = and i64 %39, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %107

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 22
  %44 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %43, align 8
  %45 = icmp eq %struct.FT_SizeRec_* %44, null
  br i1 %45, label %107, label %46

46:                                               ; preds = %42
  %47 = and i64 %39, 16
  %48 = icmp eq i64 %47, 0
  %49 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %44, i64 0, i32 2, i32 3
  %50 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %44, i64 0, i32 2, i32 2
  %51 = select i1 %48, i64* %50, i64* %49
  %52 = load i64, i64* %51, align 8
  %53 = icmp slt i64 %52, 0
  %54 = sub i64 0, %52
  %55 = select i1 %53, i64 %54, i64 %52
  %56 = zext i32 %2 to i64
  br label %57

57:                                               ; preds = %57, %46
  %58 = phi i64 [ 0, %46 ], [ %73, %57 ]
  %59 = getelementptr inbounds i64, i64* %4, i64 %58
  %60 = load i64, i64* %59, align 8
  %61 = icmp slt i64 %60, 0
  %62 = select i1 %61, i32 -1, i32 1
  %63 = sub nsw i32 0, %62
  %64 = select i1 %53, i32 %63, i32 %62
  %65 = sub i64 0, %60
  %66 = select i1 %61, i64 %65, i64 %60
  %67 = mul i64 %66, %55
  %68 = add i64 %67, 32
  %69 = lshr i64 %68, 6
  %70 = icmp slt i32 %64, 0
  %71 = sub nsw i64 0, %69
  %72 = select i1 %70, i64 %71, i64 %69
  store i64 %72, i64* %59, align 8
  %73 = add nuw nsw i64 %58, 1
  %74 = icmp eq i64 %73, %56
  br i1 %74, label %107, label %57

75:                                               ; preds = %35
  %76 = and i32 %36, 255
  %77 = icmp eq i32 %76, 7
  br i1 %77, label %78, label %107

78:                                               ; preds = %29, %75, %21
  %79 = and i32 %3, 536870912
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %107

81:                                               ; preds = %78
  %82 = or i32 %3, 256
  %83 = sext i32 %82 to i64
  %84 = and i64 %83, 1
  %85 = icmp eq i64 %84, 0
  %86 = and i64 %83, 16
  %87 = icmp eq i64 %86, 0
  %88 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 21
  %89 = select i1 %85, i64 1024, i64 1
  %90 = zext i32 %2 to i64
  br label %91

91:                                               ; preds = %97, %81
  %92 = phi i64 [ 0, %81 ], [ %105, %97 ]
  %93 = trunc i64 %92 to i32
  %94 = add i32 %93, %1
  %95 = tail call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* nonnull %0, i32 %94, i32 %82)
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %107

97:                                               ; preds = %91
  %98 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %88, align 8
  %99 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %98, i64 0, i32 8, i32 1
  %100 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %98, i64 0, i32 8, i32 0
  %101 = select i1 %87, i64* %100, i64* %99
  %102 = load i64, i64* %101, align 8
  %103 = mul nsw i64 %102, %89
  %104 = getelementptr inbounds i64, i64* %4, i64 %92
  store i64 %103, i64* %104, align 8
  %105 = add nuw nsw i64 %92, 1
  %106 = icmp eq i64 %105, %90
  br i1 %106, label %107, label %91

107:                                              ; preds = %57, %91, %97, %42, %38, %78, %75, %19, %9, %7, %5
  %108 = phi i32 [ 35, %5 ], [ 6, %7 ], [ 16, %9 ], [ 0, %19 ], [ %36, %75 ], [ 7, %78 ], [ 0, %38 ], [ 36, %42 ], [ %95, %91 ], [ 0, %97 ], [ 0, %57 ]
  ret i32 %108
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Load_Glyph(%struct.FT_FaceRec_* readonly, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %4, label %564, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 22
  %7 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %6, align 8
  %8 = icmp eq %struct.FT_SizeRec_* %7, null
  br i1 %8, label %564, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 21
  %11 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %10, align 8
  %12 = icmp eq %struct.FT_GlyphSlotRec_* %11, null
  br i1 %12, label %564, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 21
  %15 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %14, align 8
  %16 = icmp eq %struct.FT_Slot_InternalRec_* %15, null
  br i1 %16, label %39, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %39, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 1
  %24 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %23, align 8
  %25 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %24, i64 0, i32 25
  %26 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %25, align 8
  %27 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 10, i32 3
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %26, i64 0, i32 2
  %32 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %31, align 8
  tail call void %32(%struct.FT_MemoryRec_* %26, i8* nonnull %28) #16
  %33 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %14, align 8
  br label %34

34:                                               ; preds = %30, %22
  %35 = phi %struct.FT_Slot_InternalRec_* [ %15, %22 ], [ %33, %30 ]
  store i8* null, i8** %27, align 8
  %36 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %35, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, -2
  store i32 %38, i32* %36, align 8
  br label %41

39:                                               ; preds = %17, %13
  %40 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 10, i32 3
  store i8* null, i8** %40, align 8
  br label %41

41:                                               ; preds = %34, %39
  %42 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 3
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 5
  %44 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 10, i32 1
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 10, i32 0
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 10, i32 2
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 10, i32 5
  store i8 0, i8* %47, align 2
  %48 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 11
  %49 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 15
  %50 = bitcast %struct.FT_Glyph_Metrics_* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 100, i1 false) #16
  %51 = bitcast i32* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 52, i1 false) #16
  %52 = bitcast %struct.FT_SubGlyphRec_** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 48, i1 false) #16
  %53 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %54 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %53, align 8
  %55 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %54, i64 0, i32 0, i32 1
  %56 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %55, align 8
  %57 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %56, i64 0, i32 8
  %58 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %57, align 8
  %59 = and i32 %2, 1024
  %60 = icmp eq i32 %59, 0
  %61 = or i32 %2, 2049
  %62 = select i1 %60, i32 %2, i32 %61
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = and i32 %62, -15
  %66 = or i32 %65, 10
  %67 = select i1 %64, i32 %62, i32 %66
  %68 = and i32 %67, 4194304
  %69 = icmp eq i32 %68, 0
  %70 = and i32 %67, -5
  %71 = select i1 %69, i32 %67, i32 %70
  %72 = icmp eq %struct.FT_ModuleRec_* %58, null
  %73 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %54, i64 0, i32 0
  br i1 %72, label %198, label %74

74:                                               ; preds = %41
  %75 = sext i32 %71 to i64
  %76 = and i64 %75, 2
  %77 = icmp ne i64 %76, 0
  %78 = trunc i32 %71 to i16
  %79 = icmp slt i16 %78, 0
  %80 = or i1 %79, %77
  br i1 %80, label %198, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %83 = load i64, i64* %82, align 8
  %84 = and i64 %83, 8193
  %85 = icmp eq i64 %84, 1
  br i1 %85, label %86, label %198

86:                                               ; preds = %81
  %87 = and i64 %75, 2048
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %102

89:                                               ; preds = %86
  %90 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %91 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %90, align 8
  %92 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %91, i64 0, i32 0, i32 2
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %93, 0
  %95 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %91, i64 0, i32 0, i32 0
  %96 = load i64, i64* %95, align 8
  br i1 %94, label %97, label %99

97:                                               ; preds = %89
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %198, label %102

99:                                               ; preds = %89
  %100 = icmp ne i64 %96, 0
  %101 = or i1 %94, %100
  br i1 %101, label %198, label %102

102:                                              ; preds = %99, %97, %86
  %103 = and i64 %75, 32
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %163

105:                                              ; preds = %102
  %106 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %54, i64 0, i32 0, i32 0
  %107 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %106, align 8
  %108 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %107, i64 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = and i64 %109, 1024
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %163, label %112

112:                                              ; preds = %105
  %113 = and i32 %71, 983040
  %114 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %107, i64 0, i32 8
  %115 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %114, align 8
  %116 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %112
  %118 = tail call i8* %115(%struct.FT_ModuleRec_* %73, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0)) #16
  br label %119

119:                                              ; preds = %112, %117
  %120 = phi i8* [ %118, %117 ], [ null, %112 ]
  %121 = tail call i8* @strstr(i8* %120, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #17
  %122 = icmp eq i8* %121, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %54, i64 1
  %125 = bitcast %struct.FT_DriverRec_* %124 to i32*
  %126 = load i32, i32* %125, align 8
  %127 = icmp eq i32 %126, 1
  br label %128

128:                                              ; preds = %119, %123
  %129 = phi i1 [ false, %119 ], [ %127, %123 ]
  %130 = icmp eq i32 %113, 65536
  br i1 %130, label %131, label %140

131:                                              ; preds = %128
  %132 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %106, align 8
  %133 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %132, i64 0, i32 0
  %134 = load i64, i64* %133, align 8
  %135 = and i64 %134, 2048
  %136 = icmp ne i64 %135, 0
  %137 = or i1 %129, %136
  br i1 %137, label %140, label %138

138:                                              ; preds = %131
  %139 = load i64, i64* %82, align 8
  br label %163

140:                                              ; preds = %131, %128
  %141 = load i64, i64* %82, align 8
  %142 = and i64 %141, 8
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %198, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 5, i32 3
  %146 = load i64, i64* %145, align 8
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %198, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 27, i32 1
  %150 = bitcast %struct.FT_ListNodeRec_** %149 to %struct.TT_MaxProfile_*
  %151 = getelementptr inbounds %struct.TT_MaxProfile_, %struct.TT_MaxProfile_* %150, i64 0, i32 12
  %152 = load i16, i16* %151, align 2
  %153 = icmp eq i16 %152, 0
  br i1 %153, label %154, label %198

154:                                              ; preds = %148
  %155 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 12, i32 2
  %156 = load i64, i64* %155, align 8
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %198

158:                                              ; preds = %154
  %159 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 13
  %160 = bitcast i16* %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %198

163:                                              ; preds = %138, %158, %105, %102
  %164 = phi i64 [ %139, %138 ], [ %141, %158 ], [ %83, %105 ], [ %83, %102 ]
  %165 = and i64 %164, 2
  %166 = icmp ne i64 %165, 0
  %167 = and i32 %71, 8
  %168 = icmp eq i32 %167, 0
  %169 = and i1 %168, %166
  br i1 %169, label %170, label %183

170:                                              ; preds = %163
  %171 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %54, i64 0, i32 1
  %172 = load %struct.FT_Driver_ClassRec_*, %struct.FT_Driver_ClassRec_** %171, align 8
  %173 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %172, i64 0, i32 10
  %174 = load i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)** %173, align 8
  %175 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %6, align 8
  %176 = or i32 %71, 16384
  %177 = tail call i32 %174(%struct.FT_GlyphSlotRec_* nonnull %11, %struct.FT_SizeRec_* %175, i32 %1, i32 %176) #16
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %183

179:                                              ; preds = %170
  %180 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 9
  %181 = load i32, i32* %180, align 8
  %182 = icmp eq i32 %181, 1651078259
  br i1 %182, label %316, label %183

183:                                              ; preds = %163, %170, %179
  %184 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %185 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %184, align 8
  %186 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %185, i64 0, i32 2
  %187 = load i32, i32* %186, align 8
  store i32 0, i32* %186, align 8
  %188 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %58, i64 0, i32 0
  %189 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %188, align 8
  %190 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %189, i64 0, i32 5
  %191 = bitcast i8** %190 to %struct.FT_AutoHinter_InterfaceRec_**
  %192 = load %struct.FT_AutoHinter_InterfaceRec_*, %struct.FT_AutoHinter_InterfaceRec_** %191, align 8
  %193 = getelementptr inbounds %struct.FT_AutoHinter_InterfaceRec_, %struct.FT_AutoHinter_InterfaceRec_* %192, i64 0, i32 3
  %194 = load i32 (%struct.FT_AutoHinterRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*, i32 (%struct.FT_AutoHinterRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)** %193, align 8
  %195 = bitcast %struct.FT_ModuleRec_* %58 to %struct.FT_AutoHinterRec_*
  %196 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %6, align 8
  %197 = tail call i32 %194(%struct.FT_AutoHinterRec_* nonnull %195, %struct.FT_GlyphSlotRec_* nonnull %11, %struct.FT_SizeRec_* %196, i32 %1, i32 %71) #16
  store i32 %187, i32* %186, align 8
  br label %316

198:                                              ; preds = %97, %99, %74, %81, %41, %158, %154, %148, %144, %140
  %199 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %54, i64 0, i32 1
  %200 = load %struct.FT_Driver_ClassRec_*, %struct.FT_Driver_ClassRec_** %199, align 8
  %201 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %200, i64 0, i32 10
  %202 = load i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)** %201, align 8
  %203 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %6, align 8
  %204 = tail call i32 %202(%struct.FT_GlyphSlotRec_* nonnull %11, %struct.FT_SizeRec_* %203, i32 %1, i32 %71) #16
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %564

206:                                              ; preds = %198
  %207 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 9
  %208 = load i32, i32* %207, align 8
  %209 = icmp eq i32 %208, 1869968492
  br i1 %209, label %212, label %210

210:                                              ; preds = %206
  %211 = sext i32 %71 to i64
  br label %316

212:                                              ; preds = %206
  %213 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 13
  %214 = icmp eq %struct.FT_Outline_* %213, null
  br i1 %214, label %564, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 13, i32 1
  %217 = load i16, i16* %216, align 2
  %218 = sext i16 %217 to i32
  %219 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %213, i64 0, i32 0
  %220 = load i16, i16* %219, align 8
  %221 = sext i16 %220 to i64
  %222 = or i16 %220, %217
  %223 = icmp eq i16 %222, 0
  br i1 %223, label %248, label %224

224:                                              ; preds = %215
  %225 = icmp slt i16 %217, 1
  %226 = icmp slt i16 %220, 1
  %227 = or i1 %225, %226
  br i1 %227, label %564, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 13, i32 4
  %230 = load i16*, i16** %229, align 8
  %231 = and i64 %221, 4294967295
  br label %234

232:                                              ; preds = %234
  %233 = icmp eq i64 %243, %231
  br i1 %233, label %244, label %234

234:                                              ; preds = %232, %228
  %235 = phi i64 [ 0, %228 ], [ %243, %232 ]
  %236 = phi i32 [ -1, %228 ], [ %239, %232 ]
  %237 = getelementptr inbounds i16, i16* %230, i64 %235
  %238 = load i16, i16* %237, align 2
  %239 = sext i16 %238 to i32
  %240 = icmp slt i32 %236, %239
  %241 = icmp slt i16 %238, %217
  %242 = and i1 %241, %240
  %243 = add nuw nsw i64 %235, 1
  br i1 %242, label %232, label %564

244:                                              ; preds = %232
  %245 = sext i16 %238 to i32
  %246 = add nsw i32 %218, -1
  %247 = icmp eq i32 %246, %245
  br i1 %247, label %248, label %564

248:                                              ; preds = %244, %215
  %249 = sext i32 %71 to i64
  %250 = and i64 %249, 2
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %252, label %316

252:                                              ; preds = %248
  %253 = and i64 %249, 16
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %281, label %255

255:                                              ; preds = %252
  %256 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 5, i32 2
  %257 = load i64, i64* %256, align 8
  %258 = and i64 %257, -64
  store i64 %258, i64* %256, align 8
  %259 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 5, i32 3
  %260 = load i64, i64* %259, align 8
  %261 = add i64 %260, 63
  %262 = and i64 %261, -64
  store i64 %262, i64* %259, align 8
  %263 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 5, i32 5
  %264 = load i64, i64* %263, align 8
  %265 = getelementptr inbounds %struct.FT_Glyph_Metrics_, %struct.FT_Glyph_Metrics_* %43, i64 0, i32 0
  %266 = load i64, i64* %265, align 8
  %267 = add i64 %264, 63
  %268 = add i64 %267, %266
  %269 = and i64 %268, -64
  %270 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 5, i32 6
  %271 = load i64, i64* %270, align 8
  %272 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 5, i32 1
  %273 = load i64, i64* %272, align 8
  %274 = add i64 %271, 63
  %275 = add i64 %274, %273
  %276 = and i64 %275, -64
  %277 = and i64 %264, -64
  store i64 %277, i64* %263, align 8
  %278 = and i64 %271, -64
  store i64 %278, i64* %270, align 8
  %279 = sub i64 %269, %277
  store i64 %279, i64* %265, align 8
  %280 = sub i64 %276, %278
  br label %305

281:                                              ; preds = %252
  %282 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 5, i32 5
  %283 = bitcast i64* %282 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 8
  %285 = and <2 x i64> %284, <i64 -64, i64 -64>
  %286 = bitcast i64* %282 to <2 x i64>*
  store <2 x i64> %285, <2 x i64>* %286, align 8
  %287 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 5, i32 2
  %288 = load i64, i64* %287, align 8
  %289 = getelementptr inbounds %struct.FT_Glyph_Metrics_, %struct.FT_Glyph_Metrics_* %43, i64 0, i32 0
  %290 = load i64, i64* %289, align 8
  %291 = add i64 %288, 63
  %292 = add i64 %291, %290
  %293 = and i64 %292, -64
  %294 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 5, i32 3
  %295 = load i64, i64* %294, align 8
  %296 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 5, i32 1
  %297 = load i64, i64* %296, align 8
  %298 = sub i64 %295, %297
  %299 = and i64 %298, -64
  %300 = and i64 %288, -64
  store i64 %300, i64* %287, align 8
  %301 = add i64 %295, 63
  %302 = and i64 %301, -64
  store i64 %302, i64* %294, align 8
  %303 = sub i64 %293, %300
  store i64 %303, i64* %289, align 8
  %304 = sub i64 %302, %299
  br label %305

305:                                              ; preds = %255, %281
  %306 = phi i64* [ %272, %255 ], [ %296, %281 ]
  %307 = phi i64 [ %280, %255 ], [ %304, %281 ]
  store i64 %307, i64* %306, align 8
  %308 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 5, i32 4
  %309 = load i64, i64* %308, align 8
  %310 = add i64 %309, 32
  %311 = and i64 %310, -64
  store i64 %311, i64* %308, align 8
  %312 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 5, i32 7
  %313 = load i64, i64* %312, align 8
  %314 = add i64 %313, 32
  %315 = and i64 %314, -64
  store i64 %315, i64* %312, align 8
  br label %316

316:                                              ; preds = %210, %183, %179, %248, %305
  %317 = phi i64 [ %211, %210 ], [ %75, %183 ], [ %75, %179 ], [ %249, %248 ], [ %249, %305 ]
  %318 = phi i32 [ 0, %210 ], [ %197, %183 ], [ 0, %179 ], [ 0, %248 ], [ 0, %305 ]
  %319 = and i64 %317, 16
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %324, label %321

321:                                              ; preds = %316
  %322 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 5, i32 7
  %323 = load i64, i64* %322, align 8
  br label %327

324:                                              ; preds = %316
  %325 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 5, i32 4
  %326 = load i64, i64* %325, align 8
  br label %327

327:                                              ; preds = %324, %321
  %328 = phi i64 [ %326, %324 ], [ 0, %321 ]
  %329 = phi i64 [ 0, %324 ], [ %323, %321 ]
  %330 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 8, i32 0
  store i64 %328, i64* %330, align 8
  %331 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 8, i32 1
  store i64 %329, i64* %331, align 8
  %332 = and i64 %317, 8192
  %333 = icmp eq i64 %332, 0
  br i1 %333, label %334, label %379

334:                                              ; preds = %327
  %335 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %336 = load i64, i64* %335, align 8
  %337 = and i64 %336, 1
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %379, label %339

339:                                              ; preds = %334
  %340 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %6, align 8
  %341 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 6
  %342 = load i64, i64* %341, align 8
  %343 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %340, i64 0, i32 2, i32 2
  %344 = load i64, i64* %343, align 8
  %345 = icmp slt i64 %342, 0
  %346 = select i1 %345, i32 -1, i32 1
  %347 = icmp slt i64 %344, 0
  %348 = sub nsw i32 0, %346
  %349 = select i1 %347, i32 %348, i32 %346
  %350 = sub i64 0, %344
  %351 = select i1 %347, i64 %350, i64 %344
  %352 = sub i64 0, %342
  %353 = select i1 %345, i64 %352, i64 %342
  %354 = mul i64 %351, %353
  %355 = add i64 %354, 32
  %356 = lshr i64 %355, 6
  %357 = icmp slt i32 %349, 0
  %358 = sub nsw i64 0, %356
  %359 = select i1 %357, i64 %358, i64 %356
  store i64 %359, i64* %341, align 8
  %360 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 7
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %340, i64 0, i32 2, i32 3
  %363 = load i64, i64* %362, align 8
  %364 = icmp slt i64 %361, 0
  %365 = select i1 %364, i32 -1, i32 1
  %366 = icmp slt i64 %363, 0
  %367 = sub nsw i32 0, %365
  %368 = select i1 %366, i32 %367, i32 %365
  %369 = sub i64 0, %363
  %370 = select i1 %366, i64 %369, i64 %363
  %371 = sub i64 0, %361
  %372 = select i1 %364, i64 %371, i64 %361
  %373 = mul i64 %370, %372
  %374 = add i64 %373, 32
  %375 = lshr i64 %374, 6
  %376 = icmp slt i32 %368, 0
  %377 = sub nsw i64 0, %375
  %378 = select i1 %376, i64 %377, i64 %375
  store i64 %378, i64* %360, align 8
  br label %379

379:                                              ; preds = %334, %339, %327
  %380 = and i64 %317, 2048
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %382, label %532

382:                                              ; preds = %379
  %383 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %384 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %383, align 8
  %385 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %384, i64 0, i32 2
  %386 = load i32, i32* %385, align 8
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %532, label %388

388:                                              ; preds = %382
  %389 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 1
  %390 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %389, align 8
  %391 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %390, i64 0, i32 24
  %392 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %391, align 8
  %393 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %392, i64 0, i32 0, i32 1
  %394 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %393, align 8
  %395 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %394, i64 0, i32 7
  %396 = load %struct.FT_RendererRec_*, %struct.FT_RendererRec_** %395, align 8
  %397 = icmp eq %struct.FT_RendererRec_* %396, null
  br i1 %397, label %398, label %401

398:                                              ; preds = %388
  %399 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 9
  %400 = load i32, i32* %399, align 8
  br label %407

401:                                              ; preds = %388
  %402 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %396, i64 0, i32 2
  %403 = load i32, i32* %402, align 8
  %404 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 9
  %405 = load i32, i32* %404, align 8
  %406 = icmp eq i32 %403, %405
  br i1 %406, label %428, label %407

407:                                              ; preds = %401, %398
  %408 = phi i32 [ %400, %398 ], [ %405, %401 ]
  %409 = icmp eq %struct.FT_LibraryRec_* %394, null
  br i1 %409, label %437, label %410

410:                                              ; preds = %407
  %411 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %394, i64 0, i32 6, i32 0
  %412 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %411, align 8
  %413 = icmp eq %struct.FT_ListNodeRec_* %412, null
  br i1 %413, label %437, label %414

414:                                              ; preds = %410, %422
  %415 = phi %struct.FT_ListNodeRec_* [ %424, %422 ], [ %412, %410 ]
  %416 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %415, i64 0, i32 2
  %417 = bitcast i8** %416 to %struct.FT_RendererRec_**
  %418 = load %struct.FT_RendererRec_*, %struct.FT_RendererRec_** %417, align 8
  %419 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %418, i64 0, i32 2
  %420 = load i32, i32* %419, align 8
  %421 = icmp eq i32 %420, %408
  br i1 %421, label %426, label %422

422:                                              ; preds = %414
  %423 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %415, i64 0, i32 1
  %424 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %423, align 8
  %425 = icmp eq %struct.FT_ListNodeRec_* %424, null
  br i1 %425, label %437, label %414

426:                                              ; preds = %414
  %427 = icmp eq %struct.FT_RendererRec_* %418, null
  br i1 %427, label %437, label %428

428:                                              ; preds = %401, %426
  %429 = phi %struct.FT_RendererRec_* [ %418, %426 ], [ %396, %401 ]
  %430 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %429, i64 0, i32 1
  %431 = load %struct.FT_Renderer_Class_*, %struct.FT_Renderer_Class_** %430, align 8
  %432 = getelementptr inbounds %struct.FT_Renderer_Class_, %struct.FT_Renderer_Class_* %431, i64 0, i32 3
  %433 = load i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)** %432, align 8
  %434 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %384, i64 0, i32 0
  %435 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %384, i64 0, i32 1
  %436 = tail call i32 %433(%struct.FT_RendererRec_* nonnull %429, %struct.FT_GlyphSlotRec_* %11, %struct.FT_Matrix_* %434, %struct.FT_Vector_* %435) #16
  br label %476

437:                                              ; preds = %422, %410, %407, %426
  %438 = icmp eq i32 %408, 1869968492
  br i1 %438, label %439, label %476

439:                                              ; preds = %437
  %440 = and i32 %386, 1
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %446, label %442

442:                                              ; preds = %439
  %443 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 13
  %444 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %384, i64 0, i32 0
  tail call void @FT_Outline_Transform(%struct.FT_Outline_* %443, %struct.FT_Matrix_* %444)
  %445 = load i32, i32* %385, align 8
  br label %446

446:                                              ; preds = %439, %442
  %447 = phi i32 [ %386, %439 ], [ %445, %442 ]
  %448 = and i32 %447, 2
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %476, label %450

450:                                              ; preds = %446
  %451 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 13
  %452 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %384, i64 0, i32 1, i32 0
  %453 = bitcast i64* %452 to <2 x i64>*
  %454 = load <2 x i64>, <2 x i64>* %453, align 8
  %455 = icmp eq %struct.FT_Outline_* %451, null
  br i1 %455, label %476, label %456

456:                                              ; preds = %450
  %457 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 13, i32 1
  %458 = load i16, i16* %457, align 2
  %459 = icmp sgt i16 %458, 0
  br i1 %459, label %460, label %476

460:                                              ; preds = %456
  %461 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 13, i32 2
  %462 = load %struct.FT_Vector_*, %struct.FT_Vector_** %461, align 8
  br label %463

463:                                              ; preds = %463, %460
  %464 = phi %struct.FT_Vector_* [ %470, %463 ], [ %462, %460 ]
  %465 = phi i16 [ %471, %463 ], [ 0, %460 ]
  %466 = bitcast %struct.FT_Vector_* %464 to <2 x i64>*
  %467 = load <2 x i64>, <2 x i64>* %466, align 8
  %468 = add <2 x i64> %467, %454
  %469 = bitcast %struct.FT_Vector_* %464 to <2 x i64>*
  store <2 x i64> %468, <2 x i64>* %469, align 8
  %470 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %464, i64 1
  %471 = add i16 %465, 1
  %472 = zext i16 %471 to i32
  %473 = load i16, i16* %457, align 2
  %474 = sext i16 %473 to i32
  %475 = icmp slt i32 %472, %474
  br i1 %475, label %463, label %476

476:                                              ; preds = %463, %456, %450, %446, %437, %428
  %477 = phi i32 [ %436, %428 ], [ %318, %446 ], [ %318, %437 ], [ %318, %450 ], [ %318, %456 ], [ %318, %463 ]
  %478 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 8
  %479 = icmp ne %struct.FT_Vector_* %478, null
  %480 = icmp ne %struct.FT_Face_InternalRec_* %384, null
  %481 = and i1 %479, %480
  br i1 %481, label %482, label %532

482:                                              ; preds = %476
  %483 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %478, i64 0, i32 0
  %484 = load i64, i64* %483, align 8
  %485 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %384, i64 0, i32 0, i32 0
  %486 = load i64, i64* %485, align 8
  %487 = shl i64 %484, 32
  %488 = ashr exact i64 %487, 32
  %489 = shl i64 %486, 32
  %490 = ashr exact i64 %489, 32
  %491 = mul nsw i64 %490, %488
  %492 = ashr i64 %491, 63
  %493 = add nsw i64 %491, 32768
  %494 = add nsw i64 %493, %492
  %495 = shl i64 %494, 16
  %496 = ashr i64 %495, 32
  %497 = load i64, i64* %331, align 8
  %498 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %384, i64 0, i32 0, i32 1
  %499 = load i64, i64* %498, align 8
  %500 = shl i64 %497, 32
  %501 = ashr exact i64 %500, 32
  %502 = shl i64 %499, 32
  %503 = ashr exact i64 %502, 32
  %504 = mul nsw i64 %503, %501
  %505 = ashr i64 %504, 63
  %506 = add nsw i64 %504, 32768
  %507 = add nsw i64 %506, %505
  %508 = shl i64 %507, 16
  %509 = ashr i64 %508, 32
  %510 = add nsw i64 %509, %496
  %511 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %384, i64 0, i32 0, i32 2
  %512 = load i64, i64* %511, align 8
  %513 = shl i64 %512, 32
  %514 = ashr exact i64 %513, 32
  %515 = mul nsw i64 %514, %488
  %516 = ashr i64 %515, 63
  %517 = add nsw i64 %515, 32768
  %518 = add nsw i64 %517, %516
  %519 = shl i64 %518, 16
  %520 = ashr i64 %519, 32
  %521 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %384, i64 0, i32 0, i32 3
  %522 = load i64, i64* %521, align 8
  %523 = shl i64 %522, 32
  %524 = ashr exact i64 %523, 32
  %525 = mul nsw i64 %524, %501
  %526 = ashr i64 %525, 63
  %527 = add nsw i64 %525, 32768
  %528 = add nsw i64 %527, %526
  %529 = shl i64 %528, 16
  %530 = ashr i64 %529, 32
  %531 = add nsw i64 %530, %520
  store i64 %510, i64* %483, align 8
  store i64 %531, i64* %331, align 8
  br label %532

532:                                              ; preds = %482, %476, %382, %379
  %533 = phi i32 [ %318, %379 ], [ %318, %382 ], [ %477, %476 ], [ %477, %482 ]
  store i32 %1, i32* %42, align 8
  %534 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %14, align 8
  %535 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %534, i64 0, i32 6
  store i32 %71, i32* %535, align 8
  %536 = icmp eq i32 %533, 0
  br i1 %536, label %537, label %564

537:                                              ; preds = %532
  %538 = and i64 %317, 1
  %539 = icmp eq i64 %538, 0
  br i1 %539, label %540, label %564

540:                                              ; preds = %537
  %541 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 9
  %542 = load i32, i32* %541, align 8
  switch i32 %542, label %543 [
    i32 1651078259, label %564
    i32 1668246896, label %564
  ]

543:                                              ; preds = %540
  %544 = lshr i32 %71, 16
  %545 = and i32 %544, 15
  %546 = icmp eq i32 %545, 0
  %547 = lshr i32 %71, 11
  %548 = and i32 %547, 2
  %549 = select i1 %546, i32 %548, i32 %545
  %550 = and i64 %317, 4
  %551 = icmp eq i64 %550, 0
  br i1 %551, label %562, label %552

552:                                              ; preds = %543
  %553 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %11, i64 0, i32 1
  %554 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %553, align 8
  %555 = icmp eq %struct.FT_FaceRec_* %554, null
  br i1 %555, label %564, label %556

556:                                              ; preds = %552
  %557 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %554, i64 0, i32 24
  %558 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %557, align 8
  %559 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %558, i64 0, i32 0, i32 1
  %560 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %559, align 8
  %561 = tail call i32 @FT_Render_Glyph_Internal(%struct.FT_LibraryRec_* %560, %struct.FT_GlyphSlotRec_* nonnull %11, i32 %549) #16
  br label %564

562:                                              ; preds = %543
  %563 = tail call zeroext i8 @ft_glyphslot_preset_bitmap(%struct.FT_GlyphSlotRec_* %11, i32 %549, %struct.FT_Vector_* null)
  br label %564

564:                                              ; preds = %234, %556, %552, %244, %224, %212, %537, %198, %532, %540, %540, %562, %3, %5, %9
  %565 = phi i32 [ 35, %9 ], [ 35, %5 ], [ 35, %3 ], [ %533, %532 ], [ 0, %540 ], [ 0, %537 ], [ %204, %198 ], [ 0, %540 ], [ 0, %562 ], [ 6, %212 ], [ 6, %224 ], [ 6, %244 ], [ %561, %556 ], [ 6, %552 ], [ 6, %234 ]
  ret i32 %565
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @FT_RoundFix(i64) local_unnamed_addr #2 {
  %2 = ashr i64 %0, 63
  %3 = add i64 %0, 32768
  %4 = add i64 %3, %2
  %5 = and i64 %4, -65536
  ret i64 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @FT_CeilFix(i64) local_unnamed_addr #2 {
  %2 = add i64 %0, 65535
  %3 = and i64 %2, -65536
  ret i64 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @FT_FloorFix(i64) local_unnamed_addr #2 {
  %2 = and i64 %0, -65536
  ret i64 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @FT_Hypot(i64, i64) local_unnamed_addr #0 {
  %3 = alloca %struct.FT_Vector_, align 8
  %4 = bitcast %struct.FT_Vector_* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #16
  %5 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3, i64 0, i32 0
  %6 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3, i64 0, i32 1
  store i64 %0, i64* %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = call i64 @FT_Vector_Length(%struct.FT_Vector_* nonnull %3)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #16
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @FT_Vector_Length(%struct.FT_Vector_* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.FT_Vector_* %0, null
  br i1 %2, label %103, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = icmp slt i64 %7, 0
  %11 = sub nsw i64 0, %7
  %12 = select i1 %10, i64 %11, i64 %7
  br label %103

13:                                               ; preds = %3
  %14 = icmp eq i64 %7, 0
  %15 = icmp slt i64 %5, 0
  %16 = sub nsw i64 0, %5
  %17 = select i1 %15, i64 %16, i64 %5
  br i1 %14, label %103, label %18

18:                                               ; preds = %13
  %19 = icmp slt i64 %7, 0
  %20 = sub nsw i64 0, %7
  %21 = select i1 %19, i64 %20, i64 %7
  %22 = or i64 %21, %17
  %23 = trunc i64 %22 to i32
  %24 = tail call i32 @llvm.ctlz.i32(i32 %23, i1 true) #16, !range !2
  %25 = xor i32 %24, 31
  %26 = icmp ult i32 %25, 30
  br i1 %26, label %27, label %32

27:                                               ; preds = %18
  %28 = sub nuw nsw i32 29, %25
  %29 = zext i32 %28 to i64
  %30 = shl i64 %5, %29
  %31 = shl i64 %7, %29
  br label %38

32:                                               ; preds = %18
  %33 = add nsw i32 %25, -29
  %34 = zext i32 %33 to i64
  %35 = ashr i64 %5, %34
  %36 = ashr i64 %7, %34
  %37 = sub nsw i32 29, %25
  br label %38

38:                                               ; preds = %27, %32
  %39 = phi i64 [ %31, %27 ], [ %36, %32 ]
  %40 = phi i64 [ %30, %27 ], [ %35, %32 ]
  %41 = phi i32 [ %28, %27 ], [ %37, %32 ]
  %42 = icmp sgt i64 %39, %40
  %43 = sub nsw i64 0, %40
  br i1 %42, label %44, label %49

44:                                               ; preds = %38
  %45 = icmp sgt i64 %39, %43
  %46 = sub nsw i64 0, %39
  %47 = select i1 %45, i64 %39, i64 %43
  %48 = select i1 %45, i64 %43, i64 %46
  br label %54

49:                                               ; preds = %38
  %50 = icmp slt i64 %39, %43
  %51 = sub nsw i64 0, %39
  %52 = select i1 %50, i64 %51, i64 %40
  %53 = select i1 %50, i64 %40, i64 %39
  br label %54

54:                                               ; preds = %44, %49
  %55 = phi i64 [ %53, %49 ], [ %48, %44 ]
  %56 = phi i64 [ %52, %49 ], [ %47, %44 ]
  br label %57

57:                                               ; preds = %54, %75
  %58 = phi i64 [ %79, %75 ], [ 1, %54 ]
  %59 = phi i64 [ %78, %75 ], [ 1, %54 ]
  %60 = phi i64 [ %77, %75 ], [ %55, %54 ]
  %61 = phi i64 [ %76, %75 ], [ %56, %54 ]
  %62 = icmp sgt i64 %60, 0
  %63 = add nsw i64 %60, %59
  %64 = ashr i64 %63, %58
  br i1 %62, label %65, label %70

65:                                               ; preds = %57
  %66 = add nsw i64 %64, %61
  %67 = add nsw i64 %61, %59
  %68 = ashr i64 %67, %58
  %69 = sub nsw i64 %60, %68
  br label %75

70:                                               ; preds = %57
  %71 = sub nsw i64 %61, %64
  %72 = add nsw i64 %61, %59
  %73 = ashr i64 %72, %58
  %74 = add nsw i64 %73, %60
  br label %75

75:                                               ; preds = %70, %65
  %76 = phi i64 [ %66, %65 ], [ %71, %70 ]
  %77 = phi i64 [ %69, %65 ], [ %74, %70 ]
  %78 = shl i64 %59, 1
  %79 = add nuw nsw i64 %58, 1
  %80 = icmp eq i64 %79, 23
  br i1 %80, label %81, label %57

81:                                               ; preds = %75
  %82 = icmp slt i64 %76, 0
  %83 = sub nsw i64 0, %76
  %84 = select i1 %82, i64 %83, i64 %76
  %85 = mul i64 %84, 3688454934
  %86 = add i64 %85, 1073741824
  %87 = lshr i64 %86, 32
  %88 = sub nsw i64 0, %87
  %89 = select i1 %82, i64 %88, i64 %87
  %90 = icmp sgt i32 %41, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %81
  %92 = add nsw i32 %41, -1
  %93 = zext i32 %92 to i64
  %94 = shl i64 1, %93
  %95 = add nsw i64 %89, %94
  %96 = zext i32 %41 to i64
  %97 = ashr i64 %95, %96
  br label %103

98:                                               ; preds = %81
  %99 = trunc i64 %89 to i32
  %100 = sub nsw i32 0, %41
  %101 = shl i32 %99, %100
  %102 = zext i32 %101 to i64
  br label %103

103:                                              ; preds = %13, %1, %98, %91, %9
  %104 = phi i64 [ %12, %9 ], [ %97, %91 ], [ %102, %98 ], [ 0, %1 ], [ %17, %13 ]
  ret i64 %104
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @FT_MulDiv(i64, i64, i64) local_unnamed_addr #2 {
  %4 = icmp slt i64 %0, 0
  %5 = select i1 %4, i32 -1, i32 1
  %6 = icmp slt i64 %1, 0
  %7 = sub nsw i32 0, %5
  %8 = select i1 %6, i32 %7, i32 %5
  %9 = icmp slt i64 %2, 0
  %10 = sub i64 0, %2
  %11 = sub nsw i32 0, %8
  %12 = select i1 %9, i32 %11, i32 %8
  %13 = select i1 %9, i64 %10, i64 %2
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %3
  %16 = sub i64 0, %1
  %17 = select i1 %6, i64 %16, i64 %1
  %18 = sub i64 0, %0
  %19 = select i1 %4, i64 %18, i64 %0
  %20 = mul i64 %17, %19
  %21 = lshr i64 %13, 1
  %22 = add i64 %21, %20
  %23 = udiv i64 %22, %13
  br label %24

24:                                               ; preds = %3, %15
  %25 = phi i64 [ %23, %15 ], [ 2147483647, %3 ]
  %26 = icmp slt i32 %12, 0
  %27 = sub i64 0, %25
  %28 = select i1 %26, i64 %27, i64 %25
  ret i64 %28
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @FT_MulDiv_No_Round(i64, i64, i64) local_unnamed_addr #2 {
  %4 = icmp slt i64 %0, 0
  %5 = select i1 %4, i32 -1, i32 1
  %6 = icmp slt i64 %1, 0
  %7 = sub nsw i32 0, %5
  %8 = select i1 %6, i32 %7, i32 %5
  %9 = icmp slt i64 %2, 0
  %10 = sub i64 0, %2
  %11 = sub nsw i32 0, %8
  %12 = select i1 %9, i32 %11, i32 %8
  %13 = select i1 %9, i64 %10, i64 %2
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %3
  %16 = sub i64 0, %1
  %17 = select i1 %6, i64 %16, i64 %1
  %18 = sub i64 0, %0
  %19 = select i1 %4, i64 %18, i64 %0
  %20 = mul i64 %17, %19
  %21 = udiv i64 %20, %13
  br label %22

22:                                               ; preds = %3, %15
  %23 = phi i64 [ %21, %15 ], [ 2147483647, %3 ]
  %24 = icmp slt i32 %12, 0
  %25 = sub i64 0, %23
  %26 = select i1 %24, i64 %25, i64 %23
  ret i64 %26
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @FT_MulFix(i64, i64) local_unnamed_addr #2 {
  %3 = shl i64 %0, 32
  %4 = ashr exact i64 %3, 32
  %5 = shl i64 %1, 32
  %6 = ashr exact i64 %5, 32
  %7 = mul nsw i64 %6, %4
  %8 = ashr i64 %7, 63
  %9 = add nsw i64 %7, 32768
  %10 = add nsw i64 %9, %8
  %11 = shl i64 %10, 16
  %12 = ashr i64 %11, 32
  ret i64 %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @FT_DivFix(i64, i64) local_unnamed_addr #2 {
  %3 = icmp slt i64 %0, 0
  %4 = select i1 %3, i32 -1, i32 1
  %5 = icmp slt i64 %1, 0
  %6 = sub i64 0, %1
  %7 = sub nsw i32 0, %4
  %8 = select i1 %5, i32 %7, i32 %4
  %9 = select i1 %5, i64 %6, i64 %1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = sub i64 0, %0
  %13 = select i1 %3, i64 %12, i64 %0
  %14 = shl i64 %13, 16
  %15 = lshr i64 %9, 1
  %16 = add i64 %15, %14
  %17 = udiv i64 %16, %9
  br label %18

18:                                               ; preds = %2, %11
  %19 = phi i64 [ %17, %11 ], [ 2147483647, %2 ]
  %20 = icmp slt i32 %8, 0
  %21 = sub i64 0, %19
  %22 = select i1 %20, i64 %21, i64 %19
  ret i64 %22
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @FT_Matrix_Multiply(%struct.FT_Matrix_* readonly, %struct.FT_Matrix_*) local_unnamed_addr #3 {
  %3 = icmp ne %struct.FT_Matrix_* %0, null
  %4 = icmp ne %struct.FT_Matrix_* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %91

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %8, 32
  %12 = ashr exact i64 %11, 32
  %13 = shl i64 %10, 32
  %14 = ashr exact i64 %13, 32
  %15 = mul nsw i64 %14, %12
  %16 = ashr i64 %15, 63
  %17 = add nsw i64 %15, 32768
  %18 = add nsw i64 %17, %16
  %19 = shl i64 %18, 16
  %20 = ashr i64 %19, 32
  %21 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %0, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = shl i64 %22, 32
  %26 = ashr exact i64 %25, 32
  %27 = shl i64 %24, 32
  %28 = ashr exact i64 %27, 32
  %29 = mul nsw i64 %28, %26
  %30 = ashr i64 %29, 63
  %31 = add nsw i64 %29, 32768
  %32 = add nsw i64 %31, %30
  %33 = shl i64 %32, 16
  %34 = ashr i64 %33, 32
  %35 = add nsw i64 %34, %20
  %36 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = shl i64 %37, 32
  %39 = ashr exact i64 %38, 32
  %40 = mul nsw i64 %39, %12
  %41 = ashr i64 %40, 63
  %42 = add nsw i64 %40, 32768
  %43 = add nsw i64 %42, %41
  %44 = shl i64 %43, 16
  %45 = ashr i64 %44, 32
  %46 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 3
  %47 = load i64, i64* %46, align 8
  %48 = shl i64 %47, 32
  %49 = ashr exact i64 %48, 32
  %50 = mul nsw i64 %49, %26
  %51 = ashr i64 %50, 63
  %52 = add nsw i64 %50, 32768
  %53 = add nsw i64 %52, %51
  %54 = shl i64 %53, 16
  %55 = ashr i64 %54, 32
  %56 = add nsw i64 %55, %45
  %57 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %0, i64 0, i32 2
  %58 = load i64, i64* %57, align 8
  %59 = shl i64 %58, 32
  %60 = ashr exact i64 %59, 32
  %61 = mul nsw i64 %60, %14
  %62 = ashr i64 %61, 63
  %63 = add nsw i64 %61, 32768
  %64 = add nsw i64 %63, %62
  %65 = shl i64 %64, 16
  %66 = ashr i64 %65, 32
  %67 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %0, i64 0, i32 3
  %68 = load i64, i64* %67, align 8
  %69 = shl i64 %68, 32
  %70 = ashr exact i64 %69, 32
  %71 = mul nsw i64 %70, %28
  %72 = ashr i64 %71, 63
  %73 = add nsw i64 %71, 32768
  %74 = add nsw i64 %73, %72
  %75 = shl i64 %74, 16
  %76 = ashr i64 %75, 32
  %77 = add nsw i64 %76, %66
  %78 = mul nsw i64 %60, %39
  %79 = ashr i64 %78, 63
  %80 = add nsw i64 %78, 32768
  %81 = add nsw i64 %80, %79
  %82 = shl i64 %81, 16
  %83 = ashr i64 %82, 32
  %84 = mul nsw i64 %70, %49
  %85 = ashr i64 %84, 63
  %86 = add nsw i64 %84, 32768
  %87 = add nsw i64 %86, %85
  %88 = shl i64 %87, 16
  %89 = ashr i64 %88, 32
  %90 = add nsw i64 %89, %83
  store i64 %35, i64* %9, align 8
  store i64 %56, i64* %36, align 8
  store i64 %77, i64* %23, align 8
  store i64 %90, i64* %46, align 8
  br label %91

91:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @FT_Matrix_Invert(%struct.FT_Matrix_*) local_unnamed_addr #3 {
  %2 = icmp eq %struct.FT_Matrix_* %0, null
  br i1 %2, label %105, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %5, 32
  %9 = ashr exact i64 %8, 32
  %10 = shl i64 %7, 32
  %11 = ashr exact i64 %10, 32
  %12 = mul nsw i64 %11, %9
  %13 = ashr i64 %12, 63
  %14 = add nsw i64 %12, 32768
  %15 = add nsw i64 %14, %13
  %16 = shl i64 %15, 16
  %17 = ashr i64 %16, 32
  %18 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %0, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = shl i64 %19, 32
  %23 = ashr exact i64 %22, 32
  %24 = shl i64 %21, 32
  %25 = ashr exact i64 %24, 32
  %26 = mul nsw i64 %25, %23
  %27 = ashr i64 %26, 63
  %28 = add nsw i64 %26, 32768
  %29 = add nsw i64 %28, %27
  %30 = shl i64 %29, 16
  %31 = ashr i64 %30, 32
  %32 = sub nsw i64 %17, %31
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %105, label %34

34:                                               ; preds = %3
  %35 = icmp slt i64 %19, 0
  %36 = select i1 %35, i32 -1, i32 1
  %37 = icmp slt i64 %32, 0
  %38 = sub nsw i64 0, %32
  %39 = sub nsw i32 0, %36
  %40 = select i1 %37, i32 %39, i32 %36
  %41 = select i1 %37, i64 %38, i64 %32
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %34
  %44 = sub i64 0, %19
  %45 = select i1 %35, i64 %44, i64 %19
  %46 = shl i64 %45, 16
  %47 = lshr i64 %41, 1
  %48 = add i64 %47, %46
  %49 = udiv i64 %48, %41
  br label %50

50:                                               ; preds = %34, %43
  %51 = phi i64 [ %49, %43 ], [ 2147483647, %34 ]
  %52 = icmp slt i32 %40, 0
  %53 = sub i64 0, %51
  %54 = select i1 %52, i64 %53, i64 %51
  %55 = sub nsw i64 0, %54
  store i64 %55, i64* %18, align 8
  %56 = icmp slt i64 %21, 0
  %57 = select i1 %56, i32 -1, i32 1
  %58 = sub nsw i32 0, %57
  %59 = select i1 %37, i32 %58, i32 %57
  br i1 %42, label %67, label %60

60:                                               ; preds = %50
  %61 = sub i64 0, %21
  %62 = select i1 %56, i64 %61, i64 %21
  %63 = shl i64 %62, 16
  %64 = lshr i64 %41, 1
  %65 = add i64 %64, %63
  %66 = udiv i64 %65, %41
  br label %67

67:                                               ; preds = %50, %60
  %68 = phi i64 [ %66, %60 ], [ 2147483647, %50 ]
  %69 = icmp slt i32 %59, 0
  %70 = sub i64 0, %68
  %71 = select i1 %69, i64 %70, i64 %68
  %72 = sub nsw i64 0, %71
  store i64 %72, i64* %20, align 8
  %73 = icmp slt i64 %7, 0
  %74 = select i1 %73, i32 -1, i32 1
  %75 = sub nsw i32 0, %74
  %76 = select i1 %37, i32 %75, i32 %74
  br i1 %42, label %84, label %77

77:                                               ; preds = %67
  %78 = sub i64 0, %7
  %79 = select i1 %73, i64 %78, i64 %7
  %80 = shl i64 %79, 16
  %81 = lshr i64 %41, 1
  %82 = add i64 %81, %80
  %83 = udiv i64 %82, %41
  br label %84

84:                                               ; preds = %67, %77
  %85 = phi i64 [ %83, %77 ], [ 2147483647, %67 ]
  %86 = icmp slt i32 %76, 0
  %87 = sub i64 0, %85
  %88 = select i1 %86, i64 %87, i64 %85
  store i64 %88, i64* %4, align 8
  %89 = icmp slt i64 %5, 0
  %90 = select i1 %89, i32 -1, i32 1
  %91 = sub nsw i32 0, %90
  %92 = select i1 %37, i32 %91, i32 %90
  br i1 %42, label %100, label %93

93:                                               ; preds = %84
  %94 = sub i64 0, %5
  %95 = select i1 %89, i64 %94, i64 %5
  %96 = shl i64 %95, 16
  %97 = lshr i64 %41, 1
  %98 = add i64 %97, %96
  %99 = udiv i64 %98, %41
  br label %100

100:                                              ; preds = %84, %93
  %101 = phi i64 [ %99, %93 ], [ 2147483647, %84 ]
  %102 = icmp slt i32 %92, 0
  %103 = sub i64 0, %101
  %104 = select i1 %102, i64 %103, i64 %101
  store i64 %104, i64* %6, align 8
  br label %105

105:                                              ; preds = %3, %1, %100
  %106 = phi i32 [ 0, %100 ], [ 6, %1 ], [ 6, %3 ]
  ret i32 %106
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @FT_Matrix_Multiply_Scaled(%struct.FT_Matrix_* readonly, %struct.FT_Matrix_*, i64) local_unnamed_addr #3 {
  %4 = shl nsw i64 %2, 16
  %5 = icmp ne %struct.FT_Matrix_* %0, null
  %6 = icmp ne %struct.FT_Matrix_* %1, null
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %189

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %10, 0
  %14 = select i1 %13, i32 -1, i32 1
  %15 = icmp slt i64 %12, 0
  %16 = sub nsw i32 0, %14
  %17 = select i1 %15, i32 %16, i32 %14
  %18 = icmp slt i64 %2, 0
  %19 = sub i64 0, %4
  %20 = sub nsw i32 0, %17
  %21 = select i1 %18, i32 %20, i32 %17
  %22 = select i1 %18, i64 %19, i64 %4
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %33, label %24

24:                                               ; preds = %8
  %25 = sub i64 0, %12
  %26 = select i1 %15, i64 %25, i64 %12
  %27 = sub i64 0, %10
  %28 = select i1 %13, i64 %27, i64 %10
  %29 = mul i64 %26, %28
  %30 = lshr exact i64 %22, 1
  %31 = add i64 %29, %30
  %32 = udiv i64 %31, %22
  br label %33

33:                                               ; preds = %8, %24
  %34 = phi i64 [ %32, %24 ], [ 2147483647, %8 ]
  %35 = icmp slt i32 %21, 0
  %36 = sub i64 0, %34
  %37 = select i1 %35, i64 %36, i64 %34
  %38 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %0, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = icmp slt i64 %39, 0
  %43 = select i1 %42, i32 -1, i32 1
  %44 = icmp slt i64 %41, 0
  %45 = sub nsw i32 0, %43
  %46 = select i1 %44, i32 %45, i32 %43
  %47 = sub nsw i32 0, %46
  %48 = select i1 %18, i32 %47, i32 %46
  br i1 %23, label %58, label %49

49:                                               ; preds = %33
  %50 = sub i64 0, %41
  %51 = select i1 %44, i64 %50, i64 %41
  %52 = sub i64 0, %39
  %53 = select i1 %42, i64 %52, i64 %39
  %54 = mul i64 %51, %53
  %55 = lshr exact i64 %22, 1
  %56 = add i64 %54, %55
  %57 = udiv i64 %56, %22
  br label %58

58:                                               ; preds = %33, %49
  %59 = phi i64 [ %57, %49 ], [ 2147483647, %33 ]
  %60 = icmp slt i32 %48, 0
  %61 = sub i64 0, %59
  %62 = select i1 %60, i64 %61, i64 %59
  %63 = add i64 %62, %37
  %64 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = icmp slt i64 %65, 0
  %67 = select i1 %66, i32 %16, i32 %14
  %68 = sub nsw i32 0, %67
  %69 = select i1 %18, i32 %68, i32 %67
  br i1 %23, label %79, label %70

70:                                               ; preds = %58
  %71 = sub i64 0, %65
  %72 = select i1 %66, i64 %71, i64 %65
  %73 = sub i64 0, %10
  %74 = select i1 %13, i64 %73, i64 %10
  %75 = mul i64 %72, %74
  %76 = lshr exact i64 %22, 1
  %77 = add i64 %75, %76
  %78 = udiv i64 %77, %22
  br label %79

79:                                               ; preds = %58, %70
  %80 = phi i64 [ %78, %70 ], [ 2147483647, %58 ]
  %81 = icmp slt i32 %69, 0
  %82 = sub i64 0, %80
  %83 = select i1 %81, i64 %82, i64 %80
  %84 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 3
  %85 = load i64, i64* %84, align 8
  %86 = icmp slt i64 %85, 0
  %87 = select i1 %86, i32 %45, i32 %43
  %88 = sub nsw i32 0, %87
  %89 = select i1 %18, i32 %88, i32 %87
  br i1 %23, label %99, label %90

90:                                               ; preds = %79
  %91 = sub i64 0, %85
  %92 = select i1 %86, i64 %91, i64 %85
  %93 = sub i64 0, %39
  %94 = select i1 %42, i64 %93, i64 %39
  %95 = mul i64 %92, %94
  %96 = lshr exact i64 %22, 1
  %97 = add i64 %95, %96
  %98 = udiv i64 %97, %22
  br label %99

99:                                               ; preds = %79, %90
  %100 = phi i64 [ %98, %90 ], [ 2147483647, %79 ]
  %101 = icmp slt i32 %89, 0
  %102 = sub i64 0, %100
  %103 = select i1 %101, i64 %102, i64 %100
  %104 = add i64 %103, %83
  %105 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %0, i64 0, i32 2
  %106 = load i64, i64* %105, align 8
  %107 = icmp slt i64 %106, 0
  %108 = select i1 %107, i32 -1, i32 1
  %109 = sub nsw i32 0, %108
  %110 = select i1 %15, i32 %109, i32 %108
  %111 = sub nsw i32 0, %110
  %112 = select i1 %18, i32 %111, i32 %110
  br i1 %23, label %122, label %113

113:                                              ; preds = %99
  %114 = sub i64 0, %12
  %115 = select i1 %15, i64 %114, i64 %12
  %116 = sub i64 0, %106
  %117 = select i1 %107, i64 %116, i64 %106
  %118 = mul i64 %117, %115
  %119 = lshr exact i64 %22, 1
  %120 = add i64 %118, %119
  %121 = udiv i64 %120, %22
  br label %122

122:                                              ; preds = %99, %113
  %123 = phi i64 [ %121, %113 ], [ 2147483647, %99 ]
  %124 = icmp slt i32 %112, 0
  %125 = sub i64 0, %123
  %126 = select i1 %124, i64 %125, i64 %123
  %127 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %0, i64 0, i32 3
  %128 = load i64, i64* %127, align 8
  %129 = icmp slt i64 %128, 0
  %130 = select i1 %129, i32 -1, i32 1
  %131 = sub nsw i32 0, %130
  %132 = select i1 %44, i32 %131, i32 %130
  %133 = sub nsw i32 0, %132
  %134 = select i1 %18, i32 %133, i32 %132
  br i1 %23, label %144, label %135

135:                                              ; preds = %122
  %136 = sub i64 0, %41
  %137 = select i1 %44, i64 %136, i64 %41
  %138 = sub i64 0, %128
  %139 = select i1 %129, i64 %138, i64 %128
  %140 = mul i64 %139, %137
  %141 = lshr exact i64 %22, 1
  %142 = add i64 %140, %141
  %143 = udiv i64 %142, %22
  br label %144

144:                                              ; preds = %122, %135
  %145 = phi i64 [ %143, %135 ], [ 2147483647, %122 ]
  %146 = icmp slt i32 %134, 0
  %147 = sub i64 0, %145
  %148 = select i1 %146, i64 %147, i64 %145
  %149 = add i64 %148, %126
  %150 = select i1 %66, i32 %109, i32 %108
  %151 = sub nsw i32 0, %150
  %152 = select i1 %18, i32 %151, i32 %150
  br i1 %23, label %153, label %159

153:                                              ; preds = %144
  %154 = icmp slt i32 %152, 0
  %155 = select i1 %154, i64 -2147483647, i64 2147483647
  %156 = select i1 %86, i32 %131, i32 %130
  %157 = sub nsw i32 0, %156
  %158 = select i1 %18, i32 %157, i32 %156
  br label %181

159:                                              ; preds = %144
  %160 = sub i64 0, %65
  %161 = select i1 %66, i64 %160, i64 %65
  %162 = sub i64 0, %106
  %163 = select i1 %107, i64 %162, i64 %106
  %164 = mul i64 %163, %161
  %165 = lshr exact i64 %22, 1
  %166 = add i64 %164, %165
  %167 = udiv i64 %166, %22
  %168 = icmp slt i32 %152, 0
  %169 = sub i64 0, %167
  %170 = select i1 %168, i64 %169, i64 %167
  %171 = select i1 %86, i32 %131, i32 %130
  %172 = sub nsw i32 0, %171
  %173 = select i1 %18, i32 %172, i32 %171
  %174 = sub i64 0, %85
  %175 = select i1 %86, i64 %174, i64 %85
  %176 = sub i64 0, %128
  %177 = select i1 %129, i64 %176, i64 %128
  %178 = mul i64 %177, %175
  %179 = add i64 %178, %165
  %180 = udiv i64 %179, %22
  br label %181

181:                                              ; preds = %153, %159
  %182 = phi i32 [ %173, %159 ], [ %158, %153 ]
  %183 = phi i64 [ %170, %159 ], [ %155, %153 ]
  %184 = phi i64 [ %180, %159 ], [ 2147483647, %153 ]
  %185 = icmp slt i32 %182, 0
  %186 = sub i64 0, %184
  %187 = select i1 %185, i64 %186, i64 %184
  %188 = add i64 %187, %183
  store i64 %63, i64* %11, align 8
  store i64 %104, i64* %64, align 8
  store i64 %149, i64* %40, align 8
  store i64 %188, i64* %84, align 8
  br label %189

189:                                              ; preds = %3, %181
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i8 @FT_Matrix_Check(%struct.FT_Matrix_* readonly) local_unnamed_addr #4 {
  %2 = icmp eq %struct.FT_Matrix_* %0, null
  br i1 %2, label %124, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp slt i64 %5, 0
  %7 = sub i64 0, %5
  %8 = select i1 %6, i64 %7, i64 %5
  %9 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp slt i64 %10, 0
  %12 = sub i64 0, %10
  %13 = select i1 %11, i64 %12, i64 %10
  %14 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %0, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = icmp slt i64 %15, 0
  %17 = sub i64 0, %15
  %18 = select i1 %16, i64 %17, i64 %15
  %19 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %0, i64 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = icmp slt i64 %20, 0
  %22 = sub i64 0, %20
  %23 = select i1 %21, i64 %22, i64 %20
  %24 = icmp sgt i64 %8, 0
  %25 = select i1 %24, i64 %8, i64 0
  %26 = icmp ne i64 %5, 0
  %27 = icmp ne i64 %8, 9223372036854775807
  %28 = and i1 %26, %27
  %29 = select i1 %28, i64 %8, i64 9223372036854775807
  %30 = icmp sgt i64 %13, %25
  %31 = select i1 %30, i64 %13, i64 %25
  %32 = icmp ne i64 %10, 0
  %33 = icmp slt i64 %13, %29
  %34 = and i1 %32, %33
  %35 = select i1 %34, i64 %13, i64 %29
  %36 = icmp sgt i64 %18, %31
  %37 = select i1 %36, i64 %18, i64 %31
  %38 = icmp ne i64 %15, 0
  %39 = icmp slt i64 %18, %35
  %40 = and i1 %38, %39
  %41 = select i1 %40, i64 %18, i64 %35
  %42 = icmp sgt i64 %23, %37
  %43 = select i1 %42, i64 %23, i64 %37
  %44 = icmp ne i64 %20, 0
  %45 = icmp slt i64 %23, %41
  %46 = and i1 %44, %45
  %47 = select i1 %46, i64 %23, i64 %41
  %48 = icmp sgt i64 %43, 2147483647
  br i1 %48, label %124, label %49

49:                                               ; preds = %3
  %50 = icmp sgt i64 %43, 23170
  br i1 %50, label %51, label %101

51:                                               ; preds = %49
  %52 = shl i64 %43, 16
  %53 = or i64 %52, 11584
  %54 = udiv i64 %53, 23170
  %55 = icmp slt i64 %47, 0
  %56 = icmp ult i64 %53, 23170
  br i1 %56, label %64, label %57

57:                                               ; preds = %51
  %58 = sub i64 0, %47
  %59 = select i1 %55, i64 %58, i64 %47
  %60 = shl i64 %59, 16
  %61 = lshr i64 %54, 1
  %62 = add i64 %61, %60
  %63 = udiv i64 %62, %54
  br label %64

64:                                               ; preds = %51, %57
  %65 = phi i64 [ %63, %57 ], [ 2147483647, %51 ]
  %66 = sub nsw i64 0, %65
  %67 = select i1 %55, i64 %66, i64 %65
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %124, label %69

69:                                               ; preds = %64
  br i1 %56, label %70, label %74

70:                                               ; preds = %69
  %71 = select i1 %6, i64 -2147483647, i64 2147483647
  %72 = select i1 %11, i64 -2147483647, i64 2147483647
  %73 = select i1 %16, i64 -2147483647, i64 2147483647
  br label %94

74:                                               ; preds = %69
  %75 = shl i64 %8, 16
  %76 = lshr i64 %54, 1
  %77 = add i64 %76, %75
  %78 = udiv i64 %77, %54
  %79 = sub nsw i64 0, %78
  %80 = select i1 %6, i64 %79, i64 %78
  %81 = shl i64 %13, 16
  %82 = add i64 %76, %81
  %83 = udiv i64 %82, %54
  %84 = sub nsw i64 0, %83
  %85 = select i1 %11, i64 %84, i64 %83
  %86 = shl i64 %18, 16
  %87 = add i64 %76, %86
  %88 = udiv i64 %87, %54
  %89 = sub nsw i64 0, %88
  %90 = select i1 %16, i64 %89, i64 %88
  %91 = shl i64 %23, 16
  %92 = add i64 %76, %91
  %93 = udiv i64 %92, %54
  br label %94

94:                                               ; preds = %74, %70
  %95 = phi i64 [ %90, %74 ], [ %73, %70 ]
  %96 = phi i64 [ %80, %74 ], [ %71, %70 ]
  %97 = phi i64 [ %85, %74 ], [ %72, %70 ]
  %98 = phi i64 [ %93, %74 ], [ 2147483647, %70 ]
  %99 = sub nsw i64 0, %98
  %100 = select i1 %21, i64 %99, i64 %98
  br label %101

101:                                              ; preds = %49, %94
  %102 = phi i64 [ %100, %94 ], [ %20, %49 ]
  %103 = phi i64 [ %95, %94 ], [ %15, %49 ]
  %104 = phi i64 [ %97, %94 ], [ %10, %49 ]
  %105 = phi i64 [ %96, %94 ], [ %5, %49 ]
  %106 = mul nsw i64 %105, %102
  %107 = mul nsw i64 %104, %103
  %108 = sub nsw i64 %106, %107
  %109 = icmp slt i64 %108, 0
  %110 = sub nsw i64 0, %108
  %111 = select i1 %109, i64 %110, i64 %108
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %124, label %113

113:                                              ; preds = %101
  %114 = mul nsw i64 %105, %105
  %115 = mul nsw i64 %104, %104
  %116 = mul nsw i64 %103, %103
  %117 = mul nsw i64 %102, %102
  %118 = add nuw i64 %116, %117
  %119 = add i64 %118, %115
  %120 = add i64 %119, %114
  %121 = udiv i64 %120, %111
  %122 = icmp slt i64 %121, 51
  %123 = zext i1 %122 to i8
  br label %124

124:                                              ; preds = %64, %113, %101, %3, %1
  %125 = phi i8 [ 0, %1 ], [ 0, %3 ], [ 0, %101 ], [ %123, %113 ], [ 0, %64 ]
  ret i8 %125
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @FT_Vector_Transform_Scaled(%struct.FT_Vector_*, %struct.FT_Matrix_* readonly, i64) local_unnamed_addr #3 {
  %4 = shl nsw i64 %2, 16
  %5 = icmp ne %struct.FT_Vector_* %0, null
  %6 = icmp ne %struct.FT_Matrix_* %1, null
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %105

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %10, 0
  %14 = select i1 %13, i32 -1, i32 1
  %15 = icmp slt i64 %12, 0
  %16 = sub nsw i32 0, %14
  %17 = select i1 %15, i32 %16, i32 %14
  %18 = icmp slt i64 %2, 0
  %19 = sub i64 0, %4
  %20 = sub nsw i32 0, %17
  %21 = select i1 %18, i32 %20, i32 %17
  %22 = select i1 %18, i64 %19, i64 %4
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %33, label %24

24:                                               ; preds = %8
  %25 = sub i64 0, %12
  %26 = select i1 %15, i64 %25, i64 %12
  %27 = sub i64 0, %10
  %28 = select i1 %13, i64 %27, i64 %10
  %29 = mul i64 %26, %28
  %30 = lshr exact i64 %22, 1
  %31 = add i64 %29, %30
  %32 = udiv i64 %31, %22
  br label %33

33:                                               ; preds = %8, %24
  %34 = phi i64 [ %32, %24 ], [ 2147483647, %8 ]
  %35 = icmp slt i32 %21, 0
  %36 = sub i64 0, %34
  %37 = select i1 %35, i64 %36, i64 %34
  %38 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = icmp slt i64 %39, 0
  %43 = select i1 %42, i32 -1, i32 1
  %44 = icmp slt i64 %41, 0
  %45 = sub nsw i32 0, %43
  %46 = select i1 %44, i32 %45, i32 %43
  %47 = sub nsw i32 0, %46
  %48 = select i1 %18, i32 %47, i32 %46
  br i1 %23, label %58, label %49

49:                                               ; preds = %33
  %50 = sub i64 0, %41
  %51 = select i1 %44, i64 %50, i64 %41
  %52 = sub i64 0, %39
  %53 = select i1 %42, i64 %52, i64 %39
  %54 = mul i64 %51, %53
  %55 = lshr exact i64 %22, 1
  %56 = add i64 %54, %55
  %57 = udiv i64 %56, %22
  br label %58

58:                                               ; preds = %33, %49
  %59 = phi i64 [ %57, %49 ], [ 2147483647, %33 ]
  %60 = icmp slt i32 %48, 0
  %61 = sub i64 0, %59
  %62 = select i1 %60, i64 %61, i64 %59
  %63 = add i64 %62, %37
  %64 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = icmp slt i64 %65, 0
  %67 = select i1 %66, i32 %16, i32 %14
  %68 = sub nsw i32 0, %67
  %69 = select i1 %18, i32 %68, i32 %67
  br i1 %23, label %79, label %70

70:                                               ; preds = %58
  %71 = sub i64 0, %65
  %72 = select i1 %66, i64 %71, i64 %65
  %73 = sub i64 0, %10
  %74 = select i1 %13, i64 %73, i64 %10
  %75 = mul i64 %72, %74
  %76 = lshr exact i64 %22, 1
  %77 = add i64 %75, %76
  %78 = udiv i64 %77, %22
  br label %79

79:                                               ; preds = %58, %70
  %80 = phi i64 [ %78, %70 ], [ 2147483647, %58 ]
  %81 = icmp slt i32 %69, 0
  %82 = sub i64 0, %80
  %83 = select i1 %81, i64 %82, i64 %80
  %84 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 3
  %85 = load i64, i64* %84, align 8
  %86 = icmp slt i64 %85, 0
  %87 = select i1 %86, i32 %45, i32 %43
  %88 = sub nsw i32 0, %87
  %89 = select i1 %18, i32 %88, i32 %87
  br i1 %23, label %99, label %90

90:                                               ; preds = %79
  %91 = sub i64 0, %85
  %92 = select i1 %86, i64 %91, i64 %85
  %93 = sub i64 0, %39
  %94 = select i1 %42, i64 %93, i64 %39
  %95 = mul i64 %92, %94
  %96 = lshr exact i64 %22, 1
  %97 = add i64 %95, %96
  %98 = udiv i64 %97, %22
  br label %99

99:                                               ; preds = %79, %90
  %100 = phi i64 [ %98, %90 ], [ 2147483647, %79 ]
  %101 = icmp slt i32 %89, 0
  %102 = sub i64 0, %100
  %103 = select i1 %101, i64 %102, i64 %100
  %104 = add i64 %103, %83
  store i64 %63, i64* %9, align 8
  store i64 %104, i64* %38, align 8
  br label %105

105:                                              ; preds = %3, %99
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @FT_Vector_NormLen(%struct.FT_Vector_* nocapture) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  %8 = icmp slt i32 %4, 0
  %9 = sub i32 0, %4
  %10 = select i1 %8, i32 %9, i32 %4
  %11 = select i1 %8, i64 -65536, i64 65536
  %12 = icmp slt i32 %7, 0
  %13 = sub i32 0, %7
  %14 = select i1 %12, i32 %13, i32 %7
  %15 = select i1 %12, i64 -65536, i64 65536
  %16 = icmp eq i32 %10, 0
  %17 = icmp eq i32 %14, 0
  br i1 %16, label %18, label %20

18:                                               ; preds = %1
  br i1 %17, label %94, label %19

19:                                               ; preds = %18
  store i64 %15, i64* %5, align 8
  br label %94

20:                                               ; preds = %1
  br i1 %17, label %21, label %22

21:                                               ; preds = %20
  store i64 %11, i64* %2, align 8
  br label %94

22:                                               ; preds = %20
  %23 = icmp ugt i32 %10, %14
  %24 = lshr i32 %14, 1
  %25 = add nuw i32 %24, %10
  %26 = lshr i32 %10, 1
  %27 = add nuw i32 %14, %26
  %28 = select i1 %23, i32 %25, i32 %27
  %29 = tail call i32 @llvm.ctlz.i32(i32 %28, i1 true), !range !2
  %30 = zext i32 %28 to i64
  %31 = zext i32 %29 to i64
  %32 = lshr i64 2863311530, %31
  %33 = icmp ugt i64 %32, %30
  %34 = select i1 %33, i32 15, i32 16
  %35 = sub nsw i32 %29, %34
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %46

37:                                               ; preds = %22
  %38 = shl i32 %10, %35
  %39 = shl i32 %14, %35
  %40 = icmp ugt i32 %38, %39
  %41 = lshr i32 %39, 1
  %42 = add i32 %41, %38
  %43 = lshr i32 %38, 1
  %44 = add i32 %43, %39
  %45 = select i1 %40, i32 %42, i32 %44
  br label %51

46:                                               ; preds = %22
  %47 = sub nsw i32 0, %35
  %48 = lshr i32 %10, %47
  %49 = lshr i32 %14, %47
  %50 = lshr i32 %28, %47
  br label %51

51:                                               ; preds = %37, %46
  %52 = phi i32 [ %48, %46 ], [ %38, %37 ]
  %53 = phi i32 [ %49, %46 ], [ %39, %37 ]
  %54 = phi i32 [ %50, %46 ], [ %45, %37 ]
  %55 = sub nsw i32 65536, %54
  br label %56

56:                                               ; preds = %56, %51
  %57 = phi i32 [ %55, %51 ], [ %72, %56 ]
  %58 = mul nsw i32 %57, %52
  %59 = ashr i32 %58, 16
  %60 = add nsw i32 %59, %52
  %61 = mul nsw i32 %57, %53
  %62 = ashr i32 %61, 16
  %63 = add nsw i32 %62, %53
  %64 = mul i32 %60, %60
  %65 = mul i32 %63, %63
  %66 = add i32 %64, %65
  %67 = sdiv i32 %66, -512
  %68 = add nsw i32 %57, 65536
  %69 = ashr i32 %68, 8
  %70 = mul nsw i32 %67, %69
  %71 = sdiv i32 %70, 65536
  %72 = add nsw i32 %71, %57
  %73 = icmp sgt i32 %70, 65535
  br i1 %73, label %56, label %74

74:                                               ; preds = %56
  %75 = zext i32 %60 to i64
  %76 = sub nsw i64 0, %75
  %77 = select i1 %8, i64 %76, i64 %75
  store i64 %77, i64* %2, align 8
  %78 = zext i32 %63 to i64
  %79 = sub nsw i64 0, %78
  %80 = select i1 %12, i64 %79, i64 %78
  store i64 %80, i64* %5, align 8
  %81 = mul i32 %60, %52
  %82 = mul i32 %63, %53
  %83 = add i32 %81, %82
  %84 = sdiv i32 %83, 65536
  %85 = add nsw i32 %84, 65536
  br i1 %36, label %86, label %91

86:                                               ; preds = %74
  %87 = add nsw i32 %35, -1
  %88 = shl i32 1, %87
  %89 = add i32 %85, %88
  %90 = lshr i32 %89, %35
  br label %94

91:                                               ; preds = %74
  %92 = sub nsw i32 0, %35
  %93 = shl i32 %85, %92
  br label %94

94:                                               ; preds = %86, %91, %21, %19, %18
  %95 = phi i32 [ 0, %18 ], [ %14, %19 ], [ %10, %21 ], [ %90, %86 ], [ %93, %91 ]
  ret i32 %95
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @ft_corner_orientation(i64, i64, i64, i64) local_unnamed_addr #2 {
  %5 = mul i64 %3, %0
  %6 = mul i64 %2, %1
  %7 = sub i64 %5, %6
  %8 = icmp sgt i64 %7, 0
  %9 = zext i1 %8 to i32
  %10 = lshr i64 %7, 63
  %11 = trunc i64 %10 to i32
  %12 = sub nsw i32 %9, %11
  ret i32 %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @ft_corner_is_flat(i64, i64, i64, i64) local_unnamed_addr #2 {
  %5 = add nsw i64 %2, %0
  %6 = add nsw i64 %3, %1
  %7 = icmp slt i64 %0, 0
  %8 = sub nsw i64 0, %0
  %9 = select i1 %7, i64 %8, i64 %0
  %10 = icmp slt i64 %1, 0
  %11 = sub nsw i64 0, %1
  %12 = select i1 %10, i64 %11, i64 %1
  %13 = icmp sgt i64 %9, %12
  %14 = select i1 %13, i64 %12, i64 %9
  %15 = select i1 %13, i64 %9, i64 %12
  %16 = mul nsw i64 %14, 3
  %17 = lshr i64 %16, 3
  %18 = add nuw nsw i64 %17, %15
  %19 = icmp slt i64 %2, 0
  %20 = sub nsw i64 0, %2
  %21 = select i1 %19, i64 %20, i64 %2
  %22 = icmp slt i64 %3, 0
  %23 = sub nsw i64 0, %3
  %24 = select i1 %22, i64 %23, i64 %3
  %25 = icmp sgt i64 %21, %24
  %26 = select i1 %25, i64 %24, i64 %21
  %27 = select i1 %25, i64 %21, i64 %24
  %28 = mul nsw i64 %26, 3
  %29 = lshr i64 %28, 3
  %30 = add nuw nsw i64 %29, %27
  %31 = icmp slt i64 %5, 0
  %32 = sub nsw i64 0, %5
  %33 = select i1 %31, i64 %32, i64 %5
  %34 = icmp slt i64 %6, 0
  %35 = sub nsw i64 0, %6
  %36 = select i1 %34, i64 %35, i64 %6
  %37 = icmp sgt i64 %33, %36
  %38 = select i1 %37, i64 %36, i64 %33
  %39 = select i1 %37, i64 %33, i64 %36
  %40 = mul nsw i64 %38, 3
  %41 = lshr i64 %40, 3
  %42 = add nuw nsw i64 %41, %39
  %43 = add nuw nsw i64 %30, %18
  %44 = sub nsw i64 %43, %42
  %45 = lshr i64 %42, 4
  %46 = icmp slt i64 %44, %45
  %47 = zext i1 %46 to i32
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Palette_Data_Get(%struct.FT_FaceRec_* readonly, %struct.FT_Palette_Data_*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = icmp eq %struct.FT_Palette_Data_* %1, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 7
  %13 = bitcast %struct.FT_Palette_Data_* %1 to i8*
  %14 = bitcast i32* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %14, i64 40, i1 false)
  br label %17

15:                                               ; preds = %6
  %16 = bitcast %struct.FT_Palette_Data_* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 40, i1 false)
  br label %17

17:                                               ; preds = %11, %15, %4, %2
  %18 = phi i32 [ 35, %2 ], [ 6, %4 ], [ 0, %15 ], [ 0, %11 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Palette_Select(%struct.FT_FaceRec_*, i16 zeroext, %struct.FT_Color_**) local_unnamed_addr #0 {
  %4 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %4, label %31, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = icmp eq %struct.FT_Color_** %2, null
  br i1 %11, label %31, label %12

12:                                               ; preds = %10
  store %struct.FT_Color_* null, %struct.FT_Color_** %2, align 8
  br label %31

13:                                               ; preds = %5
  %14 = bitcast %struct.FT_FaceRec_* %0 to %struct.TT_FaceRec_*
  %15 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 13
  %16 = bitcast i16* %15 to %struct.SFNT_Interface_**
  %17 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %16, align 8
  %18 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %17, i64 0, i32 32
  %19 = load i32 (%struct.TT_FaceRec_*, i32)*, i32 (%struct.TT_FaceRec_*, i32)** %18, align 8
  %20 = zext i16 %1 to i32
  %21 = tail call i32 %19(%struct.TT_FaceRec_* nonnull %14, i32 %20) #16
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %13
  %24 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 11, i32 1
  %25 = bitcast void (i8*)** %24 to i16*
  store i16 %1, i16* %25, align 8
  %26 = icmp eq %struct.FT_Color_** %2, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 12, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %struct.FT_Color_** %2 to i64*
  store i64 %29, i64* %30, align 8
  br label %31

31:                                               ; preds = %27, %23, %13, %12, %10, %3
  %32 = phi i32 [ 35, %3 ], [ 0, %10 ], [ 0, %12 ], [ %21, %13 ], [ 0, %23 ], [ 0, %27 ]
  ret i32 %32
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @FT_Palette_Set_Foreground_Color(%struct.FT_FaceRec_*, i32) local_unnamed_addr #3 {
  %3 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %4
  %10 = bitcast %struct.FT_FaceRec_* %0 to %struct.TT_FaceRec_*
  %11 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %10, i64 0, i32 36
  %12 = bitcast %struct.FT_Color_* %11 to i32*
  store i32 %1, i32* %12, align 1
  %13 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 4, i32 12, i32 1
  %14 = bitcast i64* %13 to i8*
  store i8 1, i8* %14, align 8
  br label %15

15:                                               ; preds = %4, %2, %9
  %16 = phi i32 [ 0, %9 ], [ 35, %2 ], [ 0, %4 ]
  ret i32 %16
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias i8* @FT_Error_String(i32) local_unnamed_addr #2 {
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @FT_Get_Font_Format(%struct.FT_FaceRec_* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %5 = bitcast %struct.FT_DriverRec_** %4 to %struct.FT_ModuleRec_**
  %6 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %6, i64 0, i32 0
  %8 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %8, i64 0, i32 8
  %10 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %9, align 8
  %11 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i8* %10(%struct.FT_ModuleRec_* %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0)) #16
  br label %14

14:                                               ; preds = %12, %3, %1
  %15 = phi i8* [ null, %1 ], [ %13, %12 ], [ null, %3 ]
  ret i8* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @FT_Get_X11_Font_Format(%struct.FT_FaceRec_* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %5 = bitcast %struct.FT_DriverRec_** %4 to %struct.FT_ModuleRec_**
  %6 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %6, i64 0, i32 0
  %8 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %8, i64 0, i32 8
  %10 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %9, align 8
  %11 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i8* %10(%struct.FT_ModuleRec_* %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0)) #16
  br label %14

14:                                               ; preds = %12, %3, %1
  %15 = phi i8* [ null, %1 ], [ %13, %12 ], [ null, %3 ]
  ret i8* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_GlyphLoader_New(%struct.FT_MemoryRec_*, %struct.FT_GlyphLoaderRec_** nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %0, i64 0, i32 1
  %4 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %3, align 8
  %5 = tail call i8* %4(%struct.FT_MemoryRec_* %0, i64 176) #16
  %6 = icmp eq i8* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %8, i8 0, i64 168, i1 false) #16
  %9 = bitcast i8* %5 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %0, %struct.FT_MemoryRec_** %9, align 8
  %10 = bitcast %struct.FT_GlyphLoaderRec_** %1 to i8**
  store i8* %5, i8** %10, align 8
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi i32 [ 0, %7 ], [ 64, %2 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ft_mem_alloc(%struct.FT_MemoryRec_*, i64, i32* nocapture) local_unnamed_addr #0 {
  %4 = icmp sgt i64 %1, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = icmp eq i64 %1, 0
  %7 = select i1 %6, i32 0, i32 6
  br label %16

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %0, i64 0, i32 1
  %10 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %9, align 8
  %11 = tail call i8* %10(%struct.FT_MemoryRec_* %0, i64 %1) #16
  %12 = icmp eq i8* %11, null
  %13 = select i1 %12, i32 64, i32 0
  %14 = icmp eq i8* %11, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %11, i8 0, i64 %1, i1 false)
  br label %16

16:                                               ; preds = %8, %5, %15
  %17 = phi i8* [ null, %5 ], [ null, %8 ], [ %11, %15 ]
  %18 = phi i32 [ %7, %5 ], [ %13, %8 ], [ 0, %15 ]
  store i32 %18, i32* %2, align 4
  ret i8* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_GlyphLoader_Rewind(%struct.FT_GlyphLoaderRec_* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5
  %3 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6
  %4 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 1
  store i16 0, i16* %4, align 2
  %5 = getelementptr inbounds %struct.FT_GlyphLoadRec_, %struct.FT_GlyphLoadRec_* %2, i64 0, i32 0, i32 0
  store i16 0, i16* %5, align 8
  %6 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 5
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 3
  store i32 0, i32* %7, align 8
  %8 = bitcast %struct.FT_GlyphLoadRec_* %3 to i8*
  %9 = bitcast %struct.FT_GlyphLoadRec_* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 72, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_GlyphLoader_Reset(%struct.FT_GlyphLoaderRec_* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 0
  %3 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %2, align 8
  %4 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 2
  %5 = bitcast %struct.FT_Vector_** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %3, i64 0, i32 2
  %10 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %9, align 8
  tail call void %10(%struct.FT_MemoryRec_* %3, i8* nonnull %6) #16
  br label %11

11:                                               ; preds = %1, %8
  store %struct.FT_Vector_* null, %struct.FT_Vector_** %4, align 8
  %12 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 3
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %3, i64 0, i32 2
  %17 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %16, align 8
  tail call void %17(%struct.FT_MemoryRec_* %3, i8* nonnull %13) #16
  br label %18

18:                                               ; preds = %11, %15
  store i8* null, i8** %12, align 8
  %19 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 4
  %20 = bitcast i16** %19 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %3, i64 0, i32 2
  %25 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %24, align 8
  tail call void %25(%struct.FT_MemoryRec_* %3, i8* nonnull %21) #16
  br label %26

26:                                               ; preds = %18, %23
  store i16* null, i16** %19, align 8
  %27 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 1
  %28 = bitcast %struct.FT_Vector_** %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %3, i64 0, i32 2
  %33 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %32, align 8
  tail call void %33(%struct.FT_MemoryRec_* %3, i8* nonnull %29) #16
  br label %34

34:                                               ; preds = %26, %31
  store %struct.FT_Vector_* null, %struct.FT_Vector_** %27, align 8
  %35 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 4
  %36 = bitcast %struct.FT_SubGlyphRec_** %35 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %3, i64 0, i32 2
  %41 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %40, align 8
  tail call void %41(%struct.FT_MemoryRec_* %3, i8* nonnull %37) #16
  br label %42

42:                                               ; preds = %34, %39
  store %struct.FT_SubGlyphRec_* null, %struct.FT_SubGlyphRec_** %35, align 8
  %43 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 2
  store %struct.FT_Vector_* null, %struct.FT_Vector_** %43, align 8
  %44 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 1
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 2
  store i32 0, i32* %45, align 4
  %46 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 3
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5
  %48 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6
  %49 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 1
  store i16 0, i16* %49, align 2
  %50 = getelementptr inbounds %struct.FT_GlyphLoadRec_, %struct.FT_GlyphLoadRec_* %47, i64 0, i32 0, i32 0
  store i16 0, i16* %50, align 8
  %51 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 5
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 3
  store i32 0, i32* %52, align 8
  %53 = bitcast %struct.FT_GlyphLoadRec_* %48 to i8*
  %54 = bitcast %struct.FT_GlyphLoadRec_* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 72, i1 false) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ft_mem_free(%struct.FT_MemoryRec_*, i8*) local_unnamed_addr #0 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %0, i64 0, i32 2
  %6 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %5, align 8
  tail call void %6(%struct.FT_MemoryRec_* %0, i8* nonnull %1) #16
  br label %7

7:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_GlyphLoader_Done(%struct.FT_GlyphLoaderRec_*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.FT_GlyphLoaderRec_* %0, null
  br i1 %2, label %60, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 0
  %5 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %4, align 8
  %6 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 2
  %7 = bitcast %struct.FT_Vector_** %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %5, i64 0, i32 2
  %12 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %11, align 8
  tail call void %12(%struct.FT_MemoryRec_* %5, i8* nonnull %8) #16
  br label %13

13:                                               ; preds = %10, %3
  store %struct.FT_Vector_* null, %struct.FT_Vector_** %6, align 8
  %14 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 3
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %5, i64 0, i32 2
  %19 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %18, align 8
  tail call void %19(%struct.FT_MemoryRec_* %5, i8* nonnull %15) #16
  br label %20

20:                                               ; preds = %17, %13
  store i8* null, i8** %14, align 8
  %21 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 4
  %22 = bitcast i16** %21 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %5, i64 0, i32 2
  %27 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %26, align 8
  tail call void %27(%struct.FT_MemoryRec_* %5, i8* nonnull %23) #16
  br label %28

28:                                               ; preds = %25, %20
  store i16* null, i16** %21, align 8
  %29 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 1
  %30 = bitcast %struct.FT_Vector_** %29 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %5, i64 0, i32 2
  %35 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %34, align 8
  tail call void %35(%struct.FT_MemoryRec_* %5, i8* nonnull %31) #16
  br label %36

36:                                               ; preds = %33, %28
  store %struct.FT_Vector_* null, %struct.FT_Vector_** %29, align 8
  %37 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 4
  %38 = bitcast %struct.FT_SubGlyphRec_** %37 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %5, i64 0, i32 2
  %43 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %42, align 8
  tail call void %43(%struct.FT_MemoryRec_* %5, i8* nonnull %39) #16
  br label %44

44:                                               ; preds = %36, %41
  store %struct.FT_SubGlyphRec_* null, %struct.FT_SubGlyphRec_** %37, align 8
  %45 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 2
  store %struct.FT_Vector_* null, %struct.FT_Vector_** %45, align 8
  %46 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 1
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 2
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 3
  store i32 0, i32* %48, align 8
  %49 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5
  %50 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6
  %51 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 1
  store i16 0, i16* %51, align 2
  %52 = getelementptr inbounds %struct.FT_GlyphLoadRec_, %struct.FT_GlyphLoadRec_* %49, i64 0, i32 0, i32 0
  store i16 0, i16* %52, align 8
  %53 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 5
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 3
  store i32 0, i32* %54, align 8
  %55 = bitcast %struct.FT_GlyphLoadRec_* %50 to i8*
  %56 = bitcast %struct.FT_GlyphLoadRec_* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 72, i1 false) #16
  %57 = bitcast %struct.FT_GlyphLoaderRec_* %0 to i8*
  %58 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %5, i64 0, i32 2
  %59 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %58, align 8
  tail call void %59(%struct.FT_MemoryRec_* %5, i8* nonnull %57) #16
  br label %60

60:                                               ; preds = %1, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_GlyphLoader_CreateExtra(%struct.FT_GlyphLoaderRec_* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 0
  %3 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %2, align 8
  %4 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %78, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 1
  %9 = load %struct.FT_Vector_*, %struct.FT_Vector_** %8, align 8
  %10 = icmp eq %struct.FT_Vector_* %9, null
  br i1 %10, label %11, label %78

11:                                               ; preds = %7
  %12 = shl i32 %5, 1
  %13 = zext i32 %12 to i64
  %14 = icmp eq i32 %12, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %11
  %16 = icmp ugt i32 %12, 134217727
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %struct.FT_Vector_** %8 to i8**
  store i8* null, i8** %18, align 8
  br label %78

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %3, i64 0, i32 1
  %21 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %20, align 8
  %22 = shl nuw nsw i64 %13, 4
  %23 = tail call i8* %21(%struct.FT_MemoryRec_* %3, i64 %22) #16
  %24 = icmp eq i8* %23, null
  br i1 %24, label %39, label %25

25:                                               ; preds = %19
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %23, i8 0, i64 %22, i1 false) #16
  %26 = load i32, i32* %4, align 8
  br label %27

27:                                               ; preds = %25, %11
  %28 = phi i32 [ %5, %11 ], [ %26, %25 ]
  %29 = phi i8* [ null, %11 ], [ %23, %25 ]
  %30 = bitcast %struct.FT_Vector_** %8 to i8**
  store i8* %29, i8** %30, align 8
  %31 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 4
  store i8 1, i8* %31, align 4
  %32 = bitcast i8* %29 to %struct.FT_Vector_*
  %33 = zext i32 %28 to i64
  %34 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %32, i64 %33
  %35 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 2
  store %struct.FT_Vector_* %34, %struct.FT_Vector_** %35, align 8
  %36 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 2
  %37 = load %struct.FT_Vector_*, %struct.FT_Vector_** %36, align 8
  %38 = icmp eq %struct.FT_Vector_* %37, null
  br i1 %38, label %46, label %41

39:                                               ; preds = %19
  %40 = bitcast %struct.FT_Vector_** %8 to i8**
  store i8* null, i8** %40, align 8
  br label %78

41:                                               ; preds = %27
  %42 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 1
  %43 = load i16, i16* %42, align 2
  %44 = sext i16 %43 to i64
  %45 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %37, i64 %44
  br label %46

46:                                               ; preds = %41, %27
  %47 = phi %struct.FT_Vector_* [ %45, %41 ], [ null, %27 ]
  %48 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 2
  store %struct.FT_Vector_* %47, %struct.FT_Vector_** %48, align 8
  %49 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 1
  %54 = load i16, i16* %53, align 2
  %55 = sext i16 %54 to i64
  %56 = getelementptr inbounds i8, i8* %50, i64 %55
  br label %57

57:                                               ; preds = %52, %46
  %58 = phi i8* [ %56, %52 ], [ null, %46 ]
  %59 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 3
  store i8* %58, i8** %59, align 8
  %60 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 4
  %61 = load i16*, i16** %60, align 8
  %62 = icmp eq i16* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 0
  %65 = load i16, i16* %64, align 8
  %66 = sext i16 %65 to i64
  %67 = getelementptr inbounds i16, i16* %61, i64 %66
  br label %68

68:                                               ; preds = %63, %57
  %69 = phi i16* [ %67, %63 ], [ null, %57 ]
  %70 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 4
  store i16* %69, i16** %70, align 8
  %71 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 1
  %72 = load i16, i16* %71, align 2
  %73 = sext i16 %72 to i64
  %74 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %32, i64 %73
  %75 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 1
  store %struct.FT_Vector_* %74, %struct.FT_Vector_** %75, align 8
  %76 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %34, i64 %73
  %77 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 2
  store %struct.FT_Vector_* %76, %struct.FT_Vector_** %77, align 8
  br label %78

78:                                               ; preds = %39, %68, %17, %1, %7
  %79 = phi i32 [ 0, %7 ], [ 0, %1 ], [ 64, %39 ], [ 0, %68 ], [ 10, %17 ]
  ret i32 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ft_mem_realloc(%struct.FT_MemoryRec_*, i64, i64, i64, i8*, i32* nocapture) local_unnamed_addr #0 {
  %7 = or i64 %2, %1
  %8 = or i64 %7, %3
  %9 = icmp slt i64 %8, 0
  br i1 %9, label %53, label %10

10:                                               ; preds = %6
  %11 = icmp eq i64 %3, 0
  %12 = icmp eq i64 %1, 0
  %13 = or i1 %12, %11
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = icmp eq i8* %4, null
  br i1 %15, label %53, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %0, i64 0, i32 2
  %18 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %17, align 8
  tail call void %18(%struct.FT_MemoryRec_* %0, i8* nonnull %4) #16
  br label %53

19:                                               ; preds = %10
  %20 = sdiv i64 2147483647, %1
  %21 = icmp slt i64 %20, %3
  br i1 %21, label %53, label %22

22:                                               ; preds = %19
  %23 = icmp eq i64 %2, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %0, i64 0, i32 1
  %26 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %25, align 8
  %27 = mul nsw i64 %3, %1
  %28 = tail call i8* %26(%struct.FT_MemoryRec_* %0, i64 %27) #16
  %29 = icmp eq i8* %28, null
  %30 = select i1 %29, i32 64, i32 0
  br label %40

31:                                               ; preds = %22
  %32 = mul nsw i64 %2, %1
  %33 = mul nsw i64 %3, %1
  %34 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %0, i64 0, i32 3
  %35 = load i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)** %34, align 8
  %36 = tail call i8* %35(%struct.FT_MemoryRec_* %0, i64 %32, i64 %33, i8* %4) #16
  %37 = icmp eq i8* %36, null
  %38 = select i1 %37, i32 64, i32 0
  %39 = select i1 %37, i8* %4, i8* %36
  br label %40

40:                                               ; preds = %24, %31
  %41 = phi i32 [ %38, %31 ], [ %30, %24 ]
  %42 = phi i8* [ %39, %31 ], [ %28, %24 ]
  %43 = icmp eq i32 %41, 0
  %44 = icmp ne i8* %42, null
  %45 = and i1 %43, %44
  %46 = icmp sgt i64 %3, %2
  %47 = and i1 %46, %45
  br i1 %47, label %48, label %53

48:                                               ; preds = %40
  %49 = mul nsw i64 %2, %1
  %50 = getelementptr inbounds i8, i8* %42, i64 %49
  %51 = sub nsw i64 %3, %2
  %52 = mul nsw i64 %51, %1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %50, i8 0, i64 %52, i1 false)
  br label %53

53:                                               ; preds = %16, %14, %19, %6, %40, %48
  %54 = phi i8* [ %42, %40 ], [ %42, %48 ], [ null, %16 ], [ null, %14 ], [ %4, %19 ], [ %4, %6 ]
  %55 = phi i32 [ %41, %40 ], [ 0, %48 ], [ 0, %16 ], [ 0, %14 ], [ 10, %19 ], [ 6, %6 ]
  store i32 %55, i32* %5, align 4
  ret i8* %54
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_GlyphLoader_CheckPoints(%struct.FT_GlyphLoaderRec_*, i32, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 0
  %5 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %4, align 8
  %6 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %80, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 1
  %11 = load %struct.FT_Vector_*, %struct.FT_Vector_** %10, align 8
  %12 = icmp eq %struct.FT_Vector_* %11, null
  br i1 %12, label %13, label %80

13:                                               ; preds = %9
  %14 = shl i32 %7, 1
  %15 = zext i32 %14 to i64
  %16 = icmp eq i32 %14, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %13
  %18 = icmp ugt i32 %14, 134217727
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %struct.FT_Vector_** %10 to i8**
  store i8* null, i8** %20, align 8
  br label %475

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %5, i64 0, i32 1
  %23 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %22, align 8
  %24 = shl nuw nsw i64 %15, 4
  %25 = tail call i8* %23(%struct.FT_MemoryRec_* %5, i64 %24) #16
  %26 = icmp eq i8* %25, null
  br i1 %26, label %41, label %27

27:                                               ; preds = %21
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %25, i8 0, i64 %24, i1 false) #16
  %28 = load i32, i32* %6, align 8
  br label %29

29:                                               ; preds = %27, %13
  %30 = phi i32 [ %7, %13 ], [ %28, %27 ]
  %31 = phi i8* [ null, %13 ], [ %25, %27 ]
  %32 = bitcast %struct.FT_Vector_** %10 to i8**
  store i8* %31, i8** %32, align 8
  %33 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 4
  store i8 1, i8* %33, align 4
  %34 = bitcast i8* %31 to %struct.FT_Vector_*
  %35 = zext i32 %30 to i64
  %36 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %34, i64 %35
  %37 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 2
  store %struct.FT_Vector_* %36, %struct.FT_Vector_** %37, align 8
  %38 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 2
  %39 = load %struct.FT_Vector_*, %struct.FT_Vector_** %38, align 8
  %40 = icmp eq %struct.FT_Vector_* %39, null
  br i1 %40, label %48, label %43

41:                                               ; preds = %21
  %42 = bitcast %struct.FT_Vector_** %10 to i8**
  store i8* null, i8** %42, align 8
  br label %475

43:                                               ; preds = %29
  %44 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 1
  %45 = load i16, i16* %44, align 2
  %46 = sext i16 %45 to i64
  %47 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %39, i64 %46
  br label %48

48:                                               ; preds = %43, %29
  %49 = phi %struct.FT_Vector_* [ %47, %43 ], [ null, %29 ]
  %50 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 2
  store %struct.FT_Vector_* %49, %struct.FT_Vector_** %50, align 8
  %51 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 3
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 1
  %56 = load i16, i16* %55, align 2
  %57 = sext i16 %56 to i64
  %58 = getelementptr inbounds i8, i8* %52, i64 %57
  br label %59

59:                                               ; preds = %54, %48
  %60 = phi i8* [ %58, %54 ], [ null, %48 ]
  %61 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 3
  store i8* %60, i8** %61, align 8
  %62 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 4
  %63 = load i16*, i16** %62, align 8
  %64 = icmp eq i16* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 0
  %67 = load i16, i16* %66, align 8
  %68 = sext i16 %67 to i64
  %69 = getelementptr inbounds i16, i16* %63, i64 %68
  br label %70

70:                                               ; preds = %65, %59
  %71 = phi i16* [ %69, %65 ], [ null, %59 ]
  %72 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 4
  store i16* %71, i16** %72, align 8
  %73 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 1
  %74 = load i16, i16* %73, align 2
  %75 = sext i16 %74 to i64
  %76 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %34, i64 %75
  %77 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 1
  store %struct.FT_Vector_* %76, %struct.FT_Vector_** %77, align 8
  %78 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %36, i64 %75
  %79 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 2
  store %struct.FT_Vector_* %78, %struct.FT_Vector_** %79, align 8
  br label %80

80:                                               ; preds = %9, %3, %70
  %81 = phi i32 [ %7, %9 ], [ 0, %3 ], [ %30, %70 ]
  %82 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 1
  %83 = load i16, i16* %82, align 2
  %84 = sext i16 %83 to i32
  %85 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 1
  %86 = load i16, i16* %85, align 2
  %87 = sext i16 %86 to i32
  %88 = add i32 %84, %1
  %89 = add i32 %88, %87
  %90 = icmp ugt i32 %89, %81
  br i1 %90, label %91, label %240

91:                                               ; preds = %80
  %92 = add i32 %89, 7
  %93 = and i32 %92, -8
  %94 = icmp ugt i32 %93, 32767
  br i1 %94, label %475, label %95

95:                                               ; preds = %91
  %96 = zext i32 %81 to i64
  %97 = zext i32 %93 to i64
  %98 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 2
  %99 = bitcast %struct.FT_Vector_** %98 to i8**
  %100 = load i8*, i8** %99, align 8
  %101 = icmp eq i32 %93, 0
  br i1 %101, label %102, label %107

102:                                              ; preds = %95
  %103 = icmp eq i8* %100, null
  br i1 %103, label %139, label %104

104:                                              ; preds = %102
  %105 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %5, i64 0, i32 2
  %106 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %105, align 8
  tail call void %106(%struct.FT_MemoryRec_* %5, i8* nonnull %100) #16
  br label %139

107:                                              ; preds = %95
  %108 = icmp eq i32 %81, 0
  br i1 %108, label %109, label %116

109:                                              ; preds = %107
  %110 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %5, i64 0, i32 1
  %111 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %110, align 8
  %112 = shl nuw nsw i64 %97, 4
  %113 = tail call i8* %111(%struct.FT_MemoryRec_* %5, i64 %112) #16
  %114 = icmp eq i8* %113, null
  %115 = select i1 %114, i32 64, i32 0
  br label %125

116:                                              ; preds = %107
  %117 = shl nuw nsw i64 %96, 4
  %118 = shl nuw nsw i64 %97, 4
  %119 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %5, i64 0, i32 3
  %120 = load i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)** %119, align 8
  %121 = tail call i8* %120(%struct.FT_MemoryRec_* %5, i64 %117, i64 %118, i8* %100) #16
  %122 = icmp eq i8* %121, null
  %123 = select i1 %122, i32 64, i32 0
  %124 = select i1 %122, i8* %100, i8* %121
  br label %125

125:                                              ; preds = %116, %109
  %126 = phi i32 [ %123, %116 ], [ %115, %109 ]
  %127 = phi i8* [ %124, %116 ], [ %113, %109 ]
  %128 = icmp eq i32 %126, 0
  %129 = icmp ne i8* %127, null
  %130 = and i1 %128, %129
  %131 = icmp ugt i32 %93, %81
  %132 = and i1 %131, %130
  br i1 %132, label %134, label %133

133:                                              ; preds = %125
  store i8* %127, i8** %99, align 8
  br i1 %128, label %146, label %423

134:                                              ; preds = %125
  %135 = shl nuw nsw i64 %96, 4
  %136 = getelementptr inbounds i8, i8* %127, i64 %135
  %137 = sub nsw i64 %97, %96
  %138 = shl nsw i64 %137, 4
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %136, i8 0, i64 %138, i1 false) #16
  store i8* %127, i8** %99, align 8
  br label %146

139:                                              ; preds = %104, %102
  store i8* null, i8** %99, align 8
  %140 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 3
  %141 = load i8*, i8** %140, align 8
  %142 = icmp eq i8* %141, null
  br i1 %142, label %172, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %5, i64 0, i32 2
  %145 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %144, align 8
  tail call void %145(%struct.FT_MemoryRec_* %5, i8* nonnull %141) #16
  br label %172

146:                                              ; preds = %134, %133
  %147 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 3
  %148 = load i8*, i8** %147, align 8
  br i1 %108, label %149, label %155

149:                                              ; preds = %146
  %150 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %5, i64 0, i32 1
  %151 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %150, align 8
  %152 = tail call i8* %151(%struct.FT_MemoryRec_* %5, i64 %97) #16
  %153 = icmp eq i8* %152, null
  %154 = select i1 %153, i32 64, i32 0
  br label %162

155:                                              ; preds = %146
  %156 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %5, i64 0, i32 3
  %157 = load i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)** %156, align 8
  %158 = tail call i8* %157(%struct.FT_MemoryRec_* %5, i64 %96, i64 %97, i8* %148) #16
  %159 = icmp eq i8* %158, null
  %160 = select i1 %159, i32 64, i32 0
  %161 = select i1 %159, i8* %148, i8* %158
  br label %162

162:                                              ; preds = %155, %149
  %163 = phi i32 [ %160, %155 ], [ %154, %149 ]
  %164 = phi i8* [ %161, %155 ], [ %152, %149 ]
  %165 = icmp eq i32 %163, 0
  %166 = icmp ne i8* %164, null
  %167 = and i1 %165, %166
  %168 = and i1 %131, %167
  br i1 %168, label %169, label %175

169:                                              ; preds = %162
  %170 = getelementptr inbounds i8, i8* %164, i64 %96
  %171 = sub nsw i64 %97, %96
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %170, i8 0, i64 %171, i1 false) #16
  br label %172

172:                                              ; preds = %169, %143, %139
  %173 = phi i8** [ %140, %139 ], [ %140, %143 ], [ %147, %169 ]
  %174 = phi i8* [ null, %139 ], [ null, %143 ], [ %164, %169 ]
  store i8* %174, i8** %173, align 8
  br label %176

175:                                              ; preds = %162
  store i8* %164, i8** %147, align 8
  br i1 %165, label %176, label %423

176:                                              ; preds = %172, %175
  %177 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 4
  %178 = load i8, i8* %177, align 4
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %239, label %180

180:                                              ; preds = %176
  %181 = shl i32 %81, 1
  %182 = zext i32 %181 to i64
  %183 = shl i32 %93, 1
  %184 = zext i32 %183 to i64
  %185 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 1
  %186 = bitcast %struct.FT_Vector_** %185 to i8**
  %187 = load i8*, i8** %186, align 8
  %188 = icmp eq i32 %183, 0
  br i1 %188, label %189, label %194

189:                                              ; preds = %180
  %190 = icmp eq i8* %187, null
  br i1 %190, label %225, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %5, i64 0, i32 2
  %193 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %192, align 8
  tail call void %193(%struct.FT_MemoryRec_* %5, i8* nonnull %187) #16
  br label %225

194:                                              ; preds = %180
  %195 = icmp eq i32 %181, 0
  br i1 %195, label %196, label %203

196:                                              ; preds = %194
  %197 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %5, i64 0, i32 1
  %198 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %197, align 8
  %199 = shl nuw nsw i64 %184, 4
  %200 = tail call i8* %198(%struct.FT_MemoryRec_* %5, i64 %199) #16
  %201 = icmp eq i8* %200, null
  %202 = select i1 %201, i32 64, i32 0
  br label %212

203:                                              ; preds = %194
  %204 = shl nuw nsw i64 %182, 4
  %205 = shl nuw nsw i64 %184, 4
  %206 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %5, i64 0, i32 3
  %207 = load i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)** %206, align 8
  %208 = tail call i8* %207(%struct.FT_MemoryRec_* %5, i64 %204, i64 %205, i8* %187) #16
  %209 = icmp eq i8* %208, null
  %210 = select i1 %209, i32 64, i32 0
  %211 = select i1 %209, i8* %187, i8* %208
  br label %212

212:                                              ; preds = %203, %196
  %213 = phi i32 [ %210, %203 ], [ %202, %196 ]
  %214 = phi i8* [ %211, %203 ], [ %200, %196 ]
  %215 = icmp eq i32 %213, 0
  %216 = icmp ne i8* %214, null
  %217 = and i1 %215, %216
  %218 = icmp ugt i32 %183, %181
  %219 = and i1 %218, %217
  br i1 %219, label %220, label %227

220:                                              ; preds = %212
  %221 = shl nuw nsw i64 %182, 4
  %222 = getelementptr inbounds i8, i8* %214, i64 %221
  %223 = sub nsw i64 %184, %182
  %224 = shl nsw i64 %223, 4
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %222, i8 0, i64 %224, i1 false) #16
  br label %225

225:                                              ; preds = %220, %191, %189
  %226 = phi i8* [ null, %189 ], [ null, %191 ], [ %214, %220 ]
  store i8* %226, i8** %186, align 8
  br label %228

227:                                              ; preds = %212
  store i8* %214, i8** %186, align 8
  br i1 %215, label %228, label %423

228:                                              ; preds = %225, %227
  %229 = phi i8* [ %226, %225 ], [ %214, %227 ]
  %230 = bitcast i8* %229 to %struct.FT_Vector_*
  %231 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %230, i64 %97
  %232 = bitcast %struct.FT_Vector_* %231 to i8*
  %233 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %230, i64 %96
  %234 = bitcast %struct.FT_Vector_* %233 to i8*
  %235 = shl nuw nsw i64 %96, 4
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %232, i8* align 8 %234, i64 %235, i1 false)
  %236 = load %struct.FT_Vector_*, %struct.FT_Vector_** %185, align 8
  %237 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %236, i64 %97
  %238 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 2
  store %struct.FT_Vector_* %237, %struct.FT_Vector_** %238, align 8
  br label %239

239:                                              ; preds = %176, %228
  store i32 %93, i32* %6, align 8
  br label %240

240:                                              ; preds = %239, %80
  %241 = phi i32 [ %93, %239 ], [ %81, %80 ]
  %242 = phi i8 [ 1, %239 ], [ 0, %80 ]
  %243 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %4, align 8
  %244 = icmp eq i32 %241, 0
  br i1 %244, label %313, label %245

245:                                              ; preds = %240
  %246 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 1
  %247 = load %struct.FT_Vector_*, %struct.FT_Vector_** %246, align 8
  %248 = icmp eq %struct.FT_Vector_* %247, null
  br i1 %248, label %249, label %313

249:                                              ; preds = %245
  %250 = shl i32 %241, 1
  %251 = zext i32 %250 to i64
  %252 = icmp eq i32 %250, 0
  br i1 %252, label %265, label %253

253:                                              ; preds = %249
  %254 = icmp ugt i32 %250, 134217727
  br i1 %254, label %255, label %257

255:                                              ; preds = %253
  %256 = bitcast %struct.FT_Vector_** %246 to i8**
  store i8* null, i8** %256, align 8
  br label %475

257:                                              ; preds = %253
  %258 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %243, i64 0, i32 1
  %259 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %258, align 8
  %260 = shl nuw nsw i64 %251, 4
  %261 = tail call i8* %259(%struct.FT_MemoryRec_* %243, i64 %260) #16
  %262 = icmp eq i8* %261, null
  br i1 %262, label %277, label %263

263:                                              ; preds = %257
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %261, i8 0, i64 %260, i1 false) #16
  %264 = load i32, i32* %6, align 8
  br label %265

265:                                              ; preds = %263, %249
  %266 = phi i32 [ %241, %249 ], [ %264, %263 ]
  %267 = phi i8* [ null, %249 ], [ %261, %263 ]
  %268 = bitcast %struct.FT_Vector_** %246 to i8**
  store i8* %267, i8** %268, align 8
  %269 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 4
  store i8 1, i8* %269, align 4
  %270 = bitcast i8* %267 to %struct.FT_Vector_*
  %271 = zext i32 %266 to i64
  %272 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %270, i64 %271
  %273 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 2
  store %struct.FT_Vector_* %272, %struct.FT_Vector_** %273, align 8
  %274 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 2
  %275 = load %struct.FT_Vector_*, %struct.FT_Vector_** %274, align 8
  %276 = icmp eq %struct.FT_Vector_* %275, null
  br i1 %276, label %283, label %279

277:                                              ; preds = %257
  %278 = bitcast %struct.FT_Vector_** %246 to i8**
  store i8* null, i8** %278, align 8
  br label %475

279:                                              ; preds = %265
  %280 = load i16, i16* %82, align 2
  %281 = sext i16 %280 to i64
  %282 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %275, i64 %281
  br label %283

283:                                              ; preds = %279, %265
  %284 = phi %struct.FT_Vector_* [ %282, %279 ], [ null, %265 ]
  %285 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 2
  store %struct.FT_Vector_* %284, %struct.FT_Vector_** %285, align 8
  %286 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 3
  %287 = load i8*, i8** %286, align 8
  %288 = icmp eq i8* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %283
  %290 = load i16, i16* %82, align 2
  %291 = sext i16 %290 to i64
  %292 = getelementptr inbounds i8, i8* %287, i64 %291
  br label %293

293:                                              ; preds = %289, %283
  %294 = phi i8* [ %292, %289 ], [ null, %283 ]
  %295 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 3
  store i8* %294, i8** %295, align 8
  %296 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 4
  %297 = load i16*, i16** %296, align 8
  %298 = icmp eq i16* %297, null
  br i1 %298, label %304, label %299

299:                                              ; preds = %293
  %300 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 0
  %301 = load i16, i16* %300, align 8
  %302 = sext i16 %301 to i64
  %303 = getelementptr inbounds i16, i16* %297, i64 %302
  br label %304

304:                                              ; preds = %299, %293
  %305 = phi i16* [ %303, %299 ], [ null, %293 ]
  %306 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 4
  store i16* %305, i16** %306, align 8
  %307 = load i16, i16* %82, align 2
  %308 = sext i16 %307 to i64
  %309 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %270, i64 %308
  %310 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 1
  store %struct.FT_Vector_* %309, %struct.FT_Vector_** %310, align 8
  %311 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %272, i64 %308
  %312 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 2
  store %struct.FT_Vector_* %311, %struct.FT_Vector_** %312, align 8
  br label %313

313:                                              ; preds = %245, %240, %304
  %314 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 2
  %315 = load i32, i32* %314, align 4
  %316 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 0
  %317 = load i16, i16* %316, align 8
  %318 = sext i16 %317 to i32
  %319 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 0
  %320 = load i16, i16* %319, align 8
  %321 = sext i16 %320 to i32
  %322 = add i32 %318, %2
  %323 = add i32 %322, %321
  %324 = icmp ugt i32 %323, %315
  br i1 %324, label %325, label %376

325:                                              ; preds = %313
  %326 = add i32 %323, 3
  %327 = and i32 %326, -4
  %328 = icmp ugt i32 %327, 32767
  br i1 %328, label %475, label %329

329:                                              ; preds = %325
  %330 = zext i32 %315 to i64
  %331 = zext i32 %327 to i64
  %332 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 4
  %333 = bitcast i16** %332 to i8**
  %334 = load i8*, i8** %333, align 8
  %335 = icmp eq i32 %327, 0
  br i1 %335, label %336, label %341

336:                                              ; preds = %329
  %337 = icmp eq i8* %334, null
  br i1 %337, label %372, label %338

338:                                              ; preds = %336
  %339 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %5, i64 0, i32 2
  %340 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %339, align 8
  tail call void %340(%struct.FT_MemoryRec_* %5, i8* nonnull %334) #16
  br label %372

341:                                              ; preds = %329
  %342 = icmp eq i32 %315, 0
  br i1 %342, label %343, label %350

343:                                              ; preds = %341
  %344 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %5, i64 0, i32 1
  %345 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %344, align 8
  %346 = shl nuw nsw i64 %331, 1
  %347 = tail call i8* %345(%struct.FT_MemoryRec_* %5, i64 %346) #16
  %348 = icmp eq i8* %347, null
  %349 = select i1 %348, i32 64, i32 0
  br label %359

350:                                              ; preds = %341
  %351 = shl nuw nsw i64 %330, 1
  %352 = shl nuw nsw i64 %331, 1
  %353 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %5, i64 0, i32 3
  %354 = load i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)** %353, align 8
  %355 = tail call i8* %354(%struct.FT_MemoryRec_* %5, i64 %351, i64 %352, i8* %334) #16
  %356 = icmp eq i8* %355, null
  %357 = select i1 %356, i32 64, i32 0
  %358 = select i1 %356, i8* %334, i8* %355
  br label %359

359:                                              ; preds = %350, %343
  %360 = phi i32 [ %357, %350 ], [ %349, %343 ]
  %361 = phi i8* [ %358, %350 ], [ %347, %343 ]
  %362 = icmp eq i32 %360, 0
  %363 = icmp ne i8* %361, null
  %364 = and i1 %362, %363
  %365 = icmp ugt i32 %327, %315
  %366 = and i1 %365, %364
  br i1 %366, label %367, label %374

367:                                              ; preds = %359
  %368 = shl nuw nsw i64 %330, 1
  %369 = getelementptr inbounds i8, i8* %361, i64 %368
  %370 = sub nsw i64 %331, %330
  %371 = shl nsw i64 %370, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %369, i8 0, i64 %371, i1 false) #16
  br label %372

372:                                              ; preds = %367, %338, %336
  %373 = phi i8* [ null, %336 ], [ null, %338 ], [ %361, %367 ]
  store i8* %373, i8** %333, align 8
  br label %375

374:                                              ; preds = %359
  store i8* %361, i8** %333, align 8
  br i1 %362, label %375, label %423

375:                                              ; preds = %374, %372
  store i32 %327, i32* %314, align 4
  br label %378

376:                                              ; preds = %313
  %377 = icmp eq i8 %242, 0
  br i1 %377, label %475, label %378

378:                                              ; preds = %375, %376
  %379 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 2
  %380 = load %struct.FT_Vector_*, %struct.FT_Vector_** %379, align 8
  %381 = icmp eq %struct.FT_Vector_* %380, null
  br i1 %381, label %386, label %382

382:                                              ; preds = %378
  %383 = load i16, i16* %82, align 2
  %384 = sext i16 %383 to i64
  %385 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %380, i64 %384
  br label %386

386:                                              ; preds = %382, %378
  %387 = phi %struct.FT_Vector_* [ %385, %382 ], [ null, %378 ]
  %388 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 2
  store %struct.FT_Vector_* %387, %struct.FT_Vector_** %388, align 8
  %389 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 3
  %390 = load i8*, i8** %389, align 8
  %391 = icmp eq i8* %390, null
  br i1 %391, label %396, label %392

392:                                              ; preds = %386
  %393 = load i16, i16* %82, align 2
  %394 = sext i16 %393 to i64
  %395 = getelementptr inbounds i8, i8* %390, i64 %394
  br label %396

396:                                              ; preds = %392, %386
  %397 = phi i8* [ %395, %392 ], [ null, %386 ]
  %398 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 3
  store i8* %397, i8** %398, align 8
  %399 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 4
  %400 = load i16*, i16** %399, align 8
  %401 = icmp eq i16* %400, null
  br i1 %401, label %406, label %402

402:                                              ; preds = %396
  %403 = load i16, i16* %316, align 8
  %404 = sext i16 %403 to i64
  %405 = getelementptr inbounds i16, i16* %400, i64 %404
  br label %406

406:                                              ; preds = %402, %396
  %407 = phi i16* [ %405, %402 ], [ null, %396 ]
  %408 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 4
  store i16* %407, i16** %408, align 8
  %409 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 4
  %410 = load i8, i8* %409, align 4
  %411 = icmp eq i8 %410, 0
  br i1 %411, label %475, label %412

412:                                              ; preds = %406
  %413 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 1
  %414 = load %struct.FT_Vector_*, %struct.FT_Vector_** %413, align 8
  %415 = load i16, i16* %82, align 2
  %416 = sext i16 %415 to i64
  %417 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %414, i64 %416
  %418 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 1
  store %struct.FT_Vector_* %417, %struct.FT_Vector_** %418, align 8
  %419 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 2
  %420 = load %struct.FT_Vector_*, %struct.FT_Vector_** %419, align 8
  %421 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %420, i64 %416
  %422 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 2
  store %struct.FT_Vector_* %421, %struct.FT_Vector_** %422, align 8
  br label %475

423:                                              ; preds = %374, %227, %175, %133
  %424 = phi i32 [ %126, %133 ], [ %163, %175 ], [ %213, %227 ], [ %360, %374 ]
  %425 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %4, align 8
  %426 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 2
  %427 = bitcast %struct.FT_Vector_** %426 to i8**
  %428 = load i8*, i8** %427, align 8
  %429 = icmp eq i8* %428, null
  br i1 %429, label %433, label %430

430:                                              ; preds = %423
  %431 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %425, i64 0, i32 2
  %432 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %431, align 8
  tail call void %432(%struct.FT_MemoryRec_* %425, i8* nonnull %428) #16
  br label %433

433:                                              ; preds = %430, %423
  store %struct.FT_Vector_* null, %struct.FT_Vector_** %426, align 8
  %434 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 3
  %435 = load i8*, i8** %434, align 8
  %436 = icmp eq i8* %435, null
  br i1 %436, label %440, label %437

437:                                              ; preds = %433
  %438 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %425, i64 0, i32 2
  %439 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %438, align 8
  tail call void %439(%struct.FT_MemoryRec_* %425, i8* nonnull %435) #16
  br label %440

440:                                              ; preds = %437, %433
  store i8* null, i8** %434, align 8
  %441 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 4
  %442 = bitcast i16** %441 to i8**
  %443 = load i8*, i8** %442, align 8
  %444 = icmp eq i8* %443, null
  br i1 %444, label %448, label %445

445:                                              ; preds = %440
  %446 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %425, i64 0, i32 2
  %447 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %446, align 8
  tail call void %447(%struct.FT_MemoryRec_* %425, i8* nonnull %443) #16
  br label %448

448:                                              ; preds = %445, %440
  store i16* null, i16** %441, align 8
  %449 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 1
  %450 = bitcast %struct.FT_Vector_** %449 to i8**
  %451 = load i8*, i8** %450, align 8
  %452 = icmp eq i8* %451, null
  br i1 %452, label %456, label %453

453:                                              ; preds = %448
  %454 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %425, i64 0, i32 2
  %455 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %454, align 8
  tail call void %455(%struct.FT_MemoryRec_* %425, i8* nonnull %451) #16
  br label %456

456:                                              ; preds = %453, %448
  store %struct.FT_Vector_* null, %struct.FT_Vector_** %449, align 8
  %457 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 4
  %458 = bitcast %struct.FT_SubGlyphRec_** %457 to i8**
  %459 = load i8*, i8** %458, align 8
  %460 = icmp eq i8* %459, null
  br i1 %460, label %464, label %461

461:                                              ; preds = %456
  %462 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %425, i64 0, i32 2
  %463 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %462, align 8
  tail call void %463(%struct.FT_MemoryRec_* %425, i8* nonnull %459) #16
  br label %464

464:                                              ; preds = %456, %461
  store %struct.FT_SubGlyphRec_* null, %struct.FT_SubGlyphRec_** %457, align 8
  %465 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 2
  store %struct.FT_Vector_* null, %struct.FT_Vector_** %465, align 8
  store i32 0, i32* %6, align 8
  %466 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 2
  store i32 0, i32* %466, align 4
  %467 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 3
  store i32 0, i32* %467, align 8
  %468 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5
  %469 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6
  store i16 0, i16* %82, align 2
  %470 = getelementptr inbounds %struct.FT_GlyphLoadRec_, %struct.FT_GlyphLoadRec_* %468, i64 0, i32 0, i32 0
  store i16 0, i16* %470, align 8
  %471 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 5
  store i32 0, i32* %471, align 8
  %472 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 3
  store i32 0, i32* %472, align 8
  %473 = bitcast %struct.FT_GlyphLoadRec_* %469 to i8*
  %474 = bitcast %struct.FT_GlyphLoadRec_* %468 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %473, i8* align 8 %474, i64 72, i1 false) #16
  br label %475

475:                                              ; preds = %464, %412, %406, %376, %277, %255, %41, %19, %325, %91
  %476 = phi i32 [ 10, %91 ], [ 10, %325 ], [ 64, %41 ], [ 10, %19 ], [ 64, %277 ], [ 10, %255 ], [ %424, %464 ], [ 0, %376 ], [ 0, %406 ], [ 0, %412 ]
  ret i32 %476
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_GlyphLoader_CheckSubGlyphs(%struct.FT_GlyphLoaderRec_* nocapture, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 0
  %4 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %3, align 8
  %5 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %6, %1
  %10 = add i32 %9, %8
  %11 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = icmp ugt i32 %10, %12
  br i1 %13, label %14, label %75

14:                                               ; preds = %2
  %15 = add i32 %10, 1
  %16 = and i32 %15, -2
  %17 = zext i32 %12 to i64
  %18 = zext i32 %16 to i64
  %19 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 4
  %20 = bitcast %struct.FT_SubGlyphRec_** %19 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = icmp eq i8* %21, null
  br i1 %24, label %61, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %4, i64 0, i32 2
  %27 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %26, align 8
  tail call void %27(%struct.FT_MemoryRec_* %4, i8* nonnull %21) #16
  br label %61

28:                                               ; preds = %14
  %29 = icmp ugt i32 %16, 44739242
  br i1 %29, label %75, label %30

30:                                               ; preds = %28
  %31 = icmp eq i32 %12, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %30
  %33 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %4, i64 0, i32 1
  %34 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %33, align 8
  %35 = mul nuw nsw i64 %18, 48
  %36 = tail call i8* %34(%struct.FT_MemoryRec_* %4, i64 %35) #16
  %37 = icmp eq i8* %36, null
  %38 = select i1 %37, i32 64, i32 0
  br label %48

39:                                               ; preds = %30
  %40 = mul nuw nsw i64 %17, 48
  %41 = mul nuw nsw i64 %18, 48
  %42 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %4, i64 0, i32 3
  %43 = load i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)** %42, align 8
  %44 = tail call i8* %43(%struct.FT_MemoryRec_* %4, i64 %40, i64 %41, i8* %21) #16
  %45 = icmp eq i8* %44, null
  %46 = select i1 %45, i32 64, i32 0
  %47 = select i1 %45, i8* %21, i8* %44
  br label %48

48:                                               ; preds = %39, %32
  %49 = phi i32 [ %46, %39 ], [ %38, %32 ]
  %50 = phi i8* [ %47, %39 ], [ %36, %32 ]
  %51 = icmp eq i32 %49, 0
  %52 = icmp ne i8* %50, null
  %53 = and i1 %51, %52
  %54 = icmp ugt i32 %16, %12
  %55 = and i1 %54, %53
  br i1 %55, label %56, label %63

56:                                               ; preds = %48
  %57 = mul nuw nsw i64 %17, 48
  %58 = getelementptr inbounds i8, i8* %50, i64 %57
  %59 = sub nsw i64 %18, %17
  %60 = mul nsw i64 %59, 48
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %58, i8 0, i64 %60, i1 false) #16
  br label %61

61:                                               ; preds = %56, %25, %23
  %62 = phi i8* [ null, %23 ], [ null, %25 ], [ %50, %56 ]
  store i8* %62, i8** %20, align 8
  br label %64

63:                                               ; preds = %48
  store i8* %50, i8** %20, align 8
  br i1 %51, label %64, label %75

64:                                               ; preds = %61, %63
  %65 = phi i8* [ %62, %61 ], [ %50, %63 ]
  store i32 %16, i32* %11, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %64
  %68 = bitcast i8* %65 to %struct.FT_SubGlyphRec_*
  %69 = load i32, i32* %5, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %68, i64 %70
  br label %72

72:                                               ; preds = %64, %67
  %73 = phi %struct.FT_SubGlyphRec_* [ %71, %67 ], [ null, %64 ]
  %74 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 4
  store %struct.FT_SubGlyphRec_* %73, %struct.FT_SubGlyphRec_** %74, align 8
  br label %75

75:                                               ; preds = %28, %63, %2, %72
  %76 = phi i32 [ 0, %72 ], [ %49, %63 ], [ 0, %2 ], [ 10, %28 ]
  ret i32 %76
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @FT_GlyphLoader_Prepare(%struct.FT_GlyphLoaderRec_*) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 1
  store i16 0, i16* %2, align 2
  %3 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 0
  store i16 0, i16* %3, align 8
  %4 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 3
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 2
  %6 = load %struct.FT_Vector_*, %struct.FT_Vector_** %5, align 8
  %7 = icmp eq %struct.FT_Vector_* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 1
  %10 = load i16, i16* %9, align 2
  %11 = sext i16 %10 to i64
  %12 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %6, i64 %11
  br label %13

13:                                               ; preds = %8, %1
  %14 = phi %struct.FT_Vector_* [ %12, %8 ], [ null, %1 ]
  %15 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 2
  store %struct.FT_Vector_* %14, %struct.FT_Vector_** %15, align 8
  %16 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 3
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 1
  %21 = load i16, i16* %20, align 2
  %22 = sext i16 %21 to i64
  %23 = getelementptr inbounds i8, i8* %17, i64 %22
  br label %24

24:                                               ; preds = %19, %13
  %25 = phi i8* [ %23, %19 ], [ null, %13 ]
  %26 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 3
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 4
  %28 = load i16*, i16** %27, align 8
  %29 = icmp eq i16* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 0
  %32 = load i16, i16* %31, align 8
  %33 = sext i16 %32 to i64
  %34 = getelementptr inbounds i16, i16* %28, i64 %33
  br label %35

35:                                               ; preds = %30, %24
  %36 = phi i16* [ %34, %30 ], [ null, %24 ]
  %37 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 4
  store i16* %36, i16** %37, align 8
  %38 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 4
  %39 = load i8, i8* %38, align 4
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %53, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 1
  %43 = load %struct.FT_Vector_*, %struct.FT_Vector_** %42, align 8
  %44 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 1
  %45 = load i16, i16* %44, align 2
  %46 = sext i16 %45 to i64
  %47 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %43, i64 %46
  %48 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 1
  store %struct.FT_Vector_* %47, %struct.FT_Vector_** %48, align 8
  %49 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 2
  %50 = load %struct.FT_Vector_*, %struct.FT_Vector_** %49, align 8
  %51 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %50, i64 %46
  %52 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 2
  store %struct.FT_Vector_* %51, %struct.FT_Vector_** %52, align 8
  br label %53

53:                                               ; preds = %35, %41
  %54 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 4
  %55 = load %struct.FT_SubGlyphRec_*, %struct.FT_SubGlyphRec_** %54, align 8
  %56 = icmp eq %struct.FT_SubGlyphRec_* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %55, i64 %60
  br label %62

62:                                               ; preds = %53, %57
  %63 = phi %struct.FT_SubGlyphRec_* [ %61, %57 ], [ null, %53 ]
  %64 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 4
  store %struct.FT_SubGlyphRec_* %63, %struct.FT_SubGlyphRec_** %64, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @FT_GlyphLoader_Add(%struct.FT_GlyphLoaderRec_*) local_unnamed_addr #3 {
  %2 = icmp eq %struct.FT_GlyphLoaderRec_* %0, null
  br i1 %2, label %123, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 0
  %5 = load i16, i16* %4, align 8
  %6 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 1
  %7 = load i16, i16* %6, align 2
  %8 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 1
  %9 = load i16, i16* %8, align 2
  %10 = add i16 %9, %7
  store i16 %10, i16* %6, align 2
  %11 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 0
  %12 = load i16, i16* %11, align 8
  %13 = add i16 %12, %5
  store i16 %13, i16* %11, align 8
  %14 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = add i32 %17, %15
  store i32 %18, i32* %16, align 8
  %19 = icmp sgt i16 %5, 0
  br i1 %19, label %20, label %67

20:                                               ; preds = %3
  %21 = sext i16 %5 to i64
  %22 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 4
  %23 = and i64 %21, 4294967295
  %24 = add nsw i64 %23, -1
  %25 = and i64 %21, 3
  %26 = icmp ult i64 %24, 3
  br i1 %26, label %54, label %27

27:                                               ; preds = %20
  %28 = sub nsw i64 %23, %25
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %51, %29 ]
  %31 = phi i64 [ %28, %27 ], [ %52, %29 ]
  %32 = load i16*, i16** %22, align 8
  %33 = getelementptr inbounds i16, i16* %32, i64 %30
  %34 = load i16, i16* %33, align 2
  %35 = add i16 %34, %7
  store i16 %35, i16* %33, align 2
  %36 = or i64 %30, 1
  %37 = load i16*, i16** %22, align 8
  %38 = getelementptr inbounds i16, i16* %37, i64 %36
  %39 = load i16, i16* %38, align 2
  %40 = add i16 %39, %7
  store i16 %40, i16* %38, align 2
  %41 = or i64 %30, 2
  %42 = load i16*, i16** %22, align 8
  %43 = getelementptr inbounds i16, i16* %42, i64 %41
  %44 = load i16, i16* %43, align 2
  %45 = add i16 %44, %7
  store i16 %45, i16* %43, align 2
  %46 = or i64 %30, 3
  %47 = load i16*, i16** %22, align 8
  %48 = getelementptr inbounds i16, i16* %47, i64 %46
  %49 = load i16, i16* %48, align 2
  %50 = add i16 %49, %7
  store i16 %50, i16* %48, align 2
  %51 = add nuw nsw i64 %30, 4
  %52 = add i64 %31, -4
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %29

54:                                               ; preds = %29, %20
  %55 = phi i64 [ 0, %20 ], [ %51, %29 ]
  %56 = icmp eq i64 %25, 0
  br i1 %56, label %67, label %57

57:                                               ; preds = %54, %57
  %58 = phi i64 [ %64, %57 ], [ %55, %54 ]
  %59 = phi i64 [ %65, %57 ], [ %25, %54 ]
  %60 = load i16*, i16** %22, align 8
  %61 = getelementptr inbounds i16, i16* %60, i64 %58
  %62 = load i16, i16* %61, align 2
  %63 = add i16 %62, %7
  store i16 %63, i16* %61, align 2
  %64 = add nuw nsw i64 %58, 1
  %65 = add i64 %59, -1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %57, !llvm.loop !3

67:                                               ; preds = %54, %57, %3
  store i16 0, i16* %8, align 2
  store i16 0, i16* %4, align 8
  store i32 0, i32* %14, align 8
  %68 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 2
  %69 = load %struct.FT_Vector_*, %struct.FT_Vector_** %68, align 8
  %70 = icmp eq %struct.FT_Vector_* %69, null
  br i1 %70, label %75, label %71

71:                                               ; preds = %67
  %72 = load i16, i16* %6, align 2
  %73 = sext i16 %72 to i64
  %74 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %69, i64 %73
  br label %75

75:                                               ; preds = %71, %67
  %76 = phi %struct.FT_Vector_* [ %74, %71 ], [ null, %67 ]
  %77 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 2
  store %struct.FT_Vector_* %76, %struct.FT_Vector_** %77, align 8
  %78 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 3
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %79, null
  br i1 %80, label %85, label %81

81:                                               ; preds = %75
  %82 = load i16, i16* %6, align 2
  %83 = sext i16 %82 to i64
  %84 = getelementptr inbounds i8, i8* %79, i64 %83
  br label %85

85:                                               ; preds = %81, %75
  %86 = phi i8* [ %84, %81 ], [ null, %75 ]
  %87 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 3
  store i8* %86, i8** %87, align 8
  %88 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 0, i32 4
  %89 = load i16*, i16** %88, align 8
  %90 = icmp eq i16* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %85
  %92 = load i16, i16* %11, align 8
  %93 = sext i16 %92 to i64
  %94 = getelementptr inbounds i16, i16* %89, i64 %93
  br label %95

95:                                               ; preds = %91, %85
  %96 = phi i16* [ %94, %91 ], [ null, %85 ]
  %97 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 0, i32 4
  store i16* %96, i16** %97, align 8
  %98 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 4
  %99 = load i8, i8* %98, align 4
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %112, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 1
  %103 = load %struct.FT_Vector_*, %struct.FT_Vector_** %102, align 8
  %104 = load i16, i16* %6, align 2
  %105 = sext i16 %104 to i64
  %106 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %103, i64 %105
  %107 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 1
  store %struct.FT_Vector_* %106, %struct.FT_Vector_** %107, align 8
  %108 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 2
  %109 = load %struct.FT_Vector_*, %struct.FT_Vector_** %108, align 8
  %110 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %109, i64 %105
  %111 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 2
  store %struct.FT_Vector_* %110, %struct.FT_Vector_** %111, align 8
  br label %112

112:                                              ; preds = %101, %95
  %113 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 5, i32 4
  %114 = load %struct.FT_SubGlyphRec_*, %struct.FT_SubGlyphRec_** %113, align 8
  %115 = icmp eq %struct.FT_SubGlyphRec_* %114, null
  br i1 %115, label %120, label %116

116:                                              ; preds = %112
  %117 = load i32, i32* %16, align 8
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %114, i64 %118
  br label %120

120:                                              ; preds = %112, %116
  %121 = phi %struct.FT_SubGlyphRec_* [ %119, %116 ], [ null, %112 ]
  %122 = getelementptr inbounds %struct.FT_GlyphLoaderRec_, %struct.FT_GlyphLoaderRec_* %0, i64 0, i32 6, i32 4
  store %struct.FT_SubGlyphRec_* %121, %struct.FT_SubGlyphRec_** %122, align 8
  br label %123

123:                                              ; preds = %1, %120
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ft_hash_str_init(%struct.FT_HashRec_* nocapture, %struct.FT_MemoryRec_*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %0, i64 0, i32 1
  store i32 241, i32* %3, align 4
  %4 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %0, i64 0, i32 0
  store i32 80, i32* %4, align 8
  %5 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %0, i64 0, i32 2
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %0, i64 0, i32 3
  store i64 (%union.FT_Hashkey_*)* @hash_str_lookup, i64 (%union.FT_Hashkey_*)** %6, align 8
  %7 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %0, i64 0, i32 4
  store i8 (%union.FT_Hashkey_*, %union.FT_Hashkey_*)* @hash_str_compare, i8 (%union.FT_Hashkey_*, %union.FT_Hashkey_*)** %7, align 8
  %8 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %1, i64 0, i32 1
  %9 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %8, align 8
  %10 = tail call i8* %9(%struct.FT_MemoryRec_* %1, i64 1928) #16
  %11 = icmp eq i8* %10, null
  %12 = select i1 %11, i32 64, i32 0
  br i1 %11, label %14, label %13

13:                                               ; preds = %2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %10, i8 0, i64 1928, i1 false) #16
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %0, i64 0, i32 5
  %16 = bitcast %struct.FT_HashnodeRec_*** %15 to i8**
  store i8* %10, i8** %16, align 8
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ft_hash_num_init(%struct.FT_HashRec_* nocapture, %struct.FT_MemoryRec_*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %0, i64 0, i32 1
  store i32 241, i32* %3, align 4
  %4 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %0, i64 0, i32 0
  store i32 80, i32* %4, align 8
  %5 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %0, i64 0, i32 2
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %0, i64 0, i32 3
  store i64 (%union.FT_Hashkey_*)* @hash_num_lookup, i64 (%union.FT_Hashkey_*)** %6, align 8
  %7 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %0, i64 0, i32 4
  store i8 (%union.FT_Hashkey_*, %union.FT_Hashkey_*)* @hash_num_compare, i8 (%union.FT_Hashkey_*, %union.FT_Hashkey_*)** %7, align 8
  %8 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %1, i64 0, i32 1
  %9 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %8, align 8
  %10 = tail call i8* %9(%struct.FT_MemoryRec_* %1, i64 1928) #16
  %11 = icmp eq i8* %10, null
  %12 = select i1 %11, i32 64, i32 0
  br i1 %11, label %14, label %13

13:                                               ; preds = %2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %10, i8 0, i64 1928, i1 false) #16
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %0, i64 0, i32 5
  %16 = bitcast %struct.FT_HashnodeRec_*** %15 to i8**
  store i8* %10, i8** %16, align 8
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ft_hash_str_free(%struct.FT_HashRec_*, %struct.FT_MemoryRec_*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_HashRec_* %0, null
  br i1 %3, label %32, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %0, i64 0, i32 5
  %8 = icmp eq i32 %6, 0
  br i1 %8, label %24, label %9

9:                                                ; preds = %4
  %10 = load %struct.FT_HashnodeRec_**, %struct.FT_HashnodeRec_*** %7, align 8
  %11 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %1, i64 0, i32 2
  br label %12

12:                                               ; preds = %20, %9
  %13 = phi i32 [ 0, %9 ], [ %21, %20 ]
  %14 = phi %struct.FT_HashnodeRec_** [ %10, %9 ], [ %22, %20 ]
  %15 = bitcast %struct.FT_HashnodeRec_** %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  %19 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %11, align 8
  tail call void %19(%struct.FT_MemoryRec_* %1, i8* nonnull %16) #16
  br label %20

20:                                               ; preds = %12, %18
  store %struct.FT_HashnodeRec_* null, %struct.FT_HashnodeRec_** %14, align 8
  %21 = add nuw i32 %13, 1
  %22 = getelementptr inbounds %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %14, i64 1
  %23 = icmp eq i32 %21, %6
  br i1 %23, label %24, label %12

24:                                               ; preds = %20, %4
  %25 = bitcast %struct.FT_HashnodeRec_*** %7 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %1, i64 0, i32 2
  %30 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %29, align 8
  tail call void %30(%struct.FT_MemoryRec_* %1, i8* nonnull %26) #16
  br label %31

31:                                               ; preds = %24, %28
  store %struct.FT_HashnodeRec_** null, %struct.FT_HashnodeRec_*** %7, align 8
  br label %32

32:                                               ; preds = %2, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ft_hash_str_insert(i8*, i64, %struct.FT_HashRec_* nocapture, %struct.FT_MemoryRec_*) local_unnamed_addr #0 {
  %5 = tail call fastcc i32 @hash_insert(i8* %0, i64 %1, %struct.FT_HashRec_* %2, %struct.FT_MemoryRec_* %3)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @hash_insert(i8*, i64, %struct.FT_HashRec_* nocapture, %struct.FT_MemoryRec_*) unnamed_addr #0 {
  %5 = alloca %union.FT_Hashkey_, align 8
  %6 = alloca %union.FT_Hashkey_, align 8
  %7 = bitcast %union.FT_Hashkey_* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = getelementptr inbounds %union.FT_Hashkey_, %union.FT_Hashkey_* %5, i64 0, i32 0
  store i8* %0, i8** %8, align 8
  %9 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %2, i64 0, i32 5
  %10 = load %struct.FT_HashnodeRec_**, %struct.FT_HashnodeRec_*** %9, align 8
  %11 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %2, i64 0, i32 3
  %12 = load i64 (%union.FT_Hashkey_*)*, i64 (%union.FT_Hashkey_*)** %11, align 8
  %13 = call i64 %12(%union.FT_Hashkey_* nonnull %5) #16
  %14 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %2, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = urem i64 %13, %16
  %18 = getelementptr inbounds %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %10, i64 %17
  %19 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %2, i64 0, i32 4
  %20 = load %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %18, align 8
  %21 = icmp eq %struct.FT_HashnodeRec_* %20, null
  br i1 %21, label %41, label %22

22:                                               ; preds = %4, %37
  %23 = phi %struct.FT_HashnodeRec_* [ %39, %37 ], [ %20, %4 ]
  %24 = phi %struct.FT_HashnodeRec_** [ %38, %37 ], [ %18, %4 ]
  %25 = load i8 (%union.FT_Hashkey_*, %union.FT_Hashkey_*)*, i8 (%union.FT_Hashkey_*, %union.FT_Hashkey_*)** %19, align 8
  %26 = getelementptr inbounds %struct.FT_HashnodeRec_, %struct.FT_HashnodeRec_* %23, i64 0, i32 0
  %27 = call zeroext i8 %25(%union.FT_Hashkey_* %26, %union.FT_Hashkey_* nonnull %5) #16
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %22
  %30 = getelementptr inbounds %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %24, i64 -1
  %31 = icmp ult %struct.FT_HashnodeRec_** %30, %10
  br i1 %31, label %32, label %37

32:                                               ; preds = %29
  %33 = load i32, i32* %14, align 4
  %34 = add i32 %33, -1
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %10, i64 %35
  br label %37

37:                                               ; preds = %32, %29
  %38 = phi %struct.FT_HashnodeRec_** [ %36, %32 ], [ %30, %29 ]
  %39 = load %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %38, align 8
  %40 = icmp eq %struct.FT_HashnodeRec_* %39, null
  br i1 %40, label %41, label %22

41:                                               ; preds = %22, %37, %4
  %42 = phi %struct.FT_HashnodeRec_** [ %18, %4 ], [ %38, %37 ], [ %24, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  %43 = load %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %42, align 8
  %44 = icmp eq %struct.FT_HashnodeRec_* %43, null
  br i1 %44, label %45, label %140

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %3, i64 0, i32 1
  %47 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %46, align 8
  %48 = call i8* %47(%struct.FT_MemoryRec_* %3, i64 16) #16
  %49 = icmp eq i8* %48, null
  br i1 %49, label %142, label %50

50:                                               ; preds = %45
  %51 = bitcast %struct.FT_HashnodeRec_** %42 to i8**
  store i8* %48, i8** %51, align 8
  %52 = bitcast i8* %48 to i8**
  store i8* %0, i8** %52, align 8
  %53 = getelementptr inbounds i8, i8* %48, i64 8
  %54 = bitcast i8* %53 to i64*
  store i64 %1, i64* %54, align 8
  %55 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %2, i64 0, i32 2
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %2, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = icmp ult i32 %56, %58
  br i1 %59, label %137, label %60

60:                                               ; preds = %50
  %61 = load %struct.FT_HashnodeRec_**, %struct.FT_HashnodeRec_*** %9, align 8
  %62 = load i32, i32* %14, align 4
  %63 = shl i32 %62, 1
  store i32 %63, i32* %14, align 4
  %64 = udiv i32 %63, 3
  store i32 %64, i32* %57, align 8
  %65 = zext i32 %63 to i64
  %66 = icmp eq i32 %63, 0
  br i1 %66, label %77, label %67

67:                                               ; preds = %60
  %68 = icmp ugt i32 %63, 268435455
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %struct.FT_HashnodeRec_*** %9 to i8**
  store i8* null, i8** %70, align 8
  br label %142

71:                                               ; preds = %67
  %72 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %46, align 8
  %73 = shl nuw nsw i64 %65, 3
  %74 = call i8* %72(%struct.FT_MemoryRec_* %3, i64 %73) #16
  %75 = icmp eq i8* %74, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %71
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %74, i8 0, i64 %73, i1 false) #16
  br label %77

77:                                               ; preds = %76, %60
  %78 = phi i8* [ null, %60 ], [ %74, %76 ]
  %79 = bitcast %struct.FT_HashnodeRec_*** %9 to i8**
  store i8* %78, i8** %79, align 8
  %80 = icmp eq i32 %62, 0
  br i1 %80, label %131, label %83

81:                                               ; preds = %71
  %82 = bitcast %struct.FT_HashnodeRec_*** %9 to i8**
  store i8* null, i8** %82, align 8
  br label %142

83:                                               ; preds = %77
  %84 = bitcast %union.FT_Hashkey_* %6 to i8*
  %85 = bitcast %union.FT_Hashkey_* %6 to i64*
  br label %86

86:                                               ; preds = %127, %83
  %87 = phi i32 [ 0, %83 ], [ %128, %127 ]
  %88 = phi %struct.FT_HashnodeRec_** [ %61, %83 ], [ %129, %127 ]
  %89 = load %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %88, align 8
  %90 = icmp eq %struct.FT_HashnodeRec_* %89, null
  br i1 %90, label %127, label %91

91:                                               ; preds = %86
  %92 = bitcast %struct.FT_HashnodeRec_* %89 to i64*
  %93 = load i64, i64* %92, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #16
  store i64 %93, i64* %85, align 8
  %94 = load %struct.FT_HashnodeRec_**, %struct.FT_HashnodeRec_*** %9, align 8
  %95 = load i64 (%union.FT_Hashkey_*)*, i64 (%union.FT_Hashkey_*)** %11, align 8
  %96 = call i64 %95(%union.FT_Hashkey_* nonnull %6) #16
  %97 = load i32, i32* %14, align 4
  %98 = zext i32 %97 to i64
  %99 = urem i64 %96, %98
  %100 = getelementptr inbounds %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %94, i64 %99
  %101 = load %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %100, align 8
  %102 = icmp eq %struct.FT_HashnodeRec_* %101, null
  br i1 %102, label %122, label %103

103:                                              ; preds = %91, %118
  %104 = phi %struct.FT_HashnodeRec_* [ %120, %118 ], [ %101, %91 ]
  %105 = phi %struct.FT_HashnodeRec_** [ %119, %118 ], [ %100, %91 ]
  %106 = load i8 (%union.FT_Hashkey_*, %union.FT_Hashkey_*)*, i8 (%union.FT_Hashkey_*, %union.FT_Hashkey_*)** %19, align 8
  %107 = getelementptr inbounds %struct.FT_HashnodeRec_, %struct.FT_HashnodeRec_* %104, i64 0, i32 0
  %108 = call zeroext i8 %106(%union.FT_Hashkey_* %107, %union.FT_Hashkey_* nonnull %6) #16
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %110, label %122

110:                                              ; preds = %103
  %111 = getelementptr inbounds %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %105, i64 -1
  %112 = icmp ult %struct.FT_HashnodeRec_** %111, %94
  br i1 %112, label %113, label %118

113:                                              ; preds = %110
  %114 = load i32, i32* %14, align 4
  %115 = add i32 %114, -1
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %94, i64 %116
  br label %118

118:                                              ; preds = %113, %110
  %119 = phi %struct.FT_HashnodeRec_** [ %117, %113 ], [ %111, %110 ]
  %120 = load %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %119, align 8
  %121 = icmp eq %struct.FT_HashnodeRec_* %120, null
  br i1 %121, label %122, label %103

122:                                              ; preds = %118, %103, %91
  %123 = phi %struct.FT_HashnodeRec_** [ %100, %91 ], [ %105, %103 ], [ %119, %118 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #16
  %124 = bitcast %struct.FT_HashnodeRec_** %88 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %struct.FT_HashnodeRec_** %123 to i64*
  store i64 %125, i64* %126, align 8
  br label %127

127:                                              ; preds = %122, %86
  %128 = add nuw i32 %87, 1
  %129 = getelementptr inbounds %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %88, i64 1
  %130 = icmp eq i32 %128, %62
  br i1 %130, label %131, label %86

131:                                              ; preds = %127, %77
  %132 = icmp eq %struct.FT_HashnodeRec_** %61, null
  br i1 %132, label %137, label %133

133:                                              ; preds = %131
  %134 = bitcast %struct.FT_HashnodeRec_** %61 to i8*
  %135 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %3, i64 0, i32 2
  %136 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %135, align 8
  call void %136(%struct.FT_MemoryRec_* %3, i8* nonnull %134) #16
  br label %137

137:                                              ; preds = %133, %131, %50
  %138 = load i32, i32* %55, align 8
  %139 = add i32 %138, 1
  store i32 %139, i32* %55, align 8
  br label %142

140:                                              ; preds = %41
  %141 = getelementptr inbounds %struct.FT_HashnodeRec_, %struct.FT_HashnodeRec_* %43, i64 0, i32 1
  store i64 %1, i64* %141, align 8
  br label %142

142:                                              ; preds = %45, %81, %69, %137, %140
  %143 = phi i32 [ 0, %137 ], [ 0, %140 ], [ 10, %69 ], [ 64, %81 ], [ 64, %45 ]
  ret i32 %143
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ft_hash_num_insert(i32, i64, %struct.FT_HashRec_* nocapture, %struct.FT_MemoryRec_*) local_unnamed_addr #0 {
  %5 = zext i32 %0 to i64
  %6 = or i64 %5, -6148914694099828736
  %7 = inttoptr i64 %6 to i8*
  %8 = tail call fastcc i32 @hash_insert(i8* nonnull %7, i64 %1, %struct.FT_HashRec_* %2, %struct.FT_MemoryRec_* %3)
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @ft_hash_str_lookup(i8*, %struct.FT_HashRec_* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %union.FT_Hashkey_, align 8
  %4 = bitcast %union.FT_Hashkey_* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #16
  %5 = getelementptr inbounds %union.FT_Hashkey_, %union.FT_Hashkey_* %3, i64 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %1, i64 0, i32 5
  %7 = load %struct.FT_HashnodeRec_**, %struct.FT_HashnodeRec_*** %6, align 8
  %8 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %1, i64 0, i32 3
  %9 = load i64 (%union.FT_Hashkey_*)*, i64 (%union.FT_Hashkey_*)** %8, align 8
  %10 = call i64 %9(%union.FT_Hashkey_* nonnull %3) #16
  %11 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = urem i64 %10, %13
  %15 = getelementptr inbounds %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %7, i64 %14
  %16 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %1, i64 0, i32 4
  %17 = load %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %15, align 8
  %18 = icmp eq %struct.FT_HashnodeRec_* %17, null
  br i1 %18, label %38, label %19

19:                                               ; preds = %2, %34
  %20 = phi %struct.FT_HashnodeRec_* [ %36, %34 ], [ %17, %2 ]
  %21 = phi %struct.FT_HashnodeRec_** [ %35, %34 ], [ %15, %2 ]
  %22 = load i8 (%union.FT_Hashkey_*, %union.FT_Hashkey_*)*, i8 (%union.FT_Hashkey_*, %union.FT_Hashkey_*)** %16, align 8
  %23 = getelementptr inbounds %struct.FT_HashnodeRec_, %struct.FT_HashnodeRec_* %20, i64 0, i32 0
  %24 = call zeroext i8 %22(%union.FT_Hashkey_* %23, %union.FT_Hashkey_* nonnull %3) #16
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %21, i64 -1
  %28 = icmp ult %struct.FT_HashnodeRec_** %27, %7
  br i1 %28, label %29, label %34

29:                                               ; preds = %26
  %30 = load i32, i32* %11, align 4
  %31 = add i32 %30, -1
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %7, i64 %32
  br label %34

34:                                               ; preds = %29, %26
  %35 = phi %struct.FT_HashnodeRec_** [ %33, %29 ], [ %27, %26 ]
  %36 = load %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %35, align 8
  %37 = icmp eq %struct.FT_HashnodeRec_* %36, null
  br i1 %37, label %38, label %19

38:                                               ; preds = %19, %34, %2
  %39 = phi %struct.FT_HashnodeRec_** [ %15, %2 ], [ %21, %19 ], [ %35, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #16
  %40 = load %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %39, align 8
  %41 = icmp eq %struct.FT_HashnodeRec_* %40, null
  %42 = getelementptr inbounds %struct.FT_HashnodeRec_, %struct.FT_HashnodeRec_* %40, i64 0, i32 1
  %43 = select i1 %41, i64* null, i64* %42
  ret i64* %43
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @ft_hash_num_lookup(i32, %struct.FT_HashRec_* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %union.FT_Hashkey_, align 8
  %4 = zext i32 %0 to i64
  %5 = or i64 %4, -6148914694099828736
  %6 = inttoptr i64 %5 to i8*
  %7 = bitcast %union.FT_Hashkey_* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  %8 = getelementptr inbounds %union.FT_Hashkey_, %union.FT_Hashkey_* %3, i64 0, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %1, i64 0, i32 5
  %10 = load %struct.FT_HashnodeRec_**, %struct.FT_HashnodeRec_*** %9, align 8
  %11 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %1, i64 0, i32 3
  %12 = load i64 (%union.FT_Hashkey_*)*, i64 (%union.FT_Hashkey_*)** %11, align 8
  %13 = call i64 %12(%union.FT_Hashkey_* nonnull %3) #16
  %14 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = urem i64 %13, %16
  %18 = getelementptr inbounds %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %10, i64 %17
  %19 = getelementptr inbounds %struct.FT_HashRec_, %struct.FT_HashRec_* %1, i64 0, i32 4
  %20 = load %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %18, align 8
  %21 = icmp eq %struct.FT_HashnodeRec_* %20, null
  br i1 %21, label %41, label %22

22:                                               ; preds = %2, %37
  %23 = phi %struct.FT_HashnodeRec_* [ %39, %37 ], [ %20, %2 ]
  %24 = phi %struct.FT_HashnodeRec_** [ %38, %37 ], [ %18, %2 ]
  %25 = load i8 (%union.FT_Hashkey_*, %union.FT_Hashkey_*)*, i8 (%union.FT_Hashkey_*, %union.FT_Hashkey_*)** %19, align 8
  %26 = getelementptr inbounds %struct.FT_HashnodeRec_, %struct.FT_HashnodeRec_* %23, i64 0, i32 0
  %27 = call zeroext i8 %25(%union.FT_Hashkey_* %26, %union.FT_Hashkey_* nonnull %3) #16
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %22
  %30 = getelementptr inbounds %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %24, i64 -1
  %31 = icmp ult %struct.FT_HashnodeRec_** %30, %10
  br i1 %31, label %32, label %37

32:                                               ; preds = %29
  %33 = load i32, i32* %14, align 4
  %34 = add i32 %33, -1
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %10, i64 %35
  br label %37

37:                                               ; preds = %32, %29
  %38 = phi %struct.FT_HashnodeRec_** [ %36, %32 ], [ %30, %29 ]
  %39 = load %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %38, align 8
  %40 = icmp eq %struct.FT_HashnodeRec_* %39, null
  br i1 %40, label %41, label %22

41:                                               ; preds = %22, %37, %2
  %42 = phi %struct.FT_HashnodeRec_** [ %18, %2 ], [ %24, %22 ], [ %38, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  %43 = load %struct.FT_HashnodeRec_*, %struct.FT_HashnodeRec_** %42, align 8
  %44 = icmp eq %struct.FT_HashnodeRec_* %43, null
  %45 = getelementptr inbounds %struct.FT_HashnodeRec_, %struct.FT_HashnodeRec_* %43, i64 0, i32 1
  %46 = select i1 %44, i64* null, i64* %45
  ret i64* %46
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ft_lcd_padding(%struct.FT_BBox_* nocapture, %struct.FT_GlyphSlotRec_* nocapture readonly, i32) local_unnamed_addr #3 {
  %4 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 1
  %5 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %4, align 8
  %6 = icmp eq %struct.FT_FaceRec_* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 30
  %9 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %9, i64 0, i32 8
  %11 = load void (%struct.FT_Bitmap_*, i8*)*, void (%struct.FT_Bitmap_*, i8*)** %10, align 8
  %12 = icmp eq void (%struct.FT_Bitmap_*, i8*)* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %9, i64 0, i32 7, i64 0
  br label %21

15:                                               ; preds = %7, %3
  %16 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 0
  %17 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %16, align 8
  %18 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %17, i64 0, i32 10, i64 0
  %19 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %17, i64 0, i32 11
  %20 = load void (%struct.FT_Bitmap_*, i8*)*, void (%struct.FT_Bitmap_*, i8*)** %19, align 8
  br label %21

21:                                               ; preds = %15, %13
  %22 = phi i8* [ %14, %13 ], [ %18, %15 ]
  %23 = phi void (%struct.FT_Bitmap_*, i8*)* [ %11, %13 ], [ %20, %15 ]
  %24 = icmp eq void (%struct.FT_Bitmap_*, i8*)* %23, @ft_lcd_filter_fir
  br i1 %24, label %25, label %78

25:                                               ; preds = %21
  switch i32 %2, label %78 [
    i32 3, label %26
    i32 4, label %52
  ]

26:                                               ; preds = %25
  %27 = load i8, i8* %22, align 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %22, i64 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 0
  %33 = select i1 %32, i64 0, i64 22
  br label %34

34:                                               ; preds = %26, %29
  %35 = phi i64 [ %33, %29 ], [ 43, %26 ]
  %36 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %0, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = sub nsw i64 %37, %35
  store i64 %38, i64* %36, align 8
  %39 = getelementptr inbounds i8, i8* %22, i64 4
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %47

42:                                               ; preds = %34
  %43 = getelementptr inbounds i8, i8* %22, i64 3
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 0
  %46 = select i1 %45, i64 0, i64 22
  br label %47

47:                                               ; preds = %34, %42
  %48 = phi i64 [ %46, %42 ], [ 43, %34 ]
  %49 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = add nsw i64 %50, %48
  store i64 %51, i64* %49, align 8
  br label %78

52:                                               ; preds = %25
  %53 = load i8, i8* %22, align 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %60

55:                                               ; preds = %52
  %56 = getelementptr inbounds i8, i8* %22, i64 1
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 0
  %59 = select i1 %58, i64 0, i64 22
  br label %60

60:                                               ; preds = %52, %55
  %61 = phi i64 [ %59, %55 ], [ 43, %52 ]
  %62 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %0, i64 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = sub nsw i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = getelementptr inbounds i8, i8* %22, i64 4
  %66 = load i8, i8* %65, align 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %73

68:                                               ; preds = %60
  %69 = getelementptr inbounds i8, i8* %22, i64 3
  %70 = load i8, i8* %69, align 1
  %71 = icmp eq i8 %70, 0
  %72 = select i1 %71, i64 0, i64 22
  br label %73

73:                                               ; preds = %60, %68
  %74 = phi i64 [ %72, %68 ], [ 43, %60 ]
  %75 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %0, i64 0, i32 3
  %76 = load i64, i64* %75, align 8
  %77 = add nsw i64 %76, %74
  store i64 %77, i64* %75, align 8
  br label %78

78:                                               ; preds = %25, %47, %73, %21
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ft_lcd_filter_fir(%struct.FT_Bitmap_* nocapture readonly, i8* nocapture readonly) #3 {
  %3 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %0, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %0, i64 0, i32 5
  %12 = load i8, i8* %11, align 2
  %13 = icmp sgt i32 %8, 0
  %14 = icmp ne i32 %6, 0
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = add i32 %6, -1
  %18 = mul nsw i32 %8, %17
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %10, i64 %19
  br label %21

21:                                               ; preds = %16, %2
  %22 = phi i8* [ %20, %16 ], [ %10, %2 ]
  %23 = icmp eq i8 %12, 5
  %24 = icmp ugt i32 %4, 1
  %25 = and i1 %24, %23
  br i1 %25, label %26, label %126

26:                                               ; preds = %21
  %27 = icmp eq i32 %6, 0
  br i1 %27, label %229, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds i8, i8* %1, i64 2
  %30 = getelementptr inbounds i8, i8* %1, i64 3
  %31 = getelementptr inbounds i8, i8* %1, i64 4
  %32 = getelementptr inbounds i8, i8* %1, i64 1
  %33 = icmp ugt i32 %4, 2
  %34 = sext i32 %8 to i64
  %35 = sub nsw i64 0, %34
  %36 = zext i32 %4 to i64
  br label %37

37:                                               ; preds = %28, %105
  %38 = phi i8* [ %22, %28 ], [ %124, %105 ]
  %39 = phi i32 [ %6, %28 ], [ %123, %105 ]
  %40 = load i8, i8* %38, align 1
  %41 = zext i8 %40 to i32
  %42 = load i8, i8* %29, align 1
  %43 = zext i8 %42 to i32
  %44 = mul nuw nsw i32 %43, %41
  %45 = load i8, i8* %30, align 1
  %46 = zext i8 %45 to i32
  %47 = mul nuw nsw i32 %46, %41
  %48 = load i8, i8* %31, align 1
  %49 = zext i8 %48 to i32
  %50 = getelementptr inbounds i8, i8* %38, i64 1
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = load i8, i8* %32, align 1
  %54 = zext i8 %53 to i32
  %55 = mul nuw nsw i32 %54, %52
  %56 = add nuw nsw i32 %55, %44
  %57 = mul nuw nsw i32 %52, %43
  %58 = add nuw nsw i32 %57, %47
  br i1 %33, label %59, label %105

59:                                               ; preds = %37
  %60 = mul nuw nsw i32 %52, %49
  %61 = mul nuw nsw i32 %52, %46
  %62 = mul nuw nsw i32 %49, %41
  %63 = add nuw nsw i32 %61, %62
  br label %64

64:                                               ; preds = %95, %59
  %65 = phi i8 [ %48, %59 ], [ %104, %95 ]
  %66 = phi i8 [ %45, %59 ], [ %103, %95 ]
  %67 = phi i8 [ %42, %59 ], [ %102, %95 ]
  %68 = phi i8 [ %53, %59 ], [ %101, %95 ]
  %69 = phi i64 [ 2, %59 ], [ %93, %95 ]
  %70 = phi i32 [ %56, %59 ], [ %83, %95 ]
  %71 = phi i32 [ %58, %59 ], [ %86, %95 ]
  %72 = phi i32 [ %63, %59 ], [ %100, %95 ]
  %73 = phi i32 [ %60, %59 ], [ %97, %95 ]
  %74 = getelementptr inbounds i8, i8* %38, i64 %69
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = load i8, i8* %1, align 1
  %78 = zext i8 %77 to i32
  %79 = mul nuw nsw i32 %78, %76
  %80 = add nuw nsw i32 %79, %70
  %81 = zext i8 %68 to i32
  %82 = mul nuw nsw i32 %81, %76
  %83 = add nuw nsw i32 %82, %71
  %84 = zext i8 %67 to i32
  %85 = mul nuw nsw i32 %84, %76
  %86 = add nuw nsw i32 %85, %72
  %87 = lshr i32 %80, 8
  %88 = icmp ult i32 %87, 255
  %89 = select i1 %88, i32 %87, i32 255
  %90 = trunc i32 %89 to i8
  %91 = add nsw i64 %69, -2
  %92 = getelementptr inbounds i8, i8* %38, i64 %91
  store i8 %90, i8* %92, align 1
  %93 = add nuw nsw i64 %69, 1
  %94 = icmp eq i64 %93, %36
  br i1 %94, label %105, label %95

95:                                               ; preds = %64
  %96 = zext i8 %65 to i32
  %97 = mul nuw nsw i32 %96, %76
  %98 = zext i8 %66 to i32
  %99 = mul nuw nsw i32 %98, %76
  %100 = add nuw nsw i32 %99, %73
  %101 = load i8, i8* %32, align 1
  %102 = load i8, i8* %29, align 1
  %103 = load i8, i8* %30, align 1
  %104 = load i8, i8* %31, align 1
  br label %64

105:                                              ; preds = %64, %37
  %106 = phi i32 [ %58, %37 ], [ %86, %64 ]
  %107 = phi i32 [ %56, %37 ], [ %83, %64 ]
  %108 = phi i32 [ 2, %37 ], [ %4, %64 ]
  %109 = lshr i32 %107, 8
  %110 = icmp ult i32 %109, 255
  %111 = select i1 %110, i32 %109, i32 255
  %112 = trunc i32 %111 to i8
  %113 = add i32 %108, -2
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds i8, i8* %38, i64 %114
  store i8 %112, i8* %115, align 1
  %116 = lshr i32 %106, 8
  %117 = icmp ult i32 %116, 255
  %118 = select i1 %117, i32 %116, i32 255
  %119 = trunc i32 %118 to i8
  %120 = add i32 %108, -1
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds i8, i8* %38, i64 %121
  store i8 %119, i8* %122, align 1
  %123 = add i32 %39, -1
  %124 = getelementptr inbounds i8, i8* %38, i64 %35
  %125 = icmp eq i32 %123, 0
  br i1 %125, label %229, label %37

126:                                              ; preds = %21
  %127 = icmp ne i8 %12, 6
  %128 = icmp ult i32 %6, 2
  %129 = or i1 %127, %128
  %130 = icmp eq i32 %4, 0
  %131 = or i1 %129, %130
  br i1 %131, label %229, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds i8, i8* %1, i64 2
  %134 = getelementptr inbounds i8, i8* %1, i64 3
  %135 = getelementptr inbounds i8, i8* %1, i64 4
  %136 = sext i32 %8 to i64
  %137 = sub nsw i64 0, %136
  %138 = getelementptr inbounds i8, i8* %1, i64 1
  %139 = icmp ugt i32 %6, 2
  %140 = shl nsw i32 %8, 1
  %141 = sext i32 %140 to i64
  br label %142

142:                                              ; preds = %132, %210
  %143 = phi i8* [ %22, %132 ], [ %227, %210 ]
  %144 = phi i32 [ %4, %132 ], [ %226, %210 ]
  %145 = load i8, i8* %143, align 1
  %146 = zext i8 %145 to i32
  %147 = load i8, i8* %133, align 1
  %148 = zext i8 %147 to i32
  %149 = mul nuw nsw i32 %148, %146
  %150 = load i8, i8* %134, align 1
  %151 = zext i8 %150 to i32
  %152 = mul nuw nsw i32 %151, %146
  %153 = load i8, i8* %135, align 1
  %154 = zext i8 %153 to i32
  %155 = getelementptr inbounds i8, i8* %143, i64 %137
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i32
  %158 = load i8, i8* %138, align 1
  %159 = zext i8 %158 to i32
  %160 = mul nuw nsw i32 %159, %157
  %161 = add nuw nsw i32 %160, %149
  %162 = mul nuw nsw i32 %157, %148
  %163 = add nuw nsw i32 %162, %152
  br i1 %139, label %164, label %210

164:                                              ; preds = %142
  %165 = mul nuw nsw i32 %157, %154
  %166 = mul nuw nsw i32 %157, %151
  %167 = mul nuw nsw i32 %154, %146
  %168 = add nuw nsw i32 %166, %167
  br label %169

169:                                              ; preds = %200, %164
  %170 = phi i8 [ %209, %200 ], [ %153, %164 ]
  %171 = phi i8 [ %208, %200 ], [ %150, %164 ]
  %172 = phi i8 [ %207, %200 ], [ %147, %164 ]
  %173 = phi i8 [ %206, %200 ], [ %158, %164 ]
  %174 = phi i8* [ %180, %200 ], [ %155, %164 ]
  %175 = phi i32 [ %198, %200 ], [ 2, %164 ]
  %176 = phi i32 [ %189, %200 ], [ %161, %164 ]
  %177 = phi i32 [ %192, %200 ], [ %163, %164 ]
  %178 = phi i32 [ %205, %200 ], [ %168, %164 ]
  %179 = phi i32 [ %202, %200 ], [ %165, %164 ]
  %180 = getelementptr inbounds i8, i8* %174, i64 %137
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i32
  %183 = load i8, i8* %1, align 1
  %184 = zext i8 %183 to i32
  %185 = mul nuw nsw i32 %184, %182
  %186 = add nuw nsw i32 %185, %176
  %187 = zext i8 %173 to i32
  %188 = mul nuw nsw i32 %187, %182
  %189 = add nuw nsw i32 %188, %177
  %190 = zext i8 %172 to i32
  %191 = mul nuw nsw i32 %190, %182
  %192 = add nuw nsw i32 %191, %178
  %193 = lshr i32 %186, 8
  %194 = icmp ult i32 %193, 255
  %195 = select i1 %194, i32 %193, i32 255
  %196 = trunc i32 %195 to i8
  %197 = getelementptr inbounds i8, i8* %180, i64 %141
  store i8 %196, i8* %197, align 1
  %198 = add nuw i32 %175, 1
  %199 = icmp eq i32 %198, %6
  br i1 %199, label %210, label %200

200:                                              ; preds = %169
  %201 = zext i8 %170 to i32
  %202 = mul nuw nsw i32 %201, %182
  %203 = zext i8 %171 to i32
  %204 = mul nuw nsw i32 %203, %182
  %205 = add nuw nsw i32 %204, %179
  %206 = load i8, i8* %138, align 1
  %207 = load i8, i8* %133, align 1
  %208 = load i8, i8* %134, align 1
  %209 = load i8, i8* %135, align 1
  br label %169

210:                                              ; preds = %169, %142
  %211 = phi i8* [ %155, %142 ], [ %180, %169 ]
  %212 = phi i32 [ %163, %142 ], [ %192, %169 ]
  %213 = phi i32 [ %161, %142 ], [ %189, %169 ]
  %214 = phi i8* [ %143, %142 ], [ %174, %169 ]
  %215 = getelementptr inbounds i8, i8* %214, i64 %137
  %216 = getelementptr inbounds i8, i8* %215, i64 %137
  %217 = lshr i32 %213, 8
  %218 = icmp ult i32 %217, 255
  %219 = select i1 %218, i32 %217, i32 255
  %220 = trunc i32 %219 to i8
  %221 = getelementptr inbounds i8, i8* %216, i64 %141
  store i8 %220, i8* %221, align 1
  %222 = lshr i32 %212, 8
  %223 = icmp ult i32 %222, 255
  %224 = select i1 %223, i32 %222, i32 255
  %225 = trunc i32 %224 to i8
  store i8 %225, i8* %211, align 1
  %226 = add i32 %144, -1
  %227 = getelementptr inbounds i8, i8* %143, i64 1
  %228 = icmp eq i32 %226, 0
  br i1 %228, label %229, label %142

229:                                              ; preds = %210, %105, %126, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Library_SetLcdFilterWeights(%struct.FT_LibraryRec_*, i8* readonly) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = icmp eq i8* %1, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 10, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* nonnull align 1 %1, i64 5, i1 false)
  %8 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 11
  store void (%struct.FT_Bitmap_*, i8*)* @ft_lcd_filter_fir, void (%struct.FT_Bitmap_*, i8*)** %8, align 8
  br label %9

9:                                                ; preds = %4, %2, %6
  %10 = phi i32 [ 0, %6 ], [ 33, %2 ], [ 6, %4 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Library_SetLcdFilter(%struct.FT_LibraryRec_*, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  switch i32 %1, label %15 [
    i32 0, label %5
    i32 1, label %7
    i32 2, label %10
    i32 16, label %13
    i32 3, label %13
  ]

5:                                                ; preds = %4
  %6 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 11
  store void (%struct.FT_Bitmap_*, i8*)* null, void (%struct.FT_Bitmap_*, i8*)** %6, align 8
  br label %15

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 10, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @FT_Library_SetLcdFilter.default_weights, i64 0, i64 0), i64 5, i1 false)
  %9 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 11
  store void (%struct.FT_Bitmap_*, i8*)* @ft_lcd_filter_fir, void (%struct.FT_Bitmap_*, i8*)** %9, align 8
  br label %15

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 10, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @FT_Library_SetLcdFilter.light_weights, i64 0, i64 0), i64 5, i1 false)
  %12 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 11
  store void (%struct.FT_Bitmap_*, i8*)* @ft_lcd_filter_fir, void (%struct.FT_Bitmap_*, i8*)** %12, align 8
  br label %15

13:                                               ; preds = %4, %4
  %14 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 11
  store void (%struct.FT_Bitmap_*, i8*)* @_ft_lcd_filter_legacy, void (%struct.FT_Bitmap_*, i8*)** %14, align 8
  br label %15

15:                                               ; preds = %5, %7, %10, %13, %4, %2
  %16 = phi i32 [ 33, %2 ], [ 6, %4 ], [ 0, %13 ], [ 0, %10 ], [ 0, %7 ], [ 0, %5 ]
  ret i32 %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ft_lcd_filter_legacy(%struct.FT_Bitmap_* nocapture readonly, i8* nocapture readnone) #3 {
  %3 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %0, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %0, i64 0, i32 5
  %12 = load i8, i8* %11, align 2
  %13 = icmp sgt i32 %8, 0
  %14 = icmp ne i32 %6, 0
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = add i32 %6, -1
  %18 = mul nsw i32 %8, %17
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %10, i64 %19
  br label %21

21:                                               ; preds = %16, %2
  %22 = phi i8* [ %20, %16 ], [ %10, %2 ]
  %23 = icmp eq i8 %12, 5
  %24 = icmp ugt i32 %4, 2
  %25 = and i1 %24, %23
  br i1 %25, label %26, label %75

26:                                               ; preds = %21
  %27 = icmp eq i32 %6, 0
  br i1 %27, label %133, label %28

28:                                               ; preds = %26
  %29 = sext i32 %8 to i64
  %30 = sub nsw i64 0, %29
  br label %31

31:                                               ; preds = %28, %71
  %32 = phi i32 [ %6, %28 ], [ %72, %71 ]
  %33 = phi i8* [ %22, %28 ], [ %73, %71 ]
  br label %34

34:                                               ; preds = %31, %34
  %35 = phi i32 [ %69, %34 ], [ 0, %31 ]
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %33, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = mul nuw nsw i32 %39, 45372
  %41 = mul nuw nsw i32 %39, 5041
  %42 = add nuw i32 %35, 1
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %33, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = mul nuw nsw i32 %46, 15124
  %48 = add nuw nsw i32 %47, %40
  %49 = mul nuw nsw i32 %46, 43692
  %50 = add nuw nsw i32 %47, %41
  %51 = add i32 %35, 2
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %33, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = mul nuw nsw i32 %55, 5041
  %57 = add nuw nsw i32 %48, %56
  %58 = add nuw nsw i32 %55, %39
  %59 = mul nuw nsw i32 %58, 10923
  %60 = add nuw nsw i32 %59, %49
  %61 = mul nuw nsw i32 %55, 45372
  %62 = add nuw nsw i32 %50, %61
  %63 = lshr i32 %57, 16
  %64 = trunc i32 %63 to i8
  store i8 %64, i8* %37, align 1
  %65 = lshr i32 %60, 16
  %66 = trunc i32 %65 to i8
  store i8 %66, i8* %44, align 1
  %67 = lshr i32 %62, 16
  %68 = trunc i32 %67 to i8
  store i8 %68, i8* %53, align 1
  %69 = add i32 %35, 3
  %70 = icmp ult i32 %69, %4
  br i1 %70, label %34, label %71

71:                                               ; preds = %34
  %72 = add i32 %32, -1
  %73 = getelementptr inbounds i8, i8* %33, i64 %30
  %74 = icmp eq i32 %72, 0
  br i1 %74, label %133, label %31

75:                                               ; preds = %21
  %76 = icmp ne i8 %12, 6
  %77 = icmp ult i32 %6, 3
  %78 = or i1 %76, %77
  %79 = icmp eq i32 %4, 0
  %80 = or i1 %78, %79
  br i1 %80, label %133, label %81

81:                                               ; preds = %75
  %82 = shl nsw i32 %8, 1
  %83 = sext i32 %82 to i64
  %84 = sub nsw i64 0, %83
  %85 = sext i32 %8 to i64
  %86 = mul nsw i32 %8, 3
  %87 = sext i32 %86 to i64
  %88 = sub nsw i64 0, %87
  br label %89

89:                                               ; preds = %81, %129
  %90 = phi i32 [ %4, %81 ], [ %130, %129 ]
  %91 = phi i32 [ %6, %81 ], [ 0, %129 ]
  %92 = phi i8* [ %22, %81 ], [ %131, %129 ]
  %93 = icmp eq i32 %91, 0
  br i1 %93, label %129, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds i8, i8* %92, i64 %84
  br label %96

96:                                               ; preds = %94, %96
  %97 = phi i32 [ %126, %96 ], [ %91, %94 ]
  %98 = phi i8* [ %127, %96 ], [ %95, %94 ]
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = mul nuw nsw i32 %100, 45372
  %102 = mul nuw nsw i32 %100, 5041
  %103 = getelementptr inbounds i8, i8* %98, i64 %85
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = mul nuw nsw i32 %105, 15124
  %107 = add nuw nsw i32 %106, %101
  %108 = mul nuw nsw i32 %105, 43692
  %109 = add nuw nsw i32 %106, %102
  %110 = getelementptr inbounds i8, i8* %98, i64 %83
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = mul nuw nsw i32 %112, 5041
  %114 = add nuw nsw i32 %107, %113
  %115 = add nuw nsw i32 %112, %100
  %116 = mul nuw nsw i32 %115, 10923
  %117 = add nuw nsw i32 %116, %108
  %118 = mul nuw nsw i32 %112, 45372
  %119 = add nuw nsw i32 %109, %118
  %120 = lshr i32 %114, 16
  %121 = trunc i32 %120 to i8
  store i8 %121, i8* %98, align 1
  %122 = lshr i32 %117, 16
  %123 = trunc i32 %122 to i8
  store i8 %123, i8* %103, align 1
  %124 = lshr i32 %119, 16
  %125 = trunc i32 %124 to i8
  store i8 %125, i8* %110, align 1
  %126 = add i32 %97, -3
  %127 = getelementptr inbounds i8, i8* %98, i64 %88
  %128 = icmp eq i32 %126, 0
  br i1 %128, label %129, label %96

129:                                              ; preds = %96, %89
  %130 = add i32 %90, -1
  %131 = getelementptr inbounds i8, i8* %92, i64 1
  %132 = icmp eq i32 %130, 0
  br i1 %132, label %133, label %89

133:                                              ; preds = %129, %71, %75, %26
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @FT_Library_SetLcdGeometry(%struct.FT_LibraryRec_* nocapture readnone, %struct.FT_Vector_* nocapture readnone) local_unnamed_addr #2 {
  ret i32 7
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @ft_service_list_lookup(%struct.FT_ServiceDescRec_* readonly, i8* readonly) local_unnamed_addr #4 {
  %3 = icmp ne %struct.FT_ServiceDescRec_* %0, null
  %4 = icmp ne i8* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %23

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FT_ServiceDescRec_, %struct.FT_ServiceDescRec_* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %6, %18
  %11 = phi i8* [ %21, %18 ], [ %8, %6 ]
  %12 = phi %struct.FT_ServiceDescRec_* [ %19, %18 ], [ %0, %6 ]
  %13 = tail call i32 @strcmp(i8* nonnull %11, i8* nonnull %1) #17
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.FT_ServiceDescRec_, %struct.FT_ServiceDescRec_* %12, i64 0, i32 1
  %17 = load i8*, i8** %16, align 8
  br label %23

18:                                               ; preds = %10
  %19 = getelementptr inbounds %struct.FT_ServiceDescRec_, %struct.FT_ServiceDescRec_* %12, i64 1
  %20 = getelementptr inbounds %struct.FT_ServiceDescRec_, %struct.FT_ServiceDescRec_* %19, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %10

23:                                               ; preds = %18, %6, %15, %2
  %24 = phi i8* [ %17, %15 ], [ null, %2 ], [ null, %6 ], [ null, %18 ]
  ret i8* %24
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ft_validator_init(%struct.FT_ValidatorRec_*, i8*, i8*, i32) local_unnamed_addr #3 {
  %5 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %0, i64 0, i32 1
  store volatile i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %0, i64 0, i32 2
  store volatile i8* %2, i8** %6, align 8
  %7 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %0, i64 0, i32 3
  store volatile i32 %3, i32* %7, align 8
  %8 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %0, i64 0, i32 4
  store volatile i32 0, i32* %8, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @ft_validator_run(%struct.FT_ValidatorRec_* nocapture readnone) local_unnamed_addr #2 {
  ret i32 -1
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @ft_validator_error(%struct.FT_ValidatorRec_*, i32) local_unnamed_addr #8 {
  %3 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %0, i64 0, i32 4
  store volatile i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %0, i64 0, i32 0, i64 0
  tail call void @longjmp(%struct.__jmp_buf_tag* %4, i32 1) #18
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @longjmp(%struct.__jmp_buf_tag*, i32) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Stream_New(%struct.FT_LibraryRec_* readonly, %struct.FT_Open_Args_* readonly, %struct.FT_StreamRec_** nocapture) local_unnamed_addr #0 {
  store %struct.FT_StreamRec_* null, %struct.FT_StreamRec_** %2, align 8
  %4 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %4, label %65, label %5

5:                                                ; preds = %3
  %6 = icmp eq %struct.FT_Open_Args_* %1, null
  br i1 %6, label %65, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 0
  %9 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %9, i64 0, i32 1
  %11 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %10, align 8
  %12 = tail call i8* %11(%struct.FT_MemoryRec_* %9, i64 80) #16
  %13 = icmp eq i8* %12, null
  br i1 %13, label %65, label %14

14:                                               ; preds = %7
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %12, i8 0, i64 80, i1 false) #16
  %15 = bitcast i8* %12 to %struct.FT_StreamRec_*
  %16 = getelementptr inbounds i8, i8* %12, i64 56
  %17 = bitcast i8* %16 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %9, %struct.FT_MemoryRec_** %17, align 8
  %18 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %1, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %1, i64 0, i32 1
  %24 = bitcast i8** %23 to <2 x i64>*
  %25 = load <2 x i64>, <2 x i64>* %24, align 8
  %26 = bitcast i8* %12 to <2 x i64>*
  store <2 x i64> %25, <2 x i64>* %26, align 8
  %27 = getelementptr inbounds i8, i8* %12, i64 16
  %28 = bitcast i8* %27 to i64*
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %12, i64 64
  %30 = bitcast i8* %29 to i8**
  store i8* null, i8** %30, align 8
  %31 = getelementptr inbounds i8, i8* %12, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #16
  br label %59

32:                                               ; preds = %14
  %33 = and i32 %19, 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %46

35:                                               ; preds = %32
  %36 = and i32 %19, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %55, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %1, i64 0, i32 4
  %40 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %39, align 8
  %41 = icmp eq %struct.FT_StreamRec_* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %9, i64 0, i32 2
  %44 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %43, align 8
  tail call void %44(%struct.FT_MemoryRec_* %9, i8* nonnull %12) #16
  %45 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %39, align 8
  br label %59

46:                                               ; preds = %32
  %47 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %1, i64 0, i32 3
  %48 = load i8*, i8** %47, align 8
  %49 = tail call i32 @FT_Stream_Open(%struct.FT_StreamRec_* nonnull %15, i8* %48) #16
  %50 = bitcast i8** %47 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %12, i64 32
  %53 = bitcast i8* %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = icmp eq i32 %49, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %46, %38, %35
  %56 = phi i32 [ %49, %46 ], [ 6, %38 ], [ 6, %35 ]
  %57 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %9, i64 0, i32 2
  %58 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %57, align 8
  tail call void %58(%struct.FT_MemoryRec_* %9, i8* nonnull %12) #16
  br label %62

59:                                               ; preds = %22, %42, %46
  %60 = phi %struct.FT_StreamRec_* [ %15, %46 ], [ %45, %42 ], [ %15, %22 ]
  %61 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %60, i64 0, i32 7
  store %struct.FT_MemoryRec_* %9, %struct.FT_MemoryRec_** %61, align 8
  br label %62

62:                                               ; preds = %55, %59
  %63 = phi i32 [ 0, %59 ], [ %56, %55 ]
  %64 = phi %struct.FT_StreamRec_* [ %60, %59 ], [ null, %55 ]
  store %struct.FT_StreamRec_* %64, %struct.FT_StreamRec_** %2, align 8
  br label %65

65:                                               ; preds = %7, %62, %5, %3
  %66 = phi i32 [ 33, %3 ], [ 6, %5 ], [ %63, %62 ], [ 64, %7 ]
  ret i32 %66
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @FT_Stream_OpenMemory(%struct.FT_StreamRec_* nocapture, i8*, i64) local_unnamed_addr #10 {
  %4 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 0
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 2
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 8
  store i8* null, i8** %7, align 8
  %8 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 5
  %9 = bitcast i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false)
  ret void
}

declare hidden i32 @FT_Stream_Open(%struct.FT_StreamRec_*, i8*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_Stream_Free(%struct.FT_StreamRec_*, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_StreamRec_* %0, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 7
  %6 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 6
  %8 = load void (%struct.FT_StreamRec_*)*, void (%struct.FT_StreamRec_*)** %7, align 8
  %9 = icmp eq void (%struct.FT_StreamRec_*)* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %4
  tail call void %8(%struct.FT_StreamRec_* nonnull %0) #16
  br label %11

11:                                               ; preds = %4, %10
  %12 = icmp eq i32 %1, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %11
  %14 = bitcast %struct.FT_StreamRec_* %0 to i8*
  %15 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %6, i64 0, i32 2
  %16 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %15, align 8
  tail call void %16(%struct.FT_MemoryRec_* %6, i8* nonnull %14) #16
  br label %17

17:                                               ; preds = %13, %11, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_Stream_Close(%struct.FT_StreamRec_*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.FT_StreamRec_* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 6
  %5 = load void (%struct.FT_StreamRec_*)*, void (%struct.FT_StreamRec_*)** %4, align 8
  %6 = icmp eq void (%struct.FT_StreamRec_*)* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void %5(%struct.FT_StreamRec_* nonnull %0) #16
  br label %8

8:                                                ; preds = %3, %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ft_glyphslot_free_bitmap(%struct.FT_GlyphSlotRec_* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 21
  %3 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %2, align 8
  %4 = icmp eq %struct.FT_Slot_InternalRec_* %3, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 1
  %12 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %11, align 8
  %13 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %12, i64 0, i32 25
  %14 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %13, align 8
  %15 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 3
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %14, i64 0, i32 2
  %20 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %19, align 8
  tail call void %20(%struct.FT_MemoryRec_* %14, i8* nonnull %16) #16
  %21 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %2, align 8
  br label %22

22:                                               ; preds = %10, %18
  %23 = phi %struct.FT_Slot_InternalRec_* [ %3, %10 ], [ %21, %18 ]
  store i8* null, i8** %15, align 8
  %24 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %23, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, -2
  store i32 %26, i32* %24, align 8
  br label %29

27:                                               ; preds = %5, %1
  %28 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 3
  store i8* null, i8** %28, align 8
  br label %29

29:                                               ; preds = %27, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @ft_glyphslot_preset_bitmap(%struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_* readonly) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13
  %5 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 9
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1869968492
  br i1 %7, label %8, label %291

8:                                                ; preds = %3
  %9 = icmp eq %struct.FT_Vector_* %2, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  br label %15

15:                                               ; preds = %8, %10
  %16 = phi i64 [ %12, %10 ], [ 0, %8 ]
  %17 = phi i64 [ %14, %10 ], [ 0, %8 ]
  %18 = icmp eq %struct.FT_Outline_* %4, null
  br i1 %18, label %56, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13, i32 1
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %56, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13, i32 2
  %25 = load %struct.FT_Vector_*, %struct.FT_Vector_** %24, align 8
  %26 = sext i16 %21 to i64
  %27 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %25, i64 %26
  %28 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %25, i64 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %25, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp sgt i16 %21, 1
  br i1 %32, label %33, label %56

33:                                               ; preds = %23
  %34 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %25, i64 1
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi %struct.FT_Vector_* [ %54, %35 ], [ %34, %33 ]
  %37 = phi %struct.FT_Vector_* [ %36, %35 ], [ %25, %33 ]
  %38 = phi i64 [ %53, %35 ], [ %31, %33 ]
  %39 = phi i64 [ %47, %35 ], [ %29, %33 ]
  %40 = phi i64 [ %51, %35 ], [ %31, %33 ]
  %41 = phi i64 [ %45, %35 ], [ %29, %33 ]
  %42 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %36, i64 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp slt i64 %43, %41
  %45 = select i1 %44, i64 %43, i64 %41
  %46 = icmp sgt i64 %43, %39
  %47 = select i1 %46, i64 %43, i64 %39
  %48 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %37, i64 1, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp slt i64 %49, %40
  %51 = select i1 %50, i64 %49, i64 %40
  %52 = icmp sgt i64 %49, %38
  %53 = select i1 %52, i64 %49, i64 %38
  %54 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %36, i64 1
  %55 = icmp ult %struct.FT_Vector_* %54, %27
  br i1 %55, label %35, label %56

56:                                               ; preds = %35, %15, %19, %23
  %57 = phi i64 [ -6148914691236517206, %15 ], [ 0, %19 ], [ %31, %23 ], [ %53, %35 ]
  %58 = phi i64 [ -6148914691236517206, %15 ], [ 0, %19 ], [ %29, %23 ], [ %47, %35 ]
  %59 = phi i64 [ -6148914691236517206, %15 ], [ 0, %19 ], [ %31, %23 ], [ %51, %35 ]
  %60 = phi i64 [ -6148914691236517206, %15 ], [ 0, %19 ], [ %29, %23 ], [ %45, %35 ]
  %61 = ashr i64 %60, 6
  %62 = ashr i64 %16, 6
  %63 = add nsw i64 %61, %62
  %64 = ashr i64 %59, 6
  %65 = ashr i64 %17, 6
  %66 = add nsw i64 %64, %65
  %67 = ashr i64 %58, 6
  %68 = add nsw i64 %67, %62
  %69 = ashr i64 %57, 6
  %70 = add nsw i64 %69, %65
  %71 = and i64 %60, 63
  %72 = and i64 %16, 63
  %73 = add nuw nsw i64 %71, %72
  %74 = and i64 %59, 63
  %75 = and i64 %17, 63
  %76 = add nuw nsw i64 %74, %75
  %77 = and i64 %58, 63
  %78 = add nuw nsw i64 %77, %72
  %79 = and i64 %57, 63
  %80 = add nuw nsw i64 %79, %75
  switch i32 %1, label %207 [
    i32 2, label %81
    i32 3, label %119
    i32 4, label %163
  ]

81:                                               ; preds = %56
  %82 = add nuw nsw i64 %73, 31
  %83 = lshr i64 %82, 6
  %84 = add nsw i64 %83, %63
  %85 = add nuw nsw i64 %78, 32
  %86 = lshr i64 %85, 6
  %87 = add nsw i64 %86, %68
  %88 = icmp eq i64 %84, %87
  br i1 %88, label %89, label %99

89:                                               ; preds = %81
  %90 = and i64 %82, 63
  %91 = and i64 %85, 63
  %92 = add nsw i64 %91, -31
  %93 = add nsw i64 %92, %90
  %94 = icmp slt i64 %93, 32
  br i1 %94, label %95, label %97

95:                                               ; preds = %89
  %96 = add nsw i64 %84, -1
  br label %99

97:                                               ; preds = %89
  %98 = add nsw i64 %84, 1
  br label %99

99:                                               ; preds = %95, %97, %81
  %100 = phi i64 [ %84, %95 ], [ %98, %97 ], [ %87, %81 ]
  %101 = phi i64 [ %96, %95 ], [ %84, %97 ], [ %84, %81 ]
  %102 = add nuw nsw i64 %76, 31
  %103 = lshr i64 %102, 6
  %104 = add nsw i64 %103, %66
  %105 = add nuw nsw i64 %80, 32
  %106 = lshr i64 %105, 6
  %107 = add nsw i64 %106, %70
  %108 = icmp eq i64 %104, %107
  br i1 %108, label %109, label %220

109:                                              ; preds = %99
  %110 = and i64 %102, 63
  %111 = and i64 %105, 63
  %112 = add nsw i64 %111, -31
  %113 = add nsw i64 %112, %110
  %114 = icmp slt i64 %113, 32
  br i1 %114, label %115, label %117

115:                                              ; preds = %109
  %116 = add nsw i64 %104, -1
  br label %220

117:                                              ; preds = %109
  %118 = add nsw i64 %104, 1
  br label %220

119:                                              ; preds = %56
  %120 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 1
  %121 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %120, align 8
  %122 = icmp eq %struct.FT_FaceRec_* %121, null
  br i1 %122, label %131, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %121, i64 0, i32 30
  %125 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %124, align 8
  %126 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %125, i64 0, i32 8
  %127 = load void (%struct.FT_Bitmap_*, i8*)*, void (%struct.FT_Bitmap_*, i8*)** %126, align 8
  %128 = icmp eq void (%struct.FT_Bitmap_*, i8*)* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %123
  %130 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %125, i64 0, i32 7, i64 0
  br label %137

131:                                              ; preds = %123, %119
  %132 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 0
  %133 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %132, align 8
  %134 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %133, i64 0, i32 10, i64 0
  %135 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %133, i64 0, i32 11
  %136 = load void (%struct.FT_Bitmap_*, i8*)*, void (%struct.FT_Bitmap_*, i8*)** %135, align 8
  br label %137

137:                                              ; preds = %131, %129
  %138 = phi i8* [ %130, %129 ], [ %134, %131 ]
  %139 = phi void (%struct.FT_Bitmap_*, i8*)* [ %127, %129 ], [ %136, %131 ]
  %140 = icmp eq void (%struct.FT_Bitmap_*, i8*)* %139, @ft_lcd_filter_fir
  br i1 %140, label %141, label %228

141:                                              ; preds = %137
  %142 = load i8, i8* %138, align 1
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %149

144:                                              ; preds = %141
  %145 = getelementptr inbounds i8, i8* %138, i64 1
  %146 = load i8, i8* %145, align 1
  %147 = icmp eq i8 %146, 0
  %148 = select i1 %147, i64 0, i64 22
  br label %149

149:                                              ; preds = %144, %141
  %150 = phi i64 [ %148, %144 ], [ 43, %141 ]
  %151 = sub nsw i64 %73, %150
  %152 = getelementptr inbounds i8, i8* %138, i64 4
  %153 = load i8, i8* %152, align 1
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %155, label %160

155:                                              ; preds = %149
  %156 = getelementptr inbounds i8, i8* %138, i64 3
  %157 = load i8, i8* %156, align 1
  %158 = icmp eq i8 %157, 0
  %159 = select i1 %158, i64 0, i64 22
  br label %160

160:                                              ; preds = %155, %149
  %161 = phi i64 [ %159, %155 ], [ 43, %149 ]
  %162 = add nuw nsw i64 %161, %78
  br label %228

163:                                              ; preds = %56
  %164 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 1
  %165 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %164, align 8
  %166 = icmp eq %struct.FT_FaceRec_* %165, null
  br i1 %166, label %175, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %165, i64 0, i32 30
  %169 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %168, align 8
  %170 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %169, i64 0, i32 8
  %171 = load void (%struct.FT_Bitmap_*, i8*)*, void (%struct.FT_Bitmap_*, i8*)** %170, align 8
  %172 = icmp eq void (%struct.FT_Bitmap_*, i8*)* %171, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %167
  %174 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %169, i64 0, i32 7, i64 0
  br label %181

175:                                              ; preds = %167, %163
  %176 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 0
  %177 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %176, align 8
  %178 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %177, i64 0, i32 10, i64 0
  %179 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %177, i64 0, i32 11
  %180 = load void (%struct.FT_Bitmap_*, i8*)*, void (%struct.FT_Bitmap_*, i8*)** %179, align 8
  br label %181

181:                                              ; preds = %175, %173
  %182 = phi i8* [ %174, %173 ], [ %178, %175 ]
  %183 = phi void (%struct.FT_Bitmap_*, i8*)* [ %171, %173 ], [ %180, %175 ]
  %184 = icmp eq void (%struct.FT_Bitmap_*, i8*)* %183, @ft_lcd_filter_fir
  br i1 %184, label %185, label %246

185:                                              ; preds = %181
  %186 = load i8, i8* %182, align 1
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %188, label %193

188:                                              ; preds = %185
  %189 = getelementptr inbounds i8, i8* %182, i64 1
  %190 = load i8, i8* %189, align 1
  %191 = icmp eq i8 %190, 0
  %192 = select i1 %191, i64 0, i64 22
  br label %193

193:                                              ; preds = %188, %185
  %194 = phi i64 [ %192, %188 ], [ 43, %185 ]
  %195 = sub nsw i64 %76, %194
  %196 = getelementptr inbounds i8, i8* %182, i64 4
  %197 = load i8, i8* %196, align 1
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %199, label %204

199:                                              ; preds = %193
  %200 = getelementptr inbounds i8, i8* %182, i64 3
  %201 = load i8, i8* %200, align 1
  %202 = icmp eq i8 %201, 0
  %203 = select i1 %202, i64 0, i64 22
  br label %204

204:                                              ; preds = %199, %193
  %205 = phi i64 [ %203, %199 ], [ 43, %193 ]
  %206 = add nuw nsw i64 %205, %80
  br label %246

207:                                              ; preds = %56
  %208 = lshr i64 %73, 6
  %209 = add nsw i64 %208, %63
  %210 = lshr i64 %76, 6
  %211 = add nsw i64 %210, %66
  %212 = add nuw nsw i64 %78, 63
  %213 = lshr i64 %212, 6
  %214 = add nsw i64 %213, %68
  %215 = add nuw nsw i64 %80, 63
  %216 = lshr i64 %215, 6
  %217 = add nsw i64 %216, %70
  %218 = sub nsw i64 %214, %209
  %219 = sub nsw i64 %217, %211
  br label %262

220:                                              ; preds = %115, %117, %99
  %221 = phi i64 [ %107, %99 ], [ %118, %117 ], [ %104, %115 ]
  %222 = phi i64 [ %104, %99 ], [ %104, %117 ], [ %116, %115 ]
  %223 = sub nsw i64 %100, %101
  %224 = sub nsw i64 %221, %222
  %225 = add nsw i64 %223, 15
  %226 = ashr i64 %225, 4
  %227 = shl nsw i64 %226, 1
  br label %262

228:                                              ; preds = %137, %160
  %229 = phi i64 [ %78, %137 ], [ %162, %160 ]
  %230 = phi i64 [ %73, %137 ], [ %151, %160 ]
  %231 = ashr i64 %230, 6
  %232 = add nsw i64 %231, %63
  %233 = lshr i64 %76, 6
  %234 = add nsw i64 %233, %66
  %235 = add nuw nsw i64 %229, 63
  %236 = ashr i64 %235, 6
  %237 = add nsw i64 %236, %68
  %238 = add nuw nsw i64 %80, 63
  %239 = lshr i64 %238, 6
  %240 = add nsw i64 %239, %70
  %241 = sub nsw i64 %237, %232
  %242 = sub nsw i64 %240, %234
  %243 = mul nsw i64 %241, 3
  %244 = add nsw i64 %243, 3
  %245 = and i64 %244, -4
  br label %262

246:                                              ; preds = %181, %204
  %247 = phi i64 [ %80, %181 ], [ %206, %204 ]
  %248 = phi i64 [ %76, %181 ], [ %195, %204 ]
  %249 = lshr i64 %73, 6
  %250 = add nsw i64 %249, %63
  %251 = ashr i64 %248, 6
  %252 = add nsw i64 %251, %66
  %253 = add nuw nsw i64 %78, 63
  %254 = lshr i64 %253, 6
  %255 = add nsw i64 %254, %68
  %256 = add nuw nsw i64 %247, 63
  %257 = ashr i64 %256, 6
  %258 = add nsw i64 %257, %70
  %259 = sub nsw i64 %255, %250
  %260 = sub nsw i64 %258, %252
  %261 = mul nsw i64 %260, 3
  br label %262

262:                                              ; preds = %207, %246, %228, %220
  %263 = phi i64 [ %232, %228 ], [ %101, %220 ], [ %250, %246 ], [ %209, %207 ]
  %264 = phi i64 [ %234, %228 ], [ %222, %220 ], [ %252, %246 ], [ %211, %207 ]
  %265 = phi i64 [ %237, %228 ], [ %100, %220 ], [ %255, %246 ], [ %214, %207 ]
  %266 = phi i64 [ %240, %228 ], [ %221, %220 ], [ %258, %246 ], [ %217, %207 ]
  %267 = phi i8 [ 5, %228 ], [ 1, %220 ], [ 6, %246 ], [ 2, %207 ]
  %268 = phi i64 [ %243, %228 ], [ %223, %220 ], [ %259, %246 ], [ %218, %207 ]
  %269 = phi i64 [ %242, %228 ], [ %224, %220 ], [ %261, %246 ], [ %219, %207 ]
  %270 = phi i64 [ %245, %228 ], [ %227, %220 ], [ %259, %246 ], [ %218, %207 ]
  %271 = trunc i64 %263 to i32
  %272 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 11
  store i32 %271, i32* %272, align 8
  %273 = trunc i64 %266 to i32
  %274 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 12
  store i32 %273, i32* %274, align 4
  %275 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 5
  store i8 %267, i8* %275, align 2
  %276 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 4
  store i16 256, i16* %276, align 8
  %277 = trunc i64 %268 to i32
  %278 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 1
  store i32 %277, i32* %278, align 4
  %279 = trunc i64 %269 to i32
  %280 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 0
  store i32 %279, i32* %280, align 8
  %281 = trunc i64 %270 to i32
  %282 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 2
  store i32 %281, i32* %282, align 8
  %283 = icmp slt i64 %263, -32768
  %284 = icmp sgt i64 %265, 32767
  %285 = or i1 %283, %284
  %286 = icmp slt i64 %264, -32768
  %287 = or i1 %286, %285
  %288 = icmp sgt i64 %266, 32767
  %289 = or i1 %288, %287
  %290 = zext i1 %289 to i8
  br label %291

291:                                              ; preds = %262, %3
  %292 = phi i8 [ 1, %3 ], [ %290, %262 ]
  ret i8 %292
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @FT_Outline_Get_CBox(%struct.FT_Outline_* readonly, %struct.FT_BBox_*) local_unnamed_addr #3 {
  %3 = icmp ne %struct.FT_Outline_* %0, null
  %4 = icmp ne %struct.FT_BBox_* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %52

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 1
  %8 = load i16, i16* %7, align 2
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %43, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 2
  %12 = load %struct.FT_Vector_*, %struct.FT_Vector_** %11, align 8
  %13 = sext i16 %8 to i64
  %14 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %12, i64 %13
  %15 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %12, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %12, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp sgt i16 %8, 1
  br i1 %19, label %20, label %43

20:                                               ; preds = %10
  %21 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %12, i64 1
  br label %22

22:                                               ; preds = %20, %22
  %23 = phi %struct.FT_Vector_* [ %41, %22 ], [ %21, %20 ]
  %24 = phi %struct.FT_Vector_* [ %23, %22 ], [ %12, %20 ]
  %25 = phi i64 [ %40, %22 ], [ %18, %20 ]
  %26 = phi i64 [ %34, %22 ], [ %16, %20 ]
  %27 = phi i64 [ %38, %22 ], [ %18, %20 ]
  %28 = phi i64 [ %32, %22 ], [ %16, %20 ]
  %29 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %23, i64 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp slt i64 %30, %28
  %32 = select i1 %31, i64 %30, i64 %28
  %33 = icmp sgt i64 %30, %26
  %34 = select i1 %33, i64 %30, i64 %26
  %35 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %24, i64 1, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = icmp slt i64 %36, %27
  %38 = select i1 %37, i64 %36, i64 %27
  %39 = icmp sgt i64 %36, %25
  %40 = select i1 %39, i64 %36, i64 %25
  %41 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %23, i64 1
  %42 = icmp ult %struct.FT_Vector_* %41, %14
  br i1 %42, label %22, label %43

43:                                               ; preds = %22, %10, %6
  %44 = phi i64 [ 0, %6 ], [ %16, %10 ], [ %32, %22 ]
  %45 = phi i64 [ 0, %6 ], [ %18, %10 ], [ %38, %22 ]
  %46 = phi i64 [ 0, %6 ], [ %16, %10 ], [ %34, %22 ]
  %47 = phi i64 [ 0, %6 ], [ %18, %10 ], [ %40, %22 ]
  %48 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %1, i64 0, i32 0
  store i64 %44, i64* %48, align 8
  %49 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %1, i64 0, i32 2
  store i64 %46, i64* %49, align 8
  %50 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %1, i64 0, i32 1
  store i64 %45, i64* %50, align 8
  %51 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %1, i64 0, i32 3
  store i64 %47, i64* %51, align 8
  br label %52

52:                                               ; preds = %43, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ft_glyphslot_set_bitmap(%struct.FT_GlyphSlotRec_* nocapture, i8*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 21
  %4 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %3, align 8
  %5 = icmp eq %struct.FT_Slot_InternalRec_* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %28, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 1
  %13 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %12, align 8
  %14 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %13, i64 0, i32 25
  %15 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %14, align 8
  %16 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 3
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %15, i64 0, i32 2
  %21 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %20, align 8
  tail call void %21(%struct.FT_MemoryRec_* %15, i8* nonnull %17) #16
  %22 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %3, align 8
  br label %23

23:                                               ; preds = %19, %11
  %24 = phi %struct.FT_Slot_InternalRec_* [ %4, %11 ], [ %22, %19 ]
  store i8* null, i8** %16, align 8
  %25 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, -2
  store i32 %27, i32* %25, align 8
  br label %30

28:                                               ; preds = %6, %2
  %29 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 3
  store i8* null, i8** %29, align 8
  br label %30

30:                                               ; preds = %23, %28
  %31 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 3
  store i8* %1, i8** %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ft_glyphslot_alloc_bitmap(%struct.FT_GlyphSlotRec_* nocapture, i64) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 1
  %4 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %4, i64 0, i32 25
  %6 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 21
  %8 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 3
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %6, i64 0, i32 2
  %19 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %18, align 8
  tail call void %19(%struct.FT_MemoryRec_* %6, i8* nonnull %15) #16
  br label %20

20:                                               ; preds = %13, %17
  store i8* null, i8** %14, align 8
  br label %23

21:                                               ; preds = %2
  %22 = or i32 %10, 1
  store i32 %22, i32* %9, align 8
  br label %23

23:                                               ; preds = %21, %20
  %24 = icmp sgt i64 %1, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %23
  %26 = icmp eq i64 %1, 0
  %27 = select i1 %26, i32 0, i32 6
  br label %34

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %6, i64 0, i32 1
  %30 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %29, align 8
  %31 = tail call i8* %30(%struct.FT_MemoryRec_* %6, i64 %1) #16
  %32 = icmp eq i8* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %28
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %31, i8 0, i64 %1, i1 false) #16
  br label %34

34:                                               ; preds = %25, %28, %33
  %35 = phi i8* [ null, %25 ], [ null, %28 ], [ %31, %33 ]
  %36 = phi i32 [ %27, %25 ], [ 64, %28 ], [ 0, %33 ]
  %37 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 3
  store i8* %35, i8** %37, align 8
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_New_GlyphSlot(%struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_**) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %3, label %154, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %6 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %5, align 8
  %7 = icmp eq %struct.FT_DriverRec_* %6, null
  br i1 %7, label %154, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %6, i64 0, i32 1
  %10 = load %struct.FT_Driver_ClassRec_*, %struct.FT_Driver_ClassRec_** %9, align 8
  %11 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %6, i64 0, i32 0, i32 2
  %12 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %11, align 8
  %13 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %10, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %8
  %17 = icmp eq i64 %14, 0
  br i1 %17, label %24, label %150

18:                                               ; preds = %8
  %19 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %12, i64 0, i32 1
  %20 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %19, align 8
  %21 = tail call i8* %20(%struct.FT_MemoryRec_* %12, i64 %14) #16
  %22 = icmp eq i8* %21, null
  br i1 %22, label %150, label %23

23:                                               ; preds = %18
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %21, i8 0, i64 %14, i1 false) #16
  br label %24

24:                                               ; preds = %23, %16
  %25 = phi i8* [ %21, %23 ], [ null, %16 ]
  %26 = bitcast i8* %25 to %struct.FT_GlyphSlotRec_*
  %27 = getelementptr inbounds i8, i8* %25, i64 8
  %28 = bitcast i8* %27 to %struct.FT_FaceRec_**
  store %struct.FT_FaceRec_* %0, %struct.FT_FaceRec_** %28, align 8
  %29 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %5, align 8
  %30 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %29, i64 0, i32 1
  %31 = load %struct.FT_Driver_ClassRec_*, %struct.FT_Driver_ClassRec_** %30, align 8
  %32 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %29, i64 0, i32 0, i32 2
  %33 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %32, align 8
  %34 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %29, i64 0, i32 0, i32 1
  %35 = bitcast %struct.FT_LibraryRec_** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast i8* %25 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %33, i64 0, i32 1
  %39 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %38, align 8
  %40 = tail call i8* %39(%struct.FT_MemoryRec_* %33, i64 80) #16
  %41 = icmp eq i8* %40, null
  br i1 %41, label %66, label %42

42:                                               ; preds = %24
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %40, i8 0, i64 80, i1 false) #16
  %43 = getelementptr inbounds i8, i8* %25, i64 296
  %44 = bitcast i8* %43 to i8**
  store i8* %40, i8** %44, align 8
  %45 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %29, i64 0, i32 0, i32 0
  %46 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %45, align 8
  %47 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %46, i64 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 512
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %59

51:                                               ; preds = %42
  %52 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %38, align 8
  %53 = tail call i8* %52(%struct.FT_MemoryRec_* %33, i64 176) #16
  %54 = icmp eq i8* %53, null
  br i1 %54, label %66, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds i8, i8* %53, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %56, i8 0, i64 168, i1 false) #16
  %57 = bitcast i8* %53 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %33, %struct.FT_MemoryRec_** %57, align 8
  %58 = bitcast i8* %40 to i8**
  store i8* %53, i8** %58, align 8
  br label %59

59:                                               ; preds = %55, %42
  %60 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %31, i64 0, i32 8
  %61 = load i32 (%struct.FT_GlyphSlotRec_*)*, i32 (%struct.FT_GlyphSlotRec_*)** %60, align 8
  %62 = icmp eq i32 (%struct.FT_GlyphSlotRec_*)* %61, null
  br i1 %62, label %140, label %63

63:                                               ; preds = %59
  %64 = tail call i32 %61(%struct.FT_GlyphSlotRec_* %26) #16
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %140, label %66

66:                                               ; preds = %24, %51, %63
  %67 = phi i32 [ %64, %63 ], [ 64, %51 ], [ 64, %24 ]
  %68 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %28, align 8
  %69 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %68, i64 0, i32 24
  %70 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %69, align 8
  %71 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %70, i64 0, i32 1
  %72 = load %struct.FT_Driver_ClassRec_*, %struct.FT_Driver_ClassRec_** %71, align 8
  %73 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %70, i64 0, i32 0, i32 2
  %74 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %73, align 8
  %75 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %72, i64 0, i32 9
  %76 = load void (%struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphSlotRec_*)** %75, align 8
  %77 = icmp eq void (%struct.FT_GlyphSlotRec_*)* %76, null
  br i1 %77, label %79, label %78

78:                                               ; preds = %66
  tail call void %76(%struct.FT_GlyphSlotRec_* %26) #16
  br label %79

79:                                               ; preds = %78, %66
  %80 = getelementptr inbounds i8, i8* %25, i64 296
  %81 = bitcast i8* %80 to %struct.FT_Slot_InternalRec_**
  %82 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %81, align 8
  %83 = icmp eq %struct.FT_Slot_InternalRec_* %82, null
  br i1 %83, label %107, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %82, i64 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %107, label %89

89:                                               ; preds = %84
  %90 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %28, align 8
  %91 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %90, i64 0, i32 25
  %92 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %91, align 8
  %93 = getelementptr inbounds i8, i8* %25, i64 168
  %94 = bitcast i8* %93 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %89
  %98 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %92, i64 0, i32 2
  %99 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %98, align 8
  tail call void %99(%struct.FT_MemoryRec_* %92, i8* nonnull %95) #16
  %100 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %81, align 8
  br label %101

101:                                              ; preds = %97, %89
  %102 = phi %struct.FT_Slot_InternalRec_* [ %82, %89 ], [ %100, %97 ]
  store i8* null, i8** %94, align 8
  %103 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %102, i64 0, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = and i32 %104, -2
  store i32 %105, i32* %103, align 8
  %106 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %81, align 8
  br label %110

107:                                              ; preds = %84, %79
  %108 = getelementptr inbounds i8, i8* %25, i64 168
  %109 = bitcast i8* %108 to i8**
  store i8* null, i8** %109, align 8
  br label %110

110:                                              ; preds = %101, %107
  %111 = phi %struct.FT_Slot_InternalRec_* [ %106, %101 ], [ %82, %107 ]
  %112 = icmp eq %struct.FT_Slot_InternalRec_* %111, null
  br i1 %112, label %135, label %113

113:                                              ; preds = %110
  %114 = bitcast %struct.FT_Slot_InternalRec_* %111 to i8*
  %115 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %70, i64 0, i32 0, i32 0
  %116 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %115, align 8
  %117 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %116, i64 0, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = and i64 %118, 512
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %128

121:                                              ; preds = %113
  %122 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %111, i64 0, i32 0
  %123 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %122, align 8
  tail call void @FT_GlyphLoader_Done(%struct.FT_GlyphLoaderRec_* %123) #16
  %124 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %81, align 8
  %125 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %124, i64 0, i32 0
  store %struct.FT_GlyphLoaderRec_* null, %struct.FT_GlyphLoaderRec_** %125, align 8
  %126 = bitcast i8* %80 to i8**
  %127 = load i8*, i8** %126, align 8
  br label %128

128:                                              ; preds = %121, %113
  %129 = phi i8* [ %127, %121 ], [ %114, %113 ]
  %130 = icmp eq i8* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %74, i64 0, i32 2
  %133 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %132, align 8
  tail call void %133(%struct.FT_MemoryRec_* %74, i8* nonnull %129) #16
  br label %134

134:                                              ; preds = %131, %128
  store %struct.FT_Slot_InternalRec_* null, %struct.FT_Slot_InternalRec_** %81, align 8
  br label %135

135:                                              ; preds = %110, %134
  %136 = icmp eq i8* %25, null
  br i1 %136, label %154, label %137

137:                                              ; preds = %135
  %138 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %12, i64 0, i32 2
  %139 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %138, align 8
  tail call void %139(%struct.FT_MemoryRec_* %12, i8* nonnull %25) #16
  br label %154

140:                                              ; preds = %59, %63
  %141 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 21
  %142 = bitcast %struct.FT_GlyphSlotRec_** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = getelementptr inbounds i8, i8* %25, i64 16
  %145 = bitcast i8* %144 to i64*
  store i64 %143, i64* %145, align 8
  %146 = bitcast %struct.FT_GlyphSlotRec_** %141 to i8**
  store i8* %25, i8** %146, align 8
  %147 = icmp eq %struct.FT_GlyphSlotRec_** %1, null
  br i1 %147, label %154, label %148

148:                                              ; preds = %140
  %149 = bitcast %struct.FT_GlyphSlotRec_** %1 to i8**
  store i8* %25, i8** %149, align 8
  br label %154

150:                                              ; preds = %18, %16
  %151 = phi i32 [ 6, %16 ], [ 64, %18 ]
  %152 = icmp eq %struct.FT_GlyphSlotRec_** %1, null
  br i1 %152, label %154, label %153

153:                                              ; preds = %150
  store %struct.FT_GlyphSlotRec_* null, %struct.FT_GlyphSlotRec_** %1, align 8
  br label %154

154:                                              ; preds = %148, %153, %140, %150, %135, %137, %4, %2
  %155 = phi i32 [ 35, %2 ], [ 6, %4 ], [ 0, %140 ], [ 0, %148 ], [ %151, %150 ], [ %151, %153 ], [ %67, %135 ], [ %67, %137 ]
  ret i32 %155
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_Done_GlyphSlot(%struct.FT_GlyphSlotRec_*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.FT_GlyphSlotRec_* %0, null
  br i1 %2, label %105, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 1
  %5 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %4, align 8
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 24
  %7 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %7, i64 0, i32 0, i32 2
  %9 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 21
  %11 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %10, align 8
  %12 = icmp eq %struct.FT_GlyphSlotRec_* %11, null
  br i1 %12, label %105, label %13

13:                                               ; preds = %3
  %14 = icmp eq %struct.FT_GlyphSlotRec_* %11, %0
  br i1 %14, label %17, label %100

15:                                               ; preds = %100
  %16 = icmp eq %struct.FT_GlyphSlotRec_* %103, %0
  br i1 %16, label %17, label %100

17:                                               ; preds = %15, %13
  %18 = phi %struct.FT_GlyphSlotRec_* [ null, %13 ], [ %101, %15 ]
  %19 = icmp eq %struct.FT_GlyphSlotRec_* %18, null
  %20 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 2
  %21 = bitcast %struct.FT_GlyphSlotRec_** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %18, i64 0, i32 2
  %24 = select i1 %19, %struct.FT_GlyphSlotRec_** %10, %struct.FT_GlyphSlotRec_** %23
  %25 = bitcast %struct.FT_GlyphSlotRec_** %24 to i64*
  store i64 %22, i64* %25, align 8
  %26 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 4, i32 1
  %27 = load void (i8*)*, void (i8*)** %26, align 8
  %28 = icmp eq void (i8*)* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %17
  %30 = bitcast %struct.FT_GlyphSlotRec_* %0 to i8*
  tail call void %27(i8* nonnull %30) #16
  br label %31

31:                                               ; preds = %17, %29
  %32 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %4, align 8
  %33 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %32, i64 0, i32 24
  %34 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %33, align 8
  %35 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %34, i64 0, i32 1
  %36 = load %struct.FT_Driver_ClassRec_*, %struct.FT_Driver_ClassRec_** %35, align 8
  %37 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %34, i64 0, i32 0, i32 2
  %38 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %37, align 8
  %39 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %36, i64 0, i32 9
  %40 = load void (%struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphSlotRec_*)** %39, align 8
  %41 = icmp eq void (%struct.FT_GlyphSlotRec_*)* %40, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %31
  tail call void %40(%struct.FT_GlyphSlotRec_* nonnull %0) #16
  br label %43

43:                                               ; preds = %42, %31
  %44 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 21
  %45 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %44, align 8
  %46 = icmp eq %struct.FT_Slot_InternalRec_* %45, null
  br i1 %46, label %69, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %45, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %69, label %52

52:                                               ; preds = %47
  %53 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %4, align 8
  %54 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %53, i64 0, i32 25
  %55 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %54, align 8
  %56 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 3
  %57 = load i8*, i8** %56, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %63, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %55, i64 0, i32 2
  %61 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %60, align 8
  tail call void %61(%struct.FT_MemoryRec_* %55, i8* nonnull %57) #16
  %62 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %44, align 8
  br label %63

63:                                               ; preds = %59, %52
  %64 = phi %struct.FT_Slot_InternalRec_* [ %45, %52 ], [ %62, %59 ]
  store i8* null, i8** %56, align 8
  %65 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %64, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, -2
  store i32 %67, i32* %65, align 8
  %68 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %44, align 8
  br label %71

69:                                               ; preds = %47, %43
  %70 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 3
  store i8* null, i8** %70, align 8
  br label %71

71:                                               ; preds = %63, %69
  %72 = phi %struct.FT_Slot_InternalRec_* [ %68, %63 ], [ %45, %69 ]
  %73 = icmp eq %struct.FT_Slot_InternalRec_* %72, null
  br i1 %73, label %96, label %74

74:                                               ; preds = %71
  %75 = bitcast %struct.FT_Slot_InternalRec_* %72 to i8*
  %76 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %34, i64 0, i32 0, i32 0
  %77 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %76, align 8
  %78 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %77, i64 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = and i64 %79, 512
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %89

82:                                               ; preds = %74
  %83 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %72, i64 0, i32 0
  %84 = load %struct.FT_GlyphLoaderRec_*, %struct.FT_GlyphLoaderRec_** %83, align 8
  tail call void @FT_GlyphLoader_Done(%struct.FT_GlyphLoaderRec_* %84) #16
  %85 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %44, align 8
  %86 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %85, i64 0, i32 0
  store %struct.FT_GlyphLoaderRec_* null, %struct.FT_GlyphLoaderRec_** %86, align 8
  %87 = bitcast %struct.FT_Slot_InternalRec_** %44 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %82, %74
  %90 = phi i8* [ %88, %82 ], [ %75, %74 ]
  %91 = icmp eq i8* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %38, i64 0, i32 2
  %94 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %93, align 8
  tail call void %94(%struct.FT_MemoryRec_* %38, i8* nonnull %90) #16
  br label %95

95:                                               ; preds = %92, %89
  store %struct.FT_Slot_InternalRec_* null, %struct.FT_Slot_InternalRec_** %44, align 8
  br label %96

96:                                               ; preds = %71, %95
  %97 = bitcast %struct.FT_GlyphSlotRec_* %0 to i8*
  %98 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %9, i64 0, i32 2
  %99 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %98, align 8
  tail call void %99(%struct.FT_MemoryRec_* %9, i8* nonnull %97) #16
  br label %105

100:                                              ; preds = %13, %15
  %101 = phi %struct.FT_GlyphSlotRec_* [ %103, %15 ], [ %11, %13 ]
  %102 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %101, i64 0, i32 2
  %103 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %102, align 8
  %104 = icmp eq %struct.FT_GlyphSlotRec_* %103, null
  br i1 %104, label %105, label %15

105:                                              ; preds = %100, %3, %96, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_Set_Transform(%struct.FT_FaceRec_* readonly, %struct.FT_Matrix_* readonly, %struct.FT_Vector_* readonly) local_unnamed_addr #0 {
  %4 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %4, label %54, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %7 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %7, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = icmp eq %struct.FT_Matrix_* %1, null
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %7, i64 0, i32 0
  %12 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %7, i64 0, i32 0, i32 0
  store i64 65536, i64* %12, align 8
  %13 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %7, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %7, i64 0, i32 0, i32 3
  %15 = bitcast i64* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false)
  store i64 65536, i64* %14, align 8
  br label %19

16:                                               ; preds = %5
  %17 = bitcast %struct.FT_Face_InternalRec_* %7 to i8*
  %18 = bitcast %struct.FT_Matrix_* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 8 %18, i64 32, i1 false)
  br label %19

19:                                               ; preds = %16, %10
  %20 = phi %struct.FT_Matrix_* [ %1, %16 ], [ %11, %10 ]
  %21 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %20, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %20, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = or i64 %24, %22
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %35

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %20, i64 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 65536
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %20, i64 0, i32 3
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 65536
  br i1 %34, label %36, label %35

35:                                               ; preds = %31, %27, %19
  store i32 1, i32* %8, align 8
  br label %36

36:                                               ; preds = %31, %35
  %37 = phi i32 [ 2, %31 ], [ 3, %35 ]
  %38 = icmp eq %struct.FT_Vector_* %2, null
  %39 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %7, i64 0, i32 1
  %40 = bitcast %struct.FT_Vector_* %39 to i8*
  br i1 %38, label %41, label %42

41:                                               ; preds = %36
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false)
  br label %46

42:                                               ; preds = %36
  %43 = bitcast %struct.FT_Vector_* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* nonnull align 8 %43, i64 16, i1 false)
  %44 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %42, %41
  %47 = phi i64 [ %45, %42 ], [ 0, %41 ]
  %48 = phi %struct.FT_Vector_* [ %2, %42 ], [ %39, %41 ]
  %49 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %48, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = or i64 %50, %47
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %46
  store i32 %37, i32* %8, align 8
  br label %54

54:                                               ; preds = %53, %46, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_Get_Transform(%struct.FT_FaceRec_* readonly, %struct.FT_Matrix_*, %struct.FT_Vector_*) local_unnamed_addr #0 {
  %4 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %7 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %6, align 8
  %8 = icmp eq %struct.FT_Matrix_* %1, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = bitcast %struct.FT_Matrix_* %1 to i8*
  %11 = bitcast %struct.FT_Face_InternalRec_* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %11, i64 32, i1 false)
  br label %12

12:                                               ; preds = %5, %9
  %13 = icmp eq %struct.FT_Vector_* %2, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %7, i64 0, i32 1
  %16 = bitcast %struct.FT_Vector_* %2 to i8*
  %17 = bitcast %struct.FT_Vector_* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 %17, i64 16, i1 false)
  br label %18

18:                                               ; preds = %14, %12, %3
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i8* @strstr(i8*, i8* nocapture) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @FT_Outline_Check(%struct.FT_Outline_* readonly) local_unnamed_addr #12 {
  %2 = icmp eq %struct.FT_Outline_* %0, null
  br i1 %2, label %36, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 1
  %5 = load i16, i16* %4, align 2
  %6 = sext i16 %5 to i32
  %7 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 0
  %8 = load i16, i16* %7, align 8
  %9 = sext i16 %8 to i64
  %10 = or i16 %8, %5
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %37, label %12

12:                                               ; preds = %3
  %13 = icmp slt i16 %5, 1
  %14 = icmp slt i16 %8, 1
  %15 = or i1 %13, %14
  br i1 %15, label %36, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 4
  %18 = load i16*, i16** %17, align 8
  %19 = and i64 %9, 4294967295
  br label %22

20:                                               ; preds = %22
  %21 = icmp eq i64 %31, %19
  br i1 %21, label %32, label %22

22:                                               ; preds = %20, %16
  %23 = phi i64 [ 0, %16 ], [ %31, %20 ]
  %24 = phi i32 [ -1, %16 ], [ %27, %20 ]
  %25 = getelementptr inbounds i16, i16* %18, i64 %23
  %26 = load i16, i16* %25, align 2
  %27 = sext i16 %26 to i32
  %28 = icmp slt i32 %24, %27
  %29 = icmp slt i16 %26, %5
  %30 = and i1 %29, %28
  %31 = add nuw nsw i64 %23, 1
  br i1 %30, label %20, label %36

32:                                               ; preds = %20
  %33 = sext i16 %26 to i32
  %34 = add nsw i32 %6, -1
  %35 = icmp eq i32 %34, %33
  br i1 %35, label %37, label %36

36:                                               ; preds = %22, %12, %1, %32
  br label %37

37:                                               ; preds = %3, %32, %36
  %38 = phi i32 [ 0, %32 ], [ 6, %36 ], [ 0, %3 ]
  ret i32 %38
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @FT_Outline_Transform(%struct.FT_Outline_* readonly, %struct.FT_Matrix_* readonly) local_unnamed_addr #3 {
  %3 = icmp ne %struct.FT_Outline_* %0, null
  %4 = icmp ne %struct.FT_Matrix_* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %74

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 2
  %8 = load %struct.FT_Vector_*, %struct.FT_Vector_** %7, align 8
  %9 = icmp eq %struct.FT_Vector_* %8, null
  br i1 %9, label %74, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 1
  %12 = load i16, i16* %11, align 2
  %13 = sext i16 %12 to i64
  %14 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %8, i64 %13
  %15 = icmp sgt i16 %12, 0
  br i1 %15, label %16, label %74

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 0
  %18 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 1
  %19 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 2
  %20 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 3
  br label %21

21:                                               ; preds = %16, %71
  %22 = phi %struct.FT_Vector_* [ %8, %16 ], [ %72, %71 ]
  %23 = icmp eq %struct.FT_Vector_* %22, null
  br i1 %23, label %71, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %22, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %17, align 8
  %28 = shl i64 %26, 32
  %29 = ashr exact i64 %28, 32
  %30 = shl i64 %27, 32
  %31 = ashr exact i64 %30, 32
  %32 = mul nsw i64 %31, %29
  %33 = ashr i64 %32, 63
  %34 = add nsw i64 %32, 32768
  %35 = add nsw i64 %34, %33
  %36 = shl i64 %35, 16
  %37 = ashr i64 %36, 32
  %38 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %22, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = load i64, i64* %18, align 8
  %41 = shl i64 %39, 32
  %42 = ashr exact i64 %41, 32
  %43 = shl i64 %40, 32
  %44 = ashr exact i64 %43, 32
  %45 = mul nsw i64 %44, %42
  %46 = ashr i64 %45, 63
  %47 = add nsw i64 %45, 32768
  %48 = add nsw i64 %47, %46
  %49 = shl i64 %48, 16
  %50 = ashr i64 %49, 32
  %51 = add nsw i64 %50, %37
  %52 = load i64, i64* %19, align 8
  %53 = shl i64 %52, 32
  %54 = ashr exact i64 %53, 32
  %55 = mul nsw i64 %54, %29
  %56 = ashr i64 %55, 63
  %57 = add nsw i64 %55, 32768
  %58 = add nsw i64 %57, %56
  %59 = shl i64 %58, 16
  %60 = ashr i64 %59, 32
  %61 = load i64, i64* %20, align 8
  %62 = shl i64 %61, 32
  %63 = ashr exact i64 %62, 32
  %64 = mul nsw i64 %63, %42
  %65 = ashr i64 %64, 63
  %66 = add nsw i64 %64, 32768
  %67 = add nsw i64 %66, %65
  %68 = shl i64 %67, 16
  %69 = ashr i64 %68, 32
  %70 = add nsw i64 %69, %60
  store i64 %51, i64* %25, align 8
  store i64 %70, i64* %38, align 8
  br label %71

71:                                               ; preds = %21, %24
  %72 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %22, i64 1
  %73 = icmp ult %struct.FT_Vector_* %72, %14
  br i1 %73, label %21, label %74

74:                                               ; preds = %71, %10, %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @FT_Outline_Translate(%struct.FT_Outline_* readonly, i64, i64) local_unnamed_addr #3 {
  %4 = icmp eq %struct.FT_Outline_* %0, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 1
  %7 = load i16, i16* %6, align 2
  %8 = icmp sgt i16 %7, 0
  br i1 %8, label %9, label %27

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 2
  %11 = load %struct.FT_Vector_*, %struct.FT_Vector_** %10, align 8
  %12 = insertelement <2 x i64> undef, i64 %1, i32 0
  %13 = insertelement <2 x i64> %12, i64 %2, i32 1
  br label %14

14:                                               ; preds = %9, %14
  %15 = phi %struct.FT_Vector_* [ %21, %14 ], [ %11, %9 ]
  %16 = phi i16 [ %22, %14 ], [ 0, %9 ]
  %17 = bitcast %struct.FT_Vector_* %15 to <2 x i64>*
  %18 = load <2 x i64>, <2 x i64>* %17, align 8
  %19 = add <2 x i64> %18, %13
  %20 = bitcast %struct.FT_Vector_* %15 to <2 x i64>*
  store <2 x i64> %19, <2 x i64>* %20, align 8
  %21 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %15, i64 1
  %22 = add i16 %16, 1
  %23 = zext i16 %22 to i32
  %24 = load i16, i16* %6, align 2
  %25 = sext i16 %24 to i32
  %26 = icmp slt i32 %23, %25
  br i1 %26, label %14, label %27

27:                                               ; preds = %14, %5, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @FT_Vector_Transform(%struct.FT_Vector_*, %struct.FT_Matrix_* readonly) local_unnamed_addr #3 {
  %3 = icmp ne %struct.FT_Vector_* %0, null
  %4 = icmp ne %struct.FT_Matrix_* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %57

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %8, 32
  %12 = ashr exact i64 %11, 32
  %13 = shl i64 %10, 32
  %14 = ashr exact i64 %13, 32
  %15 = mul nsw i64 %14, %12
  %16 = ashr i64 %15, 63
  %17 = add nsw i64 %15, 32768
  %18 = add nsw i64 %17, %16
  %19 = shl i64 %18, 16
  %20 = ashr i64 %19, 32
  %21 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = shl i64 %22, 32
  %26 = ashr exact i64 %25, 32
  %27 = shl i64 %24, 32
  %28 = ashr exact i64 %27, 32
  %29 = mul nsw i64 %28, %26
  %30 = ashr i64 %29, 63
  %31 = add nsw i64 %29, 32768
  %32 = add nsw i64 %31, %30
  %33 = shl i64 %32, 16
  %34 = ashr i64 %33, 32
  %35 = add nsw i64 %34, %20
  %36 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = shl i64 %37, 32
  %39 = ashr exact i64 %38, 32
  %40 = mul nsw i64 %39, %12
  %41 = ashr i64 %40, 63
  %42 = add nsw i64 %40, 32768
  %43 = add nsw i64 %42, %41
  %44 = shl i64 %43, 16
  %45 = ashr i64 %44, 32
  %46 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %1, i64 0, i32 3
  %47 = load i64, i64* %46, align 8
  %48 = shl i64 %47, 32
  %49 = ashr exact i64 %48, 32
  %50 = mul nsw i64 %49, %26
  %51 = ashr i64 %50, 63
  %52 = add nsw i64 %50, 32768
  %53 = add nsw i64 %52, %51
  %54 = shl i64 %53, 16
  %55 = ashr i64 %54, 32
  %56 = add nsw i64 %55, %45
  store i64 %35, i64* %7, align 8
  store i64 %56, i64* %21, align 8
  br label %57

57:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Render_Glyph(%struct.FT_GlyphSlotRec_*, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_GlyphSlotRec_* %0, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 1
  %6 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %5, align 8
  %7 = icmp eq %struct.FT_FaceRec_* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %6, i64 0, i32 24
  %10 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %9, align 8
  %11 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %10, i64 0, i32 0, i32 1
  %12 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %11, align 8
  %13 = tail call i32 @FT_Render_Glyph_Internal(%struct.FT_LibraryRec_* %12, %struct.FT_GlyphSlotRec_* nonnull %0, i32 %1)
  br label %14

14:                                               ; preds = %2, %4, %8
  %15 = phi i32 [ %13, %8 ], [ 6, %4 ], [ 6, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Load_Char(%struct.FT_FaceRec_* readonly, i64, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %4, label %26, label %5

5:                                                ; preds = %3
  %6 = trunc i64 %1 to i32
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 23
  %8 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %7, align 8
  %9 = icmp eq %struct.FT_CharMapRec_* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %5
  %11 = bitcast %struct.FT_CharMapRec_* %8 to %struct.FT_CMapRec_*
  %12 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %8, i64 1
  %13 = bitcast %struct.FT_CharMapRec_* %12 to %struct.FT_CMap_ClassRec_**
  %14 = load %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_** %13, align 8
  %15 = getelementptr inbounds %struct.FT_CMap_ClassRec_, %struct.FT_CMap_ClassRec_* %14, i64 0, i32 3
  %16 = load i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32)** %15, align 8
  %17 = tail call i32 %16(%struct.FT_CMapRec_* nonnull %11, i32 %6) #16
  %18 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = icmp ult i32 %17, %20
  %22 = select i1 %21, i32 %17, i32 0
  br label %23

23:                                               ; preds = %5, %10
  %24 = phi i32 [ %22, %10 ], [ %6, %5 ]
  %25 = tail call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* nonnull %0, i32 %24, i32 %2)
  br label %26

26:                                               ; preds = %3, %23
  %27 = phi i32 [ %25, %23 ], [ 35, %3 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* readonly, i64) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %3, label %22, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 23
  %6 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %5, align 8
  %7 = icmp eq %struct.FT_CharMapRec_* %6, null
  br i1 %7, label %22, label %8

8:                                                ; preds = %4
  %9 = bitcast %struct.FT_CharMapRec_* %6 to %struct.FT_CMapRec_*
  %10 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %6, i64 1
  %11 = bitcast %struct.FT_CharMapRec_* %10 to %struct.FT_CMap_ClassRec_**
  %12 = load %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_** %11, align 8
  %13 = getelementptr inbounds %struct.FT_CMap_ClassRec_, %struct.FT_CMap_ClassRec_* %12, i64 0, i32 3
  %14 = load i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32)** %13, align 8
  %15 = trunc i64 %1 to i32
  %16 = tail call i32 %14(%struct.FT_CMapRec_* nonnull %9, i32 %15) #16
  %17 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %18 to i32
  %20 = icmp ult i32 %16, %19
  %21 = select i1 %20, i32 %16, i32 0
  br label %22

22:                                               ; preds = %4, %2, %8
  %23 = phi i32 [ %21, %8 ], [ 0, %4 ], [ 0, %2 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_New_Face(%struct.FT_LibraryRec_*, i8*, i64, %struct.FT_FaceRec_**) local_unnamed_addr #0 {
  %5 = alloca %struct.FT_Open_Args_, align 8
  %6 = bitcast %struct.FT_Open_Args_* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 64, i1 false)
  %7 = icmp eq i8* %1, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %5, i64 0, i32 0
  store i32 4, i32* %9, align 8
  %10 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %5, i64 0, i32 3
  store i8* %1, i8** %10, align 8
  %11 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %5, i64 0, i32 4
  store %struct.FT_StreamRec_* null, %struct.FT_StreamRec_** %11, align 8
  %12 = call fastcc i32 @ft_open_face_internal(%struct.FT_LibraryRec_* %0, %struct.FT_Open_Args_* nonnull %5, i64 %2, %struct.FT_FaceRec_** %3)
  br label %13

13:                                               ; preds = %4, %8
  %14 = phi i32 [ %12, %8 ], [ 6, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #16
  ret i32 %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ft_open_face_internal(%struct.FT_LibraryRec_*, %struct.FT_Open_Args_*, i64, %struct.FT_FaceRec_**) unnamed_addr #0 {
  %5 = alloca %struct.FT_StreamRec_*, align 8
  %6 = alloca %struct.FT_FaceRec_*, align 8
  %7 = alloca %struct.FT_SizeRec_*, align 8
  %8 = bitcast %struct.FT_StreamRec_** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  store %struct.FT_StreamRec_* null, %struct.FT_StreamRec_** %5, align 8
  %9 = bitcast %struct.FT_FaceRec_** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  store %struct.FT_FaceRec_* null, %struct.FT_FaceRec_** %6, align 8
  %10 = icmp eq %struct.FT_FaceRec_** %3, null
  %11 = icmp sgt i64 %2, -1
  %12 = and i1 %11, %10
  %13 = xor i1 %12, true
  %14 = icmp ne %struct.FT_Open_Args_* %1, null
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %367

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %1, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %1, i64 0, i32 4
  %23 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %22, align 8
  %24 = icmp ne %struct.FT_StreamRec_* %23, null
  br label %25

25:                                               ; preds = %16, %21
  %26 = phi i1 [ false, %16 ], [ %24, %21 ]
  %27 = zext i1 %26 to i8
  %28 = call i32 @FT_Stream_New(%struct.FT_LibraryRec_* %0, %struct.FT_Open_Args_* nonnull %1, %struct.FT_StreamRec_** nonnull %5)
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %121

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 0
  %32 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %31, align 8
  %33 = load i32, i32* %17, align 8
  %34 = and i32 %33, 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %77, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %1, i64 0, i32 5
  %38 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %37, align 8
  %39 = icmp eq %struct.FT_ModuleRec_* %38, null
  br i1 %39, label %77, label %40

40:                                               ; preds = %36
  %41 = bitcast %struct.FT_ModuleRec_* %38 to %struct.FT_DriverRec_*
  %42 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %38, i64 0, i32 0
  %43 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %42, align 8
  %44 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %43, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %61, label %48

48:                                               ; preds = %40
  %49 = and i32 %33, 16
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %1, i64 0, i32 6
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %1, i64 0, i32 7
  %55 = load %struct.FT_Parameter_*, %struct.FT_Parameter_** %54, align 8
  br label %56

56:                                               ; preds = %48, %51
  %57 = phi i32 [ %53, %51 ], [ 0, %48 ]
  %58 = phi %struct.FT_Parameter_* [ %55, %51 ], [ null, %48 ]
  %59 = call fastcc i32 @open_face(%struct.FT_DriverRec_* nonnull %41, %struct.FT_StreamRec_** nonnull %5, i8 zeroext %27, i64 %2, i32 %57, %struct.FT_Parameter_* %58, %struct.FT_FaceRec_** nonnull %6)
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %147, label %61

61:                                               ; preds = %40, %56
  %62 = phi i32 [ %59, %56 ], [ 32, %40 ]
  %63 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %5, align 8
  %64 = icmp eq %struct.FT_StreamRec_* %63, null
  br i1 %64, label %360, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %63, i64 0, i32 7
  %67 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %66, align 8
  %68 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %63, i64 0, i32 6
  %69 = load void (%struct.FT_StreamRec_*)*, void (%struct.FT_StreamRec_*)** %68, align 8
  %70 = icmp eq void (%struct.FT_StreamRec_*)* %69, null
  br i1 %70, label %72, label %71

71:                                               ; preds = %65
  tail call void %69(%struct.FT_StreamRec_* nonnull %63) #16
  br label %72

72:                                               ; preds = %71, %65
  br i1 %26, label %360, label %73

73:                                               ; preds = %72
  %74 = bitcast %struct.FT_StreamRec_* %63 to i8*
  %75 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %67, i64 0, i32 2
  %76 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %75, align 8
  tail call void %76(%struct.FT_MemoryRec_* %67, i8* nonnull %74) #16
  br label %360

77:                                               ; preds = %36, %30
  %78 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 4
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 %80
  %82 = icmp eq i32 %79, 0
  br i1 %82, label %127, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 0
  %85 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %1, i64 0, i32 6
  %86 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %1, i64 0, i32 7
  br label %87

87:                                               ; preds = %83, %114
  %88 = phi %struct.FT_ModuleRec_** [ %84, %83 ], [ %117, %114 ]
  %89 = phi %struct.FT_DriverRec_* [ null, %83 ], [ %116, %114 ]
  %90 = phi i32 [ 11, %83 ], [ %115, %114 ]
  %91 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %88, align 8
  %92 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %91, i64 0, i32 0
  %93 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %92, align 8
  %94 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %93, i64 0, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %114, label %98

98:                                               ; preds = %87
  %99 = bitcast %struct.FT_ModuleRec_* %91 to %struct.FT_DriverRec_*
  %100 = load i32, i32* %17, align 8
  %101 = and i32 %100, 16
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %98
  %104 = load i32, i32* %85, align 8
  %105 = load %struct.FT_Parameter_*, %struct.FT_Parameter_** %86, align 8
  br label %106

106:                                              ; preds = %98, %103
  %107 = phi i32 [ %104, %103 ], [ 0, %98 ]
  %108 = phi %struct.FT_Parameter_* [ %105, %103 ], [ null, %98 ]
  %109 = call fastcc i32 @open_face(%struct.FT_DriverRec_* %99, %struct.FT_StreamRec_** nonnull %5, i8 zeroext %27, i64 %2, i32 %107, %struct.FT_Parameter_* %108, %struct.FT_FaceRec_** nonnull %6)
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %145, label %111

111:                                              ; preds = %106
  %112 = and i32 %109, 255
  %113 = icmp eq i32 %112, 2
  br i1 %113, label %114, label %119

114:                                              ; preds = %111, %87
  %115 = phi i32 [ %90, %87 ], [ %109, %111 ]
  %116 = phi %struct.FT_DriverRec_* [ %89, %87 ], [ %99, %111 ]
  %117 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %88, i64 1
  %118 = icmp ult %struct.FT_ModuleRec_** %117, %81
  br i1 %118, label %87, label %121

119:                                              ; preds = %111
  %120 = bitcast %struct.FT_ModuleRec_* %91 to %struct.FT_DriverRec_*
  br label %121

121:                                              ; preds = %114, %119, %25
  %122 = phi i32 [ %28, %25 ], [ %109, %119 ], [ %115, %114 ]
  %123 = phi %struct.FT_DriverRec_* [ null, %25 ], [ %120, %119 ], [ %116, %114 ]
  %124 = phi %struct.FT_MemoryRec_* [ null, %25 ], [ %32, %119 ], [ %32, %114 ]
  %125 = trunc i32 %122 to i8
  switch i8 %125, label %127 [
    i8 81, label %126
    i8 2, label %126
    i8 85, label %126
  ]

126:                                              ; preds = %121, %121, %121
  br label %127

127:                                              ; preds = %77, %121, %126
  %128 = phi %struct.FT_MemoryRec_* [ %124, %121 ], [ %124, %126 ], [ %32, %77 ]
  %129 = phi %struct.FT_DriverRec_* [ %123, %121 ], [ %123, %126 ], [ null, %77 ]
  %130 = phi i32 [ %122, %121 ], [ 2, %126 ], [ 11, %77 ]
  %131 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %5, align 8
  %132 = icmp eq %struct.FT_StreamRec_* %131, null
  br i1 %132, label %360, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %131, i64 0, i32 7
  %135 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %134, align 8
  %136 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %131, i64 0, i32 6
  %137 = load void (%struct.FT_StreamRec_*)*, void (%struct.FT_StreamRec_*)** %136, align 8
  %138 = icmp eq void (%struct.FT_StreamRec_*)* %137, null
  br i1 %138, label %140, label %139

139:                                              ; preds = %133
  tail call void %137(%struct.FT_StreamRec_* nonnull %131) #16
  br label %140

140:                                              ; preds = %139, %133
  br i1 %26, label %360, label %141

141:                                              ; preds = %140
  %142 = bitcast %struct.FT_StreamRec_* %131 to i8*
  %143 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %135, i64 0, i32 2
  %144 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %143, align 8
  tail call void %144(%struct.FT_MemoryRec_* %135, i8* nonnull %142) #16
  br label %360

145:                                              ; preds = %106
  %146 = bitcast %struct.FT_ModuleRec_* %91 to %struct.FT_DriverRec_*
  br label %147

147:                                              ; preds = %145, %56
  %148 = phi %struct.FT_DriverRec_* [ %41, %56 ], [ %146, %145 ]
  %149 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %32, i64 0, i32 1
  %150 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %149, align 8
  %151 = tail call i8* %150(%struct.FT_MemoryRec_* %32, i64 24) #16
  %152 = icmp eq i8* %151, null
  br i1 %152, label %360, label %153

153:                                              ; preds = %147
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %151, i8 0, i64 16, i1 false) #16
  %154 = bitcast %struct.FT_FaceRec_** %6 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds i8, i8* %151, i64 16
  %157 = bitcast i8* %156 to i64*
  store i64 %155, i64* %157, align 8
  %158 = inttoptr i64 %155 to %struct.FT_FaceRec_*
  %159 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %158, i64 0, i32 24
  %160 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %159, align 8
  %161 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %160, i64 0, i32 2
  %162 = icmp eq %struct.FT_ListRec_* %161, null
  br i1 %162, label %175, label %163

163:                                              ; preds = %153
  %164 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %160, i64 0, i32 2, i32 1
  %165 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %164, align 8
  %166 = getelementptr inbounds i8, i8* %151, i64 8
  %167 = bitcast i8* %166 to %struct.FT_ListNodeRec_**
  store %struct.FT_ListNodeRec_* null, %struct.FT_ListNodeRec_** %167, align 8
  %168 = bitcast i8* %151 to %struct.FT_ListNodeRec_**
  store %struct.FT_ListNodeRec_* %165, %struct.FT_ListNodeRec_** %168, align 8
  %169 = icmp eq %struct.FT_ListNodeRec_* %165, null
  %170 = bitcast %struct.FT_ListRec_* %161 to i8**
  %171 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %165, i64 0, i32 1
  %172 = bitcast %struct.FT_ListNodeRec_** %171 to i8**
  %173 = select i1 %169, i8** %170, i8** %172
  store i8* %151, i8** %173, align 8
  %174 = bitcast %struct.FT_ListNodeRec_** %164 to i8**
  store i8* %151, i8** %174, align 8
  br label %175

175:                                              ; preds = %153, %163
  br i1 %11, label %176, label %189

176:                                              ; preds = %175
  %177 = tail call i32 @FT_New_GlyphSlot(%struct.FT_FaceRec_* %158, %struct.FT_GlyphSlotRec_** null)
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %311

179:                                              ; preds = %176
  %180 = bitcast %struct.FT_SizeRec_** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %180) #16
  store %struct.FT_SizeRec_* inttoptr (i64 -6148914691236517206 to %struct.FT_SizeRec_*), %struct.FT_SizeRec_** %7, align 8
  %181 = call i32 @FT_New_Size(%struct.FT_FaceRec_* %158, %struct.FT_SizeRec_** nonnull %7)
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %188

183:                                              ; preds = %179
  %184 = bitcast %struct.FT_SizeRec_** %7 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %158, i64 0, i32 22
  %187 = bitcast %struct.FT_SizeRec_** %186 to i64*
  store i64 %185, i64* %187, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %180) #16
  br label %189

188:                                              ; preds = %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %180) #16
  br label %311

189:                                              ; preds = %183, %175
  %190 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %158, i64 0, i32 2
  %191 = load i64, i64* %190, align 8
  %192 = and i64 %191, 1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %206, label %194

194:                                              ; preds = %189
  %195 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %158, i64 0, i32 16
  %196 = load i16, i16* %195, align 2
  %197 = icmp slt i16 %196, 0
  br i1 %197, label %198, label %200

198:                                              ; preds = %194
  %199 = sub i16 0, %196
  store i16 %199, i16* %195, align 2
  br label %200

200:                                              ; preds = %198, %194
  %201 = phi i16 [ %199, %198 ], [ %196, %194 ]
  %202 = and i64 %191, 32
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %206

204:                                              ; preds = %200
  %205 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %158, i64 0, i32 18
  store i16 %201, i16* %205, align 2
  br label %206

206:                                              ; preds = %200, %189, %204
  %207 = and i64 %191, 2
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %252, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %158, i64 0, i32 7
  %211 = load i32, i32* %210, align 8
  %212 = icmp sgt i32 %211, 0
  br i1 %212, label %213, label %252

213:                                              ; preds = %209
  %214 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %158, i64 0, i32 8
  br label %215

215:                                              ; preds = %213, %247
  %216 = phi i64 [ 0, %213 ], [ %248, %247 ]
  %217 = load %struct.FT_Bitmap_Size_*, %struct.FT_Bitmap_Size_** %214, align 8
  %218 = getelementptr inbounds %struct.FT_Bitmap_Size_, %struct.FT_Bitmap_Size_* %217, i64 %216, i32 0
  %219 = load i16, i16* %218, align 8
  %220 = icmp slt i16 %219, 0
  br i1 %220, label %221, label %223

221:                                              ; preds = %215
  %222 = sub i16 0, %219
  store i16 %222, i16* %218, align 8
  br label %223

223:                                              ; preds = %221, %215
  %224 = phi i16 [ %222, %221 ], [ %219, %215 ]
  %225 = getelementptr inbounds %struct.FT_Bitmap_Size_, %struct.FT_Bitmap_Size_* %217, i64 %216, i32 3
  %226 = load i64, i64* %225, align 8
  %227 = icmp slt i64 %226, 0
  br i1 %227, label %228, label %230

228:                                              ; preds = %223
  %229 = sub nsw i64 0, %226
  store i64 %229, i64* %225, align 8
  br label %230

230:                                              ; preds = %228, %223
  %231 = phi i64 [ %229, %228 ], [ %226, %223 ]
  %232 = getelementptr inbounds %struct.FT_Bitmap_Size_, %struct.FT_Bitmap_Size_* %217, i64 %216, i32 4
  %233 = load i64, i64* %232, align 8
  %234 = icmp slt i64 %233, 0
  br i1 %234, label %235, label %237

235:                                              ; preds = %230
  %236 = sub nsw i64 0, %233
  store i64 %236, i64* %232, align 8
  br label %237

237:                                              ; preds = %235, %230
  %238 = phi i64 [ %236, %235 ], [ %233, %230 ]
  %239 = icmp slt i16 %224, 0
  %240 = or i64 %231, %238
  %241 = icmp slt i64 %240, 0
  %242 = or i1 %241, %239
  br i1 %242, label %243, label %247

243:                                              ; preds = %237
  %244 = getelementptr inbounds %struct.FT_Bitmap_Size_, %struct.FT_Bitmap_Size_* %217, i64 %216, i32 1
  store i16 0, i16* %244, align 2
  store i16 0, i16* %218, align 8
  %245 = getelementptr inbounds %struct.FT_Bitmap_Size_, %struct.FT_Bitmap_Size_* %217, i64 %216, i32 2
  %246 = bitcast i64* %245 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %246, i8 0, i64 24, i1 false)
  br label %247

247:                                              ; preds = %237, %243
  %248 = add nuw nsw i64 %216, 1
  %249 = load i32, i32* %210, align 8
  %250 = sext i32 %249 to i64
  %251 = icmp slt i64 %248, %250
  br i1 %251, label %215, label %252

252:                                              ; preds = %247, %209, %206
  %253 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %158, i64 0, i32 30
  %254 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %253, align 8
  %255 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %254, i64 0, i32 0, i32 0
  store i64 65536, i64* %255, align 8
  %256 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %254, i64 0, i32 0, i32 1
  %257 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %254, i64 0, i32 0, i32 3
  %258 = bitcast i64* %256 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %258, i8 0, i64 16, i1 false)
  store i64 65536, i64* %257, align 8
  %259 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %254, i64 0, i32 1, i32 0
  %260 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %254, i64 0, i32 9
  %261 = bitcast i64* %259 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %261, i8 0, i64 16, i1 false)
  store i32 1, i32* %260, align 8
  %262 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %254, i64 0, i32 5
  store i8 -1, i8* %262, align 8
  %263 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %254, i64 0, i32 8
  store void (%struct.FT_Bitmap_*, i8*)* null, void (%struct.FT_Bitmap_*, i8*)** %263, align 8
  br i1 %10, label %265, label %264

264:                                              ; preds = %252
  store %struct.FT_FaceRec_* %158, %struct.FT_FaceRec_** %3, align 8
  br label %367

265:                                              ; preds = %252
  %266 = icmp eq i64 %155, 0
  br i1 %266, label %367, label %267

267:                                              ; preds = %265
  %268 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %159, align 8
  %269 = icmp eq %struct.FT_DriverRec_* %268, null
  br i1 %269, label %367, label %270

270:                                              ; preds = %267
  %271 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %253, align 8
  %272 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %271, i64 0, i32 9
  %273 = load i32, i32* %272, align 8
  %274 = add nsw i32 %273, -1
  store i32 %274, i32* %272, align 8
  %275 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %253, align 8
  %276 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %275, i64 0, i32 9
  %277 = load i32, i32* %276, align 8
  %278 = icmp sgt i32 %277, 0
  br i1 %278, label %367, label %279

279:                                              ; preds = %270
  %280 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %159, align 8
  %281 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %280, i64 0, i32 0, i32 2
  %282 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %281, align 8
  %283 = inttoptr i64 %155 to i8*
  %284 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %280, i64 0, i32 2, i32 0
  %285 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %284, align 8
  %286 = icmp eq %struct.FT_ListNodeRec_* %285, null
  br i1 %286, label %367, label %287

287:                                              ; preds = %279, %292
  %288 = phi %struct.FT_ListNodeRec_* [ %294, %292 ], [ %285, %279 ]
  %289 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %288, i64 0, i32 2
  %290 = load i8*, i8** %289, align 8
  %291 = icmp eq i8* %290, %283
  br i1 %291, label %296, label %292

292:                                              ; preds = %287
  %293 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %288, i64 0, i32 1
  %294 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %293, align 8
  %295 = icmp eq %struct.FT_ListNodeRec_* %294, null
  br i1 %295, label %367, label %287

296:                                              ; preds = %287
  %297 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %288, i64 0, i32 0
  %298 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %297, align 8
  %299 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %288, i64 0, i32 1
  %300 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %299, align 8
  %301 = icmp eq %struct.FT_ListNodeRec_* %298, null
  %302 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %298, i64 0, i32 1
  %303 = select i1 %301, %struct.FT_ListNodeRec_** %284, %struct.FT_ListNodeRec_** %302
  store %struct.FT_ListNodeRec_* %300, %struct.FT_ListNodeRec_** %303, align 8
  %304 = icmp eq %struct.FT_ListNodeRec_* %300, null
  %305 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %280, i64 0, i32 2, i32 1
  %306 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %300, i64 0, i32 0
  %307 = select i1 %304, %struct.FT_ListNodeRec_** %305, %struct.FT_ListNodeRec_** %306
  store %struct.FT_ListNodeRec_* %298, %struct.FT_ListNodeRec_** %307, align 8
  %308 = bitcast %struct.FT_ListNodeRec_* %288 to i8*
  %309 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %282, i64 0, i32 2
  %310 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %309, align 8
  call void %310(%struct.FT_MemoryRec_* %282, i8* nonnull %308) #16
  call fastcc void @destroy_face(%struct.FT_MemoryRec_* %282, %struct.FT_FaceRec_* nonnull %158, %struct.FT_DriverRec_* %280) #16
  br label %367

311:                                              ; preds = %176, %188
  %312 = phi i32 [ %177, %176 ], [ %181, %188 ]
  %313 = icmp eq i64 %155, 0
  br i1 %313, label %367, label %314

314:                                              ; preds = %311
  %315 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %158, i64 0, i32 24
  %316 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %315, align 8
  %317 = icmp eq %struct.FT_DriverRec_* %316, null
  br i1 %317, label %367, label %318

318:                                              ; preds = %314
  %319 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %158, i64 0, i32 30
  %320 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %319, align 8
  %321 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %320, i64 0, i32 9
  %322 = load i32, i32* %321, align 8
  %323 = add nsw i32 %322, -1
  store i32 %323, i32* %321, align 8
  %324 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %319, align 8
  %325 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %324, i64 0, i32 9
  %326 = load i32, i32* %325, align 8
  %327 = icmp sgt i32 %326, 0
  br i1 %327, label %367, label %328

328:                                              ; preds = %318
  %329 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %315, align 8
  %330 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %329, i64 0, i32 0, i32 2
  %331 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %330, align 8
  %332 = inttoptr i64 %155 to i8*
  %333 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %329, i64 0, i32 2, i32 0
  %334 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %333, align 8
  %335 = icmp eq %struct.FT_ListNodeRec_* %334, null
  br i1 %335, label %367, label %336

336:                                              ; preds = %328, %341
  %337 = phi %struct.FT_ListNodeRec_* [ %343, %341 ], [ %334, %328 ]
  %338 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %337, i64 0, i32 2
  %339 = load i8*, i8** %338, align 8
  %340 = icmp eq i8* %339, %332
  br i1 %340, label %345, label %341

341:                                              ; preds = %336
  %342 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %337, i64 0, i32 1
  %343 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %342, align 8
  %344 = icmp eq %struct.FT_ListNodeRec_* %343, null
  br i1 %344, label %367, label %336

345:                                              ; preds = %336
  %346 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %337, i64 0, i32 0
  %347 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %346, align 8
  %348 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %337, i64 0, i32 1
  %349 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %348, align 8
  %350 = icmp eq %struct.FT_ListNodeRec_* %347, null
  %351 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %347, i64 0, i32 1
  %352 = select i1 %350, %struct.FT_ListNodeRec_** %333, %struct.FT_ListNodeRec_** %351
  store %struct.FT_ListNodeRec_* %349, %struct.FT_ListNodeRec_** %352, align 8
  %353 = icmp eq %struct.FT_ListNodeRec_* %349, null
  %354 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %329, i64 0, i32 2, i32 1
  %355 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %349, i64 0, i32 0
  %356 = select i1 %353, %struct.FT_ListNodeRec_** %354, %struct.FT_ListNodeRec_** %355
  store %struct.FT_ListNodeRec_* %347, %struct.FT_ListNodeRec_** %356, align 8
  %357 = bitcast %struct.FT_ListNodeRec_* %337 to i8*
  %358 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %331, i64 0, i32 2
  %359 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %358, align 8
  call void %359(%struct.FT_MemoryRec_* %331, i8* nonnull %357) #16
  call fastcc void @destroy_face(%struct.FT_MemoryRec_* %331, %struct.FT_FaceRec_* nonnull %158, %struct.FT_DriverRec_* %329) #16
  br label %367

360:                                              ; preds = %141, %127, %73, %61, %140, %72, %147
  %361 = phi %struct.FT_MemoryRec_* [ %32, %147 ], [ %128, %141 ], [ %128, %140 ], [ %128, %127 ], [ %32, %73 ], [ %32, %72 ], [ %32, %61 ]
  %362 = phi %struct.FT_DriverRec_* [ %148, %147 ], [ %129, %141 ], [ %129, %140 ], [ %129, %127 ], [ %41, %73 ], [ %41, %72 ], [ %41, %61 ]
  %363 = phi i32 [ 64, %147 ], [ %130, %141 ], [ %130, %140 ], [ %130, %127 ], [ %62, %73 ], [ %62, %72 ], [ %62, %61 ]
  %364 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %6, align 8
  %365 = icmp eq %struct.FT_FaceRec_* %364, null
  br i1 %365, label %367, label %366

366:                                              ; preds = %360
  call fastcc void @destroy_face(%struct.FT_MemoryRec_* %361, %struct.FT_FaceRec_* nonnull %364, %struct.FT_DriverRec_* %362)
  br label %367

367:                                              ; preds = %341, %292, %366, %264, %360, %265, %267, %270, %279, %296, %311, %314, %318, %328, %345, %4
  %368 = phi i32 [ 6, %4 ], [ 0, %264 ], [ %363, %360 ], [ %363, %366 ], [ 0, %265 ], [ 0, %267 ], [ 0, %270 ], [ 0, %279 ], [ 0, %296 ], [ %312, %311 ], [ %312, %314 ], [ %312, %318 ], [ %312, %328 ], [ %312, %345 ], [ 0, %292 ], [ %312, %341 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  ret i32 %368
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_New_Memory_Face(%struct.FT_LibraryRec_*, i8*, i64, i64, %struct.FT_FaceRec_**) local_unnamed_addr #0 {
  %6 = alloca %struct.FT_Open_Args_, align 8
  %7 = bitcast %struct.FT_Open_Args_* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 64, i1 false)
  %8 = icmp eq i8* %1, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %6, i64 0, i32 0
  store i32 1, i32* %10, align 8
  %11 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %6, i64 0, i32 1
  store i8* %1, i8** %11, align 8
  %12 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %6, i64 0, i32 2
  store i64 %2, i64* %12, align 8
  %13 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %6, i64 0, i32 4
  store %struct.FT_StreamRec_* null, %struct.FT_StreamRec_** %13, align 8
  %14 = call fastcc i32 @ft_open_face_internal(%struct.FT_LibraryRec_* %0, %struct.FT_Open_Args_* nonnull %6, i64 %3, %struct.FT_FaceRec_** %4)
  br label %15

15:                                               ; preds = %5, %9
  %16 = phi i32 [ %14, %9 ], [ 6, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #16
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Open_Face(%struct.FT_LibraryRec_*, %struct.FT_Open_Args_*, i64, %struct.FT_FaceRec_**) local_unnamed_addr #0 {
  %5 = tail call fastcc i32 @ft_open_face_internal(%struct.FT_LibraryRec_* %0, %struct.FT_Open_Args_* %1, i64 %2, %struct.FT_FaceRec_** %3)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Attach_File(%struct.FT_FaceRec_*, i8*) local_unnamed_addr #0 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %53, label %4

4:                                                ; preds = %2
  %5 = ptrtoint i8* %1 to i64
  %6 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %6, label %53, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %9 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %8, align 8
  %10 = icmp eq %struct.FT_DriverRec_* %9, null
  br i1 %10, label %53, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %9, i64 0, i32 0, i32 1
  %13 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %12, align 8
  %14 = icmp eq %struct.FT_LibraryRec_* %13, null
  br i1 %14, label %53, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %13, i64 0, i32 0
  %17 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %16, align 8
  %18 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %17, i64 0, i32 1
  %19 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %18, align 8
  %20 = tail call i8* %19(%struct.FT_MemoryRec_* %17, i64 80) #16
  %21 = icmp eq i8* %20, null
  br i1 %21, label %53, label %22

22:                                               ; preds = %15
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %20, i8 0, i64 80, i1 false) #16
  %23 = bitcast i8* %20 to %struct.FT_StreamRec_*
  %24 = getelementptr inbounds i8, i8* %20, i64 56
  %25 = bitcast i8* %24 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %17, %struct.FT_MemoryRec_** %25, align 8
  %26 = tail call i32 @FT_Stream_Open(%struct.FT_StreamRec_* nonnull %23, i8* nonnull %1) #16
  %27 = getelementptr inbounds i8, i8* %20, i64 32
  %28 = bitcast i8* %27 to i64*
  store i64 %5, i64* %28, align 8
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %17, i64 0, i32 2
  %32 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %31, align 8
  tail call void %32(%struct.FT_MemoryRec_* %17, i8* nonnull %20) #16
  br label %53

33:                                               ; preds = %22
  store %struct.FT_MemoryRec_* %17, %struct.FT_MemoryRec_** %25, align 8
  %34 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %9, i64 0, i32 1
  %35 = load %struct.FT_Driver_ClassRec_*, %struct.FT_Driver_ClassRec_** %34, align 8
  %36 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %35, i64 0, i32 12
  %37 = load i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)** %36, align 8
  %38 = icmp eq i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = tail call i32 %37(%struct.FT_FaceRec_* nonnull %0, %struct.FT_StreamRec_* nonnull %23) #16
  %41 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %25, align 8
  br label %42

42:                                               ; preds = %39, %33
  %43 = phi %struct.FT_MemoryRec_* [ %41, %39 ], [ %17, %33 ]
  %44 = phi i32 [ %40, %39 ], [ 7, %33 ]
  %45 = getelementptr inbounds i8, i8* %20, i64 48
  %46 = bitcast i8* %45 to void (%struct.FT_StreamRec_*)**
  %47 = load void (%struct.FT_StreamRec_*)*, void (%struct.FT_StreamRec_*)** %46, align 8
  %48 = icmp eq void (%struct.FT_StreamRec_*)* %47, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %42
  tail call void %47(%struct.FT_StreamRec_* nonnull %23) #16
  br label %50

50:                                               ; preds = %42, %49
  %51 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %43, i64 0, i32 2
  %52 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %51, align 8
  tail call void %52(%struct.FT_MemoryRec_* %43, i8* nonnull %20) #16
  br label %53

53:                                               ; preds = %30, %15, %11, %50, %7, %4, %2
  %54 = phi i32 [ 6, %2 ], [ 35, %4 ], [ 34, %7 ], [ %44, %50 ], [ %26, %30 ], [ 64, %15 ], [ 33, %11 ]
  ret i32 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Attach_Stream(%struct.FT_FaceRec_*, %struct.FT_Open_Args_* readonly) local_unnamed_addr #0 {
  %3 = alloca %struct.FT_StreamRec_*, align 8
  %4 = bitcast %struct.FT_StreamRec_** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #16
  store %struct.FT_StreamRec_* inttoptr (i64 -6148914691236517206 to %struct.FT_StreamRec_*), %struct.FT_StreamRec_** %3, align 8
  %5 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %5, label %50, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %8 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %7, align 8
  %9 = icmp eq %struct.FT_DriverRec_* %8, null
  br i1 %9, label %50, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %8, i64 0, i32 0, i32 1
  %12 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %11, align 8
  %13 = call i32 @FT_Stream_New(%struct.FT_LibraryRec_* %12, %struct.FT_Open_Args_* %1, %struct.FT_StreamRec_** nonnull %3)
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %50

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %8, i64 0, i32 1
  %17 = load %struct.FT_Driver_ClassRec_*, %struct.FT_Driver_ClassRec_** %16, align 8
  %18 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %17, i64 0, i32 12
  %19 = load i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)** %18, align 8
  %20 = icmp eq i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)* %19, null
  %21 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %3, align 8
  br i1 %20, label %24, label %22

22:                                               ; preds = %15
  %23 = tail call i32 %19(%struct.FT_FaceRec_* nonnull %0, %struct.FT_StreamRec_* %21) #16
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi i32 [ %23, %22 ], [ 7, %15 ]
  %26 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %1, i64 0, i32 4
  %27 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %26, align 8
  %28 = icmp eq %struct.FT_StreamRec_* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %1, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = lshr i32 %31, 1
  %33 = and i32 %32, 1
  br label %34

34:                                               ; preds = %24, %29
  %35 = phi i32 [ 0, %24 ], [ %33, %29 ]
  %36 = icmp eq %struct.FT_StreamRec_* %21, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %21, i64 0, i32 7
  %39 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %38, align 8
  %40 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %21, i64 0, i32 6
  %41 = load void (%struct.FT_StreamRec_*)*, void (%struct.FT_StreamRec_*)** %40, align 8
  %42 = icmp eq void (%struct.FT_StreamRec_*)* %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %37
  tail call void %41(%struct.FT_StreamRec_* nonnull %21) #16
  br label %44

44:                                               ; preds = %43, %37
  %45 = icmp eq i32 %35, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %44
  %47 = bitcast %struct.FT_StreamRec_* %21 to i8*
  %48 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %39, i64 0, i32 2
  %49 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %48, align 8
  tail call void %49(%struct.FT_MemoryRec_* %39, i8* nonnull %47) #16
  br label %50

50:                                               ; preds = %46, %44, %34, %10, %6, %2
  %51 = phi i32 [ 35, %2 ], [ 34, %6 ], [ %13, %10 ], [ %25, %34 ], [ %25, %44 ], [ %25, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #16
  ret i32 %51
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @FT_Reference_Face(%struct.FT_FaceRec_* readonly) local_unnamed_addr #3 {
  %2 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %5 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %4, align 8
  %6 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %5, i64 0, i32 9
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 8
  br label %9

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ 35, %1 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Done_Face(%struct.FT_FaceRec_*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %2, label %52, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %5 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %4, align 8
  %6 = icmp eq %struct.FT_DriverRec_* %5, null
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %9 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %9, i64 0, i32 9
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, -1
  store i32 %12, i32* %10, align 8
  %13 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %8, align 8
  %14 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %13, i64 0, i32 9
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %52, label %17

17:                                               ; preds = %7
  %18 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %4, align 8
  %19 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %18, i64 0, i32 0, i32 2
  %20 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %19, align 8
  %21 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %18, i64 0, i32 2
  %22 = bitcast %struct.FT_FaceRec_* %0 to i8*
  %23 = icmp eq %struct.FT_ListRec_* %21, null
  br i1 %23, label %52, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %struct.FT_ListRec_, %struct.FT_ListRec_* %21, i64 0, i32 0
  %26 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %25, align 8
  %27 = icmp eq %struct.FT_ListNodeRec_* %26, null
  br i1 %27, label %52, label %28

28:                                               ; preds = %24, %33
  %29 = phi %struct.FT_ListNodeRec_* [ %35, %33 ], [ %26, %24 ]
  %30 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %29, i64 0, i32 2
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, %22
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %29, i64 0, i32 1
  %35 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %34, align 8
  %36 = icmp eq %struct.FT_ListNodeRec_* %35, null
  br i1 %36, label %52, label %28

37:                                               ; preds = %28
  %38 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %29, i64 0, i32 0
  %39 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %38, align 8
  %40 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %29, i64 0, i32 1
  %41 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %40, align 8
  %42 = icmp eq %struct.FT_ListNodeRec_* %39, null
  %43 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %39, i64 0, i32 1
  %44 = select i1 %42, %struct.FT_ListNodeRec_** %25, %struct.FT_ListNodeRec_** %43
  store %struct.FT_ListNodeRec_* %41, %struct.FT_ListNodeRec_** %44, align 8
  %45 = icmp eq %struct.FT_ListNodeRec_* %41, null
  %46 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %41, i64 0, i32 0
  %47 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %18, i64 0, i32 2, i32 1
  %48 = select i1 %45, %struct.FT_ListNodeRec_** %47, %struct.FT_ListNodeRec_** %46
  store %struct.FT_ListNodeRec_* %39, %struct.FT_ListNodeRec_** %48, align 8
  %49 = bitcast %struct.FT_ListNodeRec_* %29 to i8*
  %50 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %20, i64 0, i32 2
  %51 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %50, align 8
  tail call void %51(%struct.FT_MemoryRec_* %20, i8* nonnull %49) #16
  tail call fastcc void @destroy_face(%struct.FT_MemoryRec_* %20, %struct.FT_FaceRec_* nonnull %0, %struct.FT_DriverRec_* %18)
  br label %52

52:                                               ; preds = %33, %24, %17, %7, %3, %1, %37
  %53 = phi i32 [ 0, %37 ], [ 35, %3 ], [ 35, %1 ], [ 0, %7 ], [ 35, %17 ], [ 35, %24 ], [ 35, %33 ]
  ret i32 %53
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.FT_ListNodeRec_* @FT_List_Find(%struct.FT_ListRec_* readonly, i8* readnone) local_unnamed_addr #12 {
  %3 = icmp eq %struct.FT_ListRec_* %0, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.FT_ListRec_, %struct.FT_ListRec_* %0, i64 0, i32 0
  %6 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %5, align 8
  %7 = icmp eq %struct.FT_ListNodeRec_* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %4, %13
  %9 = phi %struct.FT_ListNodeRec_* [ %15, %13 ], [ %6, %4 ]
  %10 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %9, i64 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, %1
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %9, i64 0, i32 1
  %15 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %14, align 8
  %16 = icmp eq %struct.FT_ListNodeRec_* %15, null
  br i1 %16, label %17, label %8

17:                                               ; preds = %8, %13, %4, %2
  %18 = phi %struct.FT_ListNodeRec_* [ null, %2 ], [ null, %4 ], [ %9, %8 ], [ null, %13 ]
  ret %struct.FT_ListNodeRec_* %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @FT_List_Remove(%struct.FT_ListRec_*, %struct.FT_ListNodeRec_* readonly) local_unnamed_addr #3 {
  %3 = icmp ne %struct.FT_ListRec_* %0, null
  %4 = icmp ne %struct.FT_ListNodeRec_* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %19

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %1, i64 0, i32 0
  %8 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %1, i64 0, i32 1
  %10 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %9, align 8
  %11 = icmp eq %struct.FT_ListNodeRec_* %8, null
  %12 = getelementptr inbounds %struct.FT_ListRec_, %struct.FT_ListRec_* %0, i64 0, i32 0
  %13 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %8, i64 0, i32 1
  %14 = select i1 %11, %struct.FT_ListNodeRec_** %12, %struct.FT_ListNodeRec_** %13
  store %struct.FT_ListNodeRec_* %10, %struct.FT_ListNodeRec_** %14, align 8
  %15 = icmp eq %struct.FT_ListNodeRec_* %10, null
  %16 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %10, i64 0, i32 0
  %17 = getelementptr inbounds %struct.FT_ListRec_, %struct.FT_ListRec_* %0, i64 0, i32 1
  %18 = select i1 %15, %struct.FT_ListNodeRec_** %17, %struct.FT_ListNodeRec_** %16
  store %struct.FT_ListNodeRec_* %8, %struct.FT_ListNodeRec_** %18, align 8
  br label %19

19:                                               ; preds = %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @destroy_face(%struct.FT_MemoryRec_*, %struct.FT_FaceRec_*, %struct.FT_DriverRec_* nocapture readonly) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %2, i64 0, i32 1
  %5 = load %struct.FT_Driver_ClassRec_*, %struct.FT_Driver_ClassRec_** %4, align 8
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 28, i32 1
  %7 = load void (i8*)*, void (i8*)** %6, align 8
  %8 = icmp eq void (i8*)* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 28, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void %7(i8* %11) #16
  br label %12

12:                                               ; preds = %3, %9
  %13 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 21
  %14 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %13, align 8
  %15 = icmp eq %struct.FT_GlyphSlotRec_* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %12, %16
  %17 = phi %struct.FT_GlyphSlotRec_* [ %18, %16 ], [ %14, %12 ]
  tail call void @FT_Done_GlyphSlot(%struct.FT_GlyphSlotRec_* nonnull %17)
  %18 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %13, align 8
  %19 = icmp eq %struct.FT_GlyphSlotRec_* %18, null
  br i1 %19, label %20, label %16

20:                                               ; preds = %16, %12
  %21 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 27
  %22 = icmp ne %struct.FT_ListRec_* %21, null
  %23 = icmp ne %struct.FT_MemoryRec_* %0, null
  %24 = and i1 %23, %22
  br i1 %24, label %25, label %67

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.FT_ListRec_, %struct.FT_ListRec_* %21, i64 0, i32 0
  %27 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %26, align 8
  %28 = icmp eq %struct.FT_ListNodeRec_* %27, null
  br i1 %28, label %65, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %0, i64 0, i32 2
  br label %31

31:                                               ; preds = %62, %29
  %32 = phi %struct.FT_ListNodeRec_* [ %27, %29 ], [ %35, %62 ]
  %33 = bitcast %struct.FT_ListNodeRec_* %32 to i8*
  %34 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %32, i64 0, i32 1
  %35 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %34, align 8
  %36 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %32, i64 0, i32 2
  %37 = bitcast i8** %36 to %struct.FT_SizeRec_**
  %38 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %37, align 8
  %39 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %38, i64 0, i32 1, i32 1
  %40 = load void (i8*)*, void (i8*)** %39, align 8
  %41 = icmp eq void (i8*)* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %31
  %43 = bitcast %struct.FT_SizeRec_* %38 to i8*
  tail call void %40(i8* %43) #16
  br label %44

44:                                               ; preds = %42, %31
  %45 = load %struct.FT_Driver_ClassRec_*, %struct.FT_Driver_ClassRec_** %4, align 8
  %46 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %45, i64 0, i32 7
  %47 = load void (%struct.FT_SizeRec_*)*, void (%struct.FT_SizeRec_*)** %46, align 8
  %48 = icmp eq void (%struct.FT_SizeRec_*)* %47, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %44
  tail call void %47(%struct.FT_SizeRec_* %38) #16
  br label %50

50:                                               ; preds = %44, %49
  %51 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %38, i64 0, i32 3
  %52 = bitcast %struct.FT_Size_InternalRec_** %51 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %50
  %56 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %30, align 8
  tail call void %56(%struct.FT_MemoryRec_* nonnull %0, i8* nonnull %53) #16
  br label %57

57:                                               ; preds = %50, %55
  store %struct.FT_Size_InternalRec_* null, %struct.FT_Size_InternalRec_** %51, align 8
  %58 = icmp eq %struct.FT_SizeRec_* %38, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %57
  %60 = bitcast %struct.FT_SizeRec_* %38 to i8*
  %61 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %30, align 8
  tail call void %61(%struct.FT_MemoryRec_* nonnull %0, i8* nonnull %60) #16
  br label %62

62:                                               ; preds = %57, %59
  %63 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %30, align 8
  tail call void %63(%struct.FT_MemoryRec_* nonnull %0, i8* nonnull %33) #16
  %64 = icmp eq %struct.FT_ListNodeRec_* %35, null
  br i1 %64, label %65, label %31

65:                                               ; preds = %62, %25
  %66 = bitcast %struct.FT_ListRec_* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 16, i1 false) #16
  br label %67

67:                                               ; preds = %20, %65
  %68 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 22
  store %struct.FT_SizeRec_* null, %struct.FT_SizeRec_** %68, align 8
  %69 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 11, i32 1
  %70 = load void (i8*)*, void (i8*)** %69, align 8
  %71 = icmp eq void (i8*)* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %67
  %73 = bitcast %struct.FT_FaceRec_* %1 to i8*
  tail call void %70(i8* %73) #16
  br label %74

74:                                               ; preds = %67, %72
  %75 = icmp eq %struct.FT_FaceRec_* %1, null
  br i1 %75, label %119, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 9
  %78 = load i32, i32* %77, align 8
  %79 = icmp sgt i32 %78, 0
  %80 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 10
  br i1 %79, label %81, label %111

81:                                               ; preds = %76, %104
  %82 = phi i64 [ %107, %104 ], [ 0, %76 ]
  %83 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %80, align 8
  %84 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %83, i64 %82
  %85 = bitcast %struct.FT_CharMapRec_** %84 to %struct.FT_CMapRec_**
  %86 = load %struct.FT_CMapRec_*, %struct.FT_CMapRec_** %85, align 8
  %87 = getelementptr inbounds %struct.FT_CMapRec_, %struct.FT_CMapRec_* %86, i64 0, i32 1
  %88 = load %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_** %87, align 8
  %89 = getelementptr inbounds %struct.FT_CMapRec_, %struct.FT_CMapRec_* %86, i64 0, i32 0, i32 0
  %90 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %89, align 8
  %91 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %90, i64 0, i32 25
  %92 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %91, align 8
  %93 = getelementptr inbounds %struct.FT_CMap_ClassRec_, %struct.FT_CMap_ClassRec_* %88, i64 0, i32 2
  %94 = bitcast {}** %93 to void (%struct.FT_CMapRec_*)**
  %95 = load void (%struct.FT_CMapRec_*)*, void (%struct.FT_CMapRec_*)** %94, align 8
  %96 = icmp eq void (%struct.FT_CMapRec_*)* %95, null
  br i1 %96, label %98, label %97

97:                                               ; preds = %81
  tail call void %95(%struct.FT_CMapRec_* %86) #16
  br label %98

98:                                               ; preds = %97, %81
  %99 = icmp eq %struct.FT_CMapRec_* %86, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %98
  %101 = bitcast %struct.FT_CMapRec_* %86 to i8*
  %102 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %92, i64 0, i32 2
  %103 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %102, align 8
  tail call void %103(%struct.FT_MemoryRec_* %92, i8* nonnull %101) #16
  br label %104

104:                                              ; preds = %100, %98
  %105 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %80, align 8
  %106 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %105, i64 %82
  store %struct.FT_CharMapRec_* null, %struct.FT_CharMapRec_** %106, align 8
  %107 = add nuw nsw i64 %82, 1
  %108 = load i32, i32* %77, align 8
  %109 = sext i32 %108 to i64
  %110 = icmp slt i64 %107, %109
  br i1 %110, label %81, label %111

111:                                              ; preds = %104, %76
  %112 = bitcast %struct.FT_CharMapRec_*** %80 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %0, i64 0, i32 2
  %117 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %116, align 8
  tail call void %117(%struct.FT_MemoryRec_* %0, i8* nonnull %113) #16
  br label %118

118:                                              ; preds = %115, %111
  store %struct.FT_CharMapRec_** null, %struct.FT_CharMapRec_*** %80, align 8
  store i32 0, i32* %77, align 8
  br label %119

119:                                              ; preds = %74, %118
  %120 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %5, i64 0, i32 5
  %121 = load void (%struct.FT_FaceRec_*)*, void (%struct.FT_FaceRec_*)** %120, align 8
  %122 = icmp eq void (%struct.FT_FaceRec_*)* %121, null
  br i1 %122, label %124, label %123

123:                                              ; preds = %119
  tail call void %121(%struct.FT_FaceRec_* %1) #16
  br label %124

124:                                              ; preds = %119, %123
  %125 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 26
  %126 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %125, align 8
  %127 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 2
  %128 = load i64, i64* %127, align 8
  %129 = icmp eq %struct.FT_StreamRec_* %126, null
  br i1 %129, label %144, label %130

130:                                              ; preds = %124
  %131 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %126, i64 0, i32 7
  %132 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %131, align 8
  %133 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %126, i64 0, i32 6
  %134 = load void (%struct.FT_StreamRec_*)*, void (%struct.FT_StreamRec_*)** %133, align 8
  %135 = icmp eq void (%struct.FT_StreamRec_*)* %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %130
  tail call void %134(%struct.FT_StreamRec_* nonnull %126) #16
  br label %137

137:                                              ; preds = %136, %130
  %138 = and i64 %128, 1024
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %144

140:                                              ; preds = %137
  %141 = bitcast %struct.FT_StreamRec_* %126 to i8*
  %142 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %132, i64 0, i32 2
  %143 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %142, align 8
  tail call void %143(%struct.FT_MemoryRec_* %132, i8* nonnull %141) #16
  br label %144

144:                                              ; preds = %124, %137, %140
  store %struct.FT_StreamRec_* null, %struct.FT_StreamRec_** %125, align 8
  %145 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 30
  %146 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %145, align 8
  %147 = icmp eq %struct.FT_Face_InternalRec_* %146, null
  br i1 %147, label %152, label %148

148:                                              ; preds = %144
  %149 = bitcast %struct.FT_Face_InternalRec_* %146 to i8*
  %150 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %0, i64 0, i32 2
  %151 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %150, align 8
  tail call void %151(%struct.FT_MemoryRec_* %0, i8* nonnull %149) #16
  store %struct.FT_Face_InternalRec_* null, %struct.FT_Face_InternalRec_** %145, align 8
  br label %152

152:                                              ; preds = %144, %148
  br i1 %75, label %157, label %153

153:                                              ; preds = %152
  %154 = bitcast %struct.FT_FaceRec_* %1 to i8*
  %155 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %0, i64 0, i32 2
  %156 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %155, align 8
  tail call void %156(%struct.FT_MemoryRec_* %0, i8* nonnull %154) #16
  br label %157

157:                                              ; preds = %152, %153
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_New_Size(%struct.FT_FaceRec_*, %struct.FT_SizeRec_**) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %3, label %85, label %4

4:                                                ; preds = %2
  %5 = icmp eq %struct.FT_SizeRec_** %1, null
  br i1 %5, label %85, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %8 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %7, align 8
  %9 = icmp eq %struct.FT_DriverRec_* %8, null
  br i1 %9, label %85, label %10

10:                                               ; preds = %6
  store %struct.FT_SizeRec_* null, %struct.FT_SizeRec_** %1, align 8
  %11 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %7, align 8
  %12 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %11, i64 0, i32 1
  %13 = load %struct.FT_Driver_ClassRec_*, %struct.FT_Driver_ClassRec_** %12, align 8
  %14 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 25
  %15 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %14, align 8
  %16 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %13, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = icmp sgt i64 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %10
  %20 = icmp eq i64 %17, 0
  br i1 %20, label %27, label %85

21:                                               ; preds = %10
  %22 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %15, i64 0, i32 1
  %23 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %22, align 8
  %24 = tail call i8* %23(%struct.FT_MemoryRec_* %15, i64 %17) #16
  %25 = icmp eq i8* %24, null
  br i1 %25, label %85, label %26

26:                                               ; preds = %21
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %24, i8 0, i64 %17, i1 false) #16
  br label %27

27:                                               ; preds = %26, %19
  %28 = phi i8* [ %24, %26 ], [ null, %19 ]
  %29 = bitcast i8* %28 to %struct.FT_SizeRec_*
  %30 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %15, i64 0, i32 1
  %31 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %30, align 8
  %32 = tail call i8* %31(%struct.FT_MemoryRec_* %15, i64 24) #16
  %33 = icmp eq i8* %32, null
  br i1 %33, label %70, label %34

34:                                               ; preds = %27
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %32, i8 0, i64 24, i1 false) #16
  %35 = bitcast i8* %28 to %struct.FT_FaceRec_**
  store %struct.FT_FaceRec_* %0, %struct.FT_FaceRec_** %35, align 8
  %36 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %30, align 8
  %37 = tail call i8* %36(%struct.FT_MemoryRec_* %15, i64 72) #16
  %38 = icmp eq i8* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %37, i8 0, i64 72, i1 false) #16
  %40 = getelementptr inbounds i8, i8* %28, i64 80
  %41 = bitcast i8* %40 to i8**
  store i8* %37, i8** %41, align 8
  %42 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %13, i64 0, i32 6
  %43 = load i32 (%struct.FT_SizeRec_*)*, i32 (%struct.FT_SizeRec_*)** %42, align 8
  %44 = icmp eq i32 (%struct.FT_SizeRec_*)* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %39
  %46 = tail call i32 %43(%struct.FT_SizeRec_* %29) #16
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %66

48:                                               ; preds = %39, %45
  %49 = bitcast %struct.FT_SizeRec_** %1 to i8**
  store i8* %28, i8** %49, align 8
  %50 = getelementptr inbounds i8, i8* %32, i64 16
  %51 = bitcast i8* %50 to i8**
  store i8* %28, i8** %51, align 8
  %52 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 27
  %53 = icmp eq %struct.FT_ListRec_* %52, null
  br i1 %53, label %85, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 27, i32 1
  %56 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %55, align 8
  %57 = getelementptr inbounds i8, i8* %32, i64 8
  %58 = bitcast i8* %57 to %struct.FT_ListNodeRec_**
  store %struct.FT_ListNodeRec_* null, %struct.FT_ListNodeRec_** %58, align 8
  %59 = bitcast i8* %32 to %struct.FT_ListNodeRec_**
  store %struct.FT_ListNodeRec_* %56, %struct.FT_ListNodeRec_** %59, align 8
  %60 = icmp eq %struct.FT_ListNodeRec_* %56, null
  %61 = bitcast %struct.FT_ListRec_* %52 to i8**
  %62 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %56, i64 0, i32 1
  %63 = bitcast %struct.FT_ListNodeRec_** %62 to i8**
  %64 = select i1 %60, i8** %61, i8** %63
  store i8* %32, i8** %64, align 8
  %65 = bitcast %struct.FT_ListNodeRec_** %55 to i8**
  store i8* %32, i8** %65, align 8
  br label %85

66:                                               ; preds = %45, %34
  %67 = phi i32 [ %46, %45 ], [ 64, %34 ]
  %68 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %15, i64 0, i32 2
  %69 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %68, align 8
  tail call void %69(%struct.FT_MemoryRec_* %15, i8* nonnull %32) #16
  br label %70

70:                                               ; preds = %27, %66
  %71 = phi i32 [ %67, %66 ], [ 64, %27 ]
  %72 = icmp eq i8* %28, null
  br i1 %72, label %85, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds i8, i8* %28, i64 80
  %75 = bitcast i8* %74 to %struct.FT_Size_InternalRec_**
  %76 = bitcast i8* %74 to i8**
  %77 = load i8*, i8** %76, align 8
  %78 = icmp eq i8* %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %15, i64 0, i32 2
  %81 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %80, align 8
  tail call void %81(%struct.FT_MemoryRec_* %15, i8* nonnull %77) #16
  br label %82

82:                                               ; preds = %73, %79
  store %struct.FT_Size_InternalRec_* null, %struct.FT_Size_InternalRec_** %75, align 8
  %83 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %15, i64 0, i32 2
  %84 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %83, align 8
  tail call void %84(%struct.FT_MemoryRec_* %15, i8* nonnull %28) #16
  br label %85

85:                                               ; preds = %21, %48, %19, %70, %54, %82, %6, %4, %2
  %86 = phi i32 [ 35, %2 ], [ 6, %4 ], [ 34, %6 ], [ 0, %48 ], [ 0, %54 ], [ %71, %82 ], [ %71, %70 ], [ 6, %19 ], [ 64, %21 ]
  ret i32 %86
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @FT_List_Add(%struct.FT_ListRec_*, %struct.FT_ListNodeRec_*) local_unnamed_addr #3 {
  %3 = icmp ne %struct.FT_ListRec_* %0, null
  %4 = icmp ne %struct.FT_ListNodeRec_* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FT_ListRec_, %struct.FT_ListRec_* %0, i64 0, i32 1
  %8 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %1, i64 0, i32 1
  store %struct.FT_ListNodeRec_* null, %struct.FT_ListNodeRec_** %9, align 8
  %10 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %1, i64 0, i32 0
  store %struct.FT_ListNodeRec_* %8, %struct.FT_ListNodeRec_** %10, align 8
  %11 = icmp eq %struct.FT_ListNodeRec_* %8, null
  %12 = getelementptr inbounds %struct.FT_ListRec_, %struct.FT_ListRec_* %0, i64 0, i32 0
  %13 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %8, i64 0, i32 1
  %14 = select i1 %11, %struct.FT_ListNodeRec_** %12, %struct.FT_ListNodeRec_** %13
  store %struct.FT_ListNodeRec_* %1, %struct.FT_ListNodeRec_** %14, align 8
  store %struct.FT_ListNodeRec_* %1, %struct.FT_ListNodeRec_** %7, align 8
  br label %15

15:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Done_Size(%struct.FT_SizeRec_*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.FT_SizeRec_* %0, null
  br i1 %2, label %77, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 0
  %5 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %4, align 8
  %6 = icmp eq %struct.FT_FaceRec_* %5, null
  br i1 %6, label %77, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 24
  %9 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %8, align 8
  %10 = icmp eq %struct.FT_DriverRec_* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %9, i64 0, i32 0, i32 2
  %13 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %12, align 8
  %14 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 27
  %15 = bitcast %struct.FT_SizeRec_* %0 to i8*
  %16 = icmp eq %struct.FT_ListRec_* %14, null
  br i1 %16, label %77, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.FT_ListRec_, %struct.FT_ListRec_* %14, i64 0, i32 0
  %19 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %18, align 8
  %20 = icmp eq %struct.FT_ListNodeRec_* %19, null
  br i1 %20, label %77, label %21

21:                                               ; preds = %17, %26
  %22 = phi %struct.FT_ListNodeRec_* [ %28, %26 ], [ %19, %17 ]
  %23 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %22, i64 0, i32 2
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, %15
  br i1 %25, label %30, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %22, i64 0, i32 1
  %28 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %27, align 8
  %29 = icmp eq %struct.FT_ListNodeRec_* %28, null
  br i1 %29, label %77, label %21

30:                                               ; preds = %21
  %31 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %22, i64 0, i32 0
  %32 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %31, align 8
  %33 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %22, i64 0, i32 1
  %34 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %33, align 8
  %35 = icmp eq %struct.FT_ListNodeRec_* %32, null
  %36 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %32, i64 0, i32 1
  %37 = select i1 %35, %struct.FT_ListNodeRec_** %18, %struct.FT_ListNodeRec_** %36
  store %struct.FT_ListNodeRec_* %34, %struct.FT_ListNodeRec_** %37, align 8
  %38 = icmp eq %struct.FT_ListNodeRec_* %34, null
  %39 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %34, i64 0, i32 0
  %40 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 27, i32 1
  %41 = select i1 %38, %struct.FT_ListNodeRec_** %40, %struct.FT_ListNodeRec_** %39
  store %struct.FT_ListNodeRec_* %32, %struct.FT_ListNodeRec_** %41, align 8
  %42 = bitcast %struct.FT_ListNodeRec_* %22 to i8*
  %43 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %13, i64 0, i32 2
  %44 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %43, align 8
  tail call void %44(%struct.FT_MemoryRec_* %13, i8* nonnull %42) #16
  %45 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 22
  %46 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %45, align 8
  %47 = icmp eq %struct.FT_SizeRec_* %46, %0
  br i1 %47, label %48, label %56

48:                                               ; preds = %30
  store %struct.FT_SizeRec_* null, %struct.FT_SizeRec_** %45, align 8
  %49 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %18, align 8
  %50 = icmp eq %struct.FT_ListNodeRec_* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %49, i64 0, i32 2
  %53 = bitcast i8** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %struct.FT_SizeRec_** %45 to i64*
  store i64 %54, i64* %55, align 8
  br label %56

56:                                               ; preds = %48, %51, %30
  %57 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 1, i32 1
  %58 = load void (i8*)*, void (i8*)** %57, align 8
  %59 = icmp eq void (i8*)* %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %56
  tail call void %58(i8* nonnull %15) #16
  br label %61

61:                                               ; preds = %60, %56
  %62 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %9, i64 0, i32 1
  %63 = load %struct.FT_Driver_ClassRec_*, %struct.FT_Driver_ClassRec_** %62, align 8
  %64 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %63, i64 0, i32 7
  %65 = load void (%struct.FT_SizeRec_*)*, void (%struct.FT_SizeRec_*)** %64, align 8
  %66 = icmp eq void (%struct.FT_SizeRec_*)* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %61
  tail call void %65(%struct.FT_SizeRec_* nonnull %0) #16
  br label %68

68:                                               ; preds = %67, %61
  %69 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 3
  %70 = bitcast %struct.FT_Size_InternalRec_** %69 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %68
  %74 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %43, align 8
  tail call void %74(%struct.FT_MemoryRec_* %13, i8* nonnull %71) #16
  br label %75

75:                                               ; preds = %73, %68
  store %struct.FT_Size_InternalRec_* null, %struct.FT_Size_InternalRec_** %69, align 8
  %76 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %43, align 8
  tail call void %76(%struct.FT_MemoryRec_* %13, i8* nonnull %15) #16
  br label %77

77:                                               ; preds = %26, %17, %11, %75, %7, %3, %1
  %78 = phi i32 [ 36, %1 ], [ 35, %3 ], [ 34, %7 ], [ 0, %75 ], [ 36, %11 ], [ 36, %17 ], [ 36, %26 ]
  ret i32 %78
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @FT_Match_Size(%struct.FT_FaceRec_* nocapture readonly, %struct.FT_Size_RequestRec_* nocapture readonly, i8 zeroext, i64*) local_unnamed_addr #3 {
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 2
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %80, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %80

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  br i1 %16, label %24, label %19

19:                                               ; preds = %13
  %20 = zext i32 %15 to i64
  %21 = mul nsw i64 %18, %20
  %22 = add nsw i64 %21, 36
  %23 = sdiv i64 %22, 72
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %23, %19 ], [ %18, %13 ]
  %26 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 4
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  br i1 %28, label %36, label %31

31:                                               ; preds = %24
  %32 = zext i32 %27 to i64
  %33 = mul nsw i64 %30, %32
  %34 = add nsw i64 %33, 36
  %35 = sdiv i64 %34, 72
  br label %36

36:                                               ; preds = %24, %31
  %37 = phi i64 [ %35, %31 ], [ %30, %24 ]
  %38 = icmp eq i64 %18, 0
  %39 = icmp eq i64 %30, 0
  %40 = select i1 %39, i64 %25, i64 %37
  %41 = select i1 %38, i64 %40, i64 %25
  %42 = select i1 %38, i64 %37, i64 %40
  %43 = add nsw i64 %41, 32
  %44 = and i64 %43, -64
  %45 = add nsw i64 %42, 32
  %46 = and i64 %45, -64
  %47 = icmp ne i64 %44, 0
  %48 = icmp ne i64 %46, 0
  %49 = and i1 %47, %48
  br i1 %49, label %50, label %80

50:                                               ; preds = %36
  %51 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 7
  %52 = load i32, i32* %51, align 8
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %54, label %80

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 8
  %56 = load %struct.FT_Bitmap_Size_*, %struct.FT_Bitmap_Size_** %55, align 8
  %57 = icmp eq i8 %2, 0
  %58 = sext i32 %52 to i64
  br label %59

59:                                               ; preds = %54, %77
  %60 = phi i64 [ 0, %54 ], [ %78, %77 ]
  %61 = getelementptr inbounds %struct.FT_Bitmap_Size_, %struct.FT_Bitmap_Size_* %56, i64 %60, i32 4
  %62 = load i64, i64* %61, align 8
  %63 = add nsw i64 %62, 32
  %64 = and i64 %63, -64
  %65 = icmp eq i64 %46, %64
  br i1 %65, label %66, label %77

66:                                               ; preds = %59
  %67 = getelementptr inbounds %struct.FT_Bitmap_Size_, %struct.FT_Bitmap_Size_* %56, i64 %60, i32 3
  %68 = load i64, i64* %67, align 8
  %69 = add nsw i64 %68, 32
  %70 = and i64 %69, -64
  %71 = icmp ne i64 %44, %70
  %72 = and i1 %57, %71
  br i1 %72, label %77, label %73

73:                                               ; preds = %66
  %74 = icmp eq i64* %3, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %73
  %76 = and i64 %60, 4294967295
  store i64 %76, i64* %3, align 8
  br label %80

77:                                               ; preds = %59, %66
  %78 = add nuw nsw i64 %60, 1
  %79 = icmp slt i64 %78, %58
  br i1 %79, label %59, label %80

80:                                               ; preds = %77, %50, %75, %73, %36, %9, %4
  %81 = phi i32 [ 35, %4 ], [ 7, %9 ], [ 23, %36 ], [ 0, %73 ], [ 0, %75 ], [ 23, %50 ], [ 23, %77 ]
  ret i32 %81
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ft_synthesize_vertical_metrics(%struct.FT_Glyph_Metrics_* nocapture, i64) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.FT_Glyph_Metrics_, %struct.FT_Glyph_Metrics_* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.FT_Glyph_Metrics_, %struct.FT_Glyph_Metrics_* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = icmp slt i64 %6, 0
  %8 = icmp slt i64 %4, %6
  %9 = select i1 %8, i64 %6, i64 %4
  %10 = sub nsw i64 %4, %6
  %11 = select i1 %7, i64 %9, i64 %10
  %12 = icmp eq i64 %1, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = mul nsw i64 %11, 12
  %15 = sdiv i64 %14, 10
  br label %16

16:                                               ; preds = %2, %13
  %17 = phi i64 [ %1, %2 ], [ %15, %13 ]
  %18 = getelementptr inbounds %struct.FT_Glyph_Metrics_, %struct.FT_Glyph_Metrics_* %0, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %struct.FT_Glyph_Metrics_, %struct.FT_Glyph_Metrics_* %0, i64 0, i32 4
  %21 = load i64, i64* %20, align 8
  %22 = sdiv i64 %21, 2
  %23 = sub nsw i64 %19, %22
  %24 = getelementptr inbounds %struct.FT_Glyph_Metrics_, %struct.FT_Glyph_Metrics_* %0, i64 0, i32 5
  store i64 %23, i64* %24, align 8
  %25 = sub nsw i64 %17, %11
  %26 = sdiv i64 %25, 2
  %27 = getelementptr inbounds %struct.FT_Glyph_Metrics_, %struct.FT_Glyph_Metrics_* %0, i64 0, i32 6
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %struct.FT_Glyph_Metrics_, %struct.FT_Glyph_Metrics_* %0, i64 0, i32 7
  store i64 %17, i64* %28, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @FT_Select_Metrics(%struct.FT_FaceRec_* nocapture readonly, i64) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 22
  %4 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %3, align 8
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 8
  %6 = load %struct.FT_Bitmap_Size_*, %struct.FT_Bitmap_Size_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_Bitmap_Size_, %struct.FT_Bitmap_Size_* %6, i64 %1, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, 32
  %10 = lshr i64 %9, 6
  %11 = trunc i64 %10 to i16
  %12 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 0
  store i16 %11, i16* %12, align 8
  %13 = getelementptr inbounds %struct.FT_Bitmap_Size_, %struct.FT_Bitmap_Size_* %6, i64 %1, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i64 %14, 32
  %16 = lshr i64 %15, 6
  %17 = trunc i64 %16 to i16
  %18 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 1
  store i16 %17, i16* %18, align 2
  %19 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %109, label %23

23:                                               ; preds = %2
  %24 = load i64, i64* %7, align 8
  %25 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 13
  %26 = load i16, i16* %25, align 8
  %27 = zext i16 %26 to i64
  %28 = icmp slt i64 %24, 0
  %29 = icmp eq i16 %26, 0
  br i1 %29, label %37, label %30

30:                                               ; preds = %23
  %31 = sub i64 0, %24
  %32 = select i1 %28, i64 %31, i64 %24
  %33 = shl i64 %32, 16
  %34 = lshr i64 %27, 1
  %35 = or i64 %34, %33
  %36 = udiv i64 %35, %27
  br label %37

37:                                               ; preds = %23, %30
  %38 = phi i64 [ %36, %30 ], [ 2147483647, %23 ]
  %39 = sub i64 0, %38
  %40 = select i1 %28, i64 %39, i64 %38
  %41 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 2
  store i64 %40, i64* %41, align 8
  %42 = load i64, i64* %13, align 8
  %43 = load i16, i16* %25, align 8
  %44 = zext i16 %43 to i64
  %45 = icmp slt i64 %42, 0
  %46 = icmp eq i16 %43, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %37
  %48 = sub i64 0, %42
  %49 = select i1 %45, i64 %48, i64 %42
  %50 = shl i64 %49, 16
  %51 = lshr i64 %44, 1
  %52 = or i64 %51, %50
  %53 = udiv i64 %52, %44
  br label %54

54:                                               ; preds = %37, %47
  %55 = phi i64 [ %53, %47 ], [ 2147483647, %37 ]
  %56 = sub i64 0, %55
  %57 = select i1 %45, i64 %56, i64 %55
  %58 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 3
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 14
  %60 = load i16, i16* %59, align 2
  %61 = sext i16 %60 to i64
  %62 = shl i64 %57, 32
  %63 = ashr exact i64 %62, 32
  %64 = mul nsw i64 %63, %61
  %65 = ashr i64 %64, 63
  %66 = add nsw i64 %64, 32768
  %67 = add nsw i64 %66, %65
  %68 = shl i64 %67, 16
  %69 = ashr i64 %68, 32
  %70 = add nsw i64 %69, 63
  %71 = and i64 %70, -64
  %72 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 4
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 15
  %74 = load i16, i16* %73, align 4
  %75 = sext i16 %74 to i64
  %76 = mul nsw i64 %63, %75
  %77 = ashr i64 %76, 63
  %78 = add nsw i64 %76, 32768
  %79 = add nsw i64 %78, %77
  %80 = shl i64 %79, 16
  %81 = ashr i64 %80, 32
  %82 = and i64 %81, -64
  %83 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 5
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 16
  %85 = load i16, i16* %84, align 2
  %86 = sext i16 %85 to i64
  %87 = mul nsw i64 %63, %86
  %88 = ashr i64 %87, 63
  %89 = add nsw i64 %87, 32768
  %90 = add nsw i64 %89, %88
  %91 = shl i64 %90, 16
  %92 = ashr i64 %91, 32
  %93 = add nsw i64 %92, 32
  %94 = and i64 %93, -64
  %95 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 6
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 17
  %97 = load i16, i16* %96, align 8
  %98 = sext i16 %97 to i64
  %99 = shl i64 %40, 32
  %100 = ashr exact i64 %99, 32
  %101 = mul nsw i64 %100, %98
  %102 = ashr i64 %101, 63
  %103 = add nsw i64 %101, 32768
  %104 = add nsw i64 %103, %102
  %105 = shl i64 %104, 16
  %106 = ashr i64 %105, 32
  %107 = add nsw i64 %106, 32
  %108 = and i64 %107, -64
  br label %122

109:                                              ; preds = %2
  %110 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 2
  %111 = bitcast i64* %110 to <2 x i64>*
  store <2 x i64> <i64 65536, i64 65536>, <2 x i64>* %111, align 8
  %112 = load i64, i64* %13, align 8
  %113 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 4
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 5
  store i64 0, i64* %114, align 8
  %115 = getelementptr inbounds %struct.FT_Bitmap_Size_, %struct.FT_Bitmap_Size_* %6, i64 %1, i32 0
  %116 = load i16, i16* %115, align 8
  %117 = sext i16 %116 to i32
  %118 = shl nsw i32 %117, 6
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 6
  store i64 %119, i64* %120, align 8
  %121 = load i64, i64* %7, align 8
  br label %122

122:                                              ; preds = %109, %54
  %123 = phi i64 [ %121, %109 ], [ %108, %54 ]
  %124 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 7
  store i64 %123, i64* %124, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_Request_Metrics(%struct.FT_FaceRec_* nocapture readonly, %struct.FT_Size_RequestRec_* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 22
  %4 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %3, align 8
  %5 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %269, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %68 [
    i32 0, label %13
    i32 1, label %17
    i32 2, label %25
    i32 3, label %36
    i32 4, label %47
  ]

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 13
  %15 = load i16, i16* %14, align 8
  %16 = zext i16 %15 to i64
  br label %68

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 14
  %19 = load i16, i16* %18, align 2
  %20 = sext i16 %19 to i64
  %21 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 15
  %22 = load i16, i16* %21, align 4
  %23 = sext i16 %22 to i64
  %24 = sub nsw i64 %20, %23
  br label %59

25:                                               ; preds = %10
  %26 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 12, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 12, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = sub nsw i64 %27, %29
  %31 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 12, i32 3
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 12, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = sub nsw i64 %32, %34
  br label %59

36:                                               ; preds = %10
  %37 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 17
  %38 = load i16, i16* %37, align 8
  %39 = sext i16 %38 to i64
  %40 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 14
  %41 = load i16, i16* %40, align 2
  %42 = sext i16 %41 to i64
  %43 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 15
  %44 = load i16, i16* %43, align 4
  %45 = sext i16 %44 to i64
  %46 = sub nsw i64 %42, %45
  br label %59

47:                                               ; preds = %10
  %48 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 2
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 2
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 3
  store i64 %52, i64* %53, align 8
  %54 = icmp eq i64 %49, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  store i64 %52, i64* %50, align 8
  br label %171

56:                                               ; preds = %47
  %57 = icmp eq i64 %52, 0
  br i1 %57, label %58, label %171

58:                                               ; preds = %56
  store i64 %49, i64* %53, align 8
  br label %171

59:                                               ; preds = %36, %25, %17
  %60 = phi i64 [ %39, %36 ], [ %30, %25 ], [ %24, %17 ]
  %61 = phi i64 [ %46, %36 ], [ %35, %25 ], [ %24, %17 ]
  %62 = icmp slt i64 %60, 0
  %63 = sub nsw i64 0, %60
  %64 = select i1 %62, i64 %63, i64 %60
  %65 = icmp slt i64 %61, 0
  %66 = sub nsw i64 0, %61
  %67 = select i1 %65, i64 %66, i64 %61
  br label %68

68:                                               ; preds = %59, %10, %13
  %69 = phi i64 [ 0, %10 ], [ %16, %13 ], [ %64, %59 ]
  %70 = phi i64 [ 0, %10 ], [ %16, %13 ], [ %67, %59 ]
  %71 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 1
  %75 = load i64, i64* %74, align 8
  br i1 %73, label %81, label %76

76:                                               ; preds = %68
  %77 = zext i32 %72 to i64
  %78 = mul nsw i64 %75, %77
  %79 = add nsw i64 %78, 36
  %80 = sdiv i64 %79, 72
  br label %81

81:                                               ; preds = %68, %76
  %82 = phi i64 [ %80, %76 ], [ %75, %68 ]
  %83 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 4
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 2
  %87 = load i64, i64* %86, align 8
  br i1 %85, label %93, label %88

88:                                               ; preds = %81
  %89 = zext i32 %84 to i64
  %90 = mul nsw i64 %87, %89
  %91 = add nsw i64 %90, 36
  %92 = sdiv i64 %91, 72
  br label %93

93:                                               ; preds = %81, %88
  %94 = phi i64 [ %92, %88 ], [ %87, %81 ]
  %95 = icmp eq i64 %75, 0
  br i1 %95, label %147, label %96

96:                                               ; preds = %93
  %97 = icmp slt i64 %82, 0
  %98 = icmp eq i64 %69, 0
  br i1 %98, label %106, label %99

99:                                               ; preds = %96
  %100 = sub i64 0, %82
  %101 = select i1 %97, i64 %100, i64 %82
  %102 = shl i64 %101, 16
  %103 = lshr i64 %69, 1
  %104 = add i64 %102, %103
  %105 = udiv i64 %104, %69
  br label %106

106:                                              ; preds = %96, %99
  %107 = phi i64 [ %105, %99 ], [ 2147483647, %96 ]
  %108 = sub i64 0, %107
  %109 = select i1 %97, i64 %108, i64 %107
  %110 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 2
  store i64 %109, i64* %110, align 8
  %111 = load i64, i64* %86, align 8
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %134, label %113

113:                                              ; preds = %106
  %114 = icmp slt i64 %94, 0
  %115 = icmp eq i64 %70, 0
  br i1 %115, label %123, label %116

116:                                              ; preds = %113
  %117 = sub i64 0, %94
  %118 = select i1 %114, i64 %117, i64 %94
  %119 = shl i64 %118, 16
  %120 = lshr i64 %70, 1
  %121 = add i64 %119, %120
  %122 = udiv i64 %121, %70
  br label %123

123:                                              ; preds = %113, %116
  %124 = phi i64 [ %122, %116 ], [ 2147483647, %113 ]
  %125 = sub i64 0, %124
  %126 = select i1 %114, i64 %125, i64 %124
  %127 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 3
  store i64 %126, i64* %127, align 8
  %128 = load i32, i32* %11, align 8
  %129 = icmp eq i32 %128, 3
  br i1 %129, label %130, label %177

130:                                              ; preds = %123
  %131 = icmp sgt i64 %126, %109
  br i1 %131, label %132, label %133

132:                                              ; preds = %130
  store i64 %109, i64* %127, align 8
  br label %171

133:                                              ; preds = %130
  store i64 %126, i64* %110, align 8
  br label %171

134:                                              ; preds = %106
  %135 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 3
  store i64 %109, i64* %135, align 8
  br i1 %98, label %143, label %136

136:                                              ; preds = %134
  %137 = sub i64 0, %82
  %138 = select i1 %97, i64 %137, i64 %82
  %139 = mul i64 %138, %70
  %140 = lshr i64 %69, 1
  %141 = add i64 %139, %140
  %142 = udiv i64 %141, %69
  br label %143

143:                                              ; preds = %134, %136
  %144 = phi i64 [ %142, %136 ], [ 2147483647, %134 ]
  %145 = sub i64 0, %144
  %146 = select i1 %97, i64 %145, i64 %144
  br label %171

147:                                              ; preds = %93
  %148 = icmp slt i64 %94, 0
  %149 = icmp eq i64 %70, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %147
  %151 = select i1 %148, i64 -2147483647, i64 2147483647
  br label %164

152:                                              ; preds = %147
  %153 = sub i64 0, %94
  %154 = select i1 %148, i64 %153, i64 %94
  %155 = shl i64 %154, 16
  %156 = lshr i64 %70, 1
  %157 = add i64 %155, %156
  %158 = udiv i64 %157, %70
  %159 = sub i64 0, %158
  %160 = select i1 %148, i64 %159, i64 %158
  %161 = mul i64 %154, %69
  %162 = add i64 %161, %156
  %163 = udiv i64 %162, %70
  br label %164

164:                                              ; preds = %150, %152
  %165 = phi i64 [ %151, %150 ], [ %160, %152 ]
  %166 = phi i64 [ 2147483647, %150 ], [ %163, %152 ]
  %167 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 3
  store i64 %165, i64* %167, align 8
  %168 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 2
  store i64 %165, i64* %168, align 8
  %169 = sub i64 0, %166
  %170 = select i1 %148, i64 %169, i64 %166
  br label %171

171:                                              ; preds = %58, %55, %143, %132, %133, %164, %56
  %172 = phi i64 [ %52, %55 ], [ %49, %58 ], [ %52, %56 ], [ %165, %164 ], [ %109, %143 ], [ %126, %133 ], [ %109, %132 ]
  %173 = phi i64 [ %52, %55 ], [ %49, %58 ], [ %49, %56 ], [ %165, %164 ], [ %109, %143 ], [ %126, %133 ], [ %109, %132 ]
  %174 = phi i64 [ 0, %55 ], [ 0, %58 ], [ 0, %56 ], [ %170, %164 ], [ %82, %143 ], [ %82, %133 ], [ %82, %132 ]
  %175 = phi i64 [ 0, %55 ], [ 0, %58 ], [ 0, %56 ], [ %94, %164 ], [ %146, %143 ], [ %94, %133 ], [ %94, %132 ]
  %176 = load i32, i32* %11, align 8
  br label %177

177:                                              ; preds = %171, %123
  %178 = phi i64 [ %172, %171 ], [ %126, %123 ]
  %179 = phi i64 [ %173, %171 ], [ %109, %123 ]
  %180 = phi i32 [ %176, %171 ], [ %128, %123 ]
  %181 = phi i64 [ %174, %171 ], [ %82, %123 ]
  %182 = phi i64 [ %175, %171 ], [ %94, %123 ]
  %183 = icmp eq i32 %180, 0
  br i1 %183, label %184, label %189

184:                                              ; preds = %177
  %185 = shl i64 %178, 32
  %186 = ashr exact i64 %185, 32
  %187 = shl i64 %179, 32
  %188 = ashr exact i64 %187, 32
  br label %209

189:                                              ; preds = %177
  %190 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 13
  %191 = load i16, i16* %190, align 8
  %192 = zext i16 %191 to i64
  %193 = shl i64 %179, 32
  %194 = ashr exact i64 %193, 32
  %195 = mul nsw i64 %194, %192
  %196 = ashr i64 %195, 63
  %197 = add nsw i64 %195, 32768
  %198 = add nsw i64 %197, %196
  %199 = shl i64 %198, 16
  %200 = ashr i64 %199, 32
  %201 = shl i64 %178, 32
  %202 = ashr exact i64 %201, 32
  %203 = mul nsw i64 %202, %192
  %204 = ashr i64 %203, 63
  %205 = add nsw i64 %203, 32768
  %206 = add nsw i64 %205, %204
  %207 = shl i64 %206, 16
  %208 = ashr i64 %207, 32
  br label %209

209:                                              ; preds = %184, %189
  %210 = phi i64 [ %188, %184 ], [ %194, %189 ]
  %211 = phi i64 [ %186, %184 ], [ %202, %189 ]
  %212 = phi i64 [ %181, %184 ], [ %200, %189 ]
  %213 = phi i64 [ %182, %184 ], [ %208, %189 ]
  %214 = add nsw i64 %212, 32
  %215 = lshr i64 %214, 6
  %216 = trunc i64 %215 to i16
  %217 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %5, i64 0, i32 0
  store i16 %216, i16* %217, align 8
  %218 = add nsw i64 %213, 32
  %219 = lshr i64 %218, 6
  %220 = trunc i64 %219 to i16
  %221 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 1
  store i16 %220, i16* %221, align 2
  %222 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 14
  %223 = load i16, i16* %222, align 2
  %224 = sext i16 %223 to i64
  %225 = mul nsw i64 %211, %224
  %226 = ashr i64 %225, 63
  %227 = add nsw i64 %225, 32768
  %228 = add nsw i64 %227, %226
  %229 = shl i64 %228, 16
  %230 = ashr i64 %229, 32
  %231 = add nsw i64 %230, 63
  %232 = and i64 %231, -64
  %233 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 4
  store i64 %232, i64* %233, align 8
  %234 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 15
  %235 = load i16, i16* %234, align 4
  %236 = sext i16 %235 to i64
  %237 = mul nsw i64 %211, %236
  %238 = ashr i64 %237, 63
  %239 = add nsw i64 %237, 32768
  %240 = add nsw i64 %239, %238
  %241 = shl i64 %240, 16
  %242 = ashr i64 %241, 32
  %243 = and i64 %242, -64
  %244 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 5
  store i64 %243, i64* %244, align 8
  %245 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 16
  %246 = load i16, i16* %245, align 2
  %247 = sext i16 %246 to i64
  %248 = mul nsw i64 %211, %247
  %249 = ashr i64 %248, 63
  %250 = add nsw i64 %248, 32768
  %251 = add nsw i64 %250, %249
  %252 = shl i64 %251, 16
  %253 = ashr i64 %252, 32
  %254 = add nsw i64 %253, 32
  %255 = and i64 %254, -64
  %256 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 6
  store i64 %255, i64* %256, align 8
  %257 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 17
  %258 = load i16, i16* %257, align 8
  %259 = sext i16 %258 to i64
  %260 = mul nsw i64 %210, %259
  %261 = ashr i64 %260, 63
  %262 = add nsw i64 %260, 32768
  %263 = add nsw i64 %262, %261
  %264 = shl i64 %263, 16
  %265 = ashr i64 %264, 32
  %266 = add nsw i64 %265, 32
  %267 = and i64 %266, -64
  %268 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 7
  store i64 %267, i64* %268, align 8
  br label %273

269:                                              ; preds = %2
  %270 = bitcast %struct.FT_Size_Metrics_* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %270, i8 0, i64 56, i1 false)
  %271 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %4, i64 0, i32 2, i32 2
  %272 = bitcast i64* %271 to <2 x i64>*
  store <2 x i64> <i64 65536, i64 65536>, <2 x i64>* %272, align 8
  br label %273

273:                                              ; preds = %269, %209
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Select_Size(%struct.FT_FaceRec_* readonly, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %3, label %30, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 2
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %30, label %9

9:                                                ; preds = %4
  %10 = icmp slt i32 %1, 0
  br i1 %10, label %30, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 7
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, %1
  br i1 %14, label %15, label %30

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %17 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %16, align 8
  %18 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %17, i64 0, i32 1
  %19 = load %struct.FT_Driver_ClassRec_*, %struct.FT_Driver_ClassRec_** %18, align 8
  %20 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %19, i64 0, i32 15
  %21 = load i32 (%struct.FT_SizeRec_*, i64)*, i32 (%struct.FT_SizeRec_*, i64)** %20, align 8
  %22 = icmp eq i32 (%struct.FT_SizeRec_*, i64)* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 22
  %25 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %24, align 8
  %26 = sext i32 %1 to i64
  %27 = tail call i32 %21(%struct.FT_SizeRec_* %25, i64 %26) #16
  br label %30

28:                                               ; preds = %15
  %29 = sext i32 %1 to i64
  tail call void @FT_Select_Metrics(%struct.FT_FaceRec_* nonnull %0, i64 %29)
  br label %30

30:                                               ; preds = %23, %28, %9, %11, %2, %4
  %31 = phi i32 [ 35, %4 ], [ 35, %2 ], [ 6, %11 ], [ 6, %9 ], [ %27, %23 ], [ 0, %28 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Request_Size(%struct.FT_FaceRec_* readonly, %struct.FT_Size_RequestRec_*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %3, label %119, label %4

4:                                                ; preds = %2
  %5 = icmp eq %struct.FT_Size_RequestRec_* %1, null
  br i1 %5, label %119, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp slt i64 %8, 0
  br i1 %9, label %119, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %12, 0
  br i1 %13, label %119, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp ugt i32 %16, 4
  br i1 %17, label %119, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 22
  %20 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %19, align 8
  %21 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %20, i64 0, i32 3
  %22 = load %struct.FT_Size_InternalRec_*, %struct.FT_Size_InternalRec_** %21, align 8
  %23 = getelementptr inbounds %struct.FT_Size_InternalRec_, %struct.FT_Size_InternalRec_* %22, i64 0, i32 2, i32 2
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %25 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %24, align 8
  %26 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %25, i64 0, i32 1
  %27 = load %struct.FT_Driver_ClassRec_*, %struct.FT_Driver_ClassRec_** %26, align 8
  %28 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %27, i64 0, i32 14
  %29 = load i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)*, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)** %28, align 8
  %30 = icmp eq i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %18
  %32 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %19, align 8
  %33 = tail call i32 %29(%struct.FT_SizeRec_* %32, %struct.FT_Size_RequestRec_* nonnull %1) #16
  br label %119

34:                                               ; preds = %18
  %35 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 3
  %38 = icmp eq i64 %37, 2
  br i1 %38, label %39, label %118

39:                                               ; preds = %34
  %40 = load i32, i32* %15, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %119

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 3
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  %46 = load i64, i64* %7, align 8
  br i1 %45, label %52, label %47

47:                                               ; preds = %42
  %48 = zext i32 %44 to i64
  %49 = mul nsw i64 %46, %48
  %50 = add nsw i64 %49, 36
  %51 = sdiv i64 %50, 72
  br label %52

52:                                               ; preds = %47, %42
  %53 = phi i64 [ %51, %47 ], [ %46, %42 ]
  %54 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %1, i64 0, i32 4
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  %57 = load i64, i64* %11, align 8
  br i1 %56, label %63, label %58

58:                                               ; preds = %52
  %59 = zext i32 %55 to i64
  %60 = mul nsw i64 %57, %59
  %61 = add nsw i64 %60, 36
  %62 = sdiv i64 %61, 72
  br label %63

63:                                               ; preds = %58, %52
  %64 = phi i64 [ %62, %58 ], [ %57, %52 ]
  %65 = icmp eq i64 %46, 0
  %66 = icmp eq i64 %57, 0
  %67 = select i1 %66, i64 %53, i64 %64
  %68 = select i1 %65, i64 %67, i64 %53
  %69 = select i1 %65, i64 %64, i64 %67
  %70 = add nsw i64 %68, 32
  %71 = and i64 %70, -64
  %72 = add nsw i64 %69, 32
  %73 = and i64 %72, -64
  %74 = icmp ne i64 %71, 0
  %75 = icmp ne i64 %73, 0
  %76 = and i1 %74, %75
  br i1 %76, label %77, label %119

77:                                               ; preds = %63
  %78 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 7
  %79 = load i32, i32* %78, align 8
  %80 = icmp sgt i32 %79, 0
  br i1 %80, label %81, label %119

81:                                               ; preds = %77
  %82 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 8
  %83 = load %struct.FT_Bitmap_Size_*, %struct.FT_Bitmap_Size_** %82, align 8
  %84 = sext i32 %79 to i64
  br label %85

85:                                               ; preds = %98, %81
  %86 = phi i64 [ 0, %81 ], [ %99, %98 ]
  %87 = getelementptr inbounds %struct.FT_Bitmap_Size_, %struct.FT_Bitmap_Size_* %83, i64 %86, i32 4
  %88 = load i64, i64* %87, align 8
  %89 = add nsw i64 %88, 32
  %90 = and i64 %89, -64
  %91 = icmp eq i64 %73, %90
  br i1 %91, label %92, label %98

92:                                               ; preds = %85
  %93 = getelementptr inbounds %struct.FT_Bitmap_Size_, %struct.FT_Bitmap_Size_* %83, i64 %86, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = add nsw i64 %94, 32
  %96 = and i64 %95, -64
  %97 = icmp eq i64 %71, %96
  br i1 %97, label %101, label %98

98:                                               ; preds = %92, %85
  %99 = add nuw nsw i64 %86, 1
  %100 = icmp eq i64 %99, %84
  br i1 %100, label %119, label %85

101:                                              ; preds = %92
  %102 = trunc i64 %86 to i32
  %103 = icmp sgt i32 %102, -1
  %104 = icmp sgt i32 %79, %102
  %105 = and i1 %103, %104
  br i1 %105, label %106, label %119

106:                                              ; preds = %101
  %107 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %27, i64 0, i32 15
  %108 = load i32 (%struct.FT_SizeRec_*, i64)*, i32 (%struct.FT_SizeRec_*, i64)** %107, align 8
  %109 = icmp eq i32 (%struct.FT_SizeRec_*, i64)* %108, null
  br i1 %109, label %115, label %110

110:                                              ; preds = %106
  %111 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %19, align 8
  %112 = shl i64 %86, 32
  %113 = ashr exact i64 %112, 32
  %114 = tail call i32 %108(%struct.FT_SizeRec_* %111, i64 %113) #16
  br label %119

115:                                              ; preds = %106
  %116 = shl i64 %86, 32
  %117 = ashr exact i64 %116, 32
  tail call void @FT_Select_Metrics(%struct.FT_FaceRec_* nonnull %0, i64 %117) #16
  br label %119

118:                                              ; preds = %34
  tail call void @FT_Request_Metrics(%struct.FT_FaceRec_* nonnull %0, %struct.FT_Size_RequestRec_* nonnull %1)
  br label %119

119:                                              ; preds = %98, %101, %77, %63, %39, %115, %110, %31, %118, %6, %10, %14, %4, %2
  %120 = phi i32 [ 35, %2 ], [ 6, %4 ], [ 6, %14 ], [ 6, %10 ], [ 6, %6 ], [ %33, %31 ], [ 0, %118 ], [ 6, %101 ], [ %114, %110 ], [ 0, %115 ], [ 23, %77 ], [ 23, %63 ], [ 7, %39 ], [ 23, %98 ]
  ret i32 %120
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Set_Char_Size(%struct.FT_FaceRec_* readonly, i64, i64, i32, i32) local_unnamed_addr #0 {
  %6 = alloca %struct.FT_Size_RequestRec_, align 8
  %7 = bitcast %struct.FT_Size_RequestRec_* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #16
  %8 = bitcast %struct.FT_Size_RequestRec_* %6 to i64*
  store i64 -6148914691236517206, i64* %8, align 8
  %9 = icmp eq i64 %1, 0
  %10 = icmp eq i64 %2, 0
  %11 = select i1 %10, i64 %1, i64 %2
  %12 = select i1 %9, i64 %2, i64 %1
  %13 = select i1 %9, i64 %2, i64 %11
  %14 = icmp eq i32 %3, 0
  %15 = icmp eq i32 %4, 0
  %16 = select i1 %15, i32 %3, i32 %4
  %17 = select i1 %14, i32 %4, i32 %3
  %18 = select i1 %14, i32 %4, i32 %16
  %19 = icmp sgt i64 %12, 64
  %20 = select i1 %19, i64 %12, i64 64
  %21 = icmp sgt i64 %13, 64
  %22 = select i1 %21, i64 %13, i64 64
  %23 = icmp eq i32 %17, 0
  %24 = select i1 %23, i32 72, i32 %17
  %25 = select i1 %23, i32 72, i32 %18
  %26 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %6, i64 0, i32 0
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %6, i64 0, i32 1
  store i64 %20, i64* %27, align 8
  %28 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %6, i64 0, i32 2
  store i64 %22, i64* %28, align 8
  %29 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %6, i64 0, i32 3
  store i32 %24, i32* %29, align 8
  %30 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %6, i64 0, i32 4
  store i32 %25, i32* %30, align 4
  %31 = call i32 @FT_Request_Size(%struct.FT_FaceRec_* %0, %struct.FT_Size_RequestRec_* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #16
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Set_Pixel_Sizes(%struct.FT_FaceRec_* readonly, i32, i32) local_unnamed_addr #0 {
  %4 = alloca %struct.FT_Size_RequestRec_, align 8
  %5 = bitcast %struct.FT_Size_RequestRec_* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #16
  %6 = bitcast %struct.FT_Size_RequestRec_* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  %7 = icmp eq i32 %1, 0
  %8 = icmp eq i32 %2, 0
  %9 = select i1 %8, i32 %1, i32 %2
  %10 = select i1 %7, i32 %2, i32 %1
  %11 = select i1 %7, i32 %2, i32 %9
  %12 = icmp eq i32 %10, 0
  %13 = select i1 %12, i32 1, i32 %10
  %14 = icmp eq i32 %11, 0
  %15 = select i1 %14, i32 1, i32 %11
  %16 = icmp ult i32 %13, 65535
  %17 = select i1 %16, i32 %13, i32 65535
  %18 = icmp ult i32 %15, 65535
  %19 = select i1 %18, i32 %15, i32 65535
  %20 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %4, i64 0, i32 0
  store i32 0, i32* %20, align 8
  %21 = shl nuw nsw i32 %17, 6
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %4, i64 0, i32 1
  store i64 %22, i64* %23, align 8
  %24 = shl nuw nsw i32 %19, 6
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %4, i64 0, i32 2
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %4, i64 0, i32 3
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %struct.FT_Size_RequestRec_, %struct.FT_Size_RequestRec_* %4, i64 0, i32 4
  store i32 0, i32* %28, align 4
  %29 = call i32 @FT_Request_Size(%struct.FT_FaceRec_* %0, %struct.FT_Size_RequestRec_* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #16
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_Kerning(%struct.FT_FaceRec_*, i32, i32, i32, %struct.FT_Vector_*) local_unnamed_addr #0 {
  %6 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %6, label %95, label %7

7:                                                ; preds = %5
  %8 = icmp eq %struct.FT_Vector_* %4, null
  br i1 %8, label %95, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %11 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %10, align 8
  %12 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4, i64 0, i32 0
  %13 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4, i64 0, i32 1
  %14 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %11, i64 0, i32 1
  %15 = bitcast %struct.FT_Vector_* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 16, i1 false)
  %16 = load %struct.FT_Driver_ClassRec_*, %struct.FT_Driver_ClassRec_** %14, align 8
  %17 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %16, i64 0, i32 11
  %18 = load i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)** %17, align 8
  %19 = icmp eq i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)* %18, null
  br i1 %19, label %95, label %20

20:                                               ; preds = %9
  %21 = tail call i32 %18(%struct.FT_FaceRec_* nonnull %0, i32 %1, i32 %2, %struct.FT_Vector_* nonnull %4) #16
  %22 = icmp eq i32 %21, 0
  %23 = icmp ne i32 %3, 2
  %24 = and i1 %23, %22
  br i1 %24, label %25, label %95

25:                                               ; preds = %20
  %26 = load i64, i64* %12, align 8
  %27 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 22
  %28 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %27, align 8
  %29 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %28, i64 0, i32 2, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = shl i64 %26, 32
  %32 = ashr exact i64 %31, 32
  %33 = shl i64 %30, 32
  %34 = ashr exact i64 %33, 32
  %35 = mul nsw i64 %34, %32
  %36 = ashr i64 %35, 63
  %37 = add nsw i64 %35, 32768
  %38 = add nsw i64 %37, %36
  %39 = shl i64 %38, 16
  %40 = ashr i64 %39, 32
  store i64 %40, i64* %12, align 8
  %41 = load i64, i64* %13, align 8
  %42 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %27, align 8
  %43 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %42, i64 0, i32 2, i32 3
  %44 = load i64, i64* %43, align 8
  %45 = shl i64 %41, 32
  %46 = ashr exact i64 %45, 32
  %47 = shl i64 %44, 32
  %48 = ashr exact i64 %47, 32
  %49 = mul nsw i64 %48, %46
  %50 = ashr i64 %49, 63
  %51 = add nsw i64 %49, 32768
  %52 = add nsw i64 %51, %50
  %53 = shl i64 %52, 16
  %54 = ashr i64 %53, 32
  store i64 %54, i64* %13, align 8
  %55 = icmp eq i32 %3, 1
  br i1 %55, label %95, label %56

56:                                               ; preds = %25
  %57 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %27, align 8
  %58 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %57, i64 0, i32 2, i32 0
  %59 = load i16, i16* %58, align 8
  %60 = icmp ult i16 %59, 25
  br i1 %60, label %61, label %72

61:                                               ; preds = %56
  %62 = zext i16 %59 to i64
  %63 = icmp slt i64 %39, 0
  %64 = sub nsw i64 0, %40
  %65 = select i1 %63, i64 %64, i64 %40
  %66 = mul nsw i64 %65, %62
  %67 = add nuw nsw i64 %66, 12
  %68 = udiv i64 %67, 25
  %69 = sub nsw i64 0, %68
  %70 = select i1 %63, i64 %69, i64 %68
  store i64 %70, i64* %12, align 8
  %71 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %27, align 8
  br label %72

72:                                               ; preds = %61, %56
  %73 = phi i64 [ %70, %61 ], [ %40, %56 ]
  %74 = phi %struct.FT_SizeRec_* [ %71, %61 ], [ %57, %56 ]
  %75 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %74, i64 0, i32 2, i32 1
  %76 = load i16, i16* %75, align 2
  %77 = icmp ult i16 %76, 25
  br i1 %77, label %78, label %88

78:                                               ; preds = %72
  %79 = zext i16 %76 to i64
  %80 = icmp slt i64 %53, 0
  %81 = sub nsw i64 0, %54
  %82 = select i1 %80, i64 %81, i64 %54
  %83 = mul nsw i64 %82, %79
  %84 = add nuw nsw i64 %83, 12
  %85 = udiv i64 %84, 25
  %86 = sub nsw i64 0, %85
  %87 = select i1 %80, i64 %86, i64 %85
  store i64 %87, i64* %13, align 8
  br label %88

88:                                               ; preds = %78, %72
  %89 = phi i64 [ %87, %78 ], [ %54, %72 ]
  %90 = insertelement <2 x i64> undef, i64 %73, i32 0
  %91 = insertelement <2 x i64> %90, i64 %89, i32 1
  %92 = add nsw <2 x i64> %91, <i64 32, i64 32>
  %93 = and <2 x i64> %92, <i64 -64, i64 -64>
  %94 = bitcast %struct.FT_Vector_* %4 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %94, align 8
  br label %95

95:                                               ; preds = %88, %20, %9, %25, %7, %5
  %96 = phi i32 [ 35, %5 ], [ 6, %7 ], [ 0, %88 ], [ 0, %25 ], [ %21, %20 ], [ 0, %9 ]
  ret i32 %96
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_Track_Kerning(%struct.FT_FaceRec_*, i64, i32, i64*) local_unnamed_addr #0 {
  %5 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %4
  %7 = icmp eq i64* %3, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %10 = bitcast %struct.FT_DriverRec_** %9 to %struct.FT_ModuleRec_**
  %11 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %10, align 8
  %12 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %11, i64 0, i32 0
  %13 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %12, align 8
  %14 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %13, i64 0, i32 8
  %15 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %14, align 8
  %16 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %8
  %18 = tail call i8* %15(%struct.FT_ModuleRec_* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #16
  %19 = icmp eq i8* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %17
  %21 = bitcast i8* %18 to i32 (%struct.FT_FaceRec_*, i64, i32, i64*)**
  %22 = load i32 (%struct.FT_FaceRec_*, i64, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i64, i32, i64*)** %21, align 8
  %23 = tail call i32 %22(%struct.FT_FaceRec_* nonnull %0, i64 %1, i32 %2, i64* nonnull %3) #16
  br label %24

24:                                               ; preds = %8, %17, %6, %4, %20
  %25 = phi i32 [ %23, %20 ], [ 35, %4 ], [ 6, %6 ], [ 7, %17 ], [ 7, %8 ]
  ret i32 %25
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @FT_Select_Charmap(%struct.FT_FaceRec_*, i32) local_unnamed_addr #3 {
  %3 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %3, label %77, label %4

4:                                                ; preds = %2
  switch i32 %1, label %56 [
    i32 0, label %5
    i32 1970170211, label %9
  ]

5:                                                ; preds = %4
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 9
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %77, label %56

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 10
  %11 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %10, align 8
  %12 = icmp eq %struct.FT_CharMapRec_** %11, null
  br i1 %12, label %77, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 9
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %11, i64 %16
  %18 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %17, i64 -1
  %19 = icmp ult %struct.FT_CharMapRec_** %18, %11
  br i1 %19, label %44, label %20

20:                                               ; preds = %13, %41
  %21 = phi %struct.FT_CharMapRec_** [ %42, %41 ], [ %18, %13 ]
  %22 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %21, align 8
  %23 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 1970170211
  br i1 %25, label %26, label %41

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %22, i64 0, i32 2
  %28 = load i16, i16* %27, align 4
  switch i16 %28, label %41 [
    i16 3, label %29
    i16 0, label %33
  ]

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %22, i64 0, i32 3
  %31 = load i16, i16* %30, align 2
  %32 = icmp eq i16 %31, 10
  br i1 %32, label %37, label %41

33:                                               ; preds = %26
  %34 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %22, i64 0, i32 3
  %35 = load i16, i16* %34, align 2
  %36 = icmp eq i16 %35, 4
  br i1 %36, label %37, label %41

37:                                               ; preds = %33, %29
  %38 = ptrtoint %struct.FT_CharMapRec_* %22 to i64
  %39 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 23
  %40 = bitcast %struct.FT_CharMapRec_** %39 to i64*
  store i64 %38, i64* %40, align 8
  br label %77

41:                                               ; preds = %33, %29, %26, %20
  %42 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %21, i64 -1
  %43 = icmp ult %struct.FT_CharMapRec_** %42, %11
  br i1 %43, label %44, label %20

44:                                               ; preds = %41, %13
  br label %45

45:                                               ; preds = %44, %49
  %46 = phi %struct.FT_CharMapRec_** [ %47, %49 ], [ %17, %44 ]
  %47 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %46, i64 -1
  %48 = icmp ult %struct.FT_CharMapRec_** %47, %11
  br i1 %48, label %77, label %49

49:                                               ; preds = %45
  %50 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %47, align 8
  %51 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %50, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 1970170211
  br i1 %53, label %54, label %45

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 23
  store %struct.FT_CharMapRec_* %50, %struct.FT_CharMapRec_** %55, align 8
  br label %77

56:                                               ; preds = %5, %4
  %57 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 10
  %58 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %57, align 8
  %59 = icmp eq %struct.FT_CharMapRec_** %58, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 9
  %62 = load i32, i32* %61, align 8
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %58, i64 %63
  %65 = icmp sgt i32 %62, 0
  br i1 %65, label %68, label %77

66:                                               ; preds = %68
  %67 = icmp ult %struct.FT_CharMapRec_** %74, %64
  br i1 %67, label %68, label %77

68:                                               ; preds = %60, %66
  %69 = phi %struct.FT_CharMapRec_** [ %74, %66 ], [ %58, %60 ]
  %70 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %69, align 8
  %71 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %70, i64 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, %1
  %74 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %69, i64 1
  br i1 %73, label %75, label %66

75:                                               ; preds = %68
  %76 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 23
  store %struct.FT_CharMapRec_* %70, %struct.FT_CharMapRec_** %76, align 8
  br label %77

77:                                               ; preds = %45, %66, %60, %54, %37, %9, %56, %5, %2, %75
  %78 = phi i32 [ 0, %75 ], [ 35, %2 ], [ 6, %5 ], [ 38, %56 ], [ 0, %37 ], [ 0, %54 ], [ 38, %9 ], [ 6, %60 ], [ 6, %66 ], [ 38, %45 ]
  ret i32 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Set_Charmap(%struct.FT_FaceRec_*, %struct.FT_CharMapRec_*) local_unnamed_addr #0 {
  %3 = alloca %struct.TT_CMapInfo_, align 8
  %4 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %4, label %57, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 10
  %7 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %6, align 8
  %8 = icmp ne %struct.FT_CharMapRec_** %7, null
  %9 = icmp ne %struct.FT_CharMapRec_* %1, null
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %57

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 9
  %13 = load i32, i32* %12, align 8
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %7, i64 %14
  %16 = icmp sgt i32 %13, 0
  br i1 %16, label %17, label %57

17:                                               ; preds = %11
  %18 = bitcast %struct.TT_CMapInfo_* %3 to i8*
  %19 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %3, i64 0, i32 1
  %20 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %1, i64 0, i32 0
  br label %21

21:                                               ; preds = %17, %54
  %22 = phi %struct.FT_CharMapRec_** [ %7, %17 ], [ %55, %54 ]
  %23 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %22, align 8
  %24 = icmp eq %struct.FT_CharMapRec_* %23, %1
  br i1 %24, label %25, label %54

25:                                               ; preds = %21
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false) #16
  %26 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %20, align 8
  %27 = icmp eq %struct.FT_FaceRec_* %26, null
  br i1 %27, label %45, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %26, i64 0, i32 24
  %30 = bitcast %struct.FT_DriverRec_** %29 to %struct.FT_ModuleRec_**
  %31 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %30, align 8
  %32 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %31, i64 0, i32 0
  %33 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %32, align 8
  %34 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %33, i64 0, i32 8
  %35 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %34, align 8
  %36 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %35, null
  br i1 %36, label %45, label %37

37:                                               ; preds = %28
  %38 = call i8* %35(%struct.FT_ModuleRec_* %31, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)) #16
  %39 = icmp eq i8* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %37
  %41 = bitcast i8* %38 to i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)**
  %42 = load i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)** %41, align 8
  %43 = call i32 %42(%struct.FT_CharMapRec_* nonnull %1, %struct.TT_CMapInfo_* nonnull %3) #16
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %25, %37, %40, %28
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #16
  br label %49

46:                                               ; preds = %40
  %47 = load i64, i64* %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #16
  %48 = icmp eq i64 %47, 14
  br i1 %48, label %54, label %49

49:                                               ; preds = %46, %45
  %50 = bitcast %struct.FT_CharMapRec_** %22 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 23
  %53 = bitcast %struct.FT_CharMapRec_** %52 to i64*
  store i64 %51, i64* %53, align 8
  br label %57

54:                                               ; preds = %46, %21
  %55 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %22, i64 1
  %56 = icmp ult %struct.FT_CharMapRec_** %55, %15
  br i1 %56, label %21, label %57

57:                                               ; preds = %54, %11, %5, %2, %49
  %58 = phi i32 [ 0, %49 ], [ 35, %2 ], [ 38, %5 ], [ 6, %11 ], [ 6, %54 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @FT_Get_CMap_Format(%struct.FT_CharMapRec_*) local_unnamed_addr #0 {
  %2 = alloca %struct.TT_CMapInfo_, align 8
  %3 = bitcast %struct.TT_CMapInfo_* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #16
  %4 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %2, i64 0, i32 1
  %5 = icmp eq %struct.FT_CharMapRec_* %0, null
  %6 = bitcast %struct.TT_CMapInfo_* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  br i1 %5, label %30, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %0, i64 0, i32 0
  %9 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %8, align 8
  %10 = icmp eq %struct.FT_FaceRec_* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 0, i32 24
  %13 = bitcast %struct.FT_DriverRec_** %12 to %struct.FT_ModuleRec_**
  %14 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %13, align 8
  %15 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %14, i64 0, i32 0
  %16 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %15, align 8
  %17 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %16, i64 0, i32 8
  %18 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %17, align 8
  %19 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %11
  %21 = tail call i8* %18(%struct.FT_ModuleRec_* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)) #16
  %22 = icmp eq i8* %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %20
  %24 = bitcast i8* %21 to i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)**
  %25 = load i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)** %24, align 8
  %26 = call i32 %25(%struct.FT_CharMapRec_* nonnull %0, %struct.TT_CMapInfo_* nonnull %2) #16
  %27 = icmp eq i32 %26, 0
  %28 = load i64, i64* %4, align 8
  %29 = select i1 %27, i64 %28, i64 -1
  br label %30

30:                                               ; preds = %11, %23, %20, %1, %7
  %31 = phi i64 [ -1, %7 ], [ -1, %1 ], [ -1, %20 ], [ %29, %23 ], [ -1, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #16
  ret i64 %31
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @FT_Get_Charmap_Index(%struct.FT_CharMapRec_* readonly) local_unnamed_addr #12 {
  %2 = icmp eq %struct.FT_CharMapRec_* %0, null
  br i1 %2, label %27, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %0, i64 0, i32 0
  %5 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %4, align 8
  %6 = icmp eq %struct.FT_FaceRec_* %5, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 9
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %27

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 10
  %13 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %12, align 8
  %14 = sext i32 %9 to i64
  br label %15

15:                                               ; preds = %11, %21
  %16 = phi i64 [ 0, %11 ], [ %22, %21 ]
  %17 = phi i32 [ 0, %11 ], [ %23, %21 ]
  %18 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %13, i64 %16
  %19 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %18, align 8
  %20 = icmp eq %struct.FT_CharMapRec_* %19, %0
  br i1 %20, label %25, label %21

21:                                               ; preds = %15
  %22 = add nuw nsw i64 %16, 1
  %23 = add nuw nsw i32 %17, 1
  %24 = icmp slt i64 %22, %14
  br i1 %24, label %15, label %27

25:                                               ; preds = %15
  %26 = trunc i64 %16 to i32
  br label %27

27:                                               ; preds = %21, %25, %7, %1, %3
  %28 = phi i32 [ -1, %3 ], [ -1, %1 ], [ 0, %7 ], [ %26, %25 ], [ %23, %21 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_CMap_Done(%struct.FT_CMapRec_*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.FT_CMapRec_* %0, null
  br i1 %2, label %118, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_CMapRec_, %struct.FT_CMapRec_* %0, i64 0, i32 0, i32 0
  %5 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %4, align 8
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 25
  %7 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 9
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %118

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 10
  %13 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %12, align 8
  %14 = sext i32 %9 to i64
  br label %15

15:                                               ; preds = %11, %115
  %16 = phi i64 [ 0, %11 ], [ %116, %115 ]
  %17 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %13, i64 %16
  %18 = bitcast %struct.FT_CharMapRec_** %17 to %struct.FT_CMapRec_**
  %19 = load %struct.FT_CMapRec_*, %struct.FT_CMapRec_** %18, align 8
  %20 = icmp eq %struct.FT_CMapRec_* %19, %0
  br i1 %20, label %21, label %115

21:                                               ; preds = %15
  %22 = trunc i64 %16 to i32
  %23 = add nsw i32 %9, -1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %13, i64 %24
  %26 = bitcast %struct.FT_CharMapRec_** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sext i32 %9 to i64
  %29 = bitcast %struct.FT_CharMapRec_** %13 to i8*
  %30 = or i32 %23, %9
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %118, label %32

32:                                               ; preds = %21
  %33 = icmp eq i32 %23, 0
  br i1 %33, label %34, label %39

34:                                               ; preds = %32
  %35 = icmp eq %struct.FT_CharMapRec_** %13, null
  br i1 %35, label %59, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %7, i64 0, i32 2
  %38 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %37, align 8
  tail call void %38(%struct.FT_MemoryRec_* %7, i8* nonnull %29) #16
  br label %59

39:                                               ; preds = %32
  %40 = icmp sgt i32 %23, 268435455
  br i1 %40, label %118, label %41

41:                                               ; preds = %39
  %42 = icmp eq i32 %9, 0
  br i1 %42, label %43, label %49

43:                                               ; preds = %41
  %44 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %7, i64 0, i32 1
  %45 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %44, align 8
  %46 = shl nsw i64 %24, 3
  %47 = tail call i8* %45(%struct.FT_MemoryRec_* %7, i64 %46) #16
  %48 = icmp eq i8* %47, null
  br i1 %48, label %56, label %59

49:                                               ; preds = %41
  %50 = shl nsw i64 %28, 3
  %51 = shl nsw i64 %24, 3
  %52 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %7, i64 0, i32 3
  %53 = load i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)** %52, align 8
  %54 = tail call i8* %53(%struct.FT_MemoryRec_* %7, i64 %50, i64 %51, i8* %29) #16
  %55 = icmp eq i8* %54, null
  br i1 %55, label %56, label %59

56:                                               ; preds = %43, %49
  %57 = phi i8* [ %29, %49 ], [ null, %43 ]
  %58 = bitcast %struct.FT_CharMapRec_*** %12 to i8**
  store i8* %57, i8** %58, align 8
  br label %118

59:                                               ; preds = %36, %34, %49, %43
  %60 = phi i8* [ %47, %43 ], [ %54, %49 ], [ null, %34 ], [ null, %36 ]
  %61 = bitcast %struct.FT_CharMapRec_*** %12 to i8**
  store i8* %60, i8** %61, align 8
  %62 = add nuw nsw i32 %22, 1
  %63 = load i32, i32* %8, align 8
  %64 = icmp slt i32 %62, %63
  %65 = add nsw i32 %63, -1
  br i1 %64, label %66, label %93

66:                                               ; preds = %59
  %67 = bitcast i8* %60 to %struct.FT_CharMapRec_**
  %68 = and i64 %16, 4294967295
  %69 = add nuw nsw i64 %68, 1
  br label %70

70:                                               ; preds = %90, %66
  %71 = phi %struct.FT_CharMapRec_** [ %67, %66 ], [ %92, %90 ]
  %72 = phi i64 [ %68, %66 ], [ %91, %90 ]
  %73 = phi i64 [ %69, %66 ], [ %85, %90 ]
  %74 = phi i32 [ %65, %66 ], [ %89, %90 ]
  %75 = zext i32 %74 to i64
  %76 = icmp eq i64 %73, %75
  br i1 %76, label %81, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %71, i64 %73
  %79 = bitcast %struct.FT_CharMapRec_** %78 to i64*
  %80 = load i64, i64* %79, align 8
  br label %81

81:                                               ; preds = %70, %77
  %82 = phi i64 [ %80, %77 ], [ %27, %70 ]
  %83 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %71, i64 %72
  %84 = bitcast %struct.FT_CharMapRec_** %83 to i64*
  store i64 %82, i64* %84, align 8
  %85 = add i64 %73, 1
  %86 = load i32, i32* %8, align 8
  %87 = trunc i64 %85 to i32
  %88 = icmp sgt i32 %86, %87
  %89 = add nsw i32 %86, -1
  br i1 %88, label %90, label %93

90:                                               ; preds = %81
  %91 = add nuw nsw i64 %72, 1
  %92 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %12, align 8
  br label %70

93:                                               ; preds = %81, %59
  %94 = phi i32 [ %65, %59 ], [ %89, %81 ]
  store i32 %94, i32* %8, align 8
  %95 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 23
  %96 = bitcast %struct.FT_CharMapRec_** %95 to %struct.FT_CMapRec_**
  %97 = load %struct.FT_CMapRec_*, %struct.FT_CMapRec_** %96, align 8
  %98 = icmp eq %struct.FT_CMapRec_* %97, %0
  br i1 %98, label %99, label %100

99:                                               ; preds = %93
  store %struct.FT_CharMapRec_* null, %struct.FT_CharMapRec_** %95, align 8
  br label %100

100:                                              ; preds = %99, %93
  %101 = getelementptr inbounds %struct.FT_CMapRec_, %struct.FT_CMapRec_* %0, i64 0, i32 1
  %102 = load %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_** %101, align 8
  %103 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %4, align 8
  %104 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %103, i64 0, i32 25
  %105 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %104, align 8
  %106 = getelementptr inbounds %struct.FT_CMap_ClassRec_, %struct.FT_CMap_ClassRec_* %102, i64 0, i32 2
  %107 = bitcast {}** %106 to void (%struct.FT_CMapRec_*)**
  %108 = load void (%struct.FT_CMapRec_*)*, void (%struct.FT_CMapRec_*)** %107, align 8
  %109 = icmp eq void (%struct.FT_CMapRec_*)* %108, null
  br i1 %109, label %111, label %110

110:                                              ; preds = %100
  tail call void %108(%struct.FT_CMapRec_* nonnull %0) #16
  br label %111

111:                                              ; preds = %110, %100
  %112 = bitcast %struct.FT_CMapRec_* %0 to i8*
  %113 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %105, i64 0, i32 2
  %114 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %113, align 8
  tail call void %114(%struct.FT_MemoryRec_* %105, i8* nonnull %112) #16
  br label %118

115:                                              ; preds = %15
  %116 = add nuw nsw i64 %16, 1
  %117 = icmp slt i64 %116, %14
  br i1 %117, label %15, label %118

118:                                              ; preds = %115, %21, %39, %56, %3, %1, %111
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_CMap_New(%struct.FT_CMap_ClassRec_*, i8*, %struct.FT_CharMapRec_* readonly, %struct.FT_CMapRec_**) local_unnamed_addr #0 {
  %5 = icmp ne %struct.FT_CMap_ClassRec_* %0, null
  %6 = icmp ne %struct.FT_CharMapRec_* %2, null
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %120

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %2, i64 0, i32 0
  %10 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %9, align 8
  %11 = icmp eq %struct.FT_FaceRec_* %10, null
  br i1 %11, label %120, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %10, i64 0, i32 25
  %14 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %13, align 8
  %15 = getelementptr inbounds %struct.FT_CMap_ClassRec_, %struct.FT_CMap_ClassRec_* %0, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp sgt i64 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  %19 = icmp eq i64 %16, 0
  br i1 %19, label %26, label %98

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %14, i64 0, i32 1
  %22 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %21, align 8
  %23 = tail call i8* %22(%struct.FT_MemoryRec_* %14, i64 %16) #16
  %24 = icmp eq i8* %23, null
  br i1 %24, label %98, label %25

25:                                               ; preds = %20
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %23, i8 0, i64 %16, i1 false) #16
  br label %26

26:                                               ; preds = %25, %18
  %27 = phi i8* [ %23, %25 ], [ null, %18 ]
  %28 = bitcast i8* %27 to %struct.FT_CMapRec_*
  %29 = bitcast %struct.FT_CharMapRec_* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %29, i64 16, i1 false)
  %30 = getelementptr inbounds i8, i8* %27, i64 16
  %31 = bitcast i8* %30 to %struct.FT_CMap_ClassRec_**
  store %struct.FT_CMap_ClassRec_* %0, %struct.FT_CMap_ClassRec_** %31, align 8
  %32 = getelementptr inbounds %struct.FT_CMap_ClassRec_, %struct.FT_CMap_ClassRec_* %0, i64 0, i32 1
  %33 = load i32 (%struct.FT_CMapRec_*, i8*)*, i32 (%struct.FT_CMapRec_*, i8*)** %32, align 8
  %34 = icmp eq i32 (%struct.FT_CMapRec_*, i8*)* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %26
  %36 = tail call i32 %33(%struct.FT_CMapRec_* %28, i8* %1) #16
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %103

38:                                               ; preds = %35, %26
  %39 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %10, i64 0, i32 9
  %40 = load i32, i32* %39, align 8
  %41 = sext i32 %40 to i64
  %42 = add nsw i32 %40, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %10, i64 0, i32 10
  %45 = bitcast %struct.FT_CharMapRec_*** %44 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = or i32 %42, %40
  %48 = icmp slt i32 %47, 0
  br i1 %48, label %103, label %49

49:                                               ; preds = %38
  %50 = icmp eq i32 %42, 0
  br i1 %50, label %51, label %56

51:                                               ; preds = %49
  %52 = icmp eq i8* %46, null
  br i1 %52, label %87, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %14, i64 0, i32 2
  %55 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %54, align 8
  tail call void %55(%struct.FT_MemoryRec_* %14, i8* nonnull %46) #16
  br label %87

56:                                               ; preds = %49
  %57 = icmp sgt i32 %40, 268435454
  br i1 %57, label %103, label %58

58:                                               ; preds = %56
  %59 = icmp eq i32 %40, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %14, i64 0, i32 1
  %62 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %61, align 8
  %63 = shl nsw i64 %43, 3
  %64 = tail call i8* %62(%struct.FT_MemoryRec_* %14, i64 %63) #16
  %65 = icmp eq i8* %64, null
  %66 = select i1 %65, i32 64, i32 0
  br label %76

67:                                               ; preds = %58
  %68 = shl nsw i64 %41, 3
  %69 = shl nsw i64 %43, 3
  %70 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %14, i64 0, i32 3
  %71 = load i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)** %70, align 8
  %72 = tail call i8* %71(%struct.FT_MemoryRec_* %14, i64 %68, i64 %69, i8* %46) #16
  %73 = icmp eq i8* %72, null
  %74 = select i1 %73, i32 64, i32 0
  %75 = select i1 %73, i8* %46, i8* %72
  br label %76

76:                                               ; preds = %67, %60
  %77 = phi i32 [ %74, %67 ], [ %66, %60 ]
  %78 = phi i8* [ %75, %67 ], [ %64, %60 ]
  %79 = icmp eq i32 %77, 0
  %80 = icmp ne i8* %78, null
  %81 = and i1 %79, %80
  br i1 %81, label %82, label %89

82:                                               ; preds = %76
  %83 = shl nsw i64 %41, 3
  %84 = getelementptr inbounds i8, i8* %78, i64 %83
  %85 = sub nsw i64 %43, %41
  %86 = shl nsw i64 %85, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %84, i8 0, i64 %86, i1 false) #16
  br label %87

87:                                               ; preds = %82, %53, %51
  %88 = phi i8* [ null, %51 ], [ null, %53 ], [ %78, %82 ]
  store i8* %88, i8** %45, align 8
  br label %90

89:                                               ; preds = %76
  store i8* %78, i8** %45, align 8
  br i1 %79, label %90, label %103

90:                                               ; preds = %87, %89
  %91 = phi i8* [ %88, %87 ], [ %78, %89 ]
  %92 = bitcast i8* %91 to %struct.FT_CharMapRec_**
  %93 = load i32, i32* %39, align 8
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %39, align 8
  %95 = sext i32 %93 to i64
  %96 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %92, i64 %95
  %97 = bitcast %struct.FT_CharMapRec_** %96 to i8**
  store i8* %27, i8** %97, align 8
  br label %98

98:                                               ; preds = %20, %18, %117, %115, %90
  %99 = phi i32 [ 0, %90 ], [ %104, %115 ], [ %104, %117 ], [ 6, %18 ], [ 64, %20 ]
  %100 = phi %struct.FT_CMapRec_* [ %28, %90 ], [ null, %115 ], [ null, %117 ], [ null, %18 ], [ null, %20 ]
  %101 = icmp eq %struct.FT_CMapRec_** %3, null
  br i1 %101, label %120, label %102

102:                                              ; preds = %98
  store %struct.FT_CMapRec_* %100, %struct.FT_CMapRec_** %3, align 8
  br label %120

103:                                              ; preds = %38, %56, %35, %89
  %104 = phi i32 [ %77, %89 ], [ %36, %35 ], [ 6, %38 ], [ 10, %56 ]
  %105 = load %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_** %31, align 8
  %106 = bitcast i8* %27 to %struct.FT_FaceRec_**
  %107 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %106, align 8
  %108 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %107, i64 0, i32 25
  %109 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %108, align 8
  %110 = getelementptr inbounds %struct.FT_CMap_ClassRec_, %struct.FT_CMap_ClassRec_* %105, i64 0, i32 2
  %111 = bitcast {}** %110 to void (%struct.FT_CMapRec_*)**
  %112 = load void (%struct.FT_CMapRec_*)*, void (%struct.FT_CMapRec_*)** %111, align 8
  %113 = icmp eq void (%struct.FT_CMapRec_*)* %112, null
  br i1 %113, label %115, label %114

114:                                              ; preds = %103
  tail call void %112(%struct.FT_CMapRec_* %28) #16
  br label %115

115:                                              ; preds = %114, %103
  %116 = icmp eq i8* %27, null
  br i1 %116, label %98, label %117

117:                                              ; preds = %115
  %118 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %109, i64 0, i32 2
  %119 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %118, align 8
  tail call void %119(%struct.FT_MemoryRec_* %109, i8* nonnull %27) #16
  br label %98

120:                                              ; preds = %102, %98, %4, %8
  %121 = phi i32 [ 6, %8 ], [ 6, %4 ], [ %99, %98 ], [ %99, %102 ]
  ret i32 %121
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @FT_Get_First_Char(%struct.FT_FaceRec_* readonly, i32*) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %4, label %49, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 23
  %7 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %6, align 8
  %8 = icmp eq %struct.FT_CharMapRec_* %7, null
  br i1 %8, label %49, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 4
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %49, label %13

13:                                               ; preds = %9
  %14 = bitcast %struct.FT_CharMapRec_* %7 to %struct.FT_CMapRec_*
  %15 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %7, i64 1
  %16 = bitcast %struct.FT_CharMapRec_* %15 to %struct.FT_CMap_ClassRec_**
  %17 = load %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_** %16, align 8
  %18 = getelementptr inbounds %struct.FT_CMap_ClassRec_, %struct.FT_CMap_ClassRec_* %17, i64 0, i32 3
  %19 = load i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32)** %18, align 8
  %20 = tail call i32 %19(%struct.FT_CMapRec_* nonnull %14, i32 0) #16
  %21 = load i64, i64* %10, align 8
  %22 = trunc i64 %21 to i32
  %23 = icmp uge i32 %20, %22
  %24 = icmp eq i32 %20, 0
  %25 = or i1 %24, %23
  br i1 %25, label %26, label %49

26:                                               ; preds = %13
  %27 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %6, align 8
  %28 = icmp eq %struct.FT_CharMapRec_* %27, null
  %29 = bitcast %struct.FT_CharMapRec_* %27 to %struct.FT_CMapRec_*
  %30 = icmp eq i64 %21, 0
  %31 = or i1 %28, %30
  br i1 %31, label %49, label %32

32:                                               ; preds = %26
  %33 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #16
  store i32 0, i32* %3, align 4
  %34 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %27, i64 1
  %35 = bitcast %struct.FT_CharMapRec_* %34 to %struct.FT_CMap_ClassRec_**
  br label %36

36:                                               ; preds = %36, %32
  %37 = load %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_** %35, align 8
  %38 = getelementptr inbounds %struct.FT_CMap_ClassRec_, %struct.FT_CMap_ClassRec_* %37, i64 0, i32 4
  %39 = load i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, i32*)** %38, align 8
  %40 = call i32 %39(%struct.FT_CMapRec_* nonnull %29, i32* nonnull %3) #16
  %41 = load i64, i64* %10, align 8
  %42 = trunc i64 %41 to i32
  %43 = icmp ult i32 %40, %42
  br i1 %43, label %44, label %36

44:                                               ; preds = %36
  %45 = icmp eq i32 %40, 0
  %46 = load i32, i32* %3, align 4
  %47 = select i1 %45, i32 0, i32 %46
  %48 = zext i32 %47 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #16
  br label %49

49:                                               ; preds = %44, %26, %9, %5, %2, %13
  %50 = phi i32 [ 0, %2 ], [ 0, %5 ], [ 0, %9 ], [ %20, %13 ], [ %40, %44 ], [ 0, %26 ]
  %51 = phi i64 [ 0, %2 ], [ 0, %5 ], [ 0, %9 ], [ 0, %13 ], [ %48, %44 ], [ 0, %26 ]
  %52 = icmp eq i32* %1, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  store i32 %50, i32* %1, align 4
  br label %54

54:                                               ; preds = %49, %53
  ret i64 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @FT_Get_Next_Char(%struct.FT_FaceRec_* readonly, i64, i32*) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %5, label %33, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 23
  %8 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %7, align 8
  %9 = icmp eq %struct.FT_CharMapRec_* %8, null
  %10 = bitcast %struct.FT_CharMapRec_* %8 to %struct.FT_CMapRec_*
  br i1 %9, label %33, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %33, label %15

15:                                               ; preds = %11
  %16 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #16
  %17 = trunc i64 %1 to i32
  store i32 %17, i32* %4, align 4
  %18 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %8, i64 1
  %19 = bitcast %struct.FT_CharMapRec_* %18 to %struct.FT_CMap_ClassRec_**
  br label %20

20:                                               ; preds = %20, %15
  %21 = load %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_** %19, align 8
  %22 = getelementptr inbounds %struct.FT_CMap_ClassRec_, %struct.FT_CMap_ClassRec_* %21, i64 0, i32 4
  %23 = load i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, i32*)** %22, align 8
  %24 = call i32 %23(%struct.FT_CMapRec_* nonnull %10, i32* nonnull %4) #16
  %25 = load i64, i64* %12, align 8
  %26 = trunc i64 %25 to i32
  %27 = icmp ult i32 %24, %26
  br i1 %27, label %28, label %20

28:                                               ; preds = %20
  %29 = icmp eq i32 %24, 0
  %30 = load i32, i32* %4, align 4
  %31 = select i1 %29, i32 0, i32 %30
  %32 = zext i32 %31 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #16
  br label %33

33:                                               ; preds = %11, %6, %3, %28
  %34 = phi i64 [ %32, %28 ], [ 0, %11 ], [ 0, %6 ], [ 0, %3 ]
  %35 = phi i32 [ %24, %28 ], [ 0, %11 ], [ 0, %6 ], [ 0, %3 ]
  %36 = icmp eq i32* %2, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  store i32 %35, i32* %2, align 4
  br label %38

38:                                               ; preds = %33, %37
  ret i64 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Face_Properties(%struct.FT_FaceRec_* nocapture readonly, i32, %struct.FT_Parameter_* readonly) local_unnamed_addr #0 {
  %4 = icmp eq i32 %1, 0
  %5 = icmp ne %struct.FT_Parameter_* %2, null
  %6 = or i1 %4, %5
  %7 = xor i1 %5, true
  %8 = or i1 %4, %7
  %9 = select i1 %6, i32 0, i32 6
  br i1 %8, label %61, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  br label %12

12:                                               ; preds = %10, %57
  %13 = phi %struct.FT_Parameter_* [ %2, %10 ], [ %58, %57 ]
  %14 = phi i32 [ %1, %10 ], [ %59, %57 ]
  %15 = getelementptr inbounds %struct.FT_Parameter_, %struct.FT_Parameter_* %13, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  switch i64 %16, label %61 [
    i64 1684107883, label %17
    i64 1818453094, label %31
    i64 1936024932, label %40
  ]

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.FT_Parameter_, %struct.FT_Parameter_* %13, i64 0, i32 1
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %17
  %22 = load i8, i8* %19, align 1
  %23 = icmp eq i8 %22, 1
  %24 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %11, align 8
  %25 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %24, i64 0, i32 5
  br i1 %23, label %26, label %27

26:                                               ; preds = %21
  store i8 0, i8* %25, align 8
  br label %57

27:                                               ; preds = %21
  store i8 1, i8* %25, align 8
  br label %57

28:                                               ; preds = %17
  %29 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %11, align 8
  %30 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %29, i64 0, i32 5
  store i8 -1, i8* %30, align 8
  br label %57

31:                                               ; preds = %12
  %32 = getelementptr inbounds %struct.FT_Parameter_, %struct.FT_Parameter_* %13, i64 0, i32 1
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %57, label %35

35:                                               ; preds = %31
  %36 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %11, align 8
  %37 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %36, i64 0, i32 7, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* nonnull align 1 %33, i64 5, i1 false)
  %38 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %11, align 8
  %39 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %38, i64 0, i32 8
  store void (%struct.FT_Bitmap_*, i8*)* @ft_lcd_filter_fir, void (%struct.FT_Bitmap_*, i8*)** %39, align 8
  br label %57

40:                                               ; preds = %12
  %41 = getelementptr inbounds %struct.FT_Parameter_, %struct.FT_Parameter_* %13, i64 0, i32 1
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %40
  %45 = bitcast i8* %42 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %11, align 8
  %48 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %47, i64 0, i32 6
  store i32 %46, i32* %48, align 4
  %49 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %11, align 8
  %50 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %49, i64 0, i32 6
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %44
  store i32 0, i32* %50, align 4
  br label %57

54:                                               ; preds = %40
  %55 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %11, align 8
  %56 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %55, i64 0, i32 6
  store i32 -1, i32* %56, align 4
  br label %57

57:                                               ; preds = %26, %27, %28, %44, %53, %54, %35, %31
  %58 = getelementptr inbounds %struct.FT_Parameter_, %struct.FT_Parameter_* %13, i64 1
  %59 = add i32 %14, -1
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %12

61:                                               ; preds = %57, %12, %3
  %62 = phi i32 [ %9, %3 ], [ 0, %57 ], [ 6, %12 ]
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Face_GetCharVariantIndex(%struct.FT_FaceRec_* readonly, i64, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.TT_CMapInfo_, align 8
  %5 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %5, label %82, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 23
  %8 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %7, align 8
  %9 = icmp eq %struct.FT_CharMapRec_* %8, null
  br i1 %9, label %82, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 1970170211
  br i1 %13, label %14, label %82

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 10
  %16 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %15, align 8
  %17 = icmp eq %struct.FT_CharMapRec_** %16, null
  br i1 %17, label %82, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 9
  %20 = load i32, i32* %19, align 8
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %16, i64 %21
  %23 = icmp sgt i32 %20, 0
  br i1 %23, label %24, label %82

24:                                               ; preds = %18
  %25 = bitcast %struct.TT_CMapInfo_* %4 to i8*
  %26 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %4, i64 0, i32 1
  br label %27

27:                                               ; preds = %64, %24
  %28 = phi %struct.FT_CharMapRec_** [ %16, %24 ], [ %65, %64 ]
  %29 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %28, align 8
  %30 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %29, i64 0, i32 2
  %31 = load i16, i16* %30, align 4
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %33, label %64

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %29, i64 0, i32 3
  %35 = load i16, i16* %34, align 2
  %36 = icmp eq i16 %35, 5
  br i1 %36, label %37, label %64

37:                                               ; preds = %33
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #16
  %38 = icmp eq %struct.FT_CharMapRec_* %29, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false) #16
  br i1 %38, label %60, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %29, i64 0, i32 0
  %41 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %40, align 8
  %42 = icmp eq %struct.FT_FaceRec_* %41, null
  br i1 %42, label %60, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %41, i64 0, i32 24
  %45 = bitcast %struct.FT_DriverRec_** %44 to %struct.FT_ModuleRec_**
  %46 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %45, align 8
  %47 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %46, i64 0, i32 0
  %48 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %47, align 8
  %49 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %48, i64 0, i32 8
  %50 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %49, align 8
  %51 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %50, null
  br i1 %51, label %60, label %52

52:                                               ; preds = %43
  %53 = call i8* %50(%struct.FT_ModuleRec_* %46, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)) #16
  %54 = icmp eq i8* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %52
  %56 = bitcast i8* %53 to i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)**
  %57 = load i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)** %56, align 8
  %58 = call i32 %57(%struct.FT_CharMapRec_* nonnull %29, %struct.TT_CMapInfo_* nonnull %4) #16
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %55, %52, %43, %39, %37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #16
  br label %64

61:                                               ; preds = %55
  %62 = load i64, i64* %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #16
  %63 = icmp eq i64 %62, 14
  br i1 %63, label %67, label %64

64:                                               ; preds = %61, %60, %33, %27
  %65 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %28, i64 1
  %66 = icmp ult %struct.FT_CharMapRec_** %65, %22
  br i1 %66, label %27, label %82

67:                                               ; preds = %61
  %68 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %28, align 8
  %69 = icmp eq %struct.FT_CharMapRec_* %68, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %67
  %71 = bitcast %struct.FT_CharMapRec_** %7 to %struct.FT_CMapRec_**
  %72 = load %struct.FT_CMapRec_*, %struct.FT_CMapRec_** %71, align 8
  %73 = bitcast %struct.FT_CharMapRec_* %68 to %struct.FT_CMapRec_*
  %74 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %68, i64 1
  %75 = bitcast %struct.FT_CharMapRec_* %74 to %struct.FT_CMap_ClassRec_**
  %76 = load %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_** %75, align 8
  %77 = getelementptr inbounds %struct.FT_CMap_ClassRec_, %struct.FT_CMap_ClassRec_* %76, i64 0, i32 5
  %78 = load i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)** %77, align 8
  %79 = trunc i64 %1 to i32
  %80 = trunc i64 %2 to i32
  %81 = call i32 %78(%struct.FT_CMapRec_* nonnull %73, %struct.FT_CMapRec_* %72, i32 %79, i32 %80) #16
  br label %82

82:                                               ; preds = %64, %18, %14, %70, %67, %6, %3, %10
  %83 = phi i32 [ 0, %10 ], [ 0, %6 ], [ 0, %3 ], [ %81, %70 ], [ 0, %67 ], [ 0, %14 ], [ 0, %18 ], [ 0, %64 ]
  ret i32 %83
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Face_GetCharVariantIsDefault(%struct.FT_FaceRec_* readonly, i64, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.TT_CMapInfo_, align 8
  %5 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %5, label %72, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 10
  %8 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %7, align 8
  %9 = icmp eq %struct.FT_CharMapRec_** %8, null
  br i1 %9, label %72, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 9
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %8, i64 %13
  %15 = icmp sgt i32 %12, 0
  br i1 %15, label %16, label %72

16:                                               ; preds = %10
  %17 = bitcast %struct.TT_CMapInfo_* %4 to i8*
  %18 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %4, i64 0, i32 1
  br label %19

19:                                               ; preds = %56, %16
  %20 = phi %struct.FT_CharMapRec_** [ %8, %16 ], [ %57, %56 ]
  %21 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %20, align 8
  %22 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %21, i64 0, i32 2
  %23 = load i16, i16* %22, align 4
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %56

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %21, i64 0, i32 3
  %27 = load i16, i16* %26, align 2
  %28 = icmp eq i16 %27, 5
  br i1 %28, label %29, label %56

29:                                               ; preds = %25
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #16
  %30 = icmp eq %struct.FT_CharMapRec_* %21, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false) #16
  br i1 %30, label %52, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %21, i64 0, i32 0
  %33 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %32, align 8
  %34 = icmp eq %struct.FT_FaceRec_* %33, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %33, i64 0, i32 24
  %37 = bitcast %struct.FT_DriverRec_** %36 to %struct.FT_ModuleRec_**
  %38 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %37, align 8
  %39 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %38, i64 0, i32 0
  %40 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %39, align 8
  %41 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %40, i64 0, i32 8
  %42 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %41, align 8
  %43 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %42, null
  br i1 %43, label %52, label %44

44:                                               ; preds = %35
  %45 = call i8* %42(%struct.FT_ModuleRec_* %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)) #16
  %46 = icmp eq i8* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %44
  %48 = bitcast i8* %45 to i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)**
  %49 = load i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)** %48, align 8
  %50 = call i32 %49(%struct.FT_CharMapRec_* nonnull %21, %struct.TT_CMapInfo_* nonnull %4) #16
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %47, %44, %35, %31, %29
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #16
  br label %56

53:                                               ; preds = %47
  %54 = load i64, i64* %18, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #16
  %55 = icmp eq i64 %54, 14
  br i1 %55, label %59, label %56

56:                                               ; preds = %53, %52, %25, %19
  %57 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %20, i64 1
  %58 = icmp ult %struct.FT_CharMapRec_** %57, %14
  br i1 %58, label %19, label %72

59:                                               ; preds = %53
  %60 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %20, align 8
  %61 = icmp eq %struct.FT_CharMapRec_* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %59
  %63 = bitcast %struct.FT_CharMapRec_* %60 to %struct.FT_CMapRec_*
  %64 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %60, i64 1
  %65 = bitcast %struct.FT_CharMapRec_* %64 to %struct.FT_CMap_ClassRec_**
  %66 = load %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_** %65, align 8
  %67 = getelementptr inbounds %struct.FT_CMap_ClassRec_, %struct.FT_CMap_ClassRec_* %66, i64 0, i32 6
  %68 = load i32 (%struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)** %67, align 8
  %69 = trunc i64 %1 to i32
  %70 = trunc i64 %2 to i32
  %71 = call i32 %68(%struct.FT_CMapRec_* nonnull %63, i32 %69, i32 %70) #16
  br label %72

72:                                               ; preds = %56, %10, %6, %62, %59, %3
  %73 = phi i32 [ -1, %3 ], [ %71, %62 ], [ -1, %59 ], [ -1, %6 ], [ -1, %10 ], [ -1, %56 ]
  ret i32 %73
}

; Function Attrs: nounwind ssp uwtable
define hidden i32* @FT_Face_GetVariantSelectors(%struct.FT_FaceRec_* readonly) local_unnamed_addr #0 {
  %2 = alloca %struct.TT_CMapInfo_, align 8
  %3 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %3, label %70, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 10
  %6 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %5, align 8
  %7 = icmp eq %struct.FT_CharMapRec_** %6, null
  br i1 %7, label %70, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %6, i64 %11
  %13 = icmp sgt i32 %10, 0
  br i1 %13, label %14, label %70

14:                                               ; preds = %8
  %15 = bitcast %struct.TT_CMapInfo_* %2 to i8*
  %16 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %2, i64 0, i32 1
  br label %17

17:                                               ; preds = %54, %14
  %18 = phi %struct.FT_CharMapRec_** [ %6, %14 ], [ %55, %54 ]
  %19 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %18, align 8
  %20 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %19, i64 0, i32 2
  %21 = load i16, i16* %20, align 4
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %23, label %54

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %19, i64 0, i32 3
  %25 = load i16, i16* %24, align 2
  %26 = icmp eq i16 %25, 5
  br i1 %26, label %27, label %54

27:                                               ; preds = %23
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #16
  %28 = icmp eq %struct.FT_CharMapRec_* %19, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false) #16
  br i1 %28, label %50, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %19, i64 0, i32 0
  %31 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %30, align 8
  %32 = icmp eq %struct.FT_FaceRec_* %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %31, i64 0, i32 24
  %35 = bitcast %struct.FT_DriverRec_** %34 to %struct.FT_ModuleRec_**
  %36 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %35, align 8
  %37 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %36, i64 0, i32 0
  %38 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %37, align 8
  %39 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %38, i64 0, i32 8
  %40 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %39, align 8
  %41 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %40, null
  br i1 %41, label %50, label %42

42:                                               ; preds = %33
  %43 = call i8* %40(%struct.FT_ModuleRec_* %36, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)) #16
  %44 = icmp eq i8* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %42
  %46 = bitcast i8* %43 to i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)**
  %47 = load i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)** %46, align 8
  %48 = call i32 %47(%struct.FT_CharMapRec_* nonnull %19, %struct.TT_CMapInfo_* nonnull %2) #16
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %45, %42, %33, %29, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #16
  br label %54

51:                                               ; preds = %45
  %52 = load i64, i64* %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #16
  %53 = icmp eq i64 %52, 14
  br i1 %53, label %57, label %54

54:                                               ; preds = %51, %50, %23, %17
  %55 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %18, i64 1
  %56 = icmp ult %struct.FT_CharMapRec_** %55, %12
  br i1 %56, label %17, label %70

57:                                               ; preds = %51
  %58 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %18, align 8
  %59 = icmp eq %struct.FT_CharMapRec_* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %57
  %61 = bitcast %struct.FT_CharMapRec_* %58 to %struct.FT_CMapRec_*
  %62 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 25
  %63 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %62, align 8
  %64 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %58, i64 1
  %65 = bitcast %struct.FT_CharMapRec_* %64 to %struct.FT_CMap_ClassRec_**
  %66 = load %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_** %65, align 8
  %67 = getelementptr inbounds %struct.FT_CMap_ClassRec_, %struct.FT_CMap_ClassRec_* %66, i64 0, i32 7
  %68 = load i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)** %67, align 8
  %69 = call i32* %68(%struct.FT_CMapRec_* nonnull %61, %struct.FT_MemoryRec_* %63) #16
  br label %70

70:                                               ; preds = %54, %8, %4, %60, %57, %1
  %71 = phi i32* [ null, %1 ], [ %69, %60 ], [ null, %57 ], [ null, %4 ], [ null, %8 ], [ null, %54 ]
  ret i32* %71
}

; Function Attrs: nounwind ssp uwtable
define hidden i32* @FT_Face_GetVariantsOfChar(%struct.FT_FaceRec_* readonly, i64) local_unnamed_addr #0 {
  %3 = alloca %struct.TT_CMapInfo_, align 8
  %4 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %4, label %72, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 10
  %7 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %6, align 8
  %8 = icmp eq %struct.FT_CharMapRec_** %7, null
  br i1 %8, label %72, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 9
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %7, i64 %12
  %14 = icmp sgt i32 %11, 0
  br i1 %14, label %15, label %72

15:                                               ; preds = %9
  %16 = bitcast %struct.TT_CMapInfo_* %3 to i8*
  %17 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %3, i64 0, i32 1
  br label %18

18:                                               ; preds = %55, %15
  %19 = phi %struct.FT_CharMapRec_** [ %7, %15 ], [ %56, %55 ]
  %20 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %19, align 8
  %21 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 4
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %24, label %55

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %20, i64 0, i32 3
  %26 = load i16, i16* %25, align 2
  %27 = icmp eq i16 %26, 5
  br i1 %27, label %28, label %55

28:                                               ; preds = %24
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #16
  %29 = icmp eq %struct.FT_CharMapRec_* %20, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #16
  br i1 %29, label %51, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %20, i64 0, i32 0
  %32 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %31, align 8
  %33 = icmp eq %struct.FT_FaceRec_* %32, null
  br i1 %33, label %51, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %32, i64 0, i32 24
  %36 = bitcast %struct.FT_DriverRec_** %35 to %struct.FT_ModuleRec_**
  %37 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %36, align 8
  %38 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %37, i64 0, i32 0
  %39 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %38, align 8
  %40 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %39, i64 0, i32 8
  %41 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %40, align 8
  %42 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %34
  %44 = call i8* %41(%struct.FT_ModuleRec_* %37, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)) #16
  %45 = icmp eq i8* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %43
  %47 = bitcast i8* %44 to i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)**
  %48 = load i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)** %47, align 8
  %49 = call i32 %48(%struct.FT_CharMapRec_* nonnull %20, %struct.TT_CMapInfo_* nonnull %3) #16
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %46, %43, %34, %30, %28
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #16
  br label %55

52:                                               ; preds = %46
  %53 = load i64, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #16
  %54 = icmp eq i64 %53, 14
  br i1 %54, label %58, label %55

55:                                               ; preds = %52, %51, %24, %18
  %56 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %19, i64 1
  %57 = icmp ult %struct.FT_CharMapRec_** %56, %13
  br i1 %57, label %18, label %72

58:                                               ; preds = %52
  %59 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %19, align 8
  %60 = icmp eq %struct.FT_CharMapRec_* %59, null
  br i1 %60, label %72, label %61

61:                                               ; preds = %58
  %62 = bitcast %struct.FT_CharMapRec_* %59 to %struct.FT_CMapRec_*
  %63 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 25
  %64 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %63, align 8
  %65 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %59, i64 1
  %66 = bitcast %struct.FT_CharMapRec_* %65 to %struct.FT_CMap_ClassRec_**
  %67 = load %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_** %66, align 8
  %68 = getelementptr inbounds %struct.FT_CMap_ClassRec_, %struct.FT_CMap_ClassRec_* %67, i64 0, i32 8
  %69 = load i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)** %68, align 8
  %70 = trunc i64 %1 to i32
  %71 = call i32* %69(%struct.FT_CMapRec_* nonnull %62, %struct.FT_MemoryRec_* %64, i32 %70) #16
  br label %72

72:                                               ; preds = %55, %9, %5, %61, %58, %2
  %73 = phi i32* [ null, %2 ], [ %71, %61 ], [ null, %58 ], [ null, %5 ], [ null, %9 ], [ null, %55 ]
  ret i32* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden i32* @FT_Face_GetCharsOfVariant(%struct.FT_FaceRec_* readonly, i64) local_unnamed_addr #0 {
  %3 = alloca %struct.TT_CMapInfo_, align 8
  %4 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %4, label %72, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 10
  %7 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %6, align 8
  %8 = icmp eq %struct.FT_CharMapRec_** %7, null
  br i1 %8, label %72, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 9
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %7, i64 %12
  %14 = icmp sgt i32 %11, 0
  br i1 %14, label %15, label %72

15:                                               ; preds = %9
  %16 = bitcast %struct.TT_CMapInfo_* %3 to i8*
  %17 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %3, i64 0, i32 1
  br label %18

18:                                               ; preds = %55, %15
  %19 = phi %struct.FT_CharMapRec_** [ %7, %15 ], [ %56, %55 ]
  %20 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %19, align 8
  %21 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 4
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %24, label %55

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %20, i64 0, i32 3
  %26 = load i16, i16* %25, align 2
  %27 = icmp eq i16 %26, 5
  br i1 %27, label %28, label %55

28:                                               ; preds = %24
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #16
  %29 = icmp eq %struct.FT_CharMapRec_* %20, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #16
  br i1 %29, label %51, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %20, i64 0, i32 0
  %32 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %31, align 8
  %33 = icmp eq %struct.FT_FaceRec_* %32, null
  br i1 %33, label %51, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %32, i64 0, i32 24
  %36 = bitcast %struct.FT_DriverRec_** %35 to %struct.FT_ModuleRec_**
  %37 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %36, align 8
  %38 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %37, i64 0, i32 0
  %39 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %38, align 8
  %40 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %39, i64 0, i32 8
  %41 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %40, align 8
  %42 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %34
  %44 = call i8* %41(%struct.FT_ModuleRec_* %37, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)) #16
  %45 = icmp eq i8* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %43
  %47 = bitcast i8* %44 to i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)**
  %48 = load i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)** %47, align 8
  %49 = call i32 %48(%struct.FT_CharMapRec_* nonnull %20, %struct.TT_CMapInfo_* nonnull %3) #16
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %46, %43, %34, %30, %28
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #16
  br label %55

52:                                               ; preds = %46
  %53 = load i64, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #16
  %54 = icmp eq i64 %53, 14
  br i1 %54, label %58, label %55

55:                                               ; preds = %52, %51, %24, %18
  %56 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %19, i64 1
  %57 = icmp ult %struct.FT_CharMapRec_** %56, %13
  br i1 %57, label %18, label %72

58:                                               ; preds = %52
  %59 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %19, align 8
  %60 = icmp eq %struct.FT_CharMapRec_* %59, null
  br i1 %60, label %72, label %61

61:                                               ; preds = %58
  %62 = bitcast %struct.FT_CharMapRec_* %59 to %struct.FT_CMapRec_*
  %63 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 25
  %64 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %63, align 8
  %65 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %59, i64 1
  %66 = bitcast %struct.FT_CharMapRec_* %65 to %struct.FT_CMap_ClassRec_**
  %67 = load %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_** %66, align 8
  %68 = getelementptr inbounds %struct.FT_CMap_ClassRec_, %struct.FT_CMap_ClassRec_* %67, i64 0, i32 9
  %69 = load i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)** %68, align 8
  %70 = trunc i64 %1 to i32
  %71 = call i32* %69(%struct.FT_CMapRec_* nonnull %62, %struct.FT_MemoryRec_* %64, i32 %70) #16
  br label %72

72:                                               ; preds = %55, %9, %5, %61, %58, %2
  %73 = phi i32* [ null, %2 ], [ %71, %61 ], [ null, %58 ], [ null, %5 ], [ null, %9 ], [ null, %55 ]
  ret i32* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_Name_Index(%struct.FT_FaceRec_*, i8*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %3, label %45, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 512
  %8 = icmp ne i64 %7, 0
  %9 = icmp ne i8* %1, null
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %45

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %13 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %12, align 8
  %14 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %13, i64 0, i32 3, i32 3
  %15 = load i8*, i8** %14, align 8
  %16 = ptrtoint i8* %15 to i64
  switch i64 %16, label %35 [
    i64 -2, label %45
    i64 0, label %17
  ]

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %19 = bitcast %struct.FT_DriverRec_** %18 to %struct.FT_ModuleRec_**
  %20 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %19, align 8
  %21 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %20, i64 0, i32 0
  %22 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %21, align 8
  %23 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %22, i64 0, i32 8
  %24 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %23, align 8
  %25 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %17
  %27 = tail call i8* %24(%struct.FT_ModuleRec_* %20, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0)) #16
  %28 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %12, align 8
  br label %29

29:                                               ; preds = %17, %26
  %30 = phi %struct.FT_Face_InternalRec_* [ %28, %26 ], [ %13, %17 ]
  %31 = phi i8* [ %27, %26 ], [ null, %17 ]
  %32 = icmp eq i8* %31, null
  %33 = select i1 %32, i8* inttoptr (i64 -2 to i8*), i8* %31
  %34 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %30, i64 0, i32 3, i32 3
  store i8* %33, i8** %34, align 8
  br label %35

35:                                               ; preds = %11, %29
  %36 = phi i8* [ %31, %29 ], [ %15, %11 ]
  %37 = icmp eq i8* %36, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds i8, i8* %36, i64 8
  %40 = bitcast i8* %39 to i32 (%struct.FT_FaceRec_*, i8*)**
  %41 = load i32 (%struct.FT_FaceRec_*, i8*)*, i32 (%struct.FT_FaceRec_*, i8*)** %40, align 8
  %42 = icmp eq i32 (%struct.FT_FaceRec_*, i8*)* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = tail call i32 %41(%struct.FT_FaceRec_* nonnull %0, i8* nonnull %1) #16
  br label %45

45:                                               ; preds = %11, %43, %35, %38, %2, %4
  %46 = phi i32 [ 0, %4 ], [ 0, %2 ], [ %44, %43 ], [ 0, %38 ], [ 0, %35 ], [ 0, %11 ]
  ret i32 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_Glyph_Name(%struct.FT_FaceRec_*, i32, i8*, i32) local_unnamed_addr #0 {
  %5 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %5, label %53, label %6

6:                                                ; preds = %4
  %7 = icmp eq i8* %2, null
  %8 = icmp eq i32 %3, 0
  %9 = or i1 %7, %8
  br i1 %9, label %53, label %10

10:                                               ; preds = %6
  store i8 0, i8* %2, align 1
  %11 = zext i32 %1 to i64
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = icmp sgt i64 %13, %11
  br i1 %14, label %15, label %53

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 512
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %53, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %22 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %21, align 8
  %23 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %22, i64 0, i32 3, i32 3
  %24 = load i8*, i8** %23, align 8
  %25 = ptrtoint i8* %24 to i64
  switch i64 %25, label %44 [
    i64 -2, label %53
    i64 0, label %26
  ]

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %28 = bitcast %struct.FT_DriverRec_** %27 to %struct.FT_ModuleRec_**
  %29 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %28, align 8
  %30 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %29, i64 0, i32 0
  %31 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %30, align 8
  %32 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %31, i64 0, i32 8
  %33 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %32, align 8
  %34 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %26
  %36 = tail call i8* %33(%struct.FT_ModuleRec_* %29, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0)) #16
  %37 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %21, align 8
  br label %38

38:                                               ; preds = %26, %35
  %39 = phi %struct.FT_Face_InternalRec_* [ %37, %35 ], [ %22, %26 ]
  %40 = phi i8* [ %36, %35 ], [ null, %26 ]
  %41 = icmp eq i8* %40, null
  %42 = select i1 %41, i8* inttoptr (i64 -2 to i8*), i8* %40
  %43 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %39, i64 0, i32 3, i32 3
  store i8* %42, i8** %43, align 8
  br label %44

44:                                               ; preds = %20, %38
  %45 = phi i8* [ %40, %38 ], [ %24, %20 ]
  %46 = icmp eq i8* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %44
  %48 = bitcast i8* %45 to i32 (%struct.FT_FaceRec_*, i32, i8*, i32)**
  %49 = load i32 (%struct.FT_FaceRec_*, i32, i8*, i32)*, i32 (%struct.FT_FaceRec_*, i32, i8*, i32)** %48, align 8
  %50 = icmp eq i32 (%struct.FT_FaceRec_*, i32, i8*, i32)* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = tail call i32 %49(%struct.FT_FaceRec_* nonnull %0, i32 %1, i8* nonnull %2, i32 %3) #16
  br label %53

53:                                               ; preds = %20, %51, %47, %44, %15, %10, %6, %4
  %54 = phi i32 [ 35, %4 ], [ 6, %6 ], [ 16, %10 ], [ 6, %15 ], [ %52, %51 ], [ 6, %47 ], [ 6, %44 ], [ 6, %20 ]
  ret i32 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @FT_Get_Postscript_Name(%struct.FT_FaceRec_*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %2, label %36, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 30
  %5 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %4, align 8
  %6 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %5, i64 0, i32 3, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = ptrtoint i8* %7 to i64
  switch i64 %8, label %27 [
    i64 -2, label %36
    i64 0, label %9
  ]

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %11 = bitcast %struct.FT_DriverRec_** %10 to %struct.FT_ModuleRec_**
  %12 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %11, align 8
  %13 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %12, i64 0, i32 0
  %14 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %13, align 8
  %15 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %14, i64 0, i32 8
  %16 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %15, align 8
  %17 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %9
  %19 = tail call i8* %16(%struct.FT_ModuleRec_* %12, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)) #16
  %20 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %4, align 8
  br label %21

21:                                               ; preds = %9, %18
  %22 = phi %struct.FT_Face_InternalRec_* [ %20, %18 ], [ %5, %9 ]
  %23 = phi i8* [ %19, %18 ], [ null, %9 ]
  %24 = icmp eq i8* %23, null
  %25 = select i1 %24, i8* inttoptr (i64 -2 to i8*), i8* %23
  %26 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %22, i64 0, i32 3, i32 0
  store i8* %25, i8** %26, align 8
  br label %27

27:                                               ; preds = %3, %21
  %28 = phi i8* [ %23, %21 ], [ %7, %3 ]
  %29 = icmp eq i8* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %27
  %31 = bitcast i8* %28 to i8* (%struct.FT_FaceRec_*)**
  %32 = load i8* (%struct.FT_FaceRec_*)*, i8* (%struct.FT_FaceRec_*)** %31, align 8
  %33 = icmp eq i8* (%struct.FT_FaceRec_*)* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = tail call i8* %32(%struct.FT_FaceRec_* nonnull %0) #16
  br label %36

36:                                               ; preds = %3, %34, %27, %30, %1
  %37 = phi i8* [ null, %1 ], [ %35, %34 ], [ null, %30 ], [ null, %27 ], [ null, %3 ]
  ret i8* %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @FT_Get_Sfnt_Table(%struct.FT_FaceRec_*, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %11 = bitcast %struct.FT_DriverRec_** %10 to %struct.FT_ModuleRec_**
  %12 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %11, align 8
  %13 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %12, i64 0, i32 0
  %14 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %13, align 8
  %15 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %14, i64 0, i32 8
  %16 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %15, align 8
  %17 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %9
  %19 = tail call i8* %16(%struct.FT_ModuleRec_* %12, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0)) #16
  %20 = icmp eq i8* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds i8, i8* %19, i64 8
  %23 = bitcast i8* %22 to i8* (%struct.FT_FaceRec_*, i32)**
  %24 = load i8* (%struct.FT_FaceRec_*, i32)*, i8* (%struct.FT_FaceRec_*, i32)** %23, align 8
  %25 = tail call i8* %24(%struct.FT_FaceRec_* nonnull %0, i32 %1) #16
  br label %26

26:                                               ; preds = %9, %18, %4, %2, %21
  %27 = phi i8* [ %25, %21 ], [ null, %18 ], [ null, %4 ], [ null, %2 ], [ null, %9 ]
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Load_Sfnt_Table(%struct.FT_FaceRec_*, i64, i64, i8*, i64*) local_unnamed_addr #0 {
  %6 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %28, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %14 = bitcast %struct.FT_DriverRec_** %13 to %struct.FT_ModuleRec_**
  %15 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %14, align 8
  %16 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %15, i64 0, i32 0
  %17 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %16, align 8
  %18 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %17, i64 0, i32 8
  %19 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %18, align 8
  %20 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %12
  %22 = tail call i8* %19(%struct.FT_ModuleRec_* %15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0)) #16
  %23 = icmp eq i8* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = bitcast i8* %22 to i32 (%struct.FT_FaceRec_*, i64, i64, i8*, i64*)**
  %26 = load i32 (%struct.FT_FaceRec_*, i64, i64, i8*, i64*)*, i32 (%struct.FT_FaceRec_*, i64, i64, i8*, i64*)** %25, align 8
  %27 = tail call i32 %26(%struct.FT_FaceRec_* nonnull %0, i64 %1, i64 %2, i8* %3, i64* %4) #16
  br label %28

28:                                               ; preds = %12, %21, %5, %7, %24
  %29 = phi i32 [ %27, %24 ], [ 35, %7 ], [ 35, %5 ], [ 7, %21 ], [ 7, %12 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Sfnt_Table_Info(%struct.FT_FaceRec_*, i32, i64*, i64*) local_unnamed_addr #0 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  store i64 -6148914691236517206, i64* %5, align 8
  %7 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %30, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %15 = bitcast %struct.FT_DriverRec_** %14 to %struct.FT_ModuleRec_**
  %16 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %15, align 8
  %17 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %16, i64 0, i32 0
  %18 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %17, align 8
  %19 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %18, i64 0, i32 8
  %20 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %19, align 8
  %21 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %20, null
  br i1 %21, label %30, label %22

22:                                               ; preds = %13
  %23 = tail call i8* %20(%struct.FT_ModuleRec_* %16, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0)) #16
  %24 = icmp eq i8* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds i8, i8* %23, i64 16
  %27 = bitcast i8* %26 to i32 (%struct.FT_FaceRec_*, i32, i64*, i64*, i64*)**
  %28 = load i32 (%struct.FT_FaceRec_*, i32, i64*, i64*, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*, i64*, i64*)** %27, align 8
  %29 = call i32 %28(%struct.FT_FaceRec_* nonnull %0, i32 %1, i64* %2, i64* nonnull %5, i64* %3) #16
  br label %30

30:                                               ; preds = %13, %22, %4, %8, %25
  %31 = phi i32 [ %29, %25 ], [ 35, %8 ], [ 35, %4 ], [ 7, %22 ], [ 7, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @FT_Get_CMap_Language_ID(%struct.FT_CharMapRec_*) local_unnamed_addr #0 {
  %2 = alloca %struct.TT_CMapInfo_, align 8
  %3 = bitcast %struct.TT_CMapInfo_* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #16
  %4 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %2, i64 0, i32 0
  %5 = icmp eq %struct.FT_CharMapRec_* %0, null
  %6 = bitcast %struct.TT_CMapInfo_* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  br i1 %5, label %30, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %0, i64 0, i32 0
  %9 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %8, align 8
  %10 = icmp eq %struct.FT_FaceRec_* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 0, i32 24
  %13 = bitcast %struct.FT_DriverRec_** %12 to %struct.FT_ModuleRec_**
  %14 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %13, align 8
  %15 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %14, i64 0, i32 0
  %16 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %15, align 8
  %17 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %16, i64 0, i32 8
  %18 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %17, align 8
  %19 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %11
  %21 = tail call i8* %18(%struct.FT_ModuleRec_* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)) #16
  %22 = icmp eq i8* %21, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %20
  %24 = bitcast i8* %21 to i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)**
  %25 = load i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)** %24, align 8
  %26 = call i32 %25(%struct.FT_CharMapRec_* nonnull %0, %struct.TT_CMapInfo_* nonnull %2) #16
  %27 = icmp eq i32 %26, 0
  %28 = load i64, i64* %4, align 8
  %29 = select i1 %27, i64 %28, i64 0
  br label %30

30:                                               ; preds = %11, %23, %20, %1, %7
  %31 = phi i64 [ 0, %7 ], [ 0, %1 ], [ 0, %20 ], [ %29, %23 ], [ 0, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #16
  ret i64 %31
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @FT_Activate_Size(%struct.FT_SizeRec_*) local_unnamed_addr #3 {
  %2 = icmp eq %struct.FT_SizeRec_* %0, null
  br i1 %2, label %13, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 0
  %5 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %4, align 8
  %6 = icmp eq %struct.FT_FaceRec_* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 24
  %9 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %8, align 8
  %10 = icmp eq %struct.FT_DriverRec_* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 22
  store %struct.FT_SizeRec_* %0, %struct.FT_SizeRec_** %12, align 8
  br label %13

13:                                               ; preds = %3, %7, %1, %11
  %14 = phi i32 [ 0, %11 ], [ 36, %1 ], [ 35, %7 ], [ 35, %3 ]
  ret i32 %14
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct.FT_RendererRec_* @FT_Lookup_Renderer(%struct.FT_LibraryRec_* readonly, i32, %struct.FT_ListNodeRec_**) local_unnamed_addr #3 {
  %4 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 6, i32 0
  %7 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %6, align 8
  %8 = icmp ne %struct.FT_ListNodeRec_** %2, null
  br i1 %8, label %9, label %17

9:                                                ; preds = %5
  %10 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %2, align 8
  %11 = icmp eq %struct.FT_ListNodeRec_* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %10, i64 0, i32 1
  %14 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %13, align 8
  br label %15

15:                                               ; preds = %9, %12
  %16 = phi %struct.FT_ListNodeRec_* [ %14, %12 ], [ %7, %9 ]
  store %struct.FT_ListNodeRec_* null, %struct.FT_ListNodeRec_** %2, align 8
  br label %17

17:                                               ; preds = %15, %5
  %18 = phi %struct.FT_ListNodeRec_* [ %16, %15 ], [ %7, %5 ]
  %19 = icmp eq %struct.FT_ListNodeRec_* %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %17, %30
  %21 = phi %struct.FT_ListNodeRec_* [ %32, %30 ], [ %18, %17 ]
  %22 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %21, i64 0, i32 2
  %23 = bitcast i8** %22 to %struct.FT_RendererRec_**
  %24 = load %struct.FT_RendererRec_*, %struct.FT_RendererRec_** %23, align 8
  %25 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %24, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, %1
  br i1 %27, label %28, label %30

28:                                               ; preds = %20
  br i1 %8, label %29, label %34

29:                                               ; preds = %28
  store %struct.FT_ListNodeRec_* %21, %struct.FT_ListNodeRec_** %2, align 8
  br label %34

30:                                               ; preds = %20
  %31 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %21, i64 0, i32 1
  %32 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %31, align 8
  %33 = icmp eq %struct.FT_ListNodeRec_* %32, null
  br i1 %33, label %34, label %20

34:                                               ; preds = %30, %17, %28, %29, %3
  %35 = phi %struct.FT_RendererRec_* [ null, %3 ], [ %24, %29 ], [ %24, %28 ], [ null, %17 ], [ null, %30 ]
  ret %struct.FT_RendererRec_* %35
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.FT_RendererRec_* @FT_Get_Renderer(%struct.FT_LibraryRec_* readonly, i32) local_unnamed_addr #12 {
  %3 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 6, i32 0
  %6 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %5, align 8
  %7 = icmp eq %struct.FT_ListNodeRec_* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %4, %16
  %9 = phi %struct.FT_ListNodeRec_* [ %18, %16 ], [ %6, %4 ]
  %10 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %9, i64 0, i32 2
  %11 = bitcast i8** %10 to %struct.FT_RendererRec_**
  %12 = load %struct.FT_RendererRec_*, %struct.FT_RendererRec_** %11, align 8
  %13 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %12, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, %1
  br i1 %15, label %20, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %9, i64 0, i32 1
  %18 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %17, align 8
  %19 = icmp eq %struct.FT_ListNodeRec_* %18, null
  br i1 %19, label %20, label %8

20:                                               ; preds = %8, %16, %2, %4
  %21 = phi %struct.FT_RendererRec_* [ null, %2 ], [ null, %4 ], [ %12, %8 ], [ null, %16 ]
  ret %struct.FT_RendererRec_* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Set_Renderer(%struct.FT_LibraryRec_*, %struct.FT_RendererRec_*, i32, %struct.FT_Parameter_* readonly) local_unnamed_addr #0 {
  %5 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %5, label %70, label %6

6:                                                ; preds = %4
  %7 = icmp eq %struct.FT_RendererRec_* %1, null
  br i1 %7, label %70, label %8

8:                                                ; preds = %6
  %9 = icmp eq i32 %2, 0
  %10 = icmp ne %struct.FT_Parameter_* %3, null
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %70

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 6
  %14 = bitcast %struct.FT_RendererRec_* %1 to i8*
  %15 = icmp eq %struct.FT_ListRec_* %13, null
  br i1 %15, label %70, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.FT_ListRec_, %struct.FT_ListRec_* %13, i64 0, i32 0
  %18 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %17, align 8
  %19 = icmp eq %struct.FT_ListNodeRec_* %18, null
  br i1 %19, label %70, label %20

20:                                               ; preds = %16, %25
  %21 = phi %struct.FT_ListNodeRec_* [ %27, %25 ], [ %18, %16 ]
  %22 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %21, i64 0, i32 2
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, %14
  br i1 %24, label %29, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %21, i64 0, i32 1
  %27 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %26, align 8
  %28 = icmp eq %struct.FT_ListNodeRec_* %27, null
  br i1 %28, label %70, label %20

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %21, i64 0, i32 0
  %31 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %30, align 8
  %32 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %21, i64 0, i32 1
  %33 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %32, align 8
  %34 = icmp eq %struct.FT_ListNodeRec_* %31, null
  br i1 %34, label %46, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %31, i64 0, i32 1
  store %struct.FT_ListNodeRec_* %33, %struct.FT_ListNodeRec_** %36, align 8
  %37 = icmp eq %struct.FT_ListNodeRec_* %33, null
  %38 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 6, i32 1
  %39 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %33, i64 0, i32 0
  %40 = select i1 %37, %struct.FT_ListNodeRec_** %38, %struct.FT_ListNodeRec_** %39
  store %struct.FT_ListNodeRec_* %31, %struct.FT_ListNodeRec_** %40, align 8
  store %struct.FT_ListNodeRec_* null, %struct.FT_ListNodeRec_** %30, align 8
  %41 = bitcast %struct.FT_ListRec_* %13 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %struct.FT_ListNodeRec_** %32 to i64*
  store i64 %42, i64* %43, align 8
  %44 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %17, align 8
  %45 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %44, i64 0, i32 0
  store %struct.FT_ListNodeRec_* %21, %struct.FT_ListNodeRec_** %45, align 8
  store %struct.FT_ListNodeRec_* %21, %struct.FT_ListNodeRec_** %17, align 8
  br label %46

46:                                               ; preds = %29, %35
  %47 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %1, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 1869968492
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 7
  store %struct.FT_RendererRec_* %1, %struct.FT_RendererRec_** %51, align 8
  br label %52

52:                                               ; preds = %50, %46
  %53 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %1, i64 0, i32 1
  %54 = load %struct.FT_Renderer_Class_*, %struct.FT_Renderer_Class_** %53, align 8
  %55 = getelementptr inbounds %struct.FT_Renderer_Class_, %struct.FT_Renderer_Class_* %54, i64 0, i32 5
  %56 = load i32 (%struct.FT_RendererRec_*, i64, i8*)*, i32 (%struct.FT_RendererRec_*, i64, i8*)** %55, align 8
  br i1 %9, label %70, label %57

57:                                               ; preds = %52, %66
  %58 = phi %struct.FT_Parameter_* [ %67, %66 ], [ %3, %52 ]
  %59 = phi i32 [ %68, %66 ], [ %2, %52 ]
  %60 = getelementptr inbounds %struct.FT_Parameter_, %struct.FT_Parameter_* %58, i64 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %struct.FT_Parameter_, %struct.FT_Parameter_* %58, i64 0, i32 1
  %63 = load i8*, i8** %62, align 8
  %64 = tail call i32 %56(%struct.FT_RendererRec_* nonnull %1, i64 %61, i8* %63) #16
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %57
  %67 = getelementptr inbounds %struct.FT_Parameter_, %struct.FT_Parameter_* %58, i64 1
  %68 = add i32 %59, -1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %57

70:                                               ; preds = %25, %66, %57, %52, %16, %12, %8, %6, %4
  %71 = phi i32 [ 33, %4 ], [ 6, %6 ], [ 6, %8 ], [ 6, %12 ], [ 6, %16 ], [ 0, %52 ], [ 0, %66 ], [ %64, %57 ], [ 6, %25 ]
  ret i32 %71
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @FT_List_Up(%struct.FT_ListRec_*, %struct.FT_ListNodeRec_*) local_unnamed_addr #3 {
  %3 = icmp ne %struct.FT_ListRec_* %0, null
  %4 = icmp ne %struct.FT_ListNodeRec_* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %24

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %1, i64 0, i32 0
  %8 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %1, i64 0, i32 1
  %10 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %9, align 8
  %11 = icmp eq %struct.FT_ListNodeRec_* %8, null
  br i1 %11, label %24, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %8, i64 0, i32 1
  store %struct.FT_ListNodeRec_* %10, %struct.FT_ListNodeRec_** %13, align 8
  %14 = icmp eq %struct.FT_ListNodeRec_* %10, null
  %15 = getelementptr inbounds %struct.FT_ListRec_, %struct.FT_ListRec_* %0, i64 0, i32 1
  %16 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %10, i64 0, i32 0
  %17 = select i1 %14, %struct.FT_ListNodeRec_** %15, %struct.FT_ListNodeRec_** %16
  store %struct.FT_ListNodeRec_* %8, %struct.FT_ListNodeRec_** %17, align 8
  store %struct.FT_ListNodeRec_* null, %struct.FT_ListNodeRec_** %7, align 8
  %18 = getelementptr inbounds %struct.FT_ListRec_, %struct.FT_ListRec_* %0, i64 0, i32 0
  %19 = bitcast %struct.FT_ListRec_* %0 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %struct.FT_ListNodeRec_** %9 to i64*
  store i64 %20, i64* %21, align 8
  %22 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %18, align 8
  %23 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %22, i64 0, i32 0
  store %struct.FT_ListNodeRec_* %1, %struct.FT_ListNodeRec_** %23, align 8
  store %struct.FT_ListNodeRec_* %1, %struct.FT_ListNodeRec_** %18, align 8
  br label %24

24:                                               ; preds = %6, %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Render_Glyph_Internal(%struct.FT_LibraryRec_* readonly, %struct.FT_GlyphSlotRec_*, i32) local_unnamed_addr #0 {
  %4 = alloca %struct.FT_LayerIterator_, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 1
  %8 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 21
  %10 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %9, align 8
  %11 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %10, i64 0, i32 6
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1048576
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %88, label %15

15:                                               ; preds = %3
  %16 = bitcast %struct.FT_LayerIterator_* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #16
  %17 = getelementptr inbounds %struct.FT_LayerIterator_, %struct.FT_LayerIterator_* %4, i64 0, i32 2
  %18 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 3
  %19 = bitcast %struct.FT_LayerIterator_* %4 to i64*
  store i64 -6148914691236517206, i64* %19, align 8
  %20 = load i32, i32* %18, align 8
  %21 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #16
  store i32 -1431655766, i32* %5, align 4
  %22 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #16
  store i32 -1431655766, i32* %6, align 4
  store i8* null, i8** %17, align 8
  %23 = icmp eq %struct.FT_FaceRec_* %8, null
  br i1 %23, label %87, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %8, i64 0, i32 4
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = icmp ult i32 %20, %27
  br i1 %28, label %29, label %87

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %8, i64 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %87, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %8, i64 3, i32 13
  %36 = bitcast i16* %35 to %struct.SFNT_Interface_**
  %37 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %36, align 8
  %38 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %37, i64 0, i32 33
  %39 = load i8 (%struct.TT_FaceRec_*, i32, i32*, i32*, %struct.FT_LayerIterator_*)*, i8 (%struct.TT_FaceRec_*, i32, i32*, i32*, %struct.FT_LayerIterator_*)** %38, align 8
  %40 = icmp eq i8 (%struct.TT_FaceRec_*, i32, i32*, i32*, %struct.FT_LayerIterator_*)* %39, null
  br i1 %40, label %87, label %41

41:                                               ; preds = %34
  %42 = bitcast %struct.FT_FaceRec_* %8 to %struct.TT_FaceRec_*
  %43 = call zeroext i8 %39(%struct.TT_FaceRec_* nonnull %42, i32 %20, i32* nonnull %5, i32* nonnull %6, %struct.FT_LayerIterator_* nonnull %4) #16
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %87, label %45

45:                                               ; preds = %41
  %46 = call i32 @FT_New_GlyphSlot(%struct.FT_FaceRec_* nonnull %8, %struct.FT_GlyphSlotRec_** null)
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %85

48:                                               ; preds = %45
  %49 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %36, align 8
  %50 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %49, i64 0, i32 38
  %51 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %8, i64 0, i32 21
  br label %52

52:                                               ; preds = %80, %48
  %53 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %9, align 8
  %54 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %53, i64 0, i32 6
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -1048581
  %57 = or i32 %56, 4
  %58 = load i32, i32* %5, align 4
  %59 = call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* nonnull %8, i32 %58, i32 %57)
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %83

61:                                               ; preds = %52
  %62 = load i32 (%struct.TT_FaceRec_*, i32, %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_*)*, i32 (%struct.TT_FaceRec_*, i32, %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_*)** %50, align 8
  %63 = load i32, i32* %6, align 4
  %64 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %51, align 8
  %65 = call i32 %62(%struct.TT_FaceRec_* nonnull %42, i32 %63, %struct.FT_GlyphSlotRec_* %1, %struct.FT_GlyphSlotRec_* %64) #16
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %83

67:                                               ; preds = %61
  %68 = load i64, i64* %25, align 8
  %69 = trunc i64 %68 to i32
  %70 = icmp ult i32 %20, %69
  br i1 %70, label %71, label %159

71:                                               ; preds = %67
  %72 = load i64, i64* %30, align 8
  %73 = and i64 %72, 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %159, label %75

75:                                               ; preds = %71
  %76 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %36, align 8
  %77 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %76, i64 0, i32 33
  %78 = load i8 (%struct.TT_FaceRec_*, i32, i32*, i32*, %struct.FT_LayerIterator_*)*, i8 (%struct.TT_FaceRec_*, i32, i32*, i32*, %struct.FT_LayerIterator_*)** %77, align 8
  %79 = icmp eq i8 (%struct.TT_FaceRec_*, i32, i32*, i32*, %struct.FT_LayerIterator_*)* %78, null
  br i1 %79, label %159, label %80

80:                                               ; preds = %75
  %81 = call zeroext i8 %78(%struct.TT_FaceRec_* nonnull %42, i32 %20, i32* nonnull %5, i32* nonnull %6, %struct.FT_LayerIterator_* nonnull %4) #16
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %159, label %52

83:                                               ; preds = %52, %61
  %84 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %51, align 8
  call void @FT_Done_GlyphSlot(%struct.FT_GlyphSlotRec_* %84)
  br label %85

85:                                               ; preds = %83, %45
  %86 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 9
  store i32 1869968492, i32* %86, align 8
  br label %87

87:                                               ; preds = %15, %34, %29, %24, %85, %41
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #16
  br label %88

88:                                               ; preds = %87, %3
  %89 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 9
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 1869968492
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 7
  %94 = load %struct.FT_RendererRec_*, %struct.FT_RendererRec_** %93, align 8
  %95 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 6, i32 0
  %96 = bitcast %struct.FT_ListNodeRec_** %95 to i64*
  %97 = load i64, i64* %96, align 8
  br label %118

98:                                               ; preds = %88
  %99 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %99, label %162, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 6, i32 0
  %102 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %101, align 8
  %103 = icmp eq %struct.FT_ListNodeRec_* %102, null
  br i1 %103, label %162, label %104

104:                                              ; preds = %100, %114
  %105 = phi %struct.FT_ListNodeRec_* [ %116, %114 ], [ %102, %100 ]
  %106 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %105, i64 0, i32 2
  %107 = bitcast i8** %106 to %struct.FT_RendererRec_**
  %108 = load %struct.FT_RendererRec_*, %struct.FT_RendererRec_** %107, align 8
  %109 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %108, i64 0, i32 2
  %110 = load i32, i32* %109, align 8
  %111 = icmp eq i32 %110, %90
  br i1 %111, label %112, label %114

112:                                              ; preds = %104
  %113 = ptrtoint %struct.FT_ListNodeRec_* %105 to i64
  br label %118

114:                                              ; preds = %104
  %115 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %105, i64 0, i32 1
  %116 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %115, align 8
  %117 = icmp eq %struct.FT_ListNodeRec_* %116, null
  br i1 %117, label %162, label %104

118:                                              ; preds = %112, %92
  %119 = phi i64 [ %97, %92 ], [ %113, %112 ]
  %120 = phi %struct.FT_RendererRec_* [ %94, %92 ], [ %108, %112 ]
  %121 = icmp eq %struct.FT_RendererRec_* %120, null
  br i1 %121, label %162, label %122

122:                                              ; preds = %118
  %123 = icmp eq %struct.FT_LibraryRec_* %0, null
  %124 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 6, i32 0
  br label %125

125:                                              ; preds = %122, %156
  %126 = phi %struct.FT_RendererRec_* [ %120, %122 ], [ %148, %156 ]
  %127 = phi i64 [ %119, %122 ], [ %157, %156 ]
  %128 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %126, i64 0, i32 6
  %129 = load i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)** %128, align 8
  %130 = call i32 %129(%struct.FT_RendererRec_* nonnull %126, %struct.FT_GlyphSlotRec_* %1, i32 %2, %struct.FT_Vector_* null) #16
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %162, label %132

132:                                              ; preds = %125
  %133 = and i32 %130, 255
  %134 = icmp eq i32 %133, 19
  br i1 %134, label %135, label %162

135:                                              ; preds = %132
  %136 = load i32, i32* %89, align 8
  br i1 %123, label %162, label %137

137:                                              ; preds = %135
  %138 = icmp eq i64 %127, 0
  %139 = inttoptr i64 %127 to %struct.FT_ListNodeRec_*
  %140 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %139, i64 0, i32 1
  %141 = select i1 %138, %struct.FT_ListNodeRec_** %124, %struct.FT_ListNodeRec_** %140
  %142 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %141, align 8
  %143 = icmp eq %struct.FT_ListNodeRec_* %142, null
  br i1 %143, label %162, label %144

144:                                              ; preds = %137, %152
  %145 = phi %struct.FT_ListNodeRec_* [ %154, %152 ], [ %142, %137 ]
  %146 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %145, i64 0, i32 2
  %147 = bitcast i8** %146 to %struct.FT_RendererRec_**
  %148 = load %struct.FT_RendererRec_*, %struct.FT_RendererRec_** %147, align 8
  %149 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %148, i64 0, i32 2
  %150 = load i32, i32* %149, align 8
  %151 = icmp eq i32 %150, %136
  br i1 %151, label %156, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %145, i64 0, i32 1
  %154 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %153, align 8
  %155 = icmp eq %struct.FT_ListNodeRec_* %154, null
  br i1 %155, label %162, label %144

156:                                              ; preds = %144
  %157 = ptrtoint %struct.FT_ListNodeRec_* %145 to i64
  %158 = icmp eq %struct.FT_RendererRec_* %148, null
  br i1 %158, label %162, label %125

159:                                              ; preds = %80, %67, %71, %75
  %160 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %1, i64 0, i32 9
  store i32 1651078259, i32* %160, align 8
  %161 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %51, align 8
  call void @FT_Done_GlyphSlot(%struct.FT_GlyphSlotRec_* %161)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #16
  br label %162

162:                                              ; preds = %114, %137, %135, %132, %125, %156, %152, %100, %98, %118, %159
  %163 = phi i32 [ 0, %159 ], [ 7, %118 ], [ 7, %98 ], [ 7, %100 ], [ %130, %152 ], [ %130, %137 ], [ %130, %135 ], [ %130, %132 ], [ 0, %125 ], [ %130, %156 ], [ 7, %114 ]
  ret i32 %163
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @FT_Get_Color_Glyph_Layer(%struct.FT_FaceRec_*, i32, i32*, i32*, %struct.FT_LayerIterator_*) local_unnamed_addr #0 {
  %6 = icmp ne %struct.FT_FaceRec_* %0, null
  %7 = icmp ne i32* %2, null
  %8 = and i1 %6, %7
  %9 = icmp ne i32* %3, null
  %10 = and i1 %8, %9
  %11 = icmp ne %struct.FT_LayerIterator_* %4, null
  %12 = and i1 %10, %11
  br i1 %12, label %13, label %33

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = trunc i64 %15 to i32
  %17 = icmp ugt i32 %16, %1
  br i1 %17, label %18, label %33

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 13
  %25 = bitcast i16* %24 to %struct.SFNT_Interface_**
  %26 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %25, align 8
  %27 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %26, i64 0, i32 33
  %28 = load i8 (%struct.TT_FaceRec_*, i32, i32*, i32*, %struct.FT_LayerIterator_*)*, i8 (%struct.TT_FaceRec_*, i32, i32*, i32*, %struct.FT_LayerIterator_*)** %27, align 8
  %29 = icmp eq i8 (%struct.TT_FaceRec_*, i32, i32*, i32*, %struct.FT_LayerIterator_*)* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %23
  %31 = bitcast %struct.FT_FaceRec_* %0 to %struct.TT_FaceRec_*
  %32 = tail call zeroext i8 %28(%struct.TT_FaceRec_* nonnull %31, i32 %1, i32* nonnull %2, i32* nonnull %3, %struct.FT_LayerIterator_* nonnull %4) #16
  br label %33

33:                                               ; preds = %23, %18, %5, %13, %30
  %34 = phi i8 [ %32, %30 ], [ 0, %13 ], [ 0, %5 ], [ 0, %18 ], [ 0, %23 ]
  ret i8 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Add_Module(%struct.FT_LibraryRec_*, %struct.FT_Module_Class_*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %3, label %207, label %4

4:                                                ; preds = %2
  %5 = icmp eq %struct.FT_Module_Class_* %1, null
  br i1 %5, label %207, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %1, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = icmp sgt i64 %8, 131082
  br i1 %9, label %207, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %43, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %1, i64 0, i32 2
  %16 = load i8*, i8** %15, align 8
  %17 = zext i32 %12 to i64
  br label %20

18:                                               ; preds = %20
  %19 = icmp ult i64 %30, %17
  br i1 %19, label %20, label %40

20:                                               ; preds = %14, %18
  %21 = phi i64 [ 0, %14 ], [ %30, %18 ]
  %22 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 %21
  %23 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %22, align 8
  %24 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %23, i64 0, i32 0
  %25 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %24, align 8
  %26 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %25, i64 0, i32 2
  %27 = load i8*, i8** %26, align 8
  %28 = tail call i32 @strcmp(i8* %27, i8* %16) #17
  %29 = icmp eq i32 %28, 0
  %30 = add nuw nsw i64 %21, 1
  br i1 %29, label %31, label %18

31:                                               ; preds = %20
  %32 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %1, i64 0, i32 3
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %25, i64 0, i32 3
  %35 = load i64, i64* %34, align 8
  %36 = icmp sgt i64 %33, %35
  br i1 %36, label %37, label %207

37:                                               ; preds = %31
  %38 = tail call i32 @FT_Remove_Module(%struct.FT_LibraryRec_* nonnull %0, %struct.FT_ModuleRec_* %23)
  %39 = load i32, i32* %11, align 4
  br label %40

40:                                               ; preds = %18, %37
  %41 = phi i32 [ %39, %37 ], [ %12, %18 ]
  %42 = icmp ugt i32 %41, 31
  br i1 %42, label %207, label %43

43:                                               ; preds = %10, %40
  %44 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 0
  %45 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %44, align 8
  %46 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %1, i64 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = icmp sgt i64 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %43
  %50 = icmp eq i64 %47, 0
  br i1 %50, label %57, label %207

51:                                               ; preds = %43
  %52 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %45, i64 0, i32 1
  %53 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %52, align 8
  %54 = tail call i8* %53(%struct.FT_MemoryRec_* %45, i64 %47) #16
  %55 = icmp eq i8* %54, null
  br i1 %55, label %207, label %56

56:                                               ; preds = %51
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %54, i8 0, i64 %47, i1 false) #16
  br label %57

57:                                               ; preds = %56, %49
  %58 = phi i8* [ %54, %56 ], [ null, %49 ]
  %59 = bitcast i8* %58 to %struct.FT_ModuleRec_*
  %60 = getelementptr inbounds i8, i8* %58, i64 8
  %61 = bitcast i8* %60 to %struct.FT_LibraryRec_**
  store %struct.FT_LibraryRec_* %0, %struct.FT_LibraryRec_** %61, align 8
  %62 = getelementptr inbounds i8, i8* %58, i64 16
  %63 = bitcast i8* %62 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %45, %struct.FT_MemoryRec_** %63, align 8
  %64 = bitcast i8* %58 to %struct.FT_Module_Class_**
  store %struct.FT_Module_Class_* %1, %struct.FT_Module_Class_** %64, align 8
  %65 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %1, i64 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = and i64 %66, 2
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %143, label %69

69:                                               ; preds = %57
  %70 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %44, align 8
  %71 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %70, i64 0, i32 1
  %72 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %71, align 8
  %73 = tail call i8* %72(%struct.FT_MemoryRec_* %70, i64 24) #16
  %74 = icmp eq i8* %73, null
  br i1 %74, label %176, label %75

75:                                               ; preds = %69
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %73, i8 0, i64 24, i1 false) #16
  %76 = bitcast i8* %58 to %struct.FT_Renderer_Class_**
  %77 = load %struct.FT_Renderer_Class_*, %struct.FT_Renderer_Class_** %76, align 8
  %78 = getelementptr inbounds i8, i8* %58, i64 24
  %79 = bitcast i8* %78 to %struct.FT_Renderer_Class_**
  store %struct.FT_Renderer_Class_* %77, %struct.FT_Renderer_Class_** %79, align 8
  %80 = getelementptr inbounds %struct.FT_Renderer_Class_, %struct.FT_Renderer_Class_* %77, i64 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = getelementptr inbounds i8, i8* %58, i64 32
  %83 = bitcast i8* %82 to i32*
  store i32 %81, i32* %83, align 8
  %84 = getelementptr inbounds %struct.FT_Renderer_Class_, %struct.FT_Renderer_Class_* %77, i64 0, i32 6
  %85 = load %struct.FT_Raster_Funcs_*, %struct.FT_Raster_Funcs_** %84, align 8
  %86 = getelementptr inbounds %struct.FT_Raster_Funcs_, %struct.FT_Raster_Funcs_* %85, i64 0, i32 1
  %87 = load i32 (i8*, %struct.FT_RasterRec_**)*, i32 (i8*, %struct.FT_RasterRec_**)** %86, align 8
  %88 = icmp eq i32 (i8*, %struct.FT_RasterRec_**)* %87, null
  br i1 %88, label %107, label %89

89:                                               ; preds = %75
  %90 = bitcast %struct.FT_MemoryRec_* %70 to i8*
  %91 = getelementptr inbounds i8, i8* %58, i64 104
  %92 = bitcast i8* %91 to %struct.FT_RasterRec_**
  %93 = tail call i32 %87(i8* %90, %struct.FT_RasterRec_** %92) #16
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %137

95:                                               ; preds = %89
  %96 = load %struct.FT_Raster_Funcs_*, %struct.FT_Raster_Funcs_** %84, align 8
  %97 = getelementptr inbounds %struct.FT_Raster_Funcs_, %struct.FT_Raster_Funcs_* %96, i64 0, i32 4
  %98 = bitcast i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds i8, i8* %58, i64 112
  %101 = bitcast i8* %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = getelementptr inbounds %struct.FT_Renderer_Class_, %struct.FT_Renderer_Class_* %77, i64 0, i32 2
  %103 = bitcast i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds i8, i8* %58, i64 120
  %106 = bitcast i8* %105 to i64*
  store i64 %104, i64* %106, align 8
  br label %107

107:                                              ; preds = %95, %75
  %108 = getelementptr inbounds i8, i8* %73, i64 16
  %109 = bitcast i8* %108 to i8**
  store i8* %58, i8** %109, align 8
  %110 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 6, i32 1
  %111 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %110, align 8
  %112 = getelementptr inbounds i8, i8* %73, i64 8
  %113 = bitcast i8* %112 to %struct.FT_ListNodeRec_**
  store %struct.FT_ListNodeRec_* null, %struct.FT_ListNodeRec_** %113, align 8
  %114 = bitcast i8* %73 to %struct.FT_ListNodeRec_**
  store %struct.FT_ListNodeRec_* %111, %struct.FT_ListNodeRec_** %114, align 8
  %115 = icmp eq %struct.FT_ListNodeRec_* %111, null
  %116 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %111, i64 0, i32 1
  %117 = bitcast %struct.FT_ListNodeRec_** %116 to i8**
  %118 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 6
  %119 = bitcast %struct.FT_ListRec_* %118 to i8**
  %120 = select i1 %115, i8** %119, i8** %117
  store i8* %73, i8** %120, align 8
  %121 = bitcast %struct.FT_ListNodeRec_** %110 to i8**
  store i8* %73, i8** %121, align 8
  %122 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 6, i32 0
  %123 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %122, align 8
  %124 = icmp eq %struct.FT_ListNodeRec_* %123, null
  br i1 %124, label %140, label %125

125:                                              ; preds = %107, %133
  %126 = phi %struct.FT_ListNodeRec_* [ %135, %133 ], [ %123, %107 ]
  %127 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %126, i64 0, i32 2
  %128 = bitcast i8** %127 to %struct.FT_RendererRec_**
  %129 = load %struct.FT_RendererRec_*, %struct.FT_RendererRec_** %128, align 8
  %130 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %129, i64 0, i32 2
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, 1869968492
  br i1 %132, label %140, label %133

133:                                              ; preds = %125
  %134 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %126, i64 0, i32 1
  %135 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %134, align 8
  %136 = icmp eq %struct.FT_ListNodeRec_* %135, null
  br i1 %136, label %140, label %125

137:                                              ; preds = %89
  %138 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %70, i64 0, i32 2
  %139 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %138, align 8
  tail call void %139(%struct.FT_MemoryRec_* %70, i8* nonnull %73) #16
  br label %176

140:                                              ; preds = %125, %133, %107
  %141 = phi %struct.FT_RendererRec_* [ null, %107 ], [ null, %133 ], [ %129, %125 ]
  %142 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 7
  store %struct.FT_RendererRec_* %141, %struct.FT_RendererRec_** %142, align 8
  br label %143

143:                                              ; preds = %140, %57
  %144 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %64, align 8
  %145 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %144, i64 0, i32 0
  %146 = load i64, i64* %145, align 8
  %147 = and i64 %146, 4
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %155, label %149

149:                                              ; preds = %143
  %150 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 8
  %151 = bitcast %struct.FT_ModuleRec_** %150 to i8**
  store i8* %58, i8** %151, align 8
  %152 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %64, align 8
  %153 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %152, i64 0, i32 0
  %154 = load i64, i64* %153, align 8
  br label %155

155:                                              ; preds = %143, %149
  %156 = phi i64 [ %146, %143 ], [ %154, %149 ]
  %157 = phi %struct.FT_Module_Class_* [ %144, %143 ], [ %152, %149 ]
  %158 = and i64 %156, 1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %163, label %160

160:                                              ; preds = %155
  %161 = getelementptr inbounds i8, i8* %58, i64 24
  %162 = bitcast i8* %161 to %struct.FT_Module_Class_**
  store %struct.FT_Module_Class_* %157, %struct.FT_Module_Class_** %162, align 8
  br label %163

163:                                              ; preds = %155, %160
  %164 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %1, i64 0, i32 6
  %165 = load i32 (%struct.FT_ModuleRec_*)*, i32 (%struct.FT_ModuleRec_*)** %164, align 8
  %166 = icmp eq i32 (%struct.FT_ModuleRec_*)* %165, null
  br i1 %166, label %170, label %167

167:                                              ; preds = %163
  %168 = tail call i32 %165(%struct.FT_ModuleRec_* %59) #16
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %176

170:                                              ; preds = %167, %163
  %171 = load i32, i32* %11, align 4
  %172 = add i32 %171, 1
  store i32 %172, i32* %11, align 4
  %173 = zext i32 %171 to i64
  %174 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 %173
  %175 = bitcast %struct.FT_ModuleRec_** %174 to i8**
  store i8* %58, i8** %175, align 8
  br label %207

176:                                              ; preds = %137, %69, %167
  %177 = phi i32 [ %168, %167 ], [ %93, %137 ], [ 64, %69 ]
  %178 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %64, align 8
  %179 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %178, i64 0, i32 0
  %180 = load i64, i64* %179, align 8
  %181 = and i64 %180, 2
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %202, label %183

183:                                              ; preds = %176
  %184 = getelementptr inbounds i8, i8* %58, i64 24
  %185 = bitcast i8* %184 to %struct.FT_Renderer_Class_**
  %186 = load %struct.FT_Renderer_Class_*, %struct.FT_Renderer_Class_** %185, align 8
  %187 = icmp eq %struct.FT_Renderer_Class_* %186, null
  br i1 %187, label %202, label %188

188:                                              ; preds = %183
  %189 = getelementptr inbounds %struct.FT_Renderer_Class_, %struct.FT_Renderer_Class_* %186, i64 0, i32 1
  %190 = load i32, i32* %189, align 8
  %191 = icmp eq i32 %190, 1869968492
  br i1 %191, label %192, label %202

192:                                              ; preds = %188
  %193 = getelementptr inbounds i8, i8* %58, i64 104
  %194 = bitcast i8* %193 to %struct.FT_RasterRec_**
  %195 = load %struct.FT_RasterRec_*, %struct.FT_RasterRec_** %194, align 8
  %196 = icmp eq %struct.FT_RasterRec_* %195, null
  br i1 %196, label %202, label %197

197:                                              ; preds = %192
  %198 = getelementptr inbounds %struct.FT_Renderer_Class_, %struct.FT_Renderer_Class_* %186, i64 0, i32 6
  %199 = load %struct.FT_Raster_Funcs_*, %struct.FT_Raster_Funcs_** %198, align 8
  %200 = getelementptr inbounds %struct.FT_Raster_Funcs_, %struct.FT_Raster_Funcs_* %199, i64 0, i32 5
  %201 = load void (%struct.FT_RasterRec_*)*, void (%struct.FT_RasterRec_*)** %200, align 8
  tail call void %201(%struct.FT_RasterRec_* nonnull %195) #16
  br label %202

202:                                              ; preds = %188, %197, %183, %192, %176
  %203 = icmp eq i8* %58, null
  br i1 %203, label %207, label %204

204:                                              ; preds = %202
  %205 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %45, i64 0, i32 2
  %206 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %205, align 8
  tail call void %206(%struct.FT_MemoryRec_* %45, i8* nonnull %58) #16
  br label %207

207:                                              ; preds = %51, %49, %204, %202, %170, %40, %31, %6, %4, %2
  %208 = phi i32 [ 33, %2 ], [ 6, %4 ], [ 4, %6 ], [ 5, %31 ], [ 0, %170 ], [ 48, %40 ], [ %177, %202 ], [ %177, %204 ], [ 6, %49 ], [ 64, %51 ]
  ret i32 %208
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Remove_Module(%struct.FT_LibraryRec_*, %struct.FT_ModuleRec_*) local_unnamed_addr #0 {
  %3 = bitcast %struct.FT_LibraryRec_* %0 to i8*
  %4 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %4, label %248, label %5

5:                                                ; preds = %2
  %6 = icmp eq %struct.FT_ModuleRec_* %1, null
  br i1 %6, label %248, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %248, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 0
  br label %15

15:                                               ; preds = %13, %245
  %16 = phi %struct.FT_ModuleRec_** [ %246, %245 ], [ %14, %13 ]
  %17 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %16, align 8
  %18 = icmp eq %struct.FT_ModuleRec_* %17, %1
  br i1 %18, label %19, label %245

19:                                               ; preds = %15
  %20 = add i32 %9, -1
  store i32 %20, i32* %8, align 4
  %21 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %11, i64 -1
  %22 = icmp ult %struct.FT_ModuleRec_** %16, %21
  br i1 %22, label %23, label %122

23:                                               ; preds = %19
  %24 = ptrtoint %struct.FT_ModuleRec_** %16 to i64
  %25 = shl nuw nsw i64 %10, 3
  %26 = add nuw nsw i64 %25, 15
  %27 = sub i64 %26, %24
  %28 = getelementptr i8, i8* %3, i64 %27
  %29 = ptrtoint i8* %28 to i64
  %30 = lshr i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = icmp ult i64 %31, 4
  br i1 %32, label %113, label %33

33:                                               ; preds = %23
  %34 = and i64 %31, 4611686018427387900
  %35 = getelementptr %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %16, i64 %34
  %36 = add nsw i64 %34, -4
  %37 = lshr exact i64 %36, 2
  %38 = add nuw nsw i64 %37, 1
  %39 = and i64 %38, 3
  %40 = icmp ult i64 %36, 12
  br i1 %40, label %92, label %41

41:                                               ; preds = %33
  %42 = sub nsw i64 %38, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %89, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %90, %43 ]
  %46 = getelementptr %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %16, i64 %44
  %47 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %46, i64 1
  %48 = bitcast %struct.FT_ModuleRec_** %47 to <2 x i64>*
  %49 = load <2 x i64>, <2 x i64>* %48, align 8
  %50 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %47, i64 2
  %51 = bitcast %struct.FT_ModuleRec_** %50 to <2 x i64>*
  %52 = load <2 x i64>, <2 x i64>* %51, align 8
  %53 = bitcast %struct.FT_ModuleRec_** %46 to <2 x i64>*
  store <2 x i64> %49, <2 x i64>* %53, align 8
  %54 = getelementptr %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %46, i64 2
  %55 = bitcast %struct.FT_ModuleRec_** %54 to <2 x i64>*
  store <2 x i64> %52, <2 x i64>* %55, align 8
  %56 = or i64 %44, 4
  %57 = getelementptr %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %16, i64 %56
  %58 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %57, i64 1
  %59 = bitcast %struct.FT_ModuleRec_** %58 to <2 x i64>*
  %60 = load <2 x i64>, <2 x i64>* %59, align 8
  %61 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %58, i64 2
  %62 = bitcast %struct.FT_ModuleRec_** %61 to <2 x i64>*
  %63 = load <2 x i64>, <2 x i64>* %62, align 8
  %64 = bitcast %struct.FT_ModuleRec_** %57 to <2 x i64>*
  store <2 x i64> %60, <2 x i64>* %64, align 8
  %65 = getelementptr %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %57, i64 2
  %66 = bitcast %struct.FT_ModuleRec_** %65 to <2 x i64>*
  store <2 x i64> %63, <2 x i64>* %66, align 8
  %67 = or i64 %44, 8
  %68 = getelementptr %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %16, i64 %67
  %69 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %68, i64 1
  %70 = bitcast %struct.FT_ModuleRec_** %69 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8
  %72 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %69, i64 2
  %73 = bitcast %struct.FT_ModuleRec_** %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8
  %75 = bitcast %struct.FT_ModuleRec_** %68 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %75, align 8
  %76 = getelementptr %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %68, i64 2
  %77 = bitcast %struct.FT_ModuleRec_** %76 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8
  %78 = or i64 %44, 12
  %79 = getelementptr %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %16, i64 %78
  %80 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %79, i64 1
  %81 = bitcast %struct.FT_ModuleRec_** %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8
  %83 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %80, i64 2
  %84 = bitcast %struct.FT_ModuleRec_** %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8
  %86 = bitcast %struct.FT_ModuleRec_** %79 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 8
  %87 = getelementptr %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %79, i64 2
  %88 = bitcast %struct.FT_ModuleRec_** %87 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 8
  %89 = add i64 %44, 16
  %90 = add i64 %45, -4
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %43, !llvm.loop !5

92:                                               ; preds = %43, %33
  %93 = phi i64 [ 0, %33 ], [ %89, %43 ]
  %94 = icmp eq i64 %39, 0
  br i1 %94, label %111, label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %108, %95 ], [ %93, %92 ]
  %97 = phi i64 [ %109, %95 ], [ %39, %92 ]
  %98 = getelementptr %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %16, i64 %96
  %99 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %98, i64 1
  %100 = bitcast %struct.FT_ModuleRec_** %99 to <2 x i64>*
  %101 = load <2 x i64>, <2 x i64>* %100, align 8
  %102 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %99, i64 2
  %103 = bitcast %struct.FT_ModuleRec_** %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8
  %105 = bitcast %struct.FT_ModuleRec_** %98 to <2 x i64>*
  store <2 x i64> %101, <2 x i64>* %105, align 8
  %106 = getelementptr %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %98, i64 2
  %107 = bitcast %struct.FT_ModuleRec_** %106 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %107, align 8
  %108 = add i64 %96, 4
  %109 = add i64 %97, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %95, !llvm.loop !7

111:                                              ; preds = %95, %92
  %112 = icmp eq i64 %31, %34
  br i1 %112, label %122, label %113

113:                                              ; preds = %111, %23
  %114 = phi %struct.FT_ModuleRec_** [ %16, %23 ], [ %35, %111 ]
  br label %115

115:                                              ; preds = %113, %115
  %116 = phi %struct.FT_ModuleRec_** [ %117, %115 ], [ %114, %113 ]
  %117 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %116, i64 1
  %118 = bitcast %struct.FT_ModuleRec_** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %struct.FT_ModuleRec_** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = icmp ult %struct.FT_ModuleRec_** %117, %21
  br i1 %121, label %115, label %122, !llvm.loop !8

122:                                              ; preds = %115, %111, %19
  store %struct.FT_ModuleRec_* null, %struct.FT_ModuleRec_** %21, align 8
  %123 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %1, i64 0, i32 2
  %124 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %123, align 8
  %125 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %1, i64 0, i32 0
  %126 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %125, align 8
  %127 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %1, i64 0, i32 1
  %128 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %127, align 8
  %129 = icmp eq %struct.FT_LibraryRec_* %128, null
  br i1 %129, label %136, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %128, i64 0, i32 8
  %132 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %131, align 8
  %133 = icmp eq %struct.FT_ModuleRec_* %132, %1
  br i1 %133, label %134, label %136

134:                                              ; preds = %130
  store %struct.FT_ModuleRec_* null, %struct.FT_ModuleRec_** %131, align 8
  %135 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %125, align 8
  br label %136

136:                                              ; preds = %134, %130, %122
  %137 = phi %struct.FT_Module_Class_* [ %126, %122 ], [ %135, %134 ], [ %126, %130 ]
  %138 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %137, i64 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = and i64 %139, 2
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %209, label %142

142:                                              ; preds = %136
  %143 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %127, align 8
  %144 = icmp eq %struct.FT_LibraryRec_* %143, null
  br i1 %144, label %209, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %143, i64 0, i32 0
  %147 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %146, align 8
  %148 = bitcast %struct.FT_ModuleRec_* %1 to i8*
  %149 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %143, i64 0, i32 6, i32 0
  %150 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %149, align 8
  %151 = icmp eq %struct.FT_ListNodeRec_* %150, null
  br i1 %151, label %209, label %152

152:                                              ; preds = %145, %157
  %153 = phi %struct.FT_ListNodeRec_* [ %159, %157 ], [ %150, %145 ]
  %154 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %153, i64 0, i32 2
  %155 = load i8*, i8** %154, align 8
  %156 = icmp eq i8* %155, %148
  br i1 %156, label %161, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %153, i64 0, i32 1
  %159 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %158, align 8
  %160 = icmp eq %struct.FT_ListNodeRec_* %159, null
  br i1 %160, label %209, label %152

161:                                              ; preds = %152
  %162 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %1, i64 4, i32 1
  %163 = bitcast %struct.FT_LibraryRec_** %162 to %struct.FT_RasterRec_**
  %164 = load %struct.FT_RasterRec_*, %struct.FT_RasterRec_** %163, align 8
  %165 = icmp eq %struct.FT_RasterRec_* %164, null
  br i1 %165, label %174, label %166

166:                                              ; preds = %161
  %167 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %1, i64 1
  %168 = bitcast %struct.FT_ModuleRec_* %167 to %struct.FT_Renderer_Class_**
  %169 = load %struct.FT_Renderer_Class_*, %struct.FT_Renderer_Class_** %168, align 8
  %170 = getelementptr inbounds %struct.FT_Renderer_Class_, %struct.FT_Renderer_Class_* %169, i64 0, i32 6
  %171 = load %struct.FT_Raster_Funcs_*, %struct.FT_Raster_Funcs_** %170, align 8
  %172 = getelementptr inbounds %struct.FT_Raster_Funcs_, %struct.FT_Raster_Funcs_* %171, i64 0, i32 5
  %173 = load void (%struct.FT_RasterRec_*)*, void (%struct.FT_RasterRec_*)** %172, align 8
  tail call void %173(%struct.FT_RasterRec_* nonnull %164) #16
  br label %174

174:                                              ; preds = %166, %161
  %175 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %153, i64 0, i32 0
  %176 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %175, align 8
  %177 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %153, i64 0, i32 1
  %178 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %177, align 8
  %179 = icmp eq %struct.FT_ListNodeRec_* %176, null
  %180 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %176, i64 0, i32 1
  %181 = select i1 %179, %struct.FT_ListNodeRec_** %149, %struct.FT_ListNodeRec_** %180
  store %struct.FT_ListNodeRec_* %178, %struct.FT_ListNodeRec_** %181, align 8
  %182 = icmp eq %struct.FT_ListNodeRec_* %178, null
  %183 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %143, i64 0, i32 6, i32 1
  %184 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %178, i64 0, i32 0
  %185 = select i1 %182, %struct.FT_ListNodeRec_** %183, %struct.FT_ListNodeRec_** %184
  store %struct.FT_ListNodeRec_* %176, %struct.FT_ListNodeRec_** %185, align 8
  %186 = bitcast %struct.FT_ListNodeRec_* %153 to i8*
  %187 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %147, i64 0, i32 2
  %188 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %187, align 8
  tail call void %188(%struct.FT_MemoryRec_* %147, i8* nonnull %186) #16
  %189 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %149, align 8
  %190 = icmp eq %struct.FT_ListNodeRec_* %189, null
  br i1 %190, label %203, label %191

191:                                              ; preds = %174, %199
  %192 = phi %struct.FT_ListNodeRec_* [ %201, %199 ], [ %189, %174 ]
  %193 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %192, i64 0, i32 2
  %194 = bitcast i8** %193 to %struct.FT_RendererRec_**
  %195 = load %struct.FT_RendererRec_*, %struct.FT_RendererRec_** %194, align 8
  %196 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %195, i64 0, i32 2
  %197 = load i32, i32* %196, align 8
  %198 = icmp eq i32 %197, 1869968492
  br i1 %198, label %203, label %199

199:                                              ; preds = %191
  %200 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %192, i64 0, i32 1
  %201 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %200, align 8
  %202 = icmp eq %struct.FT_ListNodeRec_* %201, null
  br i1 %202, label %203, label %191

203:                                              ; preds = %199, %191, %174
  %204 = phi %struct.FT_RendererRec_* [ null, %174 ], [ null, %199 ], [ %195, %191 ]
  %205 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %143, i64 0, i32 7
  store %struct.FT_RendererRec_* %204, %struct.FT_RendererRec_** %205, align 8
  %206 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %125, align 8
  %207 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %206, i64 0, i32 0
  %208 = load i64, i64* %207, align 8
  br label %209

209:                                              ; preds = %157, %203, %145, %142, %136
  %210 = phi i64 [ %208, %203 ], [ %139, %145 ], [ %139, %142 ], [ %139, %136 ], [ %139, %157 ]
  %211 = and i64 %210, 1
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %236, label %213

213:                                              ; preds = %209
  %214 = bitcast %struct.FT_ModuleRec_* %1 to %struct.FT_DriverRec_*
  %215 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %1, i64 1, i32 1
  %216 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %123, align 8
  %217 = icmp eq %struct.FT_MemoryRec_* %216, null
  br i1 %217, label %236, label %218

218:                                              ; preds = %213
  %219 = bitcast %struct.FT_LibraryRec_** %215 to %struct.FT_ListNodeRec_**
  %220 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %219, align 8
  %221 = icmp eq %struct.FT_ListNodeRec_* %220, null
  br i1 %221, label %234, label %222

222:                                              ; preds = %218
  %223 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %216, i64 0, i32 2
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi %struct.FT_ListNodeRec_* [ %220, %222 ], [ %228, %224 ]
  %226 = bitcast %struct.FT_ListNodeRec_* %225 to i8*
  %227 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %225, i64 0, i32 1
  %228 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %227, align 8
  %229 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %225, i64 0, i32 2
  %230 = bitcast i8** %229 to %struct.FT_FaceRec_**
  %231 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %230, align 8
  tail call fastcc void @destroy_face(%struct.FT_MemoryRec_* nonnull %216, %struct.FT_FaceRec_* %231, %struct.FT_DriverRec_* nonnull %214) #16
  %232 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %223, align 8
  tail call void %232(%struct.FT_MemoryRec_* nonnull %216, i8* nonnull %226) #16
  %233 = icmp eq %struct.FT_ListNodeRec_* %228, null
  br i1 %233, label %234, label %224

234:                                              ; preds = %224, %218
  %235 = bitcast %struct.FT_LibraryRec_** %215 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %235, i8 0, i64 16, i1 false) #16
  br label %236

236:                                              ; preds = %234, %213, %209
  %237 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %126, i64 0, i32 7
  %238 = load void (%struct.FT_ModuleRec_*)*, void (%struct.FT_ModuleRec_*)** %237, align 8
  %239 = icmp eq void (%struct.FT_ModuleRec_*)* %238, null
  br i1 %239, label %241, label %240

240:                                              ; preds = %236
  tail call void %238(%struct.FT_ModuleRec_* nonnull %1) #16
  br label %241

241:                                              ; preds = %240, %236
  %242 = bitcast %struct.FT_ModuleRec_* %1 to i8*
  %243 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %124, i64 0, i32 2
  %244 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %243, align 8
  tail call void %244(%struct.FT_MemoryRec_* %124, i8* nonnull %242) #16
  br label %248

245:                                              ; preds = %15
  %246 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %16, i64 1
  %247 = icmp ult %struct.FT_ModuleRec_** %246, %11
  br i1 %247, label %15, label %248

248:                                              ; preds = %245, %7, %5, %241, %2
  %249 = phi i32 [ 33, %2 ], [ 0, %241 ], [ 34, %5 ], [ 34, %7 ], [ 34, %245 ]
  ret i32 %249
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* readonly, i8* readonly) local_unnamed_addr #4 {
  %3 = icmp ne %struct.FT_LibraryRec_* %0, null
  %4 = icmp ne i8* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %26

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %26, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 0
  br label %16

14:                                               ; preds = %16
  %15 = icmp ult %struct.FT_ModuleRec_** %25, %10
  br i1 %15, label %16, label %26

16:                                               ; preds = %12, %14
  %17 = phi %struct.FT_ModuleRec_** [ %25, %14 ], [ %13, %12 ]
  %18 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %17, align 8
  %19 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %18, i64 0, i32 0
  %20 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %19, align 8
  %21 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %20, i64 0, i32 2
  %22 = load i8*, i8** %21, align 8
  %23 = tail call i32 @strcmp(i8* %22, i8* nonnull %1) #17
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %17, i64 1
  br i1 %24, label %26, label %14

26:                                               ; preds = %16, %14, %6, %2
  %27 = phi %struct.FT_ModuleRec_* [ null, %2 ], [ null, %6 ], [ %18, %16 ], [ null, %14 ]
  ret %struct.FT_ModuleRec_* %27
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @FT_Get_Module_Interface(%struct.FT_LibraryRec_* readonly, i8* readonly) local_unnamed_addr #4 {
  %3 = icmp ne %struct.FT_LibraryRec_* %0, null
  %4 = icmp ne i8* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %31

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %31, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 0
  br label %16

14:                                               ; preds = %16
  %15 = icmp ult %struct.FT_ModuleRec_** %25, %10
  br i1 %15, label %16, label %31

16:                                               ; preds = %14, %12
  %17 = phi %struct.FT_ModuleRec_** [ %25, %14 ], [ %13, %12 ]
  %18 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %17, align 8
  %19 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %18, i64 0, i32 0
  %20 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %19, align 8
  %21 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %20, i64 0, i32 2
  %22 = load i8*, i8** %21, align 8
  %23 = tail call i32 @strcmp(i8* %22, i8* nonnull %1) #17
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %17, i64 1
  br i1 %24, label %26, label %14

26:                                               ; preds = %16
  %27 = icmp eq %struct.FT_ModuleRec_* %18, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %20, i64 0, i32 5
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %14, %6, %2, %26, %28
  %32 = phi i8* [ %30, %28 ], [ null, %26 ], [ null, %2 ], [ null, %6 ], [ null, %14 ]
  ret i8* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ft_module_get_service(%struct.FT_ModuleRec_*, i8*, i8 zeroext) local_unnamed_addr #0 {
  %4 = icmp eq %struct.FT_ModuleRec_* %0, null
  br i1 %4, label %44, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 0, i32 0
  %7 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %7, i64 0, i32 8
  %9 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %8, align 8
  %10 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = tail call i8* %9(%struct.FT_ModuleRec_* nonnull %0, i8* %1) #16
  br label %13

13:                                               ; preds = %5, %11
  %14 = phi i8* [ %12, %11 ], [ null, %5 ]
  %15 = icmp eq i8 %2, 0
  %16 = icmp ne i8* %14, null
  %17 = or i1 %15, %16
  br i1 %17, label %44, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 0, i32 1
  %20 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %19, align 8
  %21 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %20, i64 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %20, i64 0, i32 5, i64 %23
  %25 = icmp eq i32 %22, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %20, i64 0, i32 5, i64 0
  br label %28

28:                                               ; preds = %26, %41
  %29 = phi %struct.FT_ModuleRec_** [ %42, %41 ], [ %27, %26 ]
  %30 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %29, align 8
  %31 = icmp eq %struct.FT_ModuleRec_* %30, %0
  br i1 %31, label %41, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %30, i64 0, i32 0
  %34 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %33, align 8
  %35 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %34, i64 0, i32 8
  %36 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %35, align 8
  %37 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = tail call i8* %36(%struct.FT_ModuleRec_* %30, i8* %1) #16
  %40 = icmp eq i8* %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %38, %32, %28
  %42 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %29, i64 1
  %43 = icmp ult %struct.FT_ModuleRec_** %42, %24
  br i1 %43, label %28, label %44

44:                                               ; preds = %38, %41, %18, %3, %13
  %45 = phi i8* [ %14, %13 ], [ null, %3 ], [ null, %18 ], [ %39, %38 ], [ null, %41 ]
  ret i8* %45
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Property_Set(%struct.FT_LibraryRec_* readonly, i8* readonly, i8*, i8*) local_unnamed_addr #0 {
  %5 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %5, label %51, label %6

6:                                                ; preds = %4
  %7 = icmp ne i8* %1, null
  %8 = icmp ne i8* %2, null
  %9 = and i1 %7, %8
  %10 = icmp ne i8* %3, null
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %51

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 0
  %14 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %31, label %19

19:                                               ; preds = %12, %28
  %20 = phi %struct.FT_ModuleRec_** [ %29, %28 ], [ %13, %12 ]
  %21 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %20, align 8
  %22 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %21, i64 0, i32 0
  %23 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %22, align 8
  %24 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %23, i64 0, i32 2
  %25 = load i8*, i8** %24, align 8
  %26 = tail call i32 @strcmp(i8* %25, i8* nonnull %1) #17
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %20, i64 1
  %30 = icmp ult %struct.FT_ModuleRec_** %29, %17
  br i1 %30, label %19, label %31

31:                                               ; preds = %28, %19, %12
  %32 = phi %struct.FT_ModuleRec_** [ %13, %12 ], [ %29, %28 ], [ %20, %19 ]
  %33 = icmp eq %struct.FT_ModuleRec_** %32, %17
  br i1 %33, label %51, label %34

34:                                               ; preds = %31
  %35 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %32, align 8
  %36 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %35, i64 0, i32 0
  %37 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %36, align 8
  %38 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %37, i64 0, i32 8
  %39 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %38, align 8
  %40 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %34
  %42 = tail call i8* %39(%struct.FT_ModuleRec_* %35, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0)) #16
  %43 = icmp eq i8* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %41
  %45 = bitcast i8* %42 to i32 (%struct.FT_ModuleRec_*, i8*, i8*, i8)**
  %46 = load i32 (%struct.FT_ModuleRec_*, i8*, i8*, i8)*, i32 (%struct.FT_ModuleRec_*, i8*, i8*, i8)** %45, align 8
  %47 = icmp eq i32 (%struct.FT_ModuleRec_*, i8*, i8*, i8)* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %32, align 8
  %50 = tail call i32 %46(%struct.FT_ModuleRec_* %49, i8* nonnull %2, i8* nonnull %3, i8 zeroext 0) #16
  br label %51

51:                                               ; preds = %4, %6, %31, %34, %41, %44, %48
  %52 = phi i32 [ 33, %4 ], [ 6, %6 ], [ 11, %31 ], [ 7, %34 ], [ 7, %41 ], [ %50, %48 ], [ 7, %44 ]
  ret i32 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Property_Get(%struct.FT_LibraryRec_* readonly, i8* readonly, i8*, i8*) local_unnamed_addr #0 {
  %5 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %4
  %7 = icmp ne i8* %1, null
  %8 = icmp ne i8* %2, null
  %9 = and i1 %7, %8
  %10 = icmp ne i8* %3, null
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %52

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 0
  %14 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %31, label %19

19:                                               ; preds = %12, %28
  %20 = phi %struct.FT_ModuleRec_** [ %29, %28 ], [ %13, %12 ]
  %21 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %20, align 8
  %22 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %21, i64 0, i32 0
  %23 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %22, align 8
  %24 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %23, i64 0, i32 2
  %25 = load i8*, i8** %24, align 8
  %26 = tail call i32 @strcmp(i8* %25, i8* nonnull %1) #17
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %20, i64 1
  %30 = icmp ult %struct.FT_ModuleRec_** %29, %17
  br i1 %30, label %19, label %31

31:                                               ; preds = %28, %19, %12
  %32 = phi %struct.FT_ModuleRec_** [ %13, %12 ], [ %29, %28 ], [ %20, %19 ]
  %33 = icmp eq %struct.FT_ModuleRec_** %32, %17
  br i1 %33, label %52, label %34

34:                                               ; preds = %31
  %35 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %32, align 8
  %36 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %35, i64 0, i32 0
  %37 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %36, align 8
  %38 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %37, i64 0, i32 8
  %39 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %38, align 8
  %40 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = tail call i8* %39(%struct.FT_ModuleRec_* %35, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0)) #16
  %43 = icmp eq i8* %42, null
  br i1 %43, label %52, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds i8, i8* %42, i64 8
  %46 = bitcast i8* %45 to i32 (%struct.FT_ModuleRec_*, i8*, i8*)**
  %47 = load i32 (%struct.FT_ModuleRec_*, i8*, i8*)*, i32 (%struct.FT_ModuleRec_*, i8*, i8*)** %46, align 8
  %48 = icmp eq i32 (%struct.FT_ModuleRec_*, i8*, i8*)* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %32, align 8
  %51 = tail call i32 %47(%struct.FT_ModuleRec_* %50, i8* nonnull %2, i8* nonnull %3) #16
  br label %52

52:                                               ; preds = %4, %6, %31, %34, %41, %44, %49
  %53 = phi i32 [ 33, %4 ], [ 6, %6 ], [ 11, %31 ], [ 7, %34 ], [ 7, %41 ], [ 7, %44 ], [ %51, %49 ]
  ret i32 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ft_property_string_set(%struct.FT_LibraryRec_* readonly, i8* readonly, i8*, i8*) local_unnamed_addr #0 {
  %5 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %5, label %51, label %6

6:                                                ; preds = %4
  %7 = icmp ne i8* %1, null
  %8 = icmp ne i8* %2, null
  %9 = and i1 %7, %8
  %10 = icmp ne i8* %3, null
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %51

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 0
  %14 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %31, label %19

19:                                               ; preds = %12, %28
  %20 = phi %struct.FT_ModuleRec_** [ %29, %28 ], [ %13, %12 ]
  %21 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %20, align 8
  %22 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %21, i64 0, i32 0
  %23 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %22, align 8
  %24 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %23, i64 0, i32 2
  %25 = load i8*, i8** %24, align 8
  %26 = tail call i32 @strcmp(i8* %25, i8* nonnull %1) #17
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %20, i64 1
  %30 = icmp ult %struct.FT_ModuleRec_** %29, %17
  br i1 %30, label %19, label %31

31:                                               ; preds = %28, %19, %12
  %32 = phi %struct.FT_ModuleRec_** [ %13, %12 ], [ %29, %28 ], [ %20, %19 ]
  %33 = icmp eq %struct.FT_ModuleRec_** %32, %17
  br i1 %33, label %51, label %34

34:                                               ; preds = %31
  %35 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %32, align 8
  %36 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %35, i64 0, i32 0
  %37 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %36, align 8
  %38 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %37, i64 0, i32 8
  %39 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %38, align 8
  %40 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %34
  %42 = tail call i8* %39(%struct.FT_ModuleRec_* %35, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0)) #16
  %43 = icmp eq i8* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %41
  %45 = bitcast i8* %42 to i32 (%struct.FT_ModuleRec_*, i8*, i8*, i8)**
  %46 = load i32 (%struct.FT_ModuleRec_*, i8*, i8*, i8)*, i32 (%struct.FT_ModuleRec_*, i8*, i8*, i8)** %45, align 8
  %47 = icmp eq i32 (%struct.FT_ModuleRec_*, i8*, i8*, i8)* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %32, align 8
  %50 = tail call i32 %46(%struct.FT_ModuleRec_* %49, i8* nonnull %2, i8* nonnull %3, i8 zeroext 1) #16
  br label %51

51:                                               ; preds = %4, %6, %31, %34, %41, %44, %48
  %52 = phi i32 [ 33, %4 ], [ 6, %6 ], [ 11, %31 ], [ 7, %34 ], [ 7, %41 ], [ %50, %48 ], [ 7, %44 ]
  ret i32 %52
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @FT_Reference_Library(%struct.FT_LibraryRec_*) local_unnamed_addr #3 {
  %2 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 12
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* %4, align 8
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi i32 [ 0, %3 ], [ 33, %1 ]
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_New_Library(%struct.FT_MemoryRec_*, %struct.FT_LibraryRec_**) local_unnamed_addr #0 {
  %3 = icmp ne %struct.FT_MemoryRec_* %0, null
  %4 = icmp ne %struct.FT_LibraryRec_** %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %23

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %0, i64 0, i32 1
  %8 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %7, align 8
  %9 = tail call i8* %8(%struct.FT_MemoryRec_* nonnull %0, i64 368) #16
  %10 = icmp eq i8* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds i8, i8* %9, i64 20
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %12, i8 0, i64 348, i1 false) #16
  %13 = bitcast i8* %9 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %0, %struct.FT_MemoryRec_** %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 2, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %9, i64 12
  %17 = bitcast i8* %16 to i32*
  store i32 10, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %9, i64 16
  %19 = bitcast i8* %18 to i32*
  store i32 4, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %9, i64 360
  %21 = bitcast i8* %20 to i32*
  store i32 1, i32* %21, align 8
  %22 = bitcast %struct.FT_LibraryRec_** %1 to i8**
  store i8* %9, i8** %22, align 8
  br label %23

23:                                               ; preds = %6, %2, %11
  %24 = phi i32 [ 0, %11 ], [ 6, %2 ], [ 64, %6 ]
  ret i32 %24
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @FT_Library_Version(%struct.FT_LibraryRec_* readonly, i32*, i32*, i32*) local_unnamed_addr #3 {
  %5 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  br label %13

13:                                               ; preds = %4, %6
  %14 = phi i32 [ %8, %6 ], [ 0, %4 ]
  %15 = phi i32 [ %10, %6 ], [ 0, %4 ]
  %16 = phi i32 [ %12, %6 ], [ 0, %4 ]
  %17 = icmp eq i32* %1, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %13
  store i32 %14, i32* %1, align 4
  br label %19

19:                                               ; preds = %13, %18
  %20 = icmp eq i32* %2, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %19
  store i32 %15, i32* %2, align 4
  br label %22

22:                                               ; preds = %19, %21
  %23 = icmp eq i32* %3, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %22
  store i32 %16, i32* %3, align 4
  br label %25

25:                                               ; preds = %22, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Done_Library(%struct.FT_LibraryRec_*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %2, label %129, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 12
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, -1
  store i32 %6, i32* %4, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %129, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 0
  %10 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %9, align 8
  %11 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %111, %8
  %14 = phi i32 [ %12, %8 ], [ %112, %111 ]
  %15 = phi i32 [ %12, %8 ], [ %113, %111 ]
  %16 = phi i64 [ 0, %8 ], [ %114, %111 ]
  %17 = icmp eq i32 %15, 0
  br i1 %17, label %111, label %18

18:                                               ; preds = %13
  %19 = icmp eq i64 %16, 0
  %20 = getelementptr inbounds [2 x i8*], [2 x i8*]* @__const.FT_Done_Library.driver_name, i64 0, i64 %16
  br label %23

21:                                               ; preds = %111
  %22 = icmp eq i32 %112, 0
  br i1 %22, label %125, label %116

23:                                               ; preds = %18, %106
  %24 = phi i32 [ %14, %18 ], [ %107, %106 ]
  %25 = phi i64 [ 0, %18 ], [ %108, %106 ]
  %26 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 %25
  %27 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %26, align 8
  %28 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %27, i64 0, i32 0
  br i1 %19, label %31, label %29

29:                                               ; preds = %23
  %30 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %28, align 8
  br label %38

31:                                               ; preds = %23
  %32 = load i8*, i8** %20, align 8
  %33 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %28, align 8
  %34 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %33, i64 0, i32 2
  %35 = load i8*, i8** %34, align 8
  %36 = tail call i32 @strcmp(i8* %35, i8* %32) #17
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %106

38:                                               ; preds = %29, %31
  %39 = phi %struct.FT_Module_Class_* [ %30, %29 ], [ %33, %31 ]
  %40 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %39, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %106, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %27, i64 1, i32 1
  %46 = bitcast %struct.FT_LibraryRec_** %45 to %struct.FT_ListNodeRec_**
  %47 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %46, align 8
  %48 = icmp eq %struct.FT_ListNodeRec_* %47, null
  br i1 %48, label %106, label %49

49:                                               ; preds = %44, %101
  %50 = phi %struct.FT_ListNodeRec_* [ %102, %101 ], [ %47, %44 ]
  %51 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %50, i64 0, i32 2
  %52 = bitcast i8** %51 to %struct.FT_FaceRec_**
  %53 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %52, align 8
  %54 = icmp eq %struct.FT_FaceRec_* %53, null
  br i1 %54, label %101, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %53, i64 0, i32 24
  %57 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %56, align 8
  %58 = icmp eq %struct.FT_DriverRec_* %57, null
  br i1 %58, label %101, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %53, i64 0, i32 30
  %61 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %60, align 8
  %62 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %61, i64 0, i32 9
  %63 = load i32, i32* %62, align 8
  %64 = add nsw i32 %63, -1
  store i32 %64, i32* %62, align 8
  %65 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %60, align 8
  %66 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %65, i64 0, i32 9
  %67 = load i32, i32* %66, align 8
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %101, label %69

69:                                               ; preds = %59
  %70 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %56, align 8
  %71 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %70, i64 0, i32 0, i32 2
  %72 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %71, align 8
  %73 = bitcast %struct.FT_FaceRec_* %53 to i8*
  %74 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %70, i64 0, i32 2, i32 0
  %75 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %74, align 8
  %76 = icmp eq %struct.FT_ListNodeRec_* %75, null
  br i1 %76, label %101, label %77

77:                                               ; preds = %69, %82
  %78 = phi %struct.FT_ListNodeRec_* [ %84, %82 ], [ %75, %69 ]
  %79 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %78, i64 0, i32 2
  %80 = load i8*, i8** %79, align 8
  %81 = icmp eq i8* %80, %73
  br i1 %81, label %86, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %78, i64 0, i32 1
  %84 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %83, align 8
  %85 = icmp eq %struct.FT_ListNodeRec_* %84, null
  br i1 %85, label %101, label %77

86:                                               ; preds = %77
  %87 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %78, i64 0, i32 0
  %88 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %87, align 8
  %89 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %78, i64 0, i32 1
  %90 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %89, align 8
  %91 = icmp eq %struct.FT_ListNodeRec_* %88, null
  %92 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %88, i64 0, i32 1
  %93 = select i1 %91, %struct.FT_ListNodeRec_** %74, %struct.FT_ListNodeRec_** %92
  store %struct.FT_ListNodeRec_* %90, %struct.FT_ListNodeRec_** %93, align 8
  %94 = icmp eq %struct.FT_ListNodeRec_* %90, null
  %95 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %70, i64 0, i32 2, i32 1
  %96 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %90, i64 0, i32 0
  %97 = select i1 %94, %struct.FT_ListNodeRec_** %95, %struct.FT_ListNodeRec_** %96
  store %struct.FT_ListNodeRec_* %88, %struct.FT_ListNodeRec_** %97, align 8
  %98 = bitcast %struct.FT_ListNodeRec_* %78 to i8*
  %99 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %72, i64 0, i32 2
  %100 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %99, align 8
  tail call void %100(%struct.FT_MemoryRec_* %72, i8* nonnull %98) #16
  tail call fastcc void @destroy_face(%struct.FT_MemoryRec_* %72, %struct.FT_FaceRec_* nonnull %53, %struct.FT_DriverRec_* %70) #16
  br label %101

101:                                              ; preds = %82, %49, %55, %59, %69, %86
  %102 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %46, align 8
  %103 = icmp eq %struct.FT_ListNodeRec_* %102, null
  br i1 %103, label %104, label %49

104:                                              ; preds = %101
  %105 = load i32, i32* %11, align 4
  br label %106

106:                                              ; preds = %104, %44, %38, %31
  %107 = phi i32 [ %105, %104 ], [ %24, %44 ], [ %24, %38 ], [ %24, %31 ]
  %108 = add nuw nsw i64 %25, 1
  %109 = zext i32 %107 to i64
  %110 = icmp ult i64 %108, %109
  br i1 %110, label %23, label %111

111:                                              ; preds = %106, %13
  %112 = phi i32 [ %14, %13 ], [ %107, %106 ]
  %113 = phi i32 [ 0, %13 ], [ %107, %106 ]
  %114 = add nuw nsw i64 %16, 1
  %115 = icmp eq i64 %114, 2
  br i1 %115, label %21, label %13

116:                                              ; preds = %21, %116
  %117 = phi i32 [ %123, %116 ], [ %112, %21 ]
  %118 = add i32 %117, -1
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 %119
  %121 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %120, align 8
  %122 = tail call i32 @FT_Remove_Module(%struct.FT_LibraryRec_* nonnull %0, %struct.FT_ModuleRec_* %121)
  %123 = load i32, i32* %11, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %116

125:                                              ; preds = %116, %21
  %126 = bitcast %struct.FT_LibraryRec_* %0 to i8*
  %127 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %10, i64 0, i32 2
  %128 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %127, align 8
  tail call void %128(%struct.FT_MemoryRec_* %10, i8* nonnull %126) #16
  br label %129

129:                                              ; preds = %125, %3, %1
  %130 = phi i32 [ 33, %1 ], [ 0, %3 ], [ 0, %125 ]
  ret i32 %130
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @FT_Set_Debug_Hook(%struct.FT_LibraryRec_*, i32, i32 (i8*)*) local_unnamed_addr #10 {
  %4 = icmp ne %struct.FT_LibraryRec_* %0, null
  %5 = icmp ne i32 (i8*)* %2, null
  %6 = and i1 %4, %5
  %7 = icmp ult i32 %1, 4
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = zext i32 %1 to i64
  %11 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 9, i64 %10
  store i32 (i8*)* %2, i32 (i8*)** %11, align 8
  br label %12

12:                                               ; preds = %9, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_TrueType_Engine_Type(%struct.FT_LibraryRec_* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %2, label %35, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %35, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 5, i64 0
  br label %13

11:                                               ; preds = %13
  %12 = icmp ult %struct.FT_ModuleRec_** %22, %7
  br i1 %12, label %13, label %35

13:                                               ; preds = %11, %9
  %14 = phi %struct.FT_ModuleRec_** [ %22, %11 ], [ %10, %9 ]
  %15 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %14, align 8
  %16 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %15, i64 0, i32 0
  %17 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %16, align 8
  %18 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %17, i64 0, i32 2
  %19 = load i8*, i8** %18, align 8
  %20 = tail call i32 @strcmp(i8* %19, i8* nonnull getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)) #17
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %14, i64 1
  br i1 %21, label %23, label %11

23:                                               ; preds = %13
  %24 = icmp eq %struct.FT_ModuleRec_* %15, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %17, i64 0, i32 8
  %27 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %26, align 8
  %28 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %27, null
  br i1 %28, label %35, label %29

29:                                               ; preds = %25
  %30 = tail call i8* %27(%struct.FT_ModuleRec_* nonnull %15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0)) #16
  %31 = icmp eq i8* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = bitcast i8* %30 to i32*
  %34 = load i32, i32* %33, align 4
  br label %35

35:                                               ; preds = %11, %25, %3, %23, %29, %32, %1
  %36 = phi i32 [ 0, %1 ], [ 0, %23 ], [ %34, %32 ], [ 0, %29 ], [ 0, %3 ], [ 0, %25 ], [ 0, %11 ]
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_SubGlyph_Info(%struct.FT_GlyphSlotRec_* readonly, i32, i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture, %struct.FT_Matrix_* nocapture) local_unnamed_addr #0 {
  %8 = icmp eq %struct.FT_GlyphSlotRec_* %0, null
  br i1 %8, label %35, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 15
  %11 = load %struct.FT_SubGlyphRec_*, %struct.FT_SubGlyphRec_** %10, align 8
  %12 = icmp eq %struct.FT_SubGlyphRec_* %11, null
  br i1 %12, label %35, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 9
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 1668246896
  br i1 %16, label %17, label %35

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 14
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %19, %1
  br i1 %20, label %21, label %35

21:                                               ; preds = %17
  %22 = zext i32 %1 to i64
  %23 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %11, i64 %22, i32 0
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %2, align 4
  %25 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %11, i64 %22, i32 1
  %26 = load i16, i16* %25, align 4
  %27 = zext i16 %26 to i32
  store i32 %27, i32* %3, align 4
  %28 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %11, i64 %22, i32 2
  %29 = load i32, i32* %28, align 8
  store i32 %29, i32* %4, align 4
  %30 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %11, i64 %22, i32 3
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %5, align 4
  %32 = getelementptr inbounds %struct.FT_SubGlyphRec_, %struct.FT_SubGlyphRec_* %11, i64 %22, i32 4
  %33 = bitcast %struct.FT_Matrix_* %6 to i8*
  %34 = bitcast %struct.FT_Matrix_* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 32, i1 false)
  br label %35

35:                                               ; preds = %9, %7, %21, %17, %13
  %36 = phi i32 [ 0, %21 ], [ 6, %17 ], [ 6, %13 ], [ 6, %9 ], [ 6, %7 ]
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @FT_Get_Color_Glyph_Paint(%struct.FT_FaceRec_*, i32, i32, %struct.FT_Opaque_Paint_*) local_unnamed_addr #0 {
  %5 = icmp ne %struct.FT_FaceRec_* %0, null
  %6 = icmp ne %struct.FT_Opaque_Paint_* %3, null
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %25

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 13
  %15 = bitcast i16* %14 to %struct.SFNT_Interface_**
  %16 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %15, align 8
  %17 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %16, i64 0, i32 33
  %18 = load i8 (%struct.TT_FaceRec_*, i32, i32*, i32*, %struct.FT_LayerIterator_*)*, i8 (%struct.TT_FaceRec_*, i32, i32*, i32*, %struct.FT_LayerIterator_*)** %17, align 8
  %19 = icmp eq i8 (%struct.TT_FaceRec_*, i32, i32*, i32*, %struct.FT_LayerIterator_*)* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %13
  %21 = bitcast %struct.FT_FaceRec_* %0 to %struct.TT_FaceRec_*
  %22 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %16, i64 0, i32 34
  %23 = load i8 (%struct.TT_FaceRec_*, i32, i32, %struct.FT_Opaque_Paint_*)*, i8 (%struct.TT_FaceRec_*, i32, i32, %struct.FT_Opaque_Paint_*)** %22, align 8
  %24 = tail call zeroext i8 %23(%struct.TT_FaceRec_* nonnull %21, i32 %1, i32 %2, %struct.FT_Opaque_Paint_* nonnull %3) #16
  br label %25

25:                                               ; preds = %13, %8, %4, %20
  %26 = phi i8 [ %24, %20 ], [ 0, %4 ], [ 0, %8 ], [ 0, %13 ]
  ret i8 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @FT_Get_Paint_Layers(%struct.FT_FaceRec_*, %struct.FT_LayerIterator_*, %struct.FT_Opaque_Paint_*) local_unnamed_addr #0 {
  %4 = icmp ne %struct.FT_FaceRec_* %0, null
  %5 = icmp ne %struct.FT_Opaque_Paint_* %2, null
  %6 = and i1 %4, %5
  %7 = icmp ne %struct.FT_LayerIterator_* %1, null
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %24

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 13
  %16 = bitcast i16* %15 to %struct.SFNT_Interface_**
  %17 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %16, align 8
  %18 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %17, i64 0, i32 35
  %19 = load i8 (%struct.TT_FaceRec_*, %struct.FT_LayerIterator_*, %struct.FT_Opaque_Paint_*)*, i8 (%struct.TT_FaceRec_*, %struct.FT_LayerIterator_*, %struct.FT_Opaque_Paint_*)** %18, align 8
  %20 = icmp eq i8 (%struct.TT_FaceRec_*, %struct.FT_LayerIterator_*, %struct.FT_Opaque_Paint_*)* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %struct.FT_FaceRec_* %0 to %struct.TT_FaceRec_*
  %23 = tail call zeroext i8 %19(%struct.TT_FaceRec_* nonnull %22, %struct.FT_LayerIterator_* nonnull %1, %struct.FT_Opaque_Paint_* nonnull %2) #16
  br label %24

24:                                               ; preds = %14, %9, %3, %21
  %25 = phi i8 [ %23, %21 ], [ 0, %3 ], [ 0, %9 ], [ 0, %14 ]
  ret i8 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @FT_Get_Paint(%struct.FT_FaceRec_*, i8*, i8, %struct.FT_COLR_Paint_*) local_unnamed_addr #0 {
  %5 = icmp ne %struct.FT_FaceRec_* %0, null
  %6 = icmp ne %struct.FT_COLR_Paint_* %3, null
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %23

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 13
  %15 = bitcast i16* %14 to %struct.SFNT_Interface_**
  %16 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %15, align 8
  %17 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %16, i64 0, i32 37
  %18 = load i8 (%struct.TT_FaceRec_*, i8*, i8, %struct.FT_COLR_Paint_*)*, i8 (%struct.TT_FaceRec_*, i8*, i8, %struct.FT_COLR_Paint_*)** %17, align 8
  %19 = icmp eq i8 (%struct.TT_FaceRec_*, i8*, i8, %struct.FT_COLR_Paint_*)* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %struct.FT_FaceRec_* %0 to %struct.TT_FaceRec_*
  %22 = tail call zeroext i8 %18(%struct.TT_FaceRec_* nonnull %21, i8* %1, i8 %2, %struct.FT_COLR_Paint_* nonnull %3) #16
  br label %23

23:                                               ; preds = %13, %8, %4, %20
  %24 = phi i8 [ %22, %20 ], [ 0, %4 ], [ 0, %8 ], [ 0, %13 ]
  ret i8 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @FT_Get_Colorline_Stops(%struct.FT_FaceRec_*, %struct.FT_ColorStop_*, %struct.FT_ColorStopIterator_*) local_unnamed_addr #0 {
  %4 = icmp ne %struct.FT_FaceRec_* %0, null
  %5 = icmp ne %struct.FT_ColorStop_* %1, null
  %6 = and i1 %4, %5
  %7 = icmp ne %struct.FT_ColorStopIterator_* %2, null
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %24

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 3, i32 13
  %16 = bitcast i16* %15 to %struct.SFNT_Interface_**
  %17 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %16, align 8
  %18 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %17, i64 0, i32 36
  %19 = load i8 (%struct.TT_FaceRec_*, %struct.FT_ColorStop_*, %struct.FT_ColorStopIterator_*)*, i8 (%struct.TT_FaceRec_*, %struct.FT_ColorStop_*, %struct.FT_ColorStopIterator_*)** %18, align 8
  %20 = icmp eq i8 (%struct.TT_FaceRec_*, %struct.FT_ColorStop_*, %struct.FT_ColorStopIterator_*)* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %struct.FT_FaceRec_* %0 to %struct.TT_FaceRec_*
  %23 = tail call zeroext i8 %19(%struct.TT_FaceRec_* nonnull %22, %struct.FT_ColorStop_* nonnull %1, %struct.FT_ColorStopIterator_* nonnull %2) #16
  br label %24

24:                                               ; preds = %14, %9, %3, %21
  %25 = phi i8 [ %23, %21 ], [ 0, %3 ], [ 0, %9 ], [ 0, %14 ]
  ret i8 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Outline_Decompose(%struct.FT_Outline_* readonly, %struct.FT_Outline_Funcs_* readonly, i8*) local_unnamed_addr #0 {
  %4 = alloca %struct.FT_Vector_, align 8
  %5 = alloca %struct.FT_Vector_, align 8
  %6 = alloca %struct.FT_Vector_, align 8
  %7 = alloca %struct.FT_Vector_, align 8
  %8 = alloca %struct.FT_Vector_, align 8
  %9 = alloca %struct.FT_Vector_, align 8
  %10 = alloca %struct.FT_Vector_, align 8
  %11 = alloca %struct.FT_Vector_, align 8
  %12 = bitcast %struct.FT_Vector_* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #16
  %13 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4, i64 0, i32 0
  %14 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4, i64 0, i32 1
  %15 = bitcast %struct.FT_Vector_* %5 to i8*
  %16 = bitcast %struct.FT_Vector_* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #16
  %17 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %5, i64 0, i32 0
  %18 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %5, i64 0, i32 1
  %19 = icmp eq %struct.FT_Outline_* %0, null
  %20 = bitcast %struct.FT_Vector_* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  br i1 %19, label %254, label %21

21:                                               ; preds = %3
  %22 = icmp eq %struct.FT_Outline_Funcs_* %1, null
  br i1 %22, label %254, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.FT_Outline_Funcs_, %struct.FT_Outline_Funcs_* %1, i64 0, i32 5
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 0
  %27 = load i16, i16* %26, align 8
  %28 = icmp sgt i16 %27, 0
  br i1 %28, label %29, label %254

29:                                               ; preds = %23
  %30 = getelementptr inbounds %struct.FT_Outline_Funcs_, %struct.FT_Outline_Funcs_* %1, i64 0, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 4
  %33 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 2
  %34 = zext i32 %31 to i64
  %35 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 3
  %36 = getelementptr inbounds %struct.FT_Outline_Funcs_, %struct.FT_Outline_Funcs_* %1, i64 0, i32 0
  %37 = bitcast %struct.FT_Vector_* %7 to i8*
  %38 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %7, i64 0, i32 0
  %39 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %7, i64 0, i32 1
  %40 = bitcast %struct.FT_Vector_* %8 to i8*
  %41 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %8, i64 0, i32 0
  %42 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %8, i64 0, i32 1
  %43 = getelementptr inbounds %struct.FT_Outline_Funcs_, %struct.FT_Outline_Funcs_* %1, i64 0, i32 2
  %44 = bitcast %struct.FT_Vector_* %6 to i8*
  %45 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %6, i64 0, i32 0
  %46 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %6, i64 0, i32 1
  %47 = getelementptr inbounds %struct.FT_Outline_Funcs_, %struct.FT_Outline_Funcs_* %1, i64 0, i32 1
  %48 = bitcast %struct.FT_Vector_* %9 to i8*
  %49 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %9, i64 0, i32 0
  %50 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %9, i64 0, i32 1
  %51 = bitcast %struct.FT_Vector_* %10 to i8*
  %52 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %10, i64 0, i32 0
  %53 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %10, i64 0, i32 1
  %54 = bitcast %struct.FT_Vector_* %11 to i8*
  %55 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %11, i64 0, i32 0
  %56 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %11, i64 0, i32 1
  %57 = getelementptr inbounds %struct.FT_Outline_Funcs_, %struct.FT_Outline_Funcs_* %1, i64 0, i32 3
  %58 = bitcast %struct.FT_Vector_* %7 to i8*
  %59 = bitcast %struct.FT_Vector_* %8 to i8*
  %60 = bitcast %struct.FT_Vector_* %9 to i8*
  %61 = bitcast %struct.FT_Vector_* %10 to i8*
  br label %62

62:                                               ; preds = %29, %247
  %63 = phi i64 [ 0, %29 ], [ %249, %247 ]
  %64 = phi i64 [ 0, %29 ], [ %248, %247 ]
  %65 = load i16*, i16** %32, align 8
  %66 = getelementptr inbounds i16, i16* %65, i64 %63
  %67 = load i16, i16* %66, align 2
  %68 = sext i16 %67 to i64
  %69 = icmp slt i16 %67, 0
  br i1 %69, label %253, label %70

70:                                               ; preds = %62
  %71 = load %struct.FT_Vector_*, %struct.FT_Vector_** %33, align 8
  %72 = sext i16 %67 to i64
  %73 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %71, i64 %72
  %74 = and i64 %64, 4294967295
  %75 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %71, i64 %74
  %76 = bitcast %struct.FT_Vector_* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 %76, i64 16, i1 false)
  %77 = load i64, i64* %17, align 8
  %78 = shl i64 %77, %34
  %79 = sub nsw i64 %78, %25
  store i64 %79, i64* %17, align 8
  %80 = load i64, i64* %18, align 8
  %81 = shl i64 %80, %34
  %82 = sub nsw i64 %81, %25
  store i64 %82, i64* %18, align 8
  %83 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %71, i64 %72, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %71, i64 %72, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = shl i64 %84, %34
  %88 = sub nsw i64 %87, %25
  %89 = shl i64 %86, %34
  %90 = sub nsw i64 %89, %25
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* nonnull align 8 %15, i64 16, i1 false)
  %91 = load i8*, i8** %35, align 8
  %92 = getelementptr inbounds i8, i8* %91, i64 %74
  %93 = load i8, i8* %92, align 1
  %94 = and i8 %93, 3
  switch i8 %94, label %111 [
    i8 2, label %253
    i8 0, label %95
  ]

95:                                               ; preds = %70
  %96 = getelementptr inbounds i8, i8* %91, i64 %72
  %97 = load i8, i8* %96, align 1
  %98 = and i8 %97, 3
  %99 = icmp eq i8 %98, 1
  br i1 %99, label %100, label %102

100:                                              ; preds = %95
  store i64 %88, i64* %17, align 8
  store i64 %90, i64* %18, align 8
  %101 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %73, i64 -1
  br label %107

102:                                              ; preds = %95
  %103 = add nsw i64 %88, %79
  %104 = sdiv i64 %103, 2
  store i64 %104, i64* %17, align 8
  %105 = add nsw i64 %90, %82
  %106 = sdiv i64 %105, 2
  store i64 %106, i64* %18, align 8
  br label %107

107:                                              ; preds = %102, %100
  %108 = phi %struct.FT_Vector_* [ %101, %100 ], [ %73, %102 ]
  %109 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %75, i64 -1
  %110 = getelementptr inbounds i8, i8* %92, i64 -1
  br label %111

111:                                              ; preds = %70, %107
  %112 = phi %struct.FT_Vector_* [ %109, %107 ], [ %75, %70 ]
  %113 = phi %struct.FT_Vector_* [ %108, %107 ], [ %73, %70 ]
  %114 = phi i8* [ %110, %107 ], [ %92, %70 ]
  %115 = load i32 (%struct.FT_Vector_*, i8*)*, i32 (%struct.FT_Vector_*, i8*)** %36, align 8
  %116 = call i32 %115(%struct.FT_Vector_* nonnull %5, i8* %2) #16
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %254

118:                                              ; preds = %111
  %119 = icmp ult %struct.FT_Vector_* %112, %113
  br i1 %119, label %120, label %236

120:                                              ; preds = %118, %145
  %121 = phi i8* [ %147, %145 ], [ %114, %118 ]
  %122 = phi %struct.FT_Vector_* [ %146, %145 ], [ %112, %118 ]
  %123 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %122, i64 1
  %124 = getelementptr inbounds i8, i8* %121, i64 1
  %125 = load i8, i8* %124, align 1
  %126 = and i8 %125, 3
  %127 = zext i8 %126 to i32
  switch i32 %127, label %193 [
    i32 1, label %128
    i32 0, label %149
  ]

128:                                              ; preds = %120
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #16
  %129 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %123, i64 0, i32 0
  %130 = load i64, i64* %129, align 8
  %131 = shl i64 %130, %34
  %132 = sub nsw i64 %131, %25
  store i64 %132, i64* %45, align 8
  %133 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %122, i64 1, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = shl i64 %134, %34
  %136 = sub nsw i64 %135, %25
  store i64 %136, i64* %46, align 8
  %137 = load i32 (%struct.FT_Vector_*, i8*)*, i32 (%struct.FT_Vector_*, i8*)** %47, align 8
  %138 = call i32 %137(%struct.FT_Vector_* nonnull %6, i8* %2) #16
  %139 = icmp eq i32 %138, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #16
  br i1 %139, label %145, label %254

140:                                              ; preds = %220, %174
  %141 = phi i8* [ %40, %174 ], [ %51, %220 ]
  %142 = phi i8* [ %37, %174 ], [ %48, %220 ]
  %143 = phi %struct.FT_Vector_* [ %162, %174 ], [ %202, %220 ]
  %144 = phi i8* [ %163, %174 ], [ %221, %220 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142) #16
  br label %145

145:                                              ; preds = %140, %128
  %146 = phi %struct.FT_Vector_* [ %123, %128 ], [ %143, %140 ]
  %147 = phi i8* [ %124, %128 ], [ %144, %140 ]
  %148 = icmp ult %struct.FT_Vector_* %146, %113
  br i1 %148, label %120, label %236

149:                                              ; preds = %120
  %150 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %123, i64 0, i32 0
  %151 = load i64, i64* %150, align 8
  %152 = shl i64 %151, %34
  %153 = sub nsw i64 %152, %25
  store i64 %153, i64* %13, align 8
  %154 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %122, i64 1, i32 1
  %155 = load i64, i64* %154, align 8
  %156 = shl i64 %155, %34
  %157 = sub nsw i64 %156, %25
  store i64 %157, i64* %14, align 8
  %158 = icmp ult %struct.FT_Vector_* %123, %113
  br i1 %158, label %159, label %190

159:                                              ; preds = %149, %188
  %160 = phi i8* [ %163, %188 ], [ %124, %149 ]
  %161 = phi %struct.FT_Vector_* [ %162, %188 ], [ %123, %149 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #16
  %162 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %161, i64 1
  %163 = getelementptr inbounds i8, i8* %160, i64 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 16, i1 false)
  %164 = load i8, i8* %163, align 1
  %165 = and i8 %164, 3
  %166 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %162, i64 0, i32 0
  %167 = load i64, i64* %166, align 8
  %168 = shl i64 %167, %34
  %169 = sub nsw i64 %168, %25
  store i64 %169, i64* %38, align 8
  %170 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %161, i64 1, i32 1
  %171 = load i64, i64* %170, align 8
  %172 = shl i64 %171, %34
  %173 = sub nsw i64 %172, %25
  store i64 %173, i64* %39, align 8
  switch i8 %165, label %242 [
    i8 1, label %174
    i8 0, label %178
  ]

174:                                              ; preds = %159
  %175 = load i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, i8*)*, i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, i8*)** %43, align 8
  %176 = call i32 %175(%struct.FT_Vector_* nonnull %4, %struct.FT_Vector_* nonnull %7, i8* %2) #16
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %140, label %242

178:                                              ; preds = %159
  %179 = load i64, i64* %13, align 8
  %180 = add nsw i64 %179, %169
  %181 = sdiv i64 %180, 2
  store i64 %181, i64* %41, align 8
  %182 = load i64, i64* %14, align 8
  %183 = add nsw i64 %182, %173
  %184 = sdiv i64 %183, 2
  store i64 %184, i64* %42, align 8
  %185 = load i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, i8*)*, i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, i8*)** %43, align 8
  %186 = call i32 %185(%struct.FT_Vector_* nonnull %4, %struct.FT_Vector_* nonnull %8, i8* %2) #16
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %242

188:                                              ; preds = %178
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* nonnull align 8 %37, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #16
  %189 = icmp ult %struct.FT_Vector_* %162, %113
  br i1 %189, label %159, label %190

190:                                              ; preds = %149, %188
  %191 = load i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, i8*)*, i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, i8*)** %43, align 8
  %192 = call i32 %191(%struct.FT_Vector_* nonnull %4, %struct.FT_Vector_* nonnull %5, i8* %2) #16
  br label %239

193:                                              ; preds = %120
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #16
  %194 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %122, i64 2
  %195 = icmp ugt %struct.FT_Vector_* %194, %113
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 16, i1 false)
  br i1 %195, label %242, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds i8, i8* %121, i64 2
  %198 = load i8, i8* %197, align 1
  %199 = and i8 %198, 3
  %200 = icmp eq i8 %199, 2
  br i1 %200, label %201, label %242

201:                                              ; preds = %196
  %202 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %122, i64 3
  %203 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %122, i64 1, i32 0
  %204 = load i64, i64* %203, align 8
  %205 = shl i64 %204, %34
  %206 = sub nsw i64 %205, %25
  store i64 %206, i64* %49, align 8
  %207 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %122, i64 1, i32 1
  %208 = load i64, i64* %207, align 8
  %209 = shl i64 %208, %34
  %210 = sub nsw i64 %209, %25
  store i64 %210, i64* %50, align 8
  %211 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %122, i64 2, i32 0
  %212 = load i64, i64* %211, align 8
  %213 = shl i64 %212, %34
  %214 = sub nsw i64 %213, %25
  store i64 %214, i64* %52, align 8
  %215 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %122, i64 2, i32 1
  %216 = load i64, i64* %215, align 8
  %217 = shl i64 %216, %34
  %218 = sub nsw i64 %217, %25
  store i64 %218, i64* %53, align 8
  %219 = icmp ugt %struct.FT_Vector_* %202, %113
  br i1 %219, label %233, label %220

220:                                              ; preds = %201
  %221 = getelementptr inbounds i8, i8* %121, i64 3
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #16
  %222 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %202, i64 0, i32 0
  %223 = load i64, i64* %222, align 8
  %224 = shl i64 %223, %34
  %225 = sub nsw i64 %224, %25
  store i64 %225, i64* %55, align 8
  %226 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %122, i64 3, i32 1
  %227 = load i64, i64* %226, align 8
  %228 = shl i64 %227, %34
  %229 = sub nsw i64 %228, %25
  store i64 %229, i64* %56, align 8
  %230 = load i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, i8*)*, i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, i8*)** %57, align 8
  %231 = call i32 %230(%struct.FT_Vector_* nonnull %9, %struct.FT_Vector_* nonnull %10, %struct.FT_Vector_* nonnull %11, i8* %2) #16
  %232 = icmp eq i32 %231, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #16
  br i1 %232, label %140, label %242

233:                                              ; preds = %201
  %234 = load i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, i8*)*, i32 (%struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, i8*)** %57, align 8
  %235 = call i32 %234(%struct.FT_Vector_* nonnull %9, %struct.FT_Vector_* nonnull %10, %struct.FT_Vector_* nonnull %5, i8* %2) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #16
  br label %239

236:                                              ; preds = %145, %118
  %237 = load i32 (%struct.FT_Vector_*, i8*)*, i32 (%struct.FT_Vector_*, i8*)** %47, align 8
  %238 = call i32 %237(%struct.FT_Vector_* nonnull %5, i8* %2) #16
  br label %239

239:                                              ; preds = %233, %236, %190
  %240 = phi i32 [ %192, %190 ], [ %238, %236 ], [ %235, %233 ]
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %247, label %254

242:                                              ; preds = %193, %196, %220, %174, %178, %159
  %243 = phi i8* [ %40, %159 ], [ %40, %178 ], [ %51, %193 ], [ %51, %196 ], [ %51, %220 ], [ %40, %174 ]
  %244 = phi i8* [ %37, %159 ], [ %37, %178 ], [ %48, %193 ], [ %48, %196 ], [ %48, %220 ], [ %37, %174 ]
  %245 = phi i32 [ %186, %178 ], [ 0, %159 ], [ 0, %193 ], [ 0, %196 ], [ %231, %220 ], [ %176, %174 ]
  %246 = phi i1 [ false, %178 ], [ true, %159 ], [ true, %193 ], [ true, %196 ], [ false, %220 ], [ false, %174 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %243) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %244) #16
  br i1 %246, label %253, label %254

247:                                              ; preds = %239
  %248 = add nsw i64 %68, 1
  %249 = add nuw nsw i64 %63, 1
  %250 = load i16, i16* %26, align 8
  %251 = sext i16 %250 to i64
  %252 = icmp slt i64 %249, %251
  br i1 %252, label %62, label %254

253:                                              ; preds = %70, %62, %242
  br label %254

254:                                              ; preds = %247, %111, %239, %128, %242, %253, %23, %21, %3
  %255 = phi i32 [ 20, %3 ], [ 6, %21 ], [ 0, %23 ], [ 20, %253 ], [ %245, %242 ], [ %138, %128 ], [ %240, %239 ], [ %116, %111 ], [ 0, %247 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #16
  ret i32 %255
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Outline_New(%struct.FT_LibraryRec_* readonly, i32, i32, %struct.FT_Outline_*) local_unnamed_addr #0 {
  %5 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %5, label %109, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 0
  %8 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %7, align 8
  %9 = icmp ne %struct.FT_Outline_* %3, null
  %10 = icmp ne %struct.FT_MemoryRec_* %8, null
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %109

12:                                               ; preds = %6
  %13 = bitcast %struct.FT_Outline_* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 40, i1 false)
  %14 = icmp slt i32 %2, 0
  %15 = icmp ugt i32 %2, %1
  %16 = or i1 %14, %15
  br i1 %16, label %109, label %17

17:                                               ; preds = %12
  %18 = icmp ugt i32 %1, 32767
  br i1 %18, label %109, label %19

19:                                               ; preds = %17
  %20 = zext i32 %1 to i64
  %21 = icmp eq i32 %1, 0
  br i1 %21, label %31, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %8, i64 0, i32 1
  %24 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %23, align 8
  %25 = shl nuw nsw i64 %20, 4
  %26 = tail call i8* %24(%struct.FT_MemoryRec_* nonnull %8, i64 %25) #16
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %34

28:                                               ; preds = %22
  %29 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 2
  %30 = bitcast %struct.FT_Vector_** %29 to i8**
  br label %76

31:                                               ; preds = %19
  %32 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 2
  %33 = bitcast %struct.FT_Vector_** %32 to i8**
  store i8* null, i8** %33, align 8
  br label %43

34:                                               ; preds = %22
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %26, i8 0, i64 %25, i1 false) #16
  %35 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 2
  %36 = bitcast %struct.FT_Vector_** %35 to i8**
  store i8* %26, i8** %36, align 8
  %37 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %23, align 8
  %38 = tail call i8* %37(%struct.FT_MemoryRec_* nonnull %8, i64 %20) #16
  %39 = icmp eq i8* %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %38, i8 0, i64 %20, i1 false) #16
  br label %43

41:                                               ; preds = %34
  %42 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 3
  br label %76

43:                                               ; preds = %31, %40
  %44 = phi %struct.FT_Vector_** [ %32, %31 ], [ %35, %40 ]
  %45 = phi i8** [ %33, %31 ], [ %36, %40 ]
  %46 = phi i8* [ null, %31 ], [ %38, %40 ]
  %47 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 3
  store i8* %46, i8** %47, align 8
  %48 = sext i32 %2 to i64
  %49 = icmp eq i32 %2, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %43
  %51 = icmp sgt i32 %2, 1073741823
  br i1 %51, label %70, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %8, i64 0, i32 1
  %54 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %53, align 8
  %55 = shl nsw i64 %48, 1
  %56 = tail call i8* %54(%struct.FT_MemoryRec_* nonnull %8, i64 %55) #16
  %57 = icmp eq i8* %56, null
  br i1 %57, label %73, label %58

58:                                               ; preds = %52
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %56, i8 0, i64 %55, i1 false) #16
  br label %59

59:                                               ; preds = %58, %43
  %60 = phi i8* [ null, %43 ], [ %56, %58 ]
  %61 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 4
  %62 = bitcast i16** %61 to i8**
  store i8* %60, i8** %62, align 8
  %63 = trunc i32 %1 to i16
  %64 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 1
  store i16 %63, i16* %64, align 2
  %65 = trunc i32 %2 to i16
  %66 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 0
  store i16 %65, i16* %66, align 8
  %67 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 5
  %68 = load i32, i32* %67, align 8
  %69 = or i32 %68, 1
  store i32 %69, i32* %67, align 8
  br label %109

70:                                               ; preds = %50
  %71 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 4
  %72 = bitcast i16** %71 to i8**
  br label %76

73:                                               ; preds = %52
  %74 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 4
  %75 = bitcast i16** %74 to i8**
  br label %76

76:                                               ; preds = %28, %41, %73, %70
  %77 = phi i8** [ %30, %28 ], [ %42, %41 ], [ %75, %73 ], [ %72, %70 ]
  %78 = phi i8** [ %30, %28 ], [ %36, %41 ], [ %45, %73 ], [ %45, %70 ]
  %79 = phi %struct.FT_Vector_** [ %29, %28 ], [ %35, %41 ], [ %44, %73 ], [ %44, %70 ]
  %80 = phi i32 [ 64, %28 ], [ 64, %41 ], [ 64, %73 ], [ 10, %70 ]
  store i8* null, i8** %77, align 8
  %81 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 5
  %82 = load i32, i32* %81, align 8
  %83 = or i32 %82, 1
  store i32 %83, i32* %81, align 8
  %84 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %7, align 8
  %85 = icmp eq %struct.FT_MemoryRec_* %84, null
  br i1 %85, label %109, label %86

86:                                               ; preds = %76
  %87 = load i8*, i8** %78, align 8
  %88 = icmp eq i8* %87, null
  br i1 %88, label %92, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %84, i64 0, i32 2
  %91 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %90, align 8
  tail call void %91(%struct.FT_MemoryRec_* nonnull %84, i8* nonnull %87) #16
  br label %92

92:                                               ; preds = %89, %86
  store %struct.FT_Vector_* null, %struct.FT_Vector_** %79, align 8
  %93 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 3
  %94 = load i8*, i8** %93, align 8
  %95 = icmp eq i8* %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %84, i64 0, i32 2
  %98 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %97, align 8
  tail call void %98(%struct.FT_MemoryRec_* nonnull %84, i8* nonnull %94) #16
  br label %99

99:                                               ; preds = %96, %92
  store i8* null, i8** %93, align 8
  %100 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %3, i64 0, i32 4
  %101 = bitcast i16** %100 to i8**
  %102 = load i8*, i8** %101, align 8
  %103 = icmp eq i8* %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %84, i64 0, i32 2
  %106 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %105, align 8
  tail call void %106(%struct.FT_MemoryRec_* nonnull %84, i8* nonnull %102) #16
  br label %107

107:                                              ; preds = %99, %104
  %108 = bitcast %struct.FT_Outline_* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 0, i64 40, i1 false)
  br label %109

109:                                              ; preds = %107, %76, %17, %12, %6, %4, %59
  %110 = phi i32 [ 0, %59 ], [ 33, %4 ], [ 6, %6 ], [ 6, %12 ], [ 10, %17 ], [ %80, %76 ], [ %80, %107 ]
  ret i32 %110
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Outline_Done(%struct.FT_LibraryRec_* readonly, %struct.FT_Outline_*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %3, label %41, label %4

4:                                                ; preds = %2
  %5 = icmp eq %struct.FT_Outline_* %1, null
  br i1 %5, label %41, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 0
  %8 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %7, align 8
  %9 = icmp eq %struct.FT_MemoryRec_* %8, null
  br i1 %9, label %41, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 5
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 2
  %17 = bitcast %struct.FT_Vector_** %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %8, i64 0, i32 2
  %22 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %21, align 8
  tail call void %22(%struct.FT_MemoryRec_* nonnull %8, i8* nonnull %18) #16
  br label %23

23:                                               ; preds = %15, %20
  store %struct.FT_Vector_* null, %struct.FT_Vector_** %16, align 8
  %24 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 3
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %8, i64 0, i32 2
  %29 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %28, align 8
  tail call void %29(%struct.FT_MemoryRec_* nonnull %8, i8* nonnull %25) #16
  br label %30

30:                                               ; preds = %23, %27
  store i8* null, i8** %24, align 8
  %31 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 4
  %32 = bitcast i16** %31 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %8, i64 0, i32 2
  %37 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %36, align 8
  tail call void %37(%struct.FT_MemoryRec_* nonnull %8, i8* nonnull %33) #16
  br label %38

38:                                               ; preds = %30, %35
  store i16* null, i16** %31, align 8
  br label %39

39:                                               ; preds = %10, %38
  %40 = bitcast %struct.FT_Outline_* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 40, i1 false)
  br label %41

41:                                               ; preds = %6, %4, %2, %39
  %42 = phi i32 [ 0, %39 ], [ 33, %2 ], [ 20, %4 ], [ 6, %6 ]
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Outline_Copy(%struct.FT_Outline_* readonly, %struct.FT_Outline_*) local_unnamed_addr #0 {
  %3 = icmp ne %struct.FT_Outline_* %0, null
  %4 = icmp ne %struct.FT_Outline_* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %58

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 1
  %8 = load i16, i16* %7, align 2
  %9 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 1
  %10 = load i16, i16* %9, align 2
  %11 = icmp eq i16 %8, %10
  br i1 %11, label %12, label %58

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 0
  %14 = load i16, i16* %13, align 8
  %15 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 0
  %16 = load i16, i16* %15, align 8
  %17 = icmp eq i16 %14, %16
  br i1 %17, label %18, label %58

18:                                               ; preds = %12
  %19 = icmp eq %struct.FT_Outline_* %0, %1
  br i1 %19, label %58, label %20

20:                                               ; preds = %18
  %21 = icmp eq i16 %8, 0
  br i1 %21, label %38, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 2
  %24 = bitcast %struct.FT_Vector_** %23 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 2
  %27 = bitcast %struct.FT_Vector_** %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = sext i16 %8 to i64
  %30 = shl nsw i64 %29, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %28, i64 %30, i1 false)
  %31 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 3
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 3
  %34 = load i8*, i8** %33, align 8
  %35 = load i16, i16* %7, align 2
  %36 = sext i16 %35 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %34, i64 %36, i1 false)
  %37 = load i16, i16* %13, align 8
  br label %38

38:                                               ; preds = %20, %22
  %39 = phi i16 [ %14, %20 ], [ %37, %22 ]
  %40 = icmp eq i16 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 4
  %43 = bitcast i16** %42 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 4
  %46 = bitcast i16** %45 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = sext i16 %39 to i64
  %49 = shl nsw i64 %48, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %44, i8* align 2 %47, i64 %49, i1 false)
  br label %50

50:                                               ; preds = %38, %41
  %51 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 5
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 1
  %54 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 5
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2
  %57 = or i32 %56, %53
  store i32 %57, i32* %51, align 8
  br label %58

58:                                               ; preds = %18, %6, %12, %2, %50
  %59 = phi i32 [ 0, %50 ], [ 20, %2 ], [ 6, %12 ], [ 6, %6 ], [ 0, %18 ]
  ret i32 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_Outline_Reverse(%struct.FT_Outline_*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.FT_Outline_* %0, null
  br i1 %2, label %59, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 0
  %5 = load i16, i16* %4, align 8
  %6 = icmp sgt i16 %5, 0
  br i1 %6, label %7, label %55

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 4
  %9 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 2
  %10 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 3
  br label %11

11:                                               ; preds = %7, %48
  %12 = phi i16 [ 0, %7 ], [ %50, %48 ]
  %13 = phi i64 [ 0, %7 ], [ %49, %48 ]
  %14 = load i16*, i16** %8, align 8
  %15 = zext i16 %12 to i64
  %16 = getelementptr inbounds i16, i16* %14, i64 %15
  %17 = load i16, i16* %16, align 2
  %18 = sext i16 %17 to i64
  %19 = load %struct.FT_Vector_*, %struct.FT_Vector_** %9, align 8
  %20 = icmp slt i64 %13, %18
  br i1 %20, label %21, label %48

21:                                               ; preds = %11
  %22 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %19, i64 %18
  %23 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %19, i64 %13
  br label %24

24:                                               ; preds = %21, %24
  %25 = phi %struct.FT_Vector_* [ %33, %24 ], [ %22, %21 ]
  %26 = phi %struct.FT_Vector_* [ %32, %24 ], [ %23, %21 ]
  %27 = bitcast %struct.FT_Vector_* %26 to <2 x i64>*
  %28 = load <2 x i64>, <2 x i64>* %27, align 8
  %29 = bitcast %struct.FT_Vector_* %26 to i8*
  %30 = bitcast %struct.FT_Vector_* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 16, i1 false)
  %31 = bitcast %struct.FT_Vector_* %25 to <2 x i64>*
  store <2 x i64> %28, <2 x i64>* %31, align 8
  %32 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %26, i64 1
  %33 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %25, i64 -1
  %34 = icmp ult %struct.FT_Vector_* %32, %33
  br i1 %34, label %24, label %35

35:                                               ; preds = %24
  %36 = load i8*, i8** %10, align 8
  br i1 %20, label %37, label %48

37:                                               ; preds = %35
  %38 = getelementptr inbounds i8, i8* %36, i64 %18
  %39 = getelementptr inbounds i8, i8* %36, i64 %13
  br label %40

40:                                               ; preds = %37, %40
  %41 = phi i8* [ %46, %40 ], [ %38, %37 ]
  %42 = phi i8* [ %45, %40 ], [ %39, %37 ]
  %43 = load i8, i8* %42, align 1
  %44 = load i8, i8* %41, align 1
  store i8 %44, i8* %42, align 1
  store i8 %43, i8* %41, align 1
  %45 = getelementptr inbounds i8, i8* %42, i64 1
  %46 = getelementptr inbounds i8, i8* %41, i64 -1
  %47 = icmp ult i8* %45, %46
  br i1 %47, label %40, label %48

48:                                               ; preds = %40, %11, %35
  %49 = add nsw i64 %18, 1
  %50 = add i16 %12, 1
  %51 = zext i16 %50 to i32
  %52 = load i16, i16* %4, align 8
  %53 = sext i16 %52 to i32
  %54 = icmp slt i32 %51, %53
  br i1 %54, label %11, label %55

55:                                               ; preds = %48, %3
  %56 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 5
  %57 = load i32, i32* %56, align 8
  %58 = xor i32 %57, 4
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %1, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Outline_Render(%struct.FT_LibraryRec_* readonly, %struct.FT_Outline_*, %struct.FT_Raster_Params_*) local_unnamed_addr #0 {
  %4 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %4, label %117, label %5

5:                                                ; preds = %3
  %6 = icmp eq %struct.FT_Outline_* %1, null
  br i1 %6, label %117, label %7

7:                                                ; preds = %5
  %8 = icmp eq %struct.FT_Raster_Params_* %2, null
  br i1 %8, label %117, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 1
  %11 = load i16, i16* %10, align 2
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %46, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 2
  %15 = load %struct.FT_Vector_*, %struct.FT_Vector_** %14, align 8
  %16 = sext i16 %11 to i64
  %17 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %15, i64 %16
  %18 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %15, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %15, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp sgt i16 %11, 1
  br i1 %22, label %23, label %46

23:                                               ; preds = %13
  %24 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %15, i64 1
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi %struct.FT_Vector_* [ %44, %25 ], [ %24, %23 ]
  %27 = phi %struct.FT_Vector_* [ %26, %25 ], [ %15, %23 ]
  %28 = phi i64 [ %43, %25 ], [ %21, %23 ]
  %29 = phi i64 [ %37, %25 ], [ %19, %23 ]
  %30 = phi i64 [ %41, %25 ], [ %21, %23 ]
  %31 = phi i64 [ %35, %25 ], [ %19, %23 ]
  %32 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %26, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp slt i64 %33, %31
  %35 = select i1 %34, i64 %33, i64 %31
  %36 = icmp sgt i64 %33, %29
  %37 = select i1 %36, i64 %33, i64 %29
  %38 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %27, i64 1, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = icmp slt i64 %39, %30
  %41 = select i1 %40, i64 %39, i64 %30
  %42 = icmp sgt i64 %39, %28
  %43 = select i1 %42, i64 %39, i64 %28
  %44 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %26, i64 1
  %45 = icmp ult %struct.FT_Vector_* %44, %17
  br i1 %45, label %25, label %46

46:                                               ; preds = %25, %9, %13
  %47 = phi i64 [ 0, %9 ], [ %19, %13 ], [ %35, %25 ]
  %48 = phi i64 [ 0, %9 ], [ %21, %13 ], [ %41, %25 ]
  %49 = phi i64 [ 0, %9 ], [ %19, %13 ], [ %37, %25 ]
  %50 = phi i64 [ 0, %9 ], [ %21, %13 ], [ %43, %25 ]
  %51 = icmp slt i64 %47, -16777216
  %52 = icmp slt i64 %48, -16777216
  %53 = or i1 %51, %52
  %54 = icmp sgt i64 %49, 16777216
  %55 = or i1 %53, %54
  %56 = icmp sgt i64 %50, 16777216
  %57 = or i1 %55, %56
  br i1 %57, label %117, label %58

58:                                               ; preds = %46
  %59 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 7
  %60 = load %struct.FT_RendererRec_*, %struct.FT_RendererRec_** %59, align 8
  %61 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 6, i32 0
  %62 = bitcast %struct.FT_ListNodeRec_** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %2, i64 0, i32 1
  %65 = bitcast i8** %64 to %struct.FT_Outline_**
  store %struct.FT_Outline_* %1, %struct.FT_Outline_** %65, align 8
  %66 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %2, i64 0, i32 2
  %67 = load i32, i32* %66, align 8
  %68 = and i32 %67, 6
  %69 = icmp eq i32 %68, 2
  br i1 %69, label %70, label %81

70:                                               ; preds = %58
  %71 = ashr i64 %47, 6
  %72 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %2, i64 0, i32 8, i32 0
  store i64 %71, i64* %72, align 8
  %73 = ashr i64 %48, 6
  %74 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %2, i64 0, i32 8, i32 1
  store i64 %73, i64* %74, align 8
  %75 = add nsw i64 %49, 63
  %76 = ashr i64 %75, 6
  %77 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %2, i64 0, i32 8, i32 2
  store i64 %76, i64* %77, align 8
  %78 = add nsw i64 %50, 63
  %79 = ashr i64 %78, 6
  %80 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %2, i64 0, i32 8, i32 3
  store i64 %79, i64* %80, align 8
  br label %81

81:                                               ; preds = %58, %70
  %82 = icmp eq %struct.FT_RendererRec_* %60, null
  br i1 %82, label %117, label %83

83:                                               ; preds = %81, %114
  %84 = phi %struct.FT_RendererRec_* [ %106, %114 ], [ %60, %81 ]
  %85 = phi i64 [ %115, %114 ], [ %63, %81 ]
  %86 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %84, i64 0, i32 5
  %87 = load i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)** %86, align 8
  %88 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %84, i64 0, i32 4
  %89 = load %struct.FT_RasterRec_*, %struct.FT_RasterRec_** %88, align 8
  %90 = tail call i32 %87(%struct.FT_RasterRec_* %89, %struct.FT_Raster_Params_* nonnull %2) #16
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %117, label %92

92:                                               ; preds = %83
  %93 = and i32 %90, 255
  %94 = icmp eq i32 %93, 19
  br i1 %94, label %95, label %117

95:                                               ; preds = %92
  %96 = icmp eq i64 %85, 0
  %97 = inttoptr i64 %85 to %struct.FT_ListNodeRec_*
  %98 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %97, i64 0, i32 1
  %99 = select i1 %96, %struct.FT_ListNodeRec_** %61, %struct.FT_ListNodeRec_** %98
  %100 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %99, align 8
  %101 = icmp eq %struct.FT_ListNodeRec_* %100, null
  br i1 %101, label %117, label %102

102:                                              ; preds = %95, %110
  %103 = phi %struct.FT_ListNodeRec_* [ %112, %110 ], [ %100, %95 ]
  %104 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %103, i64 0, i32 2
  %105 = bitcast i8** %104 to %struct.FT_RendererRec_**
  %106 = load %struct.FT_RendererRec_*, %struct.FT_RendererRec_** %105, align 8
  %107 = getelementptr inbounds %struct.FT_RendererRec_, %struct.FT_RendererRec_* %106, i64 0, i32 2
  %108 = load i32, i32* %107, align 8
  %109 = icmp eq i32 %108, 1869968492
  br i1 %109, label %114, label %110

110:                                              ; preds = %102
  %111 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %103, i64 0, i32 1
  %112 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %111, align 8
  %113 = icmp eq %struct.FT_ListNodeRec_* %112, null
  br i1 %113, label %117, label %102

114:                                              ; preds = %102
  %115 = ptrtoint %struct.FT_ListNodeRec_* %103 to i64
  %116 = icmp eq %struct.FT_RendererRec_* %106, null
  br i1 %116, label %117, label %83

117:                                              ; preds = %95, %92, %83, %114, %110, %81, %46, %7, %5, %3
  %118 = phi i32 [ 33, %3 ], [ 20, %5 ], [ 6, %7 ], [ 20, %46 ], [ 19, %81 ], [ %90, %110 ], [ %90, %95 ], [ %90, %92 ], [ 0, %83 ], [ %90, %114 ]
  ret i32 %118
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Outline_Get_Bitmap(%struct.FT_LibraryRec_* readonly, %struct.FT_Outline_*, %struct.FT_Bitmap_*) local_unnamed_addr #0 {
  %4 = alloca %struct.FT_Raster_Params_, align 8
  %5 = bitcast %struct.FT_Raster_Params_* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %5) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 96, i1 false)
  %6 = icmp eq %struct.FT_Bitmap_* %2, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %4, i64 0, i32 0
  store %struct.FT_Bitmap_* %2, %struct.FT_Bitmap_** %8, align 8
  %9 = getelementptr inbounds %struct.FT_Raster_Params_, %struct.FT_Raster_Params_* %4, i64 0, i32 2
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %2, i64 0, i32 5
  %11 = load i8, i8* %10, align 2
  switch i8 %11, label %13 [
    i8 2, label %12
    i8 5, label %12
    i8 6, label %12
  ]

12:                                               ; preds = %7, %7, %7
  store i32 1, i32* %9, align 8
  br label %13

13:                                               ; preds = %7, %12
  %14 = call i32 @FT_Outline_Render(%struct.FT_LibraryRec_* %0, %struct.FT_Outline_* %1, %struct.FT_Raster_Params_* nonnull %4)
  br label %15

15:                                               ; preds = %3, %13
  %16 = phi i32 [ %14, %13 ], [ 6, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %5) #16
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Outline_Embolden(%struct.FT_Outline_* readonly, i64) local_unnamed_addr #0 {
  %3 = tail call i32 @FT_Outline_EmboldenXY(%struct.FT_Outline_* %0, i64 %1, i64 %1)
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Outline_EmboldenXY(%struct.FT_Outline_* readonly, i64, i64) local_unnamed_addr #0 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %struct.FT_Vector_*
  %6 = icmp eq %struct.FT_Outline_* %0, null
  br i1 %6, label %284, label %7

7:                                                ; preds = %3
  %8 = sdiv i64 %1, 2
  %9 = sdiv i64 %2, 2
  %10 = add i64 %1, 1
  %11 = icmp ult i64 %10, 3
  %12 = add i64 %2, 1
  %13 = icmp ult i64 %12, 3
  %14 = and i1 %11, %13
  br i1 %14, label %284, label %15

15:                                               ; preds = %7
  %16 = tail call i32 @FT_Outline_Get_Orientation(%struct.FT_Outline_* nonnull %0)
  %17 = icmp eq i32 %16, 2
  br i1 %17, label %18, label %23

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 0
  %20 = load i16, i16* %19, align 8
  %21 = icmp eq i16 %20, 0
  %22 = select i1 %21, i32 0, i32 6
  br label %284

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 2
  %25 = load %struct.FT_Vector_*, %struct.FT_Vector_** %24, align 8
  %26 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 0
  %27 = load i16, i16* %26, align 8
  %28 = icmp sgt i16 %27, 0
  br i1 %28, label %29, label %284

29:                                               ; preds = %23
  %30 = bitcast <2 x i64>* %4 to i8*
  %31 = getelementptr inbounds <2 x i64>, <2 x i64>* %4, i64 0, i64 0
  %32 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %5, i64 0, i32 1
  %33 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 4
  %34 = icmp eq i32 %16, 0
  %35 = shl i64 %8, 32
  %36 = ashr exact i64 %35, 32
  %37 = icmp slt i64 %1, -1
  %38 = sub nsw i64 0, %8
  %39 = select i1 %37, i64 %38, i64 %8
  %40 = shl i64 %9, 32
  %41 = ashr exact i64 %40, 32
  %42 = icmp slt i64 %2, -1
  %43 = sub nsw i64 0, %9
  %44 = select i1 %42, i64 %43, i64 %9
  %45 = bitcast <2 x i64>* %4 to i8*
  br label %46

46:                                               ; preds = %29, %278
  %47 = phi i16 [ %27, %29 ], [ %279, %278 ]
  %48 = phi i64 [ 0, %29 ], [ %281, %278 ]
  %49 = phi i32 [ 0, %29 ], [ %280, %278 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %45, i8 -86, i64 16, i1 false)
  %50 = load i16*, i16** %33, align 8
  %51 = getelementptr inbounds i16, i16* %50, i64 %48
  %52 = load i16, i16* %51, align 2
  %53 = sext i16 %52 to i32
  %54 = icmp eq i32 %49, %53
  %55 = icmp eq i16 %52, -1
  %56 = or i1 %54, %55
  br i1 %56, label %278, label %57

57:                                               ; preds = %46, %261
  %58 = phi i32 [ %269, %261 ], [ -1, %46 ]
  %59 = phi i32 [ %272, %261 ], [ %49, %46 ]
  %60 = phi i32 [ %268, %261 ], [ %53, %46 ]
  %61 = phi i64 [ %267, %261 ], [ 0, %46 ]
  %62 = phi i64 [ %266, %261 ], [ 0, %46 ]
  %63 = phi i64 [ %265, %261 ], [ 0, %46 ]
  %64 = phi i64 [ %264, %261 ], [ 0, %46 ]
  %65 = phi i64 [ %263, %261 ], [ 0, %46 ]
  %66 = phi i64 [ %262, %261 ], [ 0, %46 ]
  %67 = icmp eq i32 %59, %58
  br i1 %67, label %81, label %68

68:                                               ; preds = %57
  %69 = sext i32 %59 to i64
  %70 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %25, i64 %69, i32 0
  %71 = sext i32 %60 to i64
  %72 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %25, i64 %71, i32 0
  %73 = bitcast i64* %70 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8
  %75 = bitcast i64* %72 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 8
  %77 = sub nsw <2 x i64> %74, %76
  store <2 x i64> %77, <2 x i64>* %4, align 16
  %78 = call i32 @FT_Vector_NormLen(%struct.FT_Vector_* nonnull %5)
  %79 = zext i32 %78 to i64
  %80 = icmp eq i32 %78, 0
  br i1 %80, label %261, label %82

81:                                               ; preds = %57
  store i64 %63, i64* %31, align 16
  store i64 %64, i64* %32, align 8
  br label %82

82:                                               ; preds = %68, %81
  %83 = phi i64 [ %79, %68 ], [ %61, %81 ]
  %84 = icmp eq i64 %62, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %82
  %86 = load i64, i64* %31, align 16
  %87 = load i64, i64* %32, align 8
  br label %261

88:                                               ; preds = %82
  %89 = icmp slt i32 %58, 0
  %90 = select i1 %89, i64 %66, i64 %64
  %91 = select i1 %89, i64 %65, i64 %63
  %92 = select i1 %89, i64 %62, i64 %61
  %93 = select i1 %89, i32 %60, i32 %58
  %94 = load i64, i64* %31, align 16
  %95 = shl i64 %65, 32
  %96 = ashr exact i64 %95, 32
  %97 = shl i64 %94, 32
  %98 = ashr exact i64 %97, 32
  %99 = mul nsw i64 %98, %96
  %100 = ashr i64 %99, 63
  %101 = add nsw i64 %99, 32768
  %102 = add nsw i64 %101, %100
  %103 = shl i64 %102, 16
  %104 = ashr i64 %103, 32
  %105 = load i64, i64* %32, align 8
  %106 = shl i64 %66, 32
  %107 = ashr exact i64 %106, 32
  %108 = shl i64 %105, 32
  %109 = ashr exact i64 %108, 32
  %110 = mul nsw i64 %109, %107
  %111 = ashr i64 %110, 63
  %112 = add nsw i64 %110, 32768
  %113 = add nsw i64 %112, %111
  %114 = shl i64 %113, 16
  %115 = ashr i64 %114, 32
  %116 = add nsw i64 %115, %104
  %117 = icmp sgt i64 %116, -61440
  br i1 %117, label %118, label %241

118:                                              ; preds = %88
  %119 = add nsw i64 %116, 65536
  %120 = add nsw i64 %105, %66
  %121 = add nsw i64 %94, %65
  %122 = sub nsw i64 0, %120
  %123 = sub nsw i64 0, %121
  %124 = select i1 %34, i64 %121, i64 %123
  %125 = select i1 %34, i64 %122, i64 %120
  %126 = mul nsw i64 %98, %107
  %127 = ashr i64 %126, 63
  %128 = add nsw i64 %126, 32768
  %129 = add nsw i64 %128, %127
  %130 = shl i64 %129, 16
  %131 = ashr i64 %130, 32
  %132 = mul nsw i64 %109, %96
  %133 = ashr i64 %132, 63
  %134 = add nsw i64 %132, 32768
  %135 = add nsw i64 %134, %133
  %136 = shl i64 %135, 16
  %137 = ashr i64 %136, 32
  %138 = sub nsw i64 %131, %137
  %139 = sub nsw i64 0, %138
  %140 = select i1 %34, i64 %139, i64 %138
  %141 = icmp slt i64 %62, %83
  %142 = select i1 %141, i64 %62, i64 %83
  %143 = shl i64 %140, 32
  %144 = ashr exact i64 %143, 32
  %145 = mul nsw i64 %144, %36
  %146 = ashr i64 %145, 63
  %147 = add nsw i64 %145, 32768
  %148 = add nsw i64 %147, %146
  %149 = shl i64 %148, 16
  %150 = ashr i64 %149, 32
  %151 = shl i64 %142, 32
  %152 = ashr exact i64 %151, 32
  %153 = shl i64 %119, 32
  %154 = ashr exact i64 %153, 32
  %155 = mul nsw i64 %154, %152
  %156 = ashr i64 %155, 63
  %157 = add nsw i64 %155, 32768
  %158 = add nsw i64 %157, %156
  %159 = shl i64 %158, 16
  %160 = ashr i64 %159, 32
  %161 = icmp sgt i64 %150, %160
  %162 = icmp slt i64 %125, 0
  %163 = select i1 %162, i32 -1, i32 1
  br i1 %161, label %167, label %164

164:                                              ; preds = %118
  %165 = sub nsw i32 0, %163
  %166 = select i1 %37, i32 %165, i32 %163
  br label %180

167:                                              ; preds = %118
  %168 = icmp slt i64 %142, 0
  %169 = sub nsw i32 0, %163
  %170 = select i1 %168, i32 %169, i32 %163
  %171 = icmp slt i64 %140, 0
  %172 = sub nsw i64 0, %140
  %173 = sub nsw i32 0, %170
  %174 = select i1 %171, i32 %173, i32 %170
  %175 = select i1 %171, i64 %172, i64 %140
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %190, label %177

177:                                              ; preds = %167
  %178 = sub i64 0, %142
  %179 = select i1 %168, i64 %178, i64 %142
  br label %180

180:                                              ; preds = %164, %177
  %181 = phi i64 [ %179, %177 ], [ %39, %164 ]
  %182 = phi i64 [ %175, %177 ], [ %119, %164 ]
  %183 = phi i32 [ %174, %177 ], [ %166, %164 ]
  %184 = sub i64 0, %125
  %185 = select i1 %162, i64 %184, i64 %125
  %186 = mul i64 %185, %181
  %187 = lshr i64 %182, 1
  %188 = add i64 %187, %186
  %189 = udiv i64 %188, %182
  br label %190

190:                                              ; preds = %180, %167
  %191 = phi i32 [ %174, %167 ], [ %183, %180 ]
  %192 = phi i64 [ 2147483647, %167 ], [ %189, %180 ]
  %193 = icmp slt i32 %191, 0
  %194 = sub i64 0, %192
  %195 = select i1 %193, i64 %194, i64 %192
  %196 = mul nsw i64 %144, %41
  %197 = ashr i64 %196, 63
  %198 = add nsw i64 %196, 32768
  %199 = add nsw i64 %198, %197
  %200 = shl i64 %199, 16
  %201 = ashr i64 %200, 32
  %202 = icmp sgt i64 %201, %160
  %203 = icmp slt i64 %124, 0
  %204 = select i1 %203, i32 -1, i32 1
  br i1 %202, label %217, label %205

205:                                              ; preds = %190
  %206 = sub nsw i32 0, %204
  %207 = select i1 %42, i32 %206, i32 %204
  %208 = sub i64 0, %124
  %209 = select i1 %203, i64 %208, i64 %124
  %210 = mul i64 %209, %44
  %211 = lshr i64 %119, 1
  %212 = add i64 %211, %210
  %213 = udiv i64 %212, %119
  %214 = icmp slt i32 %207, 0
  %215 = sub nsw i64 0, %213
  %216 = select i1 %214, i64 %215, i64 %213
  br label %241

217:                                              ; preds = %190
  %218 = icmp slt i64 %142, 0
  %219 = sub nsw i32 0, %204
  %220 = select i1 %218, i32 %219, i32 %204
  %221 = icmp slt i64 %140, 0
  %222 = sub nsw i64 0, %140
  %223 = sub nsw i32 0, %220
  %224 = select i1 %221, i32 %223, i32 %220
  %225 = select i1 %221, i64 %222, i64 %140
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %236, label %227

227:                                              ; preds = %217
  %228 = sub i64 0, %142
  %229 = select i1 %218, i64 %228, i64 %142
  %230 = sub i64 0, %124
  %231 = select i1 %203, i64 %230, i64 %124
  %232 = mul i64 %231, %229
  %233 = lshr i64 %225, 1
  %234 = add i64 %233, %232
  %235 = udiv i64 %234, %225
  br label %236

236:                                              ; preds = %217, %227
  %237 = phi i64 [ %235, %227 ], [ 2147483647, %217 ]
  %238 = icmp slt i32 %224, 0
  %239 = sub i64 0, %237
  %240 = select i1 %238, i64 %239, i64 %237
  br label %241

241:                                              ; preds = %88, %205, %236
  %242 = phi i64 [ %216, %205 ], [ %240, %236 ], [ 0, %88 ]
  %243 = phi i64 [ %195, %205 ], [ %195, %236 ], [ 0, %88 ]
  %244 = icmp eq i32 %60, %59
  br i1 %244, label %261, label %245

245:                                              ; preds = %241
  %246 = add nsw i64 %243, %8
  %247 = add nsw i64 %242, %9
  br label %248

248:                                              ; preds = %245, %248
  %249 = phi i32 [ %60, %245 ], [ %259, %248 ]
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %25, i64 %250, i32 0
  %252 = load i64, i64* %251, align 8
  %253 = add nsw i64 %246, %252
  store i64 %253, i64* %251, align 8
  %254 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %25, i64 %250, i32 1
  %255 = load i64, i64* %254, align 8
  %256 = add nsw i64 %247, %255
  store i64 %256, i64* %254, align 8
  %257 = icmp slt i32 %249, %53
  %258 = add nsw i32 %249, 1
  %259 = select i1 %257, i32 %258, i32 %49
  %260 = icmp eq i32 %259, %59
  br i1 %260, label %261, label %248

261:                                              ; preds = %248, %241, %85, %68
  %262 = phi i64 [ %66, %68 ], [ %87, %85 ], [ %105, %241 ], [ %105, %248 ]
  %263 = phi i64 [ %65, %68 ], [ %86, %85 ], [ %94, %241 ], [ %94, %248 ]
  %264 = phi i64 [ %64, %68 ], [ %64, %85 ], [ %90, %241 ], [ %90, %248 ]
  %265 = phi i64 [ %63, %68 ], [ %63, %85 ], [ %91, %241 ], [ %91, %248 ]
  %266 = phi i64 [ %62, %68 ], [ %83, %85 ], [ %83, %241 ], [ %83, %248 ]
  %267 = phi i64 [ %61, %68 ], [ %61, %85 ], [ %92, %241 ], [ %92, %248 ]
  %268 = phi i32 [ %60, %68 ], [ %59, %85 ], [ %59, %241 ], [ %59, %248 ]
  %269 = phi i32 [ %58, %68 ], [ %58, %85 ], [ %93, %241 ], [ %93, %248 ]
  %270 = icmp slt i32 %59, %53
  %271 = add nsw i32 %59, 1
  %272 = select i1 %270, i32 %271, i32 %49
  %273 = icmp eq i32 %272, %268
  %274 = icmp eq i32 %268, %269
  %275 = or i1 %273, %274
  br i1 %275, label %276, label %57

276:                                              ; preds = %261
  %277 = load i16, i16* %26, align 8
  br label %278

278:                                              ; preds = %276, %46
  %279 = phi i16 [ %277, %276 ], [ %47, %46 ]
  %280 = add nsw i32 %53, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #16
  %281 = add nuw nsw i64 %48, 1
  %282 = sext i16 %279 to i64
  %283 = icmp slt i64 %281, %282
  br i1 %283, label %46, label %284

284:                                              ; preds = %278, %23, %18, %7, %3
  %285 = phi i32 [ 20, %3 ], [ 0, %7 ], [ %22, %18 ], [ 0, %23 ], [ 0, %278 ]
  ret i32 %285
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @FT_Outline_Get_Orientation(%struct.FT_Outline_* readonly) local_unnamed_addr #4 {
  %2 = icmp eq %struct.FT_Outline_* %0, null
  br i1 %2, label %125, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 1
  %5 = load i16, i16* %4, align 2
  %6 = icmp slt i16 %5, 1
  br i1 %6, label %125, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 2
  %9 = load %struct.FT_Vector_*, %struct.FT_Vector_** %8, align 8
  %10 = sext i16 %5 to i64
  %11 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %9, i64 %10
  %12 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %9, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %9, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i16 %5, 1
  br i1 %16, label %125, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %9, i64 1
  br label %19

19:                                               ; preds = %19, %17
  %20 = phi %struct.FT_Vector_* [ %38, %19 ], [ %18, %17 ]
  %21 = phi %struct.FT_Vector_* [ %20, %19 ], [ %9, %17 ]
  %22 = phi i64 [ %37, %19 ], [ %15, %17 ]
  %23 = phi i64 [ %31, %19 ], [ %13, %17 ]
  %24 = phi i64 [ %35, %19 ], [ %15, %17 ]
  %25 = phi i64 [ %29, %19 ], [ %13, %17 ]
  %26 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %20, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %27, %25
  %29 = select i1 %28, i64 %27, i64 %25
  %30 = icmp sgt i64 %27, %23
  %31 = select i1 %30, i64 %27, i64 %23
  %32 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %21, i64 1, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp slt i64 %33, %24
  %35 = select i1 %34, i64 %33, i64 %24
  %36 = icmp sgt i64 %33, %22
  %37 = select i1 %36, i64 %33, i64 %22
  %38 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %20, i64 1
  %39 = icmp ult %struct.FT_Vector_* %38, %11
  br i1 %39, label %19, label %40

40:                                               ; preds = %19
  %41 = icmp eq i64 %29, %31
  %42 = icmp eq i64 %37, %35
  %43 = or i1 %41, %42
  br i1 %43, label %125, label %44

44:                                               ; preds = %40
  %45 = icmp slt i64 %29, -16777216
  %46 = icmp slt i64 %35, -16777216
  %47 = or i1 %45, %46
  %48 = icmp sgt i64 %31, 16777216
  %49 = or i1 %48, %47
  %50 = icmp sgt i64 %37, 16777216
  %51 = or i1 %50, %49
  br i1 %51, label %125, label %52

52:                                               ; preds = %44
  %53 = icmp slt i64 %31, 0
  %54 = sub nsw i64 0, %31
  %55 = select i1 %53, i64 %54, i64 %31
  %56 = icmp slt i64 %29, 0
  %57 = sub nsw i64 0, %29
  %58 = select i1 %56, i64 %57, i64 %29
  %59 = or i64 %55, %58
  %60 = trunc i64 %59 to i32
  %61 = tail call i32 @llvm.ctlz.i32(i32 %60, i1 true), !range !2
  %62 = sub nsw i32 17, %61
  %63 = sub nsw i64 %37, %35
  %64 = trunc i64 %63 to i32
  %65 = tail call i32 @llvm.ctlz.i32(i32 %64, i1 true), !range !2
  %66 = sub nsw i32 17, %65
  %67 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 0
  %68 = load i16, i16* %67, align 8
  %69 = icmp sgt i16 %68, 0
  br i1 %69, label %70, label %124

70:                                               ; preds = %52
  %71 = icmp sgt i32 %66, 0
  %72 = select i1 %71, i32 %66, i32 0
  %73 = icmp sgt i32 %62, 0
  %74 = select i1 %73, i32 %62, i32 0
  %75 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %0, i64 0, i32 4
  %76 = load i16*, i16** %75, align 8
  %77 = zext i32 %74 to i64
  %78 = zext i32 %72 to i64
  %79 = sext i16 %68 to i64
  br label %80

80:                                               ; preds = %70, %115
  %81 = phi i64 [ 0, %70 ], [ %118, %115 ]
  %82 = phi i64 [ 0, %70 ], [ %116, %115 ]
  %83 = phi i32 [ 0, %70 ], [ %117, %115 ]
  %84 = getelementptr inbounds i16, i16* %76, i64 %81
  %85 = load i16, i16* %84, align 2
  %86 = sext i16 %85 to i32
  %87 = sext i16 %85 to i64
  %88 = icmp sgt i32 %83, %86
  br i1 %88, label %115, label %89

89:                                               ; preds = %80
  %90 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %9, i64 %87, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = ashr i64 %91, %78
  %93 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %9, i64 %87, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = ashr i64 %94, %77
  %96 = sext i32 %83 to i64
  %97 = sext i16 %85 to i64
  br label %98

98:                                               ; preds = %89, %98
  %99 = phi i64 [ %96, %89 ], [ %113, %98 ]
  %100 = phi i64 [ %82, %89 ], [ %112, %98 ]
  %101 = phi i64 [ %95, %89 ], [ %105, %98 ]
  %102 = phi i64 [ %92, %89 ], [ %108, %98 ]
  %103 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %9, i64 %99, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = ashr i64 %104, %77
  %106 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %9, i64 %99, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = ashr i64 %107, %78
  %109 = sub nsw i64 %108, %102
  %110 = add nsw i64 %105, %101
  %111 = mul i64 %109, %110
  %112 = add i64 %111, %100
  %113 = add nsw i64 %99, 1
  %114 = icmp slt i64 %99, %97
  br i1 %114, label %98, label %115

115:                                              ; preds = %98, %80
  %116 = phi i64 [ %82, %80 ], [ %112, %98 ]
  %117 = add nsw i32 %86, 1
  %118 = add nuw nsw i64 %81, 1
  %119 = icmp slt i64 %118, %79
  br i1 %119, label %80, label %120

120:                                              ; preds = %115
  %121 = icmp sgt i64 %116, 0
  br i1 %121, label %125, label %122

122:                                              ; preds = %120
  %123 = icmp eq i64 %116, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %52, %122
  br label %125

125:                                              ; preds = %124, %122, %7, %120, %44, %40, %3, %1
  %126 = phi i32 [ 0, %1 ], [ 0, %3 ], [ 2, %40 ], [ 2, %44 ], [ 1, %120 ], [ 2, %7 ], [ 2, %124 ], [ 0, %122 ]
  ret i32 %126
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ps_property_set(%struct.FT_ModuleRec_* nocapture, i8* nocapture readonly, i8*, i8 zeroext) local_unnamed_addr #0 {
  %5 = alloca [8 x i32], align 16
  %6 = alloca i8*, align 8
  %7 = bitcast %struct.FT_ModuleRec_* %0 to %struct.PS_DriverRec_*
  %8 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0)) #17
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %89

10:                                               ; preds = %4
  %11 = bitcast [8 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #16
  %12 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 0
  %13 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 1
  %14 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 2
  %15 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 3
  %16 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 4
  %17 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 5
  %18 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 6
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %5, i64 0, i64 7
  %20 = icmp eq i8 %3, 0
  %21 = bitcast [8 x i32]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 32, i1 false)
  br i1 %20, label %43, label %22

22:                                               ; preds = %10
  %23 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %24 = call i64 @strtol(i8* %2, i8** nonnull %6, i32 10) #16
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %12, align 16
  %26 = load i8*, i8** %6, align 8
  %27 = load i8, i8* %26, align 1
  %28 = icmp ne i8 %27, 44
  %29 = icmp eq i8* %26, %2
  %30 = or i1 %29, %28
  br i1 %30, label %40, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds i8, i8* %26, i64 1
  %33 = call i64 @strtol(i8* %32, i8** nonnull %6, i32 10) #16
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %13, align 4
  %35 = load i8*, i8** %6, align 8
  %36 = load i8, i8* %35, align 1
  %37 = icmp ne i8 %36, 44
  %38 = icmp eq i8* %32, %35
  %39 = or i1 %38, %37
  br i1 %39, label %40, label %139

40:                                               ; preds = %22, %31, %139, %148, %157, %166, %175, %184
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #16
  br label %87

41:                                               ; preds = %184, %184
  %42 = icmp eq i8* %185, %188
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #16
  br i1 %42, label %87, label %45

43:                                               ; preds = %10
  %44 = bitcast i8* %2 to i32*
  br label %45

45:                                               ; preds = %41, %43
  %46 = phi i32* [ %12, %41 ], [ %44, %43 ]
  %47 = bitcast i32* %46 to <4 x i32>*
  %48 = load <4 x i32>, <4 x i32>* %47, align 4
  %49 = getelementptr inbounds i32, i32* %46, i64 4
  %50 = bitcast i32* %49 to <4 x i32>*
  %51 = load <4 x i32>, <4 x i32>* %50, align 4
  %52 = extractelement <4 x i32> %51, i32 0
  %53 = extractelement <4 x i32> %51, i32 1
  %54 = extractelement <4 x i32> %51, i32 2
  %55 = shufflevector <4 x i32> %48, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %56 = or <4 x i32> %48, %55
  %57 = shufflevector <4 x i32> %56, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %58 = or <4 x i32> %56, %57
  %59 = extractelement <4 x i32> %58, i32 0
  %60 = or i32 %59, %52
  %61 = or i32 %60, %53
  %62 = or i32 %61, %54
  %63 = extractelement <4 x i32> %51, i32 3
  %64 = or i32 %62, %63
  %65 = icmp slt i32 %64, 0
  %66 = extractelement <4 x i32> %48, i32 0
  %67 = extractelement <4 x i32> %48, i32 2
  %68 = icmp sgt i32 %66, %67
  %69 = or i1 %68, %65
  %70 = icmp sgt i32 %67, %52
  %71 = or i1 %70, %69
  br i1 %71, label %87, label %72

72:                                               ; preds = %45
  %73 = icmp sgt i32 %52, %54
  %74 = shufflevector <4 x i32> %51, <4 x i32> %48, <4 x i32> <i32 3, i32 1, i32 7, i32 5>
  %75 = icmp sgt <4 x i32> %74, <i32 500, i32 500, i32 500, i32 500>
  %76 = shufflevector <4 x i1> %75, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %77 = or <4 x i1> %75, %76
  %78 = shufflevector <4 x i1> %77, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %79 = or <4 x i1> %77, %78
  %80 = extractelement <4 x i1> %79, i32 0
  %81 = or i1 %80, %73
  br i1 %81, label %87, label %82

82:                                               ; preds = %72
  %83 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 2, i32 2
  %84 = bitcast %struct.FT_MemoryRec_** %83 to <4 x i32>*
  store <4 x i32> %48, <4 x i32>* %84, align 8
  %85 = getelementptr inbounds %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %83, i64 2
  %86 = bitcast %struct.FT_MemoryRec_** %85 to <4 x i32>*
  store <4 x i32> %51, <4 x i32>* %86, align 8
  br label %87

87:                                               ; preds = %41, %40, %45, %72, %82
  %88 = phi i32 [ 0, %82 ], [ 6, %41 ], [ 6, %72 ], [ 6, %45 ], [ 6, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #16
  br label %137

89:                                               ; preds = %4
  %90 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0)) #17
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %107

92:                                               ; preds = %89
  %93 = icmp eq i8 %3, 0
  br i1 %93, label %100, label %94

94:                                               ; preds = %92
  %95 = tail call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)) #17
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %137

97:                                               ; preds = %94
  %98 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 2, i32 1
  %99 = bitcast %struct.FT_LibraryRec_** %98 to i32*
  store i32 1, i32* %99, align 8
  br label %137

100:                                              ; preds = %92
  %101 = bitcast i8* %2 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %137

104:                                              ; preds = %100
  %105 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 2, i32 1
  %106 = bitcast %struct.FT_LibraryRec_** %105 to i32*
  store i32 1, i32* %106, align 8
  br label %137

107:                                              ; preds = %89
  %108 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0)) #17
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %120

110:                                              ; preds = %107
  %111 = icmp eq i8 %3, 0
  br i1 %111, label %117, label %112

112:                                              ; preds = %110
  %113 = tail call i64 @strtol(i8* nocapture %2, i8** null, i32 10) #16
  %114 = icmp ne i64 %113, 0
  %115 = getelementptr inbounds %struct.PS_DriverRec_, %struct.PS_DriverRec_* %7, i64 0, i32 2
  %116 = zext i1 %114 to i8
  store i8 %116, i8* %115, align 4
  br label %137

117:                                              ; preds = %110
  %118 = load i8, i8* %2, align 1
  %119 = getelementptr inbounds %struct.PS_DriverRec_, %struct.PS_DriverRec_* %7, i64 0, i32 2
  store i8 %118, i8* %119, align 4
  br label %137

120:                                              ; preds = %107
  %121 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0)) #17
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %137

123:                                              ; preds = %120
  %124 = icmp eq i8 %3, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %123
  %126 = tail call i64 @strtol(i8* nocapture %2, i8** null, i32 10) #16
  %127 = trunc i64 %126 to i32
  br label %131

128:                                              ; preds = %123
  %129 = bitcast i8* %2 to i32*
  %130 = load i32, i32* %129, align 4
  br label %131

131:                                              ; preds = %128, %125
  %132 = phi i32 [ %127, %125 ], [ %130, %128 ]
  %133 = icmp sgt i32 %132, 0
  %134 = select i1 %133, i32 %132, i32 0
  %135 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 4
  %136 = bitcast %struct.FT_ModuleRec_* %135 to i32*
  store i32 %134, i32* %136, align 8
  br label %137

137:                                              ; preds = %120, %112, %117, %97, %100, %104, %94, %131, %87
  %138 = phi i32 [ 0, %131 ], [ %88, %87 ], [ 6, %94 ], [ 0, %97 ], [ 0, %104 ], [ 7, %100 ], [ 0, %117 ], [ 0, %112 ], [ 12, %120 ]
  ret i32 %138

139:                                              ; preds = %31
  %140 = getelementptr inbounds i8, i8* %35, i64 1
  %141 = call i64 @strtol(i8* %140, i8** nonnull %6, i32 10) #16
  %142 = trunc i64 %141 to i32
  store i32 %142, i32* %14, align 8
  %143 = load i8*, i8** %6, align 8
  %144 = load i8, i8* %143, align 1
  %145 = icmp ne i8 %144, 44
  %146 = icmp eq i8* %140, %143
  %147 = or i1 %146, %145
  br i1 %147, label %40, label %148

148:                                              ; preds = %139
  %149 = getelementptr inbounds i8, i8* %143, i64 1
  %150 = call i64 @strtol(i8* %149, i8** nonnull %6, i32 10) #16
  %151 = trunc i64 %150 to i32
  store i32 %151, i32* %15, align 4
  %152 = load i8*, i8** %6, align 8
  %153 = load i8, i8* %152, align 1
  %154 = icmp ne i8 %153, 44
  %155 = icmp eq i8* %149, %152
  %156 = or i1 %155, %154
  br i1 %156, label %40, label %157

157:                                              ; preds = %148
  %158 = getelementptr inbounds i8, i8* %152, i64 1
  %159 = call i64 @strtol(i8* %158, i8** nonnull %6, i32 10) #16
  %160 = trunc i64 %159 to i32
  store i32 %160, i32* %16, align 16
  %161 = load i8*, i8** %6, align 8
  %162 = load i8, i8* %161, align 1
  %163 = icmp ne i8 %162, 44
  %164 = icmp eq i8* %158, %161
  %165 = or i1 %164, %163
  br i1 %165, label %40, label %166

166:                                              ; preds = %157
  %167 = getelementptr inbounds i8, i8* %161, i64 1
  %168 = call i64 @strtol(i8* %167, i8** nonnull %6, i32 10) #16
  %169 = trunc i64 %168 to i32
  store i32 %169, i32* %17, align 4
  %170 = load i8*, i8** %6, align 8
  %171 = load i8, i8* %170, align 1
  %172 = icmp ne i8 %171, 44
  %173 = icmp eq i8* %167, %170
  %174 = or i1 %173, %172
  br i1 %174, label %40, label %175

175:                                              ; preds = %166
  %176 = getelementptr inbounds i8, i8* %170, i64 1
  %177 = call i64 @strtol(i8* %176, i8** nonnull %6, i32 10) #16
  %178 = trunc i64 %177 to i32
  store i32 %178, i32* %18, align 8
  %179 = load i8*, i8** %6, align 8
  %180 = load i8, i8* %179, align 1
  %181 = icmp ne i8 %180, 44
  %182 = icmp eq i8* %176, %179
  %183 = or i1 %182, %181
  br i1 %183, label %40, label %184

184:                                              ; preds = %175
  %185 = getelementptr inbounds i8, i8* %179, i64 1
  %186 = call i64 @strtol(i8* %185, i8** nonnull %6, i32 10) #16
  %187 = trunc i64 %186 to i32
  store i32 %187, i32* %19, align 4
  %188 = load i8*, i8** %6, align 8
  %189 = load i8, i8* %188, align 1
  switch i8 %189, label %40 [
    i8 0, label %41
    i8 32, label %41
  ]
}

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #13

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @ps_property_get(%struct.FT_ModuleRec_* nocapture readonly, i8* nocapture readonly, i8* nocapture) local_unnamed_addr #5 {
  %4 = bitcast %struct.FT_ModuleRec_* %0 to %struct.PS_DriverRec_*
  %5 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0)) #17
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %43

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 2, i32 2
  %9 = bitcast %struct.FT_MemoryRec_** %8 to i32*
  %10 = bitcast i8* %2 to i32*
  %11 = load i32, i32* %9, align 4
  store i32 %11, i32* %10, align 4
  %12 = getelementptr inbounds i32, i32* %9, i64 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds i8, i8* %2, i64 4
  %15 = bitcast i8* %14 to i32*
  store i32 %13, i32* %15, align 4
  %16 = getelementptr inbounds %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %8, i64 1
  %17 = bitcast %struct.FT_MemoryRec_** %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds i8, i8* %2, i64 8
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 4
  %21 = getelementptr inbounds i32, i32* %9, i64 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds i8, i8* %2, i64 12
  %24 = bitcast i8* %23 to i32*
  store i32 %22, i32* %24, align 4
  %25 = getelementptr inbounds %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %8, i64 2
  %26 = bitcast %struct.FT_MemoryRec_** %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds i8, i8* %2, i64 16
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 4
  %30 = getelementptr inbounds i32, i32* %9, i64 5
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds i8, i8* %2, i64 20
  %33 = bitcast i8* %32 to i32*
  store i32 %31, i32* %33, align 4
  %34 = getelementptr inbounds %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %8, i64 3
  %35 = bitcast %struct.FT_MemoryRec_** %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds i8, i8* %2, i64 24
  %38 = bitcast i8* %37 to i32*
  store i32 %36, i32* %38, align 4
  %39 = getelementptr inbounds i32, i32* %9, i64 7
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds i8, i8* %2, i64 28
  %42 = bitcast i8* %41 to i32*
  store i32 %40, i32* %42, align 4
  br label %57

43:                                               ; preds = %3
  %44 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0)) #17
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %51

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 2, i32 1
  %48 = bitcast %struct.FT_LibraryRec_** %47 to i32*
  %49 = load i32, i32* %48, align 8
  %50 = bitcast i8* %2 to i32*
  store i32 %49, i32* %50, align 4
  br label %57

51:                                               ; preds = %43
  %52 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0)) #17
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.PS_DriverRec_, %struct.PS_DriverRec_* %4, i64 0, i32 2
  %56 = load i8, i8* %55, align 4
  store i8 %56, i8* %2, align 1
  br label %57

57:                                               ; preds = %51, %54, %46, %7
  %58 = phi i32 [ 0, %54 ], [ 0, %46 ], [ 0, %7 ], [ 12, %51 ]
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Raccess_Get_HeaderInfo(%struct.FT_LibraryRec_* nocapture readnone, %struct.FT_StreamRec_*, i64, i64* nocapture, i64* nocapture) local_unnamed_addr #0 {
  %6 = alloca [2 x i8], align 1
  %7 = alloca <16 x i8>, align 16
  %8 = alloca <16 x i8>, align 16
  %9 = getelementptr inbounds <16 x i8>, <16 x i8>* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #16
  %10 = getelementptr inbounds <16 x i8>, <16 x i8>* %7, i64 0, i64 1
  %11 = getelementptr inbounds <16 x i8>, <16 x i8>* %7, i64 0, i64 2
  %12 = getelementptr inbounds <16 x i8>, <16 x i8>* %7, i64 0, i64 3
  %13 = getelementptr inbounds <16 x i8>, <16 x i8>* %7, i64 0, i64 4
  %14 = getelementptr inbounds <16 x i8>, <16 x i8>* %7, i64 0, i64 5
  %15 = getelementptr inbounds <16 x i8>, <16 x i8>* %7, i64 0, i64 6
  %16 = getelementptr inbounds <16 x i8>, <16 x i8>* %7, i64 0, i64 7
  %17 = getelementptr inbounds <16 x i8>, <16 x i8>* %7, i64 0, i64 8
  %18 = getelementptr inbounds <16 x i8>, <16 x i8>* %7, i64 0, i64 9
  %19 = getelementptr inbounds <16 x i8>, <16 x i8>* %7, i64 0, i64 10
  %20 = getelementptr inbounds <16 x i8>, <16 x i8>* %7, i64 0, i64 11
  %21 = getelementptr inbounds <16 x i8>, <16 x i8>* %7, i64 0, i64 12
  %22 = getelementptr inbounds <16 x i8>, <16 x i8>* %7, i64 0, i64 13
  %23 = getelementptr inbounds <16 x i8>, <16 x i8>* %7, i64 0, i64 14
  %24 = getelementptr inbounds <16 x i8>, <16 x i8>* %7, i64 0, i64 15
  %25 = getelementptr inbounds <16 x i8>, <16 x i8>* %8, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #16
  %26 = getelementptr inbounds <16 x i8>, <16 x i8>* %8, i64 0, i64 15
  %27 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %25, i8 -86, i64 16, i1 false)
  %28 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %27, align 8
  %29 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %5
  %31 = tail call i64 %28(%struct.FT_StreamRec_* %1, i64 %2, i8* null, i64 0) #16
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %300

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  br label %40

36:                                               ; preds = %5
  %37 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = icmp ult i64 %38, %2
  br i1 %39, label %300, label %40

40:                                               ; preds = %33, %36
  %41 = phi i64 [ %35, %33 ], [ %38, %36 ]
  %42 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 2
  store i64 %2, i64* %42, align 8
  %43 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 1
  %44 = icmp ugt i64 %41, %2
  br i1 %44, label %45, label %300

45:                                               ; preds = %40
  %46 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %27, align 8
  %47 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %45
  %49 = call i64 %46(%struct.FT_StreamRec_* %1, i64 %2, i8* nonnull %9, i64 16) #16
  br label %57

50:                                               ; preds = %45
  %51 = sub i64 %41, %2
  %52 = icmp ult i64 %51, 16
  %53 = select i1 %52, i64 %51, i64 16
  %54 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %9, i8* align 1 %56, i64 %53, i1 false) #16
  br label %57

57:                                               ; preds = %50, %48
  %58 = phi i64 [ %49, %48 ], [ %53, %50 ]
  %59 = add i64 %58, %2
  store i64 %59, i64* %42, align 8
  %60 = icmp ult i64 %58, 16
  br i1 %60, label %300, label %61

61:                                               ; preds = %57
  %62 = load i8, i8* %9, align 16
  %63 = load i8, i8* %13, align 4
  %64 = or i8 %63, %62
  %65 = load i8, i8* %17, align 8
  %66 = or i8 %64, %65
  %67 = load i8, i8* %21, align 4
  %68 = or i8 %66, %67
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %300, label %70

70:                                               ; preds = %61
  %71 = zext i8 %62 to i32
  %72 = shl nuw i32 %71, 24
  %73 = load i8, i8* %10, align 1
  %74 = zext i8 %73 to i32
  %75 = shl nuw nsw i32 %74, 16
  %76 = or i32 %75, %72
  %77 = load i8, i8* %11, align 2
  %78 = zext i8 %77 to i32
  %79 = shl nuw nsw i32 %78, 8
  %80 = or i32 %76, %79
  %81 = load i8, i8* %12, align 1
  %82 = zext i8 %81 to i32
  %83 = or i32 %80, %82
  %84 = sext i32 %83 to i64
  store i64 %84, i64* %4, align 8
  %85 = zext i8 %63 to i32
  %86 = shl nuw i32 %85, 24
  %87 = load i8, i8* %14, align 1
  %88 = zext i8 %87 to i32
  %89 = shl nuw nsw i32 %88, 16
  %90 = or i32 %89, %86
  %91 = load i8, i8* %15, align 2
  %92 = zext i8 %91 to i32
  %93 = shl nuw nsw i32 %92, 8
  %94 = or i32 %90, %93
  %95 = load i8, i8* %16, align 1
  %96 = zext i8 %95 to i32
  %97 = or i32 %94, %96
  %98 = sext i32 %97 to i64
  %99 = zext i8 %65 to i32
  %100 = shl nuw i32 %99, 24
  %101 = load i8, i8* %18, align 1
  %102 = zext i8 %101 to i32
  %103 = shl nuw nsw i32 %102, 16
  %104 = or i32 %103, %100
  %105 = load i8, i8* %19, align 2
  %106 = zext i8 %105 to i32
  %107 = shl nuw nsw i32 %106, 8
  %108 = or i32 %104, %107
  %109 = load i8, i8* %20, align 1
  %110 = zext i8 %109 to i32
  %111 = or i32 %108, %110
  %112 = sext i32 %111 to i64
  %113 = zext i8 %67 to i32
  %114 = shl nuw i32 %113, 24
  %115 = load i8, i8* %22, align 1
  %116 = zext i8 %115 to i32
  %117 = shl nuw nsw i32 %116, 16
  %118 = or i32 %117, %114
  %119 = load i8, i8* %23, align 2
  %120 = zext i8 %119 to i32
  %121 = shl nuw nsw i32 %120, 8
  %122 = or i32 %118, %121
  %123 = load i8, i8* %24, align 1
  %124 = zext i8 %123 to i32
  %125 = or i32 %122, %124
  %126 = sext i32 %125 to i64
  %127 = icmp eq i32 %97, 0
  br i1 %127, label %300, label %128

128:                                              ; preds = %70
  %129 = icmp slt i32 %83, %97
  br i1 %129, label %130, label %133

130:                                              ; preds = %128
  %131 = sub nsw i64 %98, %112
  %132 = icmp slt i64 %131, %84
  br i1 %132, label %300, label %136

133:                                              ; preds = %128
  %134 = sub nsw i64 %84, %126
  %135 = icmp slt i64 %134, %98
  br i1 %135, label %300, label %136

136:                                              ; preds = %133, %130
  %137 = sub nsw i64 9223372036854775807, %112
  %138 = icmp slt i64 %137, %84
  %139 = sub nsw i64 9223372036854775807, %126
  %140 = icmp slt i64 %139, %98
  %141 = or i1 %138, %140
  br i1 %141, label %300, label %142

142:                                              ; preds = %136
  %143 = sub i64 9223372036854775807, %84
  %144 = sub i64 %143, %112
  %145 = icmp slt i64 %144, %2
  br i1 %145, label %300, label %146

146:                                              ; preds = %142
  %147 = sub i64 9223372036854775807, %98
  %148 = sub i64 %147, %126
  %149 = icmp slt i64 %148, %2
  br i1 %149, label %300, label %150

150:                                              ; preds = %146
  %151 = add nsw i64 %84, %2
  %152 = add nsw i64 %151, %112
  %153 = load i64, i64* %43, align 8
  %154 = icmp ugt i64 %152, %153
  br i1 %154, label %300, label %155

155:                                              ; preds = %150
  %156 = add nsw i64 %98, %2
  %157 = add nsw i64 %156, %126
  %158 = icmp ugt i64 %157, %153
  br i1 %158, label %300, label %159

159:                                              ; preds = %155
  store i64 %151, i64* %4, align 8
  %160 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %27, align 8
  %161 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %160, null
  br i1 %161, label %168, label %162

162:                                              ; preds = %159
  %163 = call i64 %160(%struct.FT_StreamRec_* %1, i64 %156, i8* null, i64 0) #16
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %300

165:                                              ; preds = %162
  %166 = load i8, i8* %24, align 1
  %167 = load i64, i64* %43, align 8
  br label %171

168:                                              ; preds = %159
  %169 = load i64, i64* %43, align 8
  %170 = icmp ult i64 %169, %156
  br i1 %170, label %300, label %171

171:                                              ; preds = %165, %168
  %172 = phi i64 [ %167, %165 ], [ %169, %168 ]
  %173 = phi i8 [ %166, %165 ], [ %123, %168 ]
  store i64 %156, i64* %42, align 8
  %174 = add i8 %173, 1
  store i8 %174, i8* %26, align 1
  %175 = icmp ugt i64 %172, %156
  br i1 %175, label %176, label %300

176:                                              ; preds = %171
  %177 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %27, align 8
  %178 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %177, null
  br i1 %178, label %181, label %179

179:                                              ; preds = %176
  %180 = call i64 %177(%struct.FT_StreamRec_* %1, i64 %156, i8* nonnull %25, i64 16) #16
  br label %188

181:                                              ; preds = %176
  %182 = sub i64 %172, %156
  %183 = icmp ult i64 %182, 16
  %184 = select i1 %183, i64 %182, i64 16
  %185 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = getelementptr inbounds i8, i8* %186, i64 %156
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %25, i8* align 1 %187, i64 %184, i1 false) #16
  br label %188

188:                                              ; preds = %181, %179
  %189 = phi i64 [ %180, %179 ], [ %184, %181 ]
  %190 = add i64 %189, %156
  store i64 %190, i64* %42, align 8
  %191 = icmp ult i64 %189, 16
  br i1 %191, label %300, label %192

192:                                              ; preds = %188
  %193 = load <16 x i8>, <16 x i8>* %8, align 16
  %194 = extractelement <16 x i8> %193, i32 0
  %195 = extractelement <16 x i8> %193, i32 1
  %196 = or i8 %195, %194
  %197 = load <16 x i8>, <16 x i8>* %7, align 16
  %198 = icmp eq <16 x i8> %193, %197
  %199 = extractelement <16 x i8> %193, i32 2
  %200 = or i8 %199, %196
  %201 = extractelement <16 x i8> %193, i32 3
  %202 = or i8 %201, %200
  %203 = extractelement <16 x i8> %193, i32 4
  %204 = or i8 %203, %202
  %205 = extractelement <16 x i8> %193, i32 5
  %206 = or i8 %205, %204
  %207 = extractelement <16 x i8> %193, i32 6
  %208 = or i8 %207, %206
  %209 = extractelement <16 x i8> %193, i32 7
  %210 = or i8 %209, %208
  %211 = extractelement <16 x i8> %193, i32 8
  %212 = or i8 %211, %210
  %213 = extractelement <16 x i8> %193, i32 9
  %214 = or i8 %213, %212
  %215 = extractelement <16 x i8> %193, i32 10
  %216 = or i8 %215, %214
  %217 = extractelement <16 x i8> %193, i32 11
  %218 = or i8 %217, %216
  %219 = extractelement <16 x i8> %193, i32 12
  %220 = or i8 %219, %218
  %221 = extractelement <16 x i8> %193, i32 13
  %222 = or i8 %221, %220
  %223 = extractelement <16 x i8> %193, i32 14
  %224 = or i8 %223, %222
  %225 = extractelement <16 x i8> %193, i32 15
  %226 = or i8 %225, %224
  %227 = icmp eq i8 %226, 0
  %228 = shufflevector <16 x i1> %198, <16 x i1> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %229 = and <16 x i1> %198, %228
  %230 = shufflevector <16 x i1> %229, <16 x i1> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %231 = and <16 x i1> %229, %230
  %232 = shufflevector <16 x i1> %231, <16 x i1> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %233 = and <16 x i1> %231, %232
  %234 = shufflevector <16 x i1> %233, <16 x i1> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %235 = and <16 x i1> %233, %234
  %236 = extractelement <16 x i1> %235, i32 0
  %237 = or i1 %236, %227
  br i1 %237, label %238, label %300

238:                                              ; preds = %192
  %239 = add i64 %190, 8
  %240 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %27, align 8
  %241 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %240, null
  br i1 %241, label %247, label %242

242:                                              ; preds = %238
  %243 = call i64 %240(%struct.FT_StreamRec_* %1, i64 %239, i8* null, i64 0) #16
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %250, label %245

245:                                              ; preds = %242
  %246 = load i64, i64* %42, align 8
  br label %251

247:                                              ; preds = %238
  %248 = load i64, i64* %43, align 8
  %249 = icmp ult i64 %248, %239
  br i1 %249, label %251, label %250

250:                                              ; preds = %247, %242
  store i64 %239, i64* %42, align 8
  br label %251

251:                                              ; preds = %245, %247, %250
  %252 = phi i64 [ %246, %245 ], [ %190, %247 ], [ %239, %250 ]
  %253 = getelementptr inbounds [2 x i8], [2 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %253) #16
  store i8 -86, i8* %253, align 1
  %254 = getelementptr inbounds [2 x i8], [2 x i8]* %6, i64 0, i64 1
  store i8 -86, i8* %254, align 1
  %255 = add i64 %252, 1
  %256 = load i64, i64* %43, align 8
  %257 = icmp ult i64 %255, %256
  br i1 %257, label %258, label %273

258:                                              ; preds = %251
  %259 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %27, align 8
  %260 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %259, null
  br i1 %260, label %266, label %261

261:                                              ; preds = %258
  %262 = call i64 %259(%struct.FT_StreamRec_* %1, i64 %252, i8* nonnull %253, i64 2) #16
  %263 = icmp eq i64 %262, 2
  br i1 %263, label %264, label %273

264:                                              ; preds = %261
  %265 = load i64, i64* %42, align 8
  br label %274

266:                                              ; preds = %258
  %267 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 0
  %268 = load i8*, i8** %267, align 8
  %269 = getelementptr inbounds i8, i8* %268, i64 %252
  %270 = icmp eq i8* %269, null
  br i1 %270, label %271, label %274

271:                                              ; preds = %266
  %272 = add i64 %252, 2
  store i64 %272, i64* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %253) #16
  br label %294

273:                                              ; preds = %261, %251
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %253) #16
  br label %300

274:                                              ; preds = %264, %266
  %275 = phi i64 [ %252, %266 ], [ %265, %264 ]
  %276 = phi i8* [ %269, %266 ], [ %253, %264 ]
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i16
  %279 = shl nuw i16 %278, 8
  %280 = getelementptr inbounds i8, i8* %276, i64 1
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i16
  %283 = or i16 %279, %282
  %284 = add i64 %275, 2
  store i64 %284, i64* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %253) #16
  %285 = icmp slt i16 %283, 0
  br i1 %285, label %300, label %286

286:                                              ; preds = %274
  %287 = sext i16 %283 to i64
  %288 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %27, align 8
  %289 = add nsw i64 %156, %287
  %290 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %288, null
  br i1 %290, label %294, label %291

291:                                              ; preds = %286
  %292 = call i64 %288(%struct.FT_StreamRec_* %1, i64 %289, i8* null, i64 0) #16
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %298, label %300

294:                                              ; preds = %271, %286
  %295 = phi i64 [ %156, %271 ], [ %289, %286 ]
  %296 = load i64, i64* %43, align 8
  %297 = icmp ult i64 %296, %295
  br i1 %297, label %300, label %298

298:                                              ; preds = %294, %291
  %299 = phi i64 [ %295, %294 ], [ %289, %291 ]
  store i64 %299, i64* %42, align 8
  store i64 %299, i64* %3, align 8
  br label %300

300:                                              ; preds = %192, %294, %291, %188, %171, %168, %162, %57, %40, %36, %30, %273, %274, %136, %142, %146, %150, %155, %133, %130, %70, %61, %298
  %301 = phi i32 [ 0, %298 ], [ 2, %61 ], [ 2, %70 ], [ 2, %130 ], [ 2, %133 ], [ 2, %155 ], [ 2, %150 ], [ 2, %146 ], [ 2, %142 ], [ 2, %136 ], [ 2, %192 ], [ 2, %274 ], [ 85, %273 ], [ 85, %30 ], [ 85, %36 ], [ 85, %40 ], [ 85, %57 ], [ 85, %162 ], [ 85, %168 ], [ 85, %171 ], [ 85, %188 ], [ 85, %291 ], [ 85, %294 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #16
  ret i32 %301
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Stream_Seek(%struct.FT_StreamRec_*, i64) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 5
  %4 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %3, align 8
  %5 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = tail call i64 %4(%struct.FT_StreamRec_* %0, i64 %1, i8* null, i64 0) #16
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %13, label %15

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %6, %9
  %14 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 2
  store i64 %1, i64* %14, align 8
  br label %15

15:                                               ; preds = %9, %6, %13
  %16 = phi i32 [ 0, %13 ], [ 85, %6 ], [ 85, %9 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Stream_Read(%struct.FT_StreamRec_*, i8*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %27

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 5
  %11 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %10, align 8
  %12 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = tail call i64 %11(%struct.FT_StreamRec_* %0, i64 %5, i8* %1, i64 %2) #16
  br label %22

15:                                               ; preds = %9
  %16 = sub i64 %7, %5
  %17 = icmp ugt i64 %16, %2
  %18 = select i1 %17, i64 %2, i64 %16
  %19 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 %5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %21, i64 %18, i1 false) #16
  br label %22

22:                                               ; preds = %15, %13
  %23 = phi i64 [ %14, %13 ], [ %18, %15 ]
  %24 = add i64 %23, %5
  store i64 %24, i64* %4, align 8
  %25 = icmp ult i64 %23, %2
  %26 = select i1 %25, i32 85, i32 0
  br label %27

27:                                               ; preds = %3, %22
  %28 = phi i32 [ %26, %22 ], [ 85, %3 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Stream_Skip(%struct.FT_StreamRec_*, i64) local_unnamed_addr #0 {
  %3 = icmp slt i64 %1, 0
  br i1 %3, label %19, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %1
  %8 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 5
  %9 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %8, align 8
  %10 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = tail call i64 %9(%struct.FT_StreamRec_* %0, i64 %7, i8* null, i64 0) #16
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %18, label %19

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %16, %7
  br i1 %17, label %19, label %18

18:                                               ; preds = %14, %11
  store i64 %7, i64* %5, align 8
  br label %19

19:                                               ; preds = %18, %14, %11, %2
  %20 = phi i32 [ 85, %2 ], [ 0, %18 ], [ 85, %11 ], [ 85, %14 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_*, i32* nocapture) local_unnamed_addr #0 {
  %3 = alloca [2 x i8], align 1
  %4 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %4) #16
  store i8 -86, i8* %4, align 1
  %5 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 1
  store i8 -86, i8* %5, align 1
  store i32 0, i32* %1, align 4
  %6 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  %9 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %8, %10
  br i1 %11, label %12, label %40

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 5
  %14 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %13, align 8
  %15 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = call i64 %14(%struct.FT_StreamRec_* %0, i64 %7, i8* nonnull %4, i64 2) #16
  %18 = icmp eq i64 %17, 2
  br i1 %18, label %19, label %40

19:                                               ; preds = %16
  %20 = load i64, i64* %6, align 8
  br label %26

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 %7
  %25 = icmp eq i8* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %19, %21
  %27 = phi i64 [ %7, %21 ], [ %20, %19 ]
  %28 = phi i8* [ %24, %21 ], [ %4, %19 ]
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i16
  %31 = shl nuw i16 %30, 8
  %32 = getelementptr inbounds i8, i8* %28, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i16
  %35 = or i16 %31, %34
  br label %36

36:                                               ; preds = %21, %26
  %37 = phi i64 [ %27, %26 ], [ %7, %21 ]
  %38 = phi i16 [ %35, %26 ], [ 0, %21 ]
  %39 = add i64 %37, 2
  store i64 %39, i64* %6, align 8
  br label %41

40:                                               ; preds = %16, %2
  store i32 85, i32* %1, align 4
  br label %41

41:                                               ; preds = %40, %36
  %42 = phi i16 [ 0, %40 ], [ %38, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %4) #16
  ret i16 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Raccess_Get_DataOffsets(%struct.FT_LibraryRec_* nocapture readonly, %struct.FT_StreamRec_*, i64, i64, i64, i8 zeroext, i64** nocapture, i64* nocapture) local_unnamed_addr #0 {
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [2 x i8], align 1
  %12 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 0
  %13 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %12, align 8
  %14 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 5
  %15 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %14, align 8
  %16 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %8
  %18 = tail call i64 %15(%struct.FT_StreamRec_* %1, i64 %2, i8* null, i64 0) #16
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %363

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  br label %27

23:                                               ; preds = %8
  %24 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp ult i64 %25, %2
  br i1 %26, label %363, label %27

27:                                               ; preds = %20, %23
  %28 = phi i64 [ %22, %20 ], [ %25, %23 ]
  %29 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 2
  store i64 %2, i64* %29, align 8
  %30 = getelementptr inbounds [2 x i8], [2 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %30) #16
  store i8 -86, i8* %30, align 1
  %31 = getelementptr inbounds [2 x i8], [2 x i8]* %11, i64 0, i64 1
  store i8 -86, i8* %31, align 1
  %32 = add i64 %2, 1
  %33 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 1
  %34 = icmp ult i64 %32, %28
  br i1 %34, label %35, label %50

35:                                               ; preds = %27
  %36 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %14, align 8
  %37 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %35
  %39 = call i64 %36(%struct.FT_StreamRec_* %1, i64 %2, i8* nonnull %30, i64 2) #16
  %40 = icmp eq i64 %39, 2
  br i1 %40, label %41, label %50

41:                                               ; preds = %38
  %42 = load i64, i64* %29, align 8
  br label %51

43:                                               ; preds = %35
  %44 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 %2
  %47 = icmp eq i8* %46, null
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = add i64 %2, 2
  store i64 %49, i64* %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %30) #16
  br label %66

50:                                               ; preds = %38, %27
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %30) #16
  br label %363

51:                                               ; preds = %41, %43
  %52 = phi i64 [ %2, %43 ], [ %42, %41 ]
  %53 = phi i8* [ %46, %43 ], [ %30, %41 ]
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i16
  %56 = shl nuw i16 %55, 8
  %57 = getelementptr inbounds i8, i8* %53, i64 1
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i16
  %60 = or i16 %56, %59
  %61 = add i64 %52, 2
  store i64 %61, i64* %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %30) #16
  %62 = icmp sgt i16 %60, 4078
  br i1 %62, label %363, label %63

63:                                               ; preds = %51
  %64 = sext i16 %60 to i32
  %65 = icmp slt i16 %60, 0
  br i1 %65, label %363, label %66

66:                                               ; preds = %48, %63
  %67 = phi i64 [ %49, %48 ], [ %61, %63 ]
  %68 = phi i32 [ 0, %48 ], [ %64, %63 ]
  %69 = bitcast i32* %10 to i8*
  %70 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 0
  br label %74

71:                                               ; preds = %178
  %72 = add nuw nsw i32 %76, 1
  %73 = icmp eq i32 %76, %68
  br i1 %73, label %363, label %74

74:                                               ; preds = %71, %66
  %75 = phi i64 [ %67, %66 ], [ %181, %71 ]
  %76 = phi i32 [ 0, %66 ], [ %72, %71 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #16
  store i32 -1431655766, i32* %10, align 4
  %77 = add i64 %75, 3
  %78 = load i64, i64* %33, align 8
  %79 = icmp ult i64 %77, %78
  br i1 %79, label %80, label %114

80:                                               ; preds = %74
  %81 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %14, align 8
  %82 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %81, null
  br i1 %82, label %89, label %83

83:                                               ; preds = %80
  %84 = call i64 %81(%struct.FT_StreamRec_* %1, i64 %75, i8* nonnull %69, i64 4) #16
  %85 = icmp eq i64 %84, 4
  br i1 %85, label %86, label %114

86:                                               ; preds = %83
  %87 = load i64, i64* %29, align 8
  %88 = load i64, i64* %33, align 8
  br label %93

89:                                               ; preds = %80
  %90 = load i8*, i8** %70, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 %75
  %92 = icmp eq i8* %91, null
  br i1 %92, label %115, label %93

93:                                               ; preds = %89, %86
  %94 = phi i64 [ %78, %89 ], [ %88, %86 ]
  %95 = phi i64 [ %75, %89 ], [ %87, %86 ]
  %96 = phi i8* [ %91, %89 ], [ %69, %86 ]
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i64
  %99 = shl nuw nsw i64 %98, 24
  %100 = getelementptr inbounds i8, i8* %96, i64 1
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i64
  %103 = shl nuw nsw i64 %102, 16
  %104 = or i64 %103, %99
  %105 = getelementptr inbounds i8, i8* %96, i64 2
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i64
  %108 = shl nuw nsw i64 %107, 8
  %109 = or i64 %104, %108
  %110 = getelementptr inbounds i8, i8* %96, i64 3
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = or i64 %109, %112
  br label %115

114:                                              ; preds = %83, %74
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #16
  br label %363

115:                                              ; preds = %93, %89
  %116 = phi i64 [ %94, %93 ], [ %78, %89 ]
  %117 = phi i64 [ %95, %93 ], [ %75, %89 ]
  %118 = phi i64 [ %113, %93 ], [ 0, %89 ]
  %119 = add i64 %117, 4
  store i64 %119, i64* %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #16
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %30) #16
  store i8 -86, i8* %30, align 1
  store i8 -86, i8* %31, align 1
  %120 = add i64 %117, 5
  %121 = icmp ult i64 %120, %116
  br i1 %121, label %122, label %146

122:                                              ; preds = %115
  %123 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %14, align 8
  %124 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %123, null
  br i1 %124, label %131, label %125

125:                                              ; preds = %122
  %126 = call i64 %123(%struct.FT_StreamRec_* %1, i64 %119, i8* nonnull %30, i64 2) #16
  %127 = icmp eq i64 %126, 2
  br i1 %127, label %128, label %146

128:                                              ; preds = %125
  %129 = load i64, i64* %29, align 8
  %130 = load i64, i64* %33, align 8
  br label %135

131:                                              ; preds = %122
  %132 = load i8*, i8** %70, align 8
  %133 = getelementptr inbounds i8, i8* %132, i64 %119
  %134 = icmp eq i8* %133, null
  br i1 %134, label %147, label %135

135:                                              ; preds = %131, %128
  %136 = phi i64 [ %116, %131 ], [ %130, %128 ]
  %137 = phi i64 [ %119, %131 ], [ %129, %128 ]
  %138 = phi i8* [ %133, %131 ], [ %30, %128 ]
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i16
  %141 = shl nuw i16 %140, 8
  %142 = getelementptr inbounds i8, i8* %138, i64 1
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i16
  %145 = or i16 %141, %144
  br label %147

146:                                              ; preds = %125, %115
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %30) #16
  br label %363

147:                                              ; preds = %135, %131
  %148 = phi i64 [ %136, %135 ], [ %116, %131 ]
  %149 = phi i64 [ %137, %135 ], [ %119, %131 ]
  %150 = phi i16 [ %145, %135 ], [ 0, %131 ]
  %151 = add i64 %149, 2
  store i64 %151, i64* %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %30) #16
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %30) #16
  store i8 -86, i8* %30, align 1
  store i8 -86, i8* %31, align 1
  %152 = add i64 %149, 3
  %153 = icmp ult i64 %152, %148
  br i1 %153, label %154, label %177

154:                                              ; preds = %147
  %155 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %14, align 8
  %156 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %155, null
  br i1 %156, label %162, label %157

157:                                              ; preds = %154
  %158 = call i64 %155(%struct.FT_StreamRec_* %1, i64 %151, i8* nonnull %30, i64 2) #16
  %159 = icmp eq i64 %158, 2
  br i1 %159, label %160, label %177

160:                                              ; preds = %157
  %161 = load i64, i64* %29, align 8
  br label %166

162:                                              ; preds = %154
  %163 = load i8*, i8** %70, align 8
  %164 = getelementptr inbounds i8, i8* %163, i64 %151
  %165 = icmp eq i8* %164, null
  br i1 %165, label %178, label %166

166:                                              ; preds = %162, %160
  %167 = phi i64 [ %151, %162 ], [ %161, %160 ]
  %168 = phi i8* [ %164, %162 ], [ %30, %160 ]
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i16
  %171 = shl nuw i16 %170, 8
  %172 = getelementptr inbounds i8, i8* %168, i64 1
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i16
  %175 = or i16 %171, %174
  %176 = sext i16 %175 to i64
  br label %178

177:                                              ; preds = %157, %147
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %30) #16
  br label %363

178:                                              ; preds = %166, %162
  %179 = phi i64 [ %167, %166 ], [ %151, %162 ]
  %180 = phi i64 [ %176, %166 ], [ 0, %162 ]
  %181 = add i64 %179, 2
  store i64 %181, i64* %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %30) #16
  %182 = icmp eq i64 %118, %4
  br i1 %182, label %183, label %71

183:                                              ; preds = %178
  %184 = sext i16 %150 to i64
  %185 = add nsw i64 %184, 1
  store i64 %185, i64* %7, align 8
  %186 = add nsw i64 %180, %2
  %187 = icmp ugt i16 %150, 2726
  br i1 %187, label %363, label %188

188:                                              ; preds = %183
  %189 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %14, align 8
  %190 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %189, null
  br i1 %190, label %194, label %191

191:                                              ; preds = %188
  %192 = call i64 %189(%struct.FT_StreamRec_* %1, i64 %186, i8* null, i64 0) #16
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %197, label %363

194:                                              ; preds = %188
  %195 = load i64, i64* %33, align 8
  %196 = icmp ult i64 %195, %186
  br i1 %196, label %363, label %197

197:                                              ; preds = %194, %191
  store i64 %186, i64* %29, align 8
  %198 = load i64, i64* %7, align 8
  %199 = icmp slt i64 %198, 0
  br i1 %199, label %363, label %200

200:                                              ; preds = %197
  %201 = icmp eq i64 %198, 0
  br i1 %201, label %211, label %202

202:                                              ; preds = %200
  %203 = icmp sgt i64 %198, 134217727
  br i1 %203, label %363, label %204

204:                                              ; preds = %202
  %205 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %13, i64 0, i32 1
  %206 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %205, align 8
  %207 = shl nsw i64 %198, 4
  %208 = call i8* %206(%struct.FT_MemoryRec_* %13, i64 %207) #16
  %209 = icmp eq i8* %208, null
  br i1 %209, label %363, label %210

210:                                              ; preds = %204
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %208, i8 0, i64 %207, i1 false) #16
  br label %211

211:                                              ; preds = %200, %210
  %212 = phi i8* [ null, %200 ], [ %208, %210 ]
  %213 = bitcast i8* %212 to %struct.FT_RFork_Ref_*
  %214 = load i64, i64* %7, align 8
  %215 = icmp sgt i64 %214, 0
  br i1 %215, label %216, label %322

216:                                              ; preds = %211
  %217 = bitcast i32* %9 to i8*
  br label %218

218:                                              ; preds = %216, %314
  %219 = phi i64 [ 0, %216 ], [ %319, %314 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %30) #16
  store i8 -86, i8* %30, align 1
  store i8 -86, i8* %31, align 1
  %220 = load i64, i64* %29, align 8
  %221 = add i64 %220, 1
  %222 = load i64, i64* %33, align 8
  %223 = icmp ult i64 %221, %222
  br i1 %223, label %224, label %246

224:                                              ; preds = %218
  %225 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %14, align 8
  %226 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %225, null
  br i1 %226, label %232, label %227

227:                                              ; preds = %224
  %228 = call i64 %225(%struct.FT_StreamRec_* %1, i64 %220, i8* nonnull %30, i64 2) #16
  %229 = icmp eq i64 %228, 2
  br i1 %229, label %230, label %246

230:                                              ; preds = %227
  %231 = load i64, i64* %29, align 8
  br label %236

232:                                              ; preds = %224
  %233 = load i8*, i8** %70, align 8
  %234 = getelementptr inbounds i8, i8* %233, i64 %220
  %235 = icmp eq i8* %234, null
  br i1 %235, label %248, label %236

236:                                              ; preds = %232, %230
  %237 = phi i64 [ %220, %232 ], [ %231, %230 ]
  %238 = phi i8* [ %234, %232 ], [ %30, %230 ]
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i16
  %241 = shl nuw i16 %240, 8
  %242 = getelementptr inbounds i8, i8* %238, i64 1
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i16
  %245 = or i16 %241, %244
  br label %248

246:                                              ; preds = %227, %218
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %30) #16
  %247 = getelementptr inbounds %struct.FT_RFork_Ref_, %struct.FT_RFork_Ref_* %213, i64 %219, i32 0
  store i16 0, i16* %247, align 8
  br label %357

248:                                              ; preds = %236, %232
  %249 = phi i64 [ %237, %236 ], [ %220, %232 ]
  %250 = phi i16 [ %245, %236 ], [ 0, %232 ]
  %251 = add i64 %249, 2
  store i64 %251, i64* %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %30) #16
  %252 = getelementptr inbounds %struct.FT_RFork_Ref_, %struct.FT_RFork_Ref_* %213, i64 %219, i32 0
  store i16 %250, i16* %252, align 8
  %253 = load i64, i64* %29, align 8
  %254 = add i64 %253, 2
  %255 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %14, align 8
  %256 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %255, null
  br i1 %256, label %262, label %257

257:                                              ; preds = %248
  %258 = call i64 %255(%struct.FT_StreamRec_* %1, i64 %254, i8* null, i64 0) #16
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %260, label %357

260:                                              ; preds = %257
  %261 = load i64, i64* %33, align 8
  br label %265

262:                                              ; preds = %248
  %263 = load i64, i64* %33, align 8
  %264 = icmp ult i64 %263, %254
  br i1 %264, label %357, label %265

265:                                              ; preds = %260, %262
  %266 = phi i64 [ %261, %260 ], [ %263, %262 ]
  store i64 %254, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %217) #16
  store i32 -1431655766, i32* %9, align 4
  %267 = add i64 %253, 5
  %268 = icmp ult i64 %267, %266
  br i1 %268, label %269, label %285

269:                                              ; preds = %265
  %270 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %14, align 8
  %271 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %270, null
  br i1 %271, label %278, label %272

272:                                              ; preds = %269
  %273 = call i64 %270(%struct.FT_StreamRec_* %1, i64 %254, i8* nonnull %217, i64 4) #16
  %274 = icmp eq i64 %273, 4
  br i1 %274, label %275, label %285

275:                                              ; preds = %272
  %276 = load i64, i64* %29, align 8
  %277 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %14, align 8
  br label %286

278:                                              ; preds = %269
  %279 = load i8*, i8** %70, align 8
  %280 = getelementptr inbounds i8, i8* %279, i64 %254
  %281 = icmp eq i8* %280, null
  br i1 %281, label %282, label %286

282:                                              ; preds = %278
  %283 = add i64 %253, 6
  store i64 %283, i64* %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %217) #16
  %284 = add i64 %253, 10
  br label %309

285:                                              ; preds = %272, %265
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %217) #16
  br label %357

286:                                              ; preds = %275, %278
  %287 = phi i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* [ null, %278 ], [ %277, %275 ]
  %288 = phi i64 [ %254, %278 ], [ %276, %275 ]
  %289 = phi i8* [ %280, %278 ], [ %217, %275 ]
  %290 = getelementptr inbounds i8, i8* %289, i64 1
  %291 = load i8, i8* %290, align 1
  %292 = zext i8 %291 to i64
  %293 = shl nuw nsw i64 %292, 16
  %294 = getelementptr inbounds i8, i8* %289, i64 2
  %295 = load i8, i8* %294, align 1
  %296 = zext i8 %295 to i64
  %297 = shl nuw nsw i64 %296, 8
  %298 = or i64 %293, %297
  %299 = getelementptr inbounds i8, i8* %289, i64 3
  %300 = load i8, i8* %299, align 1
  %301 = zext i8 %300 to i64
  %302 = or i64 %298, %301
  %303 = add i64 %288, 4
  store i64 %303, i64* %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %217) #16
  %304 = add i64 %288, 8
  %305 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %287, null
  br i1 %305, label %309, label %306

306:                                              ; preds = %286
  %307 = call i64 %287(%struct.FT_StreamRec_* %1, i64 %304, i8* null, i64 0) #16
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %314, label %357

309:                                              ; preds = %282, %286
  %310 = phi i64 [ %284, %282 ], [ %304, %286 ]
  %311 = phi i64 [ 0, %282 ], [ %302, %286 ]
  %312 = load i64, i64* %33, align 8
  %313 = icmp ult i64 %312, %310
  br i1 %313, label %357, label %314

314:                                              ; preds = %306, %309
  %315 = phi i64 [ %304, %306 ], [ %310, %309 ]
  %316 = phi i64 [ %302, %306 ], [ %311, %309 ]
  store i64 %315, i64* %29, align 8
  %317 = and i64 %316, 16777215
  %318 = getelementptr inbounds %struct.FT_RFork_Ref_, %struct.FT_RFork_Ref_* %213, i64 %219, i32 1
  store i64 %317, i64* %318, align 8
  %319 = add nuw nsw i64 %219, 1
  %320 = load i64, i64* %7, align 8
  %321 = icmp sgt i64 %320, %319
  br i1 %321, label %218, label %322

322:                                              ; preds = %314, %211
  %323 = phi i64 [ %214, %211 ], [ %320, %314 ]
  %324 = icmp eq i8 %5, 0
  br i1 %324, label %327, label %325

325:                                              ; preds = %322
  call void @qsort(i8* %212, i64 %323, i64 16, i32 (i8*, i8*)* nonnull @ft_raccess_sort_ref_by_id) #16
  %326 = load i64, i64* %7, align 8
  br label %327

327:                                              ; preds = %325, %322
  %328 = phi i64 [ %323, %322 ], [ %326, %325 ]
  %329 = icmp slt i64 %328, 0
  br i1 %329, label %357, label %330

330:                                              ; preds = %327
  %331 = icmp eq i64 %328, 0
  br i1 %331, label %341, label %332

332:                                              ; preds = %330
  %333 = icmp sgt i64 %328, 268435455
  br i1 %333, label %357, label %334

334:                                              ; preds = %332
  %335 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %13, i64 0, i32 1
  %336 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %335, align 8
  %337 = shl nsw i64 %328, 3
  %338 = call i8* %336(%struct.FT_MemoryRec_* %13, i64 %337) #16
  %339 = icmp eq i8* %338, null
  br i1 %339, label %357, label %340

340:                                              ; preds = %334
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %338, i8 0, i64 %337, i1 false) #16
  br label %341

341:                                              ; preds = %330, %340
  %342 = phi i8* [ null, %330 ], [ %338, %340 ]
  %343 = bitcast i8* %342 to i64*
  %344 = load i64, i64* %7, align 8
  %345 = icmp sgt i64 %344, 0
  br i1 %345, label %346, label %355

346:                                              ; preds = %341, %346
  %347 = phi i64 [ %352, %346 ], [ 0, %341 ]
  %348 = getelementptr inbounds %struct.FT_RFork_Ref_, %struct.FT_RFork_Ref_* %213, i64 %347, i32 1
  %349 = load i64, i64* %348, align 8
  %350 = add nsw i64 %349, %3
  %351 = getelementptr inbounds i64, i64* %343, i64 %347
  store i64 %350, i64* %351, align 8
  %352 = add nuw nsw i64 %347, 1
  %353 = load i64, i64* %7, align 8
  %354 = icmp sgt i64 %353, %352
  br i1 %354, label %346, label %355

355:                                              ; preds = %346, %341
  %356 = bitcast i64** %6 to i8**
  store i8* %342, i8** %356, align 8
  br label %357

357:                                              ; preds = %309, %306, %262, %257, %334, %327, %332, %285, %246, %355
  %358 = phi i32 [ 0, %355 ], [ 85, %246 ], [ 85, %285 ], [ 6, %327 ], [ 10, %332 ], [ 64, %334 ], [ 85, %257 ], [ 85, %262 ], [ 85, %306 ], [ 85, %309 ]
  %359 = icmp eq i8* %212, null
  br i1 %359, label %363, label %360

360:                                              ; preds = %357
  %361 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %13, i64 0, i32 2
  %362 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %361, align 8
  call void %362(%struct.FT_MemoryRec_* %13, i8* nonnull %212) #16
  br label %363

363:                                              ; preds = %71, %204, %63, %197, %202, %194, %191, %23, %17, %360, %357, %114, %146, %177, %50, %183, %51
  %364 = phi i32 [ 8, %51 ], [ 8, %183 ], [ 85, %50 ], [ 85, %177 ], [ 85, %146 ], [ 85, %114 ], [ %358, %357 ], [ %358, %360 ], [ 85, %17 ], [ 85, %23 ], [ 85, %191 ], [ 85, %194 ], [ 6, %197 ], [ 10, %202 ], [ 1, %63 ], [ 64, %204 ], [ 1, %71 ]
  ret i32 %364
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_*, i32* nocapture) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #16
  store i32 -1431655766, i32* %3, align 4
  store i32 0, i32* %1, align 4
  %5 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 3
  %8 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %49

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 5
  %13 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %12, align 8
  %14 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = call i64 %13(%struct.FT_StreamRec_* %0, i64 %6, i8* nonnull %4, i64 4) #16
  %17 = icmp eq i64 %16, 4
  br i1 %17, label %18, label %49

18:                                               ; preds = %15
  %19 = load i64, i64* %5, align 8
  br label %25

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %6
  %24 = icmp eq i8* %23, null
  br i1 %24, label %45, label %25

25:                                               ; preds = %18, %20
  %26 = phi i64 [ %6, %20 ], [ %19, %18 ]
  %27 = phi i8* [ %23, %20 ], [ %4, %18 ]
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i64
  %30 = shl nuw nsw i64 %29, 24
  %31 = getelementptr inbounds i8, i8* %27, i64 1
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i64
  %34 = shl nuw nsw i64 %33, 16
  %35 = or i64 %34, %30
  %36 = getelementptr inbounds i8, i8* %27, i64 2
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i64
  %39 = shl nuw nsw i64 %38, 8
  %40 = or i64 %35, %39
  %41 = getelementptr inbounds i8, i8* %27, i64 3
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i64
  %44 = or i64 %40, %43
  br label %45

45:                                               ; preds = %20, %25
  %46 = phi i64 [ %26, %25 ], [ %6, %20 ]
  %47 = phi i64 [ %44, %25 ], [ 0, %20 ]
  %48 = add i64 %46, 4
  store i64 %48, i64* %5, align 8
  br label %50

49:                                               ; preds = %15, %2
  store i32 85, i32* %1, align 4
  br label %50

50:                                               ; preds = %49, %45
  %51 = phi i64 [ 0, %49 ], [ %47, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #16
  ret i64 %51
}

; Function Attrs: nofree
declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) local_unnamed_addr #14

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @ft_raccess_sort_ref_by_id(i8* nocapture readonly, i8* nocapture readonly) #12 {
  %3 = bitcast i8* %0 to i16*
  %4 = load i16, i16* %3, align 8
  %5 = sext i16 %4 to i32
  %6 = bitcast i8* %1 to i16*
  %7 = load i16, i16* %6, align 8
  %8 = sext i16 %7 to i32
  %9 = sub nsw i32 %5, %8
  ret i32 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @FT_Raccess_Guess(%struct.FT_LibraryRec_* nocapture readnone, %struct.FT_StreamRec_* nocapture readnone, i8* nocapture readnone, i8** nocapture, i64* nocapture, i32* nocapture) local_unnamed_addr #10 {
  store i8* null, i8** %3, align 8
  store i64 0, i64* %4, align 8
  store i32 7, i32* %5, align 4
  %7 = getelementptr inbounds i8*, i8** %3, i64 1
  store i8* null, i8** %7, align 8
  %8 = getelementptr inbounds i64, i64* %4, i64 1
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds i32, i32* %5, i64 1
  store i32 7, i32* %9, align 4
  %10 = getelementptr inbounds i8*, i8** %3, i64 2
  store i8* null, i8** %10, align 8
  %11 = getelementptr inbounds i64, i64* %4, i64 2
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds i32, i32* %5, i64 2
  store i32 7, i32* %12, align 4
  %13 = getelementptr inbounds i8*, i8** %3, i64 3
  store i8* null, i8** %13, align 8
  %14 = getelementptr inbounds i64, i64* %4, i64 3
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds i32, i32* %5, i64 3
  store i32 7, i32* %15, align 4
  %16 = getelementptr inbounds i8*, i8** %3, i64 4
  store i8* null, i8** %16, align 8
  %17 = getelementptr inbounds i64, i64* %4, i64 4
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds i32, i32* %5, i64 4
  store i32 7, i32* %18, align 4
  %19 = getelementptr inbounds i8*, i8** %3, i64 5
  store i8* null, i8** %19, align 8
  %20 = getelementptr inbounds i64, i64* %4, i64 5
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds i32, i32* %5, i64 5
  store i32 7, i32* %21, align 4
  %22 = getelementptr inbounds i8*, i8** %3, i64 6
  store i8* null, i8** %22, align 8
  %23 = getelementptr inbounds i64, i64* %4, i64 6
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds i32, i32* %5, i64 6
  store i32 7, i32* %24, align 4
  %25 = getelementptr inbounds i8*, i8** %3, i64 7
  store i8* null, i8** %25, align 8
  %26 = getelementptr inbounds i64, i64* %4, i64 7
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds i32, i32* %5, i64 7
  store i32 7, i32* %27, align 4
  %28 = getelementptr inbounds i8*, i8** %3, i64 8
  store i8* null, i8** %28, align 8
  %29 = getelementptr inbounds i64, i64* %4, i64 8
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds i32, i32* %5, i64 8
  store i32 7, i32* %30, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @FT_Get_Sfnt_Name_Count(%struct.FT_FaceRec_* readonly) local_unnamed_addr #12 {
  %2 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %2, label %13, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 8
  %10 = bitcast %struct.FT_Bitmap_Size_** %9 to i16*
  %11 = load i16, i16* %10, align 8
  %12 = zext i16 %11 to i32
  br label %13

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ %12, %8 ], [ 0, %3 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_Sfnt_Name(%struct.FT_FaceRec_* readonly, i32, %struct.FT_SfntName_*) local_unnamed_addr #0 {
  %4 = icmp ne %struct.FT_SfntName_* %2, null
  %5 = icmp ne %struct.FT_FaceRec_* %0, null
  %6 = and i1 %5, %4
  br i1 %6, label %7, label %111

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %111, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 8
  %14 = bitcast %struct.FT_Bitmap_Size_** %13 to i16*
  %15 = load i16, i16* %14, align 8
  %16 = zext i16 %15 to i32
  %17 = icmp ugt i32 %16, %1
  br i1 %17, label %18, label %111

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 9
  %20 = getelementptr inbounds i32, i32* %19, i64 4
  %21 = bitcast i32* %20 to %struct.TT_NameRec_**
  %22 = load %struct.TT_NameRec_*, %struct.TT_NameRec_** %21, align 8
  %23 = zext i32 %1 to i64
  %24 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %22, i64 %23, i32 4
  %25 = load i16, i16* %24, align 8
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %90, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %22, i64 %23, i32 6
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %90

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 25
  %33 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %32, align 8
  %34 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 26
  %35 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %34, align 8
  %36 = zext i16 %25 to i64
  %37 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %33, i64 0, i32 1
  %38 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %37, align 8
  %39 = tail call i8* %38(%struct.FT_MemoryRec_* %33, i64 %36) #16
  %40 = icmp eq i8* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %31
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %39, i8 0, i64 %36, i1 false) #16
  store i8* %39, i8** %28, align 8
  %42 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %22, i64 %23, i32 5
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %35, i64 0, i32 5
  %45 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %44, align 8
  %46 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %45, null
  br i1 %46, label %54, label %48

47:                                               ; preds = %31
  store i8* null, i8** %28, align 8
  br label %89

48:                                               ; preds = %41
  %49 = tail call i64 %45(%struct.FT_StreamRec_* %35, i64 %43, i8* null, i64 0) #16
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %81

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %35, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  br label %58

54:                                               ; preds = %41
  %55 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %35, i64 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = icmp ult i64 %56, %43
  br i1 %57, label %81, label %58

58:                                               ; preds = %51, %54
  %59 = phi i64 [ %53, %51 ], [ %56, %54 ]
  %60 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %35, i64 0, i32 2
  store i64 %43, i64* %60, align 8
  %61 = load i8*, i8** %28, align 8
  %62 = load i16, i16* %24, align 8
  %63 = zext i16 %62 to i64
  %64 = icmp ugt i64 %59, %43
  br i1 %64, label %65, label %83

65:                                               ; preds = %58
  %66 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %44, align 8
  %67 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %65
  %69 = tail call i64 %66(%struct.FT_StreamRec_* %35, i64 %43, i8* %61, i64 %63) #16
  br label %77

70:                                               ; preds = %65
  %71 = sub i64 %59, %43
  %72 = icmp ugt i64 %71, %63
  %73 = select i1 %72, i64 %63, i64 %71
  %74 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %35, i64 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 %43
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 1 %76, i64 %73, i1 false) #16
  br label %77

77:                                               ; preds = %70, %68
  %78 = phi i64 [ %69, %68 ], [ %73, %70 ]
  %79 = add i64 %78, %43
  store i64 %79, i64* %60, align 8
  %80 = icmp ult i64 %78, %63
  br i1 %80, label %81, label %90

81:                                               ; preds = %77, %54, %48
  %82 = load i8*, i8** %28, align 8
  br label %83

83:                                               ; preds = %81, %58
  %84 = phi i8* [ %82, %81 ], [ %61, %58 ]
  %85 = icmp eq i8* %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %33, i64 0, i32 2
  %88 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %87, align 8
  tail call void %88(%struct.FT_MemoryRec_* %33, i8* nonnull %84) #16
  br label %89

89:                                               ; preds = %47, %83, %86
  store i8* null, i8** %28, align 8
  store i16 0, i16* %24, align 8
  br label %90

90:                                               ; preds = %77, %89, %27, %18
  %91 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %22, i64 %23, i32 0
  %92 = load i16, i16* %91, align 8
  %93 = getelementptr inbounds %struct.FT_SfntName_, %struct.FT_SfntName_* %2, i64 0, i32 0
  store i16 %92, i16* %93, align 8
  %94 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %22, i64 %23, i32 1
  %95 = load i16, i16* %94, align 2
  %96 = getelementptr inbounds %struct.FT_SfntName_, %struct.FT_SfntName_* %2, i64 0, i32 1
  store i16 %95, i16* %96, align 2
  %97 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %22, i64 %23, i32 2
  %98 = load i16, i16* %97, align 4
  %99 = getelementptr inbounds %struct.FT_SfntName_, %struct.FT_SfntName_* %2, i64 0, i32 2
  store i16 %98, i16* %99, align 4
  %100 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %22, i64 %23, i32 3
  %101 = load i16, i16* %100, align 2
  %102 = getelementptr inbounds %struct.FT_SfntName_, %struct.FT_SfntName_* %2, i64 0, i32 3
  store i16 %101, i16* %102, align 2
  %103 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %22, i64 %23, i32 6
  %104 = bitcast i8** %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %struct.FT_SfntName_, %struct.FT_SfntName_* %2, i64 0, i32 4
  %107 = bitcast i8** %106 to i64*
  store i64 %105, i64* %107, align 8
  %108 = load i16, i16* %24, align 8
  %109 = zext i16 %108 to i32
  %110 = getelementptr inbounds %struct.FT_SfntName_, %struct.FT_SfntName_* %2, i64 0, i32 5
  store i32 %109, i32* %110, align 8
  br label %111

111:                                              ; preds = %12, %90, %7, %3
  %112 = phi i32 [ 6, %7 ], [ 0, %90 ], [ 6, %12 ], [ 6, %3 ]
  ret i32 %112
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_Sfnt_LangTag(%struct.FT_FaceRec_* readonly, i32, %struct.FT_SfntLangTag_*) local_unnamed_addr #0 {
  %4 = icmp ne %struct.FT_SfntLangTag_* %2, null
  %5 = icmp ne %struct.FT_FaceRec_* %0, null
  %6 = and i1 %5, %4
  br i1 %6, label %7, label %103

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %103, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 9
  %14 = bitcast i32* %13 to i16*
  %15 = load i16, i16* %14, align 8
  %16 = icmp eq i16 %15, 1
  br i1 %16, label %17, label %103

17:                                               ; preds = %12
  %18 = icmp ugt i32 %1, 32768
  br i1 %18, label %19, label %103

19:                                               ; preds = %17
  %20 = add i32 %1, -32768
  %21 = getelementptr inbounds i32, i32* %13, i64 6
  %22 = load i32, i32* %21, align 8
  %23 = icmp ult i32 %20, %22
  br i1 %23, label %24, label %103

24:                                               ; preds = %19
  %25 = getelementptr inbounds i32, i32* %13, i64 8
  %26 = bitcast i32* %25 to %struct.TT_LangTagRec_**
  %27 = load %struct.TT_LangTagRec_*, %struct.TT_LangTagRec_** %26, align 8
  %28 = zext i32 %20 to i64
  %29 = getelementptr inbounds %struct.TT_LangTagRec_, %struct.TT_LangTagRec_* %27, i64 %28, i32 0
  %30 = load i16, i16* %29, align 8
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %95, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %struct.TT_LangTagRec_, %struct.TT_LangTagRec_* %27, i64 %28, i32 2
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %95

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 25
  %38 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %37, align 8
  %39 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 26
  %40 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %39, align 8
  %41 = zext i16 %30 to i64
  %42 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %38, i64 0, i32 1
  %43 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %42, align 8
  %44 = tail call i8* %43(%struct.FT_MemoryRec_* %38, i64 %41) #16
  %45 = icmp eq i8* %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %36
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %44, i8 0, i64 %41, i1 false) #16
  store i8* %44, i8** %33, align 8
  %47 = getelementptr inbounds %struct.TT_LangTagRec_, %struct.TT_LangTagRec_* %27, i64 %28, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %40, i64 0, i32 5
  %50 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %49, align 8
  %51 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %50, null
  br i1 %51, label %59, label %53

52:                                               ; preds = %36
  store i8* null, i8** %33, align 8
  br label %94

53:                                               ; preds = %46
  %54 = tail call i64 %50(%struct.FT_StreamRec_* %40, i64 %48, i8* null, i64 0) #16
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %86

56:                                               ; preds = %53
  %57 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %40, i64 0, i32 1
  %58 = load i64, i64* %57, align 8
  br label %63

59:                                               ; preds = %46
  %60 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %40, i64 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = icmp ult i64 %61, %48
  br i1 %62, label %86, label %63

63:                                               ; preds = %56, %59
  %64 = phi i64 [ %58, %56 ], [ %61, %59 ]
  %65 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %40, i64 0, i32 2
  store i64 %48, i64* %65, align 8
  %66 = load i8*, i8** %33, align 8
  %67 = load i16, i16* %29, align 8
  %68 = zext i16 %67 to i64
  %69 = icmp ugt i64 %64, %48
  br i1 %69, label %70, label %88

70:                                               ; preds = %63
  %71 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %49, align 8
  %72 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = tail call i64 %71(%struct.FT_StreamRec_* %40, i64 %48, i8* %66, i64 %68) #16
  br label %82

75:                                               ; preds = %70
  %76 = sub i64 %64, %48
  %77 = icmp ugt i64 %76, %68
  %78 = select i1 %77, i64 %68, i64 %76
  %79 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %40, i64 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 %48
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %66, i8* align 1 %81, i64 %78, i1 false) #16
  br label %82

82:                                               ; preds = %75, %73
  %83 = phi i64 [ %74, %73 ], [ %78, %75 ]
  %84 = add i64 %83, %48
  store i64 %84, i64* %65, align 8
  %85 = icmp ult i64 %83, %68
  br i1 %85, label %86, label %95

86:                                               ; preds = %82, %59, %53
  %87 = load i8*, i8** %33, align 8
  br label %88

88:                                               ; preds = %86, %63
  %89 = phi i8* [ %87, %86 ], [ %66, %63 ]
  %90 = icmp eq i8* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %38, i64 0, i32 2
  %93 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %92, align 8
  tail call void %93(%struct.FT_MemoryRec_* %38, i8* nonnull %89) #16
  br label %94

94:                                               ; preds = %52, %88, %91
  store i8* null, i8** %33, align 8
  store i16 0, i16* %29, align 8
  br label %95

95:                                               ; preds = %82, %94, %32, %24
  %96 = getelementptr inbounds %struct.TT_LangTagRec_, %struct.TT_LangTagRec_* %27, i64 %28, i32 2
  %97 = bitcast i8** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %struct.FT_SfntLangTag_* %2 to i64*
  store i64 %98, i64* %99, align 8
  %100 = load i16, i16* %29, align 8
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds %struct.FT_SfntLangTag_, %struct.FT_SfntLangTag_* %2, i64 0, i32 1
  store i32 %101, i32* %102, align 8
  br label %103

103:                                              ; preds = %3, %7, %17, %19, %95, %12
  %104 = phi i32 [ 8, %12 ], [ 6, %7 ], [ 0, %95 ], [ 6, %19 ], [ 6, %17 ], [ 6, %3 ]
  ret i32 %104
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @FT_Stream_Pos(%struct.FT_StreamRec_* nocapture readonly) local_unnamed_addr #12 {
  %2 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Stream_ReadAt(%struct.FT_StreamRec_*, i64, i8*, i64) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %1
  br i1 %7, label %8, label %27

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 5
  %10 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %9, align 8
  %11 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = tail call i64 %10(%struct.FT_StreamRec_* %0, i64 %1, i8* %2, i64 %3) #16
  br label %21

14:                                               ; preds = %8
  %15 = sub i64 %6, %1
  %16 = icmp ugt i64 %15, %3
  %17 = select i1 %16, i64 %3, i64 %15
  %18 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %20, i64 %17, i1 false)
  br label %21

21:                                               ; preds = %14, %12
  %22 = phi i64 [ %13, %12 ], [ %17, %14 ]
  %23 = add i64 %22, %1
  %24 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 2
  store i64 %23, i64* %24, align 8
  %25 = icmp ult i64 %22, %3
  %26 = select i1 %25, i32 85, i32 0
  br label %27

27:                                               ; preds = %4, %21
  %28 = phi i32 [ %26, %21 ], [ 85, %4 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @FT_Stream_TryRead(%struct.FT_StreamRec_*, i8*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %26

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 5
  %11 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %10, align 8
  %12 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = tail call i64 %11(%struct.FT_StreamRec_* %0, i64 %5, i8* %1, i64 %2) #16
  br label %22

15:                                               ; preds = %9
  %16 = sub i64 %7, %5
  %17 = icmp ugt i64 %16, %2
  %18 = select i1 %17, i64 %2, i64 %16
  %19 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 %5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %21, i64 %18, i1 false)
  br label %22

22:                                               ; preds = %15, %13
  %23 = phi i64 [ %14, %13 ], [ %18, %15 ]
  %24 = load i64, i64* %4, align 8
  %25 = add i64 %24, %23
  store i64 %25, i64* %4, align 8
  br label %26

26:                                               ; preds = %3, %22
  %27 = phi i64 [ 0, %3 ], [ %23, %22 ]
  ret i64 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_*, i64, i8** nocapture) local_unnamed_addr #0 {
  %4 = tail call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %0, i64 %1)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 8
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast i8** %2 to i64*
  store i64 %9, i64* %10, align 8
  %11 = bitcast i8** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  br label %12

12:                                               ; preds = %3, %6
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_*, i64) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 5
  %4 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %3, align 8
  %5 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %4, null
  br i1 %5, label %51, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 7
  %8 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %68, label %12

12:                                               ; preds = %6
  %13 = icmp sgt i64 %1, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %8, i64 0, i32 1
  %16 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %15, align 8
  %17 = tail call i8* %16(%struct.FT_MemoryRec_* %8, i64 %1) #16
  %18 = icmp eq i8* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %3, align 8
  br label %26

21:                                               ; preds = %12
  %22 = icmp eq i64 %1, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %14, %21
  %24 = phi i32 [ 6, %21 ], [ 64, %14 ]
  %25 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 0
  store i8* null, i8** %25, align 8
  br label %68

26:                                               ; preds = %19, %21
  %27 = phi i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* [ %20, %19 ], [ %4, %21 ]
  %28 = phi i8* [ %17, %19 ], [ null, %21 ]
  %29 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 0
  store i8* %28, i8** %29, align 8
  %30 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = tail call i64 %27(%struct.FT_StreamRec_* %0, i64 %31, i8* %28, i64 %1) #16
  %33 = icmp ult i64 %32, %1
  %34 = load i8*, i8** %29, align 8
  br i1 %33, label %35, label %41

35:                                               ; preds = %26
  %36 = icmp eq i8* %34, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %8, i64 0, i32 2
  %39 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %38, align 8
  tail call void %39(%struct.FT_MemoryRec_* %8, i8* nonnull %34) #16
  br label %40

40:                                               ; preds = %35, %37
  store i8* null, i8** %29, align 8
  br label %41

41:                                               ; preds = %26, %40
  %42 = phi i8* [ null, %40 ], [ %34, %26 ]
  %43 = phi i32 [ 85, %40 ], [ 0, %26 ]
  %44 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 8
  store i8* %42, i8** %44, align 8
  %45 = icmp eq i8* %42, null
  %46 = getelementptr inbounds i8, i8* %42, i64 %1
  %47 = select i1 %45, i8* null, i8* %46
  %48 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 9
  store i8* %47, i8** %48, align 8
  %49 = load i64, i64* %30, align 8
  %50 = add i64 %49, %32
  store i64 %50, i64* %30, align 8
  br label %68

51:                                               ; preds = %2
  %52 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = icmp ule i64 %55, %53
  %57 = sub i64 %55, %53
  %58 = icmp ult i64 %57, %1
  %59 = or i1 %56, %58
  br i1 %59, label %68, label %60

60:                                               ; preds = %51
  %61 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 %53
  %64 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 8
  store i8* %63, i8** %64, align 8
  %65 = getelementptr inbounds i8, i8* %63, i64 %1
  %66 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 9
  store i8* %65, i8** %66, align 8
  %67 = add i64 %53, %1
  store i64 %67, i64* %52, align 8
  br label %68

68:                                               ; preds = %51, %23, %6, %41, %60
  %69 = phi i32 [ 0, %60 ], [ %43, %41 ], [ %24, %23 ], [ 85, %6 ], [ 85, %51 ]
  ret i32 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* readonly, i8** nocapture) local_unnamed_addr #0 {
  %3 = icmp eq %struct.FT_StreamRec_* %0, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 5
  %6 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %5, align 8
  %7 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 7
  %10 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %9, align 8
  %11 = load i8*, i8** %1, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %10, i64 0, i32 2
  %15 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %14, align 8
  tail call void %15(%struct.FT_MemoryRec_* %10, i8* nonnull %11) #16
  br label %16

16:                                               ; preds = %8, %13
  store i8* null, i8** %1, align 8
  br label %17

17:                                               ; preds = %4, %2, %16
  store i8* null, i8** %1, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ft_mem_qalloc(%struct.FT_MemoryRec_*, i64, i32* nocapture) local_unnamed_addr #0 {
  %4 = icmp sgt i64 %1, 0
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %0, i64 0, i32 1
  %7 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %6, align 8
  %8 = tail call i8* %7(%struct.FT_MemoryRec_* %0, i64 %1) #16
  %9 = icmp eq i8* %8, null
  %10 = select i1 %9, i32 64, i32 0
  br label %14

11:                                               ; preds = %3
  %12 = icmp eq i64 %1, 0
  %13 = select i1 %12, i32 0, i32 6
  br label %14

14:                                               ; preds = %11, %5
  %15 = phi i32 [ %10, %5 ], [ %13, %11 ]
  %16 = phi i8* [ %8, %5 ], [ null, %11 ]
  store i32 %15, i32* %2, align 4
  ret i8* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 5
  %3 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %2, align 8
  %4 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 7
  %7 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %7, i64 0, i32 2
  %13 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %12, align 8
  tail call void %13(%struct.FT_MemoryRec_* %7, i8* nonnull %9) #16
  br label %14

14:                                               ; preds = %5, %11
  store i8* null, i8** %8, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 8
  %17 = bitcast i8** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden signext i8 @FT_Stream_GetChar(%struct.FT_StreamRec_* nocapture) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 8
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 9
  %5 = load i8*, i8** %4, align 8
  %6 = icmp ult i8* %3, %5
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %3, i64 1
  store i8* %8, i8** %2, align 8
  %9 = load i8, i8* %3, align 1
  br label %10

10:                                               ; preds = %7, %1
  %11 = phi i8 [ %9, %7 ], [ 0, %1 ]
  ret i8 %11
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* nocapture) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 8
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds i8, i8* %3, i64 1
  %5 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 9
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %16

8:                                                ; preds = %1
  %9 = getelementptr inbounds i8, i8* %3, i64 2
  %10 = load i8, i8* %3, align 1
  %11 = zext i8 %10 to i16
  %12 = shl nuw i16 %11, 8
  %13 = load i8, i8* %4, align 1
  %14 = zext i8 %13 to i16
  %15 = or i16 %12, %14
  br label %16

16:                                               ; preds = %8, %1
  %17 = phi i8* [ %9, %8 ], [ %3, %1 ]
  %18 = phi i16 [ %15, %8 ], [ 0, %1 ]
  store i8* %17, i8** %2, align 8
  ret i16 %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i16 @FT_Stream_GetUShortLE(%struct.FT_StreamRec_* nocapture) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 8
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds i8, i8* %3, i64 1
  %5 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 9
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %16

8:                                                ; preds = %1
  %9 = getelementptr inbounds i8, i8* %3, i64 2
  %10 = load i8, i8* %4, align 1
  %11 = zext i8 %10 to i16
  %12 = shl nuw i16 %11, 8
  %13 = load i8, i8* %3, align 1
  %14 = zext i8 %13 to i16
  %15 = or i16 %12, %14
  br label %16

16:                                               ; preds = %8, %1
  %17 = phi i8* [ %9, %8 ], [ %3, %1 ]
  %18 = phi i16 [ %15, %8 ], [ 0, %1 ]
  store i8* %17, i8** %2, align 8
  ret i16 %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @FT_Stream_GetUOffset(%struct.FT_StreamRec_* nocapture) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 8
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds i8, i8* %3, i64 2
  %5 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 9
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %21

8:                                                ; preds = %1
  %9 = getelementptr inbounds i8, i8* %3, i64 3
  %10 = load i8, i8* %3, align 1
  %11 = zext i8 %10 to i64
  %12 = shl nuw nsw i64 %11, 16
  %13 = getelementptr inbounds i8, i8* %3, i64 1
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i64
  %16 = shl nuw nsw i64 %15, 8
  %17 = or i64 %16, %12
  %18 = load i8, i8* %4, align 1
  %19 = zext i8 %18 to i64
  %20 = or i64 %17, %19
  br label %21

21:                                               ; preds = %8, %1
  %22 = phi i8* [ %9, %8 ], [ %3, %1 ]
  %23 = phi i64 [ %20, %8 ], [ 0, %1 ]
  store i8* %22, i8** %2, align 8
  ret i64 %23
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* nocapture) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 8
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds i8, i8* %3, i64 3
  %5 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 9
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %26

8:                                                ; preds = %1
  %9 = getelementptr inbounds i8, i8* %3, i64 4
  %10 = load i8, i8* %3, align 1
  %11 = zext i8 %10 to i64
  %12 = shl nuw nsw i64 %11, 24
  %13 = getelementptr inbounds i8, i8* %3, i64 1
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i64
  %16 = shl nuw nsw i64 %15, 16
  %17 = or i64 %16, %12
  %18 = getelementptr inbounds i8, i8* %3, i64 2
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = shl nuw nsw i64 %20, 8
  %22 = or i64 %17, %21
  %23 = load i8, i8* %4, align 1
  %24 = zext i8 %23 to i64
  %25 = or i64 %22, %24
  br label %26

26:                                               ; preds = %8, %1
  %27 = phi i8* [ %9, %8 ], [ %3, %1 ]
  %28 = phi i64 [ %25, %8 ], [ 0, %1 ]
  store i8* %27, i8** %2, align 8
  ret i64 %28
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @FT_Stream_GetULongLE(%struct.FT_StreamRec_* nocapture) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 8
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds i8, i8* %3, i64 3
  %5 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 9
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %26

8:                                                ; preds = %1
  %9 = getelementptr inbounds i8, i8* %3, i64 4
  %10 = load i8, i8* %4, align 1
  %11 = zext i8 %10 to i64
  %12 = shl nuw nsw i64 %11, 24
  %13 = getelementptr inbounds i8, i8* %3, i64 2
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i64
  %16 = shl nuw nsw i64 %15, 16
  %17 = or i64 %16, %12
  %18 = getelementptr inbounds i8, i8* %3, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = shl nuw nsw i64 %20, 8
  %22 = or i64 %17, %21
  %23 = load i8, i8* %3, align 1
  %24 = zext i8 %23 to i64
  %25 = or i64 %22, %24
  br label %26

26:                                               ; preds = %8, %1
  %27 = phi i8* [ %9, %8 ], [ %3, %1 ]
  %28 = phi i64 [ %25, %8 ], [ 0, %1 ]
  store i8* %27, i8** %2, align 8
  ret i64 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_*, i32* nocapture) local_unnamed_addr #0 {
  %3 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #16
  store i8 0, i8* %3, align 1
  store i32 0, i32* %1, align 4
  %4 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 5
  %5 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %4, align 8
  %6 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %5, null
  %7 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  br i1 %6, label %15, label %9

9:                                                ; preds = %2
  %10 = call i64 %5(%struct.FT_StreamRec_* %0, i64 %8, i8* nonnull %3, i64 1) #16
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %9
  %13 = load i64, i64* %7, align 8
  %14 = load i8, i8* %3, align 1
  br label %24

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %8, %17
  br i1 %18, label %19, label %28

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 %8
  %23 = load i8, i8* %22, align 1
  store i8 %23, i8* %3, align 1
  br label %24

24:                                               ; preds = %12, %19
  %25 = phi i8 [ %14, %12 ], [ %23, %19 ]
  %26 = phi i64 [ %13, %12 ], [ %8, %19 ]
  %27 = add i64 %26, 1
  store i64 %27, i64* %7, align 8
  br label %29

28:                                               ; preds = %9, %15
  store i32 85, i32* %1, align 4
  br label %29

29:                                               ; preds = %28, %24
  %30 = phi i8 [ 0, %28 ], [ %25, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #16
  ret i8 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @FT_Stream_ReadUShortLE(%struct.FT_StreamRec_*, i32* nocapture) local_unnamed_addr #0 {
  %3 = alloca [2 x i8], align 1
  %4 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %4) #16
  store i8 -86, i8* %4, align 1
  %5 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 1
  store i8 -86, i8* %5, align 1
  store i32 0, i32* %1, align 4
  %6 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 1
  %9 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ult i64 %8, %10
  br i1 %11, label %12, label %40

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 5
  %14 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %13, align 8
  %15 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = call i64 %14(%struct.FT_StreamRec_* %0, i64 %7, i8* nonnull %4, i64 2) #16
  %18 = icmp eq i64 %17, 2
  br i1 %18, label %19, label %40

19:                                               ; preds = %16
  %20 = load i64, i64* %6, align 8
  br label %26

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 %7
  %25 = icmp eq i8* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %19, %21
  %27 = phi i64 [ %7, %21 ], [ %20, %19 ]
  %28 = phi i8* [ %24, %21 ], [ %4, %19 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i16
  %32 = shl nuw i16 %31, 8
  %33 = load i8, i8* %28, align 1
  %34 = zext i8 %33 to i16
  %35 = or i16 %32, %34
  br label %36

36:                                               ; preds = %21, %26
  %37 = phi i64 [ %27, %26 ], [ %7, %21 ]
  %38 = phi i16 [ %35, %26 ], [ 0, %21 ]
  %39 = add i64 %37, 2
  store i64 %39, i64* %6, align 8
  br label %41

40:                                               ; preds = %16, %2
  store i32 85, i32* %1, align 4
  br label %41

41:                                               ; preds = %40, %36
  %42 = phi i16 [ 0, %40 ], [ %38, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %4) #16
  ret i16 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @FT_Stream_ReadUOffset(%struct.FT_StreamRec_*, i32* nocapture) local_unnamed_addr #0 {
  %3 = alloca [3 x i8], align 1
  %4 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %4) #16
  store i8 -86, i8* %4, align 1
  %5 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 1
  store i8 -86, i8* %5, align 1
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 2
  store i8 -86, i8* %6, align 1
  store i32 0, i32* %1, align 4
  %7 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 2
  %10 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %9, %11
  br i1 %12, label %13, label %46

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 5
  %15 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %14, align 8
  %16 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = call i64 %15(%struct.FT_StreamRec_* %0, i64 %8, i8* nonnull %4, i64 3) #16
  %19 = icmp eq i64 %18, 3
  br i1 %19, label %20, label %46

20:                                               ; preds = %17
  %21 = load i64, i64* %7, align 8
  br label %27

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 %8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %42, label %27

27:                                               ; preds = %20, %22
  %28 = phi i64 [ %8, %22 ], [ %21, %20 ]
  %29 = phi i8* [ %25, %22 ], [ %4, %20 ]
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = shl nuw nsw i64 %31, 16
  %33 = getelementptr inbounds i8, i8* %29, i64 1
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i64
  %36 = shl nuw nsw i64 %35, 8
  %37 = or i64 %36, %32
  %38 = getelementptr inbounds i8, i8* %29, i64 2
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i64
  %41 = or i64 %37, %40
  br label %42

42:                                               ; preds = %22, %27
  %43 = phi i64 [ %28, %27 ], [ %8, %22 ]
  %44 = phi i64 [ %41, %27 ], [ 0, %22 ]
  %45 = add i64 %43, 3
  store i64 %45, i64* %7, align 8
  br label %47

46:                                               ; preds = %17, %2
  store i32 85, i32* %1, align 4
  br label %47

47:                                               ; preds = %46, %42
  %48 = phi i64 [ 0, %46 ], [ %44, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %4) #16
  ret i64 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @FT_Stream_ReadULongLE(%struct.FT_StreamRec_*, i32* nocapture) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #16
  store i32 -1431655766, i32* %3, align 4
  store i32 0, i32* %1, align 4
  %5 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 3
  %8 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %49

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 5
  %13 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %12, align 8
  %14 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = call i64 %13(%struct.FT_StreamRec_* %0, i64 %6, i8* nonnull %4, i64 4) #16
  %17 = icmp eq i64 %16, 4
  br i1 %17, label %18, label %49

18:                                               ; preds = %15
  %19 = load i64, i64* %5, align 8
  br label %25

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %6
  %24 = icmp eq i8* %23, null
  br i1 %24, label %45, label %25

25:                                               ; preds = %18, %20
  %26 = phi i64 [ %6, %20 ], [ %19, %18 ]
  %27 = phi i8* [ %23, %20 ], [ %4, %18 ]
  %28 = getelementptr inbounds i8, i8* %27, i64 3
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = shl nuw nsw i64 %30, 24
  %32 = getelementptr inbounds i8, i8* %27, i64 2
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i64
  %35 = shl nuw nsw i64 %34, 16
  %36 = or i64 %35, %31
  %37 = getelementptr inbounds i8, i8* %27, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl nuw nsw i64 %39, 8
  %41 = or i64 %36, %40
  %42 = load i8, i8* %27, align 1
  %43 = zext i8 %42 to i64
  %44 = or i64 %41, %43
  br label %45

45:                                               ; preds = %20, %25
  %46 = phi i64 [ %26, %25 ], [ %6, %20 ]
  %47 = phi i64 [ %44, %25 ], [ 0, %20 ]
  %48 = add i64 %46, 4
  store i64 %48, i64* %5, align 8
  br label %50

49:                                               ; preds = %15, %2
  store i32 85, i32* %1, align 4
  br label %50

50:                                               ; preds = %49, %45
  %51 = phi i64 [ 0, %49 ], [ %47, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #16
  ret i64 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_*, %struct.FT_Frame_Field_* readonly, i8* nocapture) local_unnamed_addr #0 {
  %4 = icmp eq %struct.FT_Frame_Field_* %1, null
  br i1 %4, label %181, label %5

5:                                                ; preds = %3
  %6 = icmp eq %struct.FT_StreamRec_* %0, null
  br i1 %6, label %181, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 8
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 9
  br label %11

11:                                               ; preds = %158, %7
  %12 = phi %struct.FT_Frame_Field_* [ %1, %7 ], [ %161, %158 ]
  %13 = phi i8 [ 0, %7 ], [ %159, %158 ]
  %14 = phi i8* [ %9, %7 ], [ %160, %158 ]
  %15 = getelementptr inbounds %struct.FT_Frame_Field_, %struct.FT_Frame_Field_* %12, i64 0, i32 0
  %16 = load i8, i8* %15, align 2
  switch i8 %16, label %127 [
    i8 4, label %17
    i8 24, label %25
    i8 25, label %25
    i8 8, label %39
    i8 9, label %39
    i8 13, label %43
    i8 12, label %43
    i8 15, label %52
    i8 14, label %52
    i8 17, label %61
    i8 16, label %61
    i8 19, label %80
    i8 18, label %80
    i8 21, label %99
    i8 20, label %99
    i8 23, label %113
    i8 22, label %113
  ]

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.FT_Frame_Field_, %struct.FT_Frame_Field_* %12, i64 0, i32 2
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i64
  %21 = tail call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* nonnull %0, i64 %20)
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %162

23:                                               ; preds = %17
  %24 = load i8*, i8** %8, align 8
  br label %158

25:                                               ; preds = %11, %11
  %26 = getelementptr inbounds %struct.FT_Frame_Field_, %struct.FT_Frame_Field_* %12, i64 0, i32 1
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i64
  %29 = getelementptr inbounds i8, i8* %14, i64 %28
  %30 = load i8*, i8** %10, align 8
  %31 = icmp ugt i8* %29, %30
  br i1 %31, label %162, label %32

32:                                               ; preds = %25
  %33 = icmp eq i8 %16, 24
  br i1 %33, label %34, label %158

34:                                               ; preds = %32
  %35 = getelementptr inbounds %struct.FT_Frame_Field_, %struct.FT_Frame_Field_* %12, i64 0, i32 2
  %36 = load i16, i16* %35, align 2
  %37 = zext i16 %36 to i64
  %38 = getelementptr inbounds i8, i8* %2, i64 %37
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %14, i64 %28, i1 false)
  br label %158

39:                                               ; preds = %11, %11
  %40 = getelementptr inbounds i8, i8* %14, i64 1
  %41 = load i8, i8* %14, align 1
  %42 = zext i8 %41 to i64
  br label %128

43:                                               ; preds = %11, %11
  %44 = getelementptr inbounds i8, i8* %14, i64 2
  %45 = load i8, i8* %14, align 1
  %46 = zext i8 %45 to i64
  %47 = shl nuw nsw i64 %46, 8
  %48 = getelementptr inbounds i8, i8* %14, i64 1
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i64
  %51 = or i64 %47, %50
  br label %128

52:                                               ; preds = %11, %11
  %53 = getelementptr inbounds i8, i8* %14, i64 2
  %54 = getelementptr inbounds i8, i8* %14, i64 1
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i64
  %57 = shl nuw nsw i64 %56, 8
  %58 = load i8, i8* %14, align 1
  %59 = zext i8 %58 to i64
  %60 = or i64 %57, %59
  br label %128

61:                                               ; preds = %11, %11
  %62 = getelementptr inbounds i8, i8* %14, i64 4
  %63 = load i8, i8* %14, align 1
  %64 = zext i8 %63 to i64
  %65 = shl nuw nsw i64 %64, 24
  %66 = getelementptr inbounds i8, i8* %14, i64 1
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = shl nuw nsw i64 %68, 16
  %70 = or i64 %69, %65
  %71 = getelementptr inbounds i8, i8* %14, i64 2
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i64
  %74 = shl nuw nsw i64 %73, 8
  %75 = or i64 %70, %74
  %76 = getelementptr inbounds i8, i8* %14, i64 3
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i64
  %79 = or i64 %75, %78
  br label %128

80:                                               ; preds = %11, %11
  %81 = getelementptr inbounds i8, i8* %14, i64 4
  %82 = getelementptr inbounds i8, i8* %14, i64 3
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i64
  %85 = shl nuw nsw i64 %84, 24
  %86 = getelementptr inbounds i8, i8* %14, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = shl nuw nsw i64 %88, 16
  %90 = or i64 %89, %85
  %91 = getelementptr inbounds i8, i8* %14, i64 1
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i64
  %94 = shl nuw nsw i64 %93, 8
  %95 = or i64 %90, %94
  %96 = load i8, i8* %14, align 1
  %97 = zext i8 %96 to i64
  %98 = or i64 %95, %97
  br label %128

99:                                               ; preds = %11, %11
  %100 = getelementptr inbounds i8, i8* %14, i64 3
  %101 = load i8, i8* %14, align 1
  %102 = zext i8 %101 to i64
  %103 = shl nuw nsw i64 %102, 16
  %104 = getelementptr inbounds i8, i8* %14, i64 1
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i64
  %107 = shl nuw nsw i64 %106, 8
  %108 = or i64 %107, %103
  %109 = getelementptr inbounds i8, i8* %14, i64 2
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i64
  %112 = or i64 %108, %111
  br label %128

113:                                              ; preds = %11, %11
  %114 = getelementptr inbounds i8, i8* %14, i64 3
  %115 = getelementptr inbounds i8, i8* %14, i64 2
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i64
  %118 = shl nuw nsw i64 %117, 16
  %119 = getelementptr inbounds i8, i8* %14, i64 1
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i64
  %122 = shl nuw nsw i64 %121, 8
  %123 = or i64 %122, %118
  %124 = load i8, i8* %14, align 1
  %125 = zext i8 %124 to i64
  %126 = or i64 %123, %125
  br label %128

127:                                              ; preds = %11
  store i8* %14, i8** %8, align 8
  br label %162

128:                                              ; preds = %113, %99, %80, %61, %52, %43, %39
  %129 = phi i8* [ %114, %113 ], [ %100, %99 ], [ %81, %80 ], [ %62, %61 ], [ %53, %52 ], [ %44, %43 ], [ %40, %39 ]
  %130 = phi i64 [ %126, %113 ], [ %112, %99 ], [ %98, %80 ], [ %79, %61 ], [ %60, %52 ], [ %51, %43 ], [ %42, %39 ]
  %131 = phi i32 [ 8, %113 ], [ 8, %99 ], [ 0, %80 ], [ 0, %61 ], [ 16, %52 ], [ 16, %43 ], [ 24, %39 ]
  %132 = and i8 %16, 1
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %140, label %134

134:                                              ; preds = %128
  %135 = zext i32 %131 to i64
  %136 = shl i64 %130, %135
  %137 = trunc i64 %136 to i32
  %138 = ashr i32 %137, %131
  %139 = sext i32 %138 to i64
  br label %140

140:                                              ; preds = %128, %134
  %141 = phi i64 [ %139, %134 ], [ %130, %128 ]
  %142 = getelementptr inbounds %struct.FT_Frame_Field_, %struct.FT_Frame_Field_* %12, i64 0, i32 2
  %143 = load i16, i16* %142, align 2
  %144 = zext i16 %143 to i64
  %145 = getelementptr inbounds i8, i8* %2, i64 %144
  %146 = getelementptr inbounds %struct.FT_Frame_Field_, %struct.FT_Frame_Field_* %12, i64 0, i32 1
  %147 = load i8, i8* %146, align 1
  switch i8 %147, label %156 [
    i8 1, label %148
    i8 2, label %150
    i8 4, label %153
  ]

148:                                              ; preds = %140
  %149 = trunc i64 %141 to i8
  store i8 %149, i8* %145, align 1
  br label %158

150:                                              ; preds = %140
  %151 = trunc i64 %141 to i16
  %152 = bitcast i8* %145 to i16*
  store i16 %151, i16* %152, align 2
  br label %158

153:                                              ; preds = %140
  %154 = trunc i64 %141 to i32
  %155 = bitcast i8* %145 to i32*
  store i32 %154, i32* %155, align 4
  br label %158

156:                                              ; preds = %140
  %157 = bitcast i8* %145 to i64*
  store i64 %141, i64* %157, align 8
  br label %158

158:                                              ; preds = %148, %150, %153, %156, %32, %34, %23
  %159 = phi i8 [ 1, %23 ], [ %13, %34 ], [ %13, %32 ], [ %13, %156 ], [ %13, %153 ], [ %13, %150 ], [ %13, %148 ]
  %160 = phi i8* [ %24, %23 ], [ %29, %34 ], [ %29, %32 ], [ %129, %156 ], [ %129, %153 ], [ %129, %150 ], [ %129, %148 ]
  %161 = getelementptr inbounds %struct.FT_Frame_Field_, %struct.FT_Frame_Field_* %12, i64 1
  br label %11

162:                                              ; preds = %17, %25, %127
  %163 = phi i32 [ 0, %127 ], [ 85, %25 ], [ %21, %17 ]
  %164 = icmp eq i8 %13, 0
  br i1 %164, label %181, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 5
  %167 = load i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %166, align 8
  %168 = icmp eq i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* %167, null
  br i1 %168, label %179, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 7
  %171 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %170, align 8
  %172 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 0
  %173 = load i8*, i8** %172, align 8
  %174 = icmp eq i8* %173, null
  br i1 %174, label %178, label %175

175:                                              ; preds = %169
  %176 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %171, i64 0, i32 2
  %177 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %176, align 8
  tail call void %177(%struct.FT_MemoryRec_* %171, i8* nonnull %173) #16
  br label %178

178:                                              ; preds = %175, %169
  store i8* null, i8** %172, align 8
  br label %179

179:                                              ; preds = %165, %178
  %180 = bitcast i8** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 16, i1 false) #16
  br label %181

181:                                              ; preds = %179, %162, %5, %3
  %182 = phi i32 [ 6, %3 ], [ 40, %5 ], [ %163, %162 ], [ %163, %179 ]
  ret i32 %182
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @FT_Cos(i64) local_unnamed_addr #4 {
  %2 = icmp slt i64 %0, -2949120
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = icmp sgt i64 %0, 2949120
  br i1 %4, label %12, label %19

5:                                                ; preds = %1, %5
  %6 = phi i64 [ %9, %5 ], [ 0, %1 ]
  %7 = phi i64 [ %6, %5 ], [ 14408027, %1 ]
  %8 = phi i64 [ %10, %5 ], [ %0, %1 ]
  %9 = sub nsw i64 0, %7
  %10 = add nsw i64 %8, 5898240
  %11 = icmp slt i64 %10, -2949120
  br i1 %11, label %5, label %19

12:                                               ; preds = %3, %12
  %13 = phi i64 [ %14, %12 ], [ 0, %3 ]
  %14 = phi i64 [ %16, %12 ], [ 14408027, %3 ]
  %15 = phi i64 [ %17, %12 ], [ %0, %3 ]
  %16 = sub nsw i64 0, %13
  %17 = add nsw i64 %15, -5898240
  %18 = icmp sgt i64 %17, 2949120
  br i1 %18, label %12, label %19

19:                                               ; preds = %12, %5, %3
  %20 = phi i64 [ 0, %3 ], [ %9, %5 ], [ %14, %12 ]
  %21 = phi i64 [ 14408027, %3 ], [ %6, %5 ], [ %16, %12 ]
  %22 = phi i64 [ %0, %3 ], [ %10, %5 ], [ %17, %12 ]
  br label %23

23:                                               ; preds = %19, %47
  %24 = phi i64 [ %53, %47 ], [ 1, %19 ]
  %25 = phi i64* [ %51, %47 ], [ getelementptr inbounds ([22 x i64], [22 x i64]* @ft_trig_arctan_table, i64 0, i64 0), %19 ]
  %26 = phi i64 [ %52, %47 ], [ 1, %19 ]
  %27 = phi i64 [ %50, %47 ], [ %20, %19 ]
  %28 = phi i64 [ %49, %47 ], [ %21, %19 ]
  %29 = phi i64 [ %48, %47 ], [ %22, %19 ]
  %30 = icmp slt i64 %29, 0
  %31 = add nsw i64 %27, %26
  %32 = ashr i64 %31, %24
  br i1 %30, label %33, label %40

33:                                               ; preds = %23
  %34 = add nsw i64 %32, %28
  %35 = add nsw i64 %28, %26
  %36 = ashr i64 %35, %24
  %37 = sub nsw i64 %27, %36
  %38 = load i64, i64* %25, align 8
  %39 = add nsw i64 %38, %29
  br label %47

40:                                               ; preds = %23
  %41 = sub nsw i64 %28, %32
  %42 = add nsw i64 %28, %26
  %43 = ashr i64 %42, %24
  %44 = add nsw i64 %43, %27
  %45 = load i64, i64* %25, align 8
  %46 = sub nsw i64 %29, %45
  br label %47

47:                                               ; preds = %40, %33
  %48 = phi i64 [ %39, %33 ], [ %46, %40 ]
  %49 = phi i64 [ %34, %33 ], [ %41, %40 ]
  %50 = phi i64 [ %37, %33 ], [ %44, %40 ]
  %51 = getelementptr inbounds i64, i64* %25, i64 1
  %52 = shl i64 %26, 1
  %53 = add nuw nsw i64 %24, 1
  %54 = icmp eq i64 %53, 23
  br i1 %54, label %55, label %23

55:                                               ; preds = %47
  %56 = add nsw i64 %49, 128
  %57 = ashr i64 %56, 8
  ret i64 %57
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @FT_Vector_Unit(%struct.FT_Vector_*, i64) local_unnamed_addr #3 {
  %3 = icmp eq %struct.FT_Vector_* %0, null
  br i1 %3, label %66, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 0
  %6 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 1
  %7 = bitcast %struct.FT_Vector_* %0 to <2 x i64>*
  store <2 x i64> <i64 14408027, i64 0>, <2 x i64>* %7, align 8
  %8 = icmp slt i64 %1, -2949120
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = icmp sgt i64 %1, 2949120
  br i1 %10, label %18, label %25

11:                                               ; preds = %4, %11
  %12 = phi i64 [ %15, %11 ], [ 0, %4 ]
  %13 = phi i64 [ %12, %11 ], [ 14408027, %4 ]
  %14 = phi i64 [ %16, %11 ], [ %1, %4 ]
  %15 = sub nsw i64 0, %13
  %16 = add nsw i64 %14, 5898240
  %17 = icmp slt i64 %16, -2949120
  br i1 %17, label %11, label %25

18:                                               ; preds = %9, %18
  %19 = phi i64 [ %20, %18 ], [ 0, %9 ]
  %20 = phi i64 [ %22, %18 ], [ 14408027, %9 ]
  %21 = phi i64 [ %23, %18 ], [ %1, %9 ]
  %22 = sub nsw i64 0, %19
  %23 = add nsw i64 %21, -5898240
  %24 = icmp sgt i64 %23, 2949120
  br i1 %24, label %18, label %25

25:                                               ; preds = %18, %11, %9
  %26 = phi i64 [ 0, %9 ], [ %15, %11 ], [ %20, %18 ]
  %27 = phi i64 [ 14408027, %9 ], [ %12, %11 ], [ %22, %18 ]
  %28 = phi i64 [ %1, %9 ], [ %16, %11 ], [ %23, %18 ]
  br label %29

29:                                               ; preds = %25, %53
  %30 = phi i64 [ %59, %53 ], [ 1, %25 ]
  %31 = phi i64* [ %57, %53 ], [ getelementptr inbounds ([22 x i64], [22 x i64]* @ft_trig_arctan_table, i64 0, i64 0), %25 ]
  %32 = phi i64 [ %58, %53 ], [ 1, %25 ]
  %33 = phi i64 [ %56, %53 ], [ %26, %25 ]
  %34 = phi i64 [ %55, %53 ], [ %27, %25 ]
  %35 = phi i64 [ %54, %53 ], [ %28, %25 ]
  %36 = icmp slt i64 %35, 0
  %37 = add nsw i64 %33, %32
  %38 = ashr i64 %37, %30
  br i1 %36, label %39, label %46

39:                                               ; preds = %29
  %40 = add nsw i64 %38, %34
  %41 = add nsw i64 %34, %32
  %42 = ashr i64 %41, %30
  %43 = sub nsw i64 %33, %42
  %44 = load i64, i64* %31, align 8
  %45 = add nsw i64 %44, %35
  br label %53

46:                                               ; preds = %29
  %47 = sub nsw i64 %34, %38
  %48 = add nsw i64 %34, %32
  %49 = ashr i64 %48, %30
  %50 = add nsw i64 %49, %33
  %51 = load i64, i64* %31, align 8
  %52 = sub nsw i64 %35, %51
  br label %53

53:                                               ; preds = %46, %39
  %54 = phi i64 [ %45, %39 ], [ %52, %46 ]
  %55 = phi i64 [ %40, %39 ], [ %47, %46 ]
  %56 = phi i64 [ %43, %39 ], [ %50, %46 ]
  %57 = getelementptr inbounds i64, i64* %31, i64 1
  %58 = shl i64 %32, 1
  %59 = add nuw nsw i64 %30, 1
  %60 = icmp eq i64 %59, 23
  br i1 %60, label %61, label %29

61:                                               ; preds = %53
  %62 = add nsw i64 %55, 128
  %63 = ashr i64 %62, 8
  store i64 %63, i64* %5, align 8
  %64 = add nsw i64 %56, 128
  %65 = ashr i64 %64, 8
  store i64 %65, i64* %6, align 8
  br label %66

66:                                               ; preds = %2, %61
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @FT_Sin(i64) local_unnamed_addr #4 {
  %2 = icmp slt i64 %0, -2949120
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = icmp sgt i64 %0, 2949120
  br i1 %4, label %12, label %19

5:                                                ; preds = %1, %5
  %6 = phi i64 [ %9, %5 ], [ 0, %1 ]
  %7 = phi i64 [ %6, %5 ], [ 14408027, %1 ]
  %8 = phi i64 [ %10, %5 ], [ %0, %1 ]
  %9 = sub nsw i64 0, %7
  %10 = add nsw i64 %8, 5898240
  %11 = icmp slt i64 %10, -2949120
  br i1 %11, label %5, label %19

12:                                               ; preds = %3, %12
  %13 = phi i64 [ %14, %12 ], [ 0, %3 ]
  %14 = phi i64 [ %16, %12 ], [ 14408027, %3 ]
  %15 = phi i64 [ %17, %12 ], [ %0, %3 ]
  %16 = sub nsw i64 0, %13
  %17 = add nsw i64 %15, -5898240
  %18 = icmp sgt i64 %17, 2949120
  br i1 %18, label %12, label %19

19:                                               ; preds = %12, %5, %3
  %20 = phi i64 [ 0, %3 ], [ %9, %5 ], [ %14, %12 ]
  %21 = phi i64 [ 14408027, %3 ], [ %6, %5 ], [ %16, %12 ]
  %22 = phi i64 [ %0, %3 ], [ %10, %5 ], [ %17, %12 ]
  br label %23

23:                                               ; preds = %19, %47
  %24 = phi i64 [ %53, %47 ], [ 1, %19 ]
  %25 = phi i64* [ %51, %47 ], [ getelementptr inbounds ([22 x i64], [22 x i64]* @ft_trig_arctan_table, i64 0, i64 0), %19 ]
  %26 = phi i64 [ %52, %47 ], [ 1, %19 ]
  %27 = phi i64 [ %50, %47 ], [ %20, %19 ]
  %28 = phi i64 [ %49, %47 ], [ %21, %19 ]
  %29 = phi i64 [ %48, %47 ], [ %22, %19 ]
  %30 = icmp slt i64 %29, 0
  %31 = add nsw i64 %27, %26
  %32 = ashr i64 %31, %24
  br i1 %30, label %33, label %40

33:                                               ; preds = %23
  %34 = add nsw i64 %32, %28
  %35 = add nsw i64 %28, %26
  %36 = ashr i64 %35, %24
  %37 = sub nsw i64 %27, %36
  %38 = load i64, i64* %25, align 8
  %39 = add nsw i64 %38, %29
  br label %47

40:                                               ; preds = %23
  %41 = sub nsw i64 %28, %32
  %42 = add nsw i64 %28, %26
  %43 = ashr i64 %42, %24
  %44 = add nsw i64 %43, %27
  %45 = load i64, i64* %25, align 8
  %46 = sub nsw i64 %29, %45
  br label %47

47:                                               ; preds = %40, %33
  %48 = phi i64 [ %39, %33 ], [ %46, %40 ]
  %49 = phi i64 [ %34, %33 ], [ %41, %40 ]
  %50 = phi i64 [ %37, %33 ], [ %44, %40 ]
  %51 = getelementptr inbounds i64, i64* %25, i64 1
  %52 = shl i64 %26, 1
  %53 = add nuw nsw i64 %24, 1
  %54 = icmp eq i64 %53, 23
  br i1 %54, label %55, label %23

55:                                               ; preds = %47
  %56 = add nsw i64 %50, 128
  %57 = ashr i64 %56, 8
  ret i64 %57
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @FT_Tan(i64) local_unnamed_addr #4 {
  %2 = icmp slt i64 %0, -2949120
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = icmp sgt i64 %0, 2949120
  br i1 %4, label %12, label %19

5:                                                ; preds = %1, %5
  %6 = phi i64 [ %9, %5 ], [ 0, %1 ]
  %7 = phi i64 [ %6, %5 ], [ 16777216, %1 ]
  %8 = phi i64 [ %10, %5 ], [ %0, %1 ]
  %9 = sub nsw i64 0, %7
  %10 = add nsw i64 %8, 5898240
  %11 = icmp slt i64 %10, -2949120
  br i1 %11, label %5, label %19

12:                                               ; preds = %3, %12
  %13 = phi i64 [ %14, %12 ], [ 0, %3 ]
  %14 = phi i64 [ %16, %12 ], [ 16777216, %3 ]
  %15 = phi i64 [ %17, %12 ], [ %0, %3 ]
  %16 = sub nsw i64 0, %13
  %17 = add nsw i64 %15, -5898240
  %18 = icmp sgt i64 %17, 2949120
  br i1 %18, label %12, label %19

19:                                               ; preds = %12, %5, %3
  %20 = phi i64 [ 0, %3 ], [ %9, %5 ], [ %14, %12 ]
  %21 = phi i64 [ 16777216, %3 ], [ %6, %5 ], [ %16, %12 ]
  %22 = phi i64 [ %0, %3 ], [ %10, %5 ], [ %17, %12 ]
  br label %23

23:                                               ; preds = %19, %47
  %24 = phi i64 [ %53, %47 ], [ 1, %19 ]
  %25 = phi i64* [ %51, %47 ], [ getelementptr inbounds ([22 x i64], [22 x i64]* @ft_trig_arctan_table, i64 0, i64 0), %19 ]
  %26 = phi i64 [ %52, %47 ], [ 1, %19 ]
  %27 = phi i64 [ %50, %47 ], [ %20, %19 ]
  %28 = phi i64 [ %49, %47 ], [ %21, %19 ]
  %29 = phi i64 [ %48, %47 ], [ %22, %19 ]
  %30 = icmp slt i64 %29, 0
  %31 = add nsw i64 %27, %26
  %32 = ashr i64 %31, %24
  br i1 %30, label %33, label %40

33:                                               ; preds = %23
  %34 = add nsw i64 %32, %28
  %35 = add nsw i64 %28, %26
  %36 = ashr i64 %35, %24
  %37 = sub nsw i64 %27, %36
  %38 = load i64, i64* %25, align 8
  %39 = add nsw i64 %38, %29
  br label %47

40:                                               ; preds = %23
  %41 = sub nsw i64 %28, %32
  %42 = add nsw i64 %28, %26
  %43 = ashr i64 %42, %24
  %44 = add nsw i64 %43, %27
  %45 = load i64, i64* %25, align 8
  %46 = sub nsw i64 %29, %45
  br label %47

47:                                               ; preds = %40, %33
  %48 = phi i64 [ %39, %33 ], [ %46, %40 ]
  %49 = phi i64 [ %34, %33 ], [ %41, %40 ]
  %50 = phi i64 [ %37, %33 ], [ %44, %40 ]
  %51 = getelementptr inbounds i64, i64* %25, i64 1
  %52 = shl i64 %26, 1
  %53 = add nuw nsw i64 %24, 1
  %54 = icmp eq i64 %53, 23
  br i1 %54, label %55, label %23

55:                                               ; preds = %47
  %56 = icmp slt i64 %50, 0
  %57 = select i1 %56, i32 -1, i32 1
  %58 = icmp slt i64 %49, 0
  %59 = sub i64 0, %49
  %60 = sub nsw i32 0, %57
  %61 = select i1 %58, i32 %60, i32 %57
  %62 = select i1 %58, i64 %59, i64 %49
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %71, label %64

64:                                               ; preds = %55
  %65 = sub i64 0, %50
  %66 = select i1 %56, i64 %65, i64 %50
  %67 = shl i64 %66, 16
  %68 = lshr i64 %62, 1
  %69 = add i64 %67, %68
  %70 = udiv i64 %69, %62
  br label %71

71:                                               ; preds = %55, %64
  %72 = phi i64 [ %70, %64 ], [ 2147483647, %55 ]
  %73 = icmp slt i32 %61, 0
  %74 = sub i64 0, %72
  %75 = select i1 %73, i64 %74, i64 %72
  ret i64 %75
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @FT_Atan2(i64, i64) local_unnamed_addr #4 {
  %3 = or i64 %1, %0
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %89, label %5

5:                                                ; preds = %2
  %6 = icmp slt i64 %0, 0
  %7 = sub nsw i64 0, %0
  %8 = select i1 %6, i64 %7, i64 %0
  %9 = icmp slt i64 %1, 0
  %10 = sub nsw i64 0, %1
  %11 = select i1 %9, i64 %10, i64 %1
  %12 = or i64 %11, %8
  %13 = trunc i64 %12 to i32
  %14 = tail call i32 @llvm.ctlz.i32(i32 %13, i1 true) #16, !range !2
  %15 = xor i32 %14, 31
  %16 = icmp ult i32 %15, 30
  br i1 %16, label %17, label %22

17:                                               ; preds = %5
  %18 = sub nuw nsw i32 29, %15
  %19 = zext i32 %18 to i64
  %20 = shl i64 %0, %19
  %21 = shl i64 %1, %19
  br label %27

22:                                               ; preds = %5
  %23 = add nsw i32 %15, -29
  %24 = zext i32 %23 to i64
  %25 = ashr i64 %0, %24
  %26 = ashr i64 %1, %24
  br label %27

27:                                               ; preds = %17, %22
  %28 = phi i64 [ %21, %17 ], [ %26, %22 ]
  %29 = phi i64 [ %20, %17 ], [ %25, %22 ]
  %30 = icmp sgt i64 %28, %29
  %31 = sub nsw i64 0, %29
  br i1 %30, label %32, label %38

32:                                               ; preds = %27
  %33 = icmp sgt i64 %28, %31
  br i1 %33, label %44, label %34

34:                                               ; preds = %32
  %35 = icmp sgt i64 %28, 0
  %36 = select i1 %35, i64 11796480, i64 -11796480
  %37 = sub nsw i64 0, %28
  br label %44

38:                                               ; preds = %27
  %39 = icmp slt i64 %28, %31
  %40 = sub nsw i64 0, %28
  %41 = select i1 %39, i64 -5898240, i64 0
  %42 = select i1 %39, i64 %40, i64 %29
  %43 = select i1 %39, i64 %29, i64 %28
  br label %44

44:                                               ; preds = %38, %34, %32
  %45 = phi i64 [ %31, %32 ], [ %37, %34 ], [ %43, %38 ]
  %46 = phi i64 [ %28, %32 ], [ %31, %34 ], [ %42, %38 ]
  %47 = phi i64 [ 5898240, %32 ], [ %36, %34 ], [ %41, %38 ]
  br label %48

48:                                               ; preds = %44, %72
  %49 = phi i64 [ %78, %72 ], [ 1, %44 ]
  %50 = phi i64* [ %76, %72 ], [ getelementptr inbounds ([22 x i64], [22 x i64]* @ft_trig_arctan_table, i64 0, i64 0), %44 ]
  %51 = phi i64 [ %77, %72 ], [ 1, %44 ]
  %52 = phi i64 [ %75, %72 ], [ %45, %44 ]
  %53 = phi i64 [ %74, %72 ], [ %46, %44 ]
  %54 = phi i64 [ %73, %72 ], [ %47, %44 ]
  %55 = icmp sgt i64 %52, 0
  %56 = add nsw i64 %52, %51
  %57 = ashr i64 %56, %49
  br i1 %55, label %58, label %65

58:                                               ; preds = %48
  %59 = add nsw i64 %57, %53
  %60 = add nsw i64 %53, %51
  %61 = ashr i64 %60, %49
  %62 = sub nsw i64 %52, %61
  %63 = load i64, i64* %50, align 8
  %64 = add nsw i64 %63, %54
  br label %72

65:                                               ; preds = %48
  %66 = sub nsw i64 %53, %57
  %67 = add nsw i64 %53, %51
  %68 = ashr i64 %67, %49
  %69 = add nsw i64 %68, %52
  %70 = load i64, i64* %50, align 8
  %71 = sub nsw i64 %54, %70
  br label %72

72:                                               ; preds = %65, %58
  %73 = phi i64 [ %64, %58 ], [ %71, %65 ]
  %74 = phi i64 [ %59, %58 ], [ %66, %65 ]
  %75 = phi i64 [ %62, %58 ], [ %69, %65 ]
  %76 = getelementptr inbounds i64, i64* %50, i64 1
  %77 = shl i64 %51, 1
  %78 = add nuw nsw i64 %49, 1
  %79 = icmp eq i64 %78, 23
  br i1 %79, label %80, label %48

80:                                               ; preds = %72
  %81 = icmp sgt i64 %73, -1
  br i1 %81, label %82, label %85

82:                                               ; preds = %80
  %83 = add nuw nsw i64 %73, 8
  %84 = and i64 %83, -16
  br label %89

85:                                               ; preds = %80
  %86 = sub i64 8, %73
  %87 = and i64 %86, -16
  %88 = sub nsw i64 0, %87
  br label %89

89:                                               ; preds = %85, %82, %2
  %90 = phi i64 [ 0, %2 ], [ %84, %82 ], [ %88, %85 ]
  ret i64 %90
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_Vector_Rotate(%struct.FT_Vector_*, i64) local_unnamed_addr #0 {
  %3 = icmp ne %struct.FT_Vector_* %0, null
  %4 = icmp ne i64 %1, 0
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %129

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = or i64 %10, %8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %129, label %13

13:                                               ; preds = %6
  %14 = icmp slt i64 %8, 0
  %15 = sub nsw i64 0, %8
  %16 = select i1 %14, i64 %15, i64 %8
  %17 = icmp slt i64 %10, 0
  %18 = sub nsw i64 0, %10
  %19 = select i1 %17, i64 %18, i64 %10
  %20 = or i64 %19, %16
  %21 = trunc i64 %20 to i32
  %22 = tail call i32 @llvm.ctlz.i32(i32 %21, i1 true) #16, !range !2
  %23 = xor i32 %22, 31
  %24 = icmp ult i32 %23, 30
  br i1 %24, label %25, label %30

25:                                               ; preds = %13
  %26 = sub nuw nsw i32 29, %23
  %27 = zext i32 %26 to i64
  %28 = shl i64 %8, %27
  %29 = shl i64 %10, %27
  br label %36

30:                                               ; preds = %13
  %31 = add nsw i32 %23, -29
  %32 = zext i32 %31 to i64
  %33 = ashr i64 %8, %32
  %34 = ashr i64 %10, %32
  %35 = sub nsw i32 29, %23
  br label %36

36:                                               ; preds = %25, %30
  %37 = phi i64 [ %29, %25 ], [ %34, %30 ]
  %38 = phi i64 [ %28, %25 ], [ %33, %30 ]
  %39 = phi i32 [ %26, %25 ], [ %35, %30 ]
  %40 = icmp slt i64 %1, -2949120
  br i1 %40, label %43, label %41

41:                                               ; preds = %36
  %42 = icmp sgt i64 %1, 2949120
  br i1 %42, label %50, label %57

43:                                               ; preds = %36, %43
  %44 = phi i64 [ %47, %43 ], [ %37, %36 ]
  %45 = phi i64 [ %44, %43 ], [ %38, %36 ]
  %46 = phi i64 [ %48, %43 ], [ %1, %36 ]
  %47 = sub nsw i64 0, %45
  %48 = add nsw i64 %46, 5898240
  %49 = icmp slt i64 %48, -2949120
  br i1 %49, label %43, label %57

50:                                               ; preds = %41, %50
  %51 = phi i64 [ %52, %50 ], [ %37, %41 ]
  %52 = phi i64 [ %54, %50 ], [ %38, %41 ]
  %53 = phi i64 [ %55, %50 ], [ %1, %41 ]
  %54 = sub nsw i64 0, %51
  %55 = add nsw i64 %53, -5898240
  %56 = icmp sgt i64 %55, 2949120
  br i1 %56, label %50, label %57

57:                                               ; preds = %50, %43, %41
  %58 = phi i64 [ %37, %41 ], [ %47, %43 ], [ %52, %50 ]
  %59 = phi i64 [ %38, %41 ], [ %44, %43 ], [ %54, %50 ]
  %60 = phi i64 [ %1, %41 ], [ %48, %43 ], [ %55, %50 ]
  br label %61

61:                                               ; preds = %57, %85
  %62 = phi i64 [ %91, %85 ], [ 1, %57 ]
  %63 = phi i64* [ %89, %85 ], [ getelementptr inbounds ([22 x i64], [22 x i64]* @ft_trig_arctan_table, i64 0, i64 0), %57 ]
  %64 = phi i64 [ %90, %85 ], [ 1, %57 ]
  %65 = phi i64 [ %88, %85 ], [ %58, %57 ]
  %66 = phi i64 [ %87, %85 ], [ %59, %57 ]
  %67 = phi i64 [ %86, %85 ], [ %60, %57 ]
  %68 = icmp slt i64 %67, 0
  %69 = add nsw i64 %65, %64
  %70 = ashr i64 %69, %62
  br i1 %68, label %71, label %78

71:                                               ; preds = %61
  %72 = add nsw i64 %70, %66
  %73 = add nsw i64 %66, %64
  %74 = ashr i64 %73, %62
  %75 = sub nsw i64 %65, %74
  %76 = load i64, i64* %63, align 8
  %77 = add nsw i64 %76, %67
  br label %85

78:                                               ; preds = %61
  %79 = sub nsw i64 %66, %70
  %80 = add nsw i64 %66, %64
  %81 = ashr i64 %80, %62
  %82 = add nsw i64 %81, %65
  %83 = load i64, i64* %63, align 8
  %84 = sub nsw i64 %67, %83
  br label %85

85:                                               ; preds = %78, %71
  %86 = phi i64 [ %77, %71 ], [ %84, %78 ]
  %87 = phi i64 [ %72, %71 ], [ %79, %78 ]
  %88 = phi i64 [ %75, %71 ], [ %82, %78 ]
  %89 = getelementptr inbounds i64, i64* %63, i64 1
  %90 = shl i64 %64, 1
  %91 = add nuw nsw i64 %62, 1
  %92 = icmp eq i64 %91, 23
  br i1 %92, label %93, label %61

93:                                               ; preds = %85
  %94 = icmp slt i64 %87, 0
  %95 = sub nsw i64 0, %87
  %96 = select i1 %94, i64 %95, i64 %87
  %97 = mul i64 %96, 3688454934
  %98 = add i64 %97, 1073741824
  %99 = lshr i64 %98, 32
  %100 = sub nsw i64 0, %99
  %101 = select i1 %94, i64 %100, i64 %99
  %102 = icmp slt i64 %88, 0
  %103 = sub nsw i64 0, %88
  %104 = select i1 %102, i64 %103, i64 %88
  %105 = mul i64 %104, 3688454934
  %106 = add i64 %105, 1073741824
  %107 = lshr i64 %106, 32
  %108 = sub nsw i64 0, %107
  %109 = select i1 %102, i64 %108, i64 %107
  %110 = icmp sgt i32 %39, 0
  br i1 %110, label %111, label %124

111:                                              ; preds = %93
  %112 = add nsw i32 %39, -1
  %113 = shl i32 1, %112
  %114 = sext i32 %113 to i64
  %115 = add nsw i64 %101, %114
  %116 = ashr i64 %101, 63
  %117 = add nsw i64 %115, %116
  %118 = zext i32 %39 to i64
  %119 = ashr i64 %117, %118
  store i64 %119, i64* %7, align 8
  %120 = add nsw i64 %109, %114
  %121 = ashr i64 %109, 63
  %122 = add nsw i64 %120, %121
  %123 = ashr i64 %122, %118
  store i64 %123, i64* %9, align 8
  br label %129

124:                                              ; preds = %93
  %125 = sub nsw i32 0, %39
  %126 = zext i32 %125 to i64
  %127 = shl i64 %101, %126
  store i64 %127, i64* %7, align 8
  %128 = shl i64 %109, %126
  store i64 %128, i64* %9, align 8
  br label %129

129:                                              ; preds = %111, %124, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_Vector_Polarize(%struct.FT_Vector_* readonly, i64*, i64*) local_unnamed_addr #0 {
  %4 = icmp ne %struct.FT_Vector_* %0, null
  %5 = icmp ne i64* %1, null
  %6 = and i1 %4, %5
  %7 = icmp ne i64* %2, null
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %120

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = or i64 %13, %11
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %120, label %16

16:                                               ; preds = %9
  %17 = icmp slt i64 %11, 0
  %18 = sub nsw i64 0, %11
  %19 = select i1 %17, i64 %18, i64 %11
  %20 = icmp slt i64 %13, 0
  %21 = sub nsw i64 0, %13
  %22 = select i1 %20, i64 %21, i64 %13
  %23 = or i64 %22, %19
  %24 = trunc i64 %23 to i32
  %25 = tail call i32 @llvm.ctlz.i32(i32 %24, i1 true) #16, !range !2
  %26 = xor i32 %25, 31
  %27 = icmp ult i32 %26, 30
  br i1 %27, label %28, label %33

28:                                               ; preds = %16
  %29 = sub nuw nsw i32 29, %26
  %30 = zext i32 %29 to i64
  %31 = shl i64 %11, %30
  %32 = shl i64 %13, %30
  br label %39

33:                                               ; preds = %16
  %34 = add nsw i32 %26, -29
  %35 = zext i32 %34 to i64
  %36 = ashr i64 %11, %35
  %37 = ashr i64 %13, %35
  %38 = sub nsw i32 29, %26
  br label %39

39:                                               ; preds = %28, %33
  %40 = phi i64 [ %32, %28 ], [ %37, %33 ]
  %41 = phi i64 [ %31, %28 ], [ %36, %33 ]
  %42 = phi i32 [ %29, %28 ], [ %38, %33 ]
  %43 = icmp sgt i64 %40, %41
  %44 = sub nsw i64 0, %41
  br i1 %43, label %45, label %51

45:                                               ; preds = %39
  %46 = icmp sgt i64 %40, %44
  br i1 %46, label %57, label %47

47:                                               ; preds = %45
  %48 = icmp sgt i64 %40, 0
  %49 = select i1 %48, i64 11796480, i64 -11796480
  %50 = sub nsw i64 0, %40
  br label %57

51:                                               ; preds = %39
  %52 = icmp slt i64 %40, %44
  %53 = sub nsw i64 0, %40
  %54 = select i1 %52, i64 -5898240, i64 0
  %55 = select i1 %52, i64 %53, i64 %41
  %56 = select i1 %52, i64 %41, i64 %40
  br label %57

57:                                               ; preds = %51, %47, %45
  %58 = phi i64 [ %44, %45 ], [ %50, %47 ], [ %56, %51 ]
  %59 = phi i64 [ %40, %45 ], [ %44, %47 ], [ %55, %51 ]
  %60 = phi i64 [ 5898240, %45 ], [ %49, %47 ], [ %54, %51 ]
  br label %61

61:                                               ; preds = %57, %85
  %62 = phi i64 [ %91, %85 ], [ 1, %57 ]
  %63 = phi i64* [ %89, %85 ], [ getelementptr inbounds ([22 x i64], [22 x i64]* @ft_trig_arctan_table, i64 0, i64 0), %57 ]
  %64 = phi i64 [ %90, %85 ], [ 1, %57 ]
  %65 = phi i64 [ %88, %85 ], [ %58, %57 ]
  %66 = phi i64 [ %87, %85 ], [ %59, %57 ]
  %67 = phi i64 [ %86, %85 ], [ %60, %57 ]
  %68 = icmp sgt i64 %65, 0
  %69 = add nsw i64 %65, %64
  %70 = ashr i64 %69, %62
  br i1 %68, label %71, label %78

71:                                               ; preds = %61
  %72 = add nsw i64 %70, %66
  %73 = add nsw i64 %66, %64
  %74 = ashr i64 %73, %62
  %75 = sub nsw i64 %65, %74
  %76 = load i64, i64* %63, align 8
  %77 = add nsw i64 %76, %67
  br label %85

78:                                               ; preds = %61
  %79 = sub nsw i64 %66, %70
  %80 = add nsw i64 %66, %64
  %81 = ashr i64 %80, %62
  %82 = add nsw i64 %81, %65
  %83 = load i64, i64* %63, align 8
  %84 = sub nsw i64 %67, %83
  br label %85

85:                                               ; preds = %78, %71
  %86 = phi i64 [ %77, %71 ], [ %84, %78 ]
  %87 = phi i64 [ %72, %71 ], [ %79, %78 ]
  %88 = phi i64 [ %75, %71 ], [ %82, %78 ]
  %89 = getelementptr inbounds i64, i64* %63, i64 1
  %90 = shl i64 %64, 1
  %91 = add nuw nsw i64 %62, 1
  %92 = icmp eq i64 %91, 23
  br i1 %92, label %93, label %61

93:                                               ; preds = %85
  %94 = icmp sgt i64 %86, -1
  br i1 %94, label %95, label %98

95:                                               ; preds = %93
  %96 = add nuw nsw i64 %86, 8
  %97 = and i64 %96, -16
  br label %102

98:                                               ; preds = %93
  %99 = sub i64 8, %86
  %100 = and i64 %99, -16
  %101 = sub nsw i64 0, %100
  br label %102

102:                                              ; preds = %95, %98
  %103 = phi i64 [ %97, %95 ], [ %101, %98 ]
  %104 = icmp slt i64 %87, 0
  %105 = sub nsw i64 0, %87
  %106 = select i1 %104, i64 %105, i64 %87
  %107 = mul i64 %106, 3688454934
  %108 = add i64 %107, 1073741824
  %109 = lshr i64 %108, 32
  %110 = sub nsw i64 0, %109
  %111 = select i1 %104, i64 %110, i64 %109
  %112 = icmp sgt i32 %42, -1
  %113 = zext i32 %42 to i64
  %114 = ashr i64 %111, %113
  %115 = trunc i64 %111 to i32
  %116 = sub nsw i32 0, %42
  %117 = shl i32 %115, %116
  %118 = zext i32 %117 to i64
  %119 = select i1 %112, i64 %114, i64 %118
  store i64 %119, i64* %1, align 8
  store i64 %103, i64* %2, align 8
  br label %120

120:                                              ; preds = %9, %3, %102
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_Vector_From_Polar(%struct.FT_Vector_*, i64, i64) local_unnamed_addr #0 {
  %4 = icmp eq %struct.FT_Vector_* %0, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 0
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %0, i64 0, i32 1
  store i64 0, i64* %7, align 8
  tail call void @FT_Vector_Rotate(%struct.FT_Vector_* nonnull %0, i64 %2)
  br label %8

8:                                                ; preds = %3, %5
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @FT_Angle_Diff(i64, i64) local_unnamed_addr #2 {
  %3 = sub i64 %1, %0
  %4 = icmp sgt i64 %3, -11796479
  %5 = select i1 %4, i64 %3, i64 -11796479
  %6 = add i64 %5, %0
  %7 = add i64 %6, 23592959
  %8 = sub i64 %7, %1
  %9 = urem i64 %8, 23592960
  %10 = sub i64 %8, %9
  %11 = add i64 %10, %1
  %12 = sub i64 %11, %0
  %13 = add i64 %12, 23592959
  %14 = icmp slt i64 %12, 11796480
  %15 = select i1 %14, i64 %12, i64 11796480
  %16 = sub i64 %13, %15
  %17 = urem i64 %16, 23592960
  %18 = sub i64 %17, %16
  %19 = add i64 %12, %18
  ret i64 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ft_mem_qrealloc(%struct.FT_MemoryRec_*, i64, i64, i64, i8*, i32* nocapture) local_unnamed_addr #0 {
  %7 = or i64 %2, %1
  %8 = or i64 %7, %3
  %9 = icmp slt i64 %8, 0
  br i1 %9, label %40, label %10

10:                                               ; preds = %6
  %11 = icmp eq i64 %3, 0
  %12 = icmp eq i64 %1, 0
  %13 = or i1 %12, %11
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = icmp eq i8* %4, null
  br i1 %15, label %40, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %0, i64 0, i32 2
  %18 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %17, align 8
  tail call void %18(%struct.FT_MemoryRec_* %0, i8* nonnull %4) #16
  br label %40

19:                                               ; preds = %10
  %20 = sdiv i64 2147483647, %1
  %21 = icmp slt i64 %20, %3
  br i1 %21, label %40, label %22

22:                                               ; preds = %19
  %23 = icmp eq i64 %2, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %0, i64 0, i32 1
  %26 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %25, align 8
  %27 = mul nsw i64 %3, %1
  %28 = tail call i8* %26(%struct.FT_MemoryRec_* %0, i64 %27) #16
  %29 = icmp eq i8* %28, null
  %30 = select i1 %29, i32 64, i32 0
  br label %40

31:                                               ; preds = %22
  %32 = mul nsw i64 %2, %1
  %33 = mul nsw i64 %3, %1
  %34 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %0, i64 0, i32 3
  %35 = load i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)** %34, align 8
  %36 = tail call i8* %35(%struct.FT_MemoryRec_* %0, i64 %32, i64 %33, i8* %4) #16
  %37 = icmp eq i8* %36, null
  %38 = select i1 %37, i32 64, i32 0
  %39 = select i1 %37, i8* %4, i8* %36
  br label %40

40:                                               ; preds = %16, %14, %24, %19, %6, %31
  %41 = phi i32 [ %38, %31 ], [ 6, %6 ], [ 10, %19 ], [ %30, %24 ], [ 0, %14 ], [ 0, %16 ]
  %42 = phi i8* [ %39, %31 ], [ %4, %6 ], [ %4, %19 ], [ %28, %24 ], [ null, %14 ], [ null, %16 ]
  store i32 %41, i32* %5, align 4
  ret i8* %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ft_mem_dup(%struct.FT_MemoryRec_*, i8* readonly, i64, i32* nocapture) local_unnamed_addr #0 {
  %5 = icmp sgt i64 %2, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %0, i64 0, i32 1
  %8 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %7, align 8
  %9 = tail call i8* %8(%struct.FT_MemoryRec_* %0, i64 %2) #16
  %10 = icmp eq i8* %9, null
  %11 = select i1 %10, i32 64, i32 0
  br label %15

12:                                               ; preds = %4
  %13 = icmp eq i64 %2, 0
  %14 = select i1 %13, i32 0, i32 6
  br label %15

15:                                               ; preds = %6, %12
  %16 = phi i32 [ %11, %6 ], [ %14, %12 ]
  %17 = phi i8* [ %9, %6 ], [ null, %12 ]
  %18 = icmp eq i32 %16, 0
  %19 = icmp ne i8* %1, null
  %20 = and i1 %19, %18
  %21 = icmp ne i64 %2, 0
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %24

23:                                               ; preds = %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* nonnull align 1 %1, i64 %2, i1 false)
  br label %24

24:                                               ; preds = %15, %23
  store i32 %16, i32* %3, align 4
  ret i8* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ft_mem_strdup(%struct.FT_MemoryRec_*, i8* readonly, i32* nocapture) local_unnamed_addr #0 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %3
  %6 = tail call i64 @strlen(i8* nonnull %1) #17
  %7 = add i64 %6, 1
  %8 = icmp sgt i64 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = icmp eq i64 %7, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %3, %9
  br label %18

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %0, i64 0, i32 1
  %14 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %13, align 8
  %15 = tail call i8* %14(%struct.FT_MemoryRec_* %0, i64 %7) #16
  %16 = icmp eq i8* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* nonnull align 1 %1, i64 %7, i1 false) #16
  br label %18

18:                                               ; preds = %12, %9, %11, %17
  %19 = phi i8* [ null, %12 ], [ %15, %17 ], [ null, %11 ], [ null, %9 ]
  %20 = phi i32 [ 64, %12 ], [ 0, %17 ], [ 0, %11 ], [ 6, %9 ]
  store i32 %20, i32* %2, align 4
  ret i8* %19
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @ft_mem_strcpyn(i8* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #3 {
  %4 = icmp ugt i64 %2, 1
  br i1 %4, label %5, label %16

5:                                                ; preds = %3, %11
  %6 = phi i64 [ %14, %11 ], [ %2, %3 ]
  %7 = phi i8* [ %12, %11 ], [ %1, %3 ]
  %8 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %9 = load i8, i8* %7, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds i8, i8* %7, i64 1
  %13 = getelementptr inbounds i8, i8* %8, i64 1
  store i8 %9, i8* %8, align 1
  %14 = add i64 %6, -1
  %15 = icmp ugt i64 %14, 1
  br i1 %15, label %5, label %16

16:                                               ; preds = %11, %5, %3
  %17 = phi i8* [ %0, %3 ], [ %8, %5 ], [ %13, %11 ]
  %18 = phi i8* [ %1, %3 ], [ %7, %5 ], [ %12, %11 ]
  store i8 0, i8* %17, align 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp ne i8 %19, 0
  %21 = zext i1 %20 to i32
  ret i32 %21
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @FT_List_Insert(%struct.FT_ListRec_*, %struct.FT_ListNodeRec_*) local_unnamed_addr #3 {
  %3 = icmp ne %struct.FT_ListRec_* %0, null
  %4 = icmp ne %struct.FT_ListNodeRec_* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FT_ListRec_, %struct.FT_ListRec_* %0, i64 0, i32 0
  %8 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %1, i64 0, i32 1
  store %struct.FT_ListNodeRec_* %8, %struct.FT_ListNodeRec_** %9, align 8
  %10 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %1, i64 0, i32 0
  store %struct.FT_ListNodeRec_* null, %struct.FT_ListNodeRec_** %10, align 8
  %11 = icmp eq %struct.FT_ListNodeRec_* %8, null
  %12 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %8, i64 0, i32 0
  %13 = getelementptr inbounds %struct.FT_ListRec_, %struct.FT_ListRec_* %0, i64 0, i32 1
  %14 = select i1 %11, %struct.FT_ListNodeRec_** %13, %struct.FT_ListNodeRec_** %12
  store %struct.FT_ListNodeRec_* %1, %struct.FT_ListNodeRec_** %14, align 8
  store %struct.FT_ListNodeRec_* %1, %struct.FT_ListNodeRec_** %7, align 8
  br label %15

15:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_List_Iterate(%struct.FT_ListRec_* readonly, i32 (%struct.FT_ListNodeRec_*, i8*)*, i8*) local_unnamed_addr #0 {
  %4 = icmp ne %struct.FT_ListRec_* %0, null
  %5 = icmp ne i32 (%struct.FT_ListNodeRec_*, i8*)* %1, null
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %21

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.FT_ListRec_, %struct.FT_ListRec_* %0, i64 0, i32 0
  %9 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %8, align 8
  %10 = icmp eq %struct.FT_ListNodeRec_* %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %7, %11
  %12 = phi %struct.FT_ListNodeRec_* [ %17, %11 ], [ %9, %7 ]
  %13 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %12, i64 0, i32 1
  %14 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %13, align 8
  %15 = tail call i32 %1(%struct.FT_ListNodeRec_* nonnull %12, i8* %2) #16
  %16 = icmp eq i32 %15, 0
  %17 = select i1 %16, %struct.FT_ListNodeRec_* %14, %struct.FT_ListNodeRec_* %12
  %18 = xor i1 %16, true
  %19 = icmp eq %struct.FT_ListNodeRec_* %17, null
  %20 = or i1 %19, %18
  br i1 %20, label %21, label %11

21:                                               ; preds = %11, %7, %3
  %22 = phi i32 [ 6, %3 ], [ 0, %7 ], [ %15, %11 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_List_Finalize(%struct.FT_ListRec_*, void (%struct.FT_MemoryRec_*, i8*, i8*)*, %struct.FT_MemoryRec_*, i8*) local_unnamed_addr #0 {
  %5 = icmp ne %struct.FT_ListRec_* %0, null
  %6 = icmp ne %struct.FT_MemoryRec_* %2, null
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %28

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.FT_ListRec_, %struct.FT_ListRec_* %0, i64 0, i32 0
  %10 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %9, align 8
  %11 = icmp eq %struct.FT_ListNodeRec_* %10, null
  br i1 %11, label %26, label %12

12:                                               ; preds = %8
  %13 = icmp eq void (%struct.FT_MemoryRec_*, i8*, i8*)* %1, null
  %14 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %2, i64 0, i32 2
  br label %15

15:                                               ; preds = %12, %23
  %16 = phi %struct.FT_ListNodeRec_* [ %10, %12 ], [ %19, %23 ]
  %17 = bitcast %struct.FT_ListNodeRec_* %16 to i8*
  %18 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %16, i64 0, i32 1
  %19 = load %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_** %18, align 8
  br i1 %13, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.FT_ListNodeRec_, %struct.FT_ListNodeRec_* %16, i64 0, i32 2
  %22 = load i8*, i8** %21, align 8
  tail call void %1(%struct.FT_MemoryRec_* nonnull %2, i8* %22, i8* %3) #16
  br label %23

23:                                               ; preds = %15, %20
  %24 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %14, align 8
  tail call void %24(%struct.FT_MemoryRec_* nonnull %2, i8* nonnull %17) #16
  %25 = icmp eq %struct.FT_ListNodeRec_* %19, null
  br i1 %25, label %26, label %15

26:                                               ; preds = %23, %8
  %27 = bitcast %struct.FT_ListRec_* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 16, i1 false)
  br label %28

28:                                               ; preds = %4, %26
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @hash_num_lookup(%union.FT_Hashkey_* nocapture readonly) #12 {
  %2 = bitcast %union.FT_Hashkey_* %0 to i32*
  %3 = load i32, i32* %2, align 8
  %4 = sext i32 %3 to i64
  %5 = and i64 %4, 255
  %6 = mul nuw nsw i64 %5, 31
  %7 = lshr i64 %4, 8
  %8 = and i64 %7, 255
  %9 = add nuw nsw i64 %6, %8
  %10 = mul nuw nsw i64 %9, 31
  %11 = lshr i64 %4, 16
  %12 = and i64 %11, 255
  %13 = add nuw nsw i64 %10, %12
  %14 = mul nuw nsw i64 %13, 31
  %15 = lshr i64 %4, 24
  %16 = and i64 %15, 255
  %17 = add nuw nsw i64 %14, %16
  ret i64 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i8 @hash_num_compare(%union.FT_Hashkey_* nocapture readonly, %union.FT_Hashkey_* nocapture readonly) #12 {
  %3 = bitcast %union.FT_Hashkey_* %0 to i32*
  %4 = load i32, i32* %3, align 8
  %5 = bitcast %union.FT_Hashkey_* %1 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  %8 = zext i1 %7 to i8
  ret i8 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @hash_str_lookup(%union.FT_Hashkey_* nocapture readonly) #12 {
  %2 = getelementptr inbounds %union.FT_Hashkey_, %union.FT_Hashkey_* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %1, %6
  %7 = phi i8 [ %14, %6 ], [ %4, %1 ]
  %8 = phi i64 [ %13, %6 ], [ 0, %1 ]
  %9 = phi i8* [ %11, %6 ], [ %3, %1 ]
  %10 = mul i64 %8, 31
  %11 = getelementptr inbounds i8, i8* %9, i64 1
  %12 = sext i8 %7 to i64
  %13 = add i64 %10, %12
  %14 = load i8, i8* %11, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %6

16:                                               ; preds = %6, %1
  %17 = phi i64 [ 0, %1 ], [ %13, %6 ]
  ret i64 %17
}

; Function Attrs: nounwind readonly ssp uwtable
define internal zeroext i8 @hash_str_compare(%union.FT_Hashkey_* nocapture readonly, %union.FT_Hashkey_* nocapture readonly) #4 {
  %3 = getelementptr inbounds %union.FT_Hashkey_, %union.FT_Hashkey_* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = load i8, i8* %4, align 1
  %6 = getelementptr inbounds %union.FT_Hashkey_, %union.FT_Hashkey_* %1, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %5, %8
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = tail call i32 @strcmp(i8* %4, i8* %7) #17
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %10, %2
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i8 [ 0, %13 ], [ 1, %10 ]
  ret i8 %15
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @open_face(%struct.FT_DriverRec_*, %struct.FT_StreamRec_** nocapture, i8 zeroext, i64, i32, %struct.FT_Parameter_*, %struct.FT_FaceRec_** nocapture) unnamed_addr #0 {
  %8 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %0, i64 0, i32 1
  %9 = load %struct.FT_Driver_ClassRec_*, %struct.FT_Driver_ClassRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %0, i64 0, i32 0, i32 2
  %11 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %10, align 8
  %12 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %9, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp sgt i64 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %7
  %16 = icmp eq i64 %13, 0
  br i1 %16, label %23, label %188

17:                                               ; preds = %7
  %18 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %11, i64 0, i32 1
  %19 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %18, align 8
  %20 = tail call i8* %19(%struct.FT_MemoryRec_* %11, i64 %13) #16
  %21 = icmp eq i8* %20, null
  br i1 %21, label %188, label %22

22:                                               ; preds = %17
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %20, i8 0, i64 %13, i1 false) #16
  br label %23

23:                                               ; preds = %22, %15
  %24 = phi i8* [ %20, %22 ], [ null, %15 ]
  %25 = bitcast i8* %24 to %struct.FT_FaceRec_*
  %26 = getelementptr inbounds i8, i8* %24, i64 176
  %27 = bitcast i8* %26 to %struct.FT_DriverRec_**
  store %struct.FT_DriverRec_* %0, %struct.FT_DriverRec_** %27, align 8
  %28 = getelementptr inbounds i8, i8* %24, i64 184
  %29 = bitcast i8* %28 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %11, %struct.FT_MemoryRec_** %29, align 8
  %30 = bitcast %struct.FT_StreamRec_** %1 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds i8, i8* %24, i64 192
  %33 = bitcast i8* %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = icmp eq i8 %2, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %23
  %36 = getelementptr inbounds i8, i8* %24, i64 16
  %37 = bitcast i8* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = or i64 %38, 1024
  store i64 %39, i64* %37, align 8
  br label %40

40:                                               ; preds = %23, %35
  %41 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %11, i64 0, i32 1
  %42 = load i8* (%struct.FT_MemoryRec_*, i64)*, i8* (%struct.FT_MemoryRec_*, i64)** %41, align 8
  %43 = tail call i8* %42(%struct.FT_MemoryRec_* %11, i64 144) #16
  %44 = icmp eq i8* %43, null
  br i1 %44, label %140, label %45

45:                                               ; preds = %40
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %43, i8 0, i64 144, i1 false) #16
  %46 = getelementptr inbounds i8, i8* %24, i64 240
  %47 = bitcast i8* %46 to %struct.FT_Face_InternalRec_**
  %48 = bitcast i8* %46 to i8**
  store i8* %43, i8** %48, align 8
  %49 = getelementptr inbounds i8, i8* %43, i64 104
  %50 = bitcast i8* %49 to %struct.FT_Incremental_InterfaceRec_**
  store %struct.FT_Incremental_InterfaceRec_* null, %struct.FT_Incremental_InterfaceRec_** %50, align 8
  %51 = icmp sgt i32 %4, 0
  br i1 %51, label %52, label %72

52:                                               ; preds = %45
  %53 = zext i32 %4 to i64
  br label %54

54:                                               ; preds = %69, %52
  %55 = phi i64 [ 0, %52 ], [ %70, %69 ]
  %56 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %47, align 8
  %57 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %56, i64 0, i32 4
  %58 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %57, align 8
  %59 = icmp eq %struct.FT_Incremental_InterfaceRec_* %58, null
  br i1 %59, label %60, label %72

60:                                               ; preds = %54
  %61 = getelementptr inbounds %struct.FT_Parameter_, %struct.FT_Parameter_* %5, i64 %55, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, 1768842098
  br i1 %63, label %64, label %69

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.FT_Parameter_, %struct.FT_Parameter_* %5, i64 %55, i32 1
  %66 = bitcast i8** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %struct.FT_Incremental_InterfaceRec_** %57 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %60, %64
  %70 = add nuw nsw i64 %55, 1
  %71 = icmp eq i64 %70, %53
  br i1 %71, label %72, label %54

72:                                               ; preds = %54, %69, %45
  %73 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %47, align 8
  %74 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %73, i64 0, i32 6
  store i32 -1, i32* %74, align 4
  %75 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %9, i64 0, i32 4
  %76 = load i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)** %75, align 8
  %77 = icmp eq i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)* %76, null
  br i1 %77, label %78, label %80

78:                                               ; preds = %72
  %79 = load i64, i64* %33, align 8
  store i64 %79, i64* %30, align 8
  br label %86

80:                                               ; preds = %72
  %81 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %1, align 8
  %82 = trunc i64 %3 to i32
  %83 = tail call i32 %76(%struct.FT_StreamRec_* %81, %struct.FT_FaceRec_* %25, i32 %82, i32 %4, %struct.FT_Parameter_* %5) #16
  %84 = load i64, i64* %33, align 8
  store i64 %84, i64* %30, align 8
  %85 = icmp eq i32 %83, 0
  br i1 %85, label %86, label %140

86:                                               ; preds = %78, %80
  %87 = getelementptr inbounds i8, i8* %24, i64 80
  %88 = bitcast i8* %87 to %struct.FT_CharMapRec_***
  %89 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %88, align 8
  %90 = icmp eq %struct.FT_CharMapRec_** %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %86
  %92 = bitcast %struct.FT_FaceRec_** %6 to i8**
  store i8* %24, i8** %92, align 8
  br label %208

93:                                               ; preds = %86
  %94 = getelementptr inbounds i8, i8* %24, i64 72
  %95 = bitcast i8* %94 to i32*
  %96 = load i32, i32* %95, align 8
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %89, i64 %97
  %99 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %98, i64 -1
  %100 = icmp ult %struct.FT_CharMapRec_** %99, %89
  br i1 %100, label %125, label %101

101:                                              ; preds = %93, %122
  %102 = phi %struct.FT_CharMapRec_** [ %123, %122 ], [ %99, %93 ]
  %103 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %102, align 8
  %104 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %103, i64 0, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 1970170211
  br i1 %106, label %107, label %122

107:                                              ; preds = %101
  %108 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %103, i64 0, i32 2
  %109 = load i16, i16* %108, align 4
  switch i16 %109, label %122 [
    i16 3, label %110
    i16 0, label %114
  ]

110:                                              ; preds = %107
  %111 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %103, i64 0, i32 3
  %112 = load i16, i16* %111, align 2
  %113 = icmp eq i16 %112, 10
  br i1 %113, label %118, label %122

114:                                              ; preds = %107
  %115 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %103, i64 0, i32 3
  %116 = load i16, i16* %115, align 2
  %117 = icmp eq i16 %116, 4
  br i1 %117, label %118, label %122

118:                                              ; preds = %114, %110
  %119 = ptrtoint %struct.FT_CharMapRec_* %103 to i64
  %120 = getelementptr inbounds i8, i8* %24, i64 168
  %121 = bitcast i8* %120 to i64*
  store i64 %119, i64* %121, align 8
  br label %138

122:                                              ; preds = %114, %110, %107, %101
  %123 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %102, i64 -1
  %124 = icmp ult %struct.FT_CharMapRec_** %123, %89
  br i1 %124, label %125, label %101

125:                                              ; preds = %122, %93
  br label %126

126:                                              ; preds = %125, %130
  %127 = phi %struct.FT_CharMapRec_** [ %128, %130 ], [ %98, %125 ]
  %128 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %127, i64 -1
  %129 = icmp ult %struct.FT_CharMapRec_** %128, %89
  br i1 %129, label %138, label %130

130:                                              ; preds = %126
  %131 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %128, align 8
  %132 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %131, i64 0, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = icmp eq i32 %133, 1970170211
  br i1 %134, label %135, label %126

135:                                              ; preds = %130
  %136 = getelementptr inbounds i8, i8* %24, i64 168
  %137 = bitcast i8* %136 to %struct.FT_CharMapRec_**
  store %struct.FT_CharMapRec_* %131, %struct.FT_CharMapRec_** %137, align 8
  br label %138

138:                                              ; preds = %126, %118, %135
  %139 = bitcast %struct.FT_FaceRec_** %6 to i8**
  store i8* %24, i8** %139, align 8
  br label %208

140:                                              ; preds = %40, %80
  %141 = phi i32 [ %83, %80 ], [ 64, %40 ]
  %142 = icmp eq i8* %24, null
  br i1 %142, label %188, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds i8, i8* %24, i64 72
  %145 = bitcast i8* %144 to i32*
  %146 = load i32, i32* %145, align 8
  %147 = icmp sgt i32 %146, 0
  %148 = getelementptr inbounds i8, i8* %24, i64 80
  %149 = bitcast i8* %148 to %struct.FT_CharMapRec_***
  br i1 %147, label %150, label %180

150:                                              ; preds = %143, %173
  %151 = phi i64 [ %176, %173 ], [ 0, %143 ]
  %152 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %149, align 8
  %153 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %152, i64 %151
  %154 = bitcast %struct.FT_CharMapRec_** %153 to %struct.FT_CMapRec_**
  %155 = load %struct.FT_CMapRec_*, %struct.FT_CMapRec_** %154, align 8
  %156 = getelementptr inbounds %struct.FT_CMapRec_, %struct.FT_CMapRec_* %155, i64 0, i32 1
  %157 = load %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_** %156, align 8
  %158 = getelementptr inbounds %struct.FT_CMapRec_, %struct.FT_CMapRec_* %155, i64 0, i32 0, i32 0
  %159 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %158, align 8
  %160 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %159, i64 0, i32 25
  %161 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %160, align 8
  %162 = getelementptr inbounds %struct.FT_CMap_ClassRec_, %struct.FT_CMap_ClassRec_* %157, i64 0, i32 2
  %163 = bitcast {}** %162 to void (%struct.FT_CMapRec_*)**
  %164 = load void (%struct.FT_CMapRec_*)*, void (%struct.FT_CMapRec_*)** %163, align 8
  %165 = icmp eq void (%struct.FT_CMapRec_*)* %164, null
  br i1 %165, label %167, label %166

166:                                              ; preds = %150
  tail call void %164(%struct.FT_CMapRec_* %155) #16
  br label %167

167:                                              ; preds = %166, %150
  %168 = icmp eq %struct.FT_CMapRec_* %155, null
  br i1 %168, label %173, label %169

169:                                              ; preds = %167
  %170 = bitcast %struct.FT_CMapRec_* %155 to i8*
  %171 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %161, i64 0, i32 2
  %172 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %171, align 8
  tail call void %172(%struct.FT_MemoryRec_* %161, i8* nonnull %170) #16
  br label %173

173:                                              ; preds = %169, %167
  %174 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %149, align 8
  %175 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %174, i64 %151
  store %struct.FT_CharMapRec_* null, %struct.FT_CharMapRec_** %175, align 8
  %176 = add nuw nsw i64 %151, 1
  %177 = load i32, i32* %145, align 8
  %178 = sext i32 %177 to i64
  %179 = icmp slt i64 %176, %178
  br i1 %179, label %150, label %180

180:                                              ; preds = %173, %143
  %181 = bitcast i8* %148 to i8**
  %182 = load i8*, i8** %181, align 8
  %183 = icmp eq i8* %182, null
  br i1 %183, label %187, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %11, i64 0, i32 2
  %186 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %185, align 8
  tail call void %186(%struct.FT_MemoryRec_* %11, i8* nonnull %182) #16
  br label %187

187:                                              ; preds = %184, %180
  store %struct.FT_CharMapRec_** null, %struct.FT_CharMapRec_*** %149, align 8
  store i32 0, i32* %145, align 8
  br label %188

188:                                              ; preds = %17, %15, %140, %187
  %189 = phi %struct.FT_FaceRec_* [ null, %140 ], [ %25, %187 ], [ null, %15 ], [ null, %17 ]
  %190 = phi i8* [ %24, %140 ], [ %24, %187 ], [ null, %15 ], [ null, %17 ]
  %191 = phi i32 [ %141, %140 ], [ %141, %187 ], [ 6, %15 ], [ 64, %17 ]
  %192 = phi i8* [ %43, %140 ], [ %43, %187 ], [ null, %15 ], [ null, %17 ]
  %193 = getelementptr inbounds %struct.FT_Driver_ClassRec_, %struct.FT_Driver_ClassRec_* %9, i64 0, i32 5
  %194 = load void (%struct.FT_FaceRec_*)*, void (%struct.FT_FaceRec_*)** %193, align 8
  %195 = icmp eq void (%struct.FT_FaceRec_*)* %194, null
  br i1 %195, label %197, label %196

196:                                              ; preds = %188
  tail call void %194(%struct.FT_FaceRec_* %189) #16
  br label %197

197:                                              ; preds = %188, %196
  %198 = icmp eq i8* %192, null
  br i1 %198, label %202, label %199

199:                                              ; preds = %197
  %200 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %11, i64 0, i32 2
  %201 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %200, align 8
  tail call void %201(%struct.FT_MemoryRec_* %11, i8* nonnull %192) #16
  br label %202

202:                                              ; preds = %197, %199
  %203 = icmp eq i8* %190, null
  br i1 %203, label %207, label %204

204:                                              ; preds = %202
  %205 = getelementptr inbounds %struct.FT_MemoryRec_, %struct.FT_MemoryRec_* %11, i64 0, i32 2
  %206 = load void (%struct.FT_MemoryRec_*, i8*)*, void (%struct.FT_MemoryRec_*, i8*)** %205, align 8
  tail call void %206(%struct.FT_MemoryRec_* %11, i8* nonnull %190) #16
  br label %207

207:                                              ; preds = %202, %204
  store %struct.FT_FaceRec_* null, %struct.FT_FaceRec_** %6, align 8
  br label %208

208:                                              ; preds = %138, %91, %207
  %209 = phi i32 [ 0, %138 ], [ %191, %207 ], [ 0, %91 ]
  ret i32 %209
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { nounwind readonly }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.isvectorized", i32 1}
!7 = distinct !{!7, !4}
!8 = distinct !{!8, !9, !6}
!9 = !{!"llvm.loop.unroll.runtime.disable"}
