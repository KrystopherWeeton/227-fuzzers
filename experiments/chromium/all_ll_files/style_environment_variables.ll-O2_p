; ModuleID = '../../third_party/blink/renderer/core/css/style_environment_variables.cc'
source_filename = "../../third_party/blink/renderer/core/css/style_environment_variables.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::StyleEnvironmentVariables::RootOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::StyleEnvironmentVariables"* }
%"class.blink::StyleEnvironmentVariables" = type { i32 (...)**, %"class.WTF::RefCounted", %"class.WTF::Vector", %"class.WTF::HashMap", %class.scoped_refptr }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr*, i32, i32 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.4 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.4 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.5", %"class.WTF::Vector.7", %"class.WTF::Vector.12", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.5" = type { %"class.base::RefCounted.6" }
%"class.base::RefCounted.6" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.7" = type { %"class.WTF::VectorBuffer.8" }
%"class.WTF::VectorBuffer.8" = type { %"class.WTF::VectorBufferBase.9" }
%"class.WTF::VectorBufferBase.9" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase.14" }
%"class.WTF::VectorBufferBase.14" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon }
%union.anon = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.WTF::ConditionalDestructor.0" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.34 }
%union.anon.34 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::CSSTokenizer" = type { %"class.blink::CSSTokenizerInputStream", %"class.WTF::Vector.17", %"class.WTF::Vector.7", i32, i32 }
%"class.blink::CSSTokenizerInputStream" = type { i32, i32, %class.scoped_refptr.2 }
%"class.WTF::Vector.17" = type { %"class.WTF::VectorBuffer.18" }
%"class.WTF::VectorBuffer.18" = type { %"class.WTF::VectorBufferBase.19", [32 x i8] }
%"class.WTF::VectorBufferBase.19" = type { i32*, i32, i32 }
%"class.WTF::Vector.22" = type { %"class.WTF::VectorBuffer.23" }
%"class.WTF::VectorBuffer.23" = type { %"class.WTF::VectorBufferBase.14", [768 x i8] }

$_ZN3WTF6VectorI13scoped_refptrIN5blink25StyleEnvironmentVariablesEELj0ENS_18PartitionAllocatorEE7EraseAtEj = comdat any

$_ZN5blink12CSSTokenizerD2Ev = comdat any

$_ZN3WTF21ConditionalDestructorINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_S6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_I13scoped_refptrIN5blink15CSSVariableDataEEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S8_EERKS3_S8_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8ReinsertEOS7_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE5clearEv = comdat any

$_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS7_ = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink25StyleEnvironmentVariablesEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink25StyleEnvironmentVariablesEEEEmm = comdat any

@_ZZN5blink25StyleEnvironmentVariables15GetRootInstanceEvE8instance = internal unnamed_addr global %"class.blink::StyleEnvironmentVariables::RootOwner"* null, align 8
@_ZGVZN5blink25StyleEnvironmentVariables15GetRootInstanceEvE8instance = internal global i64 0, align 8
@.str = private unnamed_addr constant [20 x i8] c"safe-area-inset-top\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"safe-area-inset-left\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"safe-area-inset-bottom\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"safe-area-inset-right\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"keyboard-inset-top\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"keyboard-inset-left\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"keyboard-inset-bottom\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"keyboard-inset-right\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"keyboard-inset-width\00", align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"keyboard-inset-height\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"fold-top\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"fold-right\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"fold-bottom\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"fold-left\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"fold-width\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"fold-height\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"titlebar-area-x\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"titlebar-area-y\00", align 1
@.str.18 = private unnamed_addr constant [20 x i8] c"titlebar-area-width\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"titlebar-area-height\00", align 1
@_ZTVN5blink25StyleEnvironmentVariablesE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::StyleEnvironmentVariables"*)* @_ZN5blink25StyleEnvironmentVariablesD2Ev to i8*), i8* bitcast (void (%"class.blink::StyleEnvironmentVariables"*)* @_ZN5blink25StyleEnvironmentVariablesD0Ev to i8*), i8* bitcast (%"class.blink::CSSVariableData"* (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)* @_ZN5blink25StyleEnvironmentVariables15ResolveVariableERKN3WTF12AtomicStringE to i8*), i8* bitcast (%"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)* @_ZNK5blink25StyleEnvironmentVariables17GetFeatureContextEv to i8*), i8* bitcast (void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)* @_ZN5blink25StyleEnvironmentVariables18InvalidateVariableERKN3WTF12AtomicStringE to i8*)] }, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.20 = private unnamed_addr constant [5 x i8] c"%dpx\00", align 1
@_ZN5blink12_GLOBAL__N_121kSafeAreaInsetDefaultE = internal constant [4 x i8] c"0px\00", align 1
@_ZN5blink12_GLOBAL__N_121kKeyboardInsetDefaultE = internal constant [4 x i8] c"0px\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase28is_virtual_keyboard_enabled_E = external local_unnamed_addr global i8, align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@.str.22 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.24 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringE13scoped_refptrIN5blink15CSSVariableDataEEEEEEPKcv = private unnamed_addr constant [124 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, scoped_refptr<blink::CSSVariableData> >]\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.27 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.28 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserToken]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink25StyleEnvironmentVariablesEEEEPKcv = private unnamed_addr constant [95 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<blink::StyleEnvironmentVariables>]\00", align 1

@_ZN5blink25StyleEnvironmentVariablesD1Ev = hidden unnamed_addr alias void (%"class.blink::StyleEnvironmentVariables"*), void (%"class.blink::StyleEnvironmentVariables"*)* @_ZN5blink25StyleEnvironmentVariablesD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.blink::StyleEnvironmentVariables"* @_ZN5blink25StyleEnvironmentVariables15GetRootInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink25StyleEnvironmentVariables15GetRootInstanceEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %9, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink25StyleEnvironmentVariables15GetRootInstanceEvE8instance) #12
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 8) #13
  %8 = bitcast i8* %7 to %"class.blink::StyleEnvironmentVariables"**
  store %"class.blink::StyleEnvironmentVariables"* null, %"class.blink::StyleEnvironmentVariables"** %8, align 8
  store i8* %7, i8** bitcast (%"class.blink::StyleEnvironmentVariables::RootOwner"** @_ZZN5blink25StyleEnvironmentVariables15GetRootInstanceEvE8instance to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink25StyleEnvironmentVariables15GetRootInstanceEvE8instance) #12
  br label %9

9:                                                ; preds = %3, %6, %0
  %10 = load %"class.blink::StyleEnvironmentVariables::RootOwner"*, %"class.blink::StyleEnvironmentVariables::RootOwner"** @_ZZN5blink25StyleEnvironmentVariables15GetRootInstanceEvE8instance, align 8
  %11 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables::RootOwner", %"class.blink::StyleEnvironmentVariables::RootOwner"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::StyleEnvironmentVariables"*, %"class.blink::StyleEnvironmentVariables"** %11, align 8
  %13 = icmp eq %"class.blink::StyleEnvironmentVariables"* %12, null
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = tail call noalias i8* @malloc(i64 64) #12
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 1, i32* %17, align 4
  %18 = bitcast i8* %15 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink25StyleEnvironmentVariablesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 16
  %20 = getelementptr inbounds i8, i8* %15, i64 56
  %21 = bitcast i8* %20 to %"class.blink::StyleEnvironmentVariables"**
  store %"class.blink::StyleEnvironmentVariables"* null, %"class.blink::StyleEnvironmentVariables"** %21, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 36, i1 false) #12
  %22 = ptrtoint i8* %15 to i64
  %23 = bitcast %"class.blink::StyleEnvironmentVariables::RootOwner"* %10 to i64*
  store i64 %22, i64* %23, align 8
  %24 = bitcast i8* %15 to %"class.blink::StyleEnvironmentVariables"*
  tail call fastcc void @_ZN5blink12_GLOBAL__N_130SetDefaultEnvironmentVariablesEPNS_25StyleEnvironmentVariablesE(%"class.blink::StyleEnvironmentVariables"* %24) #12
  %25 = load %"class.blink::StyleEnvironmentVariables"*, %"class.blink::StyleEnvironmentVariables"** %11, align 8
  br label %26

26:                                               ; preds = %9, %14
  %27 = phi %"class.blink::StyleEnvironmentVariables"* [ %12, %9 ], [ %25, %14 ]
  ret %"class.blink::StyleEnvironmentVariables"* %27
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink25StyleEnvironmentVariables15GetVariableNameENS_17UADefinedVariableEPKNS_14FeatureContextE(i32, %"class.blink::FeatureContext"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %5
    i32 2, label %6
    i32 3, label %7
    i32 4, label %8
    i32 5, label %9
    i32 6, label %10
    i32 7, label %11
    i32 8, label %12
    i32 9, label %13
    i32 10, label %14
    i32 11, label %15
    i32 12, label %16
    i32 13, label %17
    i32 14, label %18
    i32 15, label %19
    i32 16, label %20
    i32 17, label %21
    i32 18, label %22
    i32 19, label %23
  ]

4:                                                ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 19) #12
  br label %25

5:                                                ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 20) #12
  br label %25

6:                                                ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i64 22) #12
  br label %25

7:                                                ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i64 21) #12
  br label %25

8:                                                ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i64 18) #12
  br label %25

9:                                                ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), i64 19) #12
  br label %25

10:                                               ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i64 21) #12
  br label %25

11:                                               ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i64 20) #12
  br label %25

12:                                               ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i64 20) #12
  br label %25

13:                                               ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i64 21) #12
  br label %25

14:                                               ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i64 8) #12
  br label %25

15:                                               ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i64 10) #12
  br label %25

16:                                               ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), i64 11) #12
  br label %25

17:                                               ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0), i64 9) #12
  br label %25

18:                                               ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i64 10) #12
  br label %25

19:                                               ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i64 11) #12
  br label %25

20:                                               ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0), i64 15) #12
  br label %25

21:                                               ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i64 0, i64 0), i64 15) #12
  br label %25

22:                                               ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i64 0, i64 0), i64 19) #12
  br label %25

23:                                               ; preds = %2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i64 0, i64 0), i64 20) #12
  br label %25

24:                                               ; preds = %2
  unreachable

25:                                               ; preds = %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  ret %"class.WTF::StringImpl"* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleEnvironmentVariables"* @_ZN5blink25StyleEnvironmentVariables6CreateERS0_(%"class.blink::StyleEnvironmentVariables"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %2 = tail call noalias i8* @malloc(i64 64) #12
  %3 = bitcast i8* %2 to %"class.blink::StyleEnvironmentVariables"*
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i32*
  store i32 1, i32* %5, align 4
  %6 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink25StyleEnvironmentVariablesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 16
  %8 = getelementptr inbounds i8, i8* %2, i64 56
  %9 = bitcast i8* %8 to %"class.blink::StyleEnvironmentVariables"**
  store %"class.blink::StyleEnvironmentVariables"* null, %"class.blink::StyleEnvironmentVariables"** %9, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 36, i1 false) #12
  tail call void @_ZN5blink25StyleEnvironmentVariables12BindToParentERS0_(%"class.blink::StyleEnvironmentVariables"* %3, %"class.blink::StyleEnvironmentVariables"* dereferenceable(64) %0)
  ret %"class.blink::StyleEnvironmentVariables"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25StyleEnvironmentVariables12BindToParentERS0_(%"class.blink::StyleEnvironmentVariables"*, %"class.blink::StyleEnvironmentVariables"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleEnvironmentVariables"*, align 8
  %4 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 4
  %5 = icmp eq %"class.blink::StyleEnvironmentVariables"* %1, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %1, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %7) #12
  br label %8

8:                                                ; preds = %6, %2
  %9 = ptrtoint %"class.blink::StyleEnvironmentVariables"* %1 to i64
  %10 = bitcast %class.scoped_refptr* %4 to i64*
  %11 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %12 = load %"class.blink::StyleEnvironmentVariables"*, %"class.blink::StyleEnvironmentVariables"** %11, align 8
  store i64 %9, i64* %10, align 8
  %13 = icmp eq %"class.blink::StyleEnvironmentVariables"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %12, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #12
  %17 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted"* %21 to %"class.blink::StyleEnvironmentVariables"*
  %23 = bitcast %"class.base::RefCounted"* %21 to void (%"class.blink::StyleEnvironmentVariables"*)***
  %24 = load void (%"class.blink::StyleEnvironmentVariables"*)**, void (%"class.blink::StyleEnvironmentVariables"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::StyleEnvironmentVariables"*)*, void (%"class.blink::StyleEnvironmentVariables"*)** %24, i64 1
  %26 = load void (%"class.blink::StyleEnvironmentVariables"*)*, void (%"class.blink::StyleEnvironmentVariables"*)** %25, align 8
  tail call void %26(%"class.blink::StyleEnvironmentVariables"* nonnull %22) #12
  br label %27

27:                                               ; preds = %8, %14, %20
  %28 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %1, i64 0, i32 2
  %29 = bitcast %"class.blink::StyleEnvironmentVariables"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  store %"class.blink::StyleEnvironmentVariables"* %0, %"class.blink::StyleEnvironmentVariables"** %3, align 8
  %30 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %46, label %35, !prof !3

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %28, i64 0, i32 0, i32 0, i32 0
  %37 = load %class.scoped_refptr*, %class.scoped_refptr** %36, align 8
  %38 = zext i32 %31 to i64
  %39 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %37, i64 %38, i32 0
  store %"class.blink::StyleEnvironmentVariables"* %0, %"class.blink::StyleEnvironmentVariables"** %39, align 8
  %40 = icmp eq %"class.blink::StyleEnvironmentVariables"* %0, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %42) #12
  br label %43

43:                                               ; preds = %41, %35
  %44 = load i32, i32* %30, align 4
  %45 = add i32 %44, 1
  store i32 %45, i32* %30, align 4
  br label %47

46:                                               ; preds = %27
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink25StyleEnvironmentVariablesEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"* %28, %"class.blink::StyleEnvironmentVariables"** nonnull dereferenceable(8) %3) #12
  br label %47

47:                                               ; preds = %43, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25StyleEnvironmentVariablesD2Ev(%"class.blink::StyleEnvironmentVariables"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink25StyleEnvironmentVariablesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.blink::StyleEnvironmentVariables"*, %"class.blink::StyleEnvironmentVariables"** %3, align 8
  %5 = icmp eq %"class.blink::StyleEnvironmentVariables"* %4, null
  br i1 %5, label %46, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %4, i64 0, i32 2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %class.scoped_refptr*, %class.scoped_refptr** %8, align 8
  %10 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %4, i64 0, i32 2, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %29, label %15

15:                                               ; preds = %6, %20
  %16 = phi %class.scoped_refptr* [ %21, %20 ], [ %9, %6 ]
  %17 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 0, i32 0
  %18 = load %"class.blink::StyleEnvironmentVariables"*, %"class.blink::StyleEnvironmentVariables"** %17, align 8
  %19 = icmp eq %"class.blink::StyleEnvironmentVariables"* %18, %0
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 1
  %22 = icmp ult %class.scoped_refptr* %21, %13
  br i1 %22, label %15, label %29

23:                                               ; preds = %15
  %24 = ptrtoint %class.scoped_refptr* %16 to i64
  %25 = ptrtoint %class.scoped_refptr* %9 to i64
  %26 = sub i64 %24, %25
  %27 = lshr exact i64 %26, 3
  %28 = trunc i64 %27 to i32
  br label %29

29:                                               ; preds = %20, %23, %6
  %30 = phi i32 [ %28, %23 ], [ -1, %6 ], [ -1, %20 ]
  tail call void @_ZN3WTF6VectorI13scoped_refptrIN5blink25StyleEnvironmentVariablesEELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector"* %7, i32 %30)
  %31 = load %"class.blink::StyleEnvironmentVariables"*, %"class.blink::StyleEnvironmentVariables"** %3, align 8
  %32 = icmp eq %"class.blink::StyleEnvironmentVariables"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %31, i64 0, i32 1, i32 0
  %35 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %34, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #12
  %36 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %34, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %46

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %34, i64 -2
  %41 = bitcast %"class.base::RefCounted"* %40 to %"class.blink::StyleEnvironmentVariables"*
  %42 = bitcast %"class.base::RefCounted"* %40 to void (%"class.blink::StyleEnvironmentVariables"*)***
  %43 = load void (%"class.blink::StyleEnvironmentVariables"*)**, void (%"class.blink::StyleEnvironmentVariables"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::StyleEnvironmentVariables"*)*, void (%"class.blink::StyleEnvironmentVariables"*)** %43, i64 1
  %45 = load void (%"class.blink::StyleEnvironmentVariables"*)*, void (%"class.blink::StyleEnvironmentVariables"*)** %44, align 8
  tail call void %45(%"class.blink::StyleEnvironmentVariables"* nonnull %41) #12
  br label %46

46:                                               ; preds = %1, %29, %33, %39
  %47 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 3
  %48 = bitcast %"class.WTF::HashMap"* %47 to %"class.WTF::ConditionalDestructor.0"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.0"* %48) #12
  %49 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 2
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %class.scoped_refptr*, %class.scoped_refptr** %50, align 8
  %52 = icmp eq %class.scoped_refptr* %51, null
  br i1 %52, label %87, label %53, !prof !4

53:                                               ; preds = %46
  %54 = bitcast %class.scoped_refptr* %51 to i8*
  %55 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %85, label %58, !prof !3

58:                                               ; preds = %53
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %51, i64 %59
  br label %61

61:                                               ; preds = %79, %58
  %62 = phi %class.scoped_refptr* [ %80, %79 ], [ %51, %58 ]
  %63 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %62, i64 0, i32 0
  %64 = load %"class.blink::StyleEnvironmentVariables"*, %"class.blink::StyleEnvironmentVariables"** %63, align 8
  %65 = icmp eq %"class.blink::StyleEnvironmentVariables"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %64, i64 0, i32 1, i32 0
  %68 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %67, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %68) #12
  %69 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %67, i64 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %79

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %67, i64 -2
  %74 = bitcast %"class.base::RefCounted"* %73 to %"class.blink::StyleEnvironmentVariables"*
  %75 = bitcast %"class.base::RefCounted"* %73 to void (%"class.blink::StyleEnvironmentVariables"*)***
  %76 = load void (%"class.blink::StyleEnvironmentVariables"*)**, void (%"class.blink::StyleEnvironmentVariables"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.blink::StyleEnvironmentVariables"*)*, void (%"class.blink::StyleEnvironmentVariables"*)** %76, i64 1
  %78 = load void (%"class.blink::StyleEnvironmentVariables"*)*, void (%"class.blink::StyleEnvironmentVariables"*)** %77, align 8
  tail call void %78(%"class.blink::StyleEnvironmentVariables"* nonnull %74) #12
  br label %79

79:                                               ; preds = %72, %66, %61
  %80 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %62, i64 1
  %81 = icmp eq %class.scoped_refptr* %80, %60
  br i1 %81, label %82, label %61

82:                                               ; preds = %79
  store i32 0, i32* %55, align 4
  %83 = bitcast %"class.WTF::Vector"* %49 to i8**
  %84 = load i8*, i8** %83, align 8
  br label %85

85:                                               ; preds = %82, %53
  %86 = phi i8* [ %84, %82 ], [ %54, %53 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %86) #12
  store %class.scoped_refptr* null, %class.scoped_refptr** %50, align 8
  br label %87

87:                                               ; preds = %46, %85
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink25StyleEnvironmentVariablesEELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.22, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr*, %class.scoped_refptr** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 %25
  %27 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %26, i64 0, i32 0
  %28 = load %"class.blink::StyleEnvironmentVariables"*, %"class.blink::StyleEnvironmentVariables"** %27, align 8
  %29 = icmp eq %"class.blink::StyleEnvironmentVariables"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %28, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %31, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %32) #12
  %33 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %31, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %43

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %31, i64 -2
  %38 = bitcast %"class.base::RefCounted"* %37 to %"class.blink::StyleEnvironmentVariables"*
  %39 = bitcast %"class.base::RefCounted"* %37 to void (%"class.blink::StyleEnvironmentVariables"*)***
  %40 = load void (%"class.blink::StyleEnvironmentVariables"*)**, void (%"class.blink::StyleEnvironmentVariables"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::StyleEnvironmentVariables"*)*, void (%"class.blink::StyleEnvironmentVariables"*)** %40, i64 1
  %42 = load void (%"class.blink::StyleEnvironmentVariables"*)*, void (%"class.blink::StyleEnvironmentVariables"*)** %41, align 8
  call void %42(%"class.blink::StyleEnvironmentVariables"* nonnull %38) #12
  br label %43

43:                                               ; preds = %22, %30, %36
  %44 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %26, i64 1
  %45 = icmp ne %class.scoped_refptr* %26, null
  %46 = icmp ne %class.scoped_refptr* %44, null
  %47 = and i1 %45, %46
  br i1 %47, label %48, label %58, !prof !4

48:                                               ; preds = %43
  %49 = load %class.scoped_refptr*, %class.scoped_refptr** %23, align 8
  %50 = load i32, i32* %8, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %49, i64 %51
  %53 = bitcast %class.scoped_refptr* %26 to i8*
  %54 = bitcast %class.scoped_refptr* %44 to i8*
  %55 = ptrtoint %class.scoped_refptr* %52 to i64
  %56 = ptrtoint %class.scoped_refptr* %44 to i64
  %57 = sub i64 %55, %56
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %53, i8* nonnull align 8 %54, i64 %57, i1 false) #12
  br label %58

58:                                               ; preds = %43, %48
  %59 = load i32, i32* %8, align 4
  %60 = add i32 %59, -1
  store i32 %60, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25StyleEnvironmentVariablesD0Ev(%"class.blink::StyleEnvironmentVariables"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink25StyleEnvironmentVariablesD2Ev(%"class.blink::StyleEnvironmentVariables"* %0) #12
  %2 = bitcast %"class.blink::StyleEnvironmentVariables"* %0 to i8*
  tail call void @free(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25StyleEnvironmentVariables11SetVariableERKN3WTF12AtomicStringE13scoped_refptrINS_15CSSVariableDataEE(%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::CSSVariableData"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.scoped_refptr.4, align 8
  %5 = getelementptr inbounds %class.scoped_refptr.4, %class.scoped_refptr.4* %4, i64 0, i32 0
  store %"class.blink::CSSVariableData"* %2, %"class.blink::CSSVariableData"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 3, i32 0
  %7 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_S6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable"* %6, %"class.WTF::AtomicString"* dereferenceable(8) %1, %class.scoped_refptr.4* nonnull dereferenceable(8) %4) #12
  %8 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %7, 1
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %27

11:                                               ; preds = %3
  %12 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %7, 0
  %13 = bitcast %class.scoped_refptr.4* %4 to i64*
  %14 = load i64, i64* %13, align 8
  store %"class.blink::CSSVariableData"* null, %"class.blink::CSSVariableData"** %5, align 8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 0, i32 1
  %16 = bitcast %class.scoped_refptr.4* %15 to i64*
  %17 = getelementptr inbounds %class.scoped_refptr.4, %class.scoped_refptr.4* %15, i64 0, i32 0
  %18 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %17, align 8
  store i64 %14, i64* %16, align 8
  %19 = icmp eq %"class.blink::CSSVariableData"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %18, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #12
  %22 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %18) #12
  %26 = bitcast %"class.blink::CSSVariableData"* %18 to i8*
  call void @free(i8* %26) #12
  br label %27

27:                                               ; preds = %3, %11, %20, %25
  %28 = bitcast %"class.blink::StyleEnvironmentVariables"* %0 to void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)***
  %29 = load void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)**, void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)** %29, i64 4
  %31 = load void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)** %30, align 8
  call void %31(%"class.blink::StyleEnvironmentVariables"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1) #12
  %32 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %5, align 8
  %33 = icmp eq %"class.blink::CSSVariableData"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %32, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #12
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %32) #12
  %40 = bitcast %"class.blink::CSSVariableData"* %32 to i8*
  call void @free(i8* %40) #12
  br label %41

41:                                               ; preds = %27, %34, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25StyleEnvironmentVariables11SetVariableERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSTokenizer", align 8
  %5 = alloca %"class.WTF::Vector.12", align 8
  %6 = alloca %"class.WTF::Vector.22", align 8
  %7 = alloca %"class.WTF::Vector.7", align 8
  %8 = bitcast %"class.blink::CSSTokenizer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %8) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 88, i1 false)
  call void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %2, i32 0) #12
  %9 = bitcast %"class.WTF::Vector.12"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #12
  %13 = bitcast %"class.WTF::Vector.22"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 784, i8* nonnull %13) #12
  call void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.22"* nonnull sret %6, %"class.blink::CSSTokenizer"* nonnull %4) #12
  %14 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %6, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %6, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  call void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.12"* nonnull %5, %"class.blink::CSSParserToken"* %15, i32 %17) #12
  %18 = load i32, i32* %16, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !3

20:                                               ; preds = %3
  store i32 0, i32* %16, align 4
  br label %21

21:                                               ; preds = %20, %3
  %22 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %6, i64 0, i32 0, i32 1, i64 0
  %24 = bitcast i8* %23 to %"class.blink::CSSParserToken"*
  %25 = icmp eq %"class.blink::CSSParserToken"* %22, %24
  br i1 %25, label %28, label %26, !prof !4

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %6, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.23"* nonnull %27, %"class.blink::CSSParserToken"* %22) #12
  br label %28

28:                                               ; preds = %21, %26
  call void @llvm.lifetime.end.p0i8(i64 784, i8* nonnull %13) #12
  %29 = bitcast %"class.WTF::Vector.7"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %7, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %7, i64 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %7, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 16, i1 false) #12
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.7"* nonnull %7, %"class.WTF::String"* dereferenceable(8) %2) #12
  %33 = bitcast %"class.WTF::Vector.12"* %5 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = load i32, i32* %11, align 8
  %36 = load i32, i32* %12, align 4
  %37 = bitcast %"class.WTF::Vector.7"* %7 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = load i32, i32* %31, align 8
  %40 = load i32, i32* %32, align 4
  store atomic i64 0, i64* %33 monotonic, align 8
  store i32 0, i32* %11, align 8
  store i32 0, i32* %12, align 4
  store atomic i64 0, i64* %37 monotonic, align 8
  store i32 0, i32* %31, align 8
  store i32 0, i32* %32, align 4
  %41 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %42 = call noalias i8* @malloc(i64 72) #12
  %43 = bitcast i8* %42 to %"class.blink::CSSVariableData"*
  %44 = bitcast i8* %42 to i32*
  store i32 1, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %42, i64 8
  %46 = getelementptr inbounds i8, i8* %42, i64 16
  %47 = bitcast i8* %46 to i32*
  %48 = getelementptr inbounds i8, i8* %42, i64 20
  %49 = bitcast i8* %48 to i32*
  %50 = bitcast i8* %45 to i64*
  store atomic i64 %38, i64* %50 monotonic, align 8
  store i32 %39, i32* %47, align 4
  store i32 %40, i32* %49, align 4
  %51 = getelementptr inbounds i8, i8* %42, i64 24
  %52 = getelementptr inbounds i8, i8* %42, i64 32
  %53 = bitcast i8* %52 to i32*
  %54 = getelementptr inbounds i8, i8* %42, i64 36
  %55 = bitcast i8* %54 to i32*
  %56 = bitcast i8* %51 to i64*
  store atomic i64 %34, i64* %56 monotonic, align 8
  store i32 %35, i32* %53, align 4
  store i32 %36, i32* %55, align 4
  %57 = getelementptr inbounds i8, i8* %42, i64 40
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %41, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 12, i1 false)
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = getelementptr inbounds i8, i8* %42, i64 56
  %61 = bitcast i8* %60 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %61, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %28
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %80

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #12
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %68
  call void @llvm.trap() #12
  unreachable

78:                                               ; preds = %68
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %69, align 4
  br label %80

80:                                               ; preds = %28, %63, %78
  %81 = getelementptr inbounds i8, i8* %42, i64 64
  %82 = bitcast i8* %81 to i64*
  store i64 0, i64* %82, align 8
  call void @_ZN5blink25StyleEnvironmentVariables11SetVariableERKN3WTF12AtomicStringE13scoped_refptrINS_15CSSVariableDataEE(%"class.blink::StyleEnvironmentVariables"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::CSSVariableData"* %43)
  %83 = load %"class.WTF::String"*, %"class.WTF::String"** %30, align 8
  %84 = icmp eq %"class.WTF::String"* %83, null
  br i1 %84, label %118, label %85, !prof !4

85:                                               ; preds = %80
  %86 = bitcast %"class.WTF::String"* %83 to i8*
  %87 = load i32, i32* %32, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %116, label %89, !prof !3

89:                                               ; preds = %85
  %90 = zext i32 %87 to i64
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %83, i64 %90
  br label %92

92:                                               ; preds = %110, %89
  %93 = phi %"class.WTF::String"* [ %111, %110 ], [ %83, %89 ]
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %93, i64 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #12
  br label %110

110:                                              ; preds = %109, %106, %92
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %93, i64 1
  %112 = icmp eq %"class.WTF::String"* %111, %91
  br i1 %112, label %113, label %92

113:                                              ; preds = %110
  store i32 0, i32* %32, align 4
  %114 = bitcast %"class.WTF::Vector.7"* %7 to i8**
  %115 = load i8*, i8** %114, align 8
  br label %116

116:                                              ; preds = %113, %85
  %117 = phi i8* [ %115, %113 ], [ %86, %85 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %117) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %30, align 8
  br label %118

118:                                              ; preds = %80, %116
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #12
  %119 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %10, align 8
  %120 = icmp eq %"class.blink::CSSParserToken"* %119, null
  %121 = bitcast %"class.blink::CSSParserToken"* %119 to i8*
  br i1 %120, label %127, label %122, !prof !4

122:                                              ; preds = %118
  %123 = load i32, i32* %12, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %126, label %125, !prof !3

125:                                              ; preds = %122
  store i32 0, i32* %12, align 4
  br label %126

126:                                              ; preds = %125, %122
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %121) #12
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %10, align 8
  br label %127

127:                                              ; preds = %118, %126
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  call void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %8) #12
  ret void
}

declare void @_ZN5blink12CSSTokenizerC1ERKN3WTF6StringEj(%"class.blink::CSSTokenizer"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #5

declare void @_ZN5blink12CSSTokenizer13TokenizeToEOFEv(%"class.WTF::Vector.22"* sret, %"class.blink::CSSTokenizer"*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12CSSTokenizerD2Ev(%"class.blink::CSSTokenizer"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %40, label %6, !prof !4

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11, !prof !3

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.WTF::String"* [ %33, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #12
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 1
  %34 = icmp eq %"class.WTF::String"* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %36 = bitcast %"class.WTF::Vector.7"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i8* [ %37, %35 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %3, align 8
  br label %40

40:                                               ; preds = %1, %38
  %41 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1
  %42 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45, !prof !3

45:                                               ; preds = %40
  store i32 0, i32* %42, align 4
  br label %46

46:                                               ; preds = %45, %40
  %47 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %41, i64 0, i32 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 1, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %41, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.18"* %53, i32* %48) #12
  br label %54

54:                                               ; preds = %46, %52
  store i32* null, i32** %47, align 8
  %55 = getelementptr inbounds %"class.blink::CSSTokenizer", %"class.blink::CSSTokenizer"* %0, i64 0, i32 0, i32 2, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #12
  br label %71

71:                                               ; preds = %54, %67, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25StyleEnvironmentVariables11SetVariableENS_17UADefinedVariableERKN3WTF6StringE(%"class.blink::StyleEnvironmentVariables"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = bitcast %"class.blink::StyleEnvironmentVariables"* %0 to %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)***
  %7 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)**, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %7, i64 3
  %9 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %8, align 8
  %10 = tail call %"class.blink::FeatureContext"* %9(%"class.blink::StyleEnvironmentVariables"* %0) #12
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink25StyleEnvironmentVariables15GetVariableNameENS_17UADefinedVariableEPKNS_14FeatureContextE(i32 %1, %"class.blink::FeatureContext"* undef)
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  call void @_ZN5blink25StyleEnvironmentVariables11SetVariableERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::StyleEnvironmentVariables"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %2)
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #12
  br label %28

28:                                               ; preds = %3, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25StyleEnvironmentVariables14RemoveVariableERKN3WTF12AtomicStringE(%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %60, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = lshr i32 %15, 8
  %17 = and i32 %16, %10
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %18
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %60, label %23

23:                                               ; preds = %9
  %24 = xor i32 %16, -1
  %25 = lshr i32 %15, 31
  %26 = add nsw i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %47, %23
  %38 = phi %"struct.WTF::KeyValuePair"* [ %19, %23 ], [ %52, %47 ]
  %39 = phi i64 [ %18, %23 ], [ %51, %47 ]
  %40 = phi i64 [ 0, %23 ], [ %49, %47 ]
  %41 = bitcast %"struct.WTF::KeyValuePair"* %38 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = icmp ne i8* %42, inttoptr (i64 -1 to i8*)
  %44 = bitcast i8* %42 to %"class.WTF::StringImpl"*
  %45 = icmp eq %"class.WTF::StringImpl"* %13, %44
  %46 = and i1 %43, %45
  br i1 %46, label %56, label %47

47:                                               ; preds = %37
  %48 = icmp eq i64 %40, 0
  %49 = select i1 %48, i64 %36, i64 %40
  %50 = add i64 %49, %39
  %51 = and i64 %50, %11
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %51
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %60, label %37

56:                                               ; preds = %37
  %57 = icmp eq %"struct.WTF::KeyValuePair"* %38, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = zext i32 %8 to i64
  br label %63

60:                                               ; preds = %47, %56, %9, %2
  %61 = zext i32 %8 to i64
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  br label %63

63:                                               ; preds = %60, %58
  %64 = phi i64 [ %59, %58 ], [ %61, %60 ]
  %65 = phi %"struct.WTF::KeyValuePair"* [ %38, %58 ], [ %62, %60 ]
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %64
  %67 = icmp eq %"struct.WTF::KeyValuePair"* %66, %65
  br i1 %67, label %70, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %3, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable"* %69, %"struct.WTF::KeyValuePair"* %65) #12
  br label %70

70:                                               ; preds = %63, %68
  %71 = bitcast %"class.blink::StyleEnvironmentVariables"* %0 to void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)***
  %72 = load void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)**, void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)** %72, i64 4
  %74 = load void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)** %73, align 8
  tail call void %74(%"class.blink::StyleEnvironmentVariables"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSVariableData"* @_ZN5blink25StyleEnvironmentVariables15ResolveVariableERKN3WTF12AtomicStringE(%"class.blink::StyleEnvironmentVariables"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 3, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %59, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = and i32 %15, %9
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %17
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %59, label %22

22:                                               ; preds = %8
  %23 = xor i32 %15, -1
  %24 = lshr i32 %14, 31
  %25 = add nsw i32 %24, %23
  %26 = shl i32 %25, 12
  %27 = xor i32 %26, %25
  %28 = lshr i32 %27, 7
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 2
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 20
  %33 = xor i32 %32, %31
  %34 = or i32 %33, 1
  %35 = zext i32 %34 to i64
  br label %36

36:                                               ; preds = %46, %22
  %37 = phi %"struct.WTF::KeyValuePair"* [ %18, %22 ], [ %51, %46 ]
  %38 = phi i64 [ %17, %22 ], [ %50, %46 ]
  %39 = phi i64 [ 0, %22 ], [ %48, %46 ]
  %40 = bitcast %"struct.WTF::KeyValuePair"* %37 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = icmp ne i8* %41, inttoptr (i64 -1 to i8*)
  %43 = bitcast i8* %41 to %"class.WTF::StringImpl"*
  %44 = icmp eq %"class.WTF::StringImpl"* %12, %43
  %45 = and i1 %42, %44
  br i1 %45, label %55, label %46

46:                                               ; preds = %36
  %47 = icmp eq i64 %39, 0
  %48 = select i1 %47, i64 %35, i64 %39
  %49 = add i64 %48, %38
  %50 = and i64 %49, %10
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %50
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %59, label %36

55:                                               ; preds = %36
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %37, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = zext i32 %7 to i64
  br label %62

59:                                               ; preds = %46, %55, %8, %2
  %60 = zext i32 %7 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %60
  br label %62

62:                                               ; preds = %57, %59
  %63 = phi i64 [ %58, %57 ], [ %60, %59 ]
  %64 = phi %"struct.WTF::KeyValuePair"* [ %37, %57 ], [ %61, %59 ]
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %63
  %66 = icmp eq %"struct.WTF::KeyValuePair"* %64, %65
  br i1 %66, label %67, label %77

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 4, i32 0
  %69 = load %"class.blink::StyleEnvironmentVariables"*, %"class.blink::StyleEnvironmentVariables"** %68, align 8
  %70 = icmp eq %"class.blink::StyleEnvironmentVariables"* %69, null
  br i1 %70, label %80, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.blink::StyleEnvironmentVariables"* %69 to %"class.blink::CSSVariableData"* (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)***
  %73 = load %"class.blink::CSSVariableData"* (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)**, %"class.blink::CSSVariableData"* (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)*** %72, align 8
  %74 = getelementptr inbounds %"class.blink::CSSVariableData"* (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)*, %"class.blink::CSSVariableData"* (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)** %73, i64 2
  %75 = load %"class.blink::CSSVariableData"* (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)*, %"class.blink::CSSVariableData"* (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)** %74, align 8
  %76 = tail call %"class.blink::CSSVariableData"* %75(%"class.blink::StyleEnvironmentVariables"* nonnull %69, %"class.WTF::AtomicString"* dereferenceable(8) %1) #12
  br label %80

77:                                               ; preds = %62
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 1, i32 0
  %79 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %78, align 8
  br label %80

80:                                               ; preds = %67, %77, %71
  %81 = phi %"class.blink::CSSVariableData"* [ %76, %71 ], [ %79, %77 ], [ null, %67 ]
  ret %"class.blink::CSSVariableData"* %81
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25StyleEnvironmentVariables16DetachFromParentEv(%"class.blink::StyleEnvironmentVariables"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 0, i32 0
  %4 = load %"class.blink::StyleEnvironmentVariables"*, %"class.blink::StyleEnvironmentVariables"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %4, i64 0, i32 2
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %8 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %4, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %30, label %13

13:                                               ; preds = %1, %18
  %14 = phi %class.scoped_refptr* [ %19, %18 ], [ %7, %1 ]
  %15 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %14, i64 0, i32 0
  %16 = load %"class.blink::StyleEnvironmentVariables"*, %"class.blink::StyleEnvironmentVariables"** %15, align 8
  %17 = icmp eq %"class.blink::StyleEnvironmentVariables"* %16, %0
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %14, i64 1
  %20 = icmp ult %class.scoped_refptr* %19, %11
  br i1 %20, label %13, label %30

21:                                               ; preds = %13
  %22 = ptrtoint %class.scoped_refptr* %14 to i64
  %23 = ptrtoint %class.scoped_refptr* %7 to i64
  %24 = sub i64 %22, %23
  %25 = lshr exact i64 %24, 3
  %26 = trunc i64 %25 to i32
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %30, label %28

28:                                               ; preds = %21
  tail call void @_ZN3WTF6VectorI13scoped_refptrIN5blink25StyleEnvironmentVariablesEELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector"* %5, i32 %26)
  %29 = load %"class.blink::StyleEnvironmentVariables"*, %"class.blink::StyleEnvironmentVariables"** %3, align 8
  br label %30

30:                                               ; preds = %18, %1, %21, %28
  %31 = phi %"class.blink::StyleEnvironmentVariables"* [ %4, %1 ], [ %4, %21 ], [ %29, %28 ], [ %4, %18 ]
  %32 = bitcast %class.scoped_refptr* %2 to i64*
  store i64 0, i64* %32, align 8
  %33 = icmp eq %"class.blink::StyleEnvironmentVariables"* %31, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %31, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %35, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #12
  %37 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %35, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %35, i64 -2
  %42 = bitcast %"class.base::RefCounted"* %41 to %"class.blink::StyleEnvironmentVariables"*
  %43 = bitcast %"class.base::RefCounted"* %41 to void (%"class.blink::StyleEnvironmentVariables"*)***
  %44 = load void (%"class.blink::StyleEnvironmentVariables"*)**, void (%"class.blink::StyleEnvironmentVariables"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::StyleEnvironmentVariables"*)*, void (%"class.blink::StyleEnvironmentVariables"*)** %44, i64 1
  %46 = load void (%"class.blink::StyleEnvironmentVariables"*)*, void (%"class.blink::StyleEnvironmentVariables"*)** %45, align 8
  tail call void %46(%"class.blink::StyleEnvironmentVariables"* nonnull %42) #12
  br label %47

47:                                               ; preds = %30, %34, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink25StyleEnvironmentVariables8FormatPxEi(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0), i32 %0) #12
  ret %"class.WTF::StringImpl"* %2
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.blink::FeatureContext"* @_ZNK5blink25StyleEnvironmentVariables17GetFeatureContextEv(%"class.blink::StyleEnvironmentVariables"* nocapture readnone) unnamed_addr #6 align 2 {
  ret %"class.blink::FeatureContext"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25StyleEnvironmentVariables15ClearForTestingEv(%"class.blink::StyleEnvironmentVariables"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE5clearEv(%"class.WTF::HashTable"* %2) #12
  %3 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 4, i32 0
  %4 = load %"class.blink::StyleEnvironmentVariables"*, %"class.blink::StyleEnvironmentVariables"** %3, align 8
  %5 = icmp eq %"class.blink::StyleEnvironmentVariables"* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call fastcc void @_ZN5blink12_GLOBAL__N_130SetDefaultEnvironmentVariablesEPNS_25StyleEnvironmentVariablesE(%"class.blink::StyleEnvironmentVariables"* %0)
  br label %7

7:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_130SetDefaultEnvironmentVariablesEPNS_25StyleEnvironmentVariablesE(%"class.blink::StyleEnvironmentVariables"*) unnamed_addr #0 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca %"class.WTF::AtomicString", align 8
  %11 = alloca %"class.WTF::AtomicString", align 8
  %12 = alloca %"class.WTF::AtomicString", align 8
  %13 = alloca %"class.WTF::AtomicString", align 8
  %14 = alloca %"class.WTF::AtomicString", align 8
  %15 = alloca %"class.WTF::AtomicString", align 8
  %16 = alloca %"class.WTF::AtomicString", align 8
  %17 = alloca %"class.WTF::AtomicString", align 8
  %18 = alloca %"class.WTF::AtomicString", align 8
  %19 = alloca %"class.WTF::AtomicString", align 8
  %20 = alloca %"class.WTF::AtomicString", align 8
  %21 = alloca %"class.WTF::AtomicString", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.WTF::String", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.WTF::String", align 8
  %27 = alloca %"class.WTF::String", align 8
  %28 = alloca %"class.WTF::String", align 8
  %29 = alloca %"class.WTF::String", align 8
  %30 = alloca %"class.WTF::String", align 8
  %31 = alloca %"class.WTF::String", align 8
  %32 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN5blink12_GLOBAL__N_121kSafeAreaInsetDefaultE, i64 0, i64 0), i64 3) #12
  %33 = bitcast %"class.WTF::AtomicString"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  %34 = bitcast %"class.blink::StyleEnvironmentVariables"* %0 to %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)***
  %35 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)**, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*** %34, align 8
  %36 = getelementptr inbounds %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %35, i64 3
  %37 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %36, align 8
  %38 = call %"class.blink::FeatureContext"* %37(%"class.blink::StyleEnvironmentVariables"* %0) #12
  %39 = bitcast %"class.WTF::AtomicString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 19) #12
  %40 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  %41 = load i64, i64* %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  %42 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %21, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.WTF::AtomicString"* %21 to i64*
  store i64 %41, i64* %43, align 8
  call void @_ZN5blink25StyleEnvironmentVariables11SetVariableERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::StyleEnvironmentVariables"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %21, %"class.WTF::String"* nonnull dereferenceable(8) %22) #12
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %1
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #12
  br label %59

59:                                               ; preds = %1, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #12
  br label %76

76:                                               ; preds = %59, %72, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  %77 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %23, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN5blink12_GLOBAL__N_121kSafeAreaInsetDefaultE, i64 0, i64 0), i64 3) #12
  %78 = bitcast %"class.WTF::AtomicString"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #12
  %79 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)**, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*** %34, align 8
  %80 = getelementptr inbounds %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %79, i64 3
  %81 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %80, align 8
  %82 = call %"class.blink::FeatureContext"* %81(%"class.blink::StyleEnvironmentVariables"* %0) #12
  %83 = bitcast %"class.WTF::AtomicString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %10, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i64 20) #12
  %84 = bitcast %"class.WTF::AtomicString"* %10 to i64*
  %85 = load i64, i64* %84, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  %86 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %20, i64 0, i32 0, i32 0, i32 0
  %87 = bitcast %"class.WTF::AtomicString"* %20 to i64*
  store i64 %85, i64* %87, align 8
  call void @_ZN5blink25StyleEnvironmentVariables11SetVariableERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::StyleEnvironmentVariables"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %20, %"class.WTF::String"* nonnull dereferenceable(8) %23) #12
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %76
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #12
  br label %103

103:                                              ; preds = %76, %99, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #12
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #12
  br label %120

120:                                              ; preds = %103, %116, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #12
  %121 = bitcast %"class.WTF::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN5blink12_GLOBAL__N_121kSafeAreaInsetDefaultE, i64 0, i64 0), i64 3) #12
  %122 = bitcast %"class.WTF::AtomicString"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #12
  %123 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)**, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*** %34, align 8
  %124 = getelementptr inbounds %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %123, i64 3
  %125 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %124, align 8
  %126 = call %"class.blink::FeatureContext"* %125(%"class.blink::StyleEnvironmentVariables"* %0) #12
  %127 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127)
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i64 22) #12
  %128 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  %129 = load i64, i64* %128, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127)
  %130 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %131 = bitcast %"class.WTF::AtomicString"* %19 to i64*
  store i64 %129, i64* %131, align 8
  call void @_ZN5blink25StyleEnvironmentVariables11SetVariableERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::StyleEnvironmentVariables"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %19, %"class.WTF::String"* nonnull dereferenceable(8) %24) #12
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %120
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #12
  br label %147

147:                                              ; preds = %120, %143, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #12
  %148 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #12
  br label %164

164:                                              ; preds = %147, %160, %163
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #12
  %165 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN5blink12_GLOBAL__N_121kSafeAreaInsetDefaultE, i64 0, i64 0), i64 3) #12
  %166 = bitcast %"class.WTF::AtomicString"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #12
  %167 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)**, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*** %34, align 8
  %168 = getelementptr inbounds %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %167, i64 3
  %169 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %168, align 8
  %170 = call %"class.blink::FeatureContext"* %169(%"class.blink::StyleEnvironmentVariables"* %0) #12
  %171 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171)
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i64 21) #12
  %172 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  %173 = load i64, i64* %172, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171)
  %174 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %18, i64 0, i32 0, i32 0, i32 0
  %175 = bitcast %"class.WTF::AtomicString"* %18 to i64*
  store i64 %173, i64* %175, align 8
  call void @_ZN5blink25StyleEnvironmentVariables11SetVariableERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::StyleEnvironmentVariables"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %18, %"class.WTF::String"* nonnull dereferenceable(8) %25) #12
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %164
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #12
  br label %191

191:                                              ; preds = %164, %187, %190
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #12
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %192, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %194, label %208, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %204

202:                                              ; preds = %195
  %203 = add i32 %201, -1
  store i32 %203, i32* %200, align 4
  br label %204

204:                                              ; preds = %202, %195
  %205 = phi i32 [ %203, %202 ], [ %201, %195 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #12
  br label %208

208:                                              ; preds = %191, %204, %207
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #12
  %209 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase28is_virtual_keyboard_enabled_E, align 1, !range !5
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %476, label %211

211:                                              ; preds = %208
  %212 = bitcast %"class.WTF::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %212) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %26, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN5blink12_GLOBAL__N_121kKeyboardInsetDefaultE, i64 0, i64 0), i64 3) #12
  %213 = bitcast %"class.WTF::AtomicString"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %213) #12
  %214 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)**, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*** %34, align 8
  %215 = getelementptr inbounds %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %214, i64 3
  %216 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %215, align 8
  %217 = call %"class.blink::FeatureContext"* %216(%"class.blink::StyleEnvironmentVariables"* %0) #12
  %218 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218)
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i64 18) #12
  %219 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  %220 = load i64, i64* %219, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218)
  %221 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  %222 = bitcast %"class.WTF::AtomicString"* %17 to i64*
  store i64 %220, i64* %222, align 8
  call void @_ZN5blink25StyleEnvironmentVariables11SetVariableERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::StyleEnvironmentVariables"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %17, %"class.WTF::String"* nonnull dereferenceable(8) %26) #12
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %221, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %224, label %238, label %225

225:                                              ; preds = %211
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  br i1 %229, label %232, label %234

232:                                              ; preds = %225
  %233 = add i32 %231, -1
  store i32 %233, i32* %230, align 4
  br label %234

234:                                              ; preds = %232, %225
  %235 = phi i32 [ %233, %232 ], [ %231, %225 ]
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %234
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %223) #12
  br label %238

238:                                              ; preds = %211, %234, %237
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213) #12
  %239 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  %240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %239, align 8
  %241 = icmp eq %"class.WTF::StringImpl"* %240, null
  br i1 %241, label %255, label %242

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 0
  %248 = load i32, i32* %247, align 4
  br i1 %246, label %249, label %251

249:                                              ; preds = %242
  %250 = add i32 %248, -1
  store i32 %250, i32* %247, align 4
  br label %251

251:                                              ; preds = %249, %242
  %252 = phi i32 [ %250, %249 ], [ %248, %242 ]
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %251
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %240) #12
  br label %255

255:                                              ; preds = %238, %251, %254
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %212) #12
  %256 = bitcast %"class.WTF::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %256) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN5blink12_GLOBAL__N_121kKeyboardInsetDefaultE, i64 0, i64 0), i64 3) #12
  %257 = bitcast %"class.WTF::AtomicString"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %257) #12
  %258 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)**, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*** %34, align 8
  %259 = getelementptr inbounds %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %258, i64 3
  %260 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %259, align 8
  %261 = call %"class.blink::FeatureContext"* %260(%"class.blink::StyleEnvironmentVariables"* %0) #12
  %262 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %262)
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), i64 19) #12
  %263 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  %264 = load i64, i64* %263, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %262)
  %265 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %266 = bitcast %"class.WTF::AtomicString"* %16 to i64*
  store i64 %264, i64* %266, align 8
  call void @_ZN5blink25StyleEnvironmentVariables11SetVariableERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::StyleEnvironmentVariables"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %16, %"class.WTF::String"* nonnull dereferenceable(8) %27) #12
  %267 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %265, align 8
  %268 = icmp eq %"class.WTF::StringImpl"* %267, null
  br i1 %268, label %282, label %269

269:                                              ; preds = %255
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = load atomic i32, i32* %270 monotonic, align 4
  %272 = and i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 0
  %275 = load i32, i32* %274, align 4
  br i1 %273, label %276, label %278

276:                                              ; preds = %269
  %277 = add i32 %275, -1
  store i32 %277, i32* %274, align 4
  br label %278

278:                                              ; preds = %276, %269
  %279 = phi i32 [ %277, %276 ], [ %275, %269 ]
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %278
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %267) #12
  br label %282

282:                                              ; preds = %255, %278, %281
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %257) #12
  %283 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %284 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %283, align 8
  %285 = icmp eq %"class.WTF::StringImpl"* %284, null
  br i1 %285, label %299, label %286

286:                                              ; preds = %282
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = load atomic i32, i32* %287 monotonic, align 4
  %289 = and i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 0
  %292 = load i32, i32* %291, align 4
  br i1 %290, label %293, label %295

293:                                              ; preds = %286
  %294 = add i32 %292, -1
  store i32 %294, i32* %291, align 4
  br label %295

295:                                              ; preds = %293, %286
  %296 = phi i32 [ %294, %293 ], [ %292, %286 ]
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %299

298:                                              ; preds = %295
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %284) #12
  br label %299

299:                                              ; preds = %282, %295, %298
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %256) #12
  %300 = bitcast %"class.WTF::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %300) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %28, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN5blink12_GLOBAL__N_121kKeyboardInsetDefaultE, i64 0, i64 0), i64 3) #12
  %301 = bitcast %"class.WTF::AtomicString"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %301) #12
  %302 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)**, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*** %34, align 8
  %303 = getelementptr inbounds %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %302, i64 3
  %304 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %303, align 8
  %305 = call %"class.blink::FeatureContext"* %304(%"class.blink::StyleEnvironmentVariables"* %0) #12
  %306 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %306)
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i64 21) #12
  %307 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  %308 = load i64, i64* %307, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %306)
  %309 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %310 = bitcast %"class.WTF::AtomicString"* %15 to i64*
  store i64 %308, i64* %310, align 8
  call void @_ZN5blink25StyleEnvironmentVariables11SetVariableERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::StyleEnvironmentVariables"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %15, %"class.WTF::String"* nonnull dereferenceable(8) %28) #12
  %311 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %309, align 8
  %312 = icmp eq %"class.WTF::StringImpl"* %311, null
  br i1 %312, label %326, label %313

313:                                              ; preds = %299
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %315 = load atomic i32, i32* %314 monotonic, align 4
  %316 = and i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 0, i32 0
  %319 = load i32, i32* %318, align 4
  br i1 %317, label %320, label %322

320:                                              ; preds = %313
  %321 = add i32 %319, -1
  store i32 %321, i32* %318, align 4
  br label %322

322:                                              ; preds = %320, %313
  %323 = phi i32 [ %321, %320 ], [ %319, %313 ]
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %326

325:                                              ; preds = %322
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %311) #12
  br label %326

326:                                              ; preds = %299, %322, %325
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %301) #12
  %327 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %328 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %327, align 8
  %329 = icmp eq %"class.WTF::StringImpl"* %328, null
  br i1 %329, label %343, label %330

330:                                              ; preds = %326
  %331 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %328, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = load atomic i32, i32* %331 monotonic, align 4
  %333 = and i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %328, i64 0, i32 0
  %336 = load i32, i32* %335, align 4
  br i1 %334, label %337, label %339

337:                                              ; preds = %330
  %338 = add i32 %336, -1
  store i32 %338, i32* %335, align 4
  br label %339

339:                                              ; preds = %337, %330
  %340 = phi i32 [ %338, %337 ], [ %336, %330 ]
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %342, label %343

342:                                              ; preds = %339
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %328) #12
  br label %343

343:                                              ; preds = %326, %339, %342
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %300) #12
  %344 = bitcast %"class.WTF::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %344) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %29, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN5blink12_GLOBAL__N_121kKeyboardInsetDefaultE, i64 0, i64 0), i64 3) #12
  %345 = bitcast %"class.WTF::AtomicString"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %345) #12
  %346 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)**, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*** %34, align 8
  %347 = getelementptr inbounds %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %346, i64 3
  %348 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %347, align 8
  %349 = call %"class.blink::FeatureContext"* %348(%"class.blink::StyleEnvironmentVariables"* %0) #12
  %350 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %350)
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i64 20) #12
  %351 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  %352 = load i64, i64* %351, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %350)
  %353 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %354 = bitcast %"class.WTF::AtomicString"* %14 to i64*
  store i64 %352, i64* %354, align 8
  call void @_ZN5blink25StyleEnvironmentVariables11SetVariableERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::StyleEnvironmentVariables"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %14, %"class.WTF::String"* nonnull dereferenceable(8) %29) #12
  %355 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %353, align 8
  %356 = icmp eq %"class.WTF::StringImpl"* %355, null
  br i1 %356, label %370, label %357

357:                                              ; preds = %343
  %358 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %359 = load atomic i32, i32* %358 monotonic, align 4
  %360 = and i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 0
  %363 = load i32, i32* %362, align 4
  br i1 %361, label %364, label %366

364:                                              ; preds = %357
  %365 = add i32 %363, -1
  store i32 %365, i32* %362, align 4
  br label %366

366:                                              ; preds = %364, %357
  %367 = phi i32 [ %365, %364 ], [ %363, %357 ]
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %369, label %370

369:                                              ; preds = %366
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %355) #12
  br label %370

370:                                              ; preds = %343, %366, %369
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %345) #12
  %371 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %372 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %371, align 8
  %373 = icmp eq %"class.WTF::StringImpl"* %372, null
  br i1 %373, label %387, label %374

374:                                              ; preds = %370
  %375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %372, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %376 = load atomic i32, i32* %375 monotonic, align 4
  %377 = and i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %372, i64 0, i32 0
  %380 = load i32, i32* %379, align 4
  br i1 %378, label %381, label %383

381:                                              ; preds = %374
  %382 = add i32 %380, -1
  store i32 %382, i32* %379, align 4
  br label %383

383:                                              ; preds = %381, %374
  %384 = phi i32 [ %382, %381 ], [ %380, %374 ]
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %386, label %387

386:                                              ; preds = %383
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %372) #12
  br label %387

387:                                              ; preds = %370, %383, %386
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %344) #12
  %388 = bitcast %"class.WTF::String"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %388) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %30, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN5blink12_GLOBAL__N_121kKeyboardInsetDefaultE, i64 0, i64 0), i64 3) #12
  %389 = bitcast %"class.WTF::AtomicString"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %389) #12
  %390 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)**, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*** %34, align 8
  %391 = getelementptr inbounds %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %390, i64 3
  %392 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %391, align 8
  %393 = call %"class.blink::FeatureContext"* %392(%"class.blink::StyleEnvironmentVariables"* %0) #12
  %394 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %394)
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i64 20) #12
  %395 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  %396 = load i64, i64* %395, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %394)
  %397 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %398 = bitcast %"class.WTF::AtomicString"* %13 to i64*
  store i64 %396, i64* %398, align 8
  call void @_ZN5blink25StyleEnvironmentVariables11SetVariableERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::StyleEnvironmentVariables"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %13, %"class.WTF::String"* nonnull dereferenceable(8) %30) #12
  %399 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %397, align 8
  %400 = icmp eq %"class.WTF::StringImpl"* %399, null
  br i1 %400, label %414, label %401

401:                                              ; preds = %387
  %402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %403 = load atomic i32, i32* %402 monotonic, align 4
  %404 = and i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 0, i32 0
  %407 = load i32, i32* %406, align 4
  br i1 %405, label %408, label %410

408:                                              ; preds = %401
  %409 = add i32 %407, -1
  store i32 %409, i32* %406, align 4
  br label %410

410:                                              ; preds = %408, %401
  %411 = phi i32 [ %409, %408 ], [ %407, %401 ]
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %414

413:                                              ; preds = %410
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %399) #12
  br label %414

414:                                              ; preds = %387, %410, %413
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %389) #12
  %415 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 0, i32 0, i32 0
  %416 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %415, align 8
  %417 = icmp eq %"class.WTF::StringImpl"* %416, null
  br i1 %417, label %431, label %418

418:                                              ; preds = %414
  %419 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %416, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %420 = load atomic i32, i32* %419 monotonic, align 4
  %421 = and i32 %420, 2
  %422 = icmp eq i32 %421, 0
  %423 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %416, i64 0, i32 0
  %424 = load i32, i32* %423, align 4
  br i1 %422, label %425, label %427

425:                                              ; preds = %418
  %426 = add i32 %424, -1
  store i32 %426, i32* %423, align 4
  br label %427

427:                                              ; preds = %425, %418
  %428 = phi i32 [ %426, %425 ], [ %424, %418 ]
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %430, label %431

430:                                              ; preds = %427
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %416) #12
  br label %431

431:                                              ; preds = %414, %427, %430
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %388) #12
  %432 = bitcast %"class.WTF::String"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %432) #12
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %31, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN5blink12_GLOBAL__N_121kKeyboardInsetDefaultE, i64 0, i64 0), i64 3) #12
  %433 = bitcast %"class.WTF::AtomicString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %433) #12
  %434 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)**, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*** %34, align 8
  %435 = getelementptr inbounds %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %434, i64 3
  %436 = load %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)*, %"class.blink::FeatureContext"* (%"class.blink::StyleEnvironmentVariables"*)** %435, align 8
  %437 = call %"class.blink::FeatureContext"* %436(%"class.blink::StyleEnvironmentVariables"* %0) #12
  %438 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %438)
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i64 21) #12
  %439 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %440 = load i64, i64* %439, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %438)
  %441 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  %442 = bitcast %"class.WTF::AtomicString"* %12 to i64*
  store i64 %440, i64* %442, align 8
  call void @_ZN5blink25StyleEnvironmentVariables11SetVariableERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::StyleEnvironmentVariables"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %12, %"class.WTF::String"* nonnull dereferenceable(8) %31) #12
  %443 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %441, align 8
  %444 = icmp eq %"class.WTF::StringImpl"* %443, null
  br i1 %444, label %458, label %445

445:                                              ; preds = %431
  %446 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %443, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %447 = load atomic i32, i32* %446 monotonic, align 4
  %448 = and i32 %447, 2
  %449 = icmp eq i32 %448, 0
  %450 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %443, i64 0, i32 0
  %451 = load i32, i32* %450, align 4
  br i1 %449, label %452, label %454

452:                                              ; preds = %445
  %453 = add i32 %451, -1
  store i32 %453, i32* %450, align 4
  br label %454

454:                                              ; preds = %452, %445
  %455 = phi i32 [ %453, %452 ], [ %451, %445 ]
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %457, label %458

457:                                              ; preds = %454
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %443) #12
  br label %458

458:                                              ; preds = %431, %454, %457
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %433) #12
  %459 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  %460 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %459, align 8
  %461 = icmp eq %"class.WTF::StringImpl"* %460, null
  br i1 %461, label %475, label %462

462:                                              ; preds = %458
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %460, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %464 = load atomic i32, i32* %463 monotonic, align 4
  %465 = and i32 %464, 2
  %466 = icmp eq i32 %465, 0
  %467 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %460, i64 0, i32 0
  %468 = load i32, i32* %467, align 4
  br i1 %466, label %469, label %471

469:                                              ; preds = %462
  %470 = add i32 %468, -1
  store i32 %470, i32* %467, align 4
  br label %471

471:                                              ; preds = %469, %462
  %472 = phi i32 [ %470, %469 ], [ %468, %462 ]
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %474, label %475

474:                                              ; preds = %471
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %460) #12
  br label %475

475:                                              ; preds = %458, %471, %474
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %432) #12
  br label %476

476:                                              ; preds = %208, %475
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25StyleEnvironmentVariables25ParentInvalidatedVariableERKN3WTF12AtomicStringE(%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 3, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %59, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = and i32 %15, %9
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %17
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %59, label %22

22:                                               ; preds = %8
  %23 = xor i32 %15, -1
  %24 = lshr i32 %14, 31
  %25 = add nsw i32 %24, %23
  %26 = shl i32 %25, 12
  %27 = xor i32 %26, %25
  %28 = lshr i32 %27, 7
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 2
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 20
  %33 = xor i32 %32, %31
  %34 = or i32 %33, 1
  %35 = zext i32 %34 to i64
  br label %36

36:                                               ; preds = %46, %22
  %37 = phi %"struct.WTF::KeyValuePair"* [ %18, %22 ], [ %51, %46 ]
  %38 = phi i64 [ %17, %22 ], [ %50, %46 ]
  %39 = phi i64 [ 0, %22 ], [ %48, %46 ]
  %40 = bitcast %"struct.WTF::KeyValuePair"* %37 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = icmp ne i8* %41, inttoptr (i64 -1 to i8*)
  %43 = bitcast i8* %41 to %"class.WTF::StringImpl"*
  %44 = icmp eq %"class.WTF::StringImpl"* %12, %43
  %45 = and i1 %42, %44
  br i1 %45, label %55, label %46

46:                                               ; preds = %36
  %47 = icmp eq i64 %39, 0
  %48 = select i1 %47, i64 %35, i64 %39
  %49 = add i64 %48, %38
  %50 = and i64 %49, %10
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %50
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %59, label %36

55:                                               ; preds = %36
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %37, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = zext i32 %7 to i64
  br label %62

59:                                               ; preds = %46, %55, %8, %2
  %60 = zext i32 %7 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %60
  br label %62

62:                                               ; preds = %57, %59
  %63 = phi i64 [ %58, %57 ], [ %60, %59 ]
  %64 = phi %"struct.WTF::KeyValuePair"* [ %37, %57 ], [ %61, %59 ]
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %63
  %66 = icmp eq %"struct.WTF::KeyValuePair"* %64, %65
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = bitcast %"class.blink::StyleEnvironmentVariables"* %0 to void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)***
  %69 = load void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)**, void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)** %69, i64 4
  %71 = load void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)** %70, align 8
  tail call void %71(%"class.blink::StyleEnvironmentVariables"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1) #12
  br label %72

72:                                               ; preds = %67, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25StyleEnvironmentVariables18InvalidateVariableERKN3WTF12AtomicStringE(%"class.blink::StyleEnvironmentVariables"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr*, %class.scoped_refptr** %3, align 8
  %5 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  br label %13

12:                                               ; preds = %85, %2
  ret void

13:                                               ; preds = %10, %85
  %14 = phi %class.scoped_refptr* [ %4, %10 ], [ %86, %85 ]
  %15 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %14, i64 0, i32 0
  %16 = load %"class.blink::StyleEnvironmentVariables"*, %"class.blink::StyleEnvironmentVariables"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %16, i64 0, i32 3, i32 0, i32 0
  %18 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %17, align 8
  %19 = icmp eq %"struct.WTF::KeyValuePair"* %18, null
  %20 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %16, i64 0, i32 3, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  br i1 %19, label %72, label %22

22:                                               ; preds = %13
  %23 = add i32 %21, -1
  %24 = zext i32 %23 to i64
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = lshr i32 %27, 8
  %29 = and i32 %28, %23
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 %30
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %72, label %35

35:                                               ; preds = %22
  %36 = xor i32 %28, -1
  %37 = lshr i32 %27, 31
  %38 = add nsw i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %59, %35
  %50 = phi %"struct.WTF::KeyValuePair"* [ %31, %35 ], [ %64, %59 ]
  %51 = phi i64 [ %30, %35 ], [ %63, %59 ]
  %52 = phi i64 [ 0, %35 ], [ %61, %59 ]
  %53 = bitcast %"struct.WTF::KeyValuePair"* %50 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = icmp ne i8* %54, inttoptr (i64 -1 to i8*)
  %56 = bitcast i8* %54 to %"class.WTF::StringImpl"*
  %57 = icmp eq %"class.WTF::StringImpl"* %25, %56
  %58 = and i1 %55, %57
  br i1 %58, label %68, label %59

59:                                               ; preds = %49
  %60 = icmp eq i64 %52, 0
  %61 = select i1 %60, i64 %48, i64 %52
  %62 = add i64 %61, %51
  %63 = and i64 %62, %24
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %72, label %49

68:                                               ; preds = %49
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %50, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = zext i32 %21 to i64
  br label %75

72:                                               ; preds = %59, %68, %22, %13
  %73 = zext i32 %21 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 %73
  br label %75

75:                                               ; preds = %72, %70
  %76 = phi i64 [ %71, %70 ], [ %73, %72 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %50, %70 ], [ %74, %72 ]
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 %76
  %79 = icmp eq %"struct.WTF::KeyValuePair"* %77, %78
  br i1 %79, label %80, label %85

80:                                               ; preds = %75
  %81 = bitcast %"class.blink::StyleEnvironmentVariables"* %16 to void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)***
  %82 = load void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)**, void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)** %82, i64 4
  %84 = load void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)*, void (%"class.blink::StyleEnvironmentVariables"*, %"class.WTF::AtomicString"*)** %83, align 8
  tail call void %84(%"class.blink::StyleEnvironmentVariables"* %16, %"class.WTF::AtomicString"* dereferenceable(8) %1) #12
  br label %85

85:                                               ; preds = %75, %80
  %86 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %14, i64 1
  %87 = icmp eq %class.scoped_refptr* %86, %8
  br i1 %87, label %12, label %13
}

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.0"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor.0"* %0 to %"struct.WTF::KeyValuePair"**
  %3 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair"* %3, null
  br i1 %4, label %51, label %5, !prof !4

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::ConditionalDestructor.0", %"class.WTF::ConditionalDestructor.0"* %0, i64 8
  %7 = bitcast %"class.WTF::ConditionalDestructor.0"* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %49, label %10

10:                                               ; preds = %5
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %46, %10
  %13 = phi i64 [ 0, %10 ], [ %47, %46 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %13
  %15 = bitcast %"struct.WTF::KeyValuePair"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, inttoptr (i64 -1 to i8*)
  br i1 %17, label %46, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %13, i32 1, i32 0
  %20 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %19, align 8
  %21 = icmp eq %"class.blink::CSSVariableData"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %23) #12
  %24 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %20) #12
  %28 = bitcast %"class.blink::CSSVariableData"* %20 to i8*
  tail call void @free(i8* %28) #12
  br label %29

29:                                               ; preds = %27, %22, %18
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #12
  br label %46

46:                                               ; preds = %45, %42, %29, %12
  %47 = add nuw nsw i64 %13, 1
  %48 = icmp eq i64 %47, %11
  br i1 %48, label %49, label %12

49:                                               ; preds = %46, %5
  %50 = bitcast %"struct.WTF::KeyValuePair"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %2, align 8
  br label %51

51:                                               ; preds = %1, %49
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink14CSSParserTokenELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.23"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"class.blink::CSSParserToken"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink18CSSParserTokenTypeELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.18"*, i32*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #12
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !4

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #12
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !4

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !3

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #12
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.7"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #11

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #11

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_S6_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::AtomicString"* dereferenceable(8), %class.scoped_refptr.4* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %85, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %53, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %62
  %65 = bitcast %"struct.WTF::KeyValuePair"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 16, i1 false) #12
  %66 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  br label %72

72:                                               ; preds = %10, %62, %64
  %73 = phi %"struct.WTF::KeyValuePair"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_I13scoped_refptrIN5blink15CSSVariableDataEEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S8_EERKS3_S8_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16) %73, %"class.WTF::AtomicString"* dereferenceable(8) %1, %class.scoped_refptr.4* dereferenceable(8) %2)
  %74 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = add i32 %75, 1
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, %76
  %80 = shl i32 %79, 1
  %81 = load i32, i32* %12, align 8
  %82 = icmp ult i32 %80, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %72
  %84 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %73)
  br label %85

85:                                               ; preds = %49, %72, %83
  %86 = phi i8 [ 1, %72 ], [ 1, %83 ], [ 0, %49 ]
  %87 = phi %"struct.WTF::KeyValuePair"* [ %73, %72 ], [ %84, %83 ], [ %42, %49 ]
  %88 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %87, 0
  %89 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %88, i8 %86, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.24, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringE13scoped_refptrIN5blink15CSSVariableDataEEEEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #12
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #12
  ret %"struct.WTF::KeyValuePair"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEENS2_I13scoped_refptrIN5blink15CSSVariableDataEEEEEENS_16AtomicStringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S8_EERKS3_S8_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16), %"class.WTF::AtomicString"* dereferenceable(8), %class.scoped_refptr.4* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #12
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %class.scoped_refptr.4, %class.scoped_refptr.4* %2, i64 0, i32 0
  %45 = bitcast %class.scoped_refptr.4* %2 to i64*
  %46 = load i64, i64* %45, align 8
  store %"class.blink::CSSVariableData"* null, %"class.blink::CSSVariableData"** %44, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %48 = bitcast %class.scoped_refptr.4* %47 to i64*
  %49 = getelementptr inbounds %class.scoped_refptr.4, %class.scoped_refptr.4* %47, i64 0, i32 0
  %50 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %49, align 8
  store i64 %46, i64* %48, align 8
  %51 = icmp eq %"class.blink::CSSVariableData"* %50, null
  br i1 %51, label %59, label %52

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %50, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %53) #12
  %54 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %52
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %50) #12
  %58 = bitcast %"class.blink::CSSVariableData"* %50 to i8*
  tail call void @free(i8* %58) #12
  br label %59

59:                                               ; preds = %43, %52, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %39

24:                                               ; preds = %57
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %58, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %61, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %59, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE5clearEv(%"class.WTF::HashTable"* nonnull %5)
  %35 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, -2147483648
  store i32 %37, i32* %35, align 8
  %38 = bitcast %"class.WTF::HashTable"* %5 to %"class.WTF::ConditionalDestructor.0"*
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS2_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS7_EEEESD_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.0"* nonnull %38) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"struct.WTF::KeyValuePair"* %33

39:                                               ; preds = %21, %57
  %40 = phi i64 [ %58, %57 ], [ %23, %21 ]
  %41 = phi i32 [ %59, %57 ], [ %13, %21 ]
  %42 = phi %"struct.WTF::KeyValuePair"* [ %60, %57 ], [ %22, %21 ]
  %43 = phi %"struct.WTF::KeyValuePair"* [ %61, %57 ], [ null, %21 ]
  %44 = phi i32 [ %62, %57 ], [ 0, %21 ]
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 %45
  %47 = bitcast %"struct.WTF::KeyValuePair"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  switch i64 %48, label %49 [
    i64 -1, label %57
    i64 0, label %57
  ]

49:                                               ; preds = %39
  %50 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8ReinsertEOS7_(%"class.WTF::HashTable"* nonnull %5, %"struct.WTF::KeyValuePair"* dereferenceable(16) %46)
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %45
  %53 = icmp eq %"struct.WTF::KeyValuePair"* %52, %3
  %54 = select i1 %53, %"struct.WTF::KeyValuePair"* %50, %"struct.WTF::KeyValuePair"* %43
  %55 = load i32, i32* %12, align 8
  %56 = ptrtoint %"struct.WTF::KeyValuePair"* %51 to i64
  br label %57

57:                                               ; preds = %39, %39, %49
  %58 = phi i64 [ %40, %39 ], [ %56, %49 ], [ %40, %39 ]
  %59 = phi i32 [ %41, %39 ], [ %55, %49 ], [ %41, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %42, %39 ], [ %51, %49 ], [ %42, %39 ]
  %61 = phi %"struct.WTF::KeyValuePair"* [ %43, %39 ], [ %54, %49 ], [ %43, %39 ]
  %62 = add i32 %44, 1
  %63 = icmp eq i32 %62, %59
  br i1 %63, label %24, label %39
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8ReinsertEOS7_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = and i32 %13, %7
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %15
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %2
  %22 = xor i32 %13, -1
  %23 = lshr i32 %12, 31
  %24 = add nsw i32 %23, %22
  %25 = shl i32 %24, 12
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 7
  %28 = xor i32 %27, %26
  %29 = shl i32 %28, 2
  %30 = xor i32 %29, %28
  %31 = lshr i32 %30, 20
  %32 = xor i32 %31, %30
  %33 = or i32 %32, 1
  %34 = zext i32 %33 to i64
  br label %43

35:                                               ; preds = %55
  %36 = ptrtoint %"struct.WTF::KeyValuePair"* %61 to i64
  br label %37

37:                                               ; preds = %35, %2
  %38 = phi i64 [ %17, %2 ], [ %36, %35 ]
  %39 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %56, %35 ]
  %40 = icmp eq %"struct.WTF::KeyValuePair"* %39, null
  %41 = ptrtoint %"struct.WTF::KeyValuePair"* %39 to i64
  %42 = select i1 %40, i64 %38, i64 %41
  br label %66

43:                                               ; preds = %55, %21
  %44 = phi %"struct.WTF::KeyValuePair"* [ null, %21 ], [ %56, %55 ]
  %45 = phi i64 [ %17, %21 ], [ %62, %55 ]
  %46 = phi %"struct.WTF::KeyValuePair"* [ %16, %21 ], [ %61, %55 ]
  %47 = phi i64 [ %15, %21 ], [ %60, %55 ]
  %48 = phi i64 [ 0, %21 ], [ %58, %55 ]
  %49 = bitcast %"struct.WTF::KeyValuePair"* %46 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, inttoptr (i64 -1 to i8*)
  br i1 %51, label %55, label %52

52:                                               ; preds = %43
  %53 = bitcast i8* %50 to %"class.WTF::StringImpl"*
  %54 = icmp eq %"class.WTF::StringImpl"* %10, %53
  br i1 %54, label %66, label %55

55:                                               ; preds = %52, %43
  %56 = phi %"struct.WTF::KeyValuePair"* [ %44, %52 ], [ %46, %43 ]
  %57 = icmp eq i64 %48, 0
  %58 = select i1 %57, i64 %34, i64 %48
  %59 = add i64 %58, %47
  %60 = and i64 %59, %8
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %60
  %62 = ptrtoint %"struct.WTF::KeyValuePair"* %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %35, label %43

66:                                               ; preds = %52, %37
  %67 = phi i64 [ %42, %37 ], [ %45, %52 ]
  %68 = inttoptr i64 %67 to %"struct.WTF::KeyValuePair"*
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 1, i32 0
  %70 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %69, align 8
  %71 = icmp eq %"class.blink::CSSVariableData"* %70, null
  br i1 %71, label %79, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %70, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %73) #12
  %74 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %70, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %72
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %70) #12
  %78 = bitcast %"class.blink::CSSVariableData"* %70 to i8*
  tail call void @free(i8* %78) #12
  br label %79

79:                                               ; preds = %77, %72, %66
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #12
  br label %96

96:                                               ; preds = %79, %92, %95
  %97 = bitcast %"struct.WTF::KeyValuePair"* %1 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = inttoptr i64 %67 to i64*
  store i64 %98, i64* %99, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 1
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %102 = getelementptr inbounds %class.scoped_refptr.4, %class.scoped_refptr.4* %101, i64 0, i32 0
  %103 = bitcast %class.scoped_refptr.4* %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %class.scoped_refptr.4* %100 to i64*
  store i64 %104, i64* %105, align 8
  store %"class.blink::CSSVariableData"* null, %"class.blink::CSSVariableData"** %102, align 8
  ret %"struct.WTF::KeyValuePair"* %68
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE5clearEv(%"class.WTF::HashTable"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair"* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %48, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %45, %9
  %12 = phi i64 [ 0, %9 ], [ %46, %45 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12
  %14 = bitcast %"struct.WTF::KeyValuePair"* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, inttoptr (i64 -1 to i8*)
  br i1 %16, label %45, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12, i32 1, i32 0
  %19 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %18, align 8
  %20 = icmp eq %"class.blink::CSSVariableData"* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #12
  %23 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %19) #12
  %27 = bitcast %"class.blink::CSSVariableData"* %19 to i8*
  tail call void @free(i8* %27) #12
  br label %28

28:                                               ; preds = %26, %21, %17
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #12
  br label %45

45:                                               ; preds = %44, %41, %28, %11
  %46 = add nuw nsw i64 %12, 1
  %47 = icmp eq i64 %46, %10
  br i1 %47, label %48, label %11

48:                                               ; preds = %45, %5
  %49 = bitcast %"struct.WTF::KeyValuePair"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %49) #12
  %50 = bitcast %"class.WTF::HashTable"* %0 to i64*
  store atomic i64 0, i64* %50 monotonic, align 8
  store i32 0, i32* %6, align 8
  %51 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  store i32 0, i32* %51, align 4
  br label %52

52:                                               ; preds = %1, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink14CSSParserTokenELj0ENS_18PartitionAllocatorEE6AppendIS2_EEvPKT_j(%"class.WTF::Vector.12"*, %"class.blink::CSSParserToken"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %101

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %16 = icmp ugt %"class.blink::CSSParserToken"* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %15, i64 %18
  %20 = icmp ugt %"class.blink::CSSParserToken"* %19, %1
  br i1 %20, label %58, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %101, !prof !4

30:                                               ; preds = %21
  %31 = icmp eq %"class.blink::CSSParserToken"* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64 %32) #12
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #12
  br i1 %31, label %35, label %40

35:                                               ; preds = %30
  %36 = ptrtoint i8* %34 to i64
  %37 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = udiv i64 %33, 24
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %10, align 8
  br label %101

40:                                               ; preds = %30
  %41 = udiv i64 %33, 24
  %42 = ptrtoint i8* %34 to i64
  %43 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %44 = icmp ne i8* %34, null
  %45 = icmp ne %"class.blink::CSSParserToken"* %43, null
  %46 = and i1 %44, %45
  %47 = bitcast %"class.blink::CSSParserToken"* %43 to i8*
  br i1 %46, label %48, label %54, !prof !4

48:                                               ; preds = %40
  %49 = load i32, i32* %7, align 4
  %50 = zext i32 %49 to i64
  %51 = mul nuw nsw i64 %50, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %47, i64 %51, i1 false) #12
  %52 = bitcast %"class.WTF::Vector.12"* %0 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %48, %40
  %55 = phi i8* [ %53, %48 ], [ %47, %40 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #12
  %56 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %42, i64* %56 monotonic, align 8
  %57 = trunc i64 %41 to i32
  store i32 %57, i32* %10, align 8
  br label %101

58:                                               ; preds = %17
  %59 = ptrtoint %"class.blink::CSSParserToken"* %1 to i64
  %60 = ptrtoint %"class.blink::CSSParserToken"* %15 to i64
  %61 = sub i64 %59, %60
  %62 = sdiv exact i64 %61, 24
  %63 = lshr i32 %11, 2
  %64 = add nuw i32 %11, 1
  %65 = add i32 %64, %63
  %66 = icmp ugt i32 %65, 4
  %67 = select i1 %66, i32 %65, i32 4
  %68 = icmp ugt i32 %67, %9
  %69 = select i1 %68, i32 %67, i32 %9
  %70 = icmp ult i32 %11, %69
  br i1 %70, label %71, label %98, !prof !4

71:                                               ; preds = %58
  %72 = icmp eq %"class.blink::CSSParserToken"* %15, null
  %73 = zext i32 %69 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64 %73) #12
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14CSSParserTokenEEEPKcv, i64 0, i64 0)) #12
  %76 = ptrtoint i8* %75 to i64
  br i1 %72, label %77, label %79

77:                                               ; preds = %71
  %78 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %76, i64* %78 monotonic, align 8
  br label %94

79:                                               ; preds = %71
  %80 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %14, align 8
  %81 = icmp ne i8* %75, null
  %82 = icmp ne %"class.blink::CSSParserToken"* %80, null
  %83 = and i1 %81, %82
  %84 = bitcast %"class.blink::CSSParserToken"* %80 to i8*
  br i1 %83, label %85, label %91, !prof !4

85:                                               ; preds = %79
  %86 = load i32, i32* %7, align 4
  %87 = zext i32 %86 to i64
  %88 = mul nuw nsw i64 %87, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %75, i8* nonnull align 8 %84, i64 %88, i1 false) #12
  %89 = bitcast %"class.WTF::Vector.12"* %0 to i8**
  %90 = load i8*, i8** %89, align 8
  br label %91

91:                                               ; preds = %85, %79
  %92 = phi i8* [ %90, %85 ], [ %84, %79 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %92) #12
  %93 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %76, i64* %93 monotonic, align 8
  br label %94

94:                                               ; preds = %91, %77
  %95 = udiv i64 %74, 24
  %96 = trunc i64 %95 to i32
  store i32 %96, i32* %10, align 8
  %97 = bitcast i8* %75 to %"class.blink::CSSParserToken"*
  br label %98

98:                                               ; preds = %94, %58
  %99 = phi %"class.blink::CSSParserToken"* [ %15, %58 ], [ %97, %94 ]
  %100 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %99, i64 %62
  br label %101

101:                                              ; preds = %98, %21, %35, %54, %3
  %102 = phi %"class.blink::CSSParserToken"* [ %1, %3 ], [ %100, %98 ], [ %1, %21 ], [ %1, %35 ], [ %1, %54 ]
  %103 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #12
  %104 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %104, align 8
  %105 = load i32, i32* %7, align 4
  %106 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106)
  %107 = icmp ult i32 %9, %105
  br i1 %107, label %109, label %108

108:                                              ; preds = %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  store i8* null, i8** %104, align 8
  br label %118

109:                                              ; preds = %101
  %110 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  %111 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %105) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* %110, i8* %111) #12
  %112 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  store i8* %113, i8** %104, align 8
  %114 = icmp eq i8* %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %109
  %116 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.22, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #12
  %117 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #12
  br label %118

118:                                              ; preds = %108, %109, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #12
  %119 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %119, align 8
  %121 = load i32, i32* %7, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %120, i64 %122
  %124 = icmp ne %"class.blink::CSSParserToken"* %123, null
  %125 = icmp ne %"class.blink::CSSParserToken"* %102, null
  %126 = and i1 %125, %124
  br i1 %126, label %127, label %132, !prof !4

127:                                              ; preds = %118
  %128 = zext i32 %2 to i64
  %129 = bitcast %"class.blink::CSSParserToken"* %123 to i8*
  %130 = bitcast %"class.blink::CSSParserToken"* %102 to i8*
  %131 = mul nuw nsw i64 %128, 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %129, i8* nonnull align 8 %130, i64 %131, i1 false) #12
  br label %132

132:                                              ; preds = %118, %127
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14CSSParserTokenEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.27, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.28, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.7"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.7"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.7"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.7"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.7", %"class.WTF::Vector.7"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.7"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector.7"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector.7"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #12
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !3

122:                                              ; preds = %113
  tail call void @llvm.trap() #12
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.27, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.28, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0
  %4 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %3, align 8
  %5 = icmp eq %"class.blink::CSSVariableData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #12
  %8 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %4) #12
  %12 = bitcast %"class.blink::CSSVariableData"* %4 to i8*
  tail call void @free(i8* %12) #12
  br label %13

13:                                               ; preds = %11, %6, %2
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #12
  br label %30

30:                                               ; preds = %13, %26, %29
  %31 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  %35 = and i32 %34, 2147483647
  %36 = and i32 %33, -2147483648
  %37 = or i32 %35, %36
  store i32 %37, i32* %32, align 8
  %38 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, -1
  store i32 %40, i32* %38, align 4
  %41 = mul i32 %40, 6
  %42 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = icmp ult i32 %41, %43
  %45 = icmp ugt i32 %43, 8
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %54

47:                                               ; preds = %30
  %48 = lshr i32 %43, 1
  %49 = zext i32 %48 to i64
  %50 = shl nuw nsw i64 %49, 4
  %51 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %50, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringE13scoped_refptrIN5blink15CSSVariableDataEEEEEEPKcv, i64 0, i64 0)) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %51, i8 0, i64 %50, i1 false) #12
  %52 = bitcast i8* %51 to %"struct.WTF::KeyValuePair"*
  %53 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_13scoped_refptrIN5blink15CSSVariableDataEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %52, i32 %48, %"struct.WTF::KeyValuePair"* null) #12
  br label %54

54:                                               ; preds = %47, %30
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink25StyleEnvironmentVariablesEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::StyleEnvironmentVariables"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %class.scoped_refptr* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink25StyleEnvironmentVariablesEEEEmm(i64 %20) #12
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink25StyleEnvironmentVariablesEEEEPKcv, i64 0, i64 0)) #12
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %class.scoped_refptr* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %class.scoped_refptr* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #12
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #12
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %class.scoped_refptr*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %class.scoped_refptr* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = load %"class.blink::StyleEnvironmentVariables"*, %"class.blink::StyleEnvironmentVariables"** %1, align 8
  %50 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %46, i64 %48, i32 0
  store %"class.blink::StyleEnvironmentVariables"* %49, %"class.blink::StyleEnvironmentVariables"** %50, align 8
  %51 = icmp eq %"class.blink::StyleEnvironmentVariables"* %49, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::StyleEnvironmentVariables", %"class.blink::StyleEnvironmentVariables"* %49, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %53) #12
  br label %54

54:                                               ; preds = %45, %52
  %55 = load i32, i32* %3, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink25StyleEnvironmentVariablesEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.27, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.28, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{i8 0, i8 2}
