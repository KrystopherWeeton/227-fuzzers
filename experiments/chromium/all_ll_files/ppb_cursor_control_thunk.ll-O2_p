; ModuleID = '../../ppapi/thunk/ppb_cursor_control_thunk.cc'
source_filename = "../../ppapi/thunk/ppb_cursor_control_thunk.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.PPB_CursorControl_Dev_0_4 = type { i32 (i32, i32, i32, %struct.PP_Point*)*, i32 (i32)*, i32 (i32)*, i32 (i32)*, i32 (i32)* }
%struct.PP_Point = type { i32, i32 }
%"class.ppapi::thunk::EnterInstance" = type { %"class.ppapi::thunk::subtle::EnterBase.base", %"class.ppapi::thunk::PPB_Instance_API"* }
%"class.ppapi::thunk::subtle::EnterBase.base" = type <{ i32 (...)**, %"class.ppapi::Resource"*, %class.scoped_refptr, i32 }>
%"class.ppapi::Resource" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i32, %"class.ppapi::HostResource" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.ppapi::HostResource" = type { i32, i32 }
%class.scoped_refptr = type { %"class.ppapi::TrackedCallback"* }
%"class.ppapi::TrackedCallback" = type { %"class.base::RefCountedThreadSafe.1", %"class.base::Lock", i8, %class.scoped_refptr.2, i32, i8, i8, %struct.PP_CompletionCallback, %"class.base::OnceCallback", %class.scoped_refptr.5, i32, %"class.std::__1::unique_ptr" }
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.scoped_refptr.2 = type { %"class.ppapi::CallbackTracker"* }
%"class.ppapi::CallbackTracker" = type opaque
%struct.PP_CompletionCallback = type { void (i8*, i32)*, i8*, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.4", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.5 = type { %"class.ppapi::MessageLoopShared"* }
%"class.ppapi::MessageLoopShared" = type { %"class.ppapi::Resource", %"class.ppapi::thunk::PPB_MessageLoop_API" }
%"class.ppapi::thunk::PPB_MessageLoop_API" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::ConditionVariable"* }
%"class.base::ConditionVariable" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t*, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.6, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.6 = type { i64 }
%"class.ppapi::thunk::PPB_Instance_API" = type { i32 (...)** }

@_ZN5ppapi5thunk12_GLOBAL__N_126g_ppb_cursor_control_thunkE = internal constant %struct.PPB_CursorControl_Dev_0_4 { i32 (i32, i32, i32, %struct.PP_Point*)* @_ZN5ppapi5thunk12_GLOBAL__N_19SetCursorEi17PP_CursorType_DeviPK8PP_Point, i32 (i32)* @_ZN5ppapi5thunk12_GLOBAL__N_110LockCursorEi, i32 (i32)* @_ZN5ppapi5thunk12_GLOBAL__N_112UnlockCursorEi, i32 (i32)* @_ZN5ppapi5thunk12_GLOBAL__N_113HasCursorLockEi, i32 (i32)* @_ZN5ppapi5thunk12_GLOBAL__N_113CanLockCursorEi }, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.PPB_CursorControl_Dev_0_4* @_ZN5ppapi5thunk34GetPPB_CursorControl_Dev_0_4_ThunkEv() local_unnamed_addr #0 {
  ret %struct.PPB_CursorControl_Dev_0_4* @_ZN5ppapi5thunk12_GLOBAL__N_126g_ppb_cursor_control_thunkE
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5ppapi5thunk12_GLOBAL__N_19SetCursorEi17PP_CursorType_DeviPK8PP_Point(i32, i32, i32, %struct.PP_Point*) #1 {
  %5 = alloca %"class.ppapi::thunk::EnterInstance", align 8
  %6 = bitcast %"class.ppapi::thunk::EnterInstance"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 40, i1 false)
  call void @_ZN5ppapi5thunk13EnterInstanceC1Ei(%"class.ppapi::thunk::EnterInstance"* nonnull %5, i32 %0) #5
  %7 = getelementptr inbounds %"class.ppapi::thunk::EnterInstance", %"class.ppapi::thunk::EnterInstance"* %5, i64 0, i32 1
  %8 = load %"class.ppapi::thunk::PPB_Instance_API"*, %"class.ppapi::thunk::PPB_Instance_API"** %7, align 8
  %9 = icmp eq %"class.ppapi::thunk::PPB_Instance_API"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.ppapi::thunk::PPB_Instance_API"* %8 to i32 (%"class.ppapi::thunk::PPB_Instance_API"*, i32, i32, i32, %struct.PP_Point*)***
  %12 = load i32 (%"class.ppapi::thunk::PPB_Instance_API"*, i32, i32, i32, %struct.PP_Point*)**, i32 (%"class.ppapi::thunk::PPB_Instance_API"*, i32, i32, i32, %struct.PP_Point*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.ppapi::thunk::PPB_Instance_API"*, i32, i32, i32, %struct.PP_Point*)*, i32 (%"class.ppapi::thunk::PPB_Instance_API"*, i32, i32, i32, %struct.PP_Point*)** %12, i64 27
  %14 = load i32 (%"class.ppapi::thunk::PPB_Instance_API"*, i32, i32, i32, %struct.PP_Point*)*, i32 (%"class.ppapi::thunk::PPB_Instance_API"*, i32, i32, i32, %struct.PP_Point*)** %13, align 8
  %15 = call i32 %14(%"class.ppapi::thunk::PPB_Instance_API"* nonnull %8, i32 %0, i32 %1, i32 %2, %struct.PP_Point* %3) #5
  br label %16

16:                                               ; preds = %4, %10
  %17 = phi i32 [ %15, %10 ], [ 0, %4 ]
  call void @_ZN5ppapi5thunk13EnterInstanceD1Ev(%"class.ppapi::thunk::EnterInstance"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #5
  ret i32 %17
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZN5ppapi5thunk12_GLOBAL__N_110LockCursorEi(i32) #0 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZN5ppapi5thunk12_GLOBAL__N_112UnlockCursorEi(i32) #0 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZN5ppapi5thunk12_GLOBAL__N_113HasCursorLockEi(i32) #0 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZN5ppapi5thunk12_GLOBAL__N_113CanLockCursorEi(i32) #0 {
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5ppapi5thunk13EnterInstanceC1Ei(%"class.ppapi::thunk::EnterInstance"*, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5ppapi5thunk13EnterInstanceD1Ev(%"class.ppapi::thunk::EnterInstance"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
