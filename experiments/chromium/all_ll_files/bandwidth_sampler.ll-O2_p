; ModuleID = '../../net/third_party/quiche/src/quic/core/congestion_control/bandwidth_sampler.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/congestion_control/bandwidth_sampler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.quic::BandwidthSampler" = type <{ %"class.quic::BandwidthSamplerInterface", i64, i64, i64, i64, i64, %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicPacketNumber", i8, [7 x i8], %"class.quic::QuicPacketNumber", %"class.quic::PacketNumberIndexedQueue", %"class.quic::BandwidthSampler::RecentAckPoints", %"class.quiche::QuicheCircularDeque.0", i64, %"class.quic::QuicUnackedPacketMap"*, %"class.quic::MaxAckHeightTracker", i64, i8, [7 x i8] }>
%"class.quic::BandwidthSamplerInterface" = type { i32 (...)** }
%"class.quic::QuicTime" = type { i64 }
%"class.quic::QuicPacketNumber" = type { i64 }
%"class.quic::PacketNumberIndexedQueue" = type { %"class.quiche::QuicheCircularDeque", i64, %"class.quic::QuicPacketNumber" }
%"class.quiche::QuicheCircularDeque" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper, 3, std::__1::allocator<quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper, 3, std::__1::allocator<quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper> >::AllocatorAndData" = type { %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"*, i64 }
%"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper" = type <{ %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket", i8, [7 x i8] }>
%"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket" = type { %"class.quic::QuicTime", i64, i64, %"class.quic::QuicTime", %"class.quic::QuicTime", %"struct.quic::SendTimeState" }
%"struct.quic::SendTimeState" = type { i8, i8, i64, i64, i64, i64 }
%"class.quic::BandwidthSampler::RecentAckPoints" = type { [2 x %"struct.quic::BandwidthSampler::AckPoint"] }
%"struct.quic::BandwidthSampler::AckPoint" = type { %"class.quic::QuicTime", i64 }
%"class.quiche::QuicheCircularDeque.0" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::BandwidthSampler::AckPoint, 3, std::__1::allocator<quic::BandwidthSampler::AckPoint> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::BandwidthSampler::AckPoint, 3, std::__1::allocator<quic::BandwidthSampler::AckPoint> >::AllocatorAndData" = type { %"struct.quic::BandwidthSampler::AckPoint"*, i64 }
%"class.quic::MaxAckHeightTracker" = type { %"class.quic::WindowedFilter", %"class.quic::QuicTime", i64, i64, double }
%"class.quic::WindowedFilter" = type { i64, i64, [3 x %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample"] }
%"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample" = type { i64, i64 }
%"class.quic::QuicUnackedPacketMap" = type <{ i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quiche::QuicheCircularDeque.3", %"class.quic::QuicPacketNumber", i64, [3 x i64], i64, %"class.quic::QuicTime", [3 x %"class.quic::QuicTime"], %"class.quic::QuicTime", %"struct.quic::QuicStreamFrame", %"class.quic::SessionNotifierInterface"*, i8, i8, [6 x i8] }>
%"class.quiche::QuicheCircularDeque.3" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" = type { %"struct.quic::QuicTransmissionInfo"*, i64 }
%"struct.quic::QuicTransmissionInfo" = type { %"class.std::__1::vector", %"class.quic::QuicTime", i16, i8, i8, i8, i8, i8, i8, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"*, %"class.std::__1::__compressed_pair.49" }
%"struct.quic::QuicFrame" = type { %union.anon }
%union.anon = type { %"struct.quic::QuicStreamFrame" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.quic::QuicFrame"* }
%"struct.quic::QuicStreamFrame" = type { i8, i8, i16, i32, i8*, i64 }
%"class.quic::SessionNotifierInterface" = type { i32 (...)** }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.32 }
%union.anon.32 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.33 }
%struct.anon.33 = type { i8 }
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }
%"class.absl::string_view" = type { i8*, i64 }
%"struct.quic::BandwidthSamplerInterface::CongestionEventSample" = type { %"class.quic::QuicBandwidth", i8, %"class.quic::QuicTime::Delta", i64, %"struct.quic::SendTimeState", i64 }
%"class.quic::QuicBandwidth" = type { i64 }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"*, %"class.std::__1::__compressed_pair.56" }
%"struct.quic::AckedPacket" = type { %"class.quic::QuicPacketNumber", i16, %"class.quic::QuicTime" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.quic::AckedPacket"* }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"*, %"class.std::__1::__compressed_pair.63" }
%"struct.quic::LostPacket" = type <{ %"class.quic::QuicPacketNumber", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.quic::LostPacket"* }
%"struct.quic::BandwidthSample" = type { %"class.quic::QuicBandwidth", %"class.quic::QuicTime::Delta", %"struct.quic::SendTimeState" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN4quic14WindowedFilterImNS_9MaxFilterImEEmmE6UpdateEmm = comdat any

$_ZNK4quic20QuicUnackedPacketMap11DebugStringEv = comdat any

$_ZN4quic24PacketNumberIndexedQueueINS_16BandwidthSampler27ConnectionStateOnSentPacketEE7EmplaceIJRNS_8QuicTimeERmmRS1_EEEbNS_16QuicPacketNumberEDpOT_ = comdat any

$_ZN4quic24PacketNumberIndexedQueueINS_16BandwidthSampler27ConnectionStateOnSentPacketEE10RemoveUpToENS_16QuicPacketNumberE = comdat any

$_ZN6quiche19QuicheCircularDequeIN4quic24PacketNumberIndexedQueueINS1_16BandwidthSampler27ConnectionStateOnSentPacketEE12EntryWrapperELm3ENSt3__19allocatorIS6_EEE11AssignRangeINSA_14basic_iteratorIKS6_EEvEEvT_SF_ = comdat any

$_ZN6quiche19QuicheCircularDequeIN4quic24PacketNumberIndexedQueueINS1_16BandwidthSampler27ConnectionStateOnSentPacketEE12EntryWrapperELm3ENSt3__19allocatorIS6_EEE8RelocateEm = comdat any

$_ZN4absl6StrCatIJNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEA18_cS7_A20_cmA22_cmA2_cEEES7_RKNS_8AlphaNumESE_SE_SE_SE_DpRKT_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN6quiche19QuicheCircularDequeIN4quic16BandwidthSampler8AckPointELm3ENSt3__19allocatorIS3_EEE11AssignRangeINS7_14basic_iteratorIKS3_EEvEEvT_SC_ = comdat any

$_ZN6quiche19QuicheCircularDequeIN4quic16BandwidthSampler8AckPointELm3ENSt3__19allocatorIS3_EEE8RelocateEm = comdat any

$_ZN6quiche19QuicheCircularDequeIN4quic24PacketNumberIndexedQueueINS1_16BandwidthSampler27ConnectionStateOnSentPacketEE12EntryWrapperELm3ENSt3__19allocatorIS6_EEE12emplace_backIJRNS1_8QuicTimeERmmRS3_EEERS6_DpOT_ = comdat any

$_ZN6quiche19QuicheCircularDequeIN4quic24PacketNumberIndexedQueueINS1_16BandwidthSampler27ConnectionStateOnSentPacketEE12EntryWrapperELm3ENSt3__19allocatorIS6_EEE14ResizeInternalIJEEEvmDpOT_ = comdat any

@.str = private unnamed_addr constant [8 x i8] c"{valid:\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c", app_limited:\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c", total_sent:\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c", total_acked:\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c", total_lost:\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c", inflight:\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@_ZTVN4quic16BandwidthSamplerE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::BandwidthSampler"*)* @_ZN4quic16BandwidthSamplerD2Ev to i8*), i8* bitcast (void (%"class.quic::BandwidthSampler"*)* @_ZN4quic16BandwidthSamplerD0Ev to i8*), i8* bitcast (void (%"class.quic::BandwidthSampler"*, i64, i64, i64, i64, i8)* @_ZN4quic16BandwidthSampler12OnPacketSentENS_8QuicTimeENS_16QuicPacketNumberEmmNS_22HasRetransmittableDataE to i8*), i8* bitcast (void (%"class.quic::BandwidthSampler"*, i64)* @_ZN4quic16BandwidthSampler16OnPacketNeuteredENS_16QuicPacketNumberE to i8*), i8* bitcast (void (%"struct.quic::BandwidthSamplerInterface::CongestionEventSample"*, %"class.quic::BandwidthSampler"*, i64, %"class.std::__1::vector.54"*, %"class.std::__1::vector.61"*, i64, i64, i64)* @_ZN4quic16BandwidthSampler17OnCongestionEventENS_8QuicTimeERKNSt3__16vectorINS_11AckedPacketENS2_9allocatorIS4_EEEERKNS3_INS_10LostPacketENS5_ISA_EEEENS_13QuicBandwidthESF_m to i8*), i8* bitcast (void (%"class.quic::BandwidthSampler"*)* @_ZN4quic16BandwidthSampler12OnAppLimitedEv to i8*), i8* bitcast (void (%"class.quic::BandwidthSampler"*, i64)* @_ZN4quic16BandwidthSampler21RemoveObsoletePacketsENS_16QuicPacketNumberE to i8*), i8* bitcast (i64 (%"class.quic::BandwidthSampler"*)* @_ZNK4quic16BandwidthSampler16total_bytes_sentEv to i8*), i8* bitcast (i64 (%"class.quic::BandwidthSampler"*)* @_ZNK4quic16BandwidthSampler17total_bytes_ackedEv to i8*), i8* bitcast (i64 (%"class.quic::BandwidthSampler"*)* @_ZNK4quic16BandwidthSampler16total_bytes_lostEv to i8*), i8* bitcast (i64 (%"class.quic::BandwidthSampler"*)* @_ZNK4quic16BandwidthSampler20total_bytes_neuteredEv to i8*), i8* bitcast (i1 (%"class.quic::BandwidthSampler"*)* @_ZNK4quic16BandwidthSampler14is_app_limitedEv to i8*), i8* bitcast (i64 (%"class.quic::BandwidthSampler"*)* @_ZNK4quic16BandwidthSampler24end_of_app_limited_phaseEv to i8*)] }, align 8
@FLAGS_quic_max_tracked_packet_count = external local_unnamed_addr global i64, align 8
@.str.7 = private unnamed_addr constant [83 x i8] c"../../net/third_party/quiche/src/quic/core/congestion_control/bandwidth_sampler.cc\00", align 1
@.str.8 = private unnamed_addr constant [86 x i8] c"BandwidthSampler in-flight packet map has exceeded maximum number of tracked packets(\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c").  First tracked: \00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"; last tracked: \00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"; entry_slots_used: \00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"; number_of_present_entries: \00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"; packet number: \00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"; unacked_map: \00", align 1
@.str.15 = private unnamed_addr constant [21 x i8] c"; total_bytes_sent: \00", align 1
@.str.16 = private unnamed_addr constant [22 x i8] c"; total_bytes_acked: \00", align 1
@.str.17 = private unnamed_addr constant [21 x i8] c"; total_bytes_lost: \00", align 1
@.str.18 = private unnamed_addr constant [25 x i8] c"; total_bytes_neutered: \00", align 1
@.str.19 = private unnamed_addr constant [32 x i8] c"; last_acked_packet_sent_time: \00", align 1
@.str.20 = private unnamed_addr constant [42 x i8] c"; total_bytes_sent_at_last_acked_packet: \00", align 1
@.str.21 = private unnamed_addr constant [30 x i8] c"; least_unacked_packet_info: \00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"n/a\00", align 1
@.str.23 = private unnamed_addr constant [86 x i8] c"BandwidthSampler in-flight packet map has exceeded maximum number of tracked packets.\00", align 1
@.str.24 = private unnamed_addr constant [99 x i8] c"BandwidthSampler failed to insert the packet into the map, most likely because it's already in it.\00", align 1
@.str.25 = private unnamed_addr constant [48 x i8] c"sent_packet.last_acked_packet_sent_time is zero\00", align 1
@.str.26 = private unnamed_addr constant [43 x i8] c"No A0 point candicates. total_bytes_acked:\00", align 1
@FLAGS_quic_ack_aggregation_bandwidth_threshold = external local_unnamed_addr global double, align 8
@.str.28 = private unnamed_addr constant [8 x i8] c"{size: \00", align 1
@.str.29 = private unnamed_addr constant [18 x i8] c", least_unacked: \00", align 1
@.str.30 = private unnamed_addr constant [24 x i8] c", largest_sent_packet: \00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c", largest_acked: \00", align 1
@.str.32 = private unnamed_addr constant [20 x i8] c", bytes_in_flight: \00", align 1
@.str.33 = private unnamed_addr constant [22 x i8] c", packets_in_flight: \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.34 = private unnamed_addr constant [73 x i8] c"../../net/third_party/quiche/src/quic/core/packet_number_indexed_queue.h\00", align 1
@.str.35 = private unnamed_addr constant [45 x i8] c"Try to insert an uninitialized packet number\00", align 1

@_ZN4quic16BandwidthSamplerC1EPKNS_20QuicUnackedPacketMapEm = hidden unnamed_addr alias void (%"class.quic::BandwidthSampler"*, %"class.quic::QuicUnackedPacketMap"*, i64), void (%"class.quic::BandwidthSampler"*, %"class.quic::QuicUnackedPacketMap"*, i64)* @_ZN4quic16BandwidthSamplerC2EPKNS_20QuicUnackedPacketMapEm
@_ZN4quic16BandwidthSamplerC1ERKS0_ = hidden unnamed_addr alias void (%"class.quic::BandwidthSampler"*, %"class.quic::BandwidthSampler"*), void (%"class.quic::BandwidthSampler"*, %"class.quic::BandwidthSampler"*)* @_ZN4quic16BandwidthSamplerC2ERKS0_
@_ZN4quic16BandwidthSamplerD1Ev = hidden unnamed_addr alias void (%"class.quic::BandwidthSampler"*), void (%"class.quic::BandwidthSampler"*)* @_ZN4quic16BandwidthSamplerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_13SendTimeStateE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), %"struct.quic::SendTimeState"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 {
  %3 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 7) #12
  %4 = getelementptr inbounds %"struct.quic::SendTimeState", %"struct.quic::SendTimeState"* %1, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp ne i8 %5, 0
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEb(%"class.std::__1::basic_ostream"* %3, i1 zeroext %6) #12
  %8 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i64 14) #12
  %9 = getelementptr inbounds %"struct.quic::SendTimeState", %"struct.quic::SendTimeState"* %1, i64 0, i32 1
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp ne i8 %10, 0
  %12 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEb(%"class.std::__1::basic_ostream"* %8, i1 zeroext %11) #12
  %13 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 13) #12
  %14 = getelementptr inbounds %"struct.quic::SendTimeState", %"struct.quic::SendTimeState"* %1, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %13, i64 %15) #12
  %17 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 14) #12
  %18 = getelementptr inbounds %"struct.quic::SendTimeState", %"struct.quic::SendTimeState"* %1, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %17, i64 %19) #12
  %21 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i64 13) #12
  %22 = getelementptr inbounds %"struct.quic::SendTimeState", %"struct.quic::SendTimeState"* %1, i64 0, i32 4
  %23 = load i64, i64* %22, align 8
  %24 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %21, i64 %23) #12
  %25 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %24, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i64 11) #12
  %26 = getelementptr inbounds %"struct.quic::SendTimeState", %"struct.quic::SendTimeState"* %1, i64 0, i32 5
  %27 = load i64, i64* %26, align 8
  %28 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %25, i64 %27) #12
  %29 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i64 1) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEb(%"class.std::__1::basic_ostream"*, i1 zeroext) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4quic19MaxAckHeightTracker6UpdateENS_13QuicBandwidthEmNS_8QuicTimeEm(%"class.quic::MaxAckHeightTracker"*, i64, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.quic::MaxAckHeightTracker", %"class.quic::MaxAckHeightTracker"* %0, i64 0, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.quic::MaxAckHeightTracker", %"class.quic::MaxAckHeightTracker"* %0, i64 0, i32 2
  store i64 %4, i64* %10, align 8
  store i64 %3, i64* %6, align 8
  %11 = getelementptr inbounds %"class.quic::MaxAckHeightTracker", %"class.quic::MaxAckHeightTracker"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 1
  store i64 %13, i64* %11, align 8
  br label %35

14:                                               ; preds = %5
  %15 = sub nsw i64 %3, %7
  %16 = mul nsw i64 %15, %1
  %17 = sdiv i64 %16, 8
  %18 = udiv i64 %17, 1000000
  %19 = getelementptr inbounds %"class.quic::MaxAckHeightTracker", %"class.quic::MaxAckHeightTracker"* %0, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = uitofp i64 %20 to double
  %22 = getelementptr inbounds %"class.quic::MaxAckHeightTracker", %"class.quic::MaxAckHeightTracker"* %0, i64 0, i32 4
  %23 = load double, double* %22, align 8
  %24 = uitofp i64 %18 to double
  %25 = fmul double %23, %24
  %26 = fcmp ult double %25, %21
  br i1 %26, label %31, label %27

27:                                               ; preds = %14
  store i64 %4, i64* %19, align 8
  store i64 %3, i64* %6, align 8
  %28 = getelementptr inbounds %"class.quic::MaxAckHeightTracker", %"class.quic::MaxAckHeightTracker"* %0, i64 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  br label %35

31:                                               ; preds = %14
  %32 = add i64 %20, %4
  store i64 %32, i64* %19, align 8
  %33 = sub i64 %32, %18
  %34 = getelementptr inbounds %"class.quic::MaxAckHeightTracker", %"class.quic::MaxAckHeightTracker"* %0, i64 0, i32 0
  tail call void @_ZN4quic14WindowedFilterImNS_9MaxFilterImEEmmE6UpdateEmm(%"class.quic::WindowedFilter"* %34, i64 %33, i64 %2)
  br label %35

35:                                               ; preds = %27, %31, %9
  %36 = phi i64 [ 0, %9 ], [ 0, %27 ], [ %33, %31 ]
  ret i64 %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic14WindowedFilterImNS_9MaxFilterImEEmmE6UpdateEmm(%"class.quic::WindowedFilter"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.quic::WindowedFilter", %"class.quic::WindowedFilter"* %0, i64 0, i32 2
  %5 = getelementptr inbounds [3 x %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample"], [3 x %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample"]* %4, i64 0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.quic::WindowedFilter", %"class.quic::WindowedFilter"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  %10 = icmp ule i64 %6, %1
  %11 = or i1 %10, %9
  br i1 %11, label %20, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.quic::WindowedFilter", %"class.quic::WindowedFilter"* %0, i64 0, i32 2, i64 2
  %14 = getelementptr inbounds %"class.quic::WindowedFilter", %"class.quic::WindowedFilter"* %0, i64 0, i32 2, i64 2, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %2, %15
  %17 = getelementptr inbounds %"class.quic::WindowedFilter", %"class.quic::WindowedFilter"* %0, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp ugt i64 %16, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %3, %12
  %21 = getelementptr inbounds %"class.quic::WindowedFilter", %"class.quic::WindowedFilter"* %0, i64 0, i32 2, i64 2
  %22 = bitcast %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample"* %21 to i8*
  %23 = getelementptr inbounds %"class.quic::WindowedFilter", %"class.quic::WindowedFilter"* %0, i64 0, i32 2, i64 2, i32 0
  store i64 %1, i64* %23, align 8
  %24 = getelementptr inbounds %"class.quic::WindowedFilter", %"class.quic::WindowedFilter"* %0, i64 0, i32 2, i64 2, i32 1
  store i64 %2, i64* %24, align 8
  %25 = getelementptr inbounds %"class.quic::WindowedFilter", %"class.quic::WindowedFilter"* %0, i64 0, i32 2, i64 1
  %26 = bitcast %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %22, i64 16, i1 false) #12
  %27 = getelementptr inbounds %"class.quic::WindowedFilter", %"class.quic::WindowedFilter"* %0, i64 0, i32 2, i64 0
  %28 = bitcast %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %22, i64 16, i1 false) #12
  br label %83

29:                                               ; preds = %12
  %30 = getelementptr inbounds %"class.quic::WindowedFilter", %"class.quic::WindowedFilter"* %0, i64 0, i32 2, i64 1
  %31 = getelementptr inbounds %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample", %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample"* %30, i64 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp ugt i64 %32, %1
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = bitcast %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample"* %30 to i8*
  %36 = getelementptr inbounds %"class.quic::WindowedFilter", %"class.quic::WindowedFilter"* %0, i64 0, i32 2, i64 1, i32 0
  store i64 %1, i64* %36, align 8
  %37 = getelementptr inbounds %"class.quic::WindowedFilter", %"class.quic::WindowedFilter"* %0, i64 0, i32 2, i64 1, i32 1
  store i64 %2, i64* %37, align 8
  %38 = bitcast %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %35, i64 16, i1 false)
  br label %45

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample", %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample"* %13, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp ugt i64 %41, %1
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.quic::WindowedFilter", %"class.quic::WindowedFilter"* %0, i64 0, i32 2, i64 2, i32 0
  store i64 %1, i64* %44, align 8
  store i64 %2, i64* %14, align 8
  br label %45

45:                                               ; preds = %39, %43, %34
  %46 = phi i64 [ %32, %39 ], [ %32, %43 ], [ %1, %34 ]
  %47 = getelementptr inbounds %"class.quic::WindowedFilter", %"class.quic::WindowedFilter"* %0, i64 0, i32 2, i64 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %2, %48
  %50 = icmp ugt i64 %49, %18
  br i1 %50, label %51, label %60

51:                                               ; preds = %45
  %52 = bitcast [3 x %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample"]* %4 to i8*
  %53 = bitcast %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 16, i1 false)
  %54 = bitcast %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 16, i1 false)
  %55 = getelementptr inbounds %"class.quic::WindowedFilter", %"class.quic::WindowedFilter"* %0, i64 0, i32 2, i64 2, i32 0
  store i64 %1, i64* %55, align 8
  store i64 %2, i64* %14, align 8
  %56 = load i64, i64* %47, align 8
  %57 = sub i64 %2, %56
  %58 = icmp ugt i64 %57, %18
  br i1 %58, label %59, label %83

59:                                               ; preds = %51
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 16, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 16, i1 false)
  br label %83

60:                                               ; preds = %45
  %61 = icmp eq i64 %46, %6
  br i1 %61, label %62, label %72

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.quic::WindowedFilter", %"class.quic::WindowedFilter"* %0, i64 0, i32 2, i64 1, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %2, %64
  %66 = lshr i64 %18, 2
  %67 = icmp ugt i64 %65, %66
  br i1 %67, label %68, label %72

68:                                               ; preds = %62
  %69 = bitcast %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample"* %30 to i8*
  %70 = getelementptr inbounds %"class.quic::WindowedFilter", %"class.quic::WindowedFilter"* %0, i64 0, i32 2, i64 1, i32 0
  store i64 %1, i64* %70, align 8
  store i64 %2, i64* %63, align 8
  %71 = bitcast %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %69, i64 16, i1 false)
  br label %83

72:                                               ; preds = %62, %60
  %73 = getelementptr inbounds %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample", %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample"* %13, i64 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, %46
  br i1 %75, label %76, label %83

76:                                               ; preds = %72
  %77 = load i64, i64* %14, align 8
  %78 = sub i64 %2, %77
  %79 = lshr i64 %18, 1
  %80 = icmp ugt i64 %78, %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.quic::WindowedFilter", %"class.quic::WindowedFilter"* %0, i64 0, i32 2, i64 2, i32 0
  store i64 %1, i64* %82, align 8
  store i64 %2, i64* %14, align 8
  br label %83

83:                                               ; preds = %51, %59, %20, %68, %81, %76, %72
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16BandwidthSamplerC2EPKNS_20QuicUnackedPacketMapEm(%"class.quic::BandwidthSampler"* nocapture, %"class.quic::QuicUnackedPacketMap"*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4quic16BandwidthSamplerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 8, i32 0
  %7 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 56, i1 false)
  store i64 -1, i64* %6, align 8
  %8 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 9
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 11, i32 0
  store i64 -1, i64* %9, align 8
  %10 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12
  %11 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 2, i32 0
  %12 = bitcast %"class.quic::PacketNumberIndexedQueue"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 40, i1 false) #12
  store i64 -1, i64* %11, align 8
  %13 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 13
  %14 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 15
  %15 = bitcast %"class.quic::BandwidthSampler::RecentAckPoints"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 64, i1 false)
  %16 = load i64, i64* @FLAGS_quic_max_tracked_packet_count, align 8
  store i64 %16, i64* %14, align 8
  %17 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 16
  store %"class.quic::QuicUnackedPacketMap"* %1, %"class.quic::QuicUnackedPacketMap"** %17, align 8
  %18 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 17, i32 0, i32 0
  store i64 %2, i64* %18, align 8
  %19 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 17, i32 0, i32 1
  %20 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 17, i32 4
  %21 = bitcast i64* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 80, i1 false) #12
  %22 = load i64, i64* bitcast (double* @FLAGS_quic_ack_aggregation_bandwidth_threshold to i64*), align 8
  %23 = bitcast double* %20 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 18
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 19
  store i8 0, i8* %25, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16BandwidthSamplerC2ERKS0_(%"class.quic::BandwidthSampler"*, %"class.quic::BandwidthSampler"* dereferenceable(328)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4quic16BandwidthSamplerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %4, align 8
  %7 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %7, align 8
  %10 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %10, align 8
  %13 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %13, align 8
  %16 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 5
  %17 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 5
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %16, align 8
  %19 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 6, i32 0
  %20 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 6, i32 0
  %21 = load i64, i64* %19, align 8
  store i64 %21, i64* %20, align 8
  %22 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 7, i32 0
  %23 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 7, i32 0
  %24 = load i64, i64* %22, align 8
  store i64 %24, i64* %23, align 8
  %25 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 8, i32 0
  %26 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 8, i32 0
  %27 = load i64, i64* %25, align 8
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 9
  %29 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 9
  %30 = load i8, i8* %29, align 8, !range !2
  store i8 %30, i8* %28, align 8
  %31 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 11, i32 0
  %32 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 11, i32 0
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12
  %35 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12
  %36 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %34, i64 0, i32 0
  %37 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %35, i64 0, i32 0
  %38 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %35, i64 0, i32 0, i32 0
  %39 = bitcast %"class.quic::PacketNumberIndexedQueue"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 32, i1 false) #12
  %40 = load i64, i64* %38, align 8
  %41 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  tail call void @_ZN6quiche19QuicheCircularDequeIN4quic24PacketNumberIndexedQueueINS1_16BandwidthSampler27ConnectionStateOnSentPacketEE12EntryWrapperELm3ENSt3__19allocatorIS6_EEE11AssignRangeINSA_14basic_iteratorIKS6_EEvEEvT_SF_(%"class.quiche::QuicheCircularDeque"* %36, %"class.quiche::QuicheCircularDeque"* %37, i64 %40, %"class.quiche::QuicheCircularDeque"* %37, i64 %42) #12
  %43 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 1
  %44 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 1
  %45 = bitcast i64* %43 to i8*
  %46 = bitcast i64* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 16, i1 false) #12
  %47 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 13
  %48 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 13
  %49 = bitcast %"class.quic::BandwidthSampler::RecentAckPoints"* %47 to i8*
  %50 = bitcast %"class.quic::BandwidthSampler::RecentAckPoints"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 32, i1 false)
  %51 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 14
  %52 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 14
  %53 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %52, i64 0, i32 0
  %54 = bitcast %"class.quiche::QuicheCircularDeque.0"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 32, i1 false) #12
  %55 = load i64, i64* %53, align 8
  %56 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 14, i32 1
  %57 = load i64, i64* %56, align 8
  tail call void @_ZN6quiche19QuicheCircularDequeIN4quic16BandwidthSampler8AckPointELm3ENSt3__19allocatorIS3_EEE11AssignRangeINS7_14basic_iteratorIKS3_EEvEEvT_SC_(%"class.quiche::QuicheCircularDeque.0"* %51, %"class.quiche::QuicheCircularDeque.0"* %52, i64 %55, %"class.quiche::QuicheCircularDeque.0"* %52, i64 %57) #12
  %58 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 15
  %59 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 15
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %58, align 8
  %61 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 16
  %62 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 16
  %63 = bitcast %"class.quic::QuicUnackedPacketMap"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.quic::QuicUnackedPacketMap"** %61 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 17
  %67 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 17
  %68 = bitcast %"class.quic::MaxAckHeightTracker"* %66 to i8*
  %69 = bitcast %"class.quic::MaxAckHeightTracker"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 96, i1 false)
  %70 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 18
  %71 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 18
  %72 = load i64, i64* %71, align 8
  store i64 %72, i64* %70, align 8
  %73 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 19
  %74 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 19
  %75 = load i8, i8* %74, align 8, !range !2
  store i8 %75, i8* %73, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4quic16BandwidthSampler27EnableOverestimateAvoidanceEv(%"class.quic::BandwidthSampler"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 19
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  store i8 1, i8* %2, align 8
  %6 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 17, i32 4
  store double 2.000000e+00, double* %6, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16BandwidthSamplerD2Ev(%"class.quic::BandwidthSampler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4quic16BandwidthSamplerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 14, i32 2, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 14, i32 2, i32 0
  %8 = bitcast %"struct.quic::BandwidthSampler::AckPoint"** %7 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 0, i32 2, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 0, i32 2, i32 0
  %16 = bitcast %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16BandwidthSamplerD0Ev(%"class.quic::BandwidthSampler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN4quic16BandwidthSamplerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 14, i32 2, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 14, i32 2, i32 0
  %8 = bitcast %"struct.quic::BandwidthSampler::AckPoint"** %7 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %6, %1
  %11 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 0, i32 2, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 0, i32 2, i32 0
  %16 = bitcast %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"** %15 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %10, %14
  %19 = bitcast %"class.quic::BandwidthSampler"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16BandwidthSampler12OnPacketSentENS_8QuicTimeENS_16QuicPacketNumberEmmNS_22HasRetransmittableDataE(%"class.quic::BandwidthSampler"*, i64, i64, i64, i64, i8 zeroext) unnamed_addr #0 align 2 {
  %7 = alloca %"class.quic::QuicTime", align 8
  %8 = alloca %"class.quic::QuicPacketNumber", align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.logging::LogMessage", align 8
  %11 = alloca %"class.quic::QuicPacketNumber", align 8
  %12 = alloca %"class.quic::QuicPacketNumber", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.logging::LogMessage", align 8
  %16 = alloca i64, align 8
  %17 = alloca %"class.logging::LogMessage", align 8
  %18 = getelementptr inbounds %"class.quic::QuicTime", %"class.quic::QuicTime"* %7, i64 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %8, i64 0, i32 0
  store i64 %2, i64* %19, align 8
  store i64 %3, i64* %9, align 8
  %20 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 8, i32 0
  store i64 %2, i64* %20, align 8
  %21 = icmp eq i8 %5, 1
  br i1 %21, label %22, label %270

22:                                               ; preds = %6
  %23 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, %3
  store i64 %25, i64* %23, align 8
  %26 = icmp eq i64 %4, 0
  br i1 %26, label %27, label %82

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 7, i32 0
  store i64 %1, i64* %28, align 8
  %29 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 19
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %78, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 13
  %34 = bitcast %"class.quic::BandwidthSampler::RecentAckPoints"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 32, i1 false) #12
  %35 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 13, i32 0, i64 1, i32 0, i32 0
  %38 = icmp slt i64 %1, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %32
  %40 = icmp eq i64 %1, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %39
  %42 = bitcast %"class.quic::BandwidthSampler::RecentAckPoints"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false)
  br label %43

43:                                               ; preds = %32, %41
  store i64 %1, i64* %37, align 8
  br label %44

44:                                               ; preds = %43, %39
  %45 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 13, i32 0, i64 1, i32 1
  store i64 %36, i64* %45, align 8
  %46 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 14
  %47 = bitcast %"class.quiche::QuicheCircularDeque.0"* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #12
  %48 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 13, i32 0, i64 1
  %49 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 14, i32 1
  %50 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 14, i32 2, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  %53 = add i64 %51, -1
  %54 = select i1 %52, i64 0, i64 %53
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %64

56:                                               ; preds = %44
  %57 = lshr i64 %54, 2
  %58 = icmp ugt i64 %57, 3
  %59 = select i1 %58, i64 %57, i64 3
  %60 = add nuw nsw i64 %59, %54
  %61 = icmp ugt i64 %60, 1
  %62 = select i1 %61, i64 %60, i64 1
  tail call void @_ZN6quiche19QuicheCircularDequeIN4quic16BandwidthSampler8AckPointELm3ENSt3__19allocatorIS3_EEE8RelocateEm(%"class.quiche::QuicheCircularDeque.0"* %46, i64 %62) #12
  %63 = load i64, i64* %49, align 8
  br label %64

64:                                               ; preds = %44, %56
  %65 = phi i64 [ 0, %44 ], [ %63, %56 ]
  %66 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 14, i32 2, i32 0
  %67 = load %"struct.quic::BandwidthSampler::AckPoint"*, %"struct.quic::BandwidthSampler::AckPoint"** %66, align 8
  %68 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %67, i64 %65
  %69 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %68 to i8*
  %70 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 16, i1 false) #12
  %71 = load i64, i64* %49, align 8
  %72 = load i64, i64* %50, align 8
  %73 = add i64 %72, -1
  %74 = icmp eq i64 %73, %71
  %75 = add i64 %71, 1
  %76 = select i1 %74, i64 0, i64 %75
  store i64 %76, i64* %49, align 8
  %77 = load i64, i64* %23, align 8
  br label %78

78:                                               ; preds = %27, %64
  %79 = phi i64 [ %25, %27 ], [ %77, %64 ]
  %80 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 5
  store i64 %79, i64* %80, align 8
  %81 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 6, i32 0
  store i64 %1, i64* %81, align 8
  br label %82

82:                                               ; preds = %78, %22
  %83 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12
  %84 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %256, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 2, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %83, i64 0, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = icmp ult i64 %93, %91
  br i1 %94, label %95, label %99

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 0, i32 2, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %97, %93
  br label %99

99:                                               ; preds = %87, %95
  %100 = phi i64 [ %98, %95 ], [ %93, %87 ]
  %101 = xor i64 %91, -1
  %102 = add i64 %89, %101
  %103 = add i64 %102, %100
  %104 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 15
  %105 = load i64, i64* %104, align 8
  %106 = add i64 %103, %105
  %107 = icmp ult i64 %106, %2
  br i1 %107, label %108, label %256

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 16
  %110 = load %"class.quic::QuicUnackedPacketMap"*, %"class.quic::QuicUnackedPacketMap"** %109, align 8
  %111 = icmp eq %"class.quic::QuicUnackedPacketMap"* %110, null
  br i1 %111, label %249, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicUnackedPacketMap"* %110, i64 0, i32 7, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicUnackedPacketMap"* %110, i64 0, i32 7, i32 1
  %116 = load i64, i64* %115, align 8
  %117 = icmp eq i64 %114, %116
  br i1 %117, label %249, label %118

118:                                              ; preds = %112
  %119 = tail call i64 @_ZNK4quic20QuicUnackedPacketMap15GetLeastUnackedEv(%"class.quic::QuicUnackedPacketMap"* nonnull %110) #12
  %120 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  %121 = bitcast %"class.quic::QuicPacketNumber"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #12
  %122 = bitcast %"class.quic::QuicPacketNumber"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #12
  br i1 %120, label %123, label %247

123:                                              ; preds = %118
  %124 = bitcast %"class.logging::LogMessage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %124) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %10, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.7, i64 0, i64 0), i32 174, i32 2) #12
  %125 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %10, i64 0, i32 2
  %126 = bitcast %"class.std::__1::basic_ostringstream"* %125 to %"class.std::__1::basic_ostream"*
  %127 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %126, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.8, i64 0, i64 0), i64 85) #12
  %128 = load i64, i64* %104, align 8
  %129 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %127, i64 %128) #12
  %130 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %129, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0), i64 19) #12
  %131 = load i64, i64* %88, align 8
  %132 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %11, i64 0, i32 0
  store i64 %131, i64* %132, align 8
  %133 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_16QuicPacketNumberE(%"class.std::__1::basic_ostream"* dereferenceable(160) %130, %"class.quic::QuicPacketNumber"* nonnull dereferenceable(8) %11) #12
  %134 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %133, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i64 16) #12
  %135 = load i64, i64* %84, align 8
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %151, label %137

137:                                              ; preds = %123
  %138 = load i64, i64* %88, align 8
  %139 = load i64, i64* %90, align 8
  %140 = load i64, i64* %92, align 8
  %141 = icmp ult i64 %140, %139
  br i1 %141, label %142, label %146

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 0, i32 2, i32 1
  %144 = load i64, i64* %143, align 8
  %145 = add i64 %144, %140
  br label %146

146:                                              ; preds = %142, %137
  %147 = phi i64 [ %145, %142 ], [ %140, %137 ]
  %148 = xor i64 %139, -1
  %149 = add i64 %138, %148
  %150 = add i64 %149, %147
  br label %151

151:                                              ; preds = %123, %146
  %152 = phi i64 [ %150, %146 ], [ -1, %123 ]
  %153 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %12, i64 0, i32 0
  store i64 %152, i64* %153, align 8
  %154 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_16QuicPacketNumberE(%"class.std::__1::basic_ostream"* dereferenceable(160) %134, %"class.quic::QuicPacketNumber"* nonnull dereferenceable(8) %12) #12
  %155 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %154, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i64 20) #12
  %156 = load i64, i64* %90, align 8
  %157 = load i64, i64* %92, align 8
  %158 = icmp ult i64 %157, %156
  br i1 %158, label %159, label %163

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 0, i32 2, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = add i64 %161, %157
  br label %163

163:                                              ; preds = %151, %159
  %164 = phi i64 [ %162, %159 ], [ %157, %151 ]
  %165 = sub i64 %164, %156
  %166 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %155, i64 %165) #12
  %167 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %166, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i64 0, i64 0), i64 29) #12
  %168 = load i64, i64* %84, align 8
  %169 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %167, i64 %168) #12
  %170 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %169, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i64 17) #12
  %171 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_16QuicPacketNumberE(%"class.std::__1::basic_ostream"* dereferenceable(160) %170, %"class.quic::QuicPacketNumber"* nonnull dereferenceable(8) %8) #12
  %172 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %171, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i64 15) #12
  %173 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %173) #12
  %174 = load %"class.quic::QuicUnackedPacketMap"*, %"class.quic::QuicUnackedPacketMap"** %109, align 8
  call void @_ZNK4quic20QuicUnackedPacketMap11DebugStringEv(%"class.std::__1::basic_string"* nonnull sret %13, %"class.quic::QuicUnackedPacketMap"* %174)
  %175 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %175, i64 0, i32 1, i32 0
  %177 = load i8, i8* %176, align 1
  %178 = icmp slt i8 %177, 0
  %179 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = zext i8 %177 to i64
  %184 = select i1 %178, i8* %180, i8* %173
  %185 = select i1 %178, i64 %182, i64 %183
  %186 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %172, i8* %184, i64 %185) #12
  %187 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %186, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i64 0, i64 0), i64 20) #12
  %188 = load i64, i64* %23, align 8
  %189 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %187, i64 %188) #12
  %190 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %189, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0), i64 21) #12
  %191 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 2
  %192 = load i64, i64* %191, align 8
  %193 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %190, i64 %192) #12
  %194 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %193, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0), i64 20) #12
  %195 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 3
  %196 = load i64, i64* %195, align 8
  %197 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %194, i64 %196) #12
  %198 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %197, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18, i64 0, i64 0), i64 24) #12
  %199 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 4
  %200 = load i64, i64* %199, align 8
  %201 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %198, i64 %200) #12
  %202 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %201, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0), i64 31) #12
  %203 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 6, i32 0
  %204 = load i64, i64* %203, align 8
  %205 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %202, i64 %204) #12
  %206 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %202, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.20, i64 0, i64 0), i64 41) #12
  %207 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 5
  %208 = load i64, i64* %207, align 8
  %209 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %206, i64 %208) #12
  %210 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %209, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.21, i64 0, i64 0), i64 29) #12
  %211 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %211) #12
  %212 = load %"class.quic::QuicUnackedPacketMap"*, %"class.quic::QuicUnackedPacketMap"** %109, align 8
  %213 = call zeroext i1 @_ZNK4quic20QuicUnackedPacketMap9IsUnackedENS_16QuicPacketNumberE(%"class.quic::QuicUnackedPacketMap"* %212, i64 %119) #12
  br i1 %213, label %214, label %222

214:                                              ; preds = %163
  %215 = load %"class.quic::QuicUnackedPacketMap"*, %"class.quic::QuicUnackedPacketMap"** %109, align 8
  %216 = call dereferenceable(56) %"struct.quic::QuicTransmissionInfo"* @_ZNK4quic20QuicUnackedPacketMap19GetTransmissionInfoENS_16QuicPacketNumberE(%"class.quic::QuicUnackedPacketMap"* %215, i64 %119) #12
  call void @_ZNK4quic20QuicTransmissionInfo11DebugStringEv(%"class.std::__1::basic_string"* nonnull sret %14, %"struct.quic::QuicTransmissionInfo"* %216) #12
  %217 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %218 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %217, i64 0, i32 1, i32 0
  %219 = load i8, i8* %218, align 1
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %221 = load i64, i64* %220, align 8
  br label %226

222:                                              ; preds = %163
  %223 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %224 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %223, i64 0, i32 1, i32 0
  store i8 3, i8* %224, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %211, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0), i64 3, i1 false) #12
  %225 = getelementptr inbounds i8, i8* %211, i64 3
  store i8 0, i8* %225, align 1
  br label %226

226:                                              ; preds = %214, %222
  %227 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %217, %214 ], [ %223, %222 ]
  %228 = phi i64 [ %221, %214 ], [ undef, %222 ]
  %229 = phi i8 [ %219, %214 ], [ 3, %222 ]
  %230 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %227, i64 0, i32 1, i32 0
  %231 = icmp slt i8 %229, 0
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load i8*, i8** %232, align 8
  %234 = zext i8 %229 to i64
  %235 = select i1 %231, i8* %233, i8* %211
  %236 = select i1 %231, i64 %228, i64 %234
  %237 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %210, i8* %235, i64 %236) #12
  %238 = load i8, i8* %230, align 1
  %239 = icmp slt i8 %238, 0
  br i1 %239, label %240, label %242

240:                                              ; preds = %226
  %241 = load i8*, i8** %232, align 8
  call void @_ZdlPv(i8* %241) #13
  br label %242

242:                                              ; preds = %226, %240
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %211) #12
  %243 = load i8, i8* %176, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %242
  %246 = load i8*, i8** %179, align 8
  call void @_ZdlPv(i8* %246) #13
  br label %248

247:                                              ; preds = %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #12
  br label %256

248:                                              ; preds = %245, %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %173) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %124) #12
  br label %256

249:                                              ; preds = %108, %112
  %250 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %250, label %251, label %256

251:                                              ; preds = %249
  %252 = bitcast %"class.logging::LogMessage"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %252) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %15, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.7, i64 0, i64 0), i32 199, i32 2) #12
  %253 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %15, i64 0, i32 2
  %254 = bitcast %"class.std::__1::basic_ostringstream"* %253 to %"class.std::__1::basic_ostream"*
  %255 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %254, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.23, i64 0, i64 0), i64 85) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %252) #12
  br label %256

256:                                              ; preds = %251, %249, %248, %247, %82, %99
  %257 = load i64, i64* %19, align 8
  %258 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %258) #12
  %259 = load i64, i64* %9, align 8
  %260 = add i64 %259, %4
  store i64 %260, i64* %16, align 8
  %261 = call zeroext i1 @_ZN4quic24PacketNumberIndexedQueueINS_16BandwidthSampler27ConnectionStateOnSentPacketEE7EmplaceIJRNS_8QuicTimeERmmRS1_EEEbNS_16QuicPacketNumberEDpOT_(%"class.quic::PacketNumberIndexedQueue"* %83, i64 %257, %"class.quic::QuicTime"* nonnull dereferenceable(8) %7, i64* nonnull dereferenceable(8) %9, i64* nonnull dereferenceable(8) %16, %"class.quic::BandwidthSampler"* dereferenceable(328) %0)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %258) #12
  %262 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  %263 = xor i1 %262, true
  %264 = or i1 %261, %263
  br i1 %264, label %270, label %265

265:                                              ; preds = %256
  %266 = bitcast %"class.logging::LogMessage"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %266) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %17, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.7, i64 0, i64 0), i32 207, i32 2) #12
  %267 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %17, i64 0, i32 2
  %268 = bitcast %"class.std::__1::basic_ostringstream"* %267 to %"class.std::__1::basic_ostream"*
  %269 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %268, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.24, i64 0, i64 0), i64 98) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %266) #12
  br label %270

270:                                              ; preds = %265, %256, %6
  ret void
}

declare i64 @_ZNK4quic20QuicUnackedPacketMap15GetLeastUnackedEv(%"class.quic::QuicUnackedPacketMap"*) local_unnamed_addr #1

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4quiclsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_16QuicPacketNumberE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.quic::QuicPacketNumber"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4quic20QuicUnackedPacketMap11DebugStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.quic::QuicUnackedPacketMap"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.absl::AlphaNum", align 8
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = alloca %"class.absl::AlphaNum", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.absl::AlphaNum", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = bitcast %"class.absl::AlphaNum"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i64 0, i64 0), i8** %12, align 8
  %13 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %3, i64 0, i32 0, i32 1
  store i64 7, i64* %13, align 8
  %14 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicUnackedPacketMap"* %1, i64 0, i32 7, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicUnackedPacketMap"* %1, i64 0, i32 7, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, %16
  br i1 %19, label %20, label %24

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicUnackedPacketMap"* %1, i64 0, i32 7, i32 2, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, %18
  br label %24

24:                                               ; preds = %2, %20
  %25 = phi i64 [ %23, %20 ], [ %18, %2 ]
  %26 = sub i64 %25, %16
  %27 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 1, i64 0
  %28 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64 %26, i8* %27) #12
  %29 = ptrtoint i8* %28 to i64
  %30 = ptrtoint i8* %27 to i64
  %31 = sub i64 %29, %30
  %32 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* %27, i8** %32, align 8
  %33 = icmp sgt i64 %31, -1
  br i1 %33, label %35, label %34, !prof !3

34:                                               ; preds = %24
  call void @llvm.trap() #12
  unreachable

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 %31, i64* %36, align 8
  %37 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #12
  %38 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0), i8** %38, align 8
  %39 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 17, i64* %39, align 8
  %40 = bitcast %"class.absl::AlphaNum"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %40) #12
  %41 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #12
  %42 = getelementptr inbounds %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicUnackedPacketMap"* %1, i64 0, i32 8
  call void @_ZNK4quic16QuicPacketNumber8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.quic::QuicPacketNumber"* %42) #12
  %43 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = zext i8 %45 to i64
  %49 = bitcast %"class.absl::AlphaNum"* %6 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %7, %"class.std::__1::basic_string"** %49, align 8
  br label %58

50:                                               ; preds = %35
  %51 = bitcast %"class.std::__1::basic_string"* %7 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.absl::AlphaNum"* %6 to i64*
  store i64 %52, i64* %55, align 8
  %56 = icmp sgt i64 %54, -1
  br i1 %56, label %58, label %57, !prof !3

57:                                               ; preds = %50
  call void @llvm.trap() #12
  unreachable

58:                                               ; preds = %47, %50
  %59 = phi i64 [ %48, %47 ], [ %54, %50 ]
  %60 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 1
  store i64 %59, i64* %60, align 8
  %61 = bitcast %"class.absl::AlphaNum"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %61) #12
  %62 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 0
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30, i64 0, i64 0), i8** %62, align 8
  %63 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 1
  store i64 23, i64* %63, align 8
  %64 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #12
  %65 = getelementptr inbounds %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicUnackedPacketMap"* %1, i64 0, i32 2
  call void @_ZNK4quic16QuicPacketNumber8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.quic::QuicPacketNumber"* %65) #12
  %66 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #12
  %67 = getelementptr inbounds %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicUnackedPacketMap"* %1, i64 0, i32 5
  call void @_ZNK4quic16QuicPacketNumber8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %10, %"class.quic::QuicPacketNumber"* %67) #12
  %68 = getelementptr inbounds %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicUnackedPacketMap"* %1, i64 0, i32 9
  %69 = getelementptr inbounds %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicUnackedPacketMap"* %1, i64 0, i32 11
  call void @_ZN4absl6StrCatIJNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEA18_cS7_A20_cmA22_cmA2_cEEES7_RKNS_8AlphaNumESE_SE_SE_SE_DpRKT_(%"class.std::__1::basic_string"* sret %0, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %3, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %4, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %5, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %6, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, [18 x i8]* nonnull dereferenceable(18) @.str.31, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10, [20 x i8]* nonnull dereferenceable(20) @.str.32, i64* dereferenceable(8) %68, [22 x i8]* nonnull dereferenceable(22) @.str.33, i64* dereferenceable(8) %69, [2 x i8]* nonnull dereferenceable(2) @.str.6)
  %70 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %58
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #13
  br label %77

77:                                               ; preds = %58, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #12
  %78 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %84) #13
  br label %85

85:                                               ; preds = %77, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %61) #12
  %86 = load i8, i8* %44, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %90) #13
  br label %91

91:                                               ; preds = %85, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %40) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #12
  ret void
}

declare zeroext i1 @_ZNK4quic20QuicUnackedPacketMap9IsUnackedENS_16QuicPacketNumberE(%"class.quic::QuicUnackedPacketMap"*, i64) local_unnamed_addr #1

declare dereferenceable(56) %"struct.quic::QuicTransmissionInfo"* @_ZNK4quic20QuicUnackedPacketMap19GetTransmissionInfoENS_16QuicPacketNumberE(%"class.quic::QuicUnackedPacketMap"*, i64) local_unnamed_addr #1

declare void @_ZNK4quic20QuicTransmissionInfo11DebugStringEv(%"class.std::__1::basic_string"* sret, %"struct.quic::QuicTransmissionInfo"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4quic24PacketNumberIndexedQueueINS_16BandwidthSampler27ConnectionStateOnSentPacketEE7EmplaceIJRNS_8QuicTimeERmmRS1_EEEbNS_16QuicPacketNumberEDpOT_(%"class.quic::PacketNumberIndexedQueue"*, i64, %"class.quic::QuicTime"* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8), %"class.quic::BandwidthSampler"* dereferenceable(328)) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.quic::QuicPacketNumber", align 8
  %8 = alloca %"class.logging::LogMessage", align 8
  %9 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %7, i64 0, i32 0
  store i64 %1, i64* %9, align 8
  %10 = call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* nonnull %7) #12
  br i1 %10, label %18, label %11

11:                                               ; preds = %6
  %12 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %12, label %13, label %63

13:                                               ; preds = %11
  %14 = bitcast %"class.logging::LogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %14) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %8, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.34, i64 0, i64 0), i32 150, i32 2) #12
  %15 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %8, i64 0, i32 2
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %15 to %"class.std::__1::basic_ostream"*
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.35, i64 0, i64 0), i64 44) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %14) #12
  br label %63

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 0
  %24 = call dereferenceable(88) %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* @_ZN6quiche19QuicheCircularDequeIN4quic24PacketNumberIndexedQueueINS1_16BandwidthSampler27ConnectionStateOnSentPacketEE12EntryWrapperELm3ENSt3__19allocatorIS6_EEE12emplace_backIJRNS1_8QuicTimeERmmRS3_EEERS6_DpOT_(%"class.quiche::QuicheCircularDeque"* %23, %"class.quic::QuicTime"* dereferenceable(8) %2, i64* dereferenceable(8) %3, i64* dereferenceable(8) %4, %"class.quic::BandwidthSampler"* dereferenceable(328) %5)
  store i64 1, i64* %19, align 8
  %25 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 2, i32 0
  %26 = load i64, i64* %9, align 8
  store i64 %26, i64* %25, align 8
  br label %63

27:                                               ; preds = %18
  %28 = load i64, i64* %9, align 8
  %29 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 2, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp ult i64 %34, %32
  br i1 %35, label %36, label %40

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 0, i32 2, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, %34
  br label %40

40:                                               ; preds = %27, %36
  %41 = phi i64 [ %39, %36 ], [ %34, %27 ]
  %42 = xor i64 %32, -1
  %43 = add i64 %30, %42
  %44 = add i64 %43, %41
  %45 = icmp ugt i64 %28, %44
  br i1 %45, label %46, label %63

46:                                               ; preds = %40
  %47 = sub i64 %28, %30
  %48 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 0
  br i1 %35, label %49, label %53

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 0, i32 2, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, %34
  br label %53

53:                                               ; preds = %46, %49
  %54 = phi i64 [ %52, %49 ], [ %34, %46 ]
  %55 = sub i64 %54, %32
  %56 = icmp ugt i64 %47, %55
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  call void @_ZN6quiche19QuicheCircularDequeIN4quic24PacketNumberIndexedQueueINS1_16BandwidthSampler27ConnectionStateOnSentPacketEE12EntryWrapperELm3ENSt3__19allocatorIS6_EEE14ResizeInternalIJEEEvmDpOT_(%"class.quiche::QuicheCircularDeque"* %48, i64 %47) #12
  %58 = load i64, i64* %19, align 8
  br label %59

59:                                               ; preds = %57, %53
  %60 = phi i64 [ %58, %57 ], [ %20, %53 ]
  %61 = add i64 %60, 1
  store i64 %61, i64* %19, align 8
  %62 = call dereferenceable(88) %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* @_ZN6quiche19QuicheCircularDequeIN4quic24PacketNumberIndexedQueueINS1_16BandwidthSampler27ConnectionStateOnSentPacketEE12EntryWrapperELm3ENSt3__19allocatorIS6_EEE12emplace_backIJRNS1_8QuicTimeERmmRS3_EEERS6_DpOT_(%"class.quiche::QuicheCircularDeque"* %48, %"class.quic::QuicTime"* dereferenceable(8) %2, i64* dereferenceable(8) %3, i64* dereferenceable(8) %4, %"class.quic::BandwidthSampler"* dereferenceable(328) %5)
  br label %63

63:                                               ; preds = %40, %13, %11, %59, %22
  %64 = phi i1 [ true, %22 ], [ true, %59 ], [ false, %40 ], [ false, %11 ], [ false, %13 ]
  ret i1 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16BandwidthSampler16OnPacketNeuteredENS_16QuicPacketNumberE(%"class.quic::BandwidthSampler"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.quic::QuicPacketNumber", align 8
  %4 = bitcast %"class.quic::QuicPacketNumber"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %3, i64 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* nonnull %3) #12
  br i1 %6, label %7, label %43

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %43, label %11

11:                                               ; preds = %7
  %12 = load i64, i64* %5, align 8
  %13 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 2, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %43, label %16

16:                                               ; preds = %11
  %17 = sub i64 %12, %14
  %18 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %21, %19
  br i1 %22, label %23, label %27

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 0, i32 2, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, %21
  br label %27

27:                                               ; preds = %23, %16
  %28 = phi i64 [ %26, %23 ], [ %21, %16 ]
  %29 = sub i64 %28, %19
  %30 = icmp ult i64 %17, %29
  br i1 %30, label %31, label %43

31:                                               ; preds = %27
  %32 = add i64 %19, %17
  %33 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 0, i32 2, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp ult i64 %32, %34
  %36 = select i1 %35, i64 0, i64 %34
  %37 = sub i64 %32, %36
  %38 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 0, i32 2, i32 0
  %39 = load %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"*, %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"** %38, align 8
  %40 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %39, i64 %37, i32 1
  %41 = load i8, i8* %40, align 8, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %31, %27, %11, %7, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12
  br label %82

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %39, i64 %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12
  %46 = icmp eq %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %45, null
  br i1 %46, label %82, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %39, i64 %37, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 4
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, %49
  store i64 %52, i64* %50, align 8
  store i8 0, i8* %40, align 8
  %53 = load i64, i64* %8, align 8
  %54 = add i64 %53, -1
  store i64 %54, i64* %8, align 8
  %55 = load i64, i64* %13, align 8
  %56 = icmp eq i64 %55, %1
  br i1 %56, label %57, label %82

57:                                               ; preds = %47
  %58 = load i64, i64* %18, align 8
  %59 = load i64, i64* %20, align 8
  %60 = icmp eq i64 %58, %59
  br i1 %60, label %80, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 0, i32 2, i32 0
  %63 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 2
  br label %64

64:                                               ; preds = %70, %61
  %65 = phi i64 [ %58, %61 ], [ %77, %70 ]
  %66 = load %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"*, %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"** %62, align 8
  %67 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %66, i64 %65, i32 1
  %68 = load i8, i8* %67, align 8, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %64
  %71 = load i64, i64* %33, align 8
  %72 = add i64 %71, -1
  %73 = icmp eq i64 %72, %65
  %74 = add i64 %65, 1
  %75 = select i1 %73, i64 0, i64 %74
  store i64 %75, i64* %18, align 8
  %76 = call i64 @_ZN4quic16QuicPacketNumberppEi(%"class.quic::QuicPacketNumber"* %63, i32 0) #12
  %77 = load i64, i64* %18, align 8
  %78 = load i64, i64* %20, align 8
  %79 = icmp eq i64 %77, %78
  br i1 %79, label %80, label %64

80:                                               ; preds = %70, %57
  %81 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12, i32 2
  call void @_ZN4quic16QuicPacketNumber5ClearEv(%"class.quic::QuicPacketNumber"* %81) #12
  br label %82

82:                                               ; preds = %64, %43, %44, %47, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16BandwidthSampler17OnCongestionEventENS_8QuicTimeERKNSt3__16vectorINS_11AckedPacketENS2_9allocatorIS4_EEEERKNS3_INS_10LostPacketENS5_ISA_EEEENS_13QuicBandwidthESF_m(%"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* noalias nocapture sret, %"class.quic::BandwidthSampler"*, i64, %"class.std::__1::vector.54"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.61"* nocapture readonly dereferenceable(24), i64, i64, i64) unnamed_addr #0 align 2 {
  %9 = alloca %"class.quic::QuicPacketNumber", align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.quic::SendTimeState", align 8
  %13 = alloca %"struct.quic::SendTimeState", align 8
  %14 = alloca %"struct.quic::BandwidthSample", align 8
  store i64 %5, i64* %10, align 8
  store i64 %6, i64* %11, align 8
  %15 = bitcast %"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 -86, i64 40, i1 false)
  %16 = getelementptr inbounds %"struct.quic::BandwidthSamplerInterface::CongestionEventSample", %"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* %0, i64 0, i32 0, i32 0
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"struct.quic::BandwidthSamplerInterface::CongestionEventSample", %"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* %0, i64 0, i32 1
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"struct.quic::BandwidthSamplerInterface::CongestionEventSample", %"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* %0, i64 0, i32 2, i32 0
  %19 = getelementptr inbounds %"struct.quic::BandwidthSamplerInterface::CongestionEventSample", %"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* %0, i64 0, i32 3
  %20 = bitcast i64* %18 to <2 x i64>*
  store <2 x i64> <i64 9223372036854775807, i64 0>, <2 x i64>* %20, align 8
  %21 = getelementptr inbounds %"struct.quic::BandwidthSamplerInterface::CongestionEventSample", %"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* %0, i64 0, i32 4, i32 0
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds %"struct.quic::BandwidthSamplerInterface::CongestionEventSample", %"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* %0, i64 0, i32 4, i32 1
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %"struct.quic::BandwidthSamplerInterface::CongestionEventSample", %"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* %0, i64 0, i32 4, i32 2
  %24 = bitcast i64* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 40, i1 false) #12
  %25 = getelementptr inbounds %"struct.quic::SendTimeState", %"struct.quic::SendTimeState"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #12
  %26 = bitcast %"struct.quic::SendTimeState"* %12 to i64*
  store i64 -6148914691236517206, i64* %26, align 8
  store i8 0, i8* %25, align 8
  %27 = getelementptr inbounds %"struct.quic::SendTimeState", %"struct.quic::SendTimeState"* %12, i64 0, i32 1
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %"struct.quic::SendTimeState", %"struct.quic::SendTimeState"* %12, i64 0, i32 2
  %29 = bitcast i64* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 32, i1 false) #12
  %30 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %4, i64 0, i32 0, i32 0
  %31 = load %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %4, i64 0, i32 0, i32 1
  %33 = load %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"** %32, align 8
  %34 = icmp eq %"struct.quic::LostPacket"* %31, %33
  br i1 %34, label %49, label %35

35:                                               ; preds = %8
  %36 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 3
  %37 = bitcast %"class.quic::QuicPacketNumber"* %9 to i8*
  %38 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %9, i64 0, i32 0
  %39 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 1
  %40 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 2, i32 0
  %41 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 0, i32 0
  %42 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 0, i32 1
  %43 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 0, i32 2, i32 1
  %44 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 0, i32 2, i32 0
  %45 = bitcast %"struct.quic::SendTimeState"* %12 to i64*
  %46 = load i64, i64* %45, align 8
  br label %56

47:                                               ; preds = %108
  store i64 %109, i64* %45, align 8
  %48 = trunc i64 %109 to i8
  br label %49

49:                                               ; preds = %47, %8
  %50 = phi i8 [ %48, %47 ], [ 0, %8 ]
  %51 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %3, i64 0, i32 0, i32 0
  %52 = load %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %3, i64 0, i32 0, i32 1
  %54 = load %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"** %53, align 8
  %55 = icmp eq %"struct.quic::AckedPacket"* %52, %54
  br i1 %55, label %112, label %113

56:                                               ; preds = %35, %108
  %57 = phi i64 [ %46, %35 ], [ %109, %108 ]
  %58 = phi %"struct.quic::LostPacket"* [ %31, %35 ], [ %110, %108 ]
  %59 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %58, i64 0, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %58, i64 0, i32 1
  %62 = load i16, i16* %61, align 8
  %63 = zext i16 %62 to i64
  %64 = load i64, i64* %36, align 8, !noalias !4
  %65 = add i64 %64, %63
  store i64 %65, i64* %36, align 8, !noalias !4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #12, !noalias !4
  store i64 %60, i64* %38, align 8, !noalias !4
  %66 = call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* nonnull %9) #12, !noalias !4
  br i1 %66, label %67, label %96

67:                                               ; preds = %56
  %68 = load i64, i64* %39, align 8, !noalias !4
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %96, label %70

70:                                               ; preds = %67
  %71 = load i64, i64* %38, align 8, !noalias !4
  %72 = load i64, i64* %40, align 8, !noalias !4
  %73 = icmp ult i64 %71, %72
  br i1 %73, label %96, label %74

74:                                               ; preds = %70
  %75 = sub i64 %71, %72
  %76 = load i64, i64* %41, align 8, !noalias !4
  %77 = load i64, i64* %42, align 8, !noalias !4
  %78 = icmp ult i64 %77, %76
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = load i64, i64* %43, align 8, !noalias !4
  %81 = add i64 %80, %77
  br label %82

82:                                               ; preds = %79, %74
  %83 = phi i64 [ %81, %79 ], [ %77, %74 ]
  %84 = sub i64 %83, %76
  %85 = icmp ult i64 %75, %84
  br i1 %85, label %86, label %96

86:                                               ; preds = %82
  %87 = add i64 %76, %75
  %88 = load i64, i64* %43, align 8, !noalias !4
  %89 = icmp ult i64 %87, %88
  %90 = select i1 %89, i64 0, i64 %88
  %91 = sub i64 %87, %90
  %92 = load %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"*, %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"** %44, align 8, !noalias !4
  %93 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %92, i64 %91, i32 1
  %94 = load i8, i8* %93, align 8, !range !2, !noalias !4
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %86, %82, %70, %67, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #12, !noalias !4
  br label %108

97:                                               ; preds = %86
  %98 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %92, i64 %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #12, !noalias !4
  %99 = icmp eq %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %98, null
  br i1 %99, label %108, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %92, i64 %91, i32 0, i32 5
  %102 = bitcast %"struct.quic::SendTimeState"* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %92, i64 %91, i32 0, i32 5, i32 2
  %105 = bitcast i64* %104 to i8*
  %106 = and i64 %103, -256
  %107 = or i64 %106, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %105, i64 32, i1 false)
  br label %108

108:                                              ; preds = %97, %96, %100
  %109 = phi i64 [ %57, %97 ], [ %57, %96 ], [ %107, %100 ]
  %110 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %58, i64 1
  %111 = icmp eq %"struct.quic::LostPacket"* %110, %33
  br i1 %111, label %47, label %56

112:                                              ; preds = %49
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 8 %25, i64 40, i1 false)
  br label %198

113:                                              ; preds = %49
  %114 = getelementptr inbounds %"struct.quic::SendTimeState", %"struct.quic::SendTimeState"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %114) #12
  %115 = bitcast %"struct.quic::SendTimeState"* %13 to i64*
  store i64 -6148914691236517206, i64* %115, align 8
  store i8 0, i8* %114, align 8
  %116 = getelementptr inbounds %"struct.quic::SendTimeState", %"struct.quic::SendTimeState"* %13, i64 0, i32 1
  store i8 0, i8* %116, align 1
  %117 = getelementptr inbounds %"struct.quic::SendTimeState", %"struct.quic::SendTimeState"* %13, i64 0, i32 2
  %118 = bitcast i64* %117 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 32, i1 false) #12
  %119 = bitcast %"struct.quic::BandwidthSample"* %14 to i8*
  %120 = getelementptr inbounds %"struct.quic::BandwidthSample", %"struct.quic::BandwidthSample"* %14, i64 0, i32 2, i32 0
  %121 = getelementptr inbounds %"struct.quic::BandwidthSample", %"struct.quic::BandwidthSample"* %14, i64 0, i32 1
  %122 = getelementptr inbounds %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta"* %121, i64 0, i32 0
  %123 = getelementptr inbounds %"struct.quic::BandwidthSamplerInterface::CongestionEventSample", %"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* %0, i64 0, i32 2
  %124 = getelementptr inbounds %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta"* %123, i64 0, i32 0
  %125 = getelementptr inbounds %"struct.quic::BandwidthSample", %"struct.quic::BandwidthSample"* %14, i64 0, i32 0, i32 0
  %126 = getelementptr inbounds %"struct.quic::BandwidthSample", %"struct.quic::BandwidthSample"* %14, i64 0, i32 2, i32 1
  %127 = bitcast %"class.quic::BandwidthSampler"* %1 to i64 (%"class.quic::BandwidthSampler"*)***
  %128 = getelementptr inbounds %"struct.quic::SendTimeState", %"struct.quic::SendTimeState"* %13, i64 0, i32 3
  br label %131

129:                                              ; preds = %164
  %130 = icmp eq i8 %50, 0
  br i1 %130, label %183, label %170

131:                                              ; preds = %113, %164
  %132 = phi i64 [ 0, %113 ], [ %165, %164 ]
  %133 = phi i64 [ 0, %113 ], [ %166, %164 ]
  %134 = phi i64 [ 9223372036854775807, %113 ], [ %167, %164 ]
  %135 = phi %"struct.quic::AckedPacket"* [ %52, %113 ], [ %168, %164 ]
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %119) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 56, i1 false)
  %136 = getelementptr inbounds %"struct.quic::AckedPacket", %"struct.quic::AckedPacket"* %135, i64 0, i32 0, i32 0
  %137 = load i64, i64* %136, align 8
  call void @_ZN4quic16BandwidthSampler20OnPacketAcknowledgedENS_8QuicTimeENS_16QuicPacketNumberE(%"struct.quic::BandwidthSample"* nonnull sret %14, %"class.quic::BandwidthSampler"* %1, i64 %2, i64 %137)
  %138 = load i8, i8* %120, align 8, !range !2
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %164, label %140

140:                                              ; preds = %131
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %114, i8* align 8 %120, i64 40, i1 false)
  %141 = load i64, i64* %122, align 8
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %148, label %143

143:                                              ; preds = %140
  %144 = icmp slt i64 %141, %134
  %145 = select i1 %144, %"class.quic::QuicTime::Delta"* %121, %"class.quic::QuicTime::Delta"* %123
  %146 = getelementptr inbounds %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta"* %145, i64 0, i32 0
  %147 = load i64, i64* %146, align 8
  store i64 %147, i64* %124, align 8
  br label %148

148:                                              ; preds = %143, %140
  %149 = phi i64 [ %147, %143 ], [ %134, %140 ]
  %150 = load i64, i64* %125, align 8
  %151 = icmp slt i64 %133, %150
  br i1 %151, label %152, label %154

152:                                              ; preds = %148
  store i64 %150, i64* %16, align 8
  %153 = load i8, i8* %126, align 1, !range !2
  store i8 %153, i8* %17, align 8
  br label %154

154:                                              ; preds = %152, %148
  %155 = phi i64 [ %150, %152 ], [ %133, %148 ]
  %156 = load i64 (%"class.quic::BandwidthSampler"*)**, i64 (%"class.quic::BandwidthSampler"*)*** %127, align 8
  %157 = getelementptr inbounds i64 (%"class.quic::BandwidthSampler"*)*, i64 (%"class.quic::BandwidthSampler"*)** %156, i64 8
  %158 = load i64 (%"class.quic::BandwidthSampler"*)*, i64 (%"class.quic::BandwidthSampler"*)** %157, align 8
  %159 = call i64 %158(%"class.quic::BandwidthSampler"* %1) #12
  %160 = load i64, i64* %128, align 8
  %161 = sub i64 %159, %160
  %162 = icmp ugt i64 %161, %132
  br i1 %162, label %163, label %164

163:                                              ; preds = %154
  store i64 %161, i64* %19, align 8
  br label %164

164:                                              ; preds = %131, %163, %154
  %165 = phi i64 [ %132, %154 ], [ %161, %163 ], [ %132, %131 ]
  %166 = phi i64 [ %155, %154 ], [ %155, %163 ], [ %133, %131 ]
  %167 = phi i64 [ %149, %154 ], [ %149, %163 ], [ %134, %131 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %119) #12
  %168 = getelementptr inbounds %"struct.quic::AckedPacket", %"struct.quic::AckedPacket"* %135, i64 1
  %169 = icmp eq %"struct.quic::AckedPacket"* %168, %54
  br i1 %169, label %129, label %131

170:                                              ; preds = %129
  %171 = load i8, i8* %114, align 8, !range !2
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %183, label %173

173:                                              ; preds = %170
  %174 = load %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"** %32, align 8
  %175 = getelementptr inbounds %"struct.quic::LostPacket", %"struct.quic::LostPacket"* %174, i64 -1, i32 0, i32 0
  %176 = load i64, i64* %175, align 8
  %177 = load %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"** %53, align 8
  %178 = getelementptr inbounds %"struct.quic::AckedPacket", %"struct.quic::AckedPacket"* %177, i64 -1, i32 0, i32 0
  %179 = load i64, i64* %178, align 8
  %180 = icmp ugt i64 %176, %179
  %181 = select i1 %180, %"struct.quic::SendTimeState"* %12, %"struct.quic::SendTimeState"* %13
  %182 = getelementptr inbounds %"struct.quic::SendTimeState", %"struct.quic::SendTimeState"* %181, i64 0, i32 0
  br label %183

183:                                              ; preds = %170, %129, %173
  %184 = phi i8* [ %182, %173 ], [ %114, %129 ], [ %25, %170 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 8 %184, i64 40, i1 false)
  %185 = getelementptr inbounds %"struct.quic::BandwidthSamplerInterface::CongestionEventSample", %"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* %0, i64 0, i32 0
  %186 = icmp sgt i64 %166, %5
  %187 = bitcast i64* %10 to %"class.quic::QuicBandwidth"*
  %188 = select i1 %186, %"class.quic::QuicBandwidth"* %185, %"class.quic::QuicBandwidth"* %187
  %189 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %188, i64 0, i32 0
  %190 = load i64, i64* %189, align 8
  store i64 %190, i64* %10, align 8
  %191 = icmp slt i64 %190, %6
  %192 = bitcast i64* %11 to %"class.quic::QuicBandwidth"*
  %193 = select i1 %191, %"class.quic::QuicBandwidth"* %187, %"class.quic::QuicBandwidth"* %192
  %194 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %193, i64 0, i32 0
  %195 = load i64, i64* %194, align 8
  %196 = call i64 @_ZN4quic16BandwidthSampler13OnAckEventEndENS_13QuicBandwidthEm(%"class.quic::BandwidthSampler"* %1, i64 %195, i64 %7)
  %197 = getelementptr inbounds %"struct.quic::BandwidthSamplerInterface::CongestionEventSample", %"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* %0, i64 0, i32 5
  store i64 %196, i64* %197, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %114) #12
  br label %198

198:                                              ; preds = %183, %112
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16BandwidthSampler12OnPacketLostENS_16QuicPacketNumberEt(%"struct.quic::SendTimeState"* noalias nocapture sret, %"class.quic::BandwidthSampler"* nocapture, i64, i16 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.quic::QuicPacketNumber", align 8
  %6 = getelementptr inbounds %"struct.quic::SendTimeState", %"struct.quic::SendTimeState"* %0, i64 0, i32 0
  %7 = bitcast %"struct.quic::SendTimeState"* %0 to i64*
  store i64 -6148914691236517206, i64* %7, align 8
  store i8 0, i8* %6, align 8
  %8 = getelementptr inbounds %"struct.quic::SendTimeState", %"struct.quic::SendTimeState"* %0, i64 0, i32 1
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %"struct.quic::SendTimeState", %"struct.quic::SendTimeState"* %0, i64 0, i32 2
  %10 = bitcast i64* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #12
  %11 = zext i16 %3 to i64
  %12 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, %11
  store i64 %14, i64* %12, align 8
  %15 = bitcast %"class.quic::QuicPacketNumber"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %5, i64 0, i32 0
  store i64 %2, i64* %16, align 8
  %17 = call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* nonnull %5) #12
  br i1 %17, label %18, label %54

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %54, label %22

22:                                               ; preds = %18
  %23 = load i64, i64* %16, align 8
  %24 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 2, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp ult i64 %23, %25
  br i1 %26, label %54, label %27

27:                                               ; preds = %22
  %28 = sub i64 %23, %25
  %29 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %32, %30
  br i1 %33, label %34, label %38

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 0, i32 2, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, %32
  br label %38

38:                                               ; preds = %34, %27
  %39 = phi i64 [ %37, %34 ], [ %32, %27 ]
  %40 = sub i64 %39, %30
  %41 = icmp ult i64 %28, %40
  br i1 %41, label %42, label %54

42:                                               ; preds = %38
  %43 = add i64 %30, %28
  %44 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 0, i32 2, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp ult i64 %43, %45
  %47 = select i1 %46, i64 0, i64 %45
  %48 = sub i64 %43, %47
  %49 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 0, i32 2, i32 0
  %50 = load %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"*, %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"** %49, align 8
  %51 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %50, i64 %48, i32 1
  %52 = load i8, i8* %51, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %22, %18, %4, %38, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  br label %60

55:                                               ; preds = %42
  %56 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %50, i64 %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  %57 = icmp eq %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %50, i64 %48, i32 0, i32 5, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %59, i64 40, i1 false) #12
  store i8 1, i8* %6, align 8
  br label %60

60:                                               ; preds = %54, %55, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16BandwidthSampler20OnPacketAcknowledgedENS_8QuicTimeENS_16QuicPacketNumberE(%"struct.quic::BandwidthSample"* noalias nocapture sret, %"class.quic::BandwidthSampler"*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.quic::QuicPacketNumber", align 8
  %6 = alloca %"struct.quic::BandwidthSample", align 8
  %7 = bitcast %"class.quic::QuicPacketNumber"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %5, i64 0, i32 0
  store i64 %3, i64* %8, align 8
  %9 = call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* nonnull %5) #12
  br i1 %9, label %10, label %47

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %10
  %15 = load i64, i64* %8, align 8
  %16 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 2, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %15, %17
  br i1 %18, label %47, label %19

19:                                               ; preds = %14
  %20 = sub i64 %15, %17
  %21 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, %22
  br i1 %25, label %26, label %30

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 0, i32 2, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, %24
  br label %30

30:                                               ; preds = %26, %19
  %31 = phi i64 [ %29, %26 ], [ %24, %19 ]
  %32 = sub i64 %31, %22
  %33 = icmp ult i64 %20, %32
  br i1 %33, label %34, label %47

34:                                               ; preds = %30
  %35 = add i64 %22, %20
  %36 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 0, i32 2, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = icmp ult i64 %35, %37
  %39 = select i1 %38, i64 0, i64 %37
  %40 = sub i64 %35, %39
  %41 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 12, i32 0, i32 2, i32 0
  %42 = load %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"*, %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"** %41, align 8
  %43 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %42, i64 %40
  %44 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %42, i64 %40, i32 1
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %14, %10, %4, %30, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  br label %50

48:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %49 = icmp eq %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %43, null
  br i1 %49, label %50, label %54

50:                                               ; preds = %47, %48
  %51 = getelementptr inbounds %"struct.quic::BandwidthSample", %"struct.quic::BandwidthSample"* %0, i64 0, i32 2, i32 2
  %52 = bitcast i64* %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 32, i1 false) #12
  %53 = bitcast %"struct.quic::BandwidthSample"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 18, i1 false) #12
  br label %58

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %43, i64 0, i32 0
  %56 = bitcast %"struct.quic::BandwidthSample"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %56) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 56, i1 false)
  call void @_ZN4quic16BandwidthSampler25OnPacketAcknowledgedInnerENS_8QuicTimeENS_16QuicPacketNumberERKNS0_27ConnectionStateOnSentPacketE(%"struct.quic::BandwidthSample"* nonnull sret %6, %"class.quic::BandwidthSampler"* %1, i64 %2, i64 %3, %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket"* nonnull dereferenceable(80) %55)
  %57 = bitcast %"struct.quic::BandwidthSample"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 8 %56, i64 56, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %56) #12
  br label %58

58:                                               ; preds = %54, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4quic16BandwidthSampler13OnAckEventEndENS_13QuicBandwidthEm(%"class.quic::BandwidthSampler"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 18
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %93, label %10

10:                                               ; preds = %3
  store i64 %5, i64* %6, align 8
  %11 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 7, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 17, i32 1, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 17, i32 2
  store i64 %8, i64* %17, align 8
  store i64 %12, i64* %13, align 8
  %18 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 17, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %18, align 8
  br label %42

21:                                               ; preds = %10
  %22 = sub nsw i64 %12, %14
  %23 = mul nsw i64 %22, %1
  %24 = sdiv i64 %23, 8
  %25 = udiv i64 %24, 1000000
  %26 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 17, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = uitofp i64 %27 to double
  %29 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 17, i32 4
  %30 = load double, double* %29, align 8
  %31 = uitofp i64 %25 to double
  %32 = fmul double %30, %31
  %33 = fcmp ult double %32, %28
  br i1 %33, label %38, label %34

34:                                               ; preds = %21
  store i64 %8, i64* %26, align 8
  store i64 %12, i64* %13, align 8
  %35 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 17, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %35, align 8
  br label %42

38:                                               ; preds = %21
  %39 = add i64 %27, %8
  store i64 %39, i64* %26, align 8
  %40 = sub i64 %39, %25
  %41 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 17, i32 0
  tail call void @_ZN4quic14WindowedFilterImNS_9MaxFilterImEEmmE6UpdateEmm(%"class.quic::WindowedFilter"* %41, i64 %40, i64 %2) #12
  br label %42

42:                                               ; preds = %16, %34, %38
  %43 = phi i64 [ 0, %16 ], [ 0, %34 ], [ %40, %38 ]
  %44 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 19
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp ne i8 %45, 0
  %47 = icmp eq i64 %43, 0
  %48 = and i1 %47, %46
  br i1 %48, label %49, label %93

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 14
  %51 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 13, i32 0, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 0
  %54 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 13, i32 0, i64 0
  %55 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 13, i32 0, i64 1
  %56 = select i1 %53, %"struct.quic::BandwidthSampler::AckPoint"* %55, %"struct.quic::BandwidthSampler::AckPoint"* %54
  %57 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %50, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 14, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = icmp ult i64 %60, %58
  %62 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 14, i32 2, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = select i1 %61, i64 %63, i64 0
  %65 = sub i64 1, %58
  %66 = add i64 %65, %60
  %67 = add i64 %66, %64
  %68 = icmp eq i64 %63, 0
  %69 = add i64 %63, -1
  %70 = select i1 %68, i64 0, i64 %69
  %71 = icmp ult i64 %70, %67
  br i1 %71, label %72, label %80

72:                                               ; preds = %49
  %73 = lshr i64 %70, 2
  %74 = icmp ugt i64 %73, 3
  %75 = select i1 %74, i64 %73, i64 3
  %76 = add i64 %75, %70
  %77 = icmp ult i64 %67, %76
  %78 = select i1 %77, i64 %76, i64 %67
  tail call void @_ZN6quiche19QuicheCircularDequeIN4quic16BandwidthSampler8AckPointELm3ENSt3__19allocatorIS3_EEE8RelocateEm(%"class.quiche::QuicheCircularDeque.0"* %50, i64 %78) #12
  %79 = load i64, i64* %59, align 8
  br label %80

80:                                               ; preds = %49, %72
  %81 = phi i64 [ %60, %49 ], [ %79, %72 ]
  %82 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 14, i32 2, i32 0
  %83 = load %"struct.quic::BandwidthSampler::AckPoint"*, %"struct.quic::BandwidthSampler::AckPoint"** %82, align 8
  %84 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %83, i64 %81
  %85 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %84 to i8*
  %86 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 16, i1 false) #12
  %87 = load i64, i64* %59, align 8
  %88 = load i64, i64* %62, align 8
  %89 = add i64 %88, -1
  %90 = icmp eq i64 %89, %87
  %91 = add i64 %87, 1
  %92 = select i1 %90, i64 0, i64 %91
  store i64 %92, i64* %59, align 8
  br label %93

93:                                               ; preds = %42, %80, %3
  %94 = phi i64 [ 0, %3 ], [ 0, %80 ], [ %43, %42 ]
  ret i64 %94
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16BandwidthSampler25OnPacketAcknowledgedInnerENS_8QuicTimeENS_16QuicPacketNumberERKNS0_27ConnectionStateOnSentPacketE(%"struct.quic::BandwidthSample"* noalias nocapture sret, %"class.quic::BandwidthSampler"*, i64, i64, %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = alloca %"struct.quic::BandwidthSampler::AckPoint", align 8
  %8 = getelementptr inbounds %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket", %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket"* %4, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, %9
  store i64 %12, i64* %10, align 8
  %13 = getelementptr inbounds %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket", %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket"* %4, i64 0, i32 5, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 5
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket", %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket"* %4, i64 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 6, i32 0
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 7, i32 0
  store i64 %2, i64* %19, align 8
  %20 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 19
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %37, label %23

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 13, i32 0, i64 1, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp sgt i64 %25, %2
  br i1 %26, label %34, label %27

27:                                               ; preds = %23
  %28 = icmp slt i64 %25, %2
  br i1 %28, label %29, label %35

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 13, i32 0, i64 0, i32 0, i32 0
  store i64 %25, i64* %30, align 8
  %31 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 13, i32 0, i64 1, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 13, i32 0, i64 0, i32 1
  store i64 %32, i64* %33, align 8
  br label %34

34:                                               ; preds = %23, %29
  store i64 %2, i64* %24, align 8
  br label %35

35:                                               ; preds = %34, %27
  %36 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 13, i32 0, i64 1, i32 1
  store i64 %12, i64* %36, align 8
  br label %37

37:                                               ; preds = %5, %35
  %38 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 9
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 11
  %43 = tail call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* %42) #12
  br i1 %43, label %44, label %48

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %1, i64 0, i32 11, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %3
  br i1 %47, label %48, label %49

48:                                               ; preds = %44, %41
  store i8 0, i8* %38, align 8
  br label %49

49:                                               ; preds = %37, %44, %48
  %50 = getelementptr inbounds %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket", %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket"* %4, i64 0, i32 3, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %64

53:                                               ; preds = %49
  %54 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %54, label %55, label %60

55:                                               ; preds = %53
  %56 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %56) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.7, i64 0, i64 0), i32 359, i32 2) #12
  %57 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %58 = bitcast %"class.std::__1::basic_ostringstream"* %57 to %"class.std::__1::basic_ostream"*
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %58, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25, i64 0, i64 0), i64 47) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %56) #12
  br label %60

60:                                               ; preds = %53, %55
  %61 = getelementptr inbounds %"struct.quic::BandwidthSample", %"struct.quic::BandwidthSample"* %0, i64 0, i32 2, i32 2
  %62 = bitcast i64* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 32, i1 false) #12
  %63 = bitcast %"struct.quic::BandwidthSample"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 18, i1 false) #12
  br label %131

64:                                               ; preds = %49
  %65 = load i64, i64* %16, align 8
  %66 = icmp sgt i64 %65, %51
  br i1 %66, label %67, label %81

67:                                               ; preds = %64
  %68 = load i64, i64* %13, align 8
  %69 = getelementptr inbounds %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket", %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket"* %4, i64 0, i32 2
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %68, %70
  %72 = sub nsw i64 %65, %51
  %73 = icmp eq i64 %71, 0
  br i1 %73, label %81, label %74

74:                                               ; preds = %67
  %75 = mul i64 %71, 8000000
  %76 = icmp slt i64 %75, %72
  br i1 %76, label %81, label %77

77:                                               ; preds = %74
  %78 = sdiv i64 %75, %72
  %79 = icmp sgt i64 %78, 0
  %80 = select i1 %79, i64 %78, i64 0
  br label %81

81:                                               ; preds = %77, %74, %67, %64
  %82 = phi i64 [ 9223372036854775807, %64 ], [ %80, %77 ], [ 0, %67 ], [ 1, %74 ]
  %83 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #12
  %84 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %7, i64 0, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %7, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 16, i1 false) #12
  %86 = load i8, i8* %20, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %94, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket", %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket"* %4, i64 0, i32 5, i32 3
  %90 = load i64, i64* %89, align 8
  %91 = call zeroext i1 @_ZN4quic16BandwidthSampler13ChooseA0PointEmPNS0_8AckPointE(%"class.quic::BandwidthSampler"* %1, i64 %90, %"struct.quic::BandwidthSampler::AckPoint"* nonnull %7)
  br i1 %91, label %92, label %94

92:                                               ; preds = %88
  %93 = load i64, i64* %84, align 8
  br label %99

94:                                               ; preds = %81, %88
  %95 = getelementptr inbounds %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket", %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket"* %4, i64 0, i32 4, i32 0
  %96 = load i64, i64* %95, align 8
  store i64 %96, i64* %84, align 8
  %97 = getelementptr inbounds %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket", %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket"* %4, i64 0, i32 5, i32 3
  %98 = load i64, i64* %97, align 8
  store i64 %98, i64* %85, align 8
  br label %99

99:                                               ; preds = %92, %94
  %100 = phi i64 [ %93, %92 ], [ %96, %94 ]
  %101 = icmp slt i64 %100, %2
  br i1 %101, label %106, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"struct.quic::BandwidthSample", %"struct.quic::BandwidthSample"* %0, i64 0, i32 2, i32 2
  %104 = bitcast i64* %103 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 32, i1 false) #12
  %105 = bitcast %"struct.quic::BandwidthSample"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %105, i8 0, i64 18, i1 false) #12
  br label %130

106:                                              ; preds = %99
  %107 = load i64, i64* %10, align 8
  %108 = load i64, i64* %85, align 8
  %109 = sub i64 %107, %108
  %110 = sub nsw i64 %2, %100
  %111 = icmp eq i64 %109, 0
  br i1 %111, label %119, label %112

112:                                              ; preds = %106
  %113 = mul i64 %109, 8000000
  %114 = icmp slt i64 %113, %110
  br i1 %114, label %119, label %115

115:                                              ; preds = %112
  %116 = sdiv i64 %113, %110
  %117 = icmp sgt i64 %116, 0
  %118 = select i1 %117, i64 %116, i64 0
  br label %119

119:                                              ; preds = %106, %112, %115
  %120 = phi i64 [ %118, %115 ], [ 0, %106 ], [ 1, %112 ]
  %121 = icmp ult i64 %120, %82
  %122 = select i1 %121, i64 %120, i64 %82
  %123 = load i64, i64* %16, align 8
  %124 = sub nsw i64 %2, %123
  %125 = getelementptr inbounds %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket", %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket"* %4, i64 0, i32 5, i32 1
  %126 = getelementptr inbounds %"struct.quic::BandwidthSample", %"struct.quic::BandwidthSample"* %0, i64 0, i32 0, i32 0
  store i64 %122, i64* %126, align 8
  %127 = getelementptr inbounds %"struct.quic::BandwidthSample", %"struct.quic::BandwidthSample"* %0, i64 0, i32 1, i32 0
  store i64 %124, i64* %127, align 8
  %128 = getelementptr inbounds %"struct.quic::BandwidthSample", %"struct.quic::BandwidthSample"* %0, i64 0, i32 2, i32 0
  store i8 1, i8* %128, align 8
  %129 = getelementptr inbounds %"struct.quic::BandwidthSample", %"struct.quic::BandwidthSample"* %0, i64 0, i32 2, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %129, i8* align 1 %125, i64 39, i1 false)
  br label %130

130:                                              ; preds = %119, %102
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #12
  br label %131

131:                                              ; preds = %130, %60
  ret void
}

declare zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic16BandwidthSampler13ChooseA0PointEmPNS0_8AckPointE(%"class.quic::BandwidthSampler"*, i64, %"struct.quic::BandwidthSampler::AckPoint"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 14, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 14, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  br i1 %9, label %10, label %18

10:                                               ; preds = %3
  %11 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %11, label %12, label %136

12:                                               ; preds = %10
  %13 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %13) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.7, i64 0, i64 0), i32 432, i32 2) #12
  %14 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %15 = bitcast %"class.std::__1::basic_ostringstream"* %14 to %"class.std::__1::basic_ostream"*
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %15, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.26, i64 0, i64 0), i64 42) #12
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %16, i64 %1) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %13) #12
  br label %136

18:                                               ; preds = %3
  %19 = icmp ult i64 %8, %6
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 14, i32 2, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, %8
  br label %24

24:                                               ; preds = %18, %20
  %25 = phi i64 [ %23, %20 ], [ %8, %18 ]
  %26 = sub i64 %25, %6
  %27 = icmp eq i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 14, i32 2, i32 1
  %30 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 14, i32 2, i32 0
  br label %40

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 14, i32 2, i32 0
  %33 = load %"struct.quic::BandwidthSampler::AckPoint"*, %"struct.quic::BandwidthSampler::AckPoint"** %32, align 8
  %34 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %33, i64 %6, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %2, i64 0, i32 0, i32 0
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %33, i64 %6, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %2, i64 0, i32 1
  store i64 %38, i64* %39, align 8
  br label %136

40:                                               ; preds = %28, %99
  %41 = phi i64 [ %100, %99 ], [ 1, %28 ]
  br i1 %19, label %42, label %45

42:                                               ; preds = %40
  %43 = load i64, i64* %29, align 8
  %44 = add i64 %43, %8
  br label %45

45:                                               ; preds = %40, %42
  %46 = phi i64 [ %44, %42 ], [ %8, %40 ]
  %47 = sub i64 %46, %6
  %48 = icmp ult i64 %41, %47
  br i1 %48, label %49, label %101

49:                                               ; preds = %45
  %50 = add i64 %41, %6
  %51 = load i64, i64* %29, align 8
  %52 = icmp ult i64 %50, %51
  br i1 %52, label %53, label %56

53:                                               ; preds = %49
  %54 = load %"struct.quic::BandwidthSampler::AckPoint"*, %"struct.quic::BandwidthSampler::AckPoint"** %30, align 8
  %55 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %54, i64 %50
  br label %60

56:                                               ; preds = %49
  %57 = sub i64 %50, %51
  %58 = load %"struct.quic::BandwidthSampler::AckPoint"*, %"struct.quic::BandwidthSampler::AckPoint"** %30, align 8
  %59 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %58, i64 %57
  br label %60

60:                                               ; preds = %53, %56
  %61 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %54, %53 ], [ %58, %56 ]
  %62 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %55, %53 ], [ %59, %56 ]
  %63 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %62, i64 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = icmp ugt i64 %64, %1
  br i1 %65, label %66, label %99

66:                                               ; preds = %60
  %67 = add i64 %41, -1
  %68 = add i64 %67, %6
  %69 = icmp ult i64 %68, %51
  %70 = select i1 %69, i64 0, i64 %51
  %71 = sub i64 %68, %70
  %72 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %61, i64 %71, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %2, i64 0, i32 0, i32 0
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %61, i64 %71, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %2, i64 0, i32 1
  store i64 %76, i64* %77, align 8
  %78 = icmp ugt i64 %41, 1
  br i1 %78, label %79, label %136

79:                                               ; preds = %66
  %80 = load i64, i64* %5, align 8
  %81 = load i64, i64* %7, align 8
  %82 = icmp ult i64 %81, %80
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = load i64, i64* %29, align 8
  %85 = add i64 %84, %81
  br label %86

86:                                               ; preds = %83, %79
  %87 = phi i64 [ %85, %83 ], [ %81, %79 ]
  %88 = sub i64 %87, %80
  %89 = icmp ult i64 %88, %67
  %90 = select i1 %89, i64 %88, i64 %67
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %97, label %92

92:                                               ; preds = %86
  %93 = load i64, i64* %29, align 8
  %94 = add i64 %90, %80
  %95 = add i64 %94, %93
  %96 = urem i64 %95, %93
  br label %97

97:                                               ; preds = %86, %92
  %98 = phi i64 [ %96, %92 ], [ %80, %86 ]
  store i64 %98, i64* %5, align 8
  br label %136

99:                                               ; preds = %60
  %100 = add i64 %41, 1
  br label %40

101:                                              ; preds = %45
  %102 = icmp eq i64 %8, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %101
  %104 = load i64, i64* %29, align 8
  br label %105

105:                                              ; preds = %101, %103
  %106 = phi i64 [ %104, %103 ], [ %8, %101 ]
  %107 = add i64 %106, -1
  %108 = load %"struct.quic::BandwidthSampler::AckPoint"*, %"struct.quic::BandwidthSampler::AckPoint"** %30, align 8
  %109 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %108, i64 %107, i32 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %2, i64 0, i32 0, i32 0
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %108, i64 %107, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %2, i64 0, i32 1
  store i64 %113, i64* %114, align 8
  %115 = load i64, i64* %5, align 8
  %116 = load i64, i64* %7, align 8
  %117 = icmp ult i64 %116, %115
  br i1 %117, label %118, label %121

118:                                              ; preds = %105
  %119 = load i64, i64* %29, align 8
  %120 = add i64 %119, %116
  br label %121

121:                                              ; preds = %105, %118
  %122 = phi i64 [ %120, %118 ], [ %116, %105 ]
  %123 = xor i64 %115, -1
  %124 = add i64 %122, %123
  %125 = sub i64 %122, %115
  %126 = icmp ult i64 %125, %124
  %127 = select i1 %126, i64 %125, i64 %124
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %134, label %129

129:                                              ; preds = %121
  %130 = load i64, i64* %29, align 8
  %131 = add i64 %127, %115
  %132 = add i64 %131, %130
  %133 = urem i64 %132, %130
  br label %134

134:                                              ; preds = %121, %129
  %135 = phi i64 [ %133, %129 ], [ %115, %121 ]
  store i64 %135, i64* %5, align 8
  br label %136

136:                                              ; preds = %12, %10, %97, %66, %134, %31
  %137 = phi i1 [ true, %31 ], [ true, %134 ], [ true, %66 ], [ true, %97 ], [ false, %10 ], [ false, %12 ]
  ret i1 %137
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4quic16BandwidthSampler25SentPacketToSendTimeStateERKNS0_27ConnectionStateOnSentPacketEPNS_13SendTimeStateE(%"class.quic::BandwidthSampler"* nocapture readnone, %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket"* nocapture readonly dereferenceable(80), %"struct.quic::SendTimeState"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.quic::SendTimeState", %"struct.quic::SendTimeState"* %2, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket", %"struct.quic::BandwidthSampler::ConnectionStateOnSentPacket"* %1, i64 0, i32 5, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 40, i1 false)
  store i8 1, i8* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4quic16BandwidthSampler12OnAppLimitedEv(%"class.quic::BandwidthSampler"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 9
  store i8 1, i8* %2, align 8
  %3 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 8, i32 0
  %4 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 11, i32 0
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16BandwidthSampler21RemoveObsoletePacketsENS_16QuicPacketNumberE(%"class.quic::BandwidthSampler"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 12
  tail call void @_ZN4quic24PacketNumberIndexedQueueINS_16BandwidthSampler27ConnectionStateOnSentPacketEE10RemoveUpToENS_16QuicPacketNumberE(%"class.quic::PacketNumberIndexedQueue"* %3, i64 %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic24PacketNumberIndexedQueueINS_16BandwidthSampler27ConnectionStateOnSentPacketEE10RemoveUpToENS_16QuicPacketNumberE(%"class.quic::PacketNumberIndexedQueue"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %62, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 0, i32 2, i32 0
  %12 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 0, i32 2, i32 1
  br label %14

14:                                               ; preds = %9, %28
  %15 = tail call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* %10) #12
  br i1 %15, label %16, label %38

16:                                               ; preds = %14
  %17 = load i64, i64* %3, align 8
  %18 = icmp ult i64 %17, %1
  br i1 %18, label %19, label %38

19:                                               ; preds = %16
  %20 = load i64, i64* %4, align 8
  %21 = load %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"*, %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"** %11, align 8
  %22 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %21, i64 %20, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %19
  %26 = load i64, i64* %12, align 8
  %27 = add i64 %26, -1
  store i64 %27, i64* %12, align 8
  br label %28

28:                                               ; preds = %19, %25
  %29 = load i64, i64* %13, align 8
  %30 = add i64 %29, -1
  %31 = icmp eq i64 %30, %20
  %32 = add i64 %20, 1
  %33 = select i1 %31, i64 0, i64 %32
  store i64 %33, i64* %4, align 8
  %34 = tail call i64 @_ZN4quic16QuicPacketNumberppEi(%"class.quic::QuicPacketNumber"* %10, i32 0) #12
  %35 = load i64, i64* %4, align 8
  %36 = load i64, i64* %6, align 8
  %37 = icmp eq i64 %35, %36
  br i1 %37, label %38, label %14

38:                                               ; preds = %16, %14, %28
  %39 = load i64, i64* %4, align 8
  %40 = load i64, i64* %6, align 8
  %41 = icmp eq i64 %39, %40
  br i1 %41, label %62, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 0, i32 2, i32 0
  %44 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 0, i32 2, i32 1
  %45 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 2
  br label %46

46:                                               ; preds = %52, %42
  %47 = phi i64 [ %39, %42 ], [ %59, %52 ]
  %48 = load %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"*, %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"** %43, align 8
  %49 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %48, i64 %47, i32 1
  %50 = load i8, i8* %49, align 8, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %46
  %53 = load i64, i64* %44, align 8
  %54 = add i64 %53, -1
  %55 = icmp eq i64 %54, %47
  %56 = add i64 %47, 1
  %57 = select i1 %55, i64 0, i64 %56
  store i64 %57, i64* %4, align 8
  %58 = tail call i64 @_ZN4quic16QuicPacketNumberppEi(%"class.quic::QuicPacketNumber"* %45, i32 0) #12
  %59 = load i64, i64* %4, align 8
  %60 = load i64, i64* %6, align 8
  %61 = icmp eq i64 %59, %60
  br i1 %61, label %62, label %46

62:                                               ; preds = %52, %2, %38
  %63 = getelementptr inbounds %"class.quic::PacketNumberIndexedQueue", %"class.quic::PacketNumberIndexedQueue"* %0, i64 0, i32 2
  tail call void @_ZN4quic16QuicPacketNumber5ClearEv(%"class.quic::QuicPacketNumber"* %63) #12
  br label %64

64:                                               ; preds = %46, %62
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4quic16BandwidthSampler16total_bytes_sentEv(%"class.quic::BandwidthSampler"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4quic16BandwidthSampler17total_bytes_ackedEv(%"class.quic::BandwidthSampler"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4quic16BandwidthSampler16total_bytes_lostEv(%"class.quic::BandwidthSampler"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4quic16BandwidthSampler20total_bytes_neuteredEv(%"class.quic::BandwidthSampler"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic16BandwidthSampler14is_app_limitedEv(%"class.quic::BandwidthSampler"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4quic16BandwidthSampler24end_of_app_limited_phaseEv(%"class.quic::BandwidthSampler"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %0, i64 0, i32 11, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6quiche19QuicheCircularDequeIN4quic24PacketNumberIndexedQueueINS1_16BandwidthSampler27ConnectionStateOnSentPacketEE12EntryWrapperELm3ENSt3__19allocatorIS6_EEE11AssignRangeINSA_14basic_iteratorIKS6_EEvEEvT_SF_(%"class.quiche::QuicheCircularDeque"*, %"class.quiche::QuicheCircularDeque"*, i64, %"class.quiche::QuicheCircularDeque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.quiche::QuicheCircularDeque"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #12
  %7 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %3, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %4
  br i1 %9, label %10, label %14

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %3, i64 0, i32 2, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, %4
  br label %14

14:                                               ; preds = %10, %5
  %15 = phi i64 [ %13, %10 ], [ %4, %5 ]
  %16 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %1, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp ugt i64 %17, %2
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %1, i64 0, i32 2, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %2
  br label %23

23:                                               ; preds = %14, %19
  %24 = phi i64 [ %22, %19 ], [ %2, %14 ]
  %25 = sub i64 %15, %8
  %26 = add i64 %25, %17
  %27 = sub i64 %26, %24
  %28 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  %31 = add i64 %29, -1
  %32 = select i1 %30, i64 0, i64 %31
  %33 = icmp ult i64 %32, %27
  br i1 %33, label %34, label %35

34:                                               ; preds = %23
  tail call void @_ZN6quiche19QuicheCircularDequeIN4quic24PacketNumberIndexedQueueINS1_16BandwidthSampler27ConnectionStateOnSentPacketEE12EntryWrapperELm3ENSt3__19allocatorIS6_EEE8RelocateEm(%"class.quiche::QuicheCircularDeque"* %0, i64 %27) #12
  br label %35

35:                                               ; preds = %23, %34
  %36 = icmp eq i64 %2, %4
  br i1 %36, label %87, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %1, i64 0, i32 2, i32 0
  %39 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 0
  %40 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 1
  %41 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 0
  %42 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %1, i64 0, i32 2, i32 1
  %43 = load i64, i64* %40, align 8
  %44 = load i64, i64* %28, align 8
  br label %45

45:                                               ; preds = %37, %69
  %46 = phi i64 [ %44, %37 ], [ %76, %69 ]
  %47 = phi i64 [ %43, %37 ], [ %80, %69 ]
  %48 = phi i64 [ %2, %37 ], [ %85, %69 ]
  %49 = load %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"*, %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"** %38, align 8
  %50 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %49, i64 %48
  %51 = load i64, i64* %39, align 8
  %52 = icmp ult i64 %47, %51
  %53 = select i1 %52, i64 %46, i64 0
  %54 = sub i64 1, %51
  %55 = add i64 %54, %47
  %56 = add i64 %55, %53
  %57 = icmp eq i64 %46, 0
  %58 = add i64 %46, -1
  %59 = select i1 %57, i64 0, i64 %58
  %60 = icmp ult i64 %59, %56
  br i1 %60, label %61, label %69

61:                                               ; preds = %45
  %62 = lshr i64 %59, 2
  %63 = icmp ugt i64 %62, 3
  %64 = select i1 %63, i64 %62, i64 3
  %65 = add i64 %64, %59
  %66 = icmp ult i64 %56, %65
  %67 = select i1 %66, i64 %65, i64 %56
  tail call void @_ZN6quiche19QuicheCircularDequeIN4quic24PacketNumberIndexedQueueINS1_16BandwidthSampler27ConnectionStateOnSentPacketEE12EntryWrapperELm3ENSt3__19allocatorIS6_EEE8RelocateEm(%"class.quiche::QuicheCircularDeque"* %0, i64 %67) #12
  %68 = load i64, i64* %40, align 8
  br label %69

69:                                               ; preds = %45, %61
  %70 = phi i64 [ %47, %45 ], [ %68, %61 ]
  %71 = load %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"*, %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"** %41, align 8
  %72 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %71, i64 %70
  %73 = bitcast %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %72 to i8*
  %74 = bitcast %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 88, i1 false) #12
  %75 = load i64, i64* %40, align 8
  %76 = load i64, i64* %28, align 8
  %77 = add i64 %76, -1
  %78 = icmp eq i64 %77, %75
  %79 = add i64 %75, 1
  %80 = select i1 %78, i64 0, i64 %79
  store i64 %80, i64* %40, align 8
  %81 = load i64, i64* %42, align 8
  %82 = add i64 %81, -1
  %83 = icmp eq i64 %82, %48
  %84 = add i64 %48, 1
  %85 = select i1 %83, i64 0, i64 %84
  %86 = icmp eq i64 %85, %4
  br i1 %86, label %87, label %45

87:                                               ; preds = %69, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6quiche19QuicheCircularDequeIN4quic24PacketNumberIndexedQueueINS1_16BandwidthSampler27ConnectionStateOnSentPacketEE12EntryWrapperELm3ENSt3__19allocatorIS6_EEE8RelocateEm(%"class.quiche::QuicheCircularDeque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %4
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %6
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i64 [ %11, %8 ], [ %6, %2 ]
  %14 = sub i64 %13, %4
  %15 = add i64 %1, 1
  %16 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2
  %17 = icmp ugt i64 %15, 209622091746699450
  br i1 %17, label %18, label %19

18:                                               ; preds = %12
  tail call void @abort() #14
  unreachable

19:                                               ; preds = %12
  %20 = mul i64 %15, 88
  %21 = tail call i8* @_Znwm(i64 %20) #13
  %22 = bitcast i8* %21 to %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"*
  %23 = icmp ult i64 %4, %6
  br i1 %23, label %24, label %37

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 0
  %26 = load %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"*, %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"** %25, align 8
  %27 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %26, i64 %6
  %28 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %26, i64 %4
  br label %29

29:                                               ; preds = %29, %24
  %30 = phi %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* [ %35, %29 ], [ %28, %24 ]
  %31 = phi %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* [ %34, %29 ], [ %22, %24 ]
  %32 = bitcast %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %31 to i8*
  %33 = bitcast %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 88, i1 false) #12
  %34 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %31, i64 1
  %35 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %30, i64 1
  %36 = icmp eq %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %35, %27
  br i1 %36, label %74, label %29

37:                                               ; preds = %19
  br i1 %7, label %38, label %74

38:                                               ; preds = %37
  %39 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %4
  %42 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 0
  %43 = load %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"*, %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"** %42, align 8
  %44 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %43, i64 %40
  %45 = icmp eq i64 %40, %4
  br i1 %45, label %59, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %43, i64 %4
  br label %48

48:                                               ; preds = %48, %46
  %49 = phi %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* [ %54, %48 ], [ %47, %46 ]
  %50 = phi %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* [ %53, %48 ], [ %22, %46 ]
  %51 = bitcast %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %50 to i8*
  %52 = bitcast %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 88, i1 false) #12
  %53 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %50, i64 1
  %54 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %49, i64 1
  %55 = icmp eq %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %54, %44
  br i1 %55, label %56, label %48

56:                                               ; preds = %48
  %57 = load i64, i64* %5, align 8
  %58 = load %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"*, %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"** %42, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* [ %58, %56 ], [ %43, %38 ]
  %61 = phi i64 [ %57, %56 ], [ %6, %38 ]
  %62 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %60, i64 %61
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %74, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %22, i64 %41
  br label %66

66:                                               ; preds = %64, %66
  %67 = phi %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* [ %72, %66 ], [ %60, %64 ]
  %68 = phi %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* [ %71, %66 ], [ %65, %64 ]
  %69 = bitcast %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %68 to i8*
  %70 = bitcast %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 88, i1 false) #12
  %71 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %68, i64 1
  %72 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %67, i64 1
  %73 = icmp eq %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %72, %62
  br i1 %73, label %74, label %66

74:                                               ; preds = %66, %29, %59, %37
  %75 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 0
  %78 = bitcast %"struct.quiche::QuicheCircularDeque<quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper, 3, std::__1::allocator<quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper> >::AllocatorAndData"* %16 to i8**
  br i1 %77, label %81, label %79

79:                                               ; preds = %74
  %80 = load i8*, i8** %78, align 8
  tail call void @_ZdlPv(i8* %80) #13
  br label %81

81:                                               ; preds = %74, %79
  store i8* %21, i8** %78, align 8
  store i64 %15, i64* %75, align 8
  store i64 0, i64* %3, align 8
  store i64 %14, i64* %5, align 8
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl6StrCatIJNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEA18_cS7_A20_cmA22_cmA2_cEEES7_RKNS_8AlphaNumESE_SE_SE_SE_DpRKT_(%"class.std::__1::basic_string"* noalias sret, %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.absl::AlphaNum"* dereferenceable(48), %"class.std::__1::basic_string"* dereferenceable(24), [18 x i8]* dereferenceable(18), %"class.std::__1::basic_string"* dereferenceable(24), [20 x i8]* dereferenceable(20), i64* dereferenceable(8), [22 x i8]* dereferenceable(22), i64* dereferenceable(8), [2 x i8]* dereferenceable(2)) local_unnamed_addr #10 comdat {
  %15 = alloca [13 x %"class.absl::string_view"], align 16
  %16 = alloca %"class.absl::AlphaNum", align 8
  %17 = alloca %"class.absl::AlphaNum", align 8
  %18 = bitcast [13 x %"class.absl::string_view"]* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %18) #12
  %19 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 0
  %20 = bitcast %"class.absl::AlphaNum"* %1 to <2 x i64>*
  %21 = load <2 x i64>, <2 x i64>* %20, align 8
  %22 = bitcast [13 x %"class.absl::string_view"]* %15 to <2 x i64>*
  store <2 x i64> %21, <2 x i64>* %22, align 16
  %23 = bitcast %"class.absl::AlphaNum"* %2 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  %25 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 1, i32 0
  %26 = bitcast i8** %25 to <2 x i64>*
  store <2 x i64> %24, <2 x i64>* %26, align 16
  %27 = bitcast %"class.absl::AlphaNum"* %3 to <2 x i64>*
  %28 = load <2 x i64>, <2 x i64>* %27, align 8
  %29 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 2, i32 0
  %30 = bitcast i8** %29 to <2 x i64>*
  store <2 x i64> %28, <2 x i64>* %30, align 16
  %31 = bitcast %"class.absl::AlphaNum"* %4 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 8
  %33 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 3, i32 0
  %34 = bitcast i8** %33 to <2 x i64>*
  store <2 x i64> %32, <2 x i64>* %34, align 16
  %35 = bitcast %"class.absl::AlphaNum"* %5 to <2 x i64>*
  %36 = load <2 x i64>, <2 x i64>* %35, align 8
  %37 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 4, i32 0
  %38 = bitcast i8** %37 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %38, align 16
  %39 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %14
  %44 = zext i8 %41 to i64
  %45 = ptrtoint %"class.std::__1::basic_string"* %6 to i64
  br label %53

46:                                               ; preds = %14
  %47 = bitcast %"class.std::__1::basic_string"* %6 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp sgt i64 %50, -1
  br i1 %51, label %53, label %52, !prof !3

52:                                               ; preds = %46
  tail call void @llvm.trap() #12
  unreachable

53:                                               ; preds = %43, %46
  %54 = phi i64 [ %48, %46 ], [ %45, %43 ]
  %55 = phi i64 [ %50, %46 ], [ %44, %43 ]
  %56 = inttoptr i64 %54 to i8*
  %57 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 5, i32 0
  store i8* %56, i8** %57, align 16
  %58 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 5, i32 1
  store i64 %55, i64* %58, align 8
  %59 = getelementptr inbounds [18 x i8], [18 x i8]* %7, i64 0, i64 0
  %60 = icmp eq [18 x i8]* %7, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %53
  %62 = tail call i64 @strlen(i8* nonnull %59) #12
  %63 = icmp sgt i64 %62, -1
  br i1 %63, label %65, label %64, !prof !3

64:                                               ; preds = %61
  tail call void @llvm.trap() #12
  unreachable

65:                                               ; preds = %53, %61
  %66 = phi i64 [ 0, %53 ], [ %62, %61 ]
  %67 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 6, i32 0
  store i8* %59, i8** %67, align 16
  %68 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 6, i32 1
  store i64 %66, i64* %68, align 8
  %69 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %65
  %74 = zext i8 %71 to i64
  %75 = ptrtoint %"class.std::__1::basic_string"* %8 to i64
  br label %83

76:                                               ; preds = %65
  %77 = bitcast %"class.std::__1::basic_string"* %8 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = icmp sgt i64 %80, -1
  br i1 %81, label %83, label %82, !prof !3

82:                                               ; preds = %76
  tail call void @llvm.trap() #12
  unreachable

83:                                               ; preds = %73, %76
  %84 = phi i64 [ %78, %76 ], [ %75, %73 ]
  %85 = phi i64 [ %80, %76 ], [ %74, %73 ]
  %86 = inttoptr i64 %84 to i8*
  %87 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 7, i32 0
  store i8* %86, i8** %87, align 16
  %88 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 7, i32 1
  store i64 %85, i64* %88, align 8
  %89 = getelementptr inbounds [20 x i8], [20 x i8]* %9, i64 0, i64 0
  %90 = icmp eq [20 x i8]* %9, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = tail call i64 @strlen(i8* nonnull %89) #12
  %93 = icmp sgt i64 %92, -1
  br i1 %93, label %95, label %94, !prof !3

94:                                               ; preds = %91
  tail call void @llvm.trap() #12
  unreachable

95:                                               ; preds = %83, %91
  %96 = phi i64 [ 0, %83 ], [ %92, %91 ]
  %97 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 8, i32 0
  store i8* %89, i8** %97, align 16
  %98 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 8, i32 1
  store i64 %96, i64* %98, align 8
  %99 = bitcast %"class.absl::AlphaNum"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %99) #12
  %100 = load i64, i64* %10, align 8
  %101 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %16, i64 0, i32 1, i64 0
  %102 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64 %100, i8* %101) #12
  %103 = ptrtoint i8* %102 to i64
  %104 = ptrtoint i8* %101 to i64
  %105 = sub i64 %103, %104
  %106 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %16, i64 0, i32 0, i32 0
  store i8* %101, i8** %106, align 8
  %107 = icmp sgt i64 %105, -1
  br i1 %107, label %109, label %108, !prof !3

108:                                              ; preds = %95
  call void @llvm.trap() #12
  unreachable

109:                                              ; preds = %95
  %110 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %16, i64 0, i32 0, i32 1
  store i64 %105, i64* %110, align 8
  %111 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 9, i32 0
  store i8* %101, i8** %111, align 16
  %112 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 9, i32 1
  store i64 %105, i64* %112, align 8
  %113 = getelementptr inbounds [22 x i8], [22 x i8]* %11, i64 0, i64 0
  %114 = icmp eq [22 x i8]* %11, null
  br i1 %114, label %119, label %115

115:                                              ; preds = %109
  %116 = call i64 @strlen(i8* nonnull %113) #12
  %117 = icmp sgt i64 %116, -1
  br i1 %117, label %119, label %118, !prof !3

118:                                              ; preds = %115
  call void @llvm.trap() #12
  unreachable

119:                                              ; preds = %109, %115
  %120 = phi i64 [ 0, %109 ], [ %116, %115 ]
  %121 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 10, i32 0
  store i8* %113, i8** %121, align 16
  %122 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 10, i32 1
  store i64 %120, i64* %122, align 8
  %123 = bitcast %"class.absl::AlphaNum"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %123) #12
  %124 = load i64, i64* %12, align 8
  %125 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %17, i64 0, i32 1, i64 0
  %126 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64 %124, i8* %125) #12
  %127 = ptrtoint i8* %126 to i64
  %128 = ptrtoint i8* %125 to i64
  %129 = sub i64 %127, %128
  %130 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %17, i64 0, i32 0, i32 0
  store i8* %125, i8** %130, align 8
  %131 = icmp sgt i64 %129, -1
  br i1 %131, label %133, label %132, !prof !3

132:                                              ; preds = %119
  call void @llvm.trap() #12
  unreachable

133:                                              ; preds = %119
  %134 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %17, i64 0, i32 0, i32 1
  store i64 %129, i64* %134, align 8
  %135 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 11, i32 0
  store i8* %125, i8** %135, align 16
  %136 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 11, i32 1
  store i64 %129, i64* %136, align 8
  %137 = getelementptr inbounds [2 x i8], [2 x i8]* %13, i64 0, i64 0
  %138 = icmp eq [2 x i8]* %13, null
  br i1 %138, label %143, label %139

139:                                              ; preds = %133
  %140 = call i64 @strlen(i8* nonnull %137) #12
  %141 = icmp sgt i64 %140, -1
  br i1 %141, label %143, label %142, !prof !3

142:                                              ; preds = %139
  call void @llvm.trap() #12
  unreachable

143:                                              ; preds = %133, %139
  %144 = phi i64 [ 0, %133 ], [ %140, %139 ]
  %145 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 12, i32 0
  store i8* %137, i8** %145, align 16
  %146 = getelementptr inbounds [13 x %"class.absl::string_view"], [13 x %"class.absl::string_view"]* %15, i64 0, i64 12, i32 1
  store i64 %144, i64* %146, align 8
  call void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* sret %0, %"class.absl::string_view"* nonnull %19, i64 13) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %123) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %99) #12
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %18) #12
  ret void
}

declare void @_ZNK4quic16QuicPacketNumber8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.quic::QuicPacketNumber"*) local_unnamed_addr #1

declare void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* sret, %"class.absl::string_view"*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6quiche19QuicheCircularDequeIN4quic16BandwidthSampler8AckPointELm3ENSt3__19allocatorIS3_EEE11AssignRangeINS7_14basic_iteratorIKS3_EEvEEvT_SC_(%"class.quiche::QuicheCircularDeque.0"*, %"class.quiche::QuicheCircularDeque.0"*, i64, %"class.quiche::QuicheCircularDeque.0"*, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.quiche::QuicheCircularDeque.0"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #12
  %7 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %3, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %4
  br i1 %9, label %10, label %14

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %3, i64 0, i32 2, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, %4
  br label %14

14:                                               ; preds = %10, %5
  %15 = phi i64 [ %13, %10 ], [ %4, %5 ]
  %16 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %1, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp ugt i64 %17, %2
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %1, i64 0, i32 2, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %2
  br label %23

23:                                               ; preds = %14, %19
  %24 = phi i64 [ %22, %19 ], [ %2, %14 ]
  %25 = sub i64 %15, %8
  %26 = add i64 %25, %17
  %27 = sub i64 %26, %24
  %28 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %0, i64 0, i32 2, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  %31 = add i64 %29, -1
  %32 = select i1 %30, i64 0, i64 %31
  %33 = icmp ult i64 %32, %27
  br i1 %33, label %34, label %35

34:                                               ; preds = %23
  tail call void @_ZN6quiche19QuicheCircularDequeIN4quic16BandwidthSampler8AckPointELm3ENSt3__19allocatorIS3_EEE8RelocateEm(%"class.quiche::QuicheCircularDeque.0"* %0, i64 %27) #12
  br label %35

35:                                               ; preds = %23, %34
  %36 = icmp eq i64 %2, %4
  br i1 %36, label %87, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %1, i64 0, i32 2, i32 0
  %39 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %0, i64 0, i32 0
  %40 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %0, i64 0, i32 1
  %41 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %0, i64 0, i32 2, i32 0
  %42 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %1, i64 0, i32 2, i32 1
  %43 = load i64, i64* %40, align 8
  %44 = load i64, i64* %28, align 8
  br label %45

45:                                               ; preds = %37, %69
  %46 = phi i64 [ %44, %37 ], [ %76, %69 ]
  %47 = phi i64 [ %43, %37 ], [ %80, %69 ]
  %48 = phi i64 [ %2, %37 ], [ %85, %69 ]
  %49 = load %"struct.quic::BandwidthSampler::AckPoint"*, %"struct.quic::BandwidthSampler::AckPoint"** %38, align 8
  %50 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %49, i64 %48
  %51 = load i64, i64* %39, align 8
  %52 = icmp ult i64 %47, %51
  %53 = select i1 %52, i64 %46, i64 0
  %54 = sub i64 1, %51
  %55 = add i64 %54, %47
  %56 = add i64 %55, %53
  %57 = icmp eq i64 %46, 0
  %58 = add i64 %46, -1
  %59 = select i1 %57, i64 0, i64 %58
  %60 = icmp ult i64 %59, %56
  br i1 %60, label %61, label %69

61:                                               ; preds = %45
  %62 = lshr i64 %59, 2
  %63 = icmp ugt i64 %62, 3
  %64 = select i1 %63, i64 %62, i64 3
  %65 = add i64 %64, %59
  %66 = icmp ult i64 %56, %65
  %67 = select i1 %66, i64 %65, i64 %56
  tail call void @_ZN6quiche19QuicheCircularDequeIN4quic16BandwidthSampler8AckPointELm3ENSt3__19allocatorIS3_EEE8RelocateEm(%"class.quiche::QuicheCircularDeque.0"* %0, i64 %67) #12
  %68 = load i64, i64* %40, align 8
  br label %69

69:                                               ; preds = %45, %61
  %70 = phi i64 [ %47, %45 ], [ %68, %61 ]
  %71 = load %"struct.quic::BandwidthSampler::AckPoint"*, %"struct.quic::BandwidthSampler::AckPoint"** %41, align 8
  %72 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %71, i64 %70
  %73 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %72 to i8*
  %74 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 16, i1 false) #12
  %75 = load i64, i64* %40, align 8
  %76 = load i64, i64* %28, align 8
  %77 = add i64 %76, -1
  %78 = icmp eq i64 %77, %75
  %79 = add i64 %75, 1
  %80 = select i1 %78, i64 0, i64 %79
  store i64 %80, i64* %40, align 8
  %81 = load i64, i64* %42, align 8
  %82 = add i64 %81, -1
  %83 = icmp eq i64 %82, %48
  %84 = add i64 %48, 1
  %85 = select i1 %83, i64 0, i64 %84
  %86 = icmp eq i64 %85, %4
  br i1 %86, label %87, label %45

87:                                               ; preds = %69, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6quiche19QuicheCircularDequeIN4quic16BandwidthSampler8AckPointELm3ENSt3__19allocatorIS3_EEE8RelocateEm(%"class.quiche::QuicheCircularDeque.0"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %4
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %0, i64 0, i32 2, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %6
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i64 [ %11, %8 ], [ %6, %2 ]
  %14 = sub i64 %13, %4
  %15 = add i64 %1, 1
  %16 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %0, i64 0, i32 2
  %17 = icmp ugt i64 %15, 1152921504606846975
  br i1 %17, label %18, label %19

18:                                               ; preds = %12
  tail call void @abort() #14
  unreachable

19:                                               ; preds = %12
  %20 = shl i64 %15, 4
  %21 = tail call i8* @_Znwm(i64 %20) #13
  %22 = bitcast i8* %21 to %"struct.quic::BandwidthSampler::AckPoint"*
  %23 = icmp ult i64 %4, %6
  br i1 %23, label %24, label %71

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %0, i64 0, i32 2, i32 0
  %26 = load %"struct.quic::BandwidthSampler::AckPoint"*, %"struct.quic::BandwidthSampler::AckPoint"** %25, align 8
  %27 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %26, i64 %6
  %28 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %26, i64 %4
  %29 = shl nsw i64 %6, 4
  %30 = add i64 %29, -16
  %31 = shl nsw i64 %4, 4
  %32 = sub i64 %30, %31
  %33 = lshr exact i64 %32, 4
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 3
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %47, label %37

37:                                               ; preds = %24, %37
  %38 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %44, %37 ], [ %28, %24 ]
  %39 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %43, %37 ], [ %22, %24 ]
  %40 = phi i64 [ %45, %37 ], [ %35, %24 ]
  %41 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %39 to i8*
  %42 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 16, i1 false) #12
  %43 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %39, i64 1
  %44 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %38, i64 1
  %45 = add i64 %40, -1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %37, !llvm.loop !7

47:                                               ; preds = %37, %24
  %48 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %28, %24 ], [ %44, %37 ]
  %49 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %22, %24 ], [ %43, %37 ]
  %50 = icmp ult i64 %32, 48
  br i1 %50, label %174, label %51

51:                                               ; preds = %47, %51
  %52 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %69, %51 ], [ %48, %47 ]
  %53 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %68, %51 ], [ %49, %47 ]
  %54 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %53 to i8*
  %55 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 16, i1 false) #12
  %56 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %53, i64 1
  %57 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %52, i64 1
  %58 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %56 to i8*
  %59 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 16, i1 false) #12
  %60 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %53, i64 2
  %61 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %52, i64 2
  %62 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %60 to i8*
  %63 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 16, i1 false) #12
  %64 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %53, i64 3
  %65 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %52, i64 3
  %66 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %64 to i8*
  %67 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 16, i1 false) #12
  %68 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %53, i64 4
  %69 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %52, i64 4
  %70 = icmp eq %"struct.quic::BandwidthSampler::AckPoint"* %69, %27
  br i1 %70, label %174, label %51

71:                                               ; preds = %19
  br i1 %7, label %72, label %174

72:                                               ; preds = %71
  %73 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %0, i64 0, i32 2, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %74, %4
  %76 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %0, i64 0, i32 2, i32 0
  %77 = load %"struct.quic::BandwidthSampler::AckPoint"*, %"struct.quic::BandwidthSampler::AckPoint"** %76, align 8
  %78 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %77, i64 %74
  %79 = icmp eq i64 %74, %4
  br i1 %79, label %127, label %80

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %77, i64 %4
  %82 = shl nsw i64 %74, 4
  %83 = add i64 %82, -16
  %84 = shl nsw i64 %4, 4
  %85 = sub i64 %83, %84
  %86 = lshr exact i64 %85, 4
  %87 = add nuw nsw i64 %86, 1
  %88 = and i64 %87, 3
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %100, label %90

90:                                               ; preds = %80, %90
  %91 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %97, %90 ], [ %81, %80 ]
  %92 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %96, %90 ], [ %22, %80 ]
  %93 = phi i64 [ %98, %90 ], [ %88, %80 ]
  %94 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %92 to i8*
  %95 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 16, i1 false) #12
  %96 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %92, i64 1
  %97 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %91, i64 1
  %98 = add i64 %93, -1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %90, !llvm.loop !9

100:                                              ; preds = %90, %80
  %101 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %81, %80 ], [ %97, %90 ]
  %102 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %22, %80 ], [ %96, %90 ]
  %103 = icmp ult i64 %85, 48
  br i1 %103, label %124, label %104

104:                                              ; preds = %100, %104
  %105 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %122, %104 ], [ %101, %100 ]
  %106 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %121, %104 ], [ %102, %100 ]
  %107 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %106 to i8*
  %108 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 16, i1 false) #12
  %109 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %106, i64 1
  %110 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %105, i64 1
  %111 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %109 to i8*
  %112 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %110 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 16, i1 false) #12
  %113 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %106, i64 2
  %114 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %105, i64 2
  %115 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %113 to i8*
  %116 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %114 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 16, i1 false) #12
  %117 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %106, i64 3
  %118 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %105, i64 3
  %119 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %117 to i8*
  %120 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 16, i1 false) #12
  %121 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %106, i64 4
  %122 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %105, i64 4
  %123 = icmp eq %"struct.quic::BandwidthSampler::AckPoint"* %122, %78
  br i1 %123, label %124, label %104

124:                                              ; preds = %104, %100
  %125 = load i64, i64* %5, align 8
  %126 = load %"struct.quic::BandwidthSampler::AckPoint"*, %"struct.quic::BandwidthSampler::AckPoint"** %76, align 8
  br label %127

127:                                              ; preds = %124, %72
  %128 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %126, %124 ], [ %77, %72 ]
  %129 = phi i64 [ %125, %124 ], [ %6, %72 ]
  %130 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %128, i64 %129
  %131 = icmp eq i64 %129, 0
  br i1 %131, label %174, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %22, i64 %75
  %134 = shl nsw i64 %129, 4
  %135 = add i64 %134, -16
  %136 = lshr exact i64 %135, 4
  %137 = add nuw nsw i64 %136, 1
  %138 = and i64 %137, 3
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %150, label %140

140:                                              ; preds = %132, %140
  %141 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %147, %140 ], [ %128, %132 ]
  %142 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %146, %140 ], [ %133, %132 ]
  %143 = phi i64 [ %148, %140 ], [ %138, %132 ]
  %144 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %142 to i8*
  %145 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %141 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 16, i1 false) #12
  %146 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %142, i64 1
  %147 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %140, !llvm.loop !10

150:                                              ; preds = %140, %132
  %151 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %128, %132 ], [ %147, %140 ]
  %152 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %133, %132 ], [ %146, %140 ]
  %153 = icmp ult i64 %135, 48
  br i1 %153, label %174, label %154

154:                                              ; preds = %150, %154
  %155 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %172, %154 ], [ %151, %150 ]
  %156 = phi %"struct.quic::BandwidthSampler::AckPoint"* [ %171, %154 ], [ %152, %150 ]
  %157 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %156 to i8*
  %158 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %155 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* align 8 %158, i64 16, i1 false) #12
  %159 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %156, i64 1
  %160 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %155, i64 1
  %161 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %159 to i8*
  %162 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %160 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* align 8 %162, i64 16, i1 false) #12
  %163 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %156, i64 2
  %164 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %155, i64 2
  %165 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %163 to i8*
  %166 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %164 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %166, i64 16, i1 false) #12
  %167 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %156, i64 3
  %168 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %155, i64 3
  %169 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %167 to i8*
  %170 = bitcast %"struct.quic::BandwidthSampler::AckPoint"* %168 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 16, i1 false) #12
  %171 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %156, i64 4
  %172 = getelementptr inbounds %"struct.quic::BandwidthSampler::AckPoint", %"struct.quic::BandwidthSampler::AckPoint"* %155, i64 4
  %173 = icmp eq %"struct.quic::BandwidthSampler::AckPoint"* %172, %130
  br i1 %173, label %174, label %154

174:                                              ; preds = %150, %154, %47, %51, %127, %71
  %175 = getelementptr inbounds %"class.quiche::QuicheCircularDeque.0", %"class.quiche::QuicheCircularDeque.0"* %0, i64 0, i32 2, i32 1
  %176 = load i64, i64* %175, align 8
  %177 = icmp eq i64 %176, 0
  %178 = bitcast %"struct.quiche::QuicheCircularDeque<quic::BandwidthSampler::AckPoint, 3, std::__1::allocator<quic::BandwidthSampler::AckPoint> >::AllocatorAndData"* %16 to i8**
  br i1 %177, label %181, label %179

179:                                              ; preds = %174
  %180 = load i8*, i8** %178, align 8
  tail call void @_ZdlPv(i8* %180) #13
  br label %181

181:                                              ; preds = %174, %179
  store i8* %21, i8** %178, align 8
  store i64 %15, i64* %175, align 8
  store i64 0, i64* %3, align 8
  store i64 %14, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(88) %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* @_ZN6quiche19QuicheCircularDequeIN4quic24PacketNumberIndexedQueueINS1_16BandwidthSampler27ConnectionStateOnSentPacketEE12EntryWrapperELm3ENSt3__19allocatorIS6_EEE12emplace_backIJRNS1_8QuicTimeERmmRS3_EEERS6_DpOT_(%"class.quiche::QuicheCircularDeque"*, %"class.quic::QuicTime"* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8), %"class.quic::BandwidthSampler"* dereferenceable(328)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %9, %7
  %11 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = select i1 %10, i64 %12, i64 0
  %14 = sub i64 1, %7
  %15 = add i64 %14, %9
  %16 = add i64 %15, %13
  %17 = icmp eq i64 %12, 0
  %18 = add i64 %12, -1
  %19 = select i1 %17, i64 0, i64 %18
  %20 = icmp ult i64 %19, %16
  br i1 %20, label %21, label %29

21:                                               ; preds = %5
  %22 = lshr i64 %19, 2
  %23 = icmp ugt i64 %22, 3
  %24 = select i1 %23, i64 %22, i64 3
  %25 = add i64 %24, %19
  %26 = icmp ult i64 %16, %25
  %27 = select i1 %26, i64 %25, i64 %16
  tail call void @_ZN6quiche19QuicheCircularDequeIN4quic24PacketNumberIndexedQueueINS1_16BandwidthSampler27ConnectionStateOnSentPacketEE12EntryWrapperELm3ENSt3__19allocatorIS6_EEE8RelocateEm(%"class.quiche::QuicheCircularDeque"* %0, i64 %27) #12
  %28 = load i64, i64* %8, align 8
  br label %29

29:                                               ; preds = %5, %21
  %30 = phi i64 [ %9, %5 ], [ %28, %21 ]
  %31 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 0
  %32 = load %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"*, %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"** %31, align 8
  %33 = getelementptr inbounds %"class.quic::QuicTime", %"class.quic::QuicTime"* %1, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = load i64, i64* %2, align 8
  %36 = load i64, i64* %3, align 8
  %37 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %32, i64 %30, i32 0, i32 0, i32 0
  store i64 %34, i64* %37, align 8
  %38 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %32, i64 %30, i32 0, i32 1
  store i64 %35, i64* %38, align 8
  %39 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %32, i64 %30, i32 0, i32 2
  %40 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %4, i64 0, i32 5
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %4, i64 0, i32 6, i32 0
  %43 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %32, i64 %30, i32 0, i32 3, i32 0
  %44 = load i64, i64* %42, align 8
  store i64 %44, i64* %43, align 8
  %45 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %4, i64 0, i32 7, i32 0
  %46 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %32, i64 %30, i32 0, i32 4, i32 0
  %47 = load i64, i64* %45, align 8
  store i64 %47, i64* %46, align 8
  %48 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %4, i64 0, i32 9
  %49 = load i8, i8* %48, align 8, !range !2
  %50 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %4, i64 0, i32 1
  %51 = bitcast i64* %50 to <2 x i64>*
  %52 = load <2 x i64>, <2 x i64>* %51, align 8
  %53 = getelementptr inbounds %"class.quic::BandwidthSampler", %"class.quic::BandwidthSampler"* %4, i64 0, i32 3
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %32, i64 %30, i32 0, i32 5, i32 0
  store i8 1, i8* %55, align 8
  %56 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %32, i64 %30, i32 0, i32 5, i32 1
  store i8 %49, i8* %56, align 1
  %57 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %32, i64 %30, i32 0, i32 5, i32 2
  %58 = bitcast i64* %57 to <2 x i64>*
  store <2 x i64> %52, <2 x i64>* %58, align 8
  %59 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %32, i64 %30, i32 0, i32 5, i32 4
  store i64 %54, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %32, i64 %30, i32 0, i32 5, i32 5
  store i64 %36, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %32, i64 %30, i32 1
  store i8 1, i8* %61, align 8
  %62 = load i64, i64* %8, align 8
  %63 = load i64, i64* %11, align 8
  %64 = add i64 %63, -1
  %65 = icmp eq i64 %64, %62
  %66 = add i64 %62, 1
  %67 = select i1 %65, i64 0, i64 %66
  store i64 %67, i64* %8, align 8
  %68 = icmp eq i64 %67, 0
  %69 = select i1 %68, i64 %63, i64 %67
  %70 = add i64 %69, -1
  %71 = load %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"*, %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"** %31, align 8
  %72 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %71, i64 %70
  ret %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6quiche19QuicheCircularDequeIN4quic24PacketNumberIndexedQueueINS1_16BandwidthSampler27ConnectionStateOnSentPacketEE12EntryWrapperELm3ENSt3__19allocatorIS6_EEE14ResizeInternalIJEEEvmDpOT_(%"class.quiche::QuicheCircularDeque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %4
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %6
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i64 [ %11, %8 ], [ %6, %2 ]
  %14 = sub i64 %13, %4
  %15 = icmp ult i64 %14, %1
  br i1 %15, label %16, label %83

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = select i1 %7, i64 %18, i64 0
  %20 = add i64 %6, %19
  %21 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 1
  %22 = select i1 %7, i64 %18, i64 0
  %23 = add i64 %6, %1
  %24 = sub i64 %23, %20
  %25 = add i64 %24, %22
  %26 = icmp eq i64 %18, 0
  %27 = add i64 %18, -1
  %28 = select i1 %26, i64 0, i64 %27
  %29 = icmp ult i64 %28, %25
  br i1 %29, label %30, label %38

30:                                               ; preds = %16
  %31 = lshr i64 %28, 2
  %32 = icmp ugt i64 %31, 3
  %33 = select i1 %32, i64 %31, i64 3
  %34 = add i64 %33, %28
  %35 = icmp ult i64 %25, %34
  %36 = select i1 %35, i64 %34, i64 %25
  tail call void @_ZN6quiche19QuicheCircularDequeIN4quic24PacketNumberIndexedQueueINS1_16BandwidthSampler27ConnectionStateOnSentPacketEE12EntryWrapperELm3ENSt3__19allocatorIS6_EEE8RelocateEm(%"class.quiche::QuicheCircularDeque"* %0, i64 %36) #12
  %37 = load i64, i64* %5, align 8
  br label %38

38:                                               ; preds = %16, %30
  %39 = phi i64 [ %6, %16 ], [ %37, %30 ]
  %40 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 0
  br label %41

41:                                               ; preds = %70, %38
  %42 = phi i64 [ %82, %70 ], [ %39, %38 ]
  %43 = load i64, i64* %3, align 8
  %44 = icmp ult i64 %42, %43
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = load i64, i64* %21, align 8
  %47 = add i64 %46, %42
  br label %48

48:                                               ; preds = %41, %45
  %49 = phi i64 [ %47, %45 ], [ %42, %41 ]
  %50 = sub i64 %49, %43
  %51 = icmp ult i64 %50, %1
  br i1 %51, label %52, label %88

52:                                               ; preds = %48
  %53 = load i64, i64* %21, align 8
  %54 = select i1 %44, i64 %53, i64 0
  %55 = sub i64 1, %43
  %56 = add i64 %55, %42
  %57 = add i64 %56, %54
  %58 = icmp eq i64 %53, 0
  %59 = add i64 %53, -1
  %60 = select i1 %58, i64 0, i64 %59
  %61 = icmp ult i64 %60, %57
  br i1 %61, label %62, label %70

62:                                               ; preds = %52
  %63 = lshr i64 %60, 2
  %64 = icmp ugt i64 %63, 3
  %65 = select i1 %64, i64 %63, i64 3
  %66 = add i64 %65, %60
  %67 = icmp ult i64 %57, %66
  %68 = select i1 %67, i64 %66, i64 %57
  tail call void @_ZN6quiche19QuicheCircularDequeIN4quic24PacketNumberIndexedQueueINS1_16BandwidthSampler27ConnectionStateOnSentPacketEE12EntryWrapperELm3ENSt3__19allocatorIS6_EEE8RelocateEm(%"class.quiche::QuicheCircularDeque"* %0, i64 %68) #12
  %69 = load i64, i64* %5, align 8
  br label %70

70:                                               ; preds = %52, %62
  %71 = phi i64 [ %42, %52 ], [ %69, %62 ]
  %72 = load %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"*, %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"** %40, align 8
  %73 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %72, i64 %71
  %74 = getelementptr inbounds %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper", %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %72, i64 %71, i32 0, i32 5, i32 2
  %75 = bitcast %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"* %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 42, i1 false) #12
  %76 = bitcast i64* %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 33, i1 false) #12
  %77 = load i64, i64* %5, align 8
  %78 = load i64, i64* %21, align 8
  %79 = add i64 %78, -1
  %80 = icmp eq i64 %79, %77
  %81 = add i64 %77, 1
  %82 = select i1 %80, i64 0, i64 %81
  store i64 %82, i64* %5, align 8
  br label %41

83:                                               ; preds = %12
  %84 = add i64 %4, %1
  %85 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = urem i64 %84, %86
  store i64 %87, i64* %5, align 8
  br label %88

88:                                               ; preds = %48, %83
  ret void
}

declare i64 @_ZN4quic16QuicPacketNumberppEi(%"class.quic::QuicPacketNumber"*, i32) local_unnamed_addr #1

declare void @_ZN4quic16QuicPacketNumber5ClearEv(%"class.quic::QuicPacketNumber"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN4quic16BandwidthSampler12OnPacketLostENS_16QuicPacketNumberEt: argument 0"}
!6 = distinct !{!6, !"_ZN4quic16BandwidthSampler12OnPacketLostENS_16QuicPacketNumberEt"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = distinct !{!9, !8}
!10 = distinct !{!10, !8}
