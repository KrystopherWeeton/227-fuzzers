; ModuleID = '../../third_party/blink/renderer/core/execution_context/security_context.cc'
source_filename = "../../third_party/blink/renderer/core/execution_context/security_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.84", i32, [4 x i8], %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.222", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.239", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.257", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.264", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.202", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.120" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__atomic_base.122" }
%"struct.std::__1::__atomic_base.122" = type { %"struct.std::__1::__cxx_atomic_impl.123" }
%"struct.std::__1::__cxx_atomic_impl.123" = type { %"struct.std::__1::__cxx_atomic_base_impl.124" }
%"struct.std::__1::__cxx_atomic_base_impl.124" = type { i64 }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.120" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.120" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.120" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.120" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::Worklist.159"* }
%"class.blink::Worklist.159" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.120" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::Worklist.166"* }
%"class.blink::Worklist.166" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.120" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::Worklist.173"* }
%"class.blink::Worklist.173" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.120" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.180", %"class.std::__1::__compressed_pair.188", %"class.std::__1::__compressed_pair.193", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182", %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { float }
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.205", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.214" }
%"class.WTF::Vector.214" = type { %"class.WTF::VectorBuffer.215" }
%"class.WTF::VectorBuffer.215" = type { %"class.WTF::VectorBufferBase.216" }
%"class.WTF::VectorBufferBase.216" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.230" }
%"class.WTF::VectorBuffer.230" = type { %"class.WTF::VectorBufferBase.231" }
%"class.WTF::VectorBufferBase.231" = type { %"struct.std::__1::pair.232"*, i32, i32 }
%"struct.std::__1::pair.232" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.245" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.145"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.152"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.159"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.268", i64 }
%"class.std::__1::vector.268" = type { %"class.std::__1::__vector_base.269" }
%"class.std::__1::__vector_base.269" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.270" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.263 }
%class.scoped_refptr.263 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.264" = type { %"struct.std::__1::__atomic_base.265" }
%"struct.std::__1::__atomic_base.265" = type { %"struct.std::__1::__cxx_atomic_impl.266" }
%"struct.std::__1::__cxx_atomic_impl.266" = type { %"struct.std::__1::__cxx_atomic_base_impl.267" }
%"struct.std::__1::__cxx_atomic_base_impl.267" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet", i32, i32 }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.4 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.4 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.17", %"class.std::__1::map.26"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::map.17" = type { %"class.std::__1::__tree.18" }
%"class.std::__1::__tree.18" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::map.26" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.31" }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::pair"* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.54", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.63", %"class.blink::Member.65", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.74", %"class.blink::Member.80", %"class.blink::Member.82", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.39" }
%"class.WTF::HashTable.39" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.46" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.43" }
%"class.WTF::HashSet.43" = type { %"class.WTF::HashTable.44" }
%"class.WTF::HashTable.44" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.46" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.47" }
%"class.blink::HeapHashMap.47" = type { %"class.WTF::HashMap.50" }
%"class.WTF::HashMap.50" = type { %"class.WTF::HashTable.51" }
%"class.WTF::HashTable.51" = type <{ %"struct.WTF::KeyValuePair.53"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.53" = type { i8*, %"class.blink::Member.275" }
%"class.blink::Member.275" = type { %"class.blink::MemberBase.276" }
%"class.blink::MemberBase.276" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.277" }
%"class.blink::Member.277" = type { %"class.blink::MemberBase.278" }
%"class.blink::MemberBase.278" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.61"*, i32, i32 }
%"class.blink::Member.61" = type opaque
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.67", i32, i32 }
%"class.blink::HeapHashMap.67" = type { %"class.WTF::HashMap.70" }
%"class.WTF::HashMap.70" = type { %"class.WTF::HashTable.71" }
%"class.WTF::HashTable.71" = type <{ %"struct.WTF::KeyValuePair.73"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.73" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i32*, i32, i32 }
%"struct.std::__1::__less" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.288", %"class.blink::FreeList", %"class.WTF::Vector.293" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.287" }
%"struct.std::__1::array.287" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.288" = type { %"class.WTF::VectorBuffer.289" }
%"class.WTF::VectorBuffer.289" = type { %"class.WTF::VectorBufferBase.290" }
%"class.WTF::VectorBufferBase.290" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.293" = type { %"class.WTF::VectorBuffer.294" }
%"class.WTF::VectorBuffer.294" = type { %"class.WTF::VectorBufferBase.295" }
%"class.WTF::VectorBufferBase.295" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm = comdat any

@_ZTVN5blink15SecurityContextE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SecurityContext"*)* @_ZN5blink15SecurityContextD2Ev to i8*), i8* bitcast (void (%"class.blink::SecurityContext"*)* @_ZN5blink15SecurityContextD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [76 x i8] c"../../third_party/blink/renderer/core/execution_context/security_context.cc\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"security_origin\00", align 1
@.str.2 = private unnamed_addr constant [129 x i8] c"!execution_context_ || !security_origin_ || security_origin_->CanAccess(security_origin.get()) || is_worker_transition_to_opaque\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

@_ZN5blink15SecurityContextC1EPNS_16ExecutionContextE = hidden unnamed_addr alias void (%"class.blink::SecurityContext"*, %"class.blink::ExecutionContext"*), void (%"class.blink::SecurityContext"*, %"class.blink::ExecutionContext"*)* @_ZN5blink15SecurityContextC2EPNS_16ExecutionContextE
@_ZN5blink15SecurityContextD1Ev = hidden unnamed_addr alias void (%"class.blink::SecurityContext"*), void (%"class.blink::SecurityContext"*)* @_ZN5blink15SecurityContextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15SecurityContext30SerializeInsecureNavigationSetERKN3WTF7HashSetIjNS1_13AlreadyHashedENS1_10HashTraitsIjEENS1_18PartitionAllocatorEEE(%"class.WTF::Vector"* noalias nocapture sret, %"class.WTF::HashSet"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::__less", align 1
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #10
  %7 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %1, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %21, label %10, !prof !2

10:                                               ; preds = %2
  %11 = zext i32 %8 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %11) #10
  %13 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %12, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #10
  %14 = ptrtoint i8* %13 to i64
  %15 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load i32, i32* %7, align 4
  %17 = bitcast i8* %13 to i32*
  %18 = lshr i64 %12, 2
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %4, align 8
  %20 = icmp eq i32 %16, 0
  br label %21

21:                                               ; preds = %2, %10
  %22 = phi i32* [ %17, %10 ], [ null, %2 ]
  %23 = phi i8* [ %13, %10 ], [ null, %2 ]
  %24 = phi i32 [ %19, %10 ], [ 0, %2 ]
  %25 = phi i1 [ %20, %10 ], [ true, %2 ]
  %26 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %1, i64 0, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %1, i64 0, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i32, i32* %27, i64 %30
  br i1 %25, label %49, label %32

32:                                               ; preds = %21
  %33 = icmp eq i32 %29, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %32, %39
  %35 = phi i32* [ %40, %39 ], [ %27, %32 ]
  %36 = load i32, i32* %35, align 4
  %37 = add i32 %36, 1
  %38 = icmp ult i32 %37, 2
  br i1 %38, label %39, label %42

39:                                               ; preds = %34
  %40 = getelementptr inbounds i32, i32* %35, i64 1
  %41 = icmp eq i32* %40, %31
  br i1 %41, label %49, label %34

42:                                               ; preds = %34, %32
  %43 = phi i32* [ %27, %32 ], [ %35, %34 ]
  %44 = icmp eq i32* %43, %31
  br i1 %44, label %49, label %45

45:                                               ; preds = %42
  %46 = bitcast %"class.WTF::Vector"* %0 to i64*
  br label %54

47:                                               ; preds = %94, %113, %110
  %48 = zext i32 %102 to i64
  br label %49

49:                                               ; preds = %39, %21, %47, %42
  %50 = phi i64 [ %48, %47 ], [ 0, %42 ], [ 0, %21 ], [ 0, %39 ]
  %51 = phi i32* [ %95, %47 ], [ %22, %42 ], [ %22, %21 ], [ %22, %39 ]
  %52 = getelementptr inbounds i32, i32* %51, i64 %50
  %53 = getelementptr inbounds %"struct.std::__1::__less", %"struct.std::__1::__less"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %53) #10
  call void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32* %51, i32* %52, %"struct.std::__1::__less"* nonnull dereferenceable(1) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %53) #10
  ret void

54:                                               ; preds = %45, %113
  %55 = phi i32* [ %22, %45 ], [ %95, %113 ]
  %56 = phi i8* [ %23, %45 ], [ %96, %113 ]
  %57 = phi i8* [ %23, %45 ], [ %97, %113 ]
  %58 = phi i32* [ %22, %45 ], [ %98, %113 ]
  %59 = phi i32 [ %24, %45 ], [ %99, %113 ]
  %60 = phi i32 [ 0, %45 ], [ %102, %113 ]
  %61 = phi i32* [ %43, %45 ], [ %106, %113 ]
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %60, %59
  br i1 %63, label %64, label %94, !prof !2

64:                                               ; preds = %54
  %65 = add i32 %59, 1
  %66 = lshr i32 %59, 2
  %67 = add i32 %65, %66
  %68 = icmp ugt i32 %67, 4
  %69 = select i1 %68, i32 %67, i32 4
  %70 = icmp ugt i32 %69, %65
  %71 = select i1 %70, i32 %69, i32 %65
  %72 = icmp ult i32 %59, %71
  br i1 %72, label %73, label %94, !prof !3

73:                                               ; preds = %64
  %74 = icmp eq i32* %58, null
  %75 = zext i32 %71 to i64
  %76 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %75) #10
  %77 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %76, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #10
  br i1 %74, label %78, label %83

78:                                               ; preds = %73
  %79 = ptrtoint i8* %77 to i64
  store atomic i64 %79, i64* %46 monotonic, align 8
  %80 = lshr i64 %76, 2
  %81 = trunc i64 %80 to i32
  store i32 %81, i32* %4, align 8
  %82 = bitcast i8* %77 to i32*
  br label %94

83:                                               ; preds = %73
  %84 = lshr i64 %76, 2
  %85 = ptrtoint i8* %77 to i64
  %86 = icmp eq i8* %77, null
  br i1 %86, label %90, label %87, !prof !2

87:                                               ; preds = %83
  %88 = zext i32 %59 to i64
  %89 = shl nuw nsw i64 %88, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %77, i8* nonnull align 4 %57, i64 %89, i1 false) #10
  br label %90

90:                                               ; preds = %83, %87
  %91 = phi i8* [ %56, %87 ], [ %57, %83 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %91) #10
  store atomic i64 %85, i64* %46 monotonic, align 8
  %92 = trunc i64 %84 to i32
  store i32 %92, i32* %4, align 8
  %93 = bitcast i8* %77 to i32*
  br label %94

94:                                               ; preds = %54, %64, %78, %90
  %95 = phi i32* [ %55, %54 ], [ %55, %64 ], [ %82, %78 ], [ %93, %90 ]
  %96 = phi i8* [ %56, %54 ], [ %56, %64 ], [ %77, %78 ], [ %77, %90 ]
  %97 = phi i8* [ %57, %54 ], [ %57, %64 ], [ %77, %78 ], [ %77, %90 ]
  %98 = phi i32* [ %58, %54 ], [ %58, %64 ], [ %82, %78 ], [ %93, %90 ]
  %99 = phi i32 [ %59, %54 ], [ %59, %64 ], [ %81, %78 ], [ %92, %90 ]
  %100 = zext i32 %60 to i64
  %101 = getelementptr inbounds i32, i32* %98, i64 %100
  store i32 %62, i32* %101, align 4
  %102 = add i32 %60, 1
  store i32 %102, i32* %5, align 4
  %103 = getelementptr inbounds i32, i32* %61, i64 1
  %104 = icmp eq i32* %103, %31
  br i1 %104, label %47, label %105

105:                                              ; preds = %94, %110
  %106 = phi i32* [ %111, %110 ], [ %103, %94 ]
  %107 = load i32, i32* %106, align 4
  %108 = add i32 %107, 1
  %109 = icmp ult i32 %108, 2
  br i1 %109, label %110, label %113

110:                                              ; preds = %105
  %111 = getelementptr inbounds i32, i32* %106, i64 1
  %112 = icmp eq i32* %111, %31
  br i1 %112, label %47, label %105

113:                                              ; preds = %105
  %114 = icmp eq i32* %106, %31
  br i1 %114, label %47, label %54
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15SecurityContextC2EPNS_16ExecutionContextE(%"class.blink::SecurityContext"* nocapture, %"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink15SecurityContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 2, i32 0
  %5 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 7, i32 0, i32 0
  %6 = bitcast %"class.blink::SecurityOrigin"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 40, i1 false)
  store %"class.blink::ExecutionContext"* %1, %"class.blink::ExecutionContext"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 8
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 10
  %9 = bitcast %"class.WTF::HashSet"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #10
  %10 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 11
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 12
  store i32 2, i32* %11, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15SecurityContextD2Ev(%"class.blink::SecurityContext"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink15SecurityContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %8, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast i32* %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %7) #10
  store i32* null, i32** %3, align 8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %10 = load %"class.blink::DocumentPolicy"*, %"class.blink::DocumentPolicy"** %9, align 8
  store %"class.blink::DocumentPolicy"* null, %"class.blink::DocumentPolicy"** %9, align 8
  %11 = icmp eq %"class.blink::DocumentPolicy"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::DocumentPolicy", %"class.blink::DocumentPolicy"* %10, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  %16 = icmp eq %"struct.std::__1::pair"* %15, null
  br i1 %16, label %40, label %17

17:                                               ; preds = %12
  %18 = bitcast %"struct.std::__1::pair"* %15 to i8*
  %19 = getelementptr inbounds %"class.blink::DocumentPolicy", %"class.blink::DocumentPolicy"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %19, align 8
  %21 = icmp eq %"struct.std::__1::pair"* %20, %15
  br i1 %21, label %38, label %22

22:                                               ; preds = %17, %33
  %23 = phi %"struct.std::__1::pair"* [ %24, %33 ], [ %20, %17 ]
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 -1
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 -1, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  tail call void @_ZdlPv(i8* %32) #11
  br label %33

33:                                               ; preds = %30, %22
  %34 = icmp eq %"struct.std::__1::pair"* %24, %15
  br i1 %34, label %35, label %22

35:                                               ; preds = %33
  %36 = bitcast %"class.base::internal::flat_tree"* %13 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %17
  %39 = phi i8* [ %37, %35 ], [ %18, %17 ]
  store %"struct.std::__1::pair"* %15, %"struct.std::__1::pair"** %19, align 8
  tail call void @_ZdlPv(i8* %39) #11
  br label %40

40:                                               ; preds = %38, %12
  %41 = bitcast %"class.blink::DocumentPolicy"* %10 to i8*
  tail call void @_ZdlPv(i8* %41) #11
  br label %42

42:                                               ; preds = %8, %40
  %43 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %44 = load %"class.blink::DocumentPolicy"*, %"class.blink::DocumentPolicy"** %43, align 8
  store %"class.blink::DocumentPolicy"* null, %"class.blink::DocumentPolicy"** %43, align 8
  %45 = icmp eq %"class.blink::DocumentPolicy"* %44, null
  br i1 %45, label %76, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::DocumentPolicy", %"class.blink::DocumentPolicy"* %44, i64 0, i32 1, i32 0
  %48 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %48, align 8
  %50 = icmp eq %"struct.std::__1::pair"* %49, null
  br i1 %50, label %74, label %51

51:                                               ; preds = %46
  %52 = bitcast %"struct.std::__1::pair"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::DocumentPolicy", %"class.blink::DocumentPolicy"* %44, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %54 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %53, align 8
  %55 = icmp eq %"struct.std::__1::pair"* %54, %49
  br i1 %55, label %72, label %56

56:                                               ; preds = %51, %67
  %57 = phi %"struct.std::__1::pair"* [ %58, %67 ], [ %54, %51 ]
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %57, i64 -1
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %57, i64 -1, i32 1
  %60 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  tail call void @_ZdlPv(i8* %66) #11
  br label %67

67:                                               ; preds = %64, %56
  %68 = icmp eq %"struct.std::__1::pair"* %58, %49
  br i1 %68, label %69, label %56

69:                                               ; preds = %67
  %70 = bitcast %"class.base::internal::flat_tree"* %47 to i8**
  %71 = load i8*, i8** %70, align 8
  br label %72

72:                                               ; preds = %69, %51
  %73 = phi i8* [ %71, %69 ], [ %52, %51 ]
  store %"struct.std::__1::pair"* %49, %"struct.std::__1::pair"** %53, align 8
  tail call void @_ZdlPv(i8* %73) #11
  br label %74

74:                                               ; preds = %72, %46
  %75 = bitcast %"class.blink::DocumentPolicy"* %44 to i8*
  tail call void @_ZdlPv(i8* %75) #11
  br label %76

76:                                               ; preds = %42, %74
  %77 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %78 = load %"class.blink::PermissionsPolicy"*, %"class.blink::PermissionsPolicy"** %77, align 8
  store %"class.blink::PermissionsPolicy"* null, %"class.blink::PermissionsPolicy"** %77, align 8
  %79 = icmp eq %"class.blink::PermissionsPolicy"* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  tail call void @_ZN5blink17PermissionsPolicyD1Ev(%"class.blink::PermissionsPolicy"* nonnull %78) #10
  %81 = bitcast %"class.blink::PermissionsPolicy"* %78 to i8*
  tail call void @_ZdlPv(i8* %81) #11
  br label %82

82:                                               ; preds = %76, %80
  %83 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %84 = load %"class.blink::PermissionsPolicy"*, %"class.blink::PermissionsPolicy"** %83, align 8
  store %"class.blink::PermissionsPolicy"* null, %"class.blink::PermissionsPolicy"** %83, align 8
  %85 = icmp eq %"class.blink::PermissionsPolicy"* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %82
  tail call void @_ZN5blink17PermissionsPolicyD1Ev(%"class.blink::PermissionsPolicy"* nonnull %84) #10
  %87 = bitcast %"class.blink::PermissionsPolicy"* %84 to i8*
  tail call void @_ZdlPv(i8* %87) #11
  br label %88

88:                                               ; preds = %82, %86
  %89 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 2, i32 0
  %90 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %89, align 8
  %91 = icmp eq %"class.blink::SecurityOrigin"* %90, null
  br i1 %91, label %99, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %90, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %93) #10
  %94 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %90, i64 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %92
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %90) #10
  %98 = bitcast %"class.blink::SecurityOrigin"* %90 to i8*
  tail call void @free(i8* %98) #10
  br label %99

99:                                               ; preds = %88, %92, %97
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15SecurityContextD0Ev(%"class.blink::SecurityContext"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink15SecurityContextD2Ev(%"class.blink::SecurityContext"* %0) #10
  %2 = bitcast %"class.blink::SecurityContext"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15SecurityContext5TraceEPNS_7VisitorE(%"class.blink::SecurityContext"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 7
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #10, !range !4
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #10
  br label %73

73:                                               ; preds = %2, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15SecurityContext17SetSecurityOriginE13scoped_refptrINS_14SecurityOriginEE(%"class.blink::SecurityContext"* nocapture, %"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = ptrtoint %"class.blink::SecurityOrigin"* %1 to i64
  %8 = icmp eq %"class.blink::SecurityOrigin"* %1, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str, i64 0, i64 0), i32 73, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)) #10
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  br label %12

12:                                               ; preds = %2, %9
  %13 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 7, i32 0, i32 0
  %14 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %13, align 8
  %15 = icmp eq %"class.blink::ExecutionContext"* %14, null
  br i1 %15, label %51, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.blink::ExecutionContext"* %14 to i1 (%"class.blink::ExecutionContext"*)***
  %18 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %18, i64 2
  %20 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %19, align 8
  %21 = call zeroext i1 %20(%"class.blink::ExecutionContext"* nonnull %14) #10
  br i1 %21, label %22, label %36

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %29 = load i8, i8* %28, align 8, !range !5
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = call %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin34GetOriginOrPrecursorOriginIfOpaqueEv(%"class.blink::SecurityOrigin"* %1) #10
  %33 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 2, i32 0
  %34 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %33, align 8
  %35 = icmp eq %"class.blink::SecurityOrigin"* %34, %32
  br label %36

36:                                               ; preds = %27, %22, %31, %16
  %37 = phi i1 [ %35, %31 ], [ false, %16 ], [ false, %22 ], [ false, %27 ]
  %38 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %13, align 8
  %39 = icmp eq %"class.blink::ExecutionContext"* %38, null
  br i1 %39, label %51, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 2, i32 0
  %42 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %41, align 8
  %43 = icmp eq %"class.blink::SecurityOrigin"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #10
  store i32 -1431655766, i32* %3, align 4
  %46 = call zeroext i1 @_ZNK5blink14SecurityOrigin9CanAccessEPKS0_RNS0_24AccessResultDomainDetailE(%"class.blink::SecurityOrigin"* nonnull %42, %"class.blink::SecurityOrigin"* %1, i32* nonnull dereferenceable(4) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #10
  %47 = or i1 %37, %46
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str, i64 0, i64 0), i32 91, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str.2, i64 0, i64 0)) #10
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #10
  br label %51

51:                                               ; preds = %40, %36, %12, %44, %48
  %52 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 2
  %53 = bitcast %class.scoped_refptr* %52 to i64*
  %54 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %52, i64 0, i32 0
  %55 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %54, align 8
  store i64 %7, i64* %53, align 8
  %56 = icmp eq %"class.blink::SecurityOrigin"* %55, null
  br i1 %56, label %64, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %55, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %58) #10
  %59 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %55) #10
  %63 = bitcast %"class.blink::SecurityOrigin"* %55 to i8*
  call void @free(i8* %63) #10
  br label %64

64:                                               ; preds = %51, %57, %62
  %65 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %54, align 8
  %66 = call zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"* %65) #10
  br i1 %66, label %69, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 11
  store i32 0, i32* %68, align 8
  br label %128

69:                                               ; preds = %64
  %70 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #10
  %71 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %54, align 8
  %72 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %71, i64 0, i32 1, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %92, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %92

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i33
  %84 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %83, i33 1) #10
  %85 = extractvalue { i33, i1 } %84, 1
  %86 = extractvalue { i33, i1 } %84, 0
  %87 = icmp slt i33 %86, 0
  %88 = or i1 %85, %87
  br i1 %88, label %89, label %90, !prof !2

89:                                               ; preds = %80
  call void @llvm.trap() #10
  unreachable

90:                                               ; preds = %80
  %91 = trunc i33 %86 to i32
  store i32 %91, i32* %81, align 4
  br label %92

92:                                               ; preds = %69, %75, %90
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %93, align 8
  %94 = call zeroext i1 @_ZN5blink14SchemeRegistry36SchemeShouldBypassSecureContextCheckERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %6) #10
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #10
  br label %110

110:                                              ; preds = %92, %106, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #10
  br i1 %94, label %111, label %113

111:                                              ; preds = %110
  %112 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 11
  store i32 1, i32* %112, align 8
  br label %128

113:                                              ; preds = %110
  %114 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %13, align 8
  %115 = icmp eq %"class.blink::ExecutionContext"* %114, null
  br i1 %115, label %131, label %116

116:                                              ; preds = %113
  %117 = bitcast %"class.blink::ExecutionContext"* %114 to i1 (%"class.blink::ExecutionContext"*)***
  %118 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %117, align 8
  %119 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %118, i64 33
  %120 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %119, align 8
  %121 = call zeroext i1 %120(%"class.blink::ExecutionContext"* nonnull %114) #10
  %122 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 11
  br i1 %121, label %123, label %124

123:                                              ; preds = %116
  store i32 0, i32* %122, align 8
  br label %128

124:                                              ; preds = %116
  store i32 1, i32* %122, align 8
  %125 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %54, align 8
  %126 = call zeroext i1 @_ZNK5blink14SecurityOrigin11IsLocalhostEv(%"class.blink::SecurityOrigin"* %125) #10
  %127 = zext i1 %126 to i32
  br label %128

128:                                              ; preds = %67, %124, %123, %111
  %129 = phi i32 [ 0, %111 ], [ 3, %123 ], [ %127, %124 ], [ 2, %67 ]
  %130 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 12
  store i32 %129, i32* %130, align 4
  br label %131

131:                                              ; preds = %128, %113
  %132 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 11
  %133 = load i32, i32* %132, align 8
  %134 = icmp eq i32 %133, 1
  %135 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 1
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %150, label %138

138:                                              ; preds = %131
  %139 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %13, align 8
  %140 = icmp eq %"class.blink::ExecutionContext"* %139, null
  %141 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %139, i64 0, i32 3
  %142 = icmp eq %"class.blink::UseCounter"* %141, null
  %143 = or i1 %140, %142
  br i1 %143, label %150, label %144

144:                                              ; preds = %138
  %145 = select i1 %134, i32 1443, i32 1444
  %146 = bitcast %"class.blink::UseCounter"* %141 to void (%"class.blink::UseCounter"*, i32)***
  %147 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %147, i64 3
  %149 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %148, align 8
  call void %149(%"class.blink::UseCounter"* nonnull %141, i32 %145) #10
  br label %150

150:                                              ; preds = %144, %138, %131
  %151 = load %"class.blink::ExecutionContext"*, %"class.blink::ExecutionContext"** %13, align 8
  %152 = icmp eq %"class.blink::ExecutionContext"* %151, null
  %153 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %151, i64 0, i32 3
  %154 = icmp eq %"class.blink::UseCounter"* %153, null
  %155 = or i1 %152, %154
  br i1 %155, label %162, label %156

156:                                              ; preds = %150
  %157 = select i1 %134, i32 1441, i32 1442
  %158 = bitcast %"class.blink::UseCounter"* %153 to void (%"class.blink::UseCounter"*, i32)***
  %159 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %159, i64 3
  %161 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %160, align 8
  call void %161(%"class.blink::UseCounter"* nonnull %153, i32 %157) #10
  br label %162

162:                                              ; preds = %156, %150
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink15SecurityContext11IsSandboxedEN7network5mojom15WebSandboxFlagsE(%"class.blink::SecurityContext"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, %1
  %6 = icmp ne i32 %5, 0
  ret i1 %6
}

declare %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin34GetOriginOrPrecursorOriginIfOpaqueEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink14SchemeRegistry36SchemeShouldBypassSecureContextCheckERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink14SecurityOrigin11IsLocalhostEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15SecurityContext27SetSecurityOriginForTestingE13scoped_refptrINS_14SecurityOriginEE(%"class.blink::SecurityContext"* nocapture, %"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::SecurityOrigin"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 2
  %5 = bitcast %class.scoped_refptr* %4 to i64*
  %6 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %7 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %6, align 8
  store i64 %3, i64* %5, align 8
  %8 = icmp eq %"class.blink::SecurityOrigin"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %7, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %10) #10
  %11 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %7) #10
  %15 = bitcast %"class.blink::SecurityOrigin"* %7 to i8*
  tail call void @free(i8* %15) #10
  br label %16

16:                                               ; preds = %14, %9, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink15SecurityContext15SetSandboxFlagsEN7network5mojom15WebSandboxFlagsE(%"class.blink::SecurityContext"* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 1
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15SecurityContext20SetPermissionsPolicyENSt3__110unique_ptrINS_17PermissionsPolicyENS1_14default_deleteIS3_EEEE(%"class.blink::SecurityContext"* nocapture, %"class.blink::PermissionsPolicy"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::PermissionsPolicy"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::PermissionsPolicy"*, %"class.blink::PermissionsPolicy"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.blink::PermissionsPolicy"* %6, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  tail call void @_ZN5blink17PermissionsPolicyD1Ev(%"class.blink::PermissionsPolicy"* nonnull %6) #10
  %10 = bitcast %"class.blink::PermissionsPolicy"* %6 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15SecurityContext30SetReportOnlyPermissionsPolicyENSt3__110unique_ptrINS_17PermissionsPolicyENS1_14default_deleteIS3_EEEE(%"class.blink::SecurityContext"* nocapture, %"class.blink::PermissionsPolicy"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::PermissionsPolicy"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::PermissionsPolicy"*, %"class.blink::PermissionsPolicy"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.blink::PermissionsPolicy"* %6, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  tail call void @_ZN5blink17PermissionsPolicyD1Ev(%"class.blink::PermissionsPolicy"* nonnull %6) #10
  %10 = bitcast %"class.blink::PermissionsPolicy"* %6 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15SecurityContext17SetDocumentPolicyENSt3__110unique_ptrINS_14DocumentPolicyENS1_14default_deleteIS3_EEEE(%"class.blink::SecurityContext"* nocapture, %"class.blink::DocumentPolicy"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::DocumentPolicy"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 5
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::DocumentPolicy"*, %"class.blink::DocumentPolicy"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.28"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.blink::DocumentPolicy"* %6, null
  br i1 %8, label %39, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::DocumentPolicy", %"class.blink::DocumentPolicy"* %6, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = icmp eq %"struct.std::__1::pair"* %12, null
  br i1 %13, label %37, label %14

14:                                               ; preds = %9
  %15 = bitcast %"struct.std::__1::pair"* %12 to i8*
  %16 = getelementptr inbounds %"class.blink::DocumentPolicy", %"class.blink::DocumentPolicy"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %16, align 8
  %18 = icmp eq %"struct.std::__1::pair"* %17, %12
  br i1 %18, label %35, label %19

19:                                               ; preds = %14, %30
  %20 = phi %"struct.std::__1::pair"* [ %21, %30 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 -1
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 -1, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %27, %19
  %31 = icmp eq %"struct.std::__1::pair"* %21, %12
  br i1 %31, label %32, label %19

32:                                               ; preds = %30
  %33 = bitcast %"class.base::internal::flat_tree"* %10 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %14
  %36 = phi i8* [ %34, %32 ], [ %15, %14 ]
  store %"struct.std::__1::pair"* %12, %"struct.std::__1::pair"** %16, align 8
  tail call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %35, %9
  %38 = bitcast %"class.blink::DocumentPolicy"* %6 to i8*
  tail call void @_ZdlPv(i8* %38) #11
  br label %39

39:                                               ; preds = %37, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15SecurityContext27SetReportOnlyDocumentPolicyENSt3__110unique_ptrINS_14DocumentPolicyENS1_14default_deleteIS3_EEEE(%"class.blink::SecurityContext"* nocapture, %"class.blink::DocumentPolicy"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::DocumentPolicy"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 6
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::DocumentPolicy"*, %"class.blink::DocumentPolicy"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.28"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.blink::DocumentPolicy"* %6, null
  br i1 %8, label %39, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::DocumentPolicy", %"class.blink::DocumentPolicy"* %6, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = icmp eq %"struct.std::__1::pair"* %12, null
  br i1 %13, label %37, label %14

14:                                               ; preds = %9
  %15 = bitcast %"struct.std::__1::pair"* %12 to i8*
  %16 = getelementptr inbounds %"class.blink::DocumentPolicy", %"class.blink::DocumentPolicy"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %16, align 8
  %18 = icmp eq %"struct.std::__1::pair"* %17, %12
  br i1 %18, label %35, label %19

19:                                               ; preds = %14, %30
  %20 = phi %"struct.std::__1::pair"* [ %21, %30 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 -1
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %20, i64 -1, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %27, %19
  %31 = icmp eq %"struct.std::__1::pair"* %21, %12
  br i1 %31, label %32, label %19

32:                                               ; preds = %30
  %33 = bitcast %"class.base::internal::flat_tree"* %10 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %14
  %36 = phi i8* [ %34, %32 ], [ %15, %14 ]
  store %"struct.std::__1::pair"* %12, %"struct.std::__1::pair"** %16, align 8
  tail call void @_ZdlPv(i8* %36) #11
  br label %37

37:                                               ; preds = %35, %9
  %38 = bitcast %"class.blink::DocumentPolicy"* %6 to i8*
  tail call void @_ZdlPv(i8* %38) #11
  br label %39

39:                                               ; preds = %37, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15SecurityContext16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureEPb(%"class.blink::SecurityContext"* nocapture readonly, i32, i8*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.blink::PermissionsPolicy"*, %"class.blink::PermissionsPolicy"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK5blink17PermissionsPolicy16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureE(%"class.blink::PermissionsPolicy"* %5, i32 %1) #10
  %7 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"class.blink::PermissionsPolicy"*, %"class.blink::PermissionsPolicy"** %7, align 8
  %9 = icmp eq %"class.blink::PermissionsPolicy"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  %11 = tail call zeroext i1 @_ZNK5blink17PermissionsPolicy16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureE(%"class.blink::PermissionsPolicy"* nonnull %8, i32 %1) #10
  %12 = xor i1 %11, true
  %13 = zext i1 %12 to i8
  br label %14

14:                                               ; preds = %3, %10
  %15 = phi i8 [ 0, %3 ], [ %13, %10 ]
  %16 = icmp eq i8* %2, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %14
  %18 = select i1 %6, i8 %15, i8 1
  store i8 %18, i8* %2, align 1
  br label %19

19:                                               ; preds = %14, %17
  ret i1 %6
}

declare zeroext i1 @_ZNK5blink17PermissionsPolicy16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureE(%"class.blink::PermissionsPolicy"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15SecurityContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureE(%"class.blink::SecurityContext"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PolicyValue", align 8
  %4 = alloca %"class.blink::PolicyValue", align 8
  call void @_ZN5blink11PolicyValue10CreateBoolEb(%"class.blink::PolicyValue"* nonnull sret %4, i1 zeroext true) #10
  %5 = bitcast %"class.blink::PolicyValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5)
  %6 = bitcast %"class.blink::PolicyValue"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* nonnull align 8 %6, i64 24, i1 false) #10
  %7 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %8 = load %"class.blink::DocumentPolicy"*, %"class.blink::DocumentPolicy"** %7, align 8
  %9 = call zeroext i1 @_ZNK5blink14DocumentPolicy16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureERKNS_11PolicyValueE(%"class.blink::DocumentPolicy"* %8, i32 %1, %"class.blink::PolicyValue"* nonnull dereferenceable(24) %3) #10
  %10 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %11 = load %"class.blink::DocumentPolicy"*, %"class.blink::DocumentPolicy"** %10, align 8
  %12 = icmp eq %"class.blink::DocumentPolicy"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = call zeroext i1 @_ZNK5blink14DocumentPolicy16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureERKNS_11PolicyValueE(%"class.blink::DocumentPolicy"* nonnull %11, i32 %1, %"class.blink::PolicyValue"* nonnull dereferenceable(24) %3) #10
  br label %15

15:                                               ; preds = %2, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5)
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZNK5blink15SecurityContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_11PolicyValueE(%"class.blink::SecurityContext"* nocapture readonly, i32, %"class.blink::PolicyValue"* byval(%"class.blink::PolicyValue") align 8) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %"class.blink::DocumentPolicy"*, %"class.blink::DocumentPolicy"** %4, align 8
  %6 = call zeroext i1 @_ZNK5blink14DocumentPolicy16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureERKNS_11PolicyValueE(%"class.blink::DocumentPolicy"* %5, i32 %1, %"class.blink::PolicyValue"* nonnull dereferenceable(24) %2) #10
  %7 = getelementptr inbounds %"class.blink::SecurityContext", %"class.blink::SecurityContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %8 = load %"class.blink::DocumentPolicy"*, %"class.blink::DocumentPolicy"** %7, align 8
  %9 = icmp eq %"class.blink::DocumentPolicy"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %3
  %11 = call zeroext i1 @_ZNK5blink14DocumentPolicy16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureERKNS_11PolicyValueE(%"class.blink::DocumentPolicy"* nonnull %8, i32 %1, %"class.blink::PolicyValue"* nonnull dereferenceable(24) %2) #10
  %12 = xor i1 %11, true
  %13 = zext i1 %12 to i16
  %14 = shl nuw nsw i16 %13, 8
  br label %15

15:                                               ; preds = %3, %10
  %16 = phi i16 [ 0, %3 ], [ %14, %10 ]
  %17 = select i1 %6, i16 %16, i16 256
  %18 = zext i1 %6 to i16
  %19 = or i16 %17, %18
  ret i16 %19
}

declare void @_ZN5blink11PolicyValue10CreateBoolEb(%"class.blink::PolicyValue"* sret, i1 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink14DocumentPolicy16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureERKNS_11PolicyValueE(%"class.blink::DocumentPolicy"*, i32, %"class.blink::PolicyValue"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink14SecurityOrigin9CanAccessEPKS0_RNS0_24AccessResultDomainDetailE(%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*, i32* dereferenceable(4)) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #10
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #10
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #10
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #10
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #10
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #10
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32*, i32*, %"struct.std::__1::__less"* dereferenceable(1)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink17PermissionsPolicyD1Ev(%"class.blink::PermissionsPolicy"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i32 24, i32 33}
!5 = !{i8 0, i8 2}
