; ModuleID = '../../third_party/blink/renderer/core/layout/ng/inline/ng_line_breaker.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/inline/ng_line_breaker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1602", i64 }
%"class.std::__1::vector.1602" = type { %"class.std::__1::__vector_base.1603" }
%"class.std::__1::__vector_base.1603" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1604" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::NGLineBreaker" = type <{ i32, i32, i32, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGLineLayoutOpportunity", %"class.blink::NGInlineNode", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.blink::NGInlineItemsData"*, %"class.WTF::String", %"class.blink::NGConstraintSpace"*, %"class.blink::NGExclusionSpace"*, %class.scoped_refptr.1898, %class.scoped_refptr, %"class.blink::LazyLineBreakIterator", %"class.blink::HarfBuzzShaper", %"class.blink::ShapeResultSpacing", i8, [7 x i8], %"class.blink::Hyphenation"*, %"class.absl::optional.1899", i8, [7 x i8], %"class.absl::optional.1904", %"class.WTF::Vector.1918"*, i32, i32, %"class.WTF::Vector.1923"*, i8*, %"class.blink::NGInlineItem"*, i8, [7 x i8], %"class.WTF::Vector.1928", i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8], %"class.absl::optional.1934", [4 x i8] }>
%"struct.blink::NGLineLayoutOpportunity" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::NGInlineNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%"struct.blink::NGInlineItemsData" = type { %"class.WTF::String", %"class.WTF::Vector.1841", %"class.std::__1::unique_ptr.1867", %"class.std::__1::unique_ptr.1882" }
%"class.WTF::Vector.1841" = type { %"class.WTF::VectorBuffer.1842" }
%"class.WTF::VectorBuffer.1842" = type { %"class.WTF::VectorBufferBase.1843" }
%"class.WTF::VectorBufferBase.1843" = type { %"class.blink::NGInlineItem"*, i32, i32 }
%"class.std::__1::unique_ptr.1867" = type { %"class.std::__1::__compressed_pair.1868" }
%"class.std::__1::__compressed_pair.1868" = type { %"struct.std::__1::__compressed_pair_elem.1869" }
%"struct.std::__1::__compressed_pair_elem.1869" = type { %"class.blink::NGInlineItemSegments"* }
%"class.blink::NGInlineItemSegments" = type { %"class.WTF::Vector.1870", %"class.WTF::Vector.1875" }
%"class.WTF::Vector.1870" = type { %"class.WTF::VectorBuffer.1871" }
%"class.WTF::VectorBuffer.1871" = type { %"class.WTF::VectorBufferBase.1872" }
%"class.WTF::VectorBufferBase.1872" = type { %"class.blink::NGInlineItemSegment"*, i32, i32 }
%"class.blink::NGInlineItemSegment" = type <{ i32, i16, [2 x i8] }>
%"class.WTF::Vector.1875" = type { %"class.WTF::VectorBuffer.1876" }
%"class.WTF::VectorBuffer.1876" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1882" = type { %"class.std::__1::__compressed_pair.1883" }
%"class.std::__1::__compressed_pair.1883" = type { %"struct.std::__1::__compressed_pair_elem.1884" }
%"struct.std::__1::__compressed_pair_elem.1884" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.1885", %"class.WTF::HashMap.1890", %"class.WTF::String" }
%"class.WTF::Vector.1885" = type { %"class.WTF::VectorBuffer.1886" }
%"class.WTF::VectorBuffer.1886" = type { %"class.WTF::VectorBufferBase.1887" }
%"class.WTF::VectorBufferBase.1887" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1571", i32, i8, [3 x i8], %"class.blink::HeapVector.1573", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1581", %"class.blink::Member.1583", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1592", %"class.blink::Member.1598", %"class.blink::Member.1600", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2015" }
%"class.blink::Member.2015" = type { %"class.blink::MemberBase.2016" }
%"class.blink::MemberBase.2016" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2017" }
%"class.blink::Member.2017" = type { %"class.blink::MemberBase.2018" }
%"class.blink::MemberBase.2018" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1555", %"class.std::__1::unique_ptr.1555", %"class.std::__1::unique_ptr.1561", %"class.std::__1::unique_ptr.1561", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1567", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1547", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1549", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1554 }
%"class.WTF::RefCounted.1547" = type { %"class.base::RefCounted.1548" }
%"class.base::RefCounted.1548" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.1549" = type { %"class.absl::optional_internal::optional_data.1550" }
%"class.absl::optional_internal::optional_data.1550" = type { %"class.absl::optional_internal::optional_data_base.1551" }
%"class.absl::optional_internal::optional_data_base.1551" = type { %"class.absl::optional_internal::optional_data_dtor_base.1552" }
%"class.absl::optional_internal::optional_data_dtor_base.1552" = type { i8, %union.anon.1553 }
%union.anon.1553 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1554 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1555" = type { %"class.std::__1::__compressed_pair.1556" }
%"class.std::__1::__compressed_pair.1556" = type { %"struct.std::__1::__compressed_pair_elem.1557" }
%"struct.std::__1::__compressed_pair_elem.1557" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1561" = type { %"class.std::__1::__compressed_pair.1562" }
%"class.std::__1::__compressed_pair.1562" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"struct.std::__1::__compressed_pair_elem.1563" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1567" = type { %"class.WTF::HashTable.1568" }
%"class.WTF::HashTable.1568" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1571" = type { %"class.blink::MemberBase.1572" }
%"class.blink::MemberBase.1572" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1573" = type { %"class.WTF::Vector.1576" }
%"class.WTF::Vector.1576" = type { %"class.WTF::VectorBuffer.1577" }
%"class.WTF::VectorBuffer.1577" = type { %"class.WTF::VectorBufferBase.1578" }
%"class.WTF::VectorBufferBase.1578" = type { %"class.blink::Member.1579"*, i32, i32 }
%"class.blink::Member.1579" = type opaque
%"class.blink::Member.1581" = type { %"class.blink::MemberBase.1582" }
%"class.blink::MemberBase.1582" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1583" = type { %"class.blink::MemberBase.1584" }
%"class.blink::MemberBase.1584" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1585", i32, i32 }
%"class.blink::HeapHashMap.1585" = type { %"class.WTF::HashMap.1588" }
%"class.WTF::HashMap.1588" = type { %"class.WTF::HashTable.1589" }
%"class.WTF::HashTable.1589" = type <{ %"struct.WTF::KeyValuePair.1591"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1591" = type opaque
%"class.std::__1::unique_ptr.1592" = type { %"class.std::__1::__compressed_pair.1593" }
%"class.std::__1::__compressed_pair.1593" = type { %"struct.std::__1::__compressed_pair_elem.1594" }
%"struct.std::__1::__compressed_pair_elem.1594" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1598" = type { %"class.blink::MemberBase.1599" }
%"class.blink::MemberBase.1599" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1600" = type { %"class.blink::MemberBase.1601" }
%"class.blink::MemberBase.1601" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2038 }
%class.scoped_refptr.2038 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2048" }
%"class.blink::Member.2048" = type { %"class.blink::MemberBase.2049" }
%"class.blink::MemberBase.2049" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2044" }
%"class.blink::MemberBase.2044" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2045" }
%"class.blink::MemberBase.2045" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2046" }
%"class.blink::MemberBase.2046" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2047" }
%"class.blink::MemberBase.2047" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2039", %"class.WTF::Vector.2039" }
%"class.WTF::Vector.2039" = type { %"class.WTF::VectorBuffer.2040" }
%"class.WTF::VectorBuffer.2040" = type { %"class.WTF::VectorBufferBase.2041" }
%"class.WTF::VectorBufferBase.2041" = type { %class.scoped_refptr.2038*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2024 }
%class.scoped_refptr.2024 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2025", %"class.WTF::Vector.630", %"class.WTF::Vector.2027", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2025" = type { %"class.base::RefCounted.2026" }
%"class.base::RefCounted.2026" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2027" = type { %"class.WTF::VectorBuffer.2028" }
%"class.WTF::VectorBuffer.2028" = type { %"class.WTF::VectorBufferBase.2029" }
%"class.WTF::VectorBufferBase.2029" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2030 }
%union.anon.2030 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.WTF::HashMap.1890" = type { %"class.WTF::HashTable.1891" }
%"class.WTF::HashTable.1891" = type <{ %"struct.WTF::KeyValuePair.1894"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1894" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%class.scoped_refptr.1898 = type { %"class.blink::NGInlineBreakToken"* }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1609", [4 x i8] }>
%"class.WTF::RefCounted.1609" = type { %"class.base::RefCounted.1610" }
%"class.base::RefCounted.1610" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2019" }
%"class.WTF::Vector.2019" = type { %"class.WTF::VectorBuffer.2020" }
%"class.WTF::VectorBuffer.2020" = type { %"class.WTF::VectorBufferBase.2021" }
%"class.WTF::VectorBufferBase.2021" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1641", %"class.absl::optional.1641", %"class.absl::optional.1641" }
%"class.absl::optional.1641" = type { %"class.absl::optional_internal::optional_data.1642" }
%"class.absl::optional_internal::optional_data.1642" = type { %"class.absl::optional_internal::optional_data_base.1643" }
%"class.absl::optional_internal::optional_data_base.1643" = type { %"class.absl::optional_internal::optional_data_dtor_base.1644" }
%"class.absl::optional_internal::optional_data_dtor_base.1644" = type { i8, %union.anon.1645 }
%union.anon.1645 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2034" }
%"class.WTF::VectorBuffer.2034" = type { %"class.WTF::VectorBufferBase.2035", [32 x i8] }
%"class.WTF::VectorBufferBase.2035" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::LazyLineBreakIterator" = type <{ %"class.WTF::String", %"class.WTF::AtomicString", %"class.icu_69::BreakIterator"*, [2 x i16], [4 x i8], %"struct.blink::LazyLineBreakIterator::PriorContext", i32, i32, i32, [4 x i8] }>
%"class.icu_69::BreakIterator" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8], [6 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"struct.blink::LazyLineBreakIterator::PriorContext" = type <{ i16*, i32, [4 x i8] }>
%"class.blink::HarfBuzzShaper" = type { %"class.WTF::String", %"class.base::RepeatingCallback" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.blink::ShapeResultSpacing" = type <{ %"class.WTF::String"*, float, float, float, float, i32, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1899" = type { %"class.absl::optional_internal::optional_data.1900" }
%"class.absl::optional_internal::optional_data.1900" = type { %"class.absl::optional_internal::optional_data_base.1901" }
%"class.absl::optional_internal::optional_data_base.1901" = type { %"class.absl::optional_internal::optional_data_dtor_base.1902" }
%"class.absl::optional_internal::optional_data_dtor_base.1902" = type { i8, %union.anon.1903 }
%union.anon.1903 = type { i32 }
%"class.absl::optional.1904" = type { %"class.absl::optional_internal::optional_data.1905" }
%"class.absl::optional_internal::optional_data.1905" = type { %"class.absl::optional_internal::optional_data_base.1906" }
%"class.absl::optional_internal::optional_data_base.1906" = type { %"class.absl::optional_internal::optional_data_dtor_base.1907" }
%"class.absl::optional_internal::optional_data_dtor_base.1907" = type { i8, %union.anon.1908 }
%union.anon.1908 = type { %"struct.blink::NGLineBreaker::TrailingCollapsibleSpace" }
%"struct.blink::NGLineBreaker::TrailingCollapsibleSpace" = type { %"struct.blink::NGInlineItemResult"*, %class.scoped_refptr.1909 }
%"struct.blink::NGInlineItemResult" = type { %"class.blink::NGInlineItem"*, i32, %"struct.blink::NGTextOffset", %"class.absl::optional.1899", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %class.scoped_refptr.1909, %"class.WTF::String", %class.scoped_refptr.1844, %class.scoped_refptr.1631, %"class.absl::optional.1913", %"struct.blink::NGLineBoxStrut", %"struct.blink::NGLineBoxStrut", %"struct.blink::NGLineBoxStrut", i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%class.scoped_refptr.1844 = type { %"class.blink::ShapeResult"* }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted.1845", float, %"class.blink::FloatRect", %"class.WTF::Vector.1847", %class.scoped_refptr.1853, %"class.std::__1::unique_ptr.1854", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted.1845" = type { %"class.base::RefCounted.1846" }
%"class.base::RefCounted.1846" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1847" = type { %"class.WTF::VectorBuffer.1848" }
%"class.WTF::VectorBuffer.1848" = type { %"class.WTF::VectorBufferBase.1849" }
%"class.WTF::VectorBufferBase.1849" = type { %class.scoped_refptr.1850*, i32, i32 }
%class.scoped_refptr.1850 = type opaque
%class.scoped_refptr.1853 = type { %"class.blink::SimpleFontData"* }
%"class.std::__1::unique_ptr.1854" = type { %"class.std::__1::__compressed_pair.1855" }
%"class.std::__1::__compressed_pair.1855" = type { %"struct.std::__1::__compressed_pair_elem.1856" }
%"struct.std::__1::__compressed_pair_elem.1856" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.1857", i32, float }
%"class.WTF::Vector.1857" = type { %"class.WTF::VectorBuffer.1858" }
%"class.WTF::VectorBuffer.1858" = type { %"class.WTF::VectorBufferBase.1859" }
%"class.WTF::VectorBufferBase.1859" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%class.scoped_refptr.1631 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1632", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.1779, %union.anon.1797, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1632" = type { %"class.base::RefCounted.1633" }
%"class.base::RefCounted.1633" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1634, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1634 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1635 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1635 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1669 }
%class.scoped_refptr.1669 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1670", [4 x i8], %"class.std::__1::unique_ptr.1672", i64, %"class.WTF::Vector.1676", %"class.WTF::Vector.1681", %"class.WTF::Vector.1687", %"class.WTF::Vector.1705", %class.scoped_refptr.1546, %"class.WTF::HashMap.1711", %"class.WTF::Vector.1716", %"class.WTF::Vector.1676", %"class.WTF::Vector.1721", %"class.WTF::HashMap.1726", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1670" = type { %"class.base::RefCountedThreadSafe.1671" }
%"class.base::RefCountedThreadSafe.1671" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1672" = type { %"class.std::__1::__compressed_pair.1673" }
%"class.std::__1::__compressed_pair.1673" = type { %"struct.std::__1::__compressed_pair_elem.1674" }
%"struct.std::__1::__compressed_pair_elem.1674" = type { i8* }
%"class.WTF::Vector.1681" = type { %"class.WTF::VectorBuffer.1682" }
%"class.WTF::VectorBuffer.1682" = type { %"class.WTF::VectorBufferBase.1683", [8 x i8] }
%"class.WTF::VectorBufferBase.1683" = type { %class.scoped_refptr.1684*, i32, i32 }
%class.scoped_refptr.1684 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1687" = type { %"class.WTF::VectorBuffer.1688" }
%"class.WTF::VectorBuffer.1688" = type { %"class.WTF::VectorBufferBase.1689" }
%"class.WTF::VectorBufferBase.1689" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1691", %"class.std::__1::unique_ptr.1697" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1690 }
%class.scoped_refptr.1690 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1691" = type { %"class.std::__1::__compressed_pair.1692" }
%"class.std::__1::__compressed_pair.1692" = type { %"struct.std::__1::__compressed_pair_elem.1693" }
%"struct.std::__1::__compressed_pair_elem.1693" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1697" = type { %"class.std::__1::__compressed_pair.1698" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.1699" }
%"struct.std::__1::__compressed_pair_elem.1699" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1705" = type { %"class.WTF::VectorBuffer.1706" }
%"class.WTF::VectorBuffer.1706" = type { %"class.WTF::VectorBufferBase.1707" }
%"class.WTF::VectorBufferBase.1707" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1708", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1708" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1711" = type { %"class.WTF::HashTable.1712" }
%"class.WTF::HashTable.1712" = type <{ %"struct.WTF::KeyValuePair.1715"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1715" = type opaque
%"class.WTF::Vector.1716" = type { %"class.WTF::VectorBuffer.1717" }
%"class.WTF::VectorBuffer.1717" = type { %"class.WTF::VectorBufferBase.1718" }
%"class.WTF::VectorBufferBase.1718" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1676" = type { %"class.WTF::VectorBuffer.1677" }
%"class.WTF::VectorBuffer.1677" = type { %"class.WTF::VectorBufferBase.1678", [16 x i8] }
%"class.WTF::VectorBufferBase.1678" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1721" = type { %"class.WTF::VectorBuffer.1722" }
%"class.WTF::VectorBuffer.1722" = type { %"class.WTF::VectorBufferBase.1723" }
%"class.WTF::VectorBufferBase.1723" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1726" = type { %"class.WTF::HashTable.1727" }
%"class.WTF::HashTable.1727" = type <{ %"struct.WTF::KeyValuePair.1730"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1730" = type { i8**, %"class.std::__1::unique_ptr.2009" }
%"class.std::__1::unique_ptr.2009" = type { %"class.std::__1::__compressed_pair.2010" }
%"class.std::__1::__compressed_pair.2010" = type { %"struct.std::__1::__compressed_pair_elem.2011" }
%"struct.std::__1::__compressed_pair_elem.2011" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1731" }
%"class.std::__1::unique_ptr.1731" = type { %"class.std::__1::__compressed_pair.1732" }
%"class.std::__1::__compressed_pair.1732" = type { %"struct.std::__1::__compressed_pair_elem.1733" }
%"struct.std::__1::__compressed_pair_elem.1733" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1734, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1751" }
%class.scoped_refptr.1734 = type { %"class.base::RefCountedData.1735"* }
%"class.base::RefCountedData.1735" = type { %"class.base::RefCountedThreadSafe.1736", %"class.WTF::Vector.1737" }
%"class.base::RefCountedThreadSafe.1736" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1737" = type { %"class.WTF::VectorBuffer.1738" }
%"class.WTF::VectorBuffer.1738" = type { %"class.WTF::VectorBufferBase.1739" }
%"class.WTF::VectorBufferBase.1739" = type { %class.scoped_refptr.1740*, i32, i32 }
%class.scoped_refptr.1740 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1741", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1743" }
%"class.WTF::RefCounted.1741" = type { %"class.base::RefCounted.1742" }
%"class.base::RefCounted.1742" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1743" = type { %"class.std::__1::__compressed_pair.1744" }
%"class.std::__1::__compressed_pair.1744" = type { %"struct.std::__1::__compressed_pair_elem.1745" }
%"struct.std::__1::__compressed_pair_elem.1745" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1751" = type { %"class.std::__1::__compressed_pair.1752" }
%"class.std::__1::__compressed_pair.1752" = type { %"struct.std::__1::__compressed_pair_elem.1753" }
%"struct.std::__1::__compressed_pair_elem.1753" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1754", %"class.WTF::Vector.1767", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1754" = type { %"class.WTF::VectorBuffer.1755" }
%"class.WTF::VectorBuffer.1755" = type { %"class.WTF::VectorBufferBase.1756", [320 x i8] }
%"class.WTF::VectorBufferBase.1756" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1757", %"class.WTF::Vector.1757", %class.scoped_refptr.1762, i8, [7 x i8] }>
%"class.WTF::Vector.1757" = type { %"class.WTF::VectorBuffer.1758" }
%"class.WTF::VectorBuffer.1758" = type { %"class.WTF::VectorBufferBase.1759", [8 x i8] }
%"class.WTF::VectorBufferBase.1759" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1762 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1763", %"class.WTF::Vector.1737", %"class.WTF::Vector.1737" }
%"class.WTF::RefCounted.1763" = type { %"class.base::RefCounted.1764" }
%"class.base::RefCounted.1764" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1767" = type { %"class.WTF::VectorBuffer.1768" }
%"class.WTF::VectorBuffer.1768" = type { %"class.WTF::VectorBufferBase.1769", [288 x i8] }
%"class.WTF::VectorBufferBase.1769" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1757", %"class.WTF::Vector.1757" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1770 }
%class.scoped_refptr.1770 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.1779 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1780", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1782, %"class.std::__1::unique_ptr.1785" }
%"class.WTF::RefCounted.1780" = type { %"class.base::RefCounted.1781" }
%"class.base::RefCounted.1781" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1782 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1783", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.1783" = type { %"class.base::RefCounted.1784" }
%"class.base::RefCounted.1784" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1785" = type { %"class.std::__1::__compressed_pair.1786" }
%"class.std::__1::__compressed_pair.1786" = type { %"struct.std::__1::__compressed_pair_elem.1787" }
%"struct.std::__1::__compressed_pair_elem.1787" = type { %"class.WTF::Vector.1788"* }
%"class.WTF::Vector.1788" = type { %"class.WTF::VectorBuffer.1789" }
%"class.WTF::VectorBuffer.1789" = type { %"class.WTF::VectorBufferBase.1790" }
%"class.WTF::VectorBufferBase.1790" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1791 }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%union.anon.1791 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1611", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.std::__1::unique_ptr.1611" = type { %"class.std::__1::__compressed_pair.1612" }
%"class.std::__1::__compressed_pair.1612" = type { %"struct.std::__1::__compressed_pair_elem.1613" }
%"struct.std::__1::__compressed_pair_elem.1613" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1614", %"class.absl::optional.1623" }
%"class.absl::optional.1614" = type { %"class.absl::optional_internal::optional_data.1615" }
%"class.absl::optional_internal::optional_data.1615" = type { %"class.absl::optional_internal::optional_data_base.1616" }
%"class.absl::optional_internal::optional_data_base.1616" = type { %"class.absl::optional_internal::optional_data_dtor_base.1617" }
%"class.absl::optional_internal::optional_data_dtor_base.1617" = type { i8, %union.anon.1618 }
%union.anon.1618 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.absl::optional.1623" = type { %"class.absl::optional_internal::optional_data.1624" }
%"class.absl::optional_internal::optional_data.1624" = type { %"class.absl::optional_internal::optional_data_base.1625" }
%"class.absl::optional_internal::optional_data_base.1625" = type { %"class.absl::optional_internal::optional_data_dtor_base.1626" }
%"class.absl::optional_internal::optional_data_dtor_base.1626" = type { i8, %union.anon.1627 }
%union.anon.1627 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%union.anon.1797 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1636", %class.scoped_refptr.1939, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.1940, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1669, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.1941", %"class.absl::optional.1957" }
%"class.absl::optional.1636" = type { %"class.absl::optional_internal::optional_data.1637" }
%"class.absl::optional_internal::optional_data.1637" = type { %"class.absl::optional_internal::optional_data_base.1638" }
%"class.absl::optional_internal::optional_data_base.1638" = type { %"class.absl::optional_internal::optional_data_dtor_base.1639" }
%"class.absl::optional_internal::optional_data_dtor_base.1639" = type { i8, %union.anon.1640 }
%union.anon.1640 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.1939 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.1962", [4 x i8], %union.anon.1964, %class.scoped_refptr.1939, i32, [4 x i8] }>
%"class.WTF::RefCounted.1962" = type { %"class.base::RefCounted.1963" }
%"class.base::RefCounted.1963" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.1964 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%union.anon.1940 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1941" = type { %"class.std::__1::__compressed_pair.1942" }
%"class.std::__1::__compressed_pair.1942" = type { %"struct.std::__1::__compressed_pair_elem.1943" }
%"struct.std::__1::__compressed_pair_elem.1943" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.1944", %"class.WTF::Vector.1949", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1944" = type { %"class.WTF::VectorBuffer.1945" }
%"class.WTF::VectorBuffer.1945" = type { %"class.WTF::VectorBufferBase.1946" }
%"class.WTF::VectorBufferBase.1946" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1949" = type { %"class.WTF::VectorBuffer.1950" }
%"class.WTF::VectorBuffer.1950" = type { %"class.WTF::VectorBufferBase.1951" }
%"class.WTF::VectorBufferBase.1951" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.1957" = type { %"class.absl::optional_internal::optional_data.1958" }
%"class.absl::optional_internal::optional_data.1958" = type { %"class.absl::optional_internal::optional_data_base.1959" }
%"class.absl::optional_internal::optional_data_base.1959" = type { %"class.absl::optional_internal::optional_data_dtor_base.1960" }
%"class.absl::optional_internal::optional_data_dtor_base.1960" = type { i8, %union.anon.1961 }
%union.anon.1961 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.absl::optional.1913" = type { %"class.absl::optional_internal::optional_data.1914" }
%"class.absl::optional_internal::optional_data.1914" = type { %"class.absl::optional_internal::optional_data_base.1915" }
%"class.absl::optional_internal::optional_data_base.1915" = type { %"class.absl::optional_internal::optional_data_dtor_base.1916" }
%"class.absl::optional_internal::optional_data_dtor_base.1916" = type { i8, [7 x i8], %union.anon.1917 }
%union.anon.1917 = type { %"struct.blink::NGPositionedFloat" }
%"struct.blink::NGPositionedFloat" = type <{ %class.scoped_refptr.1631, %"struct.blink::NGBfcOffset", i8, [7 x i8] }>
%"struct.blink::NGLineBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1909 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.1910", %class.scoped_refptr.1853, i32, i32, i32, i32, float, i32, [0 x %struct.anon.1912] }
%"class.WTF::RefCounted.1910" = type { %"class.base::RefCounted.1911" }
%"class.base::RefCounted.1911" = type { %"class.base::subtle::RefCountedBase" }
%struct.anon.1912 = type { i8* }
%"class.WTF::Vector.1923" = type { %"class.WTF::VectorBuffer.1924" }
%"class.WTF::VectorBuffer.1924" = type { %"class.WTF::VectorBufferBase.1925", [256 x i8] }
%"class.WTF::VectorBufferBase.1925" = type { %"class.blink::LayoutUnit"*, i32, i32 }
%"class.blink::NGInlineItem" = type { i32, i32, %class.scoped_refptr.1844, %"class.blink::LayoutObject"*, i32, i32 }
%"class.WTF::Vector.1928" = type { %"class.WTF::VectorBuffer.1929" }
%"class.WTF::VectorBuffer.1929" = type { %"class.WTF::VectorBufferBase.1930" }
%"class.WTF::VectorBufferBase.1930" = type { %class.scoped_refptr.1931*, i32, i32 }
%class.scoped_refptr.1931 = type { %"class.blink::NGBlockBreakToken"* }
%"class.blink::NGBlockBreakToken" = type { %"class.blink::NGBreakToken.base", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, [0 x %"class.blink::NGBreakToken"*] }
%"class.blink::NGBreakToken.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1783", [4 x i8], %"class.blink::LayoutBox"*, i16 }>
%"class.blink::LayoutUnit" = type { i32 }
%"class.absl::optional.1934" = type { %"class.absl::optional_internal::optional_data.1935" }
%"class.absl::optional_internal::optional_data.1935" = type { %"class.absl::optional_internal::optional_data_base.1936" }
%"class.absl::optional_internal::optional_data_base.1936" = type { %"class.absl::optional_internal::optional_data_dtor_base.1937" }
%"class.absl::optional_internal::optional_data_dtor_base.1937" = type { i8, %union.anon.1938 }
%union.anon.1938 = type { %"struct.blink::NGLineBreaker::RewindIndex" }
%"struct.blink::NGLineBreaker::RewindIndex" = type { i32, i32 }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1631, %"class.WTF::Vector.1798", %"class.std::__1::unique_ptr.1803", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1824, %"class.blink::Persistent.1825" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::Vector.1798" = type { %"class.WTF::VectorBuffer.1799" }
%"class.WTF::VectorBuffer.1799" = type { %"class.WTF::VectorBufferBase.1800", [8 x i8] }
%"class.WTF::VectorBufferBase.1800" = type { %class.scoped_refptr.1631*, i32, i32 }
%"class.std::__1::unique_ptr.1803" = type { %"class.std::__1::__compressed_pair.1804" }
%"class.std::__1::__compressed_pair.1804" = type { %"struct.std::__1::__compressed_pair_elem.1805" }
%"struct.std::__1::__compressed_pair_elem.1805" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1806", %"class.absl::optional.1811", %"class.absl::optional.1816" }
%"class.absl::optional.1806" = type { %"class.absl::optional_internal::optional_data.1807" }
%"class.absl::optional_internal::optional_data.1807" = type { %"class.absl::optional_internal::optional_data_base.1808" }
%"class.absl::optional_internal::optional_data_base.1808" = type { %"class.absl::optional_internal::optional_data_dtor_base.1809" }
%"class.absl::optional_internal::optional_data_dtor_base.1809" = type { i8, %union.anon.1810 }
%union.anon.1810 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1811" = type { %"class.absl::optional_internal::optional_data.1812" }
%"class.absl::optional_internal::optional_data.1812" = type { %"class.absl::optional_internal::optional_data_base.1813" }
%"class.absl::optional_internal::optional_data_base.1813" = type { %"class.absl::optional_internal::optional_data_dtor_base.1814" }
%"class.absl::optional_internal::optional_data_dtor_base.1814" = type { i8, [3 x i8], %union.anon.1815 }
%union.anon.1815 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1816" = type { %"class.absl::optional_internal::optional_data.1817" }
%"class.absl::optional_internal::optional_data.1817" = type { %"class.absl::optional_internal::optional_data_base.1818" }
%"class.absl::optional_internal::optional_data_base.1818" = type { %"class.absl::optional_internal::optional_data_dtor_base.1819" }
%"class.absl::optional_internal::optional_data_dtor_base.1819" = type { i8, %union.anon.1820 }
%union.anon.1820 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1824 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1825" = type { %"class.blink::PersistentBase.1826" }
%"class.blink::PersistentBase.1826" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1829", %"struct.blink::PhysicalRect", %"class.blink::Member.1839" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1829" = type { %"class.std::__1::__compressed_pair.1830" }
%"class.std::__1::__compressed_pair.1830" = type { %"struct.std::__1::__compressed_pair_elem.1831" }
%"struct.std::__1::__compressed_pair_elem.1831" = type { %"class.WTF::HashSet.1832"* }
%"class.WTF::HashSet.1832" = type { %"class.WTF::HashTable.1833" }
%"class.WTF::HashTable.1833" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1839" = type { %"class.blink::MemberBase.1840" }
%"class.blink::MemberBase.1840" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.WTF::Vector.1918" = type { %"class.WTF::VectorBuffer.1919" }
%"class.WTF::VectorBuffer.1919" = type { %"class.WTF::VectorBufferBase.1920", [192 x i8] }
%"class.WTF::VectorBufferBase.1920" = type { %"struct.blink::NGPositionedFloat"*, i32, i32 }
%"class.blink::NGInlineBreakToken" = type { %"class.blink::NGBreakToken.base", %class.scoped_refptr, i32, i32 }
%"class.blink::NGLayoutInputNode" = type <{ %"class.blink::LayoutBox"*, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.2050", %"class.std::__1::unique_ptr.2054" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::Persistent.2050" = type { %"class.blink::PersistentBase.2051" }
%"class.blink::PersistentBase.2051" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1882", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.2054" = type { %"class.std::__1::__compressed_pair.2055" }
%"class.std::__1::__compressed_pair.2055" = type { %"struct.std::__1::__compressed_pair_elem.2056" }
%"struct.std::__1::__compressed_pair_elem.2056" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.2057", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.2057" = type { %"class.WTF::HashTable.2060", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.2060" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.2063", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.2063" = type { %"class.std::__1::__compressed_pair.2064" }
%"class.std::__1::__compressed_pair.2064" = type { %"struct.std::__1::__compressed_pair_elem.2065" }
%"struct.std::__1::__compressed_pair_elem.2065" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.2066, %"class.std::__1::unique_ptr.2067", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1611", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.2066 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2085", i16, %class.scoped_refptr.2066 }
%"class.WTF::ThreadSafeRefCounted.2085" = type { %"class.base::RefCountedThreadSafe.2086" }
%"class.base::RefCountedThreadSafe.2086" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2067" = type { %"class.std::__1::__compressed_pair.2068" }
%"class.std::__1::__compressed_pair.2068" = type { %"struct.std::__1::__compressed_pair_elem.2069" }
%"struct.std::__1::__compressed_pair_elem.2069" = type { %"class.WTF::Vector.2070"* }
%"class.WTF::Vector.2070" = type { %"class.WTF::VectorBuffer.2071" }
%"class.WTF::VectorBuffer.2071" = type { %"class.WTF::VectorBufferBase.2072" }
%"class.WTF::VectorBufferBase.2072" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.2081, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.2081 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"struct.blink::NGInlineNodeData" = type <{ %"struct.blink::NGInlineItemsData", %"class.std::__1::unique_ptr.2087", %"class.std::__1::unique_ptr.2093", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2087" = type { %"class.std::__1::__compressed_pair.2088" }
%"class.std::__1::__compressed_pair.2088" = type { %"struct.std::__1::__compressed_pair_elem.2089" }
%"struct.std::__1::__compressed_pair_elem.2089" = type { %"struct.blink::NGInlineItemsData"* }
%"class.std::__1::unique_ptr.2093" = type { %"class.std::__1::__compressed_pair.2094" }
%"class.std::__1::__compressed_pair.2094" = type { %"struct.std::__1::__compressed_pair_elem.2095" }
%"struct.std::__1::__compressed_pair_elem.2095" = type { %"struct.blink::SvgInlineNodeData"* }
%"struct.blink::SvgInlineNodeData" = type { %"class.WTF::Vector.2096", %"class.WTF::Vector.2102", %"class.WTF::Vector.2102", %"class.WTF::HashMap.2107" }
%"class.WTF::Vector.2096" = type { %"class.WTF::VectorBuffer.2097" }
%"class.WTF::VectorBuffer.2097" = type { %"class.WTF::VectorBufferBase.2098" }
%"class.WTF::VectorBufferBase.2098" = type { %"struct.std::__1::pair.2099"*, i32, i32 }
%"struct.std::__1::pair.2099" = type opaque
%"class.WTF::Vector.2102" = type { %"class.WTF::VectorBuffer.2103" }
%"class.WTF::VectorBuffer.2103" = type { %"class.WTF::VectorBufferBase.2104" }
%"class.WTF::VectorBufferBase.2104" = type { %"struct.blink::SvgTextContentRange"*, i32, i32 }
%"struct.blink::SvgTextContentRange" = type { %"class.blink::LayoutObject"*, i32, i32 }
%"class.WTF::HashMap.2107" = type { %"class.WTF::HashTable.2108" }
%"class.WTF::HashTable.2108" = type <{ %"struct.WTF::KeyValuePair.2111"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2111" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::Vector.1965" = type { %"class.WTF::VectorBuffer.1966" }
%"class.WTF::VectorBuffer.1966" = type { %"class.WTF::VectorBufferBase.1967", [128 x i8] }
%"class.WTF::VectorBufferBase.1967" = type { %"class.blink::NGInlineItem"**, i32, i32 }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2152", %"class.blink::Member.2154", %"class.blink::Member.2156", %"class.blink::Member.2175", %"class.blink::Member.2177" }
%"class.blink::Member.2152" = type { %"class.blink::MemberBase.2153" }
%"class.blink::MemberBase.2153" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.2154" = type { %"class.blink::MemberBase.2155" }
%"class.blink::MemberBase.2155" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2156" = type { %"class.blink::MemberBase.2157" }
%"class.blink::MemberBase.2157" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2160", %"class.blink::HeapHashSet.2169" }
%"class.blink::HeapVector.2160" = type { %"class.WTF::Vector.2163" }
%"class.WTF::Vector.2163" = type { %"class.WTF::VectorBuffer.2164" }
%"class.WTF::VectorBuffer.2164" = type { %"class.WTF::VectorBufferBase.2165" }
%"class.WTF::VectorBufferBase.2165" = type { %"class.blink::Member.2166"*, i32, i32 }
%"class.blink::Member.2166" = type { %"class.blink::MemberBase.2167" }
%"class.blink::MemberBase.2167" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2169" = type { %"class.WTF::HashSet.2172" }
%"class.WTF::HashSet.2172" = type { %"class.WTF::HashTable.2173" }
%"class.WTF::HashTable.2173" = type <{ %"class.blink::Member.2166"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2175" = type { %"class.blink::MemberBase.2176" }
%"class.blink::MemberBase.2176" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2177" = type { %"class.blink::MemberBase.2178" }
%"class.blink::MemberBase.2178" = type { %"class.blink::HeapHashSet.2179"* }
%"class.blink::HeapHashSet.2179" = type opaque
%"class.WTF::Vector.1970" = type { %"class.WTF::VectorBuffer.1971" }
%"class.WTF::VectorBuffer.1971" = type { %"class.WTF::VectorBufferBase.1972", [5120 x i8] }
%"class.WTF::VectorBufferBase.1972" = type { %"struct.blink::NGInlineItemResult"*, i32, i32 }
%"class.blink::NGLineInfo" = type <{ %"struct.blink::NGInlineItemsData"*, %"class.blink::ComputedStyle"*, %"class.WTF::Vector.1970", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"struct.blink::NGUnpositionedFloat" = type { %"class.blink::NGBlockNode", %class.scoped_refptr.1931, %"struct.blink::LogicalSize", %"struct.blink::LogicalSize", %"struct.blink::LogicalSize", %"struct.blink::NGBfcOffset", %"class.blink::NGConstraintSpace"*, %"class.blink::ComputedStyle"*, %class.scoped_refptr.1631, %"struct.blink::NGBoxStrut" }
%"class.blink::NGMinMaxConstraintSpaceBuilder" = type { %"class.blink::NGConstraintSpaceBuilder" }
%"class.blink::NGConstraintSpaceBuilder" = type { %"class.blink::NGConstraintSpace", %"class.blink::LayoutUnit", i8, i8, i8, i8 }
%"class.WTF::Vector.1982" = type { %"class.WTF::VectorBuffer.1983" }
%"class.WTF::VectorBuffer.1983" = type { %"class.WTF::VectorBufferBase.1071", [32 x i8] }
%struct.ShapeCallbackContext = type { %"class.blink::NGLineBreaker"*, %"class.blink::NGInlineItem"* }
%"class.blink::ShapingLineBreaker" = type <{ %"class.blink::ShapeResult"* (i8*, i32, i32)*, i8*, %class.scoped_refptr.1844, %"class.blink::LazyLineBreakIterator"*, %"class.blink::Hyphenation"*, i8, [7 x i8] }>
%"struct.blink::ShapingLineBreaker::Result" = type <{ %"class.absl::optional.1899", i32, i8, i8, i8, i8 }>
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"struct.blink::RunSegmenter::RunSegmenterRange" = type { i32, i32, i32, i32, i32 }
%"struct.blink::ShapeResultView::Segment" = type { %"class.blink::ShapeResult"*, %"class.blink::ShapeResultView"*, i32, i32 }
%"struct.std::__1::default_delete.1774" = type { i8 }
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.2118", %"class.blink::WeakMember.966", i32, [4 x i8], %"class.blink::HeapHashSet.1251", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.2119", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.2118" = type { %"class.blink::MemberBase.344" }
%"class.absl::optional.2119" = type { %"class.absl::optional_internal::optional_data.2120" }
%"class.absl::optional_internal::optional_data.2120" = type { %"class.absl::optional_internal::optional_data_base.2121" }
%"class.absl::optional_internal::optional_data_base.2121" = type { %"class.absl::optional_internal::optional_data_dtor_base.2122" }
%"class.absl::optional_internal::optional_data_dtor_base.2122" = type { i8, %union.anon.2123 }
%union.anon.2123 = type { %"class.blink::FloatSize" }
%"class.blink::NGTableConstraintSpaceData" = type <{ %"class.WTF::RefCounted.1647", [4 x i8], %"class.WTF::Vector.1649", %"class.WTF::Vector.1654", %"class.WTF::Vector.1659", %"class.WTF::Vector.1664", %"class.blink::LayoutUnit", %"class.blink::WritingDirectionMode", [2 x i8], %"struct.blink::LogicalSize", i8, i8, i8, [5 x i8] }>
%"class.WTF::RefCounted.1647" = type { %"class.base::RefCounted.1648" }
%"class.base::RefCounted.1648" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1649" = type { %"class.WTF::VectorBuffer.1650" }
%"class.WTF::VectorBuffer.1650" = type { %"class.WTF::VectorBufferBase.1651" }
%"class.WTF::VectorBufferBase.1651" = type { %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::ColumnLocation" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1654" = type { %"class.WTF::VectorBuffer.1655" }
%"class.WTF::VectorBuffer.1655" = type { %"class.WTF::VectorBufferBase.1656" }
%"class.WTF::VectorBufferBase.1656" = type { %"struct.blink::NGTableConstraintSpaceData::Section"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Section" = type { i32, i32 }
%"class.WTF::Vector.1659" = type { %"class.WTF::VectorBuffer.1660" }
%"class.WTF::VectorBuffer.1660" = type { %"class.WTF::VectorBufferBase.1661" }
%"class.WTF::VectorBufferBase.1661" = type { %"struct.blink::NGTableConstraintSpaceData::Row"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Row" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1664" = type { %"class.WTF::VectorBuffer.1665" }
%"class.WTF::VectorBuffer.1665" = type { %"class.WTF::VectorBufferBase.1666" }
%"class.WTF::VectorBufferBase.1666" = type { %"struct.blink::NGTableConstraintSpaceData::Cell"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Cell" = type <{ %"struct.blink::NGBoxStrut", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>
%"class.blink::WritingDirectionMode" = type { i8, i8 }
%"class.WTF::VectorBuffer.302" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8], [4 x i8] }>
%"struct.std::__1::default_delete.473" = type { i8 }

$_ZN5blink21LazyLineBreakIteratorC2EN3WTF6StringERKNS1_12AtomicStringENS_13LineBreakTypeE = comdat any

$_ZN5blink21LazyLineBreakIterator14SetStartOffsetEj = comdat any

$_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev = comdat any

$_ZNK5blink12NGInlineItem5StyleEv = comdat any

$_ZN5blink18NGInlineItemResultD2Ev = comdat any

$_ZN5blink36ComputeLineMarginsForVisualContainerERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE = comdat any

$_ZN5blink30NGMinMaxConstraintSpaceBuilderC2ERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_17NGLayoutInputNodeEb = comdat any

$_ZN5blink17NGConstraintSpaceD2Ev = comdat any

$_ZN5blink25ComputeLineMarginsForSelfERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE = comdat any

$_ZN5blink18NGInlineItemResultaSERKS0_ = comdat any

$_ZNK3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF12VectorBufferIPKN5blink12NGInlineItemELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink12LayoutObject16ClearNeedsLayoutEv = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF12VectorBufferIjLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj = comdat any

$_ZN5blink17NGConstraintSpace8RareDataD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN5blink17NGShapeExclusionsD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN5blink21ComputeMarginsForSelfERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE = comdat any

$_ZN4absl17optional_internal18optional_data_baseIN5blink17NGPositionedFloatEE6assignIRKS3_EEvOT_ = comdat any

$_ZN5blink17ComputedStyleBaseD2Ev = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv = comdat any

$_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN5blink23StyleInheritedVariablesD2Ev = comdat any

$_ZN5blink14StyleVariablesD2Ev = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev = comdat any

$_ZN5blink18NinePieceImageDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev = comdat any

$_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev = comdat any

$_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev = comdat any

$_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_ = comdat any

$_ZN5blink13CSSTimingDataD2Ev = comdat any

$_ZN5blink16CSSAnimationDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev = comdat any

$_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18NGInlineItemResultEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm = comdat any

$_ZN3WTF6VectorIjLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_ = comdat any

$_ZN3WTF6VectorIjLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIjLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE7EraseAtEj = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink18NGInlineItemResultENS_18PartitionAllocatorEE15MoveOverlappingEPS2_S5_S5_b = comdat any

$_ZN3WTF6VectorIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZNK3WTF6VectorIN5blink17NGPositionedFloatELj8ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink17NGBlockBreakTokenEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink17NGBlockBreakTokenEEEEmm = comdat any

@.str = private unnamed_addr constant [49 x i8] c"result.break_offset > item_result->StartOffset()\00", align 1
@.str.1 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/core/layout/ng/inline/ng_line_breaker.cc\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"new_end <= item_results->size()\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"offset <= string_.length()\00", align 1
@.str.4 = private unnamed_addr constant [69 x i8] c"../../third_party/blink/renderer/platform/text/text_break_iterator.h\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.5 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/css/css_global_rule_set.h\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"features_.IsAlive()\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E = external local_unnamed_addr global i8, align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase40is_composite_bg_color_animation_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.14 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.15 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18NGInlineItemResultEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGInlineItemResult]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutUnit]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink17NGBlockBreakTokenEEEEPKcv = private unnamed_addr constant [93 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<const blink::NGBlockBreakToken>]\00", align 1

@_ZN5blink13NGLineBreakerC1ENS_12NGInlineNodeENS_17NGLineBreakerModeERKNS_17NGConstraintSpaceERKNS_23NGLineLayoutOpportunityERKN3WTF6VectorINS_17NGPositionedFloatELj8ENS9_18PartitionAllocatorEEEjPKNS_18NGInlineBreakTokenEPNS_16NGExclusionSpaceE = hidden unnamed_addr alias void (%"class.blink::NGLineBreaker"*, %"class.blink::LayoutBox"*, i64, i32, %"class.blink::NGConstraintSpace"*, %"struct.blink::NGLineLayoutOpportunity"*, %"class.WTF::Vector.1918"*, i32, %"class.blink::NGInlineBreakToken"*, %"class.blink::NGExclusionSpace"*), void (%"class.blink::NGLineBreaker"*, %"class.blink::LayoutBox"*, i64, i32, %"class.blink::NGConstraintSpace"*, %"struct.blink::NGLineLayoutOpportunity"*, %"class.WTF::Vector.1918"*, i32, %"class.blink::NGInlineBreakToken"*, %"class.blink::NGExclusionSpace"*)* @_ZN5blink13NGLineBreakerC2ENS_12NGInlineNodeENS_17NGLineBreakerModeERKNS_17NGConstraintSpaceERKNS_23NGLineLayoutOpportunityERKN3WTF6VectorINS_17NGPositionedFloatELj8ENS9_18PartitionAllocatorEEEjPKNS_18NGInlineBreakTokenEPNS_16NGExclusionSpaceE
@_ZN5blink13NGLineBreakerD1Ev = hidden unnamed_addr alias void (%"class.blink::NGLineBreaker"*), void (%"class.blink::NGLineBreaker"*)* @_ZN5blink13NGLineBreakerD2Ev

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink13NGLineBreaker21ComputeAvailableWidthEv(%"class.blink::NGLineBreaker"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 6, i32 1, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 6, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, -1
  %9 = select i1 %8, i32 -2147483648, i32 2147483647
  %10 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %5, i32 %7) #16
  %11 = extractvalue { i32, i1 } %10, 1
  %12 = extractvalue { i32, i1 } %10, 0
  %13 = select i1 %11, i32 %9, i32 %12, !prof !2
  store i32 %13, i32* %2, align 4
  %14 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 47
  %15 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %13, %16
  %18 = bitcast i32* %2 to %"class.blink::LayoutUnit"*
  %19 = select i1 %17, %"class.blink::LayoutUnit"* %14, %"class.blink::LayoutUnit"* %18
  %20 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %2, align 4
  %22 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22)
  store i32 2147483615, i32* %3, align 4
  %23 = icmp sgt i32 %21, 2147483615
  %24 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %25 = select i1 %23, %"class.blink::LayoutUnit"* %24, %"class.blink::LayoutUnit"* %18
  %26 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22)
  ret i32 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreakerC2ENS_12NGInlineNodeENS_17NGLineBreakerModeERKNS_17NGConstraintSpaceERKNS_23NGLineLayoutOpportunityERKN3WTF6VectorINS_17NGPositionedFloatELj8ENS9_18PartitionAllocatorEEEjPKNS_18NGInlineBreakTokenEPNS_16NGExclusionSpaceE(%"class.blink::NGLineBreaker"*, %"class.blink::LayoutBox"*, i64, i32, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"struct.blink::NGLineLayoutOpportunity"* nocapture readonly dereferenceable(24), %"class.WTF::Vector.1918"* dereferenceable(208), i32, %"class.blink::NGInlineBreakToken"*, %"class.blink::NGExclusionSpace"*) unnamed_addr #2 align 2 {
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca { %"class.blink::LayoutBox"*, i64 }, align 8
  %14 = bitcast { %"class.blink::LayoutBox"*, i64 }* %13 to %"class.blink::NGInlineNode"*
  %15 = alloca %"class.WTF::AtomicString", align 8
  %16 = alloca %"class.base::RepeatingCallback", align 8
  %17 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %13, i64 0, i32 0
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %17, align 8
  %18 = getelementptr inbounds { %"class.blink::LayoutBox"*, i64 }, { %"class.blink::LayoutBox"*, i64 }* %13, i64 0, i32 1
  store i64 %2, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 5, i32 0
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 6
  %24 = bitcast %"struct.blink::NGLineLayoutOpportunity"* %23 to i8*
  %25 = bitcast %"struct.blink::NGLineLayoutOpportunity"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 4 %25, i64 24, i1 false)
  %26 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 7
  %27 = bitcast %"class.blink::NGInlineNode"* %26 to i8*
  %28 = bitcast { %"class.blink::LayoutBox"*, i64 }* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %28, i64 16, i1 false)
  %29 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  store i32 %3, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 9
  %31 = bitcast { %"class.blink::LayoutBox"*, i64 }* %13 to %"class.blink::NGLayoutInputNode"*
  %32 = call zeroext i1 @_ZNK5blink17NGLayoutInputNode9IsSvgTextEv(%"class.blink::NGLayoutInputNode"* nonnull %31) #16
  %33 = zext i1 %32 to i8
  store i8 %33, i8* %30, align 4
  %34 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 10
  %35 = icmp ne %"class.blink::NGInlineBreakToken"* %8, null
  br i1 %35, label %36, label %46

36:                                               ; preds = %10
  %37 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %8, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %8, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %40, %36
  store i8 0, i8* %34, align 1
  %45 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 11
  br label %55

46:                                               ; preds = %10, %40
  %47 = bitcast { %"class.blink::LayoutBox"*, i64 }* %13 to %"class.blink::LayoutBlockFlow"**
  %48 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %47, align 8
  %49 = call zeroext i1 @_ZNK5blink15LayoutBlockFlow28CanContainFirstFormattedLineEv(%"class.blink::LayoutBlockFlow"* %48) #16
  %50 = zext i1 %49 to i8
  store i8 %50, i8* %34, align 1
  %51 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 11
  br i1 %49, label %52, label %55

52:                                               ; preds = %46
  %53 = call zeroext i1 @_ZNK5blink12NGInlineNode17UseFirstLineStyleEv(%"class.blink::NGInlineNode"* nonnull %14) #16
  %54 = zext i1 %53 to i8
  br label %55

55:                                               ; preds = %44, %52, %46
  %56 = phi i8* [ %51, %46 ], [ %51, %52 ], [ %45, %44 ]
  %57 = phi i8 [ 0, %46 ], [ %54, %52 ], [ 0, %44 ]
  store i8 %57, i8* %56, align 2
  %58 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 12
  store i8 0, i8* %58, align 1
  %59 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 13
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 14
  store i8 0, i8* %60, align 1
  %61 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 15
  store i8 1, i8* %61, align 2
  %62 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 16
  store i8 0, i8* %62, align 1
  %63 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 17
  store i8 0, i8* %63, align 4
  %64 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 18
  %65 = icmp eq i32 %3, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %55
  %67 = bitcast { %"class.blink::LayoutBox"*, i64 }* %13 to %"class.blink::LayoutBlockFlow"**
  %68 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %67, align 8
  br label %111

69:                                               ; preds = %55
  %70 = bitcast { %"class.blink::LayoutBox"*, i64 }* %13 to %"class.blink::LayoutObject"**
  %71 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %71, i64 0, i32 6, i32 0, i32 0
  %73 = load %"class.blink::Node"*, %"class.blink::Node"** %72, align 8
  %74 = icmp eq %"class.blink::Node"* %73, null
  %75 = bitcast %"class.blink::LayoutObject"* %71 to %"class.blink::LayoutBlockFlow"*
  br i1 %74, label %76, label %83

76:                                               ; preds = %69, %76
  %77 = phi %"class.blink::LayoutObject"* [ %79, %76 ], [ %71, %69 ]
  %78 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %77, i64 0, i32 7
  %79 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %79, i64 0, i32 6, i32 0, i32 0
  %81 = load %"class.blink::Node"*, %"class.blink::Node"** %80, align 8
  %82 = icmp eq %"class.blink::Node"* %81, null
  br i1 %82, label %76, label %83

83:                                               ; preds = %76, %69
  %84 = phi %"class.blink::Node"* [ %73, %69 ], [ %81, %76 ]
  %85 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %84, i64 0, i32 3, i32 0, i32 0
  %86 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %86, i64 0, i32 2, i32 0, i32 0
  %88 = load %"class.blink::Document"*, %"class.blink::Document"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %88, i64 0, i32 33
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %111, !prof !2

92:                                               ; preds = %83
  %93 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %71, i64 0, i32 5, i32 0
  %94 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %94, i64 0, i32 0, i32 9
  %96 = bitcast [20 x i8]* %95 to i160*
  %97 = load i160, i160* %96, align 8
  %98 = and i160 %97, 133143986176
  %99 = icmp eq i160 %98, 51539607552
  br i1 %99, label %100, label %110

100:                                              ; preds = %92
  %101 = and i160 %97, 15211807202738752817960438464512
  %102 = icmp eq i160 %101, 0
  %103 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %94, i64 0, i32 0, i32 5, i32 0, i32 0
  %104 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %104, i64 0, i32 8
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %104, i64 0, i32 3
  %107 = select i1 %102, %"class.blink::Length"* %105, %"class.blink::Length"* %106
  %108 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %107, i64 0, i32 2
  %109 = load i8, i8* %108, align 1
  switch i8 %109, label %111 [
    i8 2, label %110
    i8 1, label %110
    i8 8, label %110
  ]

110:                                              ; preds = %100, %100, %100, %92
  br label %111

111:                                              ; preds = %66, %110, %100, %83
  %112 = phi %"class.blink::LayoutBlockFlow"* [ %68, %66 ], [ %75, %100 ], [ %75, %110 ], [ %75, %83 ]
  %113 = phi i8 [ 0, %66 ], [ 1, %100 ], [ 0, %110 ], [ 0, %83 ]
  store i8 %113, i8* %64, align 1
  %114 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 19
  store i8 0, i8* %114, align 2
  %115 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 21
  %116 = icmp eq i8 %57, 0
  %117 = bitcast %"class.blink::LayoutBlockFlow"* %112 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %118 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %117, align 8
  %119 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %118, i64 213
  %120 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %119, align 8
  %121 = call %"struct.blink::NGInlineNodeData"* %120(%"class.blink::LayoutBlockFlow"* %112) #16
  br i1 %116, label %126, label %122

122:                                              ; preds = %111
  %123 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %121, i64 0, i32 1, i32 0, i32 0, i32 0
  %124 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %123, align 8
  %125 = icmp eq %"struct.blink::NGInlineItemsData"* %124, null
  br i1 %125, label %126, label %128

126:                                              ; preds = %111, %122
  %127 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %121, i64 0, i32 0
  br label %128

128:                                              ; preds = %122, %126
  %129 = phi %"struct.blink::NGInlineItemsData"* [ %127, %126 ], [ %124, %122 ]
  store %"struct.blink::NGInlineItemsData"* %129, %"struct.blink::NGInlineItemsData"** %115, align 8
  %130 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 22
  %131 = load i8, i8* %64, align 1, !range !3
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %133, label %155

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %129, i64 0, i32 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %130, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %136, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %137, label %158, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %158

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = zext i32 %145 to i33
  %147 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %146, i33 1) #16
  %148 = extractvalue { i33, i1 } %147, 1
  %149 = extractvalue { i33, i1 } %147, 0
  %150 = icmp slt i33 %149, 0
  %151 = or i1 %148, %150
  br i1 %151, label %152, label %153, !prof !2

152:                                              ; preds = %143
  call void @llvm.trap() #16
  unreachable

153:                                              ; preds = %143
  %154 = trunc i33 %149 to i32
  store i32 %154, i32* %144, align 4
  br label %158

155:                                              ; preds = %128
  %156 = call %"class.WTF::StringImpl"* @_ZN5blink12NGInlineNode31TextContentForStickyImagesQuirkERKNS_17NGInlineItemsDataE(%"struct.blink::NGInlineItemsData"* dereferenceable(40) %129) #16
  %157 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %130, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %156, %"class.WTF::StringImpl"** %157, align 8
  br label %158

158:                                              ; preds = %153, %138, %133, %155
  %159 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 23
  store %"class.blink::NGConstraintSpace"* %4, %"class.blink::NGConstraintSpace"** %159, align 8
  %160 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 24
  store %"class.blink::NGExclusionSpace"* %9, %"class.blink::NGExclusionSpace"** %160, align 8
  %161 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 25, i32 0
  store %"class.blink::NGInlineBreakToken"* %8, %"class.blink::NGInlineBreakToken"** %161, align 8
  %162 = icmp eq %"class.blink::NGInlineBreakToken"* %8, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %164) #16
  br label %165

165:                                              ; preds = %158, %163
  %166 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 26, i32 0
  store %"class.blink::ComputedStyle"* null, %"class.blink::ComputedStyle"** %166, align 8
  %167 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %130, i64 0, i32 0, i32 0
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %188, label %171

171:                                              ; preds = %165
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %188

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = zext i32 %178 to i33
  %180 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %179, i33 1) #16
  %181 = extractvalue { i33, i1 } %180, 1
  %182 = extractvalue { i33, i1 } %180, 0
  %183 = icmp slt i33 %182, 0
  %184 = or i1 %181, %183
  br i1 %184, label %185, label %186, !prof !2

185:                                              ; preds = %176
  call void @llvm.trap() #16
  unreachable

186:                                              ; preds = %176
  %187 = trunc i33 %182 to i32
  store i32 %187, i32* %177, align 4
  br label %188

188:                                              ; preds = %165, %171, %186
  %189 = bitcast %"class.WTF::AtomicString"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #16
  %190 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %190, align 8
  call void @_ZN5blink21LazyLineBreakIteratorC2EN3WTF6StringERKNS1_12AtomicStringENS_13LineBreakTypeE(%"class.blink::LazyLineBreakIterator"* %167, %"class.WTF::StringImpl"* %169, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %15, i32 0)
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %206, label %193

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %199 = load i32, i32* %198, align 4
  br i1 %197, label %200, label %202

200:                                              ; preds = %193
  %201 = add i32 %199, -1
  store i32 %201, i32* %198, align 4
  br label %202

202:                                              ; preds = %200, %193
  %203 = phi i32 [ %201, %200 ], [ %199, %193 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %202
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %191) #16
  br label %206

206:                                              ; preds = %188, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #16
  %207 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %207, align 8
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %168, align 8
  %209 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 28, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %208, %"class.WTF::StringImpl"** %209, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %210, label %228, label %211

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %228

216:                                              ; preds = %211
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %218 = load i32, i32* %217, align 4
  %219 = zext i32 %218 to i33
  %220 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %219, i33 1) #16
  %221 = extractvalue { i33, i1 } %220, 1
  %222 = extractvalue { i33, i1 } %220, 0
  %223 = icmp slt i33 %222, 0
  %224 = or i1 %221, %223
  br i1 %224, label %225, label %226, !prof !2

225:                                              ; preds = %216
  call void @llvm.trap() #16
  unreachable

226:                                              ; preds = %216
  %227 = trunc i33 %222 to i32
  store i32 %227, i32* %217, align 4
  br label %228

228:                                              ; preds = %206, %211, %226
  %229 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 28, i32 1, i32 0
  %230 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %16, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %229, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %230) #16
  %231 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %16, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %231) #16
  %232 = load i8, i8* %30, align 4, !range !3
  %233 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 29, i32 0
  store %"class.WTF::String"* %130, %"class.WTF::String"** %233, align 8
  %234 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 29, i32 1
  %235 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 29, i32 11
  %236 = bitcast float* %234 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %236, i8 0, i64 28, i1 false) #16
  store i8 %232, i8* %235, align 4
  %237 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 30
  store i8 0, i8* %237, align 8
  %238 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 32
  store %"class.blink::Hyphenation"* null, %"class.blink::Hyphenation"** %238, align 8
  %239 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %239, align 4
  %240 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 34
  store i8 0, i8* %240, align 8
  %241 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %241, align 8
  %242 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 37
  store %"class.WTF::Vector.1918"* %6, %"class.WTF::Vector.1918"** %242, align 8
  %243 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 38
  store i32 0, i32* %243, align 8
  %244 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 39
  store i32 %7, i32* %244, align 4
  %245 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 40
  %246 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 43
  %247 = bitcast %"class.blink::NGInlineNode"* %26 to %"class.blink::LayoutBlockFlow"**
  %248 = bitcast %"class.WTF::Vector.1923"** %245 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %248, i8 0, i64 24, i1 false)
  %249 = load %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"** %247, align 8
  %250 = bitcast %"class.blink::LayoutBlockFlow"* %249 to %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)***
  %251 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)**, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*** %250, align 8
  %252 = getelementptr inbounds %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %251, i64 213
  %253 = load %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)*, %"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)** %252, align 8
  %254 = call %"struct.blink::NGInlineNodeData"* %253(%"class.blink::LayoutBlockFlow"* %249) #16
  %255 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %254, i64 0, i32 3
  %256 = load i8, i8* %255, align 8
  %257 = lshr i8 %256, 1
  %258 = and i8 %257, 1
  store i8 %258, i8* %246, align 8
  %259 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 45
  %260 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 47
  %261 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 51, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %261, align 4
  %262 = bitcast i32* %11 to i8*
  %263 = bitcast %"class.WTF::Vector.1928"* %259 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %263, i8 0, i64 29, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %262)
  %264 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 6, i32 1, i32 0
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 6, i32 0, i32 0
  %267 = load i32, i32* %266, align 4
  %268 = icmp sgt i32 %267, -1
  %269 = select i1 %268, i32 -2147483648, i32 2147483647
  %270 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %265, i32 %267) #16
  %271 = extractvalue { i32, i1 } %270, 1
  %272 = extractvalue { i32, i1 } %270, 0
  %273 = select i1 %271, i32 %269, i32 %272, !prof !2
  store i32 %273, i32* %11, align 4
  %274 = icmp slt i32 %273, 0
  %275 = bitcast i32* %11 to %"class.blink::LayoutUnit"*
  %276 = select i1 %274, %"class.blink::LayoutUnit"* %260, %"class.blink::LayoutUnit"* %275
  %277 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %276, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  store i32 %278, i32* %11, align 4
  %279 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %279)
  store i32 2147483615, i32* %12, align 4
  %280 = icmp sgt i32 %278, 2147483615
  %281 = bitcast i32* %12 to %"class.blink::LayoutUnit"*
  %282 = select i1 %280, %"class.blink::LayoutUnit"* %281, %"class.blink::LayoutUnit"* %275
  %283 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %282, i64 0, i32 0
  %284 = load i32, i32* %283, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %279)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %262)
  store i32 %284, i32* %22, align 4
  %285 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 8
  store i32 2, i32* %285, align 8
  br i1 %35, label %286, label %304

286:                                              ; preds = %228
  %287 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %8, i64 0, i32 1, i32 0
  %288 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %287, align 8
  %289 = icmp eq %"class.blink::ComputedStyle"* %288, null
  br i1 %289, label %304, label %290, !prof !2

290:                                              ; preds = %286
  %291 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %8, i64 0, i32 2
  %292 = load i32, i32* %291, align 8
  store i32 %292, i32* %19, align 4
  %293 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %8, i64 0, i32 3
  %294 = load i32, i32* %293, align 4
  store i32 %294, i32* %20, align 8
  call void @_ZN5blink21LazyLineBreakIterator14SetStartOffsetEj(%"class.blink::LazyLineBreakIterator"* %167, i32 %294)
  %295 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %8, i64 0, i32 0, i32 4
  %296 = load i16, i16* %295, align 8
  %297 = lshr i16 %296, 2
  %298 = trunc i16 %297 to i8
  %299 = and i8 %298, 1
  store i8 %299, i8* %63, align 4
  %300 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %115, align 8
  %301 = load i32, i32* %19, align 4
  %302 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %300, i64 0, i32 1
  %303 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZNK3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1841"* %302, i32 %301) #16
  call void @_ZN5blink13NGLineBreaker15SetCurrentStyleERKNS_13ComputedStyleE(%"class.blink::NGLineBreaker"* %0, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %288)
  br label %304

304:                                              ; preds = %290, %286, %228
  ret void
}

declare zeroext i1 @_ZNK5blink17NGLayoutInputNode9IsSvgTextEv(%"class.blink::NGLayoutInputNode"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink12NGInlineNode17UseFirstLineStyleEv(%"class.blink::NGInlineNode"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink12NGInlineNode31TextContentForStickyImagesQuirkERKNS_17NGInlineItemsDataE(%"struct.blink::NGInlineItemsData"* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21LazyLineBreakIteratorC2EN3WTF6StringERKNS1_12AtomicStringENS_13LineBreakTypeE(%"class.blink::LazyLineBreakIterator"*, %"class.WTF::StringImpl"*, %"class.WTF::AtomicString"* dereferenceable(8), i32) unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %5, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #16
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #16
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %4, %7, %22
  %25 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %46

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #16
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %34
  tail call void @llvm.trap() #16
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %46

46:                                               ; preds = %24, %29, %44
  %47 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 2
  store %"class.icu_69::BreakIterator"* null, %"class.icu_69::BreakIterator"** %47, align 8
  %48 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 5, i32 0
  store i16* null, i16** %48, align 8
  %49 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 5, i32 1
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 7
  store i32 %3, i32* %51, align 4
  %52 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 8
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 0
  store i16 0, i16* %53, align 8
  %54 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 3, i64 1
  store i16 0, i16* %54, align 2
  br i1 %6, label %68, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #16
  br label %68

68:                                               ; preds = %46, %64, %67
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21LazyLineBreakIterator14SetStartOffsetEj(%"class.blink::LazyLineBreakIterator"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %2 ]
  %16 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = icmp ult i32 %15, %1
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  store i8* null, i8** %7, align 8
  br label %28

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8* %20, i8* %21) #16
  %22 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  store i8* %23, i8** %7, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.4, i64 0, i64 0), i32 220, %"class.logging::CheckOpResult"* nonnull %4) #16
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #16
  br label %28

28:                                               ; preds = %18, %19, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %29 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 6
  store i32 %1, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 2
  %31 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %30, align 8
  %32 = icmp eq %"class.icu_69::BreakIterator"* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %28
  call void @_ZN5blink24ReleaseLineBreakIteratorEPN6icu_6913BreakIteratorE(%"class.icu_69::BreakIterator"* nonnull %31) #16
  br label %34

34:                                               ; preds = %28, %33
  store %"class.icu_69::BreakIterator"* null, %"class.icu_69::BreakIterator"** %30, align 8
  %35 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 5, i32 0
  store i16* null, i16** %35, align 8
  %36 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %0, i64 0, i32 5, i32 1
  store i32 0, i32* %36, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker15SetCurrentStyleERKNS_13ComputedStyleE(%"class.blink::NGLineBreaker"*, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.scoped_refptr, align 8
  %4 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 26
  %5 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = icmp eq %"class.blink::ComputedStyle"* %6, %1
  %8 = ptrtoint %"class.blink::ComputedStyle"* %6 to i64
  br i1 %7, label %169, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.blink::ComputedStyle"* %1, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %9
  %12 = bitcast %class.scoped_refptr* %4 to i64*
  br label %17

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %14) #16
  %15 = bitcast %class.scoped_refptr* %4 to i64*
  %16 = load i64, i64* %15, align 8
  br label %17

17:                                               ; preds = %11, %13
  %18 = phi i64* [ %12, %11 ], [ %15, %13 ]
  %19 = phi i64 [ %8, %11 ], [ %16, %13 ]
  %20 = bitcast %class.scoped_refptr* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  %21 = bitcast %class.scoped_refptr* %3 to i64*
  %22 = ptrtoint %"class.blink::ComputedStyle"* %1 to i64
  store i64 %22, i64* %18, align 8
  store i64 %19, i64* %21, align 8
  call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  %23 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 9
  %24 = load i8, i8* %23, align 4, !range !3
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 12
  store i8 0, i8* %27, align 1
  br label %161

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %30 = bitcast [20 x i8]* %29 to i160*
  %31 = load i160, i160* %30, align 8
  %32 = and i160 %31, 73728
  %33 = icmp eq i160 %32, 0
  %34 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 12
  %35 = zext i1 %33 to i8
  store i8 %35, i8* %34, align 1
  br i1 %33, label %36, label %161

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %38, i64 0, i32 23
  %40 = bitcast [5 x i8]* %39 to i40*
  %41 = load i40, i40* %40, align 8
  %42 = lshr i40 %41, 30
  %43 = trunc i40 %42 to i32
  %44 = and i32 %43, 3
  switch i32 %44, label %56 [
    i32 0, label %47
    i32 1, label %45
    i32 3, label %58
    i32 2, label %46
  ]

45:                                               ; preds = %36
  br label %47

46:                                               ; preds = %36
  br label %47

47:                                               ; preds = %36, %46, %45
  %48 = phi i32 [ 3, %46 ], [ 1, %45 ], [ %44, %36 ]
  %49 = lshr i40 %41, 18
  %50 = trunc i40 %49 to i32
  %51 = and i32 %50, 3
  switch i32 %51, label %57 [
    i32 2, label %58
    i32 1, label %52
  ]

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  br label %58

56:                                               ; preds = %36
  unreachable

57:                                               ; preds = %47
  br label %58

58:                                               ; preds = %47, %57, %36, %52
  %59 = phi i32 [ %48, %47 ], [ %48, %52 ], [ 0, %36 ], [ %48, %57 ]
  %60 = phi i1 [ true, %47 ], [ %55, %52 ], [ true, %36 ], [ false, %57 ]
  %61 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 13
  %62 = zext i1 %60 to i8
  store i8 %62, i8* %61, align 8
  %63 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 14
  %64 = load i8, i8* %63, align 1, !range !3
  %65 = icmp eq i8 %64, 0
  %66 = xor i1 %60, true
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %75, !prof !4

68:                                               ; preds = %58
  %69 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %37, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %69, i64 0, i32 23
  %71 = bitcast [5 x i8]* %70 to i40*
  %72 = load i40, i40* %71, align 8
  %73 = and i40 %72, 896
  %74 = icmp eq i40 %73, 640
  br i1 %74, label %75, label %76

75:                                               ; preds = %58, %68
  br label %76

76:                                               ; preds = %68, %75
  %77 = phi i32 [ 2, %75 ], [ %59, %68 ]
  %78 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 7
  store i32 %77, i32* %78, align 4
  %79 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %37, align 8
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %79, i64 0, i32 23
  %81 = bitcast [5 x i8]* %80 to i40*
  %82 = load i40, i40* %81, align 8
  %83 = and i40 %82, 196608
  %84 = icmp ne i40 %83, 0
  %85 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 15
  %86 = zext i1 %84 to i8
  store i8 %86, i8* %85, align 2
  %87 = call %"class.blink::Hyphenation"* @_ZNK5blink13ComputedStyle14GetHyphenationEv(%"class.blink::ComputedStyle"* %1) #16
  %88 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 32
  store %"class.blink::Hyphenation"* %87, %"class.blink::Hyphenation"** %88, align 8
  %89 = load i160, i160* %30, align 8
  %90 = and i160 %89, 520192
  %91 = icmp eq i160 %90, 262144
  br i1 %91, label %92, label %94

92:                                               ; preds = %76
  %93 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 8
  store i32 3, i32* %93, align 8
  br label %94

94:                                               ; preds = %92, %76
  %95 = call %"class.WTF::StringImpl"* @_ZNK5blink13ComputedStyle26LocaleForLineBreakIteratorEv(%"class.blink::ComputedStyle"* %1) #16
  %96 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 1
  %97 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %96, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %95, %98
  br i1 %99, label %146, label %100

100:                                              ; preds = %94
  %101 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %101, label %120, label %102

102:                                              ; preds = %100
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %120

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i33
  %111 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %110, i33 1) #16
  %112 = extractvalue { i33, i1 } %111, 1
  %113 = extractvalue { i33, i1 } %111, 0
  %114 = icmp slt i33 %113, 0
  %115 = or i1 %112, %114
  br i1 %115, label %116, label %117, !prof !2

116:                                              ; preds = %107
  call void @llvm.trap() #16
  unreachable

117:                                              ; preds = %107
  %118 = trunc i33 %113 to i32
  store i32 %118, i32* %108, align 4
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  br label %120

120:                                              ; preds = %117, %102, %100
  %121 = phi %"class.WTF::StringImpl"* [ %98, %100 ], [ %98, %102 ], [ %119, %117 ]
  %122 = ptrtoint %"class.WTF::StringImpl"* %95 to i64
  %123 = bitcast %"class.WTF::AtomicString"* %96 to i64*
  store i64 %122, i64* %123, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #16
  br label %138

138:                                              ; preds = %120, %134, %137
  %139 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 2
  %140 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %139, align 8
  %141 = icmp eq %"class.icu_69::BreakIterator"* %140, null
  br i1 %141, label %143, label %142

142:                                              ; preds = %138
  call void @_ZN5blink24ReleaseLineBreakIteratorEPN6icu_6913BreakIteratorE(%"class.icu_69::BreakIterator"* nonnull %140) #16
  br label %143

143:                                              ; preds = %142, %138
  store %"class.icu_69::BreakIterator"* null, %"class.icu_69::BreakIterator"** %139, align 8
  %144 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 5, i32 0
  store i16* null, i16** %144, align 8
  %145 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 5, i32 1
  store i32 0, i32* %145, align 8
  br label %146

146:                                              ; preds = %94, %143
  %147 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %146
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #16
  br label %161

161:                                              ; preds = %160, %157, %146, %26, %28
  %162 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 29
  %163 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %164 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %164, i64 0, i32 1, i32 0, i32 0
  %166 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %166, i64 0, i32 1, i32 0
  %168 = call zeroext i1 @_ZN5blink18ShapeResultSpacingIN3WTF6StringEE10SetSpacingERKNS_15FontDescriptionE(%"class.blink::ShapeResultSpacing"* %162, %"class.blink::FontDescription"* dereferenceable(80) %167) #16
  br label %169

169:                                              ; preds = %2, %161
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreakerD2Ev(%"class.blink::NGLineBreaker"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 45
  %3 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.1931*, %class.scoped_refptr.1931** %3, align 8
  %5 = icmp eq %class.scoped_refptr.1931* %4, null
  br i1 %5, label %40, label %6, !prof !5

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.1931* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 45, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.1931, %class.scoped_refptr.1931* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %class.scoped_refptr.1931* [ %33, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.1931, %class.scoped_refptr.1931* %15, i64 0, i32 0
  %17 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %16, align 8
  %18 = icmp eq %"class.blink::NGBlockBreakToken"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %17, i64 0, i32 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %20, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #16
  %22 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %20, i64 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %20, i64 -2
  %27 = bitcast %"class.base::RefCounted.1784"* %26 to %"class.blink::NGBreakToken"*
  %28 = bitcast %"class.base::RefCounted.1784"* %26 to void (%"class.blink::NGBreakToken"*)***
  %29 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %29, i64 1
  %31 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %30, align 8
  tail call void %31(%"class.blink::NGBreakToken"* nonnull %27) #16
  br label %32

32:                                               ; preds = %25, %19, %14
  %33 = getelementptr inbounds %class.scoped_refptr.1931, %class.scoped_refptr.1931* %15, i64 1
  %34 = icmp eq %class.scoped_refptr.1931* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %36 = bitcast %"class.WTF::Vector.1928"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i8* [ %37, %35 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #16
  store %class.scoped_refptr.1931* null, %class.scoped_refptr.1931** %3, align 8
  br label %40

40:                                               ; preds = %1, %38
  %41 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !3
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %56, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %46 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %45, align 8
  %47 = icmp eq %"class.blink::ShapeResultView"* %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %46, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %49) #16
  %50 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %46, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %46) #16
  %54 = bitcast %"class.blink::ShapeResultView"* %46 to i8*
  tail call void @free(i8* %54) #16
  br label %55

55:                                               ; preds = %53, %48, %44
  store i8 0, i8* %41, align 8
  br label %56

56:                                               ; preds = %40, %55
  %57 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 28, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %57) #16
  %58 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 28, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #16
  br label %74

74:                                               ; preds = %56, %70, %73
  %75 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 2
  %76 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %75, align 8
  %77 = icmp eq %"class.icu_69::BreakIterator"* %76, null
  br i1 %77, label %79, label %78

78:                                               ; preds = %74
  tail call void @_ZN5blink24ReleaseLineBreakIteratorEPN6icu_6913BreakIteratorE(%"class.icu_69::BreakIterator"* nonnull %76) #16
  br label %79

79:                                               ; preds = %78, %74
  %80 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 1, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #16
  br label %96

96:                                               ; preds = %95, %92, %79
  %97 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #16
  br label %113

113:                                              ; preds = %96, %109, %112
  %114 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 26
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr* %114) #16
  %115 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 25, i32 0
  %116 = load %"class.blink::NGInlineBreakToken"*, %"class.blink::NGInlineBreakToken"** %115, align 8
  %117 = icmp eq %"class.blink::NGInlineBreakToken"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %116, i64 0, i32 0, i32 1, i32 0
  %120 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %119, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %120) #16
  %121 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %119, i64 0, i32 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %131

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %119, i64 -2
  %126 = bitcast %"class.base::RefCounted.1784"* %125 to %"class.blink::NGBreakToken"*
  %127 = bitcast %"class.base::RefCounted.1784"* %125 to void (%"class.blink::NGBreakToken"*)***
  %128 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %128, i64 1
  %130 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %129, align 8
  tail call void %130(%"class.blink::NGBreakToken"* nonnull %126) #16
  br label %131

131:                                              ; preds = %113, %118, %124
  %132 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 22, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #16
  br label %148

148:                                              ; preds = %131, %144, %147
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %0, i64 0, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyle"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #16
  %8 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %28

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 -23
  %13 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 1
  %14 = bitcast %"class.base::RefCounted.732"* %13 to %"class.blink::StyleCachedData"**
  %15 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %14, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %14, align 8
  %16 = icmp eq %"class.blink::StyleCachedData"* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %18, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %18, align 8
  %20 = icmp eq %"class.WTF::Vector.739"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  tail call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv(%"class.WTF::Vector.739"* nonnull %19) #16
  %22 = bitcast %"class.WTF::Vector.739"* %19 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %22) #16
  br label %23

23:                                               ; preds = %21, %17
  %24 = bitcast %"class.blink::StyleCachedData"* %15 to i8*
  tail call void @_ZdlPv(i8* %24) #17
  br label %25

25:                                               ; preds = %23, %11
  %26 = bitcast %"class.base::RefCounted.732"* %12 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* %26) #16
  %27 = bitcast %"class.base::RefCounted.732"* %12 to i8*
  tail call void @free(i8* %27) #16
  br label %28

28:                                               ; preds = %25, %5, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink13NGLineBreaker23SetIntrinsicSizeOutputsEPN3WTF6VectorINS_10LayoutUnitELj64ENS1_18PartitionAllocatorEEEPb(%"class.blink::NGLineBreaker"* nocapture, %"class.WTF::Vector.1923"*, i8*) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 40
  store %"class.WTF::Vector.1923"* %1, %"class.WTF::Vector.1923"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 41
  store i8* %2, i8** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker20ComputeBaseDirectionEv(%"class.blink::NGLineBreaker"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 7
  %4 = bitcast %"class.blink::NGInlineNode"* %3 to %"class.blink::LayoutObject"**
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 5, i32 0
  %7 = bitcast %"class.blink::ComputedStyle"** %6 to %"class.blink::ComputedStyleBase"**
  %8 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %8, i64 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 541598767187353870268366848
  %13 = icmp eq i160 %12, 309485009821345068724781056
  br i1 %13, label %14, label %139

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 22, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %139

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 30
  %23 = load i8, i8* %22, align 8, !range !3
  %24 = icmp eq i8 %23, 0
  %25 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  br i1 %24, label %27, label %39

27:                                               ; preds = %21
  %28 = icmp eq i32 %26, 0
  %29 = icmp eq %"class.WTF::StringImpl"* %16, null
  %30 = or i1 %29, %28
  br i1 %30, label %139, label %31

31:                                               ; preds = %27
  %32 = add i32 %26, -1
  %33 = tail call i32 @_ZN3WTF10StringImpl11ReverseFindEDsj(%"class.WTF::StringImpl"* nonnull %16, i16 zeroext 10, i32 %32) #16
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %139, label %35

35:                                               ; preds = %31
  %36 = add nuw i32 %33, 1
  %37 = load i32, i32* %25, align 8
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  br label %39

39:                                               ; preds = %21, %35
  %40 = phi %"class.WTF::StringImpl"* [ %38, %35 ], [ %16, %21 ]
  %41 = phi i32 [ %37, %35 ], [ %26, %21 ]
  %42 = phi i32 [ %36, %35 ], [ %26, %21 ]
  %43 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %43, label %81, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 1
  br i1 %48, label %65, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp ugt i32 %52, %41
  br i1 %53, label %54, label %81

54:                                               ; preds = %50
  %55 = bitcast %"class.WTF::StringImpl"* %49 to i8*
  %56 = zext i32 %41 to i64
  %57 = getelementptr inbounds i8, i8* %55, i64 %56
  %58 = sub i32 %52, %41
  %59 = zext i32 %58 to i64
  %60 = tail call i8* @memchr(i8* %57, i32 10, i64 %59) #18
  %61 = icmp eq i8* %60, null
  %62 = ptrtoint i8* %60 to i64
  %63 = ptrtoint %"class.WTF::StringImpl"* %49 to i64
  %64 = sub i64 %62, %63
  br i1 %61, label %81, label %83

65:                                               ; preds = %44
  %66 = bitcast %"class.WTF::StringImpl"* %49 to i16*
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = icmp ugt i32 %68, %41
  br i1 %69, label %70, label %81

70:                                               ; preds = %65
  %71 = zext i32 %41 to i64
  br label %72

72:                                               ; preds = %77, %70
  %73 = phi i64 [ %71, %70 ], [ %78, %77 ]
  %74 = getelementptr inbounds i16, i16* %66, i64 %73
  %75 = load i16, i16* %74, align 2
  %76 = icmp eq i16 %75, 10
  br i1 %76, label %83, label %77

77:                                               ; preds = %72
  %78 = add nuw nsw i64 %73, 1
  %79 = trunc i64 %78 to i32
  %80 = icmp eq i32 %68, %79
  br i1 %80, label %81, label %72

81:                                               ; preds = %77, %39, %50, %65, %54
  %82 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #16
  br label %88

83:                                               ; preds = %72, %54
  %84 = phi i64 [ %64, %54 ], [ %73, %72 ]
  %85 = trunc i64 %84 to i32
  %86 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #16
  %87 = icmp eq i32 %85, -1
  br i1 %87, label %88, label %117

88:                                               ; preds = %81, %83
  %89 = phi i8* [ %82, %81 ], [ %86, %83 ]
  br i1 %43, label %112, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = sub i32 %92, %42
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %93, i32* %94, align 8
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %95, align 8
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 1
  br i1 %99, label %106, label %101

101:                                              ; preds = %90
  %102 = bitcast %"class.WTF::StringImpl"* %100 to i8*
  %103 = zext i32 %42 to i64
  %104 = getelementptr inbounds i8, i8* %102, i64 %103
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* %104, i8** %105, align 8
  br label %135

106:                                              ; preds = %90
  %107 = bitcast %"class.WTF::StringImpl"* %100 to i16*
  %108 = zext i32 %42 to i64
  %109 = getelementptr inbounds i16, i16* %107, i64 %108
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %111 = bitcast i8** %110 to i16**
  store i16* %109, i16** %111, align 8
  br label %135

112:                                              ; preds = %88
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 0, i32* %113, align 8
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %114, align 8
  %115 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %116 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %115, i64* %116, align 8
  br label %135

117:                                              ; preds = %83
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  %119 = sub i32 %85, %42
  store i32 %119, i32* %118, align 8
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %120, align 8
  %121 = load atomic i32, i32* %45 monotonic, align 4
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %129, label %124

124:                                              ; preds = %117
  %125 = bitcast %"class.WTF::StringImpl"* %49 to i8*
  %126 = zext i32 %42 to i64
  %127 = getelementptr inbounds i8, i8* %125, i64 %126
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* %127, i8** %128, align 8
  br label %135

129:                                              ; preds = %117
  %130 = bitcast %"class.WTF::StringImpl"* %49 to i16*
  %131 = zext i32 %42 to i64
  %132 = getelementptr inbounds i16, i16* %130, i64 %131
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %134 = bitcast i8** %133 to i16**
  store i16* %132, i16** %134, align 8
  br label %135

135:                                              ; preds = %129, %124, %112, %106, %101
  %136 = phi i8* [ %89, %101 ], [ %89, %106 ], [ %89, %112 ], [ %86, %124 ], [ %86, %129 ]
  %137 = call zeroext i8 @_ZN5blink15NGBidiParagraph22BaseDirectionForStringERKN3WTF10StringViewE(%"class.WTF::StringView"* nonnull dereferenceable(24) %2) #16
  %138 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 43
  store i8 %137, i8* %138, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %136) #16
  br label %139

139:                                              ; preds = %14, %31, %27, %135, %1
  ret void
}

declare zeroext i8 @_ZN5blink15NGBidiParagraph22BaseDirectionForStringERKN3WTF10StringViewE(%"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker26RecalcClonedBoxDecorationsEv(%"class.blink::NGLineBreaker"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %"class.WTF::Vector.1965", align 8
  %5 = alloca %"struct.blink::NGInlineItemResult", align 8
  %6 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 46
  %7 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 47
  %8 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 48, i32 0
  %10 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 49
  %11 = bitcast %"class.WTF::Vector.1965"* %4 to i8*
  %12 = bitcast i32* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 13, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %11) #16
  %13 = getelementptr inbounds %"class.WTF::Vector.1965", %"class.WTF::Vector.1965"* %4, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 128, i1 false)
  %14 = getelementptr inbounds %"class.WTF::Vector.1965", %"class.WTF::Vector.1965"* %4, i64 0, i32 0, i32 1, i64 0
  %15 = bitcast %"class.WTF::Vector.1965"* %4 to i8**
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::Vector.1965", %"class.WTF::Vector.1965"* %4, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %16, align 8
  %17 = getelementptr inbounds %"class.WTF::Vector.1965", %"class.WTF::Vector.1965"* %4, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 21
  %19 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  call void @_ZNK5blink17NGInlineItemsData15GetOpenTagItemsEjPN3WTF6VectorIPKNS_12NGInlineItemELj16ENS1_18PartitionAllocatorEEE(%"struct.blink::NGInlineItemsData"* %19, i32 %21, %"class.WTF::Vector.1965"* nonnull %4) #16
  %22 = getelementptr inbounds %"class.WTF::Vector.1965", %"class.WTF::Vector.1965"* %4, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::NGInlineItem"**, %"class.blink::NGInlineItem"*** %22, align 8
  %24 = load i32, i32* %17, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %23, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %38, label %28, !prof !6

28:                                               ; preds = %1
  %29 = bitcast %"struct.blink::NGInlineItemResult"* %5 to i8*
  %30 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 23
  %31 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %5, i64 0, i32 4, i32 0
  %32 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %5, i64 0, i32 11, i32 1, i32 0
  %33 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %5, i64 0, i32 12, i32 1, i32 0
  %34 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %5, i64 0, i32 13, i32 1, i32 0
  br label %80

35:                                               ; preds = %125
  %36 = load i32, i32* %17, align 4
  %37 = icmp eq i32 %36, 0
  br label %38

38:                                               ; preds = %35, %1
  %39 = phi i1 [ %37, %35 ], [ true, %1 ]
  %40 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = load i32, i32* %8, align 4
  %43 = icmp slt i32 %42, 0
  %44 = select i1 %43, i32 -2147483648, i32 2147483647
  %45 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %41, i32 %42) #16
  %46 = extractvalue { i32, i1 } %45, 1
  %47 = extractvalue { i32, i1 } %45, 0
  %48 = select i1 %46, i32 %44, i32 %47, !prof !2
  store i32 %48, i32* %40, align 4
  %49 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49)
  %50 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 6, i32 1, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 6, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp sgt i32 %53, -1
  %55 = select i1 %54, i32 -2147483648, i32 2147483647
  %56 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %51, i32 %53) #16
  %57 = extractvalue { i32, i1 } %56, 1
  %58 = extractvalue { i32, i1 } %56, 0
  %59 = select i1 %57, i32 %55, i32 %58, !prof !2
  store i32 %59, i32* %2, align 4
  %60 = icmp slt i32 %59, %42
  %61 = bitcast i32* %2 to %"class.blink::LayoutUnit"*
  %62 = select i1 %60, %"class.blink::LayoutUnit"* %7, %"class.blink::LayoutUnit"* %61
  %63 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %62, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  store i32 %64, i32* %2, align 4
  %65 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65)
  store i32 2147483615, i32* %3, align 4
  %66 = icmp sgt i32 %64, 2147483615
  %67 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %68 = select i1 %66, %"class.blink::LayoutUnit"* %67, %"class.blink::LayoutUnit"* %61
  %69 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %68, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49)
  %71 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 5, i32 0
  store i32 %70, i32* %71, align 4
  br i1 %39, label %73, label %72, !prof !2

72:                                               ; preds = %38
  store i32 0, i32* %17, align 4
  br label %73

73:                                               ; preds = %72, %38
  %74 = load %"class.blink::NGInlineItem"**, %"class.blink::NGInlineItem"*** %22, align 8
  %75 = bitcast i8* %14 to %"class.blink::NGInlineItem"**
  %76 = icmp eq %"class.blink::NGInlineItem"** %74, %75
  br i1 %76, label %79, label %77, !prof !5

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.WTF::Vector.1965", %"class.WTF::Vector.1965"* %4, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIPKN5blink12NGInlineItemELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1966"* nonnull %78, %"class.blink::NGInlineItem"** %74) #16
  br label %79

79:                                               ; preds = %73, %77
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %11) #16
  ret void

80:                                               ; preds = %28, %125
  %81 = phi %"class.blink::NGInlineItem"** [ %23, %28 ], [ %126, %125 ]
  %82 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %81, align 8
  %83 = call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %82)
  %84 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %83, i64 0, i32 0, i32 5, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %85, i64 0, i32 11
  %87 = load i8, i8* %86, align 4
  %88 = and i8 %87, 1
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %125

90:                                               ; preds = %80
  store i8 1, i8* %10, align 4
  %91 = load i32, i32* %6, align 8
  %92 = add i32 %91, 1
  store i32 %92, i32* %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %29) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 160, i1 false)
  call void @_ZN5blink18NGInlineItemResultC1Ev(%"struct.blink::NGInlineItemResult"* nonnull %5) #16
  %93 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %30, align 8
  %94 = call zeroext i1 @_ZN5blink13NGLineBreaker20ComputeOpenTagResultERKNS_12NGInlineItemERKNS_17NGConstraintSpaceEPNS_18NGInlineItemResultE(%"class.blink::NGInlineItem"* dereferenceable(32) %82, %"class.blink::NGConstraintSpace"* dereferenceable(32) %93, %"struct.blink::NGInlineItemResult"* nonnull %5)
  %95 = load i32, i32* %8, align 4
  %96 = load i32, i32* %31, align 4
  %97 = icmp slt i32 %96, 0
  %98 = select i1 %97, i32 -2147483648, i32 2147483647
  %99 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %95, i32 %96) #16
  %100 = extractvalue { i32, i1 } %99, 1
  %101 = extractvalue { i32, i1 } %99, 0
  %102 = select i1 %100, i32 %98, i32 %101, !prof !2
  store i32 %102, i32* %8, align 4
  %103 = load i32, i32* %32, align 4
  %104 = load i32, i32* %33, align 4
  %105 = icmp slt i32 %104, 0
  %106 = select i1 %105, i32 -2147483648, i32 2147483647
  %107 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %103, i32 %104) #16
  %108 = extractvalue { i32, i1 } %107, 1
  %109 = extractvalue { i32, i1 } %107, 0
  %110 = select i1 %108, i32 %106, i32 %109, !prof !2
  %111 = load i32, i32* %34, align 4
  %112 = icmp slt i32 %111, 0
  %113 = select i1 %112, i32 -2147483648, i32 2147483647
  %114 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %110, i32 %111) #16
  %115 = extractvalue { i32, i1 } %114, 1
  %116 = extractvalue { i32, i1 } %114, 0
  %117 = select i1 %115, i32 %113, i32 %116, !prof !2
  %118 = load i32, i32* %9, align 4
  %119 = icmp slt i32 %117, 0
  %120 = select i1 %119, i32 -2147483648, i32 2147483647
  %121 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %118, i32 %117) #16
  %122 = extractvalue { i32, i1 } %121, 1
  %123 = extractvalue { i32, i1 } %121, 0
  %124 = select i1 %122, i32 %120, i32 %123, !prof !2
  store i32 %124, i32* %9, align 4
  call void @_ZN5blink18NGInlineItemResultD2Ev(%"struct.blink::NGInlineItemResult"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %29) #16
  br label %125

125:                                              ; preds = %90, %80
  %126 = getelementptr inbounds %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %81, i64 1
  %127 = icmp eq %"class.blink::NGInlineItem"** %126, %26
  br i1 %127, label %35, label %80
}

declare void @_ZNK5blink17NGInlineItemsData15GetOpenTagItemsEjPN3WTF6VectorIPKNS_12NGInlineItemELj16ENS1_18PartitionAllocatorEEE(%"struct.blink::NGInlineItemsData"*, i32, %"class.WTF::Vector.1965"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 24
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %0, i64 0, i32 3
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  br i1 %6, label %44, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %13, label %20

13:                                               ; preds = %9, %13
  %14 = phi %"class.blink::LayoutObject"* [ %16, %13 ], [ %8, %9 ]
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 7
  %16 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %16, i64 0, i32 6, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %13, label %20

20:                                               ; preds = %13, %9
  %21 = phi %"class.blink::Node"* [ %11, %9 ], [ %18, %13 ]
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %21, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %25, i64 0, i32 59, i32 0, i32 0
  %27 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %27, i64 0, i32 31, i32 0, i32 0
  %29 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %29, i64 0, i32 0, i32 11
  %31 = load i8, i8* %30, align 8
  %32 = and i8 %31, 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %20
  %35 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.5, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0)) #16
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #16
  br label %37

37:                                               ; preds = %34, %20
  %38 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %29, i64 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !3
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %8) #16
  %43 = icmp eq %"class.blink::ComputedStyle"* %42, null
  br i1 %43, label %44, label %47

44:                                               ; preds = %37, %41, %1
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 5, i32 0
  %46 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  br label %47

47:                                               ; preds = %44, %41
  %48 = phi %"class.blink::ComputedStyle"* [ %42, %41 ], [ %46, %44 ]
  ret %"class.blink::ComputedStyle"* %48
}

declare void @_ZN5blink18NGInlineItemResultC1Ev(%"struct.blink::NGInlineItemResult"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13NGLineBreaker20ComputeOpenTagResultERKNS_12NGInlineItemERKNS_17NGConstraintSpaceEPNS_18NGInlineItemResultE(%"class.blink::NGInlineItem"* dereferenceable(32), %"class.blink::NGConstraintSpace"* dereferenceable(32), %"struct.blink::NGInlineItemResult"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca <2 x i64>, align 16
  %7 = alloca { i64, i64 }, align 8
  %8 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %0)
  %9 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %0, i64 0, i32 3
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = load i96, i96* %12, align 4
  %14 = and i96 %13, 16777216
  %15 = icmp eq i96 %14, 0
  br i1 %15, label %16, label %43

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %43, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 6, i32 0, i32 0
  br i1 %24, label %30, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::NodeData"** %25 to %"class.blink::NodeRareData"**
  %28 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %28, i64 0, i32 1, i32 0, i32 0
  br label %32

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::NodeData"** %25 to %"class.blink::NodeRenderingData"**
  br label %32

32:                                               ; preds = %30, %26
  %33 = phi %"class.blink::NodeRenderingData"** [ %29, %26 ], [ %31, %30 ]
  %34 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %34, i64 0, i32 1
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = icmp eq %"class.blink::LayoutObject"* %36, %10
  br i1 %37, label %43, label %38

38:                                               ; preds = %32
  %39 = lshr i96 %13, 27
  %40 = trunc i96 %39 to i8
  %41 = and i8 %40, 1
  %42 = xor i8 %41, 1
  br label %43

43:                                               ; preds = %3, %16, %32, %38
  %44 = phi i8 [ 1, %32 ], [ %42, %38 ], [ 1, %16 ], [ 1, %3 ]
  %45 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %2, i64 0, i32 14
  store i8 %44, i8* %45, align 8
  %46 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %0, i64 0, i32 4
  %47 = load i32, i32* %46, align 8
  %48 = add i32 %47, -3
  %49 = icmp ult i32 %48, 2
  br i1 %49, label %50, label %170

50:                                               ; preds = %43
  %51 = bitcast %"class.blink::LayoutObject"** %9 to %"class.blink::LayoutInline"**
  %52 = load %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %52, i64 0, i32 0, i32 0, i32 4
  %54 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %53 to i96*
  %55 = load i96, i96* %54, align 4
  %56 = and i96 %55, 70369012613120
  %57 = icmp eq i96 %56, 70369012613120
  br i1 %57, label %58, label %170

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 7, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %60, i64 0, i32 27
  %62 = load i16, i16* %61, align 8
  %63 = and i16 %62, 224
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %72, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %60, i64 0, i32 24, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp ne i32 %67, 0
  %69 = and i16 %62, 240
  %70 = icmp ne i16 %69, 0
  %71 = and i1 %70, %68
  br i1 %71, label %109, label %72

72:                                               ; preds = %65, %58
  %73 = and i16 %62, 3584
  %74 = icmp eq i16 %73, 0
  br i1 %74, label %82, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %60, i64 0, i32 25, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp ne i32 %77, 0
  %79 = and i16 %62, 3840
  %80 = icmp ne i16 %79, 0
  %81 = and i1 %80, %78
  br i1 %81, label %109, label %82

82:                                               ; preds = %75, %72
  %83 = icmp ult i16 %62, 8192
  br i1 %83, label %88, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %60, i64 0, i32 26, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %109

88:                                               ; preds = %84, %82
  %89 = and i16 %62, 14
  %90 = icmp eq i16 %89, 0
  br i1 %90, label %98, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %60, i64 0, i32 23, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp ne i32 %93, 0
  %95 = and i16 %62, 15
  %96 = icmp ne i16 %95, 0
  %97 = and i1 %96, %94
  br i1 %97, label %109, label %98

98:                                               ; preds = %91, %88
  %99 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %100 = bitcast [20 x i8]* %99 to i160*
  %101 = load i160, i160* %100, align 8
  %102 = and i160 %101, 89202980794122492566142873090593446023921664
  %103 = icmp eq i160 %102, 0
  br i1 %103, label %104, label %109

104:                                              ; preds = %98
  %105 = and i160 %101, 44601490397061246283071436545296723011960832
  %106 = icmp eq i160 %105, 0
  %107 = icmp eq i8 %44, 0
  %108 = or i1 %107, %106
  br i1 %108, label %170, label %109

109:                                              ; preds = %98, %104, %91, %75, %65, %84
  %110 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110)
  %111 = bitcast <2 x i64>* %4 to %"struct.blink::NGLineBoxStrut"*
  %112 = bitcast { i64, i64 }* %5 to %"struct.blink::NGBoxStrut"*
  %113 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %113) #16
  %114 = tail call { i64, i64 } @_ZN5blink23ComputeBordersForInlineERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %8) #16
  %115 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %116 = extractvalue { i64, i64 } %114, 0
  store i64 %116, i64* %115, align 8
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %118 = extractvalue { i64, i64 } %114, 1
  store i64 %118, i64* %117, align 8
  %119 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %120 = bitcast [20 x i8]* %119 to i160*
  %121 = load i160, i160* %120, align 8
  %122 = and i160 %121, 15211807202738752817960438464512
  %123 = icmp eq i160 %122, 10141204801825835211973625643008
  call void @_ZN5blink14NGLineBoxStrutC1ERKNS_10NGBoxStrutEb(%"struct.blink::NGLineBoxStrut"* nonnull %111, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %112, i1 zeroext %123) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %113) #16
  %124 = load <2 x i64>, <2 x i64>* %4, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110)
  %125 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %2, i64 0, i32 12
  %126 = bitcast %"struct.blink::NGLineBoxStrut"* %125 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %126, align 8
  %127 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %127)
  %128 = bitcast <2 x i64>* %6 to %"struct.blink::NGLineBoxStrut"*
  %129 = bitcast { i64, i64 }* %7 to %"struct.blink::NGBoxStrut"*
  %130 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %130) #16
  %131 = call { i64, i64 } @_ZN5blink14ComputePaddingERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %8) #16
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %133 = extractvalue { i64, i64 } %131, 0
  store i64 %133, i64* %132, align 8
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %135 = extractvalue { i64, i64 } %131, 1
  store i64 %135, i64* %134, align 8
  %136 = load i160, i160* %120, align 8
  %137 = and i160 %136, 15211807202738752817960438464512
  %138 = icmp eq i160 %137, 10141204801825835211973625643008
  call void @_ZN5blink14NGLineBoxStrutC1ERKNS_10NGBoxStrutEb(%"struct.blink::NGLineBoxStrut"* nonnull %128, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %129, i1 zeroext %138) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %130) #16
  %139 = load <2 x i64>, <2 x i64>* %6, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %127)
  %140 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %2, i64 0, i32 13
  %141 = bitcast %"struct.blink::NGLineBoxStrut"* %140 to <2 x i64>*
  store <2 x i64> %139, <2 x i64>* %141, align 8
  %142 = load i8, i8* %45, align 8, !range !3
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %170, label %144

144:                                              ; preds = %109
  %145 = call { i64, i64 } @_ZN5blink25ComputeLineMarginsForSelfERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %8)
  %146 = extractvalue { i64, i64 } %145, 0
  %147 = extractvalue { i64, i64 } %145, 1
  %148 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %2, i64 0, i32 11
  %149 = bitcast %"struct.blink::NGLineBoxStrut"* %148 to i64*
  store i64 %146, i64* %149, align 8
  %150 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %2, i64 0, i32 11, i32 2
  %151 = bitcast %"class.blink::LayoutUnit"* %150 to i64*
  store i64 %147, i64* %151, align 8
  %152 = trunc i64 %146 to i32
  %153 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %2, i64 0, i32 12, i32 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = icmp slt i32 %154, 0
  %156 = select i1 %155, i32 -2147483648, i32 2147483647
  %157 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %152, i32 %154) #16
  %158 = extractvalue { i32, i1 } %157, 1
  %159 = extractvalue { i32, i1 } %157, 0
  %160 = select i1 %158, i32 %156, i32 %159, !prof !2
  %161 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %2, i64 0, i32 13, i32 0, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = icmp slt i32 %162, 0
  %164 = select i1 %163, i32 -2147483648, i32 2147483647
  %165 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %160, i32 %162) #16
  %166 = extractvalue { i32, i1 } %165, 1
  %167 = extractvalue { i32, i1 } %165, 0
  %168 = select i1 %166, i32 %164, i32 %167, !prof !2
  %169 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %2, i64 0, i32 4, i32 0
  store i32 %168, i32* %169, align 4
  br label %170

170:                                              ; preds = %104, %43, %50, %109, %144
  %171 = phi i1 [ true, %144 ], [ false, %109 ], [ false, %104 ], [ false, %50 ], [ false, %43 ]
  ret i1 %171
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18NGInlineItemResultD2Ev(%"struct.blink::NGInlineItemResult"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %6, align 8
  %8 = icmp eq %"class.blink::NGLayoutResult"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %7, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %10) #16
  %11 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %7) #16
  %15 = bitcast %"class.blink::NGLayoutResult"* %7 to i8*
  tail call void @free(i8* %15) #16
  br label %16

16:                                               ; preds = %14, %9, %5
  store i8 0, i8* %2, align 8
  br label %17

17:                                               ; preds = %1, %16
  %18 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 9, i32 0
  %19 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %18, align 8
  %20 = icmp eq %"class.blink::NGLayoutResult"* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #16
  %23 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %19) #16
  %27 = bitcast %"class.blink::NGLayoutResult"* %19 to i8*
  tail call void @free(i8* %27) #16
  br label %28

28:                                               ; preds = %17, %21, %26
  %29 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 8, i32 0
  %30 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %29, align 8
  %31 = icmp eq %"class.blink::ShapeResult"* %30, null
  br i1 %31, label %39, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %30, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %33) #16
  %34 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %32
  tail call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %30) #16
  %38 = bitcast %"class.blink::ShapeResult"* %30 to i8*
  tail call void @free(i8* %38) #16
  br label %39

39:                                               ; preds = %28, %32, %37
  %40 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 7, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #16
  br label %56

56:                                               ; preds = %39, %52, %55
  %57 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 6, i32 0
  %58 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %57, align 8
  %59 = icmp eq %"class.blink::ShapeResultView"* %58, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %58, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #16
  %62 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %58) #16
  %66 = bitcast %"class.blink::ShapeResultView"* %58 to i8*
  tail call void @free(i8* %66) #16
  br label %67

67:                                               ; preds = %56, %60, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink13NGLineBreaker9AddHyphenEPN3WTF6VectorINS_18NGInlineItemResultELj32ENS1_18PartitionAllocatorEEEjPS3_(%"class.blink::NGLineBreaker"* nocapture, %"class.WTF::Vector.1970"* nocapture readnone, i32, %"struct.blink::NGInlineItemResult"*) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast i8* %5 to i64*
  %7 = zext i32 %2 to i64
  %8 = shl nuw i64 %7, 32
  %9 = or i64 %8, 1
  store i64 %9, i64* %6, align 8
  %10 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %3, i64 0, i32 7, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %4
  tail call void @_ZN5blink18NGInlineItemResult11ShapeHyphenEv(%"struct.blink::NGInlineItemResult"* %3) #16
  %14 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 34
  store i8 1, i8* %14, align 8
  br label %15

15:                                               ; preds = %4, %13
  %16 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %3, i64 0, i32 8, i32 0
  %17 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %17, i64 0, i32 1
  %19 = load float, float* %18, align 4
  %20 = fmul float %19, 6.400000e+01
  %21 = tail call float @llvm.ceil.f32(float %20) #16
  %22 = fcmp ult float %21, 0xC1E0000000000000
  %23 = fcmp ugt float %21, 0x41DFFFFFE0000000
  %24 = fcmp ogt float %21, 0xC1E0000000000000
  %25 = select i1 %24, float %21, float 0xC1E0000000000000
  %26 = fptosi float %25 to i32
  %27 = select i1 %22, i32 0, i32 2147483647
  %28 = select i1 %23, i32 %27, i32 %26
  %29 = icmp sgt i32 %28, 0
  %30 = select i1 %29, i32 %28, i32 0
  %31 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %3, i64 0, i32 4, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %32, i32 %30) #16
  %34 = extractvalue { i32, i1 } %33, 1
  %35 = extractvalue { i32, i1 } %33, 0
  %36 = select i1 %34, i32 2147483647, i32 %35, !prof !2
  store i32 %36, i32* %31, align 4
  ret i32 %30
}

declare void @_ZN5blink18NGInlineItemResult11ShapeHyphenEv(%"struct.blink::NGInlineItemResult"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink13NGLineBreaker9AddHyphenEPN3WTF6VectorINS_18NGInlineItemResultELj32ENS1_18PartitionAllocatorEEEj(%"class.blink::NGLineBreaker"* nocapture, %"class.WTF::Vector.1970"*, i32) local_unnamed_addr #2 align 2 {
  %4 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %1, i32 %2) #16
  %5 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast i8* %5 to i64*
  %7 = zext i32 %2 to i64
  %8 = shl nuw i64 %7, 32
  %9 = or i64 %8, 1
  store i64 %9, i64* %6, align 8
  %10 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %4, i64 0, i32 7, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  tail call void @_ZN5blink18NGInlineItemResult11ShapeHyphenEv(%"struct.blink::NGInlineItemResult"* %4) #16
  %14 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 34
  store i8 1, i8* %14, align 8
  br label %15

15:                                               ; preds = %3, %13
  %16 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %4, i64 0, i32 8, i32 0
  %17 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %17, i64 0, i32 1
  %19 = load float, float* %18, align 4
  %20 = fmul float %19, 6.400000e+01
  %21 = tail call float @llvm.ceil.f32(float %20) #16
  %22 = fcmp ult float %21, 0xC1E0000000000000
  %23 = fcmp ugt float %21, 0x41DFFFFFE0000000
  %24 = fcmp ogt float %21, 0xC1E0000000000000
  %25 = select i1 %24, float %21, float 0xC1E0000000000000
  %26 = fptosi float %25 to i32
  %27 = select i1 %22, i32 0, i32 2147483647
  %28 = select i1 %23, i32 %27, i32 %26
  %29 = icmp sgt i32 %28, 0
  %30 = select i1 %29, i32 %28, i32 0
  %31 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %4, i64 0, i32 4, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %32, i32 %30) #16
  %34 = extractvalue { i32, i1 } %33, 1
  %35 = extractvalue { i32, i1 } %33, 0
  %36 = select i1 %34, i32 2147483647, i32 %35, !prof !2
  store i32 %36, i32* %31, align 4
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink13NGLineBreaker9AddHyphenEPN3WTF6VectorINS_18NGInlineItemResultELj32ENS1_18PartitionAllocatorEEEPS3_(%"class.blink::NGLineBreaker"* nocapture, %"class.WTF::Vector.1970"* nocapture readonly, %"struct.blink::NGInlineItemResult"*) local_unnamed_addr #2 align 2 {
  %4 = bitcast %"class.WTF::Vector.1970"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = ptrtoint %"struct.blink::NGInlineItemResult"* %2 to i64
  %7 = sub i64 %6, %5
  %8 = sdiv exact i64 %7, 160
  %9 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast i8* %9 to i64*
  %11 = shl i64 %8, 32
  %12 = or i64 %11, 1
  store i64 %12, i64* %10, align 8
  %13 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %2, i64 0, i32 7, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  tail call void @_ZN5blink18NGInlineItemResult11ShapeHyphenEv(%"struct.blink::NGInlineItemResult"* %2) #16
  %17 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 34
  store i8 1, i8* %17, align 8
  br label %18

18:                                               ; preds = %3, %16
  %19 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %2, i64 0, i32 8, i32 0
  %20 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %20, i64 0, i32 1
  %22 = load float, float* %21, align 4
  %23 = fmul float %22, 6.400000e+01
  %24 = tail call float @llvm.ceil.f32(float %23) #16
  %25 = fcmp ult float %24, 0xC1E0000000000000
  %26 = fcmp ugt float %24, 0x41DFFFFFE0000000
  %27 = fcmp ogt float %24, 0xC1E0000000000000
  %28 = select i1 %27, float %24, float 0xC1E0000000000000
  %29 = fptosi float %28 to i32
  %30 = select i1 %25, i32 0, i32 2147483647
  %31 = select i1 %26, i32 %30, i32 %29
  %32 = icmp sgt i32 %31, 0
  %33 = select i1 %32, i32 %31, i32 0
  %34 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %2, i64 0, i32 4, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %35, i32 %33) #16
  %37 = extractvalue { i32, i1 } %36, 1
  %38 = extractvalue { i32, i1 } %36, 0
  %39 = select i1 %37, i32 2147483647, i32 %38, !prof !2
  store i32 %39, i32* %34, align 4
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink13NGLineBreaker12RemoveHyphenEPN3WTF6VectorINS_18NGInlineItemResultELj32ENS1_18PartitionAllocatorEEE(%"class.blink::NGLineBreaker"* nocapture, %"class.WTF::Vector.1970"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7, !prof !2

6:                                                ; preds = %2
  tail call void @llvm.trap() #16
  unreachable

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %1, i32 %9) #16
  %11 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %10, i64 0, i32 8, i32 0
  %12 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %12, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = fmul float %14, 6.400000e+01
  %16 = tail call float @llvm.ceil.f32(float %15) #16
  %17 = fcmp ult float %16, 0xC1E0000000000000
  %18 = fcmp ugt float %16, 0x41DFFFFFE0000000
  %19 = fcmp ogt float %16, 0xC1E0000000000000
  %20 = select i1 %19, float %16, float 0xC1E0000000000000
  %21 = fptosi float %20 to i32
  %22 = select i1 %17, i32 0, i32 2147483647
  %23 = select i1 %18, i32 %22, i32 %21
  %24 = icmp sgt i32 %23, 0
  %25 = select i1 %24, i32 %23, i32 0
  %26 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %10, i64 0, i32 4, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %27, i32 %25) #16
  %29 = extractvalue { i32, i1 } %28, 1
  %30 = extractvalue { i32, i1 } %28, 0
  %31 = select i1 %29, i32 -2147483648, i32 %30, !prof !2
  store i32 %31, i32* %26, align 4
  store i8 0, i8* %3, align 4
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker17RestoreLastHyphenEPN3WTF6VectorINS_18NGInlineItemResultELj32ENS1_18PartitionAllocatorEEE(%"class.blink::NGLineBreaker"* nocapture, %"class.WTF::Vector.1970"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %1, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %4, i64 %7
  %9 = ptrtoint %"struct.blink::NGInlineItemResult"* %4 to i64
  br label %10

10:                                               ; preds = %53, %2
  %11 = phi %"struct.blink::NGInlineItemResult"* [ %8, %2 ], [ %14, %53 ]
  %12 = icmp eq %"struct.blink::NGInlineItemResult"* %11, %4
  br i1 %12, label %58, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %11, i64 -1
  %15 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %11, i64 -1, i32 7, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %53, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %11, i64 -1, i32 7, i32 0, i32 0
  %20 = ptrtoint %"struct.blink::NGInlineItemResult"* %14 to i64
  %21 = sub i64 %20, %9
  %22 = sdiv exact i64 %21, 160
  %23 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %24 = bitcast i8* %23 to i64*
  %25 = shl i64 %22, 32
  %26 = or i64 %25, 1
  store i64 %26, i64* %24, align 8
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %18
  tail call void @_ZN5blink18NGInlineItemResult11ShapeHyphenEv(%"struct.blink::NGInlineItemResult"* %14) #16
  %30 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 34
  store i8 1, i8* %30, align 8
  br label %31

31:                                               ; preds = %29, %18
  %32 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %11, i64 -1, i32 8, i32 0
  %33 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %33, i64 0, i32 1
  %35 = load float, float* %34, align 4
  %36 = fmul float %35, 6.400000e+01
  %37 = tail call float @llvm.ceil.f32(float %36) #16
  %38 = fcmp ult float %37, 0xC1E0000000000000
  %39 = fcmp ugt float %37, 0x41DFFFFFE0000000
  %40 = fcmp ogt float %37, 0xC1E0000000000000
  %41 = select i1 %40, float %37, float 0xC1E0000000000000
  %42 = fptosi float %41 to i32
  %43 = select i1 %38, i32 0, i32 2147483647
  %44 = select i1 %39, i32 %43, i32 %42
  %45 = icmp sgt i32 %44, 0
  %46 = select i1 %45, i32 %44, i32 0
  %47 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %11, i64 -1, i32 4, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %48, i32 %46) #16
  %50 = extractvalue { i32, i1 } %49, 1
  %51 = extractvalue { i32, i1 } %49, 0
  %52 = select i1 %50, i32 2147483647, i32 %51, !prof !2
  store i32 %52, i32* %47, align 4
  br label %58

53:                                               ; preds = %13
  %54 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %14, i64 0, i32 0
  %55 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %55, i64 0, i32 4
  %57 = load i32, i32* %56, align 8
  switch i32 %57, label %10 [
    i32 0, label %58
    i32 2, label %58
  ]

58:                                               ; preds = %10, %53, %53, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker14FinalizeHyphenEPN3WTF6VectorINS_18NGInlineItemResultELj32ENS1_18PartitionAllocatorEEE(%"class.blink::NGLineBreaker"* nocapture readonly, %"class.WTF::Vector.1970"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7, !prof !2

6:                                                ; preds = %2
  tail call void @llvm.trap() #16
  unreachable

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %1, i32 %9) #16
  %11 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %10, i64 0, i32 21
  store i8 1, i8* %11, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker15PrepareNextLineEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 4, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %38, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 22, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %38, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %15, %13
  br i1 %16, label %17, label %38, !prof !5

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %7, i64 0, i32 0, i32 0, i32 0
  %19 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %18, align 8
  %20 = icmp eq %"struct.blink::NGInlineItemResult"* %19, null
  br i1 %20, label %21, label %37

21:                                               ; preds = %17
  %22 = icmp ugt i32 %13, 32
  br i1 %22, label %23, label %31

23:                                               ; preds = %21
  %24 = zext i32 %13 to i64
  %25 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18NGInlineItemResultEEEmm(i64 %24) #16
  %26 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %25, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18NGInlineItemResultEEEPKcv, i64 0, i64 0)) #16
  %27 = ptrtoint i8* %26 to i64
  %28 = bitcast %"class.WTF::Vector.1970"* %7 to i64*
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = udiv i64 %25, 160
  %30 = trunc i64 %29 to i32
  br label %35

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 2, i32 0, i32 1, i64 0
  %33 = ptrtoint i8* %32 to i64
  %34 = bitcast %"class.WTF::Vector.1970"* %7 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  br label %35

35:                                               ; preds = %31, %23
  %36 = phi i32 [ 32, %31 ], [ %30, %23 ]
  store i32 %36, i32* %14, align 8
  br label %38

37:                                               ; preds = %17
  tail call void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1970"* %7, i32 %13) #16
  br label %38

38:                                               ; preds = %6, %37, %35, %11, %2
  %39 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %48, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 17
  %44 = load i8, i8* %43, align 4, !range !3
  %45 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 30
  store i8 %44, i8* %45, align 8
  store i8 0, i8* %43, align 4
  %46 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 10
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 11
  store i8 0, i8* %47, align 2
  br label %48

48:                                               ; preds = %38, %42
  %49 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 8
  store i32 %50, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 7
  %53 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 21
  %54 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 11
  %56 = load i8, i8* %55, align 2, !range !3
  %57 = icmp ne i8 %56, 0
  tail call void @_ZN5blink10NGLineInfo12SetLineStyleERKNS_12NGInlineNodeERKNS_17NGInlineItemsDataEb(%"class.blink::NGLineInfo"* %1, %"class.blink::NGInlineNode"* dereferenceable(16) %52, %"struct.blink::NGInlineItemsData"* dereferenceable(40) %54, i1 zeroext %57) #16
  %58 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 1
  %59 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 10
  %61 = load i8, i8* %60, align 1, !range !3
  %62 = icmp ne i8 %61, 0
  %63 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 30
  %64 = load i8, i8* %63, align 8, !range !3
  %65 = icmp ne i8 %64, 0
  %66 = tail call zeroext i1 @_ZNK5blink13ComputedStyle19ShouldUseTextIndentEbb(%"class.blink::ComputedStyle"* %59, i1 zeroext %62, i1 zeroext %65) #16
  br i1 %66, label %67, label %114

67:                                               ; preds = %48
  %68 = bitcast %"class.blink::ComputedStyle"** %58 to %"class.blink::ComputedStyleBase"**
  %69 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %69, i64 0, i32 1, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %71, i64 0, i32 12
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %71, i64 0, i32 12, i32 2
  %74 = load i8, i8* %73, align 1
  switch i8 %74, label %85 [
    i8 8, label %75
    i8 1, label %75
  ]

75:                                               ; preds = %67, %67
  %76 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %85

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 23
  %81 = bitcast %"class.blink::NGConstraintSpace"** %80 to i64**
  %82 = load i64*, i64** %81, align 8
  %83 = load i64, i64* %82, align 8
  %84 = trunc i64 %83 to i32
  br label %85

85:                                               ; preds = %67, %79, %75
  %86 = phi i32 [ %84, %79 ], [ 0, %75 ], [ 0, %67 ]
  %87 = icmp eq i8 %74, 2
  br i1 %87, label %88, label %109, !prof !5

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %71, i64 0, i32 12, i32 3
  %90 = load i8, i8* %89, align 2, !range !3
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %88
  %93 = bitcast %"class.blink::Length"* %72 to float*
  %94 = load float, float* %93, align 4
  br label %99

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %72, i64 0, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = sitofp i32 %97 to float
  br label %99

99:                                               ; preds = %95, %92
  %100 = phi float [ %94, %92 ], [ %98, %95 ]
  %101 = fmul float %100, 6.400000e+01
  %102 = fcmp ult float %101, 0xC1E0000000000000
  %103 = fcmp ugt float %101, 0x41DFFFFFE0000000
  %104 = fcmp ogt float %101, 0xC1E0000000000000
  %105 = select i1 %104, float %101, float 0xC1E0000000000000
  %106 = fptosi float %105 to i32
  %107 = select i1 %102, i32 0, i32 2147483647
  %108 = select i1 %103, i32 %107, i32 %106
  br label %111

109:                                              ; preds = %85
  %110 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %72, i32 %86) #16
  br label %111

111:                                              ; preds = %99, %109
  %112 = phi i32 [ %108, %99 ], [ %110, %109 ]
  %113 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 7, i32 0
  store i32 %112, i32* %113, align 4
  br label %114

114:                                              ; preds = %111, %48
  %115 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 26, i32 0
  %116 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %115, align 8
  %117 = icmp eq %"class.blink::ComputedStyle"* %116, null
  br i1 %117, label %118, label %120

118:                                              ; preds = %114
  %119 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %58, align 8
  tail call void @_ZN5blink13NGLineBreaker15SetCurrentStyleERKNS_13ComputedStyleE(%"class.blink::NGLineBreaker"* %0, %"class.blink::ComputedStyle"* dereferenceable(104) %119)
  br label %120

120:                                              ; preds = %114, %118
  tail call void @_ZN5blink13NGLineBreaker20ComputeBaseDirectionEv(%"class.blink::NGLineBreaker"* %0)
  %121 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 43
  %122 = load i8, i8* %121, align 8
  %123 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 12
  store i8 %122, i8* %123, align 8
  %124 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %124, align 4
  %125 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 34
  store i8 0, i8* %125, align 8
  %126 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 7, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  store i32 %127, i32* %128, align 8
  %129 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 49
  store i8 0, i8* %129, align 4
  %130 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 25, i32 0
  %131 = load %"class.blink::NGInlineBreakToken"*, %"class.blink::NGInlineBreakToken"** %130, align 8
  %132 = icmp eq %"class.blink::NGInlineBreakToken"* %131, null
  br i1 %132, label %138, label %133

133:                                              ; preds = %120
  %134 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %131, i64 0, i32 0, i32 4
  %135 = load i16, i16* %134, align 8
  %136 = and i16 %135, 16
  %137 = icmp eq i16 %136, 0
  br i1 %137, label %138, label %142, !prof !5

138:                                              ; preds = %133, %120
  %139 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 46
  %140 = load i32, i32* %139, align 8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %143, label %142, !prof !5

142:                                              ; preds = %133, %138
  tail call void @_ZN5blink13NGLineBreaker26RecalcClonedBoxDecorationsEv(%"class.blink::NGLineBreaker"* %0)
  br label %143

143:                                              ; preds = %138, %142
  %144 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 51, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %144, align 4
  ret void
}

declare void @_ZN5blink10NGLineInfo12SetLineStyleERKNS_12NGInlineNodeERKNS_17NGInlineItemsDataEb(%"class.blink::NGLineInfo"*, %"class.blink::NGInlineNode"* dereferenceable(16), %"struct.blink::NGInlineItemsData"* dereferenceable(40), i1 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink13ComputedStyle19ShouldUseTextIndentEbb(%"class.blink::ComputedStyle"*, i1 zeroext, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker8NextLineEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZN5blink13NGLineBreaker15PrepareNextLineEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGLineInfo"* %1)
  tail call void @_ZN5blink13NGLineBreaker9BreakLineEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGLineInfo"* %1)
  %3 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6, !prof !5

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %7, i32 %9) #16
  %11 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %10, i64 0, i32 21
  store i8 1, i8* %11, align 1
  br label %12

12:                                               ; preds = %2, %6
  tail call void @_ZN5blink13NGLineBreaker30RemoveTrailingCollapsibleSpaceEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGLineInfo"* %1)
  %13 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 2
  %18 = add i32 %14, -1
  %19 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %17, i32 %18) #16
  %20 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %19, i64 0, i32 19
  %21 = load i8, i8* %20, align 1, !range !3
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %44

23:                                               ; preds = %16, %12
  %24 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 16
  %25 = load i8, i8* %24, align 1, !range !3
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 14
  %29 = load i8, i8* %28, align 2, !range !3
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %27, %23
  %32 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %44

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 7
  %37 = tail call dereferenceable(64) %"struct.blink::NGInlineNodeData"* @_ZNK5blink12NGInlineNode10EnsureDataEv(%"class.blink::NGInlineNode"* %36) #16
  %38 = getelementptr inbounds %"struct.blink::NGInlineNodeData", %"struct.blink::NGInlineNodeData"* %37, i64 0, i32 3
  %39 = load i8, i8* %38, align 8
  %40 = and i8 %39, 4
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 15
  store i8 1, i8* %43, align 1
  br label %44

44:                                               ; preds = %35, %27, %16, %31, %42
  %45 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 9
  store i32 %46, i32* %47, align 4
  %48 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 5
  br i1 %50, label %51, label %53

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 17
  store i8 1, i8* %52, align 1
  br label %53

53:                                               ; preds = %51, %44
  %54 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 5, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 48, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %59, 0
  %61 = select i1 %60, i32 -2147483648, i32 2147483647
  %62 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %59) #16
  %63 = extractvalue { i32, i1 } %62, 1
  %64 = extractvalue { i32, i1 } %62, 0
  %65 = select i1 %63, i32 %61, i32 %64, !prof !2
  %66 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 4, i32 0
  store i32 %55, i32* %66, align 8
  %67 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 5, i32 0
  store i32 %65, i32* %67, align 4
  %68 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 6, i32 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 6, i32 4, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 3
  %73 = bitcast %"struct.blink::NGBfcOffset"* %72 to i64*
  %74 = zext i32 %71 to i64
  %75 = shl nuw i64 %74, 32
  %76 = zext i32 %69 to i64
  %77 = or i64 %75, %76
  store i64 %77, i64* %73, align 8
  %78 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %53
  tail call void @_ZN5blink10NGLineInfo15UpdateTextAlignEv(%"class.blink::NGLineInfo"* %1) #16
  br label %82

82:                                               ; preds = %53, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker9BreakLineEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"struct.blink::NGTextOffset", align 4
  %4 = alloca %"struct.blink::NGTextOffset", align 4
  %5 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 21
  %6 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %5, align 8
  %7 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %6, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 0
  store i32 3, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 3
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %6, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 2
  %13 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  %15 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %16 = bitcast %"struct.blink::NGTextOffset"* %3 to i8*
  %17 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %3, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %3, i64 0, i32 1
  %19 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 13
  %20 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %12, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27
  %23 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 7
  %25 = bitcast %"struct.blink::NGTextOffset"* %4 to i8*
  %26 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %4, i64 0, i32 0
  %27 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %4, i64 0, i32 1
  %28 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 16
  %29 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 5, i32 0
  %30 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  br label %34

31:                                               ; preds = %141, %236, %249, %194, %111, %127, %140, %135, %134, %133, %132, %131, %48
  %32 = load i32, i32* %8, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %252, label %34

34:                                               ; preds = %2, %31
  %35 = phi i32 [ 3, %2 ], [ %32, %31 ]
  %36 = load i32, i32* %10, align 4
  %37 = load i32, i32* %11, align 4
  %38 = icmp eq i32 %36, %37
  br i1 %38, label %39, label %88

39:                                               ; preds = %34
  %40 = icmp eq i32 %35, 3
  br i1 %40, label %41, label %52

41:                                               ; preds = %39
  %42 = load i32, i32* %29, align 4
  %43 = icmp ne i32 %42, 2147483647
  %44 = zext i1 %43 to i32
  %45 = add nsw i32 %42, %44
  %46 = load i32, i32* %30, align 4
  %47 = icmp sgt i32 %46, %45
  br i1 %47, label %48, label %52

48:                                               ; preds = %41
  call void @_ZN5blink13NGLineBreaker14HandleOverflowEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGLineInfo"* %1) #16
  %49 = load i32, i32* %10, align 4
  %50 = load i32, i32* %11, align 4
  %51 = icmp eq i32 %49, %50
  br i1 %51, label %52, label %31

52:                                               ; preds = %39, %41, %48
  %53 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %54 = load i8, i8* %53, align 4, !range !3
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %86, label %56, !prof !5

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %12, i32 %58) #16
  %60 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %59, i64 0, i32 8, i32 0
  %61 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %61, i64 0, i32 1
  %63 = load float, float* %62, align 4
  %64 = fmul float %63, 6.400000e+01
  %65 = call float @llvm.ceil.f32(float %64) #16
  %66 = fcmp ult float %65, 0xC1E0000000000000
  %67 = fcmp ugt float %65, 0x41DFFFFFE0000000
  %68 = fcmp ogt float %65, 0xC1E0000000000000
  %69 = select i1 %68, float %65, float 0xC1E0000000000000
  %70 = fptosi float %69 to i32
  %71 = select i1 %66, i32 0, i32 2147483647
  %72 = select i1 %67, i32 %71, i32 %70
  %73 = icmp sgt i32 %72, 0
  %74 = select i1 %73, i32 %72, i32 0
  %75 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %59, i64 0, i32 4, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %76, i32 %74) #16
  %78 = extractvalue { i32, i1 } %77, 1
  %79 = extractvalue { i32, i1 } %77, 0
  %80 = select i1 %78, i32 -2147483648, i32 %79, !prof !2
  store i32 %80, i32* %75, align 4
  store i8 0, i8* %53, align 4
  %81 = load i32, i32* %30, align 4
  %82 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %81, i32 %74) #16
  %83 = extractvalue { i32, i1 } %82, 1
  %84 = extractvalue { i32, i1 } %82, 0
  %85 = select i1 %83, i32 -2147483648, i32 %84, !prof !2
  store i32 %85, i32* %30, align 4
  br label %86

86:                                               ; preds = %52, %56
  %87 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 14
  store i8 1, i8* %87, align 2
  br label %252

88:                                               ; preds = %34
  %89 = icmp eq i32 %35, 1
  br i1 %89, label %90, label %100

90:                                               ; preds = %88
  %91 = load i32, i32* %13, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %100, label %93

93:                                               ; preds = %90
  %94 = add i32 %91, -1
  %95 = call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %12, i32 %94) #16
  %96 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %95, i64 0, i32 16
  %97 = load i8, i8* %96, align 2, !range !3
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %100, label %99, !prof !5

99:                                               ; preds = %93
  store i32 2, i32* %8, align 8
  br label %100

100:                                              ; preds = %93, %90, %88, %99
  %101 = load i32, i32* %10, align 4
  %102 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZNK3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1841"* %7, i32 %101) #16
  %103 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %102, i64 0, i32 4
  %104 = load i32, i32* %103, align 8
  switch i32 %104, label %136 [
    i32 0, label %105
    i32 3, label %131
    i32 4, label %132
    i32 1, label %133
    i32 5, label %134
    i32 8, label %135
  ]

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %102, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %102, i64 0, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %107, %109
  br i1 %110, label %114, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %102, i64 0, i32 2, i32 0
  %113 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %112, align 8
  call void @_ZN5blink13NGLineBreaker10HandleTextERKNS_12NGInlineItemERKNS_11ShapeResultEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %102, %"class.blink::ShapeResult"* dereferenceable(72) %113, %"class.blink::NGLineInfo"* %1)
  br label %31

114:                                              ; preds = %105
  %115 = load i32, i32* %14, align 8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %127

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %102, i64 0, i32 3
  %119 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %119, i64 0, i32 4
  %121 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %120 to i96*
  %122 = load i96, i96* %121, align 4
  %123 = and i96 %122, 63
  %124 = icmp eq i96 %123, 0
  br i1 %124, label %127, label %125

125:                                              ; preds = %117
  call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %119) #16
  %126 = load i32, i32* %106, align 4
  br label %127

127:                                              ; preds = %114, %117, %125
  %128 = phi i32 [ %107, %114 ], [ %107, %117 ], [ %126, %125 ]
  store i32 %128, i32* %15, align 8
  %129 = load i32, i32* %10, align 4
  %130 = add i32 %129, 1
  store i32 %130, i32* %10, align 4
  br label %31

131:                                              ; preds = %100
  call void @_ZN5blink13NGLineBreaker13HandleOpenTagERKNS_12NGInlineItemEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %102, %"class.blink::NGLineInfo"* %1)
  br label %31

132:                                              ; preds = %100
  call void @_ZN5blink13NGLineBreaker14HandleCloseTagERKNS_12NGInlineItemEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %102, %"class.blink::NGLineInfo"* %1)
  br label %31

133:                                              ; preds = %100
  call void @_ZN5blink13NGLineBreaker17HandleControlItemERKNS_12NGInlineItemEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %102, %"class.blink::NGLineInfo"* %1)
  br label %31

134:                                              ; preds = %100
  call void @_ZN5blink13NGLineBreaker11HandleFloatERKNS_12NGInlineItemEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %102, %"class.blink::NGLineInfo"* %1)
  br label %31

135:                                              ; preds = %100
  call void @_ZN5blink13NGLineBreaker21HandleBidiControlItemERKNS_12NGInlineItemEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %102, %"class.blink::NGLineInfo"* %1)
  br label %31

136:                                              ; preds = %100
  %137 = load i32, i32* %8, align 8
  %138 = icmp eq i32 %137, 2
  br i1 %138, label %252, label %139

139:                                              ; preds = %136
  switch i32 %104, label %142 [
    i32 2, label %140
    i32 6, label %141
  ]

140:                                              ; preds = %139
  call void @_ZN5blink13NGLineBreaker18HandleAtomicInlineERKNS_12NGInlineItemEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %102, %"class.blink::NGLineInfo"* %1)
  br label %31

141:                                              ; preds = %139
  call void @_ZN5blink13NGLineBreaker25HandleOutOfFlowPositionedERKNS_12NGInlineItemEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %102, %"class.blink::NGLineInfo"* %1)
  br label %31

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %102, i64 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %102, i64 0, i32 0
  %146 = load i32, i32* %145, align 8
  %147 = icmp eq i32 %144, %146
  br i1 %147, label %206, label %148

148:                                              ; preds = %142
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %149 = load i32, i32* %15, align 8
  store i32 %149, i32* %17, align 4
  store i32 %144, i32* %18, align 4
  %150 = load i32, i32* %13, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %167, label %152

152:                                              ; preds = %148
  %153 = add i32 %150, -1
  %154 = call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %12, i32 %153) #16
  %155 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %154, i64 0, i32 19
  %156 = load i8, i8* %155, align 1, !range !3
  %157 = icmp ne i8 %156, 0
  %158 = load i32, i32* %13, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %167, label %160

160:                                              ; preds = %152
  %161 = add i32 %158, -1
  %162 = call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %12, i32 %161) #16
  %163 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %162, i64 0, i32 20
  %164 = load i8, i8* %163, align 2, !range !3
  %165 = icmp ne i8 %164, 0
  %166 = load i32, i32* %13, align 4
  br label %167

167:                                              ; preds = %160, %152, %148
  %168 = phi i32 [ 0, %152 ], [ %166, %160 ], [ 0, %148 ]
  %169 = phi i1 [ %157, %152 ], [ %157, %160 ], [ false, %148 ]
  %170 = phi i1 [ false, %152 ], [ %165, %160 ], [ false, %148 ]
  %171 = load i32, i32* %20, align 8
  %172 = icmp eq i32 %168, %171
  br i1 %172, label %173, label %176, !prof !2

173:                                              ; preds = %167
  %174 = add i32 %168, 1
  call void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1970"* %12, i32 %174) #16
  %175 = load i32, i32* %13, align 4
  br label %176

176:                                              ; preds = %167, %173
  %177 = phi i32 [ %175, %173 ], [ %168, %167 ]
  %178 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %21, align 8
  %179 = zext i32 %177 to i64
  %180 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %178, i64 %179
  %181 = load i32, i32* %10, align 4
  %182 = load i8, i8* %19, align 1, !range !3
  %183 = icmp ne i8 %182, 0
  call void @_ZN5blink18NGInlineItemResultC1EPKNS_12NGInlineItemEjRKNS_12NGTextOffsetEbbb(%"struct.blink::NGInlineItemResult"* %180, %"class.blink::NGInlineItem"* %102, i32 %181, %"struct.blink::NGTextOffset"* nonnull dereferenceable(8) %3, i1 zeroext %183, i1 zeroext %169, i1 zeroext %170) #16
  %184 = load i32, i32* %13, align 4
  %185 = add i32 %184, 1
  store i32 %185, i32* %13, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  %186 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %178, i64 %179, i32 2, i32 1
  %187 = load i32, i32* %186, align 4
  %188 = add nsw i32 %187, 1
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %194, label %191

191:                                              ; preds = %176
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 1
  %193 = load i32, i32* %192, align 4
  br label %194

194:                                              ; preds = %176, %191
  %195 = phi i32 [ %193, %191 ], [ 0, %176 ]
  %196 = icmp slt i32 %195, %188
  %197 = select i1 %196, i32 %195, i32 %188
  %198 = load i32, i32* %24, align 4
  %199 = call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeEi(%"class.blink::LazyLineBreakIterator"* %22, i32 %187, i32 %198, i32 %197) #16
  %200 = icmp eq i32 %199, %187
  %201 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %178, i64 %179, i32 16
  %202 = zext i1 %200 to i8
  store i8 %202, i8* %201, align 2
  %203 = load i32, i32* %143, align 4
  store i32 %203, i32* %15, align 8
  %204 = load i32, i32* %10, align 4
  %205 = add i32 %204, 1
  store i32 %205, i32* %10, align 4
  br label %31

206:                                              ; preds = %142
  %207 = icmp eq i32 %104, 7
  br i1 %207, label %208, label %249

208:                                              ; preds = %206
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #16
  %209 = load i32, i32* %15, align 8
  store i32 %209, i32* %26, align 4
  store i32 %144, i32* %27, align 4
  %210 = load i32, i32* %13, align 4
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %227, label %212

212:                                              ; preds = %208
  %213 = add i32 %210, -1
  %214 = call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %12, i32 %213) #16
  %215 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %214, i64 0, i32 19
  %216 = load i8, i8* %215, align 1, !range !3
  %217 = icmp ne i8 %216, 0
  %218 = load i32, i32* %13, align 4
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %227, label %220

220:                                              ; preds = %212
  %221 = add i32 %218, -1
  %222 = call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %12, i32 %221) #16
  %223 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %222, i64 0, i32 20
  %224 = load i8, i8* %223, align 2, !range !3
  %225 = icmp ne i8 %224, 0
  %226 = load i32, i32* %13, align 4
  br label %227

227:                                              ; preds = %220, %212, %208
  %228 = phi i32 [ 0, %212 ], [ %226, %220 ], [ 0, %208 ]
  %229 = phi i1 [ %217, %212 ], [ %217, %220 ], [ false, %208 ]
  %230 = phi i1 [ false, %212 ], [ %225, %220 ], [ false, %208 ]
  %231 = load i32, i32* %20, align 8
  %232 = icmp eq i32 %228, %231
  br i1 %232, label %233, label %236, !prof !2

233:                                              ; preds = %227
  %234 = add i32 %228, 1
  call void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1970"* %12, i32 %234) #16
  %235 = load i32, i32* %13, align 4
  br label %236

236:                                              ; preds = %227, %233
  %237 = phi i32 [ %235, %233 ], [ %228, %227 ]
  %238 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %21, align 8
  %239 = zext i32 %237 to i64
  %240 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %238, i64 %239
  %241 = load i32, i32* %10, align 4
  %242 = load i8, i8* %19, align 1, !range !3
  %243 = icmp ne i8 %242, 0
  call void @_ZN5blink18NGInlineItemResultC1EPKNS_12NGInlineItemEjRKNS_12NGTextOffsetEbbb(%"struct.blink::NGInlineItemResult"* %240, %"class.blink::NGInlineItem"* %102, i32 %241, %"struct.blink::NGTextOffset"* nonnull dereferenceable(8) %4, i1 zeroext %243, i1 zeroext %229, i1 zeroext %230) #16
  %244 = load i32, i32* %13, align 4
  %245 = add i32 %244, 1
  store i32 %245, i32* %13, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #16
  store i8 1, i8* %28, align 1
  %246 = load i32, i32* %143, align 4
  store i32 %246, i32* %15, align 8
  %247 = load i32, i32* %10, align 4
  %248 = add i32 %247, 1
  store i32 %248, i32* %10, align 4
  br label %31

249:                                              ; preds = %206
  store i32 %144, i32* %15, align 8
  %250 = load i32, i32* %10, align 4
  %251 = add i32 %250, 1
  store i32 %251, i32* %10, align 4
  br label %31

252:                                              ; preds = %136, %31, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker30RemoveTrailingCollapsibleSpaceEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %5, i64 %8
  br label %10

10:                                               ; preds = %13, %2
  %11 = phi %"struct.blink::NGInlineItemResult"* [ %9, %2 ], [ %14, %13 ]
  %12 = icmp eq %"struct.blink::NGInlineItemResult"* %11, %5
  br i1 %12, label %41, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %11, i64 -1
  %15 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %14, i64 0, i32 0
  %16 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %16, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 3
  br i1 %19, label %10, label %20

20:                                               ; preds = %13
  %21 = ptrtoint %"struct.blink::NGInlineItemResult"* %14 to i64
  %22 = ptrtoint %"struct.blink::NGInlineItemResult"* %5 to i64
  %23 = sub i64 %21, %22
  %24 = sdiv exact i64 %23, 160
  %25 = trunc i64 %24 to i32
  %26 = add i32 %25, 1
  %27 = icmp ult i32 %26, %7
  br i1 %27, label %28, label %41

28:                                               ; preds = %20
  %29 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %3, i32 %26) #16
  %30 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %29, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %29, i64 0, i32 2, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 51, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %34, align 4
  tail call void @_ZN5blink13NGLineBreaker6RewindEjPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, i32 %26, %"class.blink::NGLineInfo"* %1)
  %35 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  store i32 %31, i32* %35, align 4
  %36 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  store i32 %33, i32* %36, align 8
  %37 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 21
  %38 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %37, align 8
  %39 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %38, i64 0, i32 1
  %40 = tail call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZNK3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1841"* %39, i32 %31) #16
  br label %41

41:                                               ; preds = %10, %20, %28
  tail call void @_ZN5blink13NGLineBreaker31ComputeTrailingCollapsibleSpaceEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGLineInfo"* %1)
  %42 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 0
  %43 = load i8, i8* %42, align 8, !range !3
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %141, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %47 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %47, i64 0, i32 4, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp sgt i32 %51, -1
  %53 = select i1 %52, i32 -2147483648, i32 2147483647
  %54 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %49, i32 %51) #16
  %55 = extractvalue { i32, i1 } %54, 1
  %56 = extractvalue { i32, i1 } %54, 0
  %57 = select i1 %55, i32 %53, i32 %56, !prof !2
  store i32 %57, i32* %48, align 4
  %58 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %59 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %58, align 8
  %60 = icmp eq %"class.blink::ShapeResultView"* %59, null
  br i1 %60, label %103, label %61

61:                                               ; preds = %45
  %62 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %47, i64 0, i32 2, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = add i32 %63, -1
  store i32 %64, i32* %62, align 4
  %65 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %58, align 8
  %66 = icmp eq %"class.blink::ShapeResultView"* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %65, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %68) #16
  br label %69

69:                                               ; preds = %61, %67
  %70 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %47, i64 0, i32 6
  %71 = ptrtoint %"class.blink::ShapeResultView"* %65 to i64
  %72 = bitcast %class.scoped_refptr.1909* %70 to i64*
  %73 = getelementptr inbounds %class.scoped_refptr.1909, %class.scoped_refptr.1909* %70, i64 0, i32 0
  %74 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %73, align 8
  store i64 %71, i64* %72, align 8
  %75 = icmp eq %"class.blink::ShapeResultView"* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #16
  %78 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %74) #16
  %82 = bitcast %"class.blink::ShapeResultView"* %74 to i8*
  tail call void @free(i8* %82) #16
  br label %83

83:                                               ; preds = %69, %76, %81
  %84 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %73, align 8
  %85 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %84, i64 0, i32 6
  %86 = load float, float* %85, align 8
  %87 = fmul float %86, 6.400000e+01
  %88 = tail call float @llvm.ceil.f32(float %87) #16
  %89 = fcmp ult float %88, 0xC1E0000000000000
  %90 = fcmp ugt float %88, 0x41DFFFFFE0000000
  %91 = fcmp ogt float %88, 0xC1E0000000000000
  %92 = select i1 %91, float %88, float 0xC1E0000000000000
  %93 = fptosi float %92 to i32
  %94 = select i1 %89, i32 0, i32 2147483647
  %95 = select i1 %90, i32 %94, i32 %93
  store i32 %95, i32* %50, align 4
  %96 = load i32, i32* %48, align 4
  %97 = icmp slt i32 %95, 0
  %98 = select i1 %97, i32 -2147483648, i32 2147483647
  %99 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %96, i32 %95) #16
  %100 = extractvalue { i32, i1 } %99, 1
  %101 = extractvalue { i32, i1 } %99, 0
  %102 = select i1 %100, i32 %98, i32 %101, !prof !2
  store i32 %102, i32* %48, align 4
  br label %125

103:                                              ; preds = %45
  %104 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %47, i64 0, i32 0
  %109 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %109, i64 0, i32 3
  %111 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %111, i64 0, i32 4
  %113 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %112 to i96*
  %114 = load i96, i96* %113, align 4
  %115 = and i96 %114, 63
  %116 = icmp eq i96 %115, 0
  br i1 %116, label %118, label %117

117:                                              ; preds = %107
  tail call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %111) #16
  br label %118

118:                                              ; preds = %103, %107, %117
  %119 = bitcast %"class.WTF::Vector.1970"* %3 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = ptrtoint %"struct.blink::NGInlineItemResult"* %47 to i64
  %122 = sub i64 %121, %120
  %123 = sdiv exact i64 %122, 160
  %124 = trunc i64 %123 to i32
  tail call void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector.1970"* %3, i32 %124) #16
  br label %125

125:                                              ; preds = %118, %83
  %126 = load i8, i8* %42, align 8, !range !3
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %139, label %128

128:                                              ; preds = %125
  %129 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %58, align 8
  %130 = icmp eq %"class.blink::ShapeResultView"* %129, null
  br i1 %130, label %138, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %129, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %132) #16
  %133 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %129, i64 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %131
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %129) #16
  %137 = bitcast %"class.blink::ShapeResultView"* %129 to i8*
  tail call void @free(i8* %137) #16
  br label %138

138:                                              ; preds = %136, %131, %128
  store i8 0, i8* %42, align 8
  br label %139

139:                                              ; preds = %125, %138
  %140 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 3
  store i32 4, i32* %140, align 4
  br label %141

141:                                              ; preds = %41, %139
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13NGLineBreaker19ComputeLineLocationEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* nocapture readonly, %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 5, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 48, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 0
  %10 = select i1 %9, i32 -2147483648, i32 2147483647
  %11 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %6, i32 %8) #16
  %12 = extractvalue { i32, i1 } %11, 1
  %13 = extractvalue { i32, i1 } %11, 0
  %14 = select i1 %12, i32 %10, i32 %13, !prof !2
  %15 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 4, i32 0
  store i32 %4, i32* %15, align 8
  %16 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 5, i32 0
  store i32 %14, i32* %16, align 4
  %17 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 6, i32 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 6, i32 4, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 3
  %22 = bitcast %"struct.blink::NGBfcOffset"* %21 to i64*
  %23 = zext i32 %20 to i64
  %24 = shl nuw i64 %23, 32
  %25 = zext i32 %18 to i64
  %26 = or i64 %24, %25
  store i64 %26, i64* %22, align 8
  %27 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %2
  tail call void @_ZN5blink10NGLineInfo15UpdateTextAlignEv(%"class.blink::NGLineInfo"* %1) #16
  br label %31

31:                                               ; preds = %30, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker10HandleTextERKNS_12NGInlineItemERKNS_11ShapeResultEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, %"class.blink::NGInlineItem"* dereferenceable(32), %"class.blink::ShapeResult"* dereferenceable(72), %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %5 = alloca %"struct.blink::NGTextOffset", align 4
  %6 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %9, label %10, !prof !2

9:                                                ; preds = %4
  tail call void @_ZN5blink13NGLineBreaker20HandleTrailingSpacesERKNS_12NGInlineItemEPKNS_11ShapeResultEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %1, %"class.blink::ShapeResult"* %2, %"class.blink::NGLineInfo"* %3)
  br label %481

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %75

14:                                               ; preds = %10
  %15 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %1)
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = and i160 %18, 286720
  %20 = icmp eq i160 %19, 0
  br i1 %20, label %21, label %75

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 22, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %75, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp ugt i32 %29, %23
  br i1 %30, label %31, label %75

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 1
  br i1 %35, label %43, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.WTF::StringImpl"* %36 to i8*
  %39 = zext i32 %23 to i64
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i16
  br label %48

43:                                               ; preds = %31
  %44 = bitcast %"class.WTF::StringImpl"* %36 to i16*
  %45 = zext i32 %23 to i64
  %46 = getelementptr inbounds i16, i16* %44, i64 %45
  %47 = load i16, i16* %46, align 2
  br label %48

48:                                               ; preds = %37, %43
  %49 = phi i16 [ %42, %37 ], [ %47, %43 ]
  %50 = icmp eq i16 %49, 32
  br i1 %50, label %51, label %75

51:                                               ; preds = %48
  %52 = add nuw i32 %23, 1
  store i32 %52, i32* %22, align 8
  %53 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %56, label %75

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %70

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 3
  %62 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %62, i64 0, i32 4
  %64 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %63 to i96*
  %65 = load i96, i96* %64, align 4
  %66 = and i96 %65, 63
  %67 = icmp eq i96 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %60
  tail call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %62) #16
  %69 = load i32, i32* %53, align 4
  br label %70

70:                                               ; preds = %56, %60, %68
  %71 = phi i32 [ %52, %56 ], [ %52, %60 ], [ %69, %68 ]
  store i32 %71, i32* %22, align 8
  %72 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = add i32 %73, 1
  store i32 %74, i32* %72, align 4
  br label %481

75:                                               ; preds = %21, %27, %14, %48, %51, %10
  %76 = load i32, i32* %6, align 8
  %77 = icmp eq i32 %76, 3
  br i1 %77, label %78, label %125

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 5, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp ne i32 %80, 2147483647
  %82 = zext i1 %81 to i32
  %83 = add nsw i32 %80, %82
  %84 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp sgt i32 %85, %83
  br i1 %86, label %87, label %125

87:                                               ; preds = %78
  %88 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 12
  %89 = load i8, i8* %88, align 1, !range !3
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %124, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 8
  %94 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 22, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %124, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp ugt i32 %99, %93
  br i1 %100, label %101, label %124

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 1
  br i1 %105, label %113, label %107

107:                                              ; preds = %101
  %108 = bitcast %"class.WTF::StringImpl"* %106 to i8*
  %109 = zext i32 %93 to i64
  %110 = getelementptr inbounds i8, i8* %108, i64 %109
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i16
  br label %118

113:                                              ; preds = %101
  %114 = bitcast %"class.WTF::StringImpl"* %106 to i16*
  %115 = zext i32 %93 to i64
  %116 = getelementptr inbounds i16, i16* %114, i64 %115
  %117 = load i16, i16* %116, align 2
  br label %118

118:                                              ; preds = %107, %113
  %119 = phi i16 [ %112, %107 ], [ %117, %113 ]
  switch i16 %119, label %124 [
    i16 32, label %120
    i16 9, label %120
  ]

120:                                              ; preds = %118, %118
  tail call void @_ZN5blink13NGLineBreaker20HandleTrailingSpacesERKNS_12NGInlineItemEPKNS_11ShapeResultEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %1, %"class.blink::ShapeResult"* %2, %"class.blink::NGLineInfo"* %3)
  %121 = load i32, i32* %6, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %124, label %123

123:                                              ; preds = %120
  store i32 3, i32* %6, align 8
  br label %481

124:                                              ; preds = %91, %97, %118, %120, %87
  tail call void @_ZN5blink13NGLineBreaker14HandleOverflowEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGLineInfo"* %3)
  br label %481

125:                                              ; preds = %78, %75
  %126 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %127 = load i8, i8* %126, align 4, !range !3
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %161, label %129, !prof !5

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %3, i64 0, i32 2
  %131 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %130, i32 %132) #16
  %134 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %133, i64 0, i32 8, i32 0
  %135 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %135, i64 0, i32 1
  %137 = load float, float* %136, align 4
  %138 = fmul float %137, 6.400000e+01
  %139 = tail call float @llvm.ceil.f32(float %138) #16
  %140 = fcmp ult float %139, 0xC1E0000000000000
  %141 = fcmp ugt float %139, 0x41DFFFFFE0000000
  %142 = fcmp ogt float %139, 0xC1E0000000000000
  %143 = select i1 %142, float %139, float 0xC1E0000000000000
  %144 = fptosi float %143 to i32
  %145 = select i1 %140, i32 0, i32 2147483647
  %146 = select i1 %141, i32 %145, i32 %144
  %147 = icmp sgt i32 %146, 0
  %148 = select i1 %147, i32 %146, i32 0
  %149 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %133, i64 0, i32 4, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %150, i32 %148) #16
  %152 = extractvalue { i32, i1 } %151, 1
  %153 = extractvalue { i32, i1 } %151, 0
  %154 = select i1 %152, i32 -2147483648, i32 %153, !prof !2
  store i32 %154, i32* %149, align 4
  store i8 0, i8* %126, align 4
  %155 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %156, i32 %148) #16
  %158 = extractvalue { i32, i1 } %157, 1
  %159 = extractvalue { i32, i1 } %157, 0
  %160 = select i1 %158, i32 -2147483648, i32 %159, !prof !2
  store i32 %160, i32* %155, align 4
  br label %161

161:                                              ; preds = %125, %129
  %162 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 9
  %163 = load i8, i8* %162, align 4, !range !3
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %165, label %216

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %3, i64 0, i32 2
  %169 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %170 = bitcast %"struct.blink::NGTextOffset"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %170) #16
  %171 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %172 = load i32, i32* %171, align 8
  %173 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %5, i64 0, i32 0
  store i32 %172, i32* %173, align 4
  %174 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %5, i64 0, i32 1
  store i32 %167, i32* %174, align 4
  %175 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 13
  %176 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %3, i64 0, i32 2, i32 0, i32 0, i32 2
  %177 = load i32, i32* %176, align 4
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %194, label %179

179:                                              ; preds = %165
  %180 = add i32 %177, -1
  %181 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %168, i32 %180) #16
  %182 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %181, i64 0, i32 19
  %183 = load i8, i8* %182, align 1, !range !3
  %184 = icmp ne i8 %183, 0
  %185 = load i32, i32* %176, align 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %194, label %187

187:                                              ; preds = %179
  %188 = add i32 %185, -1
  %189 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %168, i32 %188) #16
  %190 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %189, i64 0, i32 20
  %191 = load i8, i8* %190, align 2, !range !3
  %192 = icmp ne i8 %191, 0
  %193 = load i32, i32* %176, align 4
  br label %194

194:                                              ; preds = %187, %179, %165
  %195 = phi i32 [ 0, %179 ], [ %193, %187 ], [ 0, %165 ]
  %196 = phi i1 [ %184, %179 ], [ %184, %187 ], [ false, %165 ]
  %197 = phi i1 [ false, %179 ], [ %192, %187 ], [ false, %165 ]
  %198 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %3, i64 0, i32 2, i32 0, i32 0, i32 1
  %199 = load i32, i32* %198, align 8
  %200 = icmp eq i32 %195, %199
  br i1 %200, label %201, label %204, !prof !2

201:                                              ; preds = %194
  %202 = add i32 %195, 1
  tail call void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1970"* %168, i32 %202) #16
  %203 = load i32, i32* %176, align 4
  br label %204

204:                                              ; preds = %194, %201
  %205 = phi i32 [ %203, %201 ], [ %195, %194 ]
  %206 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %168, i64 0, i32 0, i32 0, i32 0
  %207 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %206, align 8
  %208 = zext i32 %205 to i64
  %209 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %207, i64 %208
  %210 = load i32, i32* %169, align 4
  %211 = load i8, i8* %175, align 1, !range !3
  %212 = icmp ne i8 %211, 0
  call void @_ZN5blink18NGInlineItemResultC1EPKNS_12NGInlineItemEjRKNS_12NGTextOffsetEbbb(%"struct.blink::NGInlineItemResult"* %209, %"class.blink::NGInlineItem"* %1, i32 %210, %"struct.blink::NGTextOffset"* nonnull dereferenceable(8) %5, i1 zeroext %212, i1 zeroext %196, i1 zeroext %197) #16
  %213 = load i32, i32* %176, align 4
  %214 = add i32 %213, 1
  store i32 %214, i32* %176, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %170) #16
  %215 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %207, i64 %208, i32 19
  store i8 1, i8* %215, align 1
  br label %216

216:                                              ; preds = %161, %204
  %217 = phi %"struct.blink::NGInlineItemResult"* [ null, %161 ], [ %209, %204 ]
  %218 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 19
  %219 = load i8, i8* %218, align 2, !range !3
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %231, label %221

221:                                              ; preds = %216
  %222 = call i32 @_ZN5blink24CommitPendingEndOverhangEPNS_10NGLineInfoE(%"class.blink::NGLineInfo"* %3) #16
  %223 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %224 = load i32, i32* %223, align 4
  %225 = icmp sgt i32 %222, -1
  %226 = select i1 %225, i32 -2147483648, i32 2147483647
  %227 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %224, i32 %222) #16
  %228 = extractvalue { i32, i1 } %227, 1
  %229 = extractvalue { i32, i1 } %227, 0
  %230 = select i1 %228, i32 %226, i32 %229, !prof !2
  store i32 %230, i32* %223, align 4
  br label %231

231:                                              ; preds = %216, %221
  %232 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 12
  %233 = load i8, i8* %232, align 1, !range !3
  %234 = icmp eq i8 %233, 0
  br i1 %234, label %392, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  %237 = load i32, i32* %236, align 8
  %238 = icmp eq i32 %237, 1
  br i1 %238, label %239, label %241

239:                                              ; preds = %235
  %240 = call zeroext i1 @_ZN5blink13NGLineBreaker27HandleTextForFastMinContentEPNS_18NGInlineItemResultERKNS_12NGInlineItemERKNS_11ShapeResultEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"struct.blink::NGInlineItemResult"* %217, %"class.blink::NGInlineItem"* dereferenceable(32) %1, %"class.blink::ShapeResult"* dereferenceable(72) %2, %"class.blink::NGLineInfo"* %3)
  br i1 %240, label %481, label %241

241:                                              ; preds = %239, %235
  %242 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 5, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = icmp ne i32 %243, 2147483647
  %245 = zext i1 %244 to i32
  %246 = add nsw i32 %243, %245
  %247 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %248 = load i32, i32* %247, align 4
  %249 = icmp sgt i32 %248, -1
  %250 = select i1 %249, i32 -2147483648, i32 2147483647
  %251 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %246, i32 %248) #16
  %252 = extractvalue { i32, i1 } %251, 1
  %253 = extractvalue { i32, i1 } %251, 0
  %254 = select i1 %252, i32 %250, i32 %253, !prof !2
  %255 = call i32 @_ZN5blink13NGLineBreaker9BreakTextEPNS_18NGInlineItemResultERKNS_12NGInlineItemERKNS_11ShapeResultENS_10LayoutUnitES9_PNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"struct.blink::NGInlineItemResult"* %217, %"class.blink::NGInlineItem"* dereferenceable(32) %1, %"class.blink::ShapeResult"* dereferenceable(72) %2, i32 %254, i32 %254, %"class.blink::NGLineInfo"* %3)
  %256 = load i32, i32* %247, align 4
  %257 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %217, i64 0, i32 4, i32 0
  %258 = load i32, i32* %257, align 4
  %259 = icmp slt i32 %258, 0
  %260 = select i1 %259, i32 -2147483648, i32 2147483647
  %261 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %256, i32 %258) #16
  %262 = extractvalue { i32, i1 } %261, 1
  %263 = extractvalue { i32, i1 } %261, 0
  %264 = select i1 %262, i32 %260, i32 %263, !prof !2
  store i32 %264, i32* %247, align 4
  %265 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %217, i64 0, i32 2, i32 1
  %266 = load i32, i32* %265, align 4
  %267 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  store i32 %266, i32* %267, align 8
  %268 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %217, i64 0, i32 1
  %269 = load i32, i32* %268, align 8
  %270 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  store i32 %269, i32* %270, align 4
  %271 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %217, i64 0, i32 0
  %272 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %271, align 8
  %273 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %272, i64 0, i32 1
  %274 = load i32, i32* %273, align 4
  %275 = icmp eq i32 %266, %274
  br i1 %275, label %276, label %278

276:                                              ; preds = %241
  %277 = add i32 %269, 1
  store i32 %277, i32* %270, align 4
  br label %278

278:                                              ; preds = %241, %276
  %279 = icmp eq i32 %255, 0
  br i1 %279, label %280, label %286

280:                                              ; preds = %278
  %281 = load i32, i32* %265, align 4
  %282 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %283 = load i32, i32* %282, align 4
  %284 = icmp ult i32 %281, %283
  br i1 %284, label %285, label %481

285:                                              ; preds = %280
  call void @_ZN5blink13NGLineBreaker20HandleTrailingSpacesERKNS_12NGInlineItemEPKNS_11ShapeResultEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %1, %"class.blink::ShapeResult"* %2, %"class.blink::NGLineInfo"* %3)
  br label %481

286:                                              ; preds = %278
  %287 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %217, i64 0, i32 6, i32 0
  %288 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %287, align 8
  %289 = icmp eq %"class.blink::ShapeResultView"* %288, null
  br i1 %289, label %290, label %291, !prof !2

290:                                              ; preds = %286
  call void @_ZN5blink13NGLineBreaker14HandleOverflowEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGLineInfo"* %3)
  br label %481

291:                                              ; preds = %286
  %292 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %217, i64 0, i32 17
  %293 = load i8, i8* %292, align 1, !range !3
  %294 = icmp eq i8 %293, 0
  br i1 %294, label %340, label %295

295:                                              ; preds = %291
  store i32 2, i32* %6, align 8
  %296 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %271, align 8
  %297 = call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %296)
  %298 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %297, i64 0, i32 0, i32 9
  %299 = bitcast [20 x i8]* %298 to i160*
  %300 = load i160, i160* %299, align 8
  %301 = and i160 %300, 520192
  %302 = icmp eq i160 %301, 16384
  br i1 %302, label %303, label %481

303:                                              ; preds = %295
  %304 = load i32, i32* %265, align 4
  %305 = add i32 %304, -1
  %306 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 22, i32 0, i32 0
  %307 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %306, align 8
  %308 = icmp eq %"class.WTF::StringImpl"* %307, null
  br i1 %308, label %481, label %309

309:                                              ; preds = %303
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 1
  %311 = load i32, i32* %310, align 4
  %312 = icmp ugt i32 %311, %305
  br i1 %312, label %313, label %481

313:                                              ; preds = %309
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %315 = load atomic i32, i32* %314 monotonic, align 4
  %316 = and i32 %315, 1
  %317 = icmp eq i32 %316, 0
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 1
  br i1 %317, label %325, label %319

319:                                              ; preds = %313
  %320 = bitcast %"class.WTF::StringImpl"* %318 to i8*
  %321 = zext i32 %305 to i64
  %322 = getelementptr inbounds i8, i8* %320, i64 %321
  %323 = load i8, i8* %322, align 1
  %324 = zext i8 %323 to i16
  br label %330

325:                                              ; preds = %313
  %326 = bitcast %"class.WTF::StringImpl"* %318 to i16*
  %327 = zext i32 %305 to i64
  %328 = getelementptr inbounds i16, i16* %326, i64 %327
  %329 = load i16, i16* %328, align 2
  br label %330

330:                                              ; preds = %319, %325
  %331 = phi i16 [ %324, %319 ], [ %329, %325 ]
  switch i16 %331, label %481 [
    i16 32, label %332
    i16 9, label %332
  ]

332:                                              ; preds = %330, %330
  %333 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %334 = bitcast %"struct.blink::NGInlineItemResult"** %333 to i64*
  %335 = load i64, i64* %334, align 8
  %336 = ptrtoint %"struct.blink::NGInlineItemResult"* %217 to i64
  %337 = sub i64 %336, %335
  %338 = sdiv exact i64 %337, 160
  %339 = trunc i64 %338 to i32
  call void @_ZN5blink13NGLineBreaker6RewindEjPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, i32 %339, %"class.blink::NGLineInfo"* %3)
  br label %481

340:                                              ; preds = %291
  %341 = load i32, i32* %6, align 8
  %342 = icmp eq i32 %341, 1
  br i1 %342, label %343, label %348, !prof !2

343:                                              ; preds = %340
  %344 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %217, i64 0, i32 16
  %345 = load i8, i8* %344, align 2, !range !3
  %346 = icmp eq i8 %345, 0
  br i1 %346, label %481, label %347

347:                                              ; preds = %343
  store i32 2, i32* %6, align 8
  br label %481

348:                                              ; preds = %340
  %349 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %217, i64 0, i32 2, i32 0
  %350 = load i32, i32* %349, align 4
  %351 = load i32, i32* %265, align 4
  %352 = sub i32 %351, %350
  %353 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 22, i32 0, i32 0
  %354 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %353, align 8
  %355 = icmp eq %"class.WTF::StringImpl"* %354, null
  br i1 %355, label %481, label %356

356:                                              ; preds = %348
  %357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %358 = load atomic i32, i32* %357 monotonic, align 4
  %359 = and i32 %358, 1
  %360 = icmp eq i32 %359, 0
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 1
  %362 = bitcast %"class.WTF::StringImpl"* %361 to i16*
  %363 = zext i32 %350 to i64
  %364 = getelementptr inbounds i16, i16* %362, i64 %363
  %365 = bitcast i16* %364 to i8*
  %366 = bitcast %"class.WTF::StringImpl"* %361 to i8*
  %367 = getelementptr inbounds i8, i8* %366, i64 %363
  %368 = select i1 %360, i8* %365, i8* %367
  %369 = zext i32 %352 to i64
  %370 = icmp eq i32 %352, 0
  br i1 %370, label %481, label %371

371:                                              ; preds = %356
  %372 = load atomic i32, i32* %357 monotonic, align 4
  %373 = and i32 %372, 1
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %382, label %375

375:                                              ; preds = %371, %379
  %376 = phi i64 [ %380, %379 ], [ 0, %371 ]
  %377 = getelementptr inbounds i8, i8* %368, i64 %376
  %378 = load i8, i8* %377, align 1
  switch i8 %378, label %391 [
    i8 32, label %379
    i8 9, label %379
  ]

379:                                              ; preds = %375, %375
  %380 = add nuw nsw i64 %376, 1
  %381 = icmp eq i64 %380, %369
  br i1 %381, label %481, label %375

382:                                              ; preds = %371
  %383 = bitcast i8* %368 to i16*
  br label %384

384:                                              ; preds = %388, %382
  %385 = phi i64 [ %389, %388 ], [ 0, %382 ]
  %386 = getelementptr inbounds i16, i16* %383, i64 %385
  %387 = load i16, i16* %386, align 2
  switch i16 %387, label %391 [
    i16 32, label %388
    i16 9, label %388
  ]

388:                                              ; preds = %384, %384
  %389 = add nuw nsw i64 %385, 1
  %390 = icmp eq i64 %389, %369
  br i1 %390, label %481, label %384

391:                                              ; preds = %375, %384
  call void @_ZN5blink13NGLineBreaker14HandleOverflowEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGLineInfo"* %3)
  br label %481

392:                                              ; preds = %231
  %393 = load i8, i8* %162, align 4, !range !3
  %394 = icmp eq i8 %393, 0
  br i1 %394, label %396, label %395

395:                                              ; preds = %392
  call void @_ZN5blink13NGLineBreaker17SplitTextByGlyphsERKNS_12NGInlineItemEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %1, %"class.blink::NGLineInfo"* %3)
  br label %481

396:                                              ; preds = %392
  %397 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %217, i64 0, i32 2, i32 0
  %398 = load i32, i32* %397, align 4
  %399 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 0
  %400 = load i32, i32* %399, align 8
  %401 = icmp eq i32 %398, %400
  br i1 %401, label %402, label %431

402:                                              ; preds = %396
  %403 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %2, i64 0, i32 1
  %404 = load float, float* %403, align 4
  %405 = fmul float %404, 6.400000e+01
  %406 = call float @llvm.ceil.f32(float %405) #16
  %407 = fcmp ult float %406, 0xC1E0000000000000
  %408 = fcmp ugt float %406, 0x41DFFFFFE0000000
  %409 = fcmp ogt float %406, 0xC1E0000000000000
  %410 = select i1 %409, float %406, float 0xC1E0000000000000
  %411 = fptosi float %410 to i32
  %412 = select i1 %407, i32 0, i32 2147483647
  %413 = select i1 %408, i32 %412, i32 %411
  %414 = icmp sgt i32 %413, 0
  %415 = select i1 %414, i32 %413, i32 0
  %416 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %217, i64 0, i32 4, i32 0
  store i32 %415, i32* %416, align 4
  %417 = call %"class.blink::ShapeResultView"* @_ZN5blink15ShapeResultView6CreateEPKNS_11ShapeResultE(%"class.blink::ShapeResult"* %2) #16
  %418 = ptrtoint %"class.blink::ShapeResultView"* %417 to i64
  %419 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %217, i64 0, i32 6
  %420 = bitcast %class.scoped_refptr.1909* %419 to i64*
  %421 = getelementptr inbounds %class.scoped_refptr.1909, %class.scoped_refptr.1909* %419, i64 0, i32 0
  %422 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %421, align 8
  store i64 %418, i64* %420, align 8
  %423 = icmp eq %"class.blink::ShapeResultView"* %422, null
  br i1 %423, label %464, label %424

424:                                              ; preds = %402
  %425 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %422, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %425) #16
  %426 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %422, i64 0, i32 0, i32 0, i32 0, i32 0
  %427 = load i32, i32* %426, align 4
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %429, label %464

429:                                              ; preds = %424
  call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %422) #16
  %430 = bitcast %"class.blink::ShapeResultView"* %422 to i8*
  call void @free(i8* %430) #16
  br label %464

431:                                              ; preds = %396
  %432 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %217, i64 0, i32 2, i32 1
  %433 = load i32, i32* %432, align 4
  %434 = call %"class.blink::ShapeResultView"* @_ZN5blink15ShapeResultView6CreateEPKNS_11ShapeResultEjj(%"class.blink::ShapeResult"* %2, i32 %398, i32 %433) #16
  %435 = ptrtoint %"class.blink::ShapeResultView"* %434 to i64
  %436 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %217, i64 0, i32 6
  %437 = bitcast %class.scoped_refptr.1909* %436 to i64*
  %438 = getelementptr inbounds %class.scoped_refptr.1909, %class.scoped_refptr.1909* %436, i64 0, i32 0
  %439 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %438, align 8
  store i64 %435, i64* %437, align 8
  %440 = icmp eq %"class.blink::ShapeResultView"* %439, null
  br i1 %440, label %448, label %441

441:                                              ; preds = %431
  %442 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %439, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %442) #16
  %443 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %439, i64 0, i32 0, i32 0, i32 0, i32 0
  %444 = load i32, i32* %443, align 4
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %446, label %448

446:                                              ; preds = %441
  call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %439) #16
  %447 = bitcast %"class.blink::ShapeResultView"* %439 to i8*
  call void @free(i8* %447) #16
  br label %448

448:                                              ; preds = %446, %441, %431
  %449 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %438, align 8
  %450 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %449, i64 0, i32 6
  %451 = load float, float* %450, align 8
  %452 = fmul float %451, 6.400000e+01
  %453 = call float @llvm.ceil.f32(float %452) #16
  %454 = fcmp ult float %453, 0xC1E0000000000000
  %455 = fcmp ugt float %453, 0x41DFFFFFE0000000
  %456 = fcmp ogt float %453, 0xC1E0000000000000
  %457 = select i1 %456, float %453, float 0xC1E0000000000000
  %458 = fptosi float %457 to i32
  %459 = select i1 %454, i32 0, i32 2147483647
  %460 = select i1 %455, i32 %459, i32 %458
  %461 = icmp sgt i32 %460, 0
  %462 = select i1 %461, i32 %460, i32 0
  %463 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %217, i64 0, i32 4, i32 0
  store i32 %462, i32* %463, align 4
  br label %464

464:                                              ; preds = %402, %424, %429, %448
  store i32 2, i32* %11, align 4
  %465 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %466 = load i32, i32* %465, align 4
  %467 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %217, i64 0, i32 4, i32 0
  %468 = load i32, i32* %467, align 4
  %469 = icmp slt i32 %468, 0
  %470 = select i1 %469, i32 -2147483648, i32 2147483647
  %471 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %466, i32 %468) #16
  %472 = extractvalue { i32, i1 } %471, 1
  %473 = extractvalue { i32, i1 } %471, 0
  %474 = select i1 %472, i32 %470, i32 %473, !prof !2
  store i32 %474, i32* %465, align 4
  %475 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %476 = load i32, i32* %475, align 4
  %477 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  store i32 %476, i32* %477, align 8
  %478 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %479 = load i32, i32* %478, align 4
  %480 = add i32 %479, 1
  store i32 %480, i32* %478, align 4
  br label %481

481:                                              ; preds = %379, %388, %303, %309, %330, %348, %356, %395, %464, %239, %347, %343, %295, %332, %280, %391, %290, %285, %123, %124, %9, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker15HandleEmptyTextERKNS_12NGInlineItemEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* nocapture, %"class.blink::NGInlineItem"* nocapture readonly dereferenceable(32), %"class.blink::NGLineInfo"* nocapture readnone) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %16

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 3
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 63
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %7
  tail call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %9) #16
  br label %16

16:                                               ; preds = %3, %7, %15
  %17 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  store i32 %18, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, 1
  store i32 %22, i32* %20, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker13HandleOpenTagERKNS_12NGInlineItemEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, %"class.blink::NGInlineItem"* dereferenceable(32), %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"struct.blink::NGTextOffset", align 4
  %5 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %9 = bitcast %"struct.blink::NGTextOffset"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %4, i64 0, i32 0
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %4, i64 0, i32 1
  store i32 %6, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 13
  %15 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %33, label %18

18:                                               ; preds = %3
  %19 = add i32 %16, -1
  %20 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %7, i32 %19) #16
  %21 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %20, i64 0, i32 19
  %22 = load i8, i8* %21, align 1, !range !3
  %23 = icmp ne i8 %22, 0
  %24 = load i32, i32* %15, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %18
  %27 = add i32 %24, -1
  %28 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %7, i32 %27) #16
  %29 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %28, i64 0, i32 20
  %30 = load i8, i8* %29, align 2, !range !3
  %31 = icmp ne i8 %30, 0
  %32 = load i32, i32* %15, align 4
  br label %33

33:                                               ; preds = %26, %18, %3
  %34 = phi i32 [ 0, %18 ], [ %32, %26 ], [ 0, %3 ]
  %35 = phi i1 [ %23, %18 ], [ %23, %26 ], [ false, %3 ]
  %36 = phi i1 [ false, %18 ], [ %31, %26 ], [ false, %3 ]
  %37 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %34, %38
  br i1 %39, label %40, label %43, !prof !2

40:                                               ; preds = %33
  %41 = add i32 %34, 1
  tail call void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1970"* %7, i32 %41) #16
  %42 = load i32, i32* %15, align 4
  br label %43

43:                                               ; preds = %33, %40
  %44 = phi i32 [ %42, %40 ], [ %34, %33 ]
  %45 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %7, i64 0, i32 0, i32 0, i32 0
  %46 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %45, align 8
  %47 = zext i32 %44 to i64
  %48 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %46, i64 %47
  %49 = load i32, i32* %8, align 4
  %50 = load i8, i8* %14, align 1, !range !3
  %51 = icmp ne i8 %50, 0
  call void @_ZN5blink18NGInlineItemResultC1EPKNS_12NGInlineItemEjRKNS_12NGTextOffsetEbbb(%"struct.blink::NGInlineItemResult"* %48, %"class.blink::NGInlineItem"* %1, i32 %49, %"struct.blink::NGTextOffset"* nonnull dereferenceable(8) %4, i1 zeroext %51, i1 zeroext %35, i1 zeroext %36) #16
  %52 = load i32, i32* %15, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %15, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %54 = call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %1)
  %55 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 23
  %56 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %55, align 8
  %57 = call zeroext i1 @_ZN5blink13NGLineBreaker20ComputeOpenTagResultERKNS_12NGInlineItemERKNS_17NGConstraintSpaceEPNS_18NGInlineItemResultE(%"class.blink::NGInlineItem"* dereferenceable(32) %1, %"class.blink::NGConstraintSpace"* dereferenceable(32) %56, %"struct.blink::NGInlineItemResult"* %48)
  br i1 %57, label %58, label %102

58:                                               ; preds = %43
  %59 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %46, i64 %47, i32 4, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %62, label %83

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 2
  br i1 %65, label %66, label %83, !prof !2

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 5, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp ne i32 %68, 2147483647
  %70 = zext i1 %69 to i32
  %71 = add nsw i32 %68, %70
  %72 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp sgt i32 %73, %71
  br i1 %74, label %75, label %83

75:                                               ; preds = %66
  %76 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %73, i32 %60) #16
  %77 = extractvalue { i32, i1 } %76, 1
  %78 = extractvalue { i32, i1 } %76, 0
  %79 = select i1 %77, i32 -2147483648, i32 %78, !prof !2
  %80 = icmp sgt i32 %79, %71
  br i1 %80, label %83, label %81

81:                                               ; preds = %75
  store i32 3, i32* %63, align 8
  %82 = load i32, i32* %59, align 4
  br label %83

83:                                               ; preds = %75, %81, %66, %58, %62
  %84 = phi i32 [ %60, %75 ], [ %82, %81 ], [ %60, %66 ], [ %60, %58 ], [ %60, %62 ]
  %85 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp slt i32 %84, 0
  %88 = select i1 %87, i32 -2147483648, i32 2147483647
  %89 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %86, i32 %84) #16
  %90 = extractvalue { i32, i1 } %89, 1
  %91 = extractvalue { i32, i1 } %89, 0
  %92 = select i1 %90, i32 %88, i32 %91, !prof !2
  store i32 %92, i32* %85, align 4
  %93 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %46, i64 %47, i32 19
  %94 = load i8, i8* %93, align 1, !range !3
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %102

96:                                               ; preds = %83
  %97 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 5
  %98 = load i32, i32* %97, align 4
  %99 = and i32 %98, 67108864
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %96
  store i8 1, i8* %93, align 1
  br label %102

102:                                              ; preds = %96, %83, %101, %43
  %103 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 5, i32 0, i32 0
  %104 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %104, i64 0, i32 11
  %106 = load i8, i8* %105, align 4
  %107 = and i8 %106, 1
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %109, label %140, !prof !2

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 49
  store i8 1, i8* %110, align 4
  %111 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 46
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, 1
  store i32 %113, i32* %111, align 8
  %114 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %46, i64 %47, i32 11, i32 1, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %46, i64 %47, i32 12, i32 1, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = icmp slt i32 %117, 0
  %119 = select i1 %118, i32 -2147483648, i32 2147483647
  %120 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %115, i32 %117) #16
  %121 = extractvalue { i32, i1 } %120, 1
  %122 = extractvalue { i32, i1 } %120, 0
  %123 = select i1 %121, i32 %119, i32 %122, !prof !2
  %124 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %46, i64 %47, i32 13, i32 1, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp slt i32 %125, 0
  %127 = select i1 %126, i32 -2147483648, i32 2147483647
  %128 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %123, i32 %125) #16
  %129 = extractvalue { i32, i1 } %128, 1
  %130 = extractvalue { i32, i1 } %128, 0
  %131 = select i1 %129, i32 %127, i32 %130, !prof !2
  %132 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 48, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = icmp slt i32 %131, 0
  %135 = select i1 %134, i32 -2147483648, i32 2147483647
  %136 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %133, i32 %131) #16
  %137 = extractvalue { i32, i1 } %136, 1
  %138 = extractvalue { i32, i1 } %136, 0
  %139 = select i1 %137, i32 %135, i32 %138, !prof !2
  store i32 %139, i32* %132, align 4
  br label %140

140:                                              ; preds = %109, %102
  %141 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 12
  %142 = load i8, i8* %141, align 1, !range !3
  %143 = icmp eq i8 %142, 0
  call void @_ZN5blink13NGLineBreaker15SetCurrentStyleERKNS_13ComputedStyleE(%"class.blink::NGLineBreaker"* %0, %"class.blink::ComputedStyle"* dereferenceable(104) %54)
  %144 = load i32, i32* %5, align 4
  store i32 %144, i32* %10, align 8
  %145 = load i32, i32* %8, align 4
  %146 = add i32 %145, 1
  store i32 %146, i32* %8, align 4
  br i1 %143, label %147, label %190

147:                                              ; preds = %140
  %148 = load i8, i8* %141, align 1, !range !3
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %190, label %150

150:                                              ; preds = %147
  %151 = load i32, i32* %15, align 4
  %152 = icmp ult i32 %151, 2
  %153 = icmp eq i32 %146, 0
  %154 = or i1 %153, %152
  br i1 %154, label %190, label %155, !prof !4

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 21
  %157 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %156, align 8
  %158 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %157, i64 0, i32 1
  %159 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZNK3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1841"* %158, i32 %145) #16
  %160 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %159, i64 0, i32 4
  %161 = load i32, i32* %160, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %190

163:                                              ; preds = %155
  %164 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %48, i64 -1
  %165 = load i8, i8* %141, align 1, !range !3
  %166 = icmp eq i8 %165, 0
  %167 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27
  br i1 %166, label %187, label %168

168:                                              ; preds = %163
  %169 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %164, i64 0, i32 2, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = add nsw i32 %170, 1
  %172 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %167, i64 0, i32 0, i32 0, i32 0
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %172, align 8
  %174 = icmp eq %"class.WTF::StringImpl"* %173, null
  br i1 %174, label %178, label %175

175:                                              ; preds = %168
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 1
  %177 = load i32, i32* %176, align 4
  br label %178

178:                                              ; preds = %175, %168
  %179 = phi i32 [ %177, %175 ], [ 0, %168 ]
  %180 = icmp slt i32 %179, %171
  %181 = select i1 %180, i32 %179, i32 %171
  %182 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 7
  %183 = load i32, i32* %182, align 4
  %184 = call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeEi(%"class.blink::LazyLineBreakIterator"* %167, i32 %170, i32 %183, i32 %181) #16
  %185 = icmp eq i32 %184, %170
  %186 = zext i1 %185 to i8
  br label %187

187:                                              ; preds = %163, %178
  %188 = phi i8 [ 0, %163 ], [ %186, %178 ]
  %189 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %164, i64 0, i32 16
  store i8 %188, i8* %189, align 2
  br label %190

190:                                              ; preds = %150, %140, %147, %155, %187
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker14HandleCloseTagERKNS_12NGInlineItemEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, %"class.blink::NGInlineItem"* dereferenceable(32), %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"struct.blink::NGTextOffset", align 4
  %5 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %9 = bitcast %"struct.blink::NGTextOffset"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %4, i64 0, i32 0
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %4, i64 0, i32 1
  store i32 %6, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 13
  %15 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %33, label %18

18:                                               ; preds = %3
  %19 = add i32 %16, -1
  %20 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %7, i32 %19) #16
  %21 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %20, i64 0, i32 19
  %22 = load i8, i8* %21, align 1, !range !3
  %23 = icmp ne i8 %22, 0
  %24 = load i32, i32* %15, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %18
  %27 = add i32 %24, -1
  %28 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %7, i32 %27) #16
  %29 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %28, i64 0, i32 20
  %30 = load i8, i8* %29, align 2, !range !3
  %31 = icmp ne i8 %30, 0
  %32 = load i32, i32* %15, align 4
  br label %33

33:                                               ; preds = %26, %18, %3
  %34 = phi i32 [ 0, %18 ], [ %32, %26 ], [ 0, %3 ]
  %35 = phi i1 [ %23, %18 ], [ %23, %26 ], [ false, %3 ]
  %36 = phi i1 [ false, %18 ], [ %31, %26 ], [ false, %3 ]
  %37 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %34, %38
  br i1 %39, label %40, label %43, !prof !2

40:                                               ; preds = %33
  %41 = add i32 %34, 1
  tail call void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1970"* %7, i32 %41) #16
  %42 = load i32, i32* %15, align 4
  br label %43

43:                                               ; preds = %33, %40
  %44 = phi i32 [ %42, %40 ], [ %34, %33 ]
  %45 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %7, i64 0, i32 0, i32 0, i32 0
  %46 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %45, align 8
  %47 = zext i32 %44 to i64
  %48 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %46, i64 %47
  %49 = load i32, i32* %8, align 4
  %50 = load i8, i8* %14, align 1, !range !3
  %51 = icmp ne i8 %50, 0
  call void @_ZN5blink18NGInlineItemResultC1EPKNS_12NGInlineItemEjRKNS_12NGTextOffsetEbbb(%"struct.blink::NGInlineItemResult"* %48, %"class.blink::NGInlineItem"* %1, i32 %49, %"struct.blink::NGTextOffset"* nonnull dereferenceable(8) %4, i1 zeroext %51, i1 zeroext %35, i1 zeroext %36) #16
  %52 = load i32, i32* %15, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %15, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %54 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 3
  %55 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %54, align 8
  %56 = bitcast %"class.blink::LayoutObject"* %55 to i1 (%"class.blink::LayoutObject"*)***
  %57 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %56, align 8
  %58 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %57, i64 26
  %59 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %58, align 8
  %60 = call zeroext i1 %59(%"class.blink::LayoutObject"* %55) #16
  br i1 %60, label %63, label %61

61:                                               ; preds = %43
  %62 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %46, i64 %47, i32 14
  store i8 1, i8* %62, align 8
  br label %71

63:                                               ; preds = %43
  %64 = bitcast %"class.blink::LayoutObject"** %54 to %"class.blink::LayoutInline"**
  %65 = load %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %65, i64 0, i32 0
  %67 = call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %66) #16
  %68 = icmp eq %"class.blink::LayoutBoxModelObject"* %67, null
  %69 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %46, i64 %47, i32 14
  %70 = zext i1 %68 to i8
  store i8 %70, i8* %69, align 8
  br i1 %68, label %71, label %137

71:                                               ; preds = %61, %63
  %72 = call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %1)
  %73 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 23
  %74 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %73, align 8
  %75 = call { i64, i64 } @_ZN5blink21ComputeMarginsForSelfERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %74, %"class.blink::ComputedStyle"* dereferenceable(104) %72) #16
  %76 = extractvalue { i64, i64 } %75, 0
  %77 = lshr i64 %76, 32
  %78 = trunc i64 %77 to i32
  %79 = call { i64, i64 } @_ZN5blink23ComputeBordersForInlineERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %72) #16
  %80 = extractvalue { i64, i64 } %79, 0
  %81 = lshr i64 %80, 32
  %82 = trunc i64 %81 to i32
  %83 = call { i64, i64 } @_ZN5blink14ComputePaddingERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %74, %"class.blink::ComputedStyle"* dereferenceable(104) %72) #16
  %84 = extractvalue { i64, i64 } %83, 0
  %85 = lshr i64 %84, 32
  %86 = trunc i64 %85 to i32
  %87 = icmp slt i32 %82, 0
  %88 = select i1 %87, i32 -2147483648, i32 2147483647
  %89 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %78, i32 %82) #16
  %90 = extractvalue { i32, i1 } %89, 1
  %91 = extractvalue { i32, i1 } %89, 0
  %92 = select i1 %90, i32 %88, i32 %91, !prof !2
  %93 = icmp slt i32 %86, 0
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %92, i32 %86) #16
  %96 = extractvalue { i32, i1 } %95, 1
  %97 = extractvalue { i32, i1 } %95, 0
  %98 = select i1 %96, i32 %94, i32 %97, !prof !2
  %99 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %46, i64 %47, i32 4, i32 0
  store i32 %98, i32* %99, align 4
  %100 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp slt i32 %98, 0
  %103 = select i1 %102, i32 -2147483648, i32 2147483647
  %104 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %101, i32 %98) #16
  %105 = extractvalue { i32, i1 } %104, 1
  %106 = extractvalue { i32, i1 } %104, 0
  %107 = select i1 %105, i32 %103, i32 %106, !prof !2
  store i32 %107, i32* %100, align 4
  %108 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %46, i64 %47, i32 19
  %109 = load i8, i8* %108, align 1, !range !3
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %117

111:                                              ; preds = %71
  %112 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 5
  %113 = load i32, i32* %112, align 4
  %114 = and i32 %113, 67108864
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %111
  store i8 1, i8* %108, align 1
  br label %117

117:                                              ; preds = %111, %71, %116
  %118 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %72, i64 0, i32 0, i32 5, i32 0, i32 0
  %119 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %119, i64 0, i32 11
  %121 = load i8, i8* %120, align 4
  %122 = and i8 %121, 1
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %137, !prof !2

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 46
  %126 = load i32, i32* %125, align 8
  %127 = add i32 %126, -1
  store i32 %127, i32* %125, align 8
  %128 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 48, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = load i32, i32* %99, align 4
  %131 = icmp sgt i32 %130, -1
  %132 = select i1 %131, i32 -2147483648, i32 2147483647
  %133 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %129, i32 %130) #16
  %134 = extractvalue { i32, i1 } %133, 1
  %135 = extractvalue { i32, i1 } %133, 0
  %136 = select i1 %134, i32 %132, i32 %135, !prof !2
  store i32 %136, i32* %128, align 4
  br label %137

137:                                              ; preds = %117, %124, %63
  %138 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 12
  %139 = load i8, i8* %138, align 1, !range !3
  %140 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %54, align 8
  %141 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %140, i64 0, i32 7
  %142 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %142, i64 0, i32 5, i32 0
  %144 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %143, align 8
  call void @_ZN5blink13NGLineBreaker15SetCurrentStyleERKNS_13ComputedStyleE(%"class.blink::NGLineBreaker"* %0, %"class.blink::ComputedStyle"* dereferenceable(104) %144)
  %145 = load i32, i32* %5, align 4
  store i32 %145, i32* %10, align 8
  %146 = load i32, i32* %8, align 4
  %147 = add i32 %146, 1
  store i32 %147, i32* %8, align 4
  %148 = load i32, i32* %15, align 4
  %149 = icmp ugt i32 %148, 1
  br i1 %149, label %150, label %251

150:                                              ; preds = %137
  %151 = icmp eq i8 %139, 0
  %152 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %48, i64 -1
  %153 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %152, i64 0, i32 16
  %154 = load i8, i8* %153, align 2, !range !3
  br i1 %151, label %155, label %159

155:                                              ; preds = %150
  %156 = icmp eq i8 %154, 0
  br i1 %156, label %199, label %157

157:                                              ; preds = %155
  %158 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %152, i64 0, i32 16
  br label %195

159:                                              ; preds = %150
  %160 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %152, i64 0, i32 16
  %161 = icmp eq i8 %154, 0
  br i1 %161, label %162, label %195

162:                                              ; preds = %159
  %163 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %46, i64 %47, i32 2, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 22, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %189, label %168

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = icmp ugt i32 %170, %164
  br i1 %171, label %172, label %189

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 1
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 1
  br i1 %176, label %184, label %178

178:                                              ; preds = %172
  %179 = bitcast %"class.WTF::StringImpl"* %177 to i8*
  %180 = zext i32 %164 to i64
  %181 = getelementptr inbounds i8, i8* %179, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i16
  br label %189

184:                                              ; preds = %172
  %185 = bitcast %"class.WTF::StringImpl"* %177 to i16*
  %186 = zext i32 %164 to i64
  %187 = getelementptr inbounds i16, i16* %185, i64 %186
  %188 = load i16, i16* %187, align 2
  br label %189

189:                                              ; preds = %162, %168, %178, %184
  %190 = phi i16 [ 0, %168 ], [ 0, %162 ], [ %183, %178 ], [ %188, %184 ]
  %191 = icmp eq i16 %190, 32
  %192 = icmp eq i16 %190, 9
  %193 = or i1 %191, %192
  %194 = zext i1 %193 to i8
  br label %195

195:                                              ; preds = %157, %159, %189
  %196 = phi i8* [ %160, %159 ], [ %160, %189 ], [ %158, %157 ]
  %197 = phi i8 [ 1, %159 ], [ %194, %189 ], [ 1, %157 ]
  %198 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %46, i64 %47, i32 16
  store i8 %197, i8* %198, align 2
  store i8 0, i8* %196, align 2
  br label %251

199:                                              ; preds = %155
  %200 = load i8, i8* %138, align 1, !range !3
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %251, label %202

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %46, i64 %47, i32 2, i32 1
  %204 = load i32, i32* %203, align 4
  %205 = add i32 %204, -1
  %206 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 22, i32 0, i32 0
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %206, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %232, label %209

209:                                              ; preds = %202
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = icmp ugt i32 %211, %205
  br i1 %212, label %213, label %232

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 1
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 1
  br i1 %217, label %225, label %219

219:                                              ; preds = %213
  %220 = bitcast %"class.WTF::StringImpl"* %218 to i8*
  %221 = zext i32 %205 to i64
  %222 = getelementptr inbounds i8, i8* %220, i64 %221
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i16
  br label %230

225:                                              ; preds = %213
  %226 = bitcast %"class.WTF::StringImpl"* %218 to i16*
  %227 = zext i32 %205 to i64
  %228 = getelementptr inbounds i16, i16* %226, i64 %227
  %229 = load i16, i16* %228, align 2
  br label %230

230:                                              ; preds = %219, %225
  %231 = phi i16 [ %224, %219 ], [ %229, %225 ]
  switch i16 %231, label %232 [
    i16 32, label %251
    i16 9, label %251
  ]

232:                                              ; preds = %202, %209, %230
  %233 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27
  %234 = add nsw i32 %204, 1
  %235 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %233, i64 0, i32 0, i32 0, i32 0
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %235, align 8
  %237 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %237, label %241, label %238

238:                                              ; preds = %232
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 1
  %240 = load i32, i32* %239, align 4
  br label %241

241:                                              ; preds = %232, %238
  %242 = phi i32 [ %240, %238 ], [ 0, %232 ]
  %243 = icmp slt i32 %242, %234
  %244 = select i1 %243, i32 %242, i32 %234
  %245 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 7
  %246 = load i32, i32* %245, align 4
  %247 = call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeEi(%"class.blink::LazyLineBreakIterator"* %233, i32 %204, i32 %246, i32 %244) #16
  %248 = icmp eq i32 %247, %204
  %249 = zext i1 %248 to i8
  %250 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %46, i64 %47, i32 16
  store i8 %249, i8* %250, align 2
  br label %251

251:                                              ; preds = %230, %230, %137, %241, %199, %195
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker17HandleControlItemERKNS_12NGInlineItemEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, %"class.blink::NGInlineItem"* dereferenceable(32), %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"struct.blink::NGTextOffset", align 4
  %5 = alloca %"struct.blink::NGTextOffset", align 4
  %6 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 7
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %159

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 3
  br i1 %13, label %14, label %24

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 5, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp ne i32 %16, 2147483647
  %18 = zext i1 %17 to i32
  %19 = add nsw i32 %16, %18
  %20 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, %19
  br i1 %22, label %23, label %24

23:                                               ; preds = %14
  tail call void @_ZN5blink13NGLineBreaker14HandleOverflowEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGLineInfo"* %2) #16
  br label %319

24:                                               ; preds = %14, %10
  %25 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2
  %28 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %29 = bitcast %"struct.blink::NGTextOffset"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #16
  %30 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %5, i64 0, i32 0
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %5, i64 0, i32 1
  store i32 %26, i32* %33, align 4
  %34 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 13
  %35 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %53, label %38

38:                                               ; preds = %24
  %39 = add i32 %36, -1
  %40 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %27, i32 %39) #16
  %41 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %40, i64 0, i32 19
  %42 = load i8, i8* %41, align 1, !range !3
  %43 = icmp ne i8 %42, 0
  %44 = load i32, i32* %35, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %38
  %47 = add i32 %44, -1
  %48 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %27, i32 %47) #16
  %49 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %48, i64 0, i32 20
  %50 = load i8, i8* %49, align 2, !range !3
  %51 = icmp ne i8 %50, 0
  %52 = load i32, i32* %35, align 4
  br label %53

53:                                               ; preds = %46, %38, %24
  %54 = phi i32 [ 0, %38 ], [ %52, %46 ], [ 0, %24 ]
  %55 = phi i1 [ %43, %38 ], [ %43, %46 ], [ false, %24 ]
  %56 = phi i1 [ false, %38 ], [ %51, %46 ], [ false, %24 ]
  %57 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %54, %58
  br i1 %59, label %60, label %63, !prof !2

60:                                               ; preds = %53
  %61 = add i32 %54, 1
  tail call void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1970"* %27, i32 %61) #16
  %62 = load i32, i32* %35, align 4
  br label %63

63:                                               ; preds = %53, %60
  %64 = phi i32 [ %62, %60 ], [ %54, %53 ]
  %65 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %27, i64 0, i32 0, i32 0, i32 0
  %66 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %65, align 8
  %67 = zext i32 %64 to i64
  %68 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %66, i64 %67
  %69 = load i32, i32* %28, align 4
  %70 = load i8, i8* %34, align 1, !range !3
  %71 = icmp ne i8 %70, 0
  call void @_ZN5blink18NGInlineItemResultC1EPKNS_12NGInlineItemEjRKNS_12NGTextOffsetEbbb(%"struct.blink::NGInlineItemResult"* %68, %"class.blink::NGInlineItem"* %1, i32 %69, %"struct.blink::NGTextOffset"* nonnull dereferenceable(8) %5, i1 zeroext %71, i1 zeroext %55, i1 zeroext %56) #16
  %72 = load i32, i32* %35, align 4
  %73 = add i32 %72, 1
  store i32 %73, i32* %35, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  %74 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %66, i64 %67, i32 19
  store i8 1, i8* %74, align 1
  %75 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %66, i64 %67, i32 17
  store i8 1, i8* %75, align 1
  %76 = load i32, i32* %25, align 4
  store i32 %76, i32* %30, align 8
  %77 = load i32, i32* %28, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %28, align 4
  %79 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 21
  %80 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %79, align 8
  %81 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %80, i64 0, i32 1
  %82 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %80, i64 0, i32 1, i32 0, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = icmp ult i32 %78, %83
  br i1 %84, label %85, label %121

85:                                               ; preds = %63
  %86 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  br label %87

87:                                               ; preds = %85, %94
  %88 = phi i32 [ %78, %85 ], [ %95, %94 ]
  %89 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZNK3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1841"* %81, i32 %88) #16
  %90 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %89, i64 0, i32 4
  %91 = load i32, i32* %90, align 8
  switch i32 %91, label %121 [
    i32 4, label %92
    i32 0, label %98
  ]

92:                                               ; preds = %87
  call void @_ZN5blink13NGLineBreaker14HandleCloseTagERKNS_12NGInlineItemEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %89, %"class.blink::NGLineInfo"* %2)
  %93 = load i32, i32* %28, align 4
  br label %94

94:                                               ; preds = %92, %117
  %95 = phi i32 [ %93, %92 ], [ %120, %117 ]
  %96 = load i32, i32* %82, align 4
  %97 = icmp ult i32 %95, %96
  br i1 %97, label %87, label %121

98:                                               ; preds = %87
  %99 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %89, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %89, i64 0, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = icmp eq i32 %100, %102
  br i1 %103, label %104, label %121

104:                                              ; preds = %98
  %105 = load i32, i32* %86, align 8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %117

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %89, i64 0, i32 3
  %109 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %109, i64 0, i32 4
  %111 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %110 to i96*
  %112 = load i96, i96* %111, align 4
  %113 = and i96 %112, 63
  %114 = icmp eq i96 %113, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %107
  call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %109) #16
  %116 = load i32, i32* %99, align 4
  br label %117

117:                                              ; preds = %104, %107, %115
  %118 = phi i32 [ %100, %104 ], [ %100, %107 ], [ %116, %115 ]
  store i32 %118, i32* %30, align 8
  %119 = load i32, i32* %28, align 4
  %120 = add i32 %119, 1
  store i32 %120, i32* %28, align 4
  br label %94

121:                                              ; preds = %94, %98, %87, %63
  %122 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %123 = load i8, i8* %122, align 4, !range !3
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %156, label %125, !prof !5

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %27, i32 %127) #16
  %129 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %128, i64 0, i32 8, i32 0
  %130 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %130, i64 0, i32 1
  %132 = load float, float* %131, align 4
  %133 = fmul float %132, 6.400000e+01
  %134 = call float @llvm.ceil.f32(float %133) #16
  %135 = fcmp ult float %134, 0xC1E0000000000000
  %136 = fcmp ugt float %134, 0x41DFFFFFE0000000
  %137 = fcmp ogt float %134, 0xC1E0000000000000
  %138 = select i1 %137, float %134, float 0xC1E0000000000000
  %139 = fptosi float %138 to i32
  %140 = select i1 %135, i32 0, i32 2147483647
  %141 = select i1 %136, i32 %140, i32 %139
  %142 = icmp sgt i32 %141, 0
  %143 = select i1 %142, i32 %141, i32 0
  %144 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %128, i64 0, i32 4, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %145, i32 %143) #16
  %147 = extractvalue { i32, i1 } %146, 1
  %148 = extractvalue { i32, i1 } %146, 0
  %149 = select i1 %147, i32 -2147483648, i32 %148, !prof !2
  store i32 %149, i32* %144, align 4
  store i8 0, i8* %122, align 4
  %150 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %151, i32 %143) #16
  %153 = extractvalue { i32, i1 } %152, 1
  %154 = extractvalue { i32, i1 } %152, 0
  %155 = select i1 %153, i32 -2147483648, i32 %154, !prof !2
  store i32 %155, i32* %150, align 4
  br label %156

156:                                              ; preds = %121, %125
  %157 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 17
  store i8 1, i8* %157, align 4
  %158 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 14
  store i8 1, i8* %158, align 2
  store i32 0, i32* %11, align 8
  br label %319

159:                                              ; preds = %3
  %160 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 0
  %161 = load i32, i32* %160, align 8
  %162 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 22, i32 0, i32 0
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %299, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = icmp ugt i32 %167, %161
  br i1 %168, label %169, label %299

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 1
  br i1 %173, label %181, label %175

175:                                              ; preds = %169
  %176 = bitcast %"class.WTF::StringImpl"* %174 to i8*
  %177 = zext i32 %161 to i64
  %178 = getelementptr inbounds i8, i8* %176, i64 %177
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i16
  br label %186

181:                                              ; preds = %169
  %182 = bitcast %"class.WTF::StringImpl"* %174 to i16*
  %183 = zext i32 %161 to i64
  %184 = getelementptr inbounds i16, i16* %182, i64 %183
  %185 = load i16, i16* %184, align 2
  br label %186

186:                                              ; preds = %175, %181
  %187 = phi i16 [ %180, %175 ], [ %185, %181 ]
  switch i16 %187, label %299 [
    i16 9, label %188
    i16 8203, label %219
    i16 13, label %279
    i16 12, label %279
  ]

188:                                              ; preds = %186
  %189 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %1)
  %190 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %189, i64 0, i32 0, i32 0, i32 0, i32 0
  %191 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %190, align 8
  %192 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %191, i64 0, i32 1, i32 0, i32 0
  %193 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %192, align 8
  %194 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %193, i64 0, i32 1
  %195 = load i32, i32* %6, align 4
  %196 = lshr i32 %195, 7
  %197 = trunc i32 %196 to i8
  %198 = and i8 %197, 1
  %199 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %189, i64 0, i32 0, i32 1, i32 0, i32 0
  %200 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %199, align 8
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %200, i64 0, i32 15
  %202 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = sitofp i32 %203 to float
  %205 = fmul float %204, 1.562500e-02
  %206 = load i32, i32* %160, align 8
  %207 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %208 = load i32, i32* %207, align 4
  %209 = sub i32 %208, %206
  %210 = tail call %"class.blink::ShapeResult"* @_ZN5blink11ShapeResult29CreateForTabulationCharactersEPKNS_4FontENS_13TextDirectionERKNS_7TabSizeEfjj(%"class.blink::Font"* %194, i8 zeroext %198, %"struct.blink::TabSize"* dereferenceable(8) %201, float %205, i32 %206, i32 %209) #16
  tail call void @_ZN5blink13NGLineBreaker10HandleTextERKNS_12NGInlineItemERKNS_11ShapeResultEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %1, %"class.blink::ShapeResult"* dereferenceable(72) %210, %"class.blink::NGLineInfo"* %2)
  %211 = icmp eq %"class.blink::ShapeResult"* %210, null
  br i1 %211, label %319, label %212

212:                                              ; preds = %188
  %213 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %210, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %213) #16
  %214 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %210, i64 0, i32 0, i32 0, i32 0, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %319

217:                                              ; preds = %212
  tail call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %210) #16
  %218 = bitcast %"class.blink::ShapeResult"* %210 to i8*
  tail call void @free(i8* %218) #16
  br label %319

219:                                              ; preds = %186
  %220 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2
  %223 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %224 = bitcast %"struct.blink::NGTextOffset"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #16
  %225 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %226 = load i32, i32* %225, align 8
  %227 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %4, i64 0, i32 0
  store i32 %226, i32* %227, align 4
  %228 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %4, i64 0, i32 1
  store i32 %221, i32* %228, align 4
  %229 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 13
  %230 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %248, label %233

233:                                              ; preds = %219
  %234 = add i32 %231, -1
  %235 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %222, i32 %234) #16
  %236 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %235, i64 0, i32 19
  %237 = load i8, i8* %236, align 1, !range !3
  %238 = icmp ne i8 %237, 0
  %239 = load i32, i32* %230, align 4
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %248, label %241

241:                                              ; preds = %233
  %242 = add i32 %239, -1
  %243 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %222, i32 %242) #16
  %244 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %243, i64 0, i32 20
  %245 = load i8, i8* %244, align 2, !range !3
  %246 = icmp ne i8 %245, 0
  %247 = load i32, i32* %230, align 4
  br label %248

248:                                              ; preds = %241, %233, %219
  %249 = phi i32 [ 0, %233 ], [ %247, %241 ], [ 0, %219 ]
  %250 = phi i1 [ %238, %233 ], [ %238, %241 ], [ false, %219 ]
  %251 = phi i1 [ false, %233 ], [ %246, %241 ], [ false, %219 ]
  %252 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %249, %253
  br i1 %254, label %255, label %258, !prof !2

255:                                              ; preds = %248
  %256 = add i32 %249, 1
  tail call void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1970"* %222, i32 %256) #16
  %257 = load i32, i32* %230, align 4
  br label %258

258:                                              ; preds = %248, %255
  %259 = phi i32 [ %257, %255 ], [ %249, %248 ]
  %260 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %222, i64 0, i32 0, i32 0, i32 0
  %261 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %260, align 8
  %262 = zext i32 %259 to i64
  %263 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %261, i64 %262
  %264 = load i32, i32* %223, align 4
  %265 = load i8, i8* %229, align 1, !range !3
  %266 = icmp ne i8 %265, 0
  call void @_ZN5blink18NGInlineItemResultC1EPKNS_12NGInlineItemEjRKNS_12NGTextOffsetEbbb(%"struct.blink::NGInlineItemResult"* %263, %"class.blink::NGInlineItem"* %1, i32 %264, %"struct.blink::NGTextOffset"* nonnull dereferenceable(8) %4, i1 zeroext %266, i1 zeroext %250, i1 zeroext %251) #16
  %267 = load i32, i32* %230, align 4
  %268 = add i32 %267, 1
  store i32 %268, i32* %230, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #16
  %269 = load i32, i32* %6, align 4
  %270 = and i32 %269, 536870912
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %274

272:                                              ; preds = %258
  %273 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %261, i64 %262, i32 19
  store i8 1, i8* %273, align 1
  br label %274

274:                                              ; preds = %258, %272
  %275 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %261, i64 %262, i32 16
  store i8 1, i8* %275, align 2
  %276 = load i32, i32* %220, align 4
  store i32 %276, i32* %225, align 8
  %277 = load i32, i32* %223, align 4
  %278 = add i32 %277, 1
  store i32 %278, i32* %223, align 4
  br label %319

279:                                              ; preds = %186, %186
  %280 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  %281 = load i32, i32* %280, align 8
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %292

283:                                              ; preds = %279
  %284 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 3
  %285 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %284, align 8
  %286 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %285, i64 0, i32 4
  %287 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %286 to i96*
  %288 = load i96, i96* %287, align 4
  %289 = and i96 %288, 63
  %290 = icmp eq i96 %289, 0
  br i1 %290, label %292, label %291

291:                                              ; preds = %283
  tail call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %285) #16
  br label %292

292:                                              ; preds = %279, %283, %291
  %293 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %294 = load i32, i32* %293, align 4
  %295 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  store i32 %294, i32* %295, align 8
  %296 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %297 = load i32, i32* %296, align 4
  %298 = add i32 %297, 1
  store i32 %298, i32* %296, align 4
  br label %319

299:                                              ; preds = %159, %165, %186
  %300 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  %301 = load i32, i32* %300, align 8
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %312

303:                                              ; preds = %299
  %304 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 3
  %305 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %304, align 8
  %306 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %305, i64 0, i32 4
  %307 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %306 to i96*
  %308 = load i96, i96* %307, align 4
  %309 = and i96 %308, 63
  %310 = icmp eq i96 %309, 0
  br i1 %310, label %312, label %311

311:                                              ; preds = %303
  tail call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %305) #16
  br label %312

312:                                              ; preds = %299, %303, %311
  %313 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %314 = load i32, i32* %313, align 4
  %315 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  store i32 %314, i32* %315, align 8
  %316 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %317 = load i32, i32* %316, align 4
  %318 = add i32 %317, 1
  store i32 %318, i32* %316, align 4
  br label %319

319:                                              ; preds = %217, %212, %188, %23, %292, %312, %274, %156
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker11HandleFloatERKNS_12NGInlineItemEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, %"class.blink::NGInlineItem"* dereferenceable(32), %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %class.scoped_refptr.1931, align 8
  %5 = alloca %class.scoped_refptr.1931, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"struct.blink::NGTextOffset", align 4
  %9 = alloca %"struct.blink::NGUnpositionedFloat", align 8
  %10 = alloca %"struct.blink::NGPositionedFloat", align 8
  %11 = alloca %"struct.blink::NGLayoutOpportunity", align 8
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %"struct.blink::NGBfcOffset"*
  %14 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2
  %17 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %18 = bitcast %"struct.blink::NGTextOffset"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %8, i64 0, i32 0
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %8, i64 0, i32 1
  store i32 %15, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 13
  %24 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %42, label %27

27:                                               ; preds = %3
  %28 = add i32 %25, -1
  %29 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %16, i32 %28) #16
  %30 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %29, i64 0, i32 19
  %31 = load i8, i8* %30, align 1, !range !3
  %32 = icmp ne i8 %31, 0
  %33 = load i32, i32* %24, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %27
  %36 = add i32 %33, -1
  %37 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %16, i32 %36) #16
  %38 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %37, i64 0, i32 20
  %39 = load i8, i8* %38, align 2, !range !3
  %40 = icmp ne i8 %39, 0
  %41 = load i32, i32* %24, align 4
  br label %42

42:                                               ; preds = %35, %27, %3
  %43 = phi i32 [ 0, %27 ], [ %41, %35 ], [ 0, %3 ]
  %44 = phi i1 [ %32, %27 ], [ %32, %35 ], [ false, %3 ]
  %45 = phi i1 [ false, %27 ], [ %40, %35 ], [ false, %3 ]
  %46 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %43, %47
  br i1 %48, label %49, label %52, !prof !2

49:                                               ; preds = %42
  %50 = add i32 %43, 1
  tail call void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1970"* %16, i32 %50) #16
  %51 = load i32, i32* %24, align 4
  br label %52

52:                                               ; preds = %42, %49
  %53 = phi i32 [ %51, %49 ], [ %43, %42 ]
  %54 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %16, i64 0, i32 0, i32 0, i32 0
  %55 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %54, align 8
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %55, i64 %56
  %58 = load i32, i32* %17, align 4
  %59 = load i8, i8* %23, align 1, !range !3
  %60 = icmp ne i8 %59, 0
  call void @_ZN5blink18NGInlineItemResultC1EPKNS_12NGInlineItemEjRKNS_12NGTextOffsetEbbb(%"struct.blink::NGInlineItemResult"* %57, %"class.blink::NGInlineItem"* %1, i32 %58, %"struct.blink::NGTextOffset"* nonnull dereferenceable(8) %8, i1 zeroext %60, i1 zeroext %44, i1 zeroext %45) #16
  %61 = load i32, i32* %24, align 4
  %62 = add i32 %61, 1
  store i32 %62, i32* %24, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  %63 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 12
  %64 = load i8, i8* %63, align 1, !range !3
  %65 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %55, i64 %56, i32 16
  store i8 %64, i8* %65, align 2
  %66 = load i32, i32* %14, align 4
  store i32 %66, i32* %19, align 8
  %67 = load i32, i32* %17, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %17, align 4
  %69 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %808

72:                                               ; preds = %52
  %73 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 39
  %74 = load i32, i32* %73, align 4
  %75 = icmp ugt i32 %68, %74
  br i1 %75, label %92, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 37
  %78 = load %"class.WTF::Vector.1918"*, %"class.WTF::Vector.1918"** %77, align 8
  %79 = getelementptr inbounds %"class.WTF::Vector.1918", %"class.WTF::Vector.1918"* %78, i64 0, i32 0, i32 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %92, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 38
  %84 = load i32, i32* %83, align 8
  %85 = add i32 %84, 1
  store i32 %85, i32* %83, align 8
  %86 = call dereferenceable(24) %"struct.blink::NGPositionedFloat"* @_ZNK3WTF6VectorIN5blink17NGPositionedFloatELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1918"* %78, i32 %84) #16
  %87 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %55, i64 %56, i32 10, i32 0, i32 0
  call void @_ZN4absl17optional_internal18optional_data_baseIN5blink17NGPositionedFloatEE6assignIRKS3_EEvOT_(%"class.absl::optional_internal::optional_data_base.1915"* %87, %"struct.blink::NGPositionedFloat"* dereferenceable(24) %86) #16
  %88 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %808, label %91

91:                                               ; preds = %82
  store i8 0, i8* %65, align 2
  br label %808

92:                                               ; preds = %72, %76
  %93 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 6, i32 4, i32 0
  %94 = load i32, i32* %93, align 8
  %95 = bitcast %"struct.blink::NGUnpositionedFloat"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %95) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 96, i1 false)
  %96 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 3
  %97 = bitcast %"class.blink::LayoutObject"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 23
  %100 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %99, align 8
  %101 = bitcast %"class.blink::NGConstraintSpace"* %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %100, i64 0, i32 3, i32 0
  %104 = load i32, i32* %103, align 8
  %105 = lshr i32 %104, 26
  %106 = and i32 %105, 3
  %107 = trunc i64 %102 to i32
  switch i32 %106, label %108 [
    i32 0, label %109
    i32 1, label %116
    i32 2, label %110
    i32 3, label %111
  ]

108:                                              ; preds = %92
  unreachable

109:                                              ; preds = %92
  br label %116

110:                                              ; preds = %92
  br label %116

111:                                              ; preds = %92
  %112 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %100, i64 0, i32 1, i32 0
  %113 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %112 to i32**
  %114 = load i32*, i32** %113, align 8
  %115 = load i32, i32* %114, align 8
  br label %116

116:                                              ; preds = %111, %110, %109, %92
  %117 = phi i32 [ %115, %111 ], [ -64, %110 ], [ %107, %109 ], [ 0, %92 ]
  %118 = lshr i32 %104, 28
  %119 = and i32 %118, 3
  switch i32 %119, label %120 [
    i32 0, label %121
    i32 1, label %130
    i32 2, label %124
    i32 3, label %125
  ]

120:                                              ; preds = %116
  unreachable

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %100, i64 0, i32 0, i32 1, i32 0
  %123 = load i32, i32* %122, align 4
  br label %130

124:                                              ; preds = %116
  br label %130

125:                                              ; preds = %116
  %126 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %100, i64 0, i32 1, i32 0
  %127 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %126, align 8
  %128 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %127, i64 0, i32 0, i32 1, i32 0
  %129 = load i32, i32* %128, align 4
  br label %130

130:                                              ; preds = %116, %121, %124, %125
  %131 = phi i32 [ %129, %125 ], [ -64, %124 ], [ %123, %121 ], [ 0, %116 ]
  %132 = zext i32 %131 to i64
  %133 = shl nuw i64 %132, 32
  %134 = zext i32 %117 to i64
  %135 = or i64 %133, %134
  switch i32 %106, label %136 [
    i32 0, label %137
    i32 1, label %144
    i32 2, label %138
    i32 3, label %139
  ]

136:                                              ; preds = %130
  unreachable

137:                                              ; preds = %130
  br label %144

138:                                              ; preds = %130
  br label %144

139:                                              ; preds = %130
  %140 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %100, i64 0, i32 1, i32 0
  %141 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %140 to i32**
  %142 = load i32*, i32** %141, align 8
  %143 = load i32, i32* %142, align 8
  br label %144

144:                                              ; preds = %139, %138, %137, %130
  %145 = phi i32 [ %143, %139 ], [ -64, %138 ], [ %107, %137 ], [ 0, %130 ]
  %146 = lshr i32 %104, 30
  switch i32 %146, label %156 [
    i32 0, label %147
    i32 1, label %157
    i32 2, label %150
    i32 3, label %151
  ]

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %100, i64 0, i32 0, i32 1, i32 0
  %149 = load i32, i32* %148, align 4
  br label %157

150:                                              ; preds = %144
  br label %157

151:                                              ; preds = %144
  %152 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %100, i64 0, i32 1, i32 0
  %153 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %152, align 8
  %154 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %153, i64 0, i32 1, i32 0
  %155 = load i32, i32* %154, align 8
  br label %157

156:                                              ; preds = %144
  unreachable

157:                                              ; preds = %144, %147, %150, %151
  %158 = phi i32 [ %155, %151 ], [ -64, %150 ], [ %149, %147 ], [ 0, %144 ]
  %159 = zext i32 %158 to i64
  %160 = shl nuw i64 %159, 32
  %161 = zext i32 %145 to i64
  %162 = or i64 %160, %161
  %163 = and i32 %104, 1
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %100, i64 0, i32 1
  br i1 %164, label %170, label %166

166:                                              ; preds = %157
  %167 = getelementptr inbounds %union.anon.1634, %union.anon.1634* %165, i64 0, i32 0
  %168 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %167, align 8
  %169 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %168, i64 0, i32 3
  br label %172

170:                                              ; preds = %157
  %171 = bitcast %union.anon.1634* %165 to %"struct.blink::NGBfcOffset"*
  br label %172

172:                                              ; preds = %166, %170
  %173 = phi %"struct.blink::NGBfcOffset"* [ %169, %166 ], [ %171, %170 ]
  %174 = bitcast %"struct.blink::NGBfcOffset"* %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 7
  %177 = bitcast %"class.blink::NGInlineNode"* %176 to %"class.blink::LayoutObject"**
  %178 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %177, align 8
  %179 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %178, i64 0, i32 5, i32 0
  %180 = bitcast %"class.blink::ComputedStyle"** %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %9, i64 0, i32 0, i32 0, i32 0
  %183 = bitcast %"struct.blink::NGUnpositionedFloat"* %9 to i64*
  store i64 %98, i64* %183, align 8
  %184 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %9, i64 0, i32 0, i32 0, i32 1
  %185 = bitcast i8* %184 to i64*
  %186 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %9, i64 0, i32 1, i32 0
  %187 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %9, i64 0, i32 2
  %188 = bitcast %"struct.blink::LogicalSize"* %187 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %184, i8 0, i64 16, i1 false)
  store i64 %102, i64* %188, align 8
  %189 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %9, i64 0, i32 3
  %190 = bitcast %"struct.blink::LogicalSize"* %189 to i64*
  store i64 %135, i64* %190, align 8
  %191 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %9, i64 0, i32 4
  %192 = bitcast %"struct.blink::LogicalSize"* %191 to i64*
  store i64 %162, i64* %192, align 8
  %193 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %9, i64 0, i32 5
  %194 = bitcast %"struct.blink::NGBfcOffset"* %193 to i64*
  %195 = zext i32 %94 to i64
  %196 = shl nuw i64 %195, 32
  %197 = and i64 %175, 4294967295
  %198 = or i64 %197, %196
  store i64 %198, i64* %194, align 8
  %199 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %9, i64 0, i32 6
  store %"class.blink::NGConstraintSpace"* %100, %"class.blink::NGConstraintSpace"** %199, align 8
  %200 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %9, i64 0, i32 7
  %201 = bitcast %"class.blink::ComputedStyle"** %200 to i64*
  store i64 %181, i64* %201, align 8
  %202 = getelementptr inbounds %"struct.blink::NGUnpositionedFloat", %"struct.blink::NGUnpositionedFloat"* %9, i64 0, i32 8, i32 0
  %203 = bitcast %"class.blink::NGLayoutResult"** %202 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %203, i8 0, i64 24, i1 false) #16
  %204 = call i32 @_ZN5blink46ComputeMarginBoxInlineSizeForUnpositionedFloatEPNS_19NGUnpositionedFloatE(%"struct.blink::NGUnpositionedFloat"* nonnull %9) #16
  %205 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp slt i32 %204, 0
  %208 = select i1 %207, i32 -2147483648, i32 2147483647
  %209 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %206, i32 %204) #16
  %210 = extractvalue { i32, i1 } %209, 1
  %211 = extractvalue { i32, i1 } %209, 0
  %212 = select i1 %210, i32 %208, i32 %211, !prof !2
  %213 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %99, align 8
  %214 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 21
  %215 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %214, align 8
  %216 = load i32, i32* %17, align 4
  %217 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %215, i64 0, i32 1, i32 0, i32 0, i32 0
  %218 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %217, align 8
  %219 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %215, i64 0, i32 1, i32 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = zext i32 %220 to i64
  %222 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %218, i64 %221
  %223 = icmp eq i32 %220, %216
  br i1 %223, label %291, label %224

224:                                              ; preds = %172
  %225 = zext i32 %216 to i64
  %226 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %218, i64 %225
  br label %227

227:                                              ; preds = %283, %224
  %228 = phi %"class.blink::NGInlineItem"* [ %285, %283 ], [ %226, %224 ]
  %229 = phi i32 [ %284, %283 ], [ 0, %224 ]
  %230 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %228, i64 0, i32 4
  %231 = load i32, i32* %230, align 8
  switch i32 %231, label %278 [
    i32 4, label %232
    i32 3, label %287
  ]

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %228, i64 0, i32 3
  %234 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %233, align 8
  %235 = bitcast %"class.blink::LayoutObject"* %234 to i1 (%"class.blink::LayoutObject"*)***
  %236 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %235, align 8
  %237 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %236, i64 26
  %238 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %237, align 8
  %239 = call zeroext i1 %238(%"class.blink::LayoutObject"* %234) #16
  br i1 %239, label %240, label %246

240:                                              ; preds = %232
  %241 = bitcast %"class.blink::LayoutObject"** %233 to %"class.blink::LayoutInline"**
  %242 = load %"class.blink::LayoutInline"*, %"class.blink::LayoutInline"** %241, align 8
  %243 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %242, i64 0, i32 0
  %244 = call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %243) #16
  %245 = icmp eq %"class.blink::LayoutBoxModelObject"* %244, null
  br i1 %245, label %246, label %283

246:                                              ; preds = %240, %232
  %247 = call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %228) #16
  %248 = call { i64, i64 } @_ZN5blink21ComputeMarginsForSelfERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %213, %"class.blink::ComputedStyle"* dereferenceable(104) %247) #16
  %249 = extractvalue { i64, i64 } %248, 0
  %250 = lshr i64 %249, 32
  %251 = trunc i64 %250 to i32
  %252 = call { i64, i64 } @_ZN5blink23ComputeBordersForInlineERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %247) #16
  %253 = extractvalue { i64, i64 } %252, 0
  %254 = lshr i64 %253, 32
  %255 = trunc i64 %254 to i32
  %256 = call { i64, i64 } @_ZN5blink14ComputePaddingERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %213, %"class.blink::ComputedStyle"* dereferenceable(104) %247) #16
  %257 = extractvalue { i64, i64 } %256, 0
  %258 = lshr i64 %257, 32
  %259 = trunc i64 %258 to i32
  %260 = icmp slt i32 %255, 0
  %261 = select i1 %260, i32 -2147483648, i32 2147483647
  %262 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %251, i32 %255) #16
  %263 = extractvalue { i32, i1 } %262, 1
  %264 = extractvalue { i32, i1 } %262, 0
  %265 = select i1 %263, i32 %261, i32 %264, !prof !2
  %266 = icmp slt i32 %259, 0
  %267 = select i1 %266, i32 -2147483648, i32 2147483647
  %268 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %265, i32 %259) #16
  %269 = extractvalue { i32, i1 } %268, 1
  %270 = extractvalue { i32, i1 } %268, 0
  %271 = select i1 %269, i32 %267, i32 %270, !prof !2
  %272 = icmp slt i32 %271, 0
  %273 = select i1 %272, i32 -2147483648, i32 2147483647
  %274 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %229, i32 %271) #16
  %275 = extractvalue { i32, i1 } %274, 1
  %276 = extractvalue { i32, i1 } %274, 0
  %277 = select i1 %275, i32 %273, i32 %276, !prof !2
  br label %283

278:                                              ; preds = %227
  %279 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %228, i64 0, i32 5
  %280 = load i32, i32* %279, align 4
  %281 = and i32 %280, 67108864
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %287, label %283

283:                                              ; preds = %278, %246, %240
  %284 = phi i32 [ %229, %240 ], [ %277, %246 ], [ %229, %278 ]
  %285 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %228, i64 1
  %286 = icmp eq %"class.blink::NGInlineItem"* %285, %222
  br i1 %286, label %287, label %227

287:                                              ; preds = %227, %278, %283
  %288 = phi i32 [ %229, %278 ], [ %229, %227 ], [ %284, %283 ]
  %289 = icmp slt i32 %288, 0
  %290 = select i1 %289, i32 -2147483648, i32 2147483647
  br label %291

291:                                              ; preds = %287, %172
  %292 = phi i32 [ 0, %172 ], [ %288, %287 ]
  %293 = phi i32 [ 2147483647, %172 ], [ %290, %287 ]
  %294 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %212, i32 %292) #16
  %295 = extractvalue { i32, i1 } %294, 1
  %296 = extractvalue { i32, i1 } %294, 0
  %297 = select i1 %295, i32 %293, i32 %296, !prof !2
  %298 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 6, i32 3, i32 0
  %299 = load i32, i32* %298, align 4
  %300 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 6, i32 2, i32 0
  %301 = load i32, i32* %300, align 4
  %302 = icmp sgt i32 %301, -1
  %303 = select i1 %302, i32 -2147483648, i32 2147483647
  %304 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %299, i32 %301) #16
  %305 = extractvalue { i32, i1 } %304, 1
  %306 = extractvalue { i32, i1 } %304, 0
  %307 = select i1 %305, i32 %303, i32 %306, !prof !2
  %308 = icmp ne i32 %307, 2147483647
  %309 = zext i1 %308 to i32
  %310 = add nsw i32 %307, %309
  %311 = icmp sgt i32 %297, %310
  br i1 %311, label %312, label %369

312:                                              ; preds = %291
  call void @_ZN5blink13NGLineBreaker31ComputeTrailingCollapsibleSpaceEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGLineInfo"* %2) #16
  %313 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 0
  %314 = load i8, i8* %313, align 8, !range !3
  %315 = icmp eq i8 %314, 0
  br i1 %315, label %348, label %316

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %318 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %317, align 8
  %319 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %320 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %319, align 8
  %321 = icmp eq %"class.blink::ShapeResultView"* %320, null
  br i1 %321, label %342, label %322

322:                                              ; preds = %316
  %323 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %320, i64 0, i32 6
  %324 = load float, float* %323, align 8
  %325 = fmul float %324, 6.400000e+01
  %326 = call float @llvm.ceil.f32(float %325) #16
  %327 = fcmp ult float %326, 0xC1E0000000000000
  %328 = fcmp ugt float %326, 0x41DFFFFFE0000000
  %329 = fcmp ogt float %326, 0xC1E0000000000000
  %330 = select i1 %329, float %326, float 0xC1E0000000000000
  %331 = fptosi float %330 to i32
  %332 = select i1 %327, i32 0, i32 2147483647
  %333 = select i1 %328, i32 %332, i32 %331
  %334 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %318, i64 0, i32 4, i32 0
  %335 = load i32, i32* %334, align 4
  %336 = icmp sgt i32 %333, -1
  %337 = select i1 %336, i32 -2147483648, i32 2147483647
  %338 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %335, i32 %333) #16
  %339 = extractvalue { i32, i1 } %338, 1
  %340 = extractvalue { i32, i1 } %338, 0
  %341 = select i1 %339, i32 %337, i32 %340, !prof !2
  br label %345

342:                                              ; preds = %316
  %343 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %318, i64 0, i32 4, i32 0
  %344 = load i32, i32* %343, align 4
  br label %345

345:                                              ; preds = %322, %342
  %346 = phi i32 [ %341, %322 ], [ %344, %342 ]
  %347 = icmp sgt i32 %346, -1
  br i1 %347, label %348, label %350

348:                                              ; preds = %312, %345
  %349 = phi i32 [ %346, %345 ], [ 0, %312 ]
  br label %350

350:                                              ; preds = %348, %345
  %351 = phi i32 [ %349, %348 ], [ %346, %345 ]
  %352 = phi i32 [ -2147483648, %348 ], [ 2147483647, %345 ]
  %353 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %297, i32 %351) #16
  %354 = extractvalue { i32, i1 } %353, 1
  %355 = extractvalue { i32, i1 } %353, 0
  %356 = select i1 %354, i32 %352, i32 %355, !prof !2
  %357 = load i32, i32* %298, align 4
  %358 = load i32, i32* %300, align 4
  %359 = icmp sgt i32 %358, -1
  %360 = select i1 %359, i32 -2147483648, i32 2147483647
  %361 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %357, i32 %358) #16
  %362 = extractvalue { i32, i1 } %361, 1
  %363 = extractvalue { i32, i1 } %361, 0
  %364 = select i1 %362, i32 %360, i32 %363, !prof !2
  %365 = icmp ne i32 %364, 2147483647
  %366 = zext i1 %365 to i32
  %367 = add nsw i32 %364, %366
  %368 = icmp sgt i32 %356, %367
  br i1 %368, label %424, label %369

369:                                              ; preds = %350, %291
  %370 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 24
  %371 = load %"class.blink::NGExclusionSpace"*, %"class.blink::NGExclusionSpace"** %370, align 8
  %372 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %371, i64 0, i32 0, i32 0, i32 0, i32 0
  %373 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %372, align 8
  %374 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %373, null
  br i1 %374, label %379, label %375

375:                                              ; preds = %369
  %376 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %373, i64 0, i32 4, i32 0
  %377 = load i32, i32* %376, align 4
  %378 = icmp sgt i32 %377, %94
  br i1 %378, label %424, label %379

379:                                              ; preds = %369, %375
  %380 = bitcast %"struct.blink::NGUnpositionedFloat"* %9 to %"class.blink::LayoutObject"**
  %381 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %380, align 8
  %382 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %381, i64 0, i32 5, i32 0
  %383 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %382, align 8
  %384 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %383, i64 0, i32 0, i32 9
  %385 = bitcast [20 x i8]* %384 to i160*
  %386 = load i160, i160* %385, align 8
  %387 = lshr i160 %386, 68
  %388 = trunc i160 %387 to i32
  %389 = and i32 %388, 7
  %390 = add nsw i32 %389, -3
  %391 = icmp ult i32 %390, 2
  br i1 %391, label %392, label %401

392:                                              ; preds = %379
  %393 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %99, align 8
  %394 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %393, i64 0, i32 3, i32 0
  %395 = load i32, i32* %394, align 8
  %396 = trunc i32 %395 to i8
  %397 = icmp sgt i8 %396, -1
  %398 = icmp ne i32 %389, 3
  %399 = xor i1 %398, %397
  %400 = select i1 %399, i32 1, i32 2
  br label %401

401:                                              ; preds = %379, %392
  %402 = phi i32 [ %400, %392 ], [ %389, %379 ]
  br i1 %374, label %421, label %403

403:                                              ; preds = %401
  switch i32 %402, label %421 [
    i32 5, label %410
    i32 1, label %404
    i32 2, label %407
  ]

404:                                              ; preds = %403
  %405 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %373, i64 0, i32 2, i32 0
  %406 = load i32, i32* %405, align 4
  br label %421

407:                                              ; preds = %403
  %408 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %373, i64 0, i32 3, i32 0
  %409 = load i32, i32* %408, align 8
  br label %421

410:                                              ; preds = %403
  %411 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %373, i64 0, i32 2
  %412 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %373, i64 0, i32 3
  %413 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %411, i64 0, i32 0
  %414 = load i32, i32* %413, align 4
  %415 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %412, i64 0, i32 0
  %416 = load i32, i32* %415, align 4
  %417 = icmp slt i32 %414, %416
  %418 = select i1 %417, %"class.blink::LayoutUnit"* %412, %"class.blink::LayoutUnit"* %411
  %419 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %418, i64 0, i32 0
  %420 = load i32, i32* %419, align 4
  br label %421

421:                                              ; preds = %401, %403, %404, %407, %410
  %422 = phi i32 [ -2147483648, %401 ], [ %420, %410 ], [ %409, %407 ], [ %406, %404 ], [ -2147483648, %403 ]
  %423 = icmp sgt i32 %422, %94
  br label %424

424:                                              ; preds = %350, %421, %375
  %425 = phi i1 [ true, %375 ], [ true, %350 ], [ %423, %421 ]
  %426 = load i32, i32* %24, align 4
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %434, label %428

428:                                              ; preds = %424
  %429 = add i32 %426, -1
  %430 = call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %16, i32 %429) #16
  %431 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %430, i64 0, i32 20
  %432 = load i8, i8* %431, align 2, !range !3
  %433 = icmp ne i8 %432, 0
  br label %434

434:                                              ; preds = %424, %428
  %435 = phi i1 [ false, %424 ], [ %433, %428 ]
  %436 = or i1 %425, %435
  br i1 %436, label %437, label %439

437:                                              ; preds = %434
  %438 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %55, i64 %56, i32 20
  store i8 1, i8* %438, align 2
  br label %781

439:                                              ; preds = %434
  %440 = bitcast %"struct.blink::NGPositionedFloat"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %440) #16
  %441 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %10, i64 0, i32 0, i32 0
  %442 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %10, i64 0, i32 2
  %443 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 24
  %444 = bitcast %"struct.blink::NGPositionedFloat"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %444, i8 -86, i64 24, i1 false)
  %445 = load %"class.blink::NGExclusionSpace"*, %"class.blink::NGExclusionSpace"** %443, align 8
  call void @_ZN5blink13PositionFloatEPNS_19NGUnpositionedFloatEPNS_16NGExclusionSpaceE(%"struct.blink::NGPositionedFloat"* nonnull sret %10, %"struct.blink::NGUnpositionedFloat"* nonnull %9, %"class.blink::NGExclusionSpace"* %445) #16
  %446 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %99, align 8
  %447 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %446, i64 0, i32 3, i32 0
  %448 = load i32, i32* %447, align 8
  %449 = and i32 %448, 1
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %609, label %451

451:                                              ; preds = %439
  %452 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %446, i64 0, i32 1, i32 0
  %453 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %452, align 8
  %454 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %453, i64 0, i32 6
  %455 = load i16, i16* %454, align 8
  %456 = and i16 %455, 384
  %457 = icmp eq i16 %456, 0
  br i1 %457, label %609, label %458

458:                                              ; preds = %451
  %459 = load i8, i8* %442, align 8, !range !3
  %460 = icmp eq i8 %459, 0
  br i1 %460, label %553, label %461

461:                                              ; preds = %458
  %462 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %182, align 8
  %463 = load i64, i64* %185, align 8
  %464 = call noalias i8* @malloc(i64 48) #16
  %465 = bitcast i8* %464 to %"class.blink::NGBlockBreakToken"*
  call void @_ZN5blink17NGBlockBreakTokenC1EN4base7PassKeyIS0_EENS_17NGLayoutInputNodeE(%"class.blink::NGBlockBreakToken"* %465, %"class.blink::LayoutBox"* %462, i64 %463) #16
  %466 = getelementptr inbounds i8, i8* %464, i64 24
  %467 = bitcast i8* %466 to i16*
  %468 = load i16, i16* %467, align 8
  %469 = and i16 %468, -97
  %470 = or i16 %469, 32
  store i16 %470, i16* %467, align 8
  %471 = and i64 %463, 1
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %473, label %483

473:                                              ; preds = %461
  %474 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %462, i64 0, i32 0, i32 0
  %475 = bitcast %"class.blink::LayoutBox"* %462 to i1 (%"class.blink::LayoutObject"*, i32)***
  %476 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %475, align 8
  %477 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %476, i64 92
  %478 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %477, align 8
  %479 = call zeroext i1 %478(%"class.blink::LayoutObject"* %474, i32 29) #16
  %480 = zext i1 %479 to i16
  %481 = shl nuw nsw i16 %480, 12
  %482 = load i16, i16* %467, align 8
  br label %483

483:                                              ; preds = %461, %473
  %484 = phi i16 [ %470, %461 ], [ %482, %473 ]
  %485 = phi i16 [ 0, %461 ], [ %481, %473 ]
  %486 = and i16 %484, -4097
  %487 = or i16 %486, %485
  store i16 %487, i16* %467, align 8
  %488 = load i32, i32* %24, align 4
  %489 = add i32 %488, -1
  %490 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %491 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %490, align 8
  %492 = zext i32 %488 to i64
  %493 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %491, i64 %492
  %494 = zext i32 %489 to i64
  %495 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %491, i64 %494
  br label %496

496:                                              ; preds = %496, %483
  %497 = phi %"struct.blink::NGInlineItemResult"* [ %498, %496 ], [ %495, %483 ]
  call void @_ZN5blink18NGInlineItemResultD2Ev(%"struct.blink::NGInlineItemResult"* %497) #16
  %498 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %497, i64 1
  %499 = icmp eq %"struct.blink::NGInlineItemResult"* %498, %493
  br i1 %499, label %500, label %496

500:                                              ; preds = %496
  store i32 %489, i32* %24, align 4
  %501 = icmp eq i8* %464, null
  br i1 %501, label %505, label %502

502:                                              ; preds = %500
  %503 = getelementptr inbounds i8, i8* %464, i64 8
  %504 = bitcast i8* %503 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %504) #16
  br label %505

505:                                              ; preds = %500, %502
  %506 = bitcast %class.scoped_refptr.1931* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %506)
  %507 = getelementptr inbounds %class.scoped_refptr.1931, %class.scoped_refptr.1931* %4, i64 0, i32 0
  %508 = bitcast %class.scoped_refptr.1931* %4 to i8**
  store i8* %464, i8** %508, align 8
  %509 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 45
  %510 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 45, i32 0, i32 0, i32 2
  %511 = load i32, i32* %510, align 4
  %512 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 45, i32 0, i32 0, i32 1
  %513 = load i32, i32* %512, align 8
  %514 = icmp eq i32 %511, %513
  br i1 %514, label %524, label %515, !prof !2

515:                                              ; preds = %505
  %516 = ptrtoint i8* %464 to i64
  %517 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %509, i64 0, i32 0, i32 0, i32 0
  %518 = load %class.scoped_refptr.1931*, %class.scoped_refptr.1931** %517, align 8
  %519 = zext i32 %511 to i64
  %520 = getelementptr inbounds %class.scoped_refptr.1931, %class.scoped_refptr.1931* %518, i64 %519
  %521 = bitcast %class.scoped_refptr.1931* %520 to i64*
  store i64 %516, i64* %521, align 8
  store %"class.blink::NGBlockBreakToken"* null, %"class.blink::NGBlockBreakToken"** %507, align 8
  %522 = load i32, i32* %510, align 4
  %523 = add i32 %522, 1
  store i32 %523, i32* %510, align 4
  br label %540

524:                                              ; preds = %505
  call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink17NGBlockBreakTokenEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.1928"* %509, %class.scoped_refptr.1931* nonnull dereferenceable(8) %4) #16
  %525 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %507, align 8
  %526 = icmp eq %"class.blink::NGBlockBreakToken"* %525, null
  br i1 %526, label %540, label %527

527:                                              ; preds = %524
  %528 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %525, i64 0, i32 0, i32 1, i32 0
  %529 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %528, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %529) #16
  %530 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %528, i64 0, i32 0, i32 0
  %531 = load i32, i32* %530, align 4
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %533, label %540

533:                                              ; preds = %527
  %534 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %528, i64 -2
  %535 = bitcast %"class.base::RefCounted.1784"* %534 to %"class.blink::NGBreakToken"*
  %536 = bitcast %"class.base::RefCounted.1784"* %534 to void (%"class.blink::NGBreakToken"*)***
  %537 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %536, align 8
  %538 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %537, i64 1
  %539 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %538, align 8
  call void %539(%"class.blink::NGBreakToken"* nonnull %535) #16
  br label %540

540:                                              ; preds = %515, %524, %527, %533
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %506)
  br i1 %501, label %770, label %541

541:                                              ; preds = %540
  %542 = getelementptr inbounds i8, i8* %464, i64 8
  %543 = bitcast i8* %542 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %543) #16
  %544 = bitcast i8* %542 to i32*
  %545 = load i32, i32* %544, align 4
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %547, label %770

547:                                              ; preds = %541
  %548 = bitcast i8* %464 to %"class.blink::NGBreakToken"*
  %549 = bitcast i8* %464 to void (%"class.blink::NGBreakToken"*)***
  %550 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %549, align 8
  %551 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %550, i64 1
  %552 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %551, align 8
  call void %552(%"class.blink::NGBreakToken"* nonnull %548) #16
  br label %770

553:                                              ; preds = %458
  %554 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %441, align 8
  %555 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %554, i64 0, i32 3, i32 0
  %556 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %555, align 8
  %557 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %556, i64 0, i32 4, i32 0
  %558 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %557, align 8
  %559 = icmp eq %"class.blink::NGBreakToken"* %558, null
  br i1 %559, label %609, label %560

560:                                              ; preds = %553
  %561 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %558, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %561) #16
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %561) #16
  %562 = bitcast %class.scoped_refptr.1931* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %562)
  %563 = getelementptr inbounds %class.scoped_refptr.1931, %class.scoped_refptr.1931* %5, i64 0, i32 0
  %564 = bitcast %class.scoped_refptr.1931* %5 to %"class.blink::NGBreakToken"**
  store %"class.blink::NGBreakToken"* %558, %"class.blink::NGBreakToken"** %564, align 8
  %565 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 45
  %566 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 45, i32 0, i32 0, i32 2
  %567 = load i32, i32* %566, align 4
  %568 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 45, i32 0, i32 0, i32 1
  %569 = load i32, i32* %568, align 8
  %570 = icmp eq i32 %567, %569
  br i1 %570, label %580, label %571, !prof !2

571:                                              ; preds = %560
  %572 = ptrtoint %"class.blink::NGBreakToken"* %558 to i64
  %573 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %565, i64 0, i32 0, i32 0, i32 0
  %574 = load %class.scoped_refptr.1931*, %class.scoped_refptr.1931** %573, align 8
  %575 = zext i32 %567 to i64
  %576 = getelementptr inbounds %class.scoped_refptr.1931, %class.scoped_refptr.1931* %574, i64 %575
  %577 = bitcast %class.scoped_refptr.1931* %576 to i64*
  store i64 %572, i64* %577, align 8
  store %"class.blink::NGBlockBreakToken"* null, %"class.blink::NGBlockBreakToken"** %563, align 8
  %578 = load i32, i32* %566, align 4
  %579 = add i32 %578, 1
  store i32 %579, i32* %566, align 4
  br label %596

580:                                              ; preds = %560
  call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink17NGBlockBreakTokenEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.1928"* %565, %class.scoped_refptr.1931* nonnull dereferenceable(8) %5) #16
  %581 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %563, align 8
  %582 = icmp eq %"class.blink::NGBlockBreakToken"* %581, null
  br i1 %582, label %596, label %583

583:                                              ; preds = %580
  %584 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %581, i64 0, i32 0, i32 1, i32 0
  %585 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %584, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %585) #16
  %586 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %584, i64 0, i32 0, i32 0
  %587 = load i32, i32* %586, align 4
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %589, label %596

589:                                              ; preds = %583
  %590 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %584, i64 -2
  %591 = bitcast %"class.base::RefCounted.1784"* %590 to %"class.blink::NGBreakToken"*
  %592 = bitcast %"class.base::RefCounted.1784"* %590 to void (%"class.blink::NGBreakToken"*)***
  %593 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %592, align 8
  %594 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %593, i64 1
  %595 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %594, align 8
  call void %595(%"class.blink::NGBreakToken"* nonnull %591) #16
  br label %596

596:                                              ; preds = %571, %580, %583, %589
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %562)
  %597 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %558, i64 0, i32 1, i32 0
  %598 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %597, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %598) #16
  %599 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %597, i64 0, i32 0, i32 0
  %600 = load i32, i32* %599, align 4
  %601 = icmp eq i32 %600, 0
  br i1 %601, label %602, label %609

602:                                              ; preds = %596
  %603 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %597, i64 -2
  %604 = bitcast %"class.base::RefCounted.1784"* %603 to %"class.blink::NGBreakToken"*
  %605 = bitcast %"class.base::RefCounted.1784"* %603 to void (%"class.blink::NGBreakToken"*)***
  %606 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %605, align 8
  %607 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %606, i64 1
  %608 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %607, align 8
  call void %608(%"class.blink::NGBreakToken"* nonnull %604) #16
  br label %609

609:                                              ; preds = %451, %553, %439, %602, %596
  %610 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %55, i64 %56, i32 10, i32 0, i32 0, i32 0, i32 0
  %611 = load i8, i8* %610, align 8, !range !3
  %612 = icmp eq i8 %611, 0
  br i1 %612, label %637, label %613

613:                                              ; preds = %609
  %614 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %55, i64 %56, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0
  %615 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %441, align 8
  %616 = icmp eq %"class.blink::NGLayoutResult"* %615, null
  br i1 %616, label %619, label %617

617:                                              ; preds = %613
  %618 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %615, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %618) #16
  br label %619

619:                                              ; preds = %617, %613
  %620 = ptrtoint %"class.blink::NGLayoutResult"* %615 to i64
  %621 = bitcast %"struct.blink::NGPositionedFloat"* %614 to i64*
  %622 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %614, i64 0, i32 0, i32 0
  %623 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %622, align 8
  store i64 %620, i64* %621, align 8
  %624 = icmp eq %"class.blink::NGLayoutResult"* %623, null
  br i1 %624, label %632, label %625

625:                                              ; preds = %619
  %626 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %623, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %626) #16
  %627 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %623, i64 0, i32 0, i32 0, i32 0, i32 0
  %628 = load i32, i32* %627, align 4
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %630, label %632

630:                                              ; preds = %625
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %623) #16
  %631 = bitcast %"class.blink::NGLayoutResult"* %623 to i8*
  call void @free(i8* %631) #16
  br label %632

632:                                              ; preds = %619, %625, %630
  %633 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %55, i64 %56, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %634 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %10, i64 0, i32 1
  %635 = bitcast %"struct.blink::NGBfcOffset"* %633 to i8*
  %636 = bitcast %"struct.blink::NGBfcOffset"* %634 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %635, i8* align 8 %636, i64 9, i1 false) #16
  br label %648

637:                                              ; preds = %609
  %638 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %441, align 8
  %639 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %55, i64 %56, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  store %"class.blink::NGLayoutResult"* %638, %"class.blink::NGLayoutResult"** %639, align 8
  %640 = icmp eq %"class.blink::NGLayoutResult"* %638, null
  br i1 %640, label %643, label %641

641:                                              ; preds = %637
  %642 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %638, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %642) #16
  br label %643

643:                                              ; preds = %641, %637
  %644 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %55, i64 %56, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %645 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %10, i64 0, i32 1
  %646 = bitcast %"struct.blink::NGBfcOffset"* %644 to i8*
  %647 = bitcast %"struct.blink::NGBfcOffset"* %645 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %646, i8* align 8 %647, i64 9, i1 false) #16
  store i8 1, i8* %610, align 8
  br label %648

648:                                              ; preds = %632, %643
  %649 = bitcast %"struct.blink::NGLayoutOpportunity"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %649) #16
  %650 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %651 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %11, i64 0, i32 0, i32 0, i32 1, i32 0
  %652 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %653 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %11, i64 0, i32 1, i32 0
  %654 = bitcast %"struct.blink::NGLayoutOpportunity"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %654, i8 -86, i64 24, i1 false)
  %655 = load %"class.blink::NGExclusionSpace"*, %"class.blink::NGExclusionSpace"** %443, align 8
  %656 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %656) #16
  %657 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %99, align 8
  %658 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %657, i64 0, i32 3, i32 0
  %659 = load i32, i32* %658, align 8
  %660 = and i32 %659, 1
  %661 = icmp eq i32 %660, 0
  %662 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %657, i64 0, i32 1
  br i1 %661, label %667, label %663

663:                                              ; preds = %648
  %664 = getelementptr inbounds %union.anon.1634, %union.anon.1634* %662, i64 0, i32 0
  %665 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %664, align 8
  %666 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %665, i64 0, i32 3
  br label %669

667:                                              ; preds = %648
  %668 = bitcast %union.anon.1634* %662 to %"struct.blink::NGBfcOffset"*
  br label %669

669:                                              ; preds = %663, %667
  %670 = phi %"struct.blink::NGBfcOffset"* [ %666, %663 ], [ %668, %667 ]
  %671 = bitcast %"struct.blink::NGBfcOffset"* %670 to i64*
  %672 = load i64, i64* %671, align 8
  %673 = trunc i64 %672 to i32
  %674 = bitcast i64* %12 to i32*
  store i32 %673, i32* %674, align 8
  %675 = getelementptr inbounds %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset"* %13, i64 0, i32 1, i32 0
  store i32 %94, i32* %675, align 4
  %676 = bitcast %"class.blink::NGConstraintSpace"* %657 to i64*
  %677 = load i64, i64* %676, align 8
  %678 = trunc i64 %677 to i32
  %679 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %655, i64 0, i32 0, i32 0, i32 0, i32 0
  %680 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %679, align 8, !noalias !7
  %681 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %680, null
  br i1 %681, label %682, label %697

682:                                              ; preds = %669
  %683 = icmp sgt i32 %678, 0
  %684 = select i1 %683, i32 %678, i32 0
  %685 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %673, i32 %684) #16
  %686 = extractvalue { i32, i1 } %685, 1
  %687 = extractvalue { i32, i1 } %685, 0
  %688 = load i64, i64* %12, align 8, !noalias !7
  %689 = zext i32 %687 to i64
  %690 = or i64 %689, 9223372032559808512
  %691 = select i1 %686, i64 9223372034707292159, i64 %690, !prof !2
  %692 = bitcast %"struct.blink::NGLayoutOpportunity"* %11 to i64*
  store i64 %688, i64* %692, align 8, !alias.scope !7
  %693 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %11, i64 0, i32 0, i32 1
  %694 = bitcast %"struct.blink::NGBfcOffset"* %693 to i64*
  store i64 %691, i64* %694, align 8, !alias.scope !7
  %695 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %11, i64 0, i32 1
  %696 = bitcast %class.scoped_refptr.1770* %695 to i64*
  store i64 0, i64* %696, align 8, !alias.scope !7
  br label %727

697:                                              ; preds = %669
  %698 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %680, i64 0, i32 2
  %699 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %680, i64 0, i32 3
  %700 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %698, i64 0, i32 0
  %701 = load i32, i32* %700, align 4, !noalias !10
  %702 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %699, i64 0, i32 0
  %703 = load i32, i32* %702, align 4, !noalias !10
  %704 = icmp slt i32 %701, %703
  %705 = select i1 %704, %"class.blink::LayoutUnit"* %699, %"class.blink::LayoutUnit"* %698
  %706 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %705, i64 0, i32 0
  %707 = load i32, i32* %706, align 4, !noalias !10
  %708 = icmp slt i32 %94, %707
  br i1 %708, label %724, label %709

709:                                              ; preds = %697
  %710 = icmp sgt i32 %678, 0
  %711 = select i1 %710, i32 %678, i32 0
  %712 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %673, i32 %711) #16
  %713 = extractvalue { i32, i1 } %712, 1
  %714 = extractvalue { i32, i1 } %712, 0
  %715 = load i64, i64* %12, align 8, !noalias !10
  %716 = zext i32 %714 to i64
  %717 = or i64 %716, 9223372032559808512
  %718 = select i1 %713, i64 9223372034707292159, i64 %717, !prof !2
  %719 = bitcast %"struct.blink::NGLayoutOpportunity"* %11 to i64*
  store i64 %715, i64* %719, align 8, !alias.scope !10
  %720 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %11, i64 0, i32 0, i32 1
  %721 = bitcast %"struct.blink::NGBfcOffset"* %720 to i64*
  store i64 %718, i64* %721, align 8, !alias.scope !10
  %722 = getelementptr inbounds %"struct.blink::NGLayoutOpportunity", %"struct.blink::NGLayoutOpportunity"* %11, i64 0, i32 1
  %723 = bitcast %class.scoped_refptr.1770* %722 to i64*
  store i64 0, i64* %723, align 8, !alias.scope !10
  br label %727

724:                                              ; preds = %697
  %725 = call dereferenceable(648) %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* @_ZNK5blink24NGExclusionSpaceInternal18GetDerivedGeometryENS_10LayoutUnitE(%"class.blink::NGExclusionSpaceInternal"* nonnull %680, i32 %94) #16, !noalias !10
  call void @_ZNK5blink24NGExclusionSpaceInternal15DerivedGeometry21FindLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitES5_(%"struct.blink::NGLayoutOpportunity"* nonnull sret %11, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %725, %"struct.blink::NGBfcOffset"* nonnull dereferenceable(8) %13, i32 %678, i32 0) #16
  %726 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %99, align 8
  br label %727

727:                                              ; preds = %682, %709, %724
  %728 = phi %"class.blink::NGConstraintSpace"* [ %657, %682 ], [ %657, %709 ], [ %726, %724 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %656) #16
  %729 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 6, i32 5, i32 0
  %730 = load i32, i32* %729, align 4
  %731 = call i32 @_ZNK5blink19NGLayoutOpportunity21ComputeLineLeftOffsetERKNS_17NGConstraintSpaceENS_10LayoutUnitES4_(%"struct.blink::NGLayoutOpportunity"* nonnull %11, %"class.blink::NGConstraintSpace"* dereferenceable(32) %728, i32 %730, i32 0) #16, !noalias !13
  %732 = call i32 @_ZNK5blink19NGLayoutOpportunity22ComputeLineRightOffsetERKNS_17NGConstraintSpaceENS_10LayoutUnitES4_(%"struct.blink::NGLayoutOpportunity"* nonnull %11, %"class.blink::NGConstraintSpace"* dereferenceable(32) %728, i32 %730, i32 0) #16, !noalias !13
  %733 = load i32, i32* %650, align 8, !noalias !13
  %734 = load i32, i32* %652, align 8, !noalias !13
  %735 = load i32, i32* %651, align 4, !noalias !13
  %736 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 6, i32 0, i32 0
  store i32 %731, i32* %736, align 8
  %737 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 6, i32 1, i32 0
  store i32 %732, i32* %737, align 4
  store i32 %733, i32* %300, align 8
  store i32 %734, i32* %298, align 4
  store i32 %735, i32* %93, align 8
  store i32 %730, i32* %729, align 4
  %738 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %738)
  %739 = icmp sgt i32 %731, -1
  %740 = select i1 %739, i32 -2147483648, i32 2147483647
  %741 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %732, i32 %731) #16
  %742 = extractvalue { i32, i1 } %741, 1
  %743 = extractvalue { i32, i1 } %741, 0
  %744 = select i1 %742, i32 %740, i32 %743, !prof !2
  store i32 %744, i32* %6, align 4
  %745 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 47
  %746 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %745, i64 0, i32 0
  %747 = load i32, i32* %746, align 4
  %748 = icmp slt i32 %744, %747
  %749 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %750 = select i1 %748, %"class.blink::LayoutUnit"* %745, %"class.blink::LayoutUnit"* %749
  %751 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %750, i64 0, i32 0
  %752 = load i32, i32* %751, align 4
  store i32 %752, i32* %6, align 4
  %753 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %753)
  store i32 2147483615, i32* %7, align 4
  %754 = icmp sgt i32 %752, 2147483615
  %755 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %756 = select i1 %754, %"class.blink::LayoutUnit"* %755, %"class.blink::LayoutUnit"* %749
  %757 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %756, i64 0, i32 0
  %758 = load i32, i32* %757, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %753)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %738)
  %759 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 5, i32 0
  store i32 %758, i32* %759, align 4
  %760 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %653, align 8
  %761 = icmp eq %"class.blink::NGShapeExclusions"* %760, null
  br i1 %761, label %769, label %762

762:                                              ; preds = %727
  %763 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %760, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %763) #16
  %764 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %760, i64 0, i32 0, i32 0, i32 0, i32 0
  %765 = load i32, i32* %764, align 4
  %766 = icmp eq i32 %765, 0
  br i1 %766, label %767, label %769

767:                                              ; preds = %762
  call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %760) #16
  %768 = bitcast %"class.blink::NGShapeExclusions"* %760 to i8*
  call void @free(i8* %768) #16
  br label %769

769:                                              ; preds = %727, %762, %767
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %649) #16
  br label %770

770:                                              ; preds = %547, %541, %540, %769
  %771 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %441, align 8
  %772 = icmp eq %"class.blink::NGLayoutResult"* %771, null
  br i1 %772, label %780, label %773

773:                                              ; preds = %770
  %774 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %771, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %774) #16
  %775 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %771, i64 0, i32 0, i32 0, i32 0, i32 0
  %776 = load i32, i32* %775, align 4
  %777 = icmp eq i32 %776, 0
  br i1 %777, label %778, label %780

778:                                              ; preds = %773
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %771) #16
  %779 = bitcast %"class.blink::NGLayoutResult"* %771 to i8*
  call void @free(i8* %779) #16
  br label %780

780:                                              ; preds = %770, %773, %778
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %440) #16
  br label %781

781:                                              ; preds = %780, %437
  %782 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %202, align 8
  %783 = icmp eq %"class.blink::NGLayoutResult"* %782, null
  br i1 %783, label %791, label %784

784:                                              ; preds = %781
  %785 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %782, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %785) #16
  %786 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %782, i64 0, i32 0, i32 0, i32 0, i32 0
  %787 = load i32, i32* %786, align 4
  %788 = icmp eq i32 %787, 0
  br i1 %788, label %789, label %791

789:                                              ; preds = %784
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %782) #16
  %790 = bitcast %"class.blink::NGLayoutResult"* %782 to i8*
  call void @free(i8* %790) #16
  br label %791

791:                                              ; preds = %789, %784, %781
  %792 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %186, align 8
  %793 = icmp eq %"class.blink::NGBlockBreakToken"* %792, null
  br i1 %793, label %807, label %794

794:                                              ; preds = %791
  %795 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %792, i64 0, i32 0, i32 1, i32 0
  %796 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %795, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %796) #16
  %797 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %795, i64 0, i32 0, i32 0
  %798 = load i32, i32* %797, align 4
  %799 = icmp eq i32 %798, 0
  br i1 %799, label %800, label %807

800:                                              ; preds = %794
  %801 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %795, i64 -2
  %802 = bitcast %"class.base::RefCounted.1784"* %801 to %"class.blink::NGBreakToken"*
  %803 = bitcast %"class.base::RefCounted.1784"* %801 to void (%"class.blink::NGBreakToken"*)***
  %804 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %803, align 8
  %805 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %804, i64 1
  %806 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %805, align 8
  call void %806(%"class.blink::NGBreakToken"* nonnull %802) #16
  br label %807

807:                                              ; preds = %791, %794, %800
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %95) #16
  br label %808

808:                                              ; preds = %82, %91, %52, %807
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker21HandleBidiControlItemERKNS_12NGInlineItemEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, %"class.blink::NGInlineItem"* dereferenceable(32), %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"struct.blink::NGTextOffset", align 4
  %5 = alloca %"struct.blink::NGTextOffset", align 4
  %6 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 22, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp ugt i32 %13, %7
  br i1 %14, label %15, label %32

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  br i1 %19, label %27, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  %23 = zext i32 %7 to i64
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i16
  br label %34

27:                                               ; preds = %15
  %28 = bitcast %"class.WTF::StringImpl"* %20 to i16*
  %29 = zext i32 %7 to i64
  %30 = getelementptr inbounds i16, i16* %28, i64 %29
  %31 = load i16, i16* %30, align 2
  br label %34

32:                                               ; preds = %11, %3
  %33 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2
  br label %121

34:                                               ; preds = %21, %27
  %35 = phi i16 [ %26, %21 ], [ %31, %27 ]
  %36 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2
  switch i16 %35, label %121 [
    i16 8297, label %37
    i16 8236, label %37
  ]

37:                                               ; preds = %34, %34
  %38 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %44 = bitcast %"struct.blink::NGTextOffset"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #16
  %45 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %4, i64 0, i32 0
  store i32 %46, i32* %47, align 4
  %48 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %4, i64 0, i32 1
  store i32 %42, i32* %48, align 4
  %49 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 13
  br i1 %40, label %65, label %50

50:                                               ; preds = %37
  %51 = add i32 %39, -1
  %52 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %36, i32 %51) #16
  %53 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %52, i64 0, i32 19
  %54 = load i8, i8* %53, align 1, !range !3
  %55 = icmp ne i8 %54, 0
  %56 = load i32, i32* %38, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %65, label %58

58:                                               ; preds = %50
  %59 = add i32 %56, -1
  %60 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %36, i32 %59) #16
  %61 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %60, i64 0, i32 20
  %62 = load i8, i8* %61, align 2, !range !3
  %63 = icmp ne i8 %62, 0
  %64 = load i32, i32* %38, align 4
  br label %65

65:                                               ; preds = %58, %50, %37
  %66 = phi i32 [ 0, %50 ], [ %64, %58 ], [ 0, %37 ]
  %67 = phi i1 [ %55, %50 ], [ %55, %58 ], [ false, %37 ]
  %68 = phi i1 [ false, %50 ], [ %63, %58 ], [ false, %37 ]
  %69 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %66, %70
  br i1 %71, label %72, label %75, !prof !2

72:                                               ; preds = %65
  %73 = add i32 %66, 1
  tail call void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1970"* %36, i32 %73) #16
  %74 = load i32, i32* %38, align 4
  br label %75

75:                                               ; preds = %65, %72
  %76 = phi i32 [ %74, %72 ], [ %66, %65 ]
  %77 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %36, i64 0, i32 0, i32 0, i32 0
  %78 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %77, align 8
  %79 = zext i32 %76 to i64
  %80 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %78, i64 %79
  %81 = load i32, i32* %43, align 4
  %82 = load i8, i8* %49, align 1, !range !3
  %83 = icmp ne i8 %82, 0
  call void @_ZN5blink18NGInlineItemResultC1EPKNS_12NGInlineItemEjRKNS_12NGTextOffsetEbbb(%"struct.blink::NGInlineItemResult"* %80, %"class.blink::NGInlineItem"* %1, i32 %81, %"struct.blink::NGTextOffset"* nonnull dereferenceable(8) %4, i1 zeroext %83, i1 zeroext %67, i1 zeroext %68) #16
  %84 = load i32, i32* %38, align 4
  %85 = add i32 %84, 1
  store i32 %85, i32* %38, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #16
  br i1 %40, label %192, label %86

86:                                               ; preds = %75
  %87 = add i32 %84, -1
  %88 = call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %36, i32 %87) #16
  %89 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %88, i64 0, i32 16
  %90 = load i8, i8* %89, align 2, !range !3
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %78, i64 %79, i32 16
  store i8 1, i8* %93, align 2
  store i8 0, i8* %89, align 2
  br label %192

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 12
  %96 = load i8, i8* %95, align 1, !range !3
  %97 = icmp eq i8 %96, 0
  %98 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27
  br i1 %97, label %118, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %78, i64 %79, i32 2, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = add nsw i32 %101, 1
  %103 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %98, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %109, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 1
  %108 = load i32, i32* %107, align 4
  br label %109

109:                                              ; preds = %106, %99
  %110 = phi i32 [ %108, %106 ], [ 0, %99 ]
  %111 = icmp slt i32 %110, %102
  %112 = select i1 %111, i32 %110, i32 %102
  %113 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 7
  %114 = load i32, i32* %113, align 4
  %115 = call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeEi(%"class.blink::LazyLineBreakIterator"* %98, i32 %101, i32 %114, i32 %112) #16
  %116 = icmp eq i32 %115, %101
  %117 = zext i1 %116 to i8
  br label %118

118:                                              ; preds = %94, %109
  %119 = phi i8 [ 0, %94 ], [ %117, %109 ]
  %120 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %78, i64 %79, i32 16
  store i8 %119, i8* %120, align 2
  br label %192

121:                                              ; preds = %32, %34
  %122 = phi %"class.WTF::Vector.1970"* [ %33, %32 ], [ %36, %34 ]
  %123 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %124, 2
  br i1 %125, label %126, label %143

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %143, label %130

130:                                              ; preds = %126
  %131 = add i32 %128, -1
  %132 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %122, i32 %131) #16
  %133 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %132, i64 0, i32 16
  %134 = load i8, i8* %133, align 2, !range !3
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %143, label %136

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  store i32 %138, i32* %139, align 8
  %140 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = add i32 %141, 1
  store i32 %142, i32* %140, align 4
  store i32 0, i32* %123, align 8
  br label %199

143:                                              ; preds = %130, %126, %121
  %144 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %147 = bitcast %"struct.blink::NGTextOffset"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #16
  %148 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %149 = load i32, i32* %148, align 8
  %150 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %5, i64 0, i32 0
  store i32 %149, i32* %150, align 4
  %151 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %5, i64 0, i32 1
  store i32 %145, i32* %151, align 4
  %152 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 13
  %153 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %171, label %156

156:                                              ; preds = %143
  %157 = add i32 %154, -1
  %158 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %122, i32 %157) #16
  %159 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %158, i64 0, i32 19
  %160 = load i8, i8* %159, align 1, !range !3
  %161 = icmp ne i8 %160, 0
  %162 = load i32, i32* %153, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %171, label %164

164:                                              ; preds = %156
  %165 = add i32 %162, -1
  %166 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %122, i32 %165) #16
  %167 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %166, i64 0, i32 20
  %168 = load i8, i8* %167, align 2, !range !3
  %169 = icmp ne i8 %168, 0
  %170 = load i32, i32* %153, align 4
  br label %171

171:                                              ; preds = %164, %156, %143
  %172 = phi i32 [ 0, %156 ], [ %170, %164 ], [ 0, %143 ]
  %173 = phi i1 [ %161, %156 ], [ %161, %164 ], [ false, %143 ]
  %174 = phi i1 [ false, %156 ], [ %169, %164 ], [ false, %143 ]
  %175 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %176 = load i32, i32* %175, align 8
  %177 = icmp eq i32 %172, %176
  br i1 %177, label %178, label %181, !prof !2

178:                                              ; preds = %171
  %179 = add i32 %172, 1
  tail call void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1970"* %122, i32 %179) #16
  %180 = load i32, i32* %153, align 4
  br label %181

181:                                              ; preds = %171, %178
  %182 = phi i32 [ %180, %178 ], [ %172, %171 ]
  %183 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %184 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %183, align 8
  %185 = zext i32 %182 to i64
  %186 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %184, i64 %185
  %187 = load i32, i32* %146, align 4
  %188 = load i8, i8* %152, align 1, !range !3
  %189 = icmp ne i8 %188, 0
  call void @_ZN5blink18NGInlineItemResultC1EPKNS_12NGInlineItemEjRKNS_12NGTextOffsetEbbb(%"struct.blink::NGInlineItemResult"* %186, %"class.blink::NGInlineItem"* %1, i32 %187, %"struct.blink::NGTextOffset"* nonnull dereferenceable(8) %5, i1 zeroext %189, i1 zeroext %173, i1 zeroext %174) #16
  %190 = load i32, i32* %153, align 4
  %191 = add i32 %190, 1
  store i32 %191, i32* %153, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #16
  br label %192

192:                                              ; preds = %75, %92, %118, %181
  %193 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  store i32 %194, i32* %195, align 8
  %196 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %197 = load i32, i32* %196, align 4
  %198 = add i32 %197, 1
  store i32 %198, i32* %196, align 4
  br label %199

199:                                              ; preds = %192, %136
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker18HandleAtomicInlineERKNS_12NGInlineItemEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, %"class.blink::NGInlineItem"* dereferenceable(32), %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"struct.blink::NGTextOffset", align 4
  %5 = alloca %"class.blink::NGBlockNode", align 8
  %6 = alloca %"class.blink::NGBlockNode", align 8
  %7 = alloca %"class.blink::NGMinMaxConstraintSpaceBuilder", align 8
  %8 = alloca %"class.blink::NGConstraintSpace", align 8
  %9 = alloca i64, align 8
  %10 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %1)
  %11 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 5, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 2147483647
  %14 = zext i1 %13 to i32
  %15 = add nsw i32 %12, %14
  %16 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, -1
  %19 = select i1 %18, i32 -2147483648, i32 2147483647
  %20 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %15, i32 %17) #16
  %21 = extractvalue { i32, i1 } %20, 1
  %22 = extractvalue { i32, i1 } %20, 0
  %23 = select i1 %21, i32 %19, i32 %22, !prof !2
  %24 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 3
  %27 = icmp slt i32 %23, 0
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %38

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  tail call void @_ZN5blink13NGLineBreaker14HandleOverflowEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGLineInfo"* %2)
  %32 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 16
  %33 = load i8, i8* %32, align 4, !range !3
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %542, label %35

35:                                               ; preds = %29
  %36 = load i32, i32* %30, align 4
  %37 = icmp eq i32 %31, %36
  br i1 %37, label %38, label %542

38:                                               ; preds = %35, %3
  %39 = phi i64 [ 1, %35 ], [ 0, %3 ]
  %40 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2
  %43 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %44 = bitcast %"struct.blink::NGTextOffset"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #16
  %45 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %4, i64 0, i32 0
  store i32 %46, i32* %47, align 4
  %48 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %4, i64 0, i32 1
  store i32 %41, i32* %48, align 4
  %49 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 13
  %50 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %68, label %53

53:                                               ; preds = %38
  %54 = add i32 %51, -1
  %55 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %42, i32 %54) #16
  %56 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %55, i64 0, i32 19
  %57 = load i8, i8* %56, align 1, !range !3
  %58 = icmp ne i8 %57, 0
  %59 = load i32, i32* %50, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %68, label %61

61:                                               ; preds = %53
  %62 = add i32 %59, -1
  %63 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %42, i32 %62) #16
  %64 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %63, i64 0, i32 20
  %65 = load i8, i8* %64, align 2, !range !3
  %66 = icmp ne i8 %65, 0
  %67 = load i32, i32* %50, align 4
  br label %68

68:                                               ; preds = %61, %53, %38
  %69 = phi i32 [ 0, %53 ], [ %67, %61 ], [ 0, %38 ]
  %70 = phi i1 [ %58, %53 ], [ %58, %61 ], [ false, %38 ]
  %71 = phi i1 [ false, %53 ], [ %66, %61 ], [ false, %38 ]
  %72 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %69, %73
  br i1 %74, label %75, label %78, !prof !2

75:                                               ; preds = %68
  %76 = add i32 %69, 1
  tail call void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1970"* %42, i32 %76) #16
  %77 = load i32, i32* %50, align 4
  br label %78

78:                                               ; preds = %68, %75
  %79 = phi i32 [ %77, %75 ], [ %69, %68 ]
  %80 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %42, i64 0, i32 0, i32 0, i32 0
  %81 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %80, align 8
  %82 = zext i32 %79 to i64
  %83 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %81, i64 %82
  %84 = load i32, i32* %43, align 4
  %85 = load i8, i8* %49, align 1, !range !3
  %86 = icmp ne i8 %85, 0
  call void @_ZN5blink18NGInlineItemResultC1EPKNS_12NGInlineItemEjRKNS_12NGTextOffsetEbbb(%"struct.blink::NGInlineItemResult"* %83, %"class.blink::NGInlineItem"* %1, i32 %84, %"struct.blink::NGTextOffset"* nonnull dereferenceable(8) %4, i1 zeroext %86, i1 zeroext %70, i1 zeroext %71) #16
  %87 = load i32, i32* %50, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %50, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #16
  %89 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 23
  %90 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %89, align 8
  %91 = call { i64, i64 } @_ZN5blink36ComputeLineMarginsForVisualContainerERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %90, %"class.blink::ComputedStyle"* dereferenceable(104) %10)
  %92 = extractvalue { i64, i64 } %91, 0
  %93 = extractvalue { i64, i64 } %91, 1
  %94 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %81, i64 %82, i32 11
  %95 = bitcast %"struct.blink::NGLineBoxStrut"* %94 to i64*
  store i64 %92, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %81, i64 %82, i32 11, i32 2
  %97 = bitcast %"class.blink::LayoutUnit"* %96 to i64*
  store i64 %93, i64* %97, align 8
  %98 = trunc i64 %92 to i32
  %99 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %81, i64 %82, i32 11, i32 1, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp slt i32 %100, 0
  %102 = select i1 %101, i32 -2147483648, i32 2147483647
  %103 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %98, i32 %100) #16
  %104 = extractvalue { i32, i1 } %103, 1
  %105 = extractvalue { i32, i1 } %103, 0
  %106 = select i1 %104, i32 %102, i32 %105, !prof !2
  %107 = icmp eq i64 %39, 0
  br i1 %107, label %126, label %108, !prof !5

108:                                              ; preds = %78
  %109 = icmp slt i32 %106, %23
  br i1 %109, label %124, label %110

110:                                              ; preds = %108
  %111 = load i32, i32* %50, align 4
  %112 = add i32 %111, -1
  %113 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %114 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %113, align 8
  %115 = zext i32 %111 to i64
  %116 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %114, i64 %115
  %117 = zext i32 %112 to i64
  %118 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %114, i64 %117
  br label %119

119:                                              ; preds = %119, %110
  %120 = phi %"struct.blink::NGInlineItemResult"* [ %121, %119 ], [ %118, %110 ]
  call void @_ZN5blink18NGInlineItemResultD2Ev(%"struct.blink::NGInlineItemResult"* %120) #16
  %121 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %120, i64 1
  %122 = icmp eq %"struct.blink::NGInlineItemResult"* %121, %116
  br i1 %122, label %123, label %119

123:                                              ; preds = %119
  store i32 %112, i32* %50, align 4
  br label %542

124:                                              ; preds = %108
  store i32 3, i32* %24, align 8
  %125 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 16
  store i8 0, i8* %125, align 4
  br label %126

126:                                              ; preds = %78, %124
  %127 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %128 = load i8, i8* %127, align 4, !range !3
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %160, label %130, !prof !5

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %42, i32 %132) #16
  %134 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %133, i64 0, i32 8, i32 0
  %135 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %135, i64 0, i32 1
  %137 = load float, float* %136, align 4
  %138 = fmul float %137, 6.400000e+01
  %139 = call float @llvm.ceil.f32(float %138) #16
  %140 = fcmp ult float %139, 0xC1E0000000000000
  %141 = fcmp ugt float %139, 0x41DFFFFFE0000000
  %142 = fcmp ogt float %139, 0xC1E0000000000000
  %143 = select i1 %142, float %139, float 0xC1E0000000000000
  %144 = fptosi float %143 to i32
  %145 = select i1 %140, i32 0, i32 2147483647
  %146 = select i1 %141, i32 %145, i32 %144
  %147 = icmp sgt i32 %146, 0
  %148 = select i1 %147, i32 %146, i32 0
  %149 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %133, i64 0, i32 4, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %150, i32 %148) #16
  %152 = extractvalue { i32, i1 } %151, 1
  %153 = extractvalue { i32, i1 } %151, 0
  %154 = select i1 %152, i32 -2147483648, i32 %153, !prof !2
  store i32 %154, i32* %149, align 4
  store i8 0, i8* %127, align 4
  %155 = load i32, i32* %16, align 4
  %156 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %155, i32 %148) #16
  %157 = extractvalue { i32, i1 } %156, 1
  %158 = extractvalue { i32, i1 } %156, 0
  %159 = select i1 %157, i32 -2147483648, i32 %158, !prof !2
  store i32 %159, i32* %16, align 4
  br label %160

160:                                              ; preds = %126, %130
  %161 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  %162 = load i32, i32* %161, align 8
  switch i32 %162, label %230 [
    i32 0, label %163
    i32 2, label %212
  ]

163:                                              ; preds = %160
  %164 = bitcast %"class.blink::NGBlockNode"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %164) #16
  %165 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 3
  %166 = bitcast %"class.blink::LayoutObject"** %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = bitcast %"class.blink::NGBlockNode"* %5 to i64*
  store i64 %167, i64* %168, align 8
  %169 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %5, i64 0, i32 0, i32 1
  %170 = load i8, i8* %169, align 8
  %171 = and i8 %170, -2
  store i8 %171, i8* %169, align 8
  %172 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %89, align 8
  %173 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 7
  %174 = bitcast %"class.blink::NGInlineNode"* %173 to %"class.blink::LayoutObject"**
  %175 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %174, align 8
  %176 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %175, i64 0, i32 5, i32 0
  %177 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %176, align 8
  %178 = call %"class.blink::NGLayoutResult"* @_ZN5blink11NGBlockNode18LayoutAtomicInlineERKNS_17NGConstraintSpaceERKNS_13ComputedStyleEbNS_23NGBaselineAlgorithmTypeE(%"class.blink::NGBlockNode"* nonnull %5, %"class.blink::NGConstraintSpace"* dereferenceable(32) %172, %"class.blink::ComputedStyle"* dereferenceable(104) %177, i1 zeroext false, i32 1) #16
  %179 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %81, i64 %82, i32 9
  %180 = ptrtoint %"class.blink::NGLayoutResult"* %178 to i64
  %181 = bitcast %class.scoped_refptr.1631* %179 to i64*
  %182 = getelementptr inbounds %class.scoped_refptr.1631, %class.scoped_refptr.1631* %179, i64 0, i32 0
  %183 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %182, align 8
  store i64 %180, i64* %181, align 8
  %184 = icmp eq %"class.blink::NGLayoutResult"* %183, null
  br i1 %184, label %192, label %185

185:                                              ; preds = %163
  %186 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %183, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %186) #16
  %187 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %183, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %192

190:                                              ; preds = %185
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %183) #16
  %191 = bitcast %"class.blink::NGLayoutResult"* %183 to i8*
  call void @free(i8* %191) #16
  br label %192

192:                                              ; preds = %163, %185, %190
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %164) #16
  %193 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %89, align 8
  %194 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %193, i64 0, i32 3, i32 0
  %195 = load i32, i32* %194, align 8
  %196 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %182, align 8
  %197 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %196, i64 0, i32 3, i32 0
  %198 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %197, align 8
  %199 = and i32 %195, 112
  %200 = icmp eq i32 %199, 0
  %201 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %198, i64 0, i32 2, i32 0, i32 0
  %202 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %198, i64 0, i32 2, i32 1, i32 0
  %203 = select i1 %200, i32* %201, i32* %202
  %204 = load i32, i32* %203, align 4
  %205 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %81, i64 %82, i32 4, i32 0
  %206 = icmp slt i32 %106, 0
  %207 = select i1 %206, i32 -2147483648, i32 2147483647
  %208 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %204, i32 %106) #16
  %209 = extractvalue { i32, i1 } %208, 1
  %210 = extractvalue { i32, i1 } %208, 0
  %211 = select i1 %209, i32 %207, i32 %210, !prof !2
  store i32 %211, i32* %205, align 4
  br label %426

212:                                              ; preds = %160
  %213 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 40
  %214 = load %"class.WTF::Vector.1923"*, %"class.WTF::Vector.1923"** %213, align 8
  %215 = icmp eq %"class.WTF::Vector.1923"* %214, null
  br i1 %215, label %230, label %216

216:                                              ; preds = %212
  %217 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 21
  %218 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %217, align 8
  %219 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %218, i64 0, i32 1, i32 0, i32 0, i32 0
  %220 = bitcast %"class.blink::NGInlineItem"** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = ptrtoint %"class.blink::NGInlineItem"* %1 to i64
  %223 = sub i64 %222, %221
  %224 = lshr exact i64 %223, 5
  %225 = trunc i64 %224 to i32
  %226 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1923"* nonnull %214, i32 %225) #16
  %227 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %226, i64 0, i32 0
  %228 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %81, i64 %82, i32 4, i32 0
  %229 = load i32, i32* %227, align 4
  store i32 %229, i32* %228, align 4
  br label %426

230:                                              ; preds = %160, %212
  %231 = bitcast %"class.blink::NGBlockNode"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %231) #16
  %232 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %6, i64 0, i32 0, i32 1
  %233 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 3
  %234 = bitcast %"class.blink::LayoutObject"** %233 to i64*
  %235 = bitcast %"class.blink::NGBlockNode"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %235, i8 -86, i64 16, i1 false)
  %236 = load i64, i64* %234, align 8
  %237 = bitcast %"class.blink::NGBlockNode"* %6 to i64*
  store i64 %236, i64* %237, align 8
  store i8 -86, i8* %232, align 8
  %238 = bitcast %"class.blink::NGMinMaxConstraintSpaceBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %238) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %238, i8 -86, i64 40, i1 false)
  %239 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %89, align 8
  %240 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 7
  %241 = bitcast %"class.blink::NGInlineNode"* %240 to %"class.blink::LayoutObject"**
  %242 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %241, align 8
  %243 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %242, i64 0, i32 5, i32 0
  %244 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %243, align 8
  %245 = bitcast %"class.blink::NGBlockNode"* %6 to %"class.blink::NGLayoutInputNode"*
  call void @_ZN5blink30NGMinMaxConstraintSpaceBuilderC2ERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_17NGLayoutInputNodeEb(%"class.blink::NGMinMaxConstraintSpaceBuilder"* nonnull %7, %"class.blink::NGConstraintSpace"* dereferenceable(32) %239, %"class.blink::ComputedStyle"* dereferenceable(104) %244, %"class.blink::NGLayoutInputNode"* nonnull dereferenceable(16) %245, i1 zeroext true)
  %246 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %89, align 8
  %247 = bitcast %"class.blink::NGConstraintSpace"* %246 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = lshr i64 %248, 32
  %250 = trunc i64 %249 to i32
  %251 = and i64 %248, -4294967296
  %252 = or i64 %251, 4294967232
  %253 = bitcast %"class.blink::NGMinMaxConstraintSpaceBuilder"* %7 to i64*
  store i64 %252, i64* %253, align 8
  %254 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %7, i64 0, i32 0, i32 2
  %255 = load i8, i8* %254, align 4, !range !3
  %256 = icmp eq i8 %255, 1
  br i1 %256, label %268, label %257, !prof !5

257:                                              ; preds = %230
  %258 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %250, i32* %258, align 8
  store i32 -64, i32* %259, align 4
  %260 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %7, i64 0, i32 0, i32 5
  %261 = load i8, i8* %260, align 1, !range !3
  %262 = icmp ne i8 %261, 0
  %263 = icmp eq i32 %250, -64
  %264 = and i1 %263, %262
  br i1 %264, label %265, label %268

265:                                              ; preds = %257
  %266 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %7, i64 0, i32 0, i32 1, i32 0
  %267 = load i32, i32* %266, align 8
  store i32 %267, i32* %258, align 8
  br label %268

268:                                              ; preds = %230, %257, %265
  %269 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %246, i64 0, i32 3, i32 0
  %270 = load i32, i32* %269, align 8
  %271 = lshr i32 %270, 28
  %272 = and i32 %271, 3
  switch i32 %272, label %273 [
    i32 0, label %274
    i32 1, label %283
    i32 2, label %277
    i32 3, label %278
  ]

273:                                              ; preds = %268
  unreachable

274:                                              ; preds = %268
  %275 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %246, i64 0, i32 0, i32 1, i32 0
  %276 = load i32, i32* %275, align 4
  br label %283

277:                                              ; preds = %268
  br label %283

278:                                              ; preds = %268
  %279 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %246, i64 0, i32 1, i32 0
  %280 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %279, align 8
  %281 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %280, i64 0, i32 0, i32 1, i32 0
  %282 = load i32, i32* %281, align 4
  br label %283

283:                                              ; preds = %268, %274, %277, %278
  %284 = phi i32 [ %282, %278 ], [ -64, %277 ], [ %276, %274 ], [ 0, %268 ]
  %285 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %7, i64 0, i32 0
  %286 = zext i32 %284 to i64
  %287 = shl nuw i64 %286, 32
  %288 = or i64 %287, 4294967232
  call void @_ZN5blink24NGConstraintSpaceBuilder27SetPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"* nonnull %285, i64 %288) #16
  %289 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %89, align 8
  %290 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %289, i64 0, i32 3, i32 0
  %291 = load i32, i32* %290, align 8
  %292 = lshr i32 %291, 30
  switch i32 %292, label %302 [
    i32 0, label %293
    i32 1, label %303
    i32 2, label %296
    i32 3, label %297
  ]

293:                                              ; preds = %283
  %294 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %289, i64 0, i32 0, i32 1, i32 0
  %295 = load i32, i32* %294, align 4
  br label %303

296:                                              ; preds = %283
  br label %303

297:                                              ; preds = %283
  %298 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %289, i64 0, i32 1, i32 0
  %299 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %298, align 8
  %300 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %299, i64 0, i32 1, i32 0
  %301 = load i32, i32* %300, align 8
  br label %303

302:                                              ; preds = %283
  unreachable

303:                                              ; preds = %283, %293, %296, %297
  %304 = phi i32 [ %301, %297 ], [ -64, %296 ], [ %295, %293 ], [ 0, %283 ]
  %305 = zext i32 %304 to i64
  %306 = shl nuw i64 %305, 32
  %307 = or i64 %306, 4294967232
  call void @_ZN5blink24NGConstraintSpaceBuilder35SetReplacedPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"* nonnull %285, i64 %307) #16
  %308 = bitcast %"class.blink::NGConstraintSpace"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %308) #16
  %309 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %8, i64 0, i32 3, i32 0
  %310 = bitcast %"class.blink::NGConstraintSpace"* %8 to i64*
  %311 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %8, i64 0, i32 1
  %312 = bitcast %union.anon.1634* %311 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %312, i8 -86, i64 24, i1 false)
  %313 = load i64, i64* %253, align 8, !noalias !16
  store i64 %313, i64* %310, align 8, !alias.scope !16
  %314 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %8, i64 0, i32 2
  %315 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %7, i64 0, i32 0, i32 0, i32 2
  %316 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %315, i64 0, i32 0, i32 0, i32 0, i32 0
  %317 = bitcast %"class.blink::NGExclusionSpace"* %315 to i64*
  %318 = load i64, i64* %317, align 8, !noalias !16
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %316, align 8, !noalias !16
  %319 = bitcast %"class.blink::NGExclusionSpace"* %314 to i64*
  store i64 %318, i64* %319, align 8, !alias.scope !16
  %320 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %7, i64 0, i32 0, i32 0, i32 3, i32 0
  %321 = load i32, i32* %320, align 8, !noalias !16
  store i32 %321, i32* %309, align 8, !alias.scope !16
  %322 = and i32 %321, 1
  %323 = icmp eq i32 %322, 0
  %324 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %7, i64 0, i32 0, i32 0, i32 1
  br i1 %323, label %331, label %325

325:                                              ; preds = %303
  %326 = getelementptr inbounds %union.anon.1634, %union.anon.1634* %324, i64 0, i32 0
  %327 = bitcast %union.anon.1634* %324 to i64*
  %328 = load i64, i64* %327, align 8, !noalias !16
  %329 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %8, i64 0, i32 1
  %330 = bitcast %union.anon.1634* %329 to i64*
  store i64 %328, i64* %330, align 8, !alias.scope !16
  store %"struct.blink::NGConstraintSpace::RareData"* null, %"struct.blink::NGConstraintSpace::RareData"** %326, align 8, !noalias !16
  br label %336

331:                                              ; preds = %303
  %332 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %8, i64 0, i32 1
  %333 = bitcast %union.anon.1634* %324 to i64*
  %334 = bitcast %union.anon.1634* %332 to i64*
  %335 = load i64, i64* %333, align 8, !noalias !16
  store i64 %335, i64* %334, align 8, !alias.scope !16
  br label %336

336:                                              ; preds = %325, %331
  %337 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %241, align 8
  %338 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %337, i64 0, i32 5, i32 0
  %339 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %338, align 8
  %340 = call { i64, i8 } @_ZN5blink35ComputeMinAndMaxContentContributionERKNS_13ComputedStyleERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::ComputedStyle"* dereferenceable(104) %339, %"class.blink::NGBlockNode"* nonnull dereferenceable(16) %6, %"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %8, i64 0) #16
  %341 = extractvalue { i64, i8 } %340, 0
  %342 = extractvalue { i64, i8 } %340, 1
  %343 = lshr i64 %341, 32
  %344 = trunc i64 %343 to i32
  %345 = load i32, i32* %161, align 8
  %346 = icmp eq i32 %345, 1
  %347 = icmp slt i32 %106, 0
  %348 = select i1 %347, i32 -2147483648, i32 2147483647
  br i1 %346, label %349, label %418

349:                                              ; preds = %336
  %350 = trunc i64 %341 to i32
  %351 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %350, i32 %106) #16
  %352 = extractvalue { i32, i1 } %351, 1
  %353 = extractvalue { i32, i1 } %351, 0
  %354 = select i1 %352, i32 %348, i32 %353, !prof !2
  %355 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %81, i64 %82, i32 4, i32 0
  store i32 %354, i32* %355, align 4
  %356 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 41
  %357 = load i8*, i8** %356, align 8
  %358 = icmp eq i8* %357, null
  br i1 %358, label %362, label %359

359:                                              ; preds = %349
  %360 = load i8, i8* %357, align 1, !range !3
  %361 = or i8 %360, %342
  store i8 %361, i8* %357, align 1
  br label %362

362:                                              ; preds = %349, %359
  %363 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 40
  %364 = load %"class.WTF::Vector.1923"*, %"class.WTF::Vector.1923"** %363, align 8
  %365 = icmp eq %"class.WTF::Vector.1923"* %364, null
  br i1 %365, label %424, label %366

366:                                              ; preds = %362
  %367 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %364, i64 0, i32 0, i32 0, i32 2
  %368 = load i32, i32* %367, align 4
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %370, label %401

370:                                              ; preds = %366
  %371 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 21
  %372 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %371, align 8
  %373 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %372, i64 0, i32 1, i32 0, i32 0, i32 2
  %374 = load i32, i32* %373, align 4
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %399, label %376

376:                                              ; preds = %370
  %377 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %364, i64 0, i32 0, i32 0, i32 1
  %378 = load i32, i32* %377, align 8
  %379 = icmp ult i32 %378, %374
  br i1 %379, label %380, label %382

380:                                              ; preds = %376
  call void @_ZN3WTF6VectorIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1923"* nonnull %364, i32 %374) #16
  %381 = load i32, i32* %367, align 4
  br label %382

382:                                              ; preds = %380, %376
  %383 = phi i32 [ %381, %380 ], [ 0, %376 ]
  %384 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %364, i64 0, i32 0, i32 0, i32 0
  %385 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %384, align 8
  %386 = zext i32 %383 to i64
  %387 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %385, i64 %386
  %388 = icmp eq i32 %383, %374
  br i1 %388, label %399, label %389

389:                                              ; preds = %382
  %390 = zext i32 %374 to i64
  %391 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %385, i64 %390
  %392 = bitcast %"class.blink::LayoutUnit"* %387 to i8*
  %393 = ptrtoint %"class.blink::LayoutUnit"* %387 to i64
  %394 = getelementptr %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %391, i64 -1, i32 0
  %395 = ptrtoint i32* %394 to i64
  %396 = sub i64 4, %393
  %397 = add i64 %396, %395
  %398 = and i64 %397, -4
  call void @llvm.memset.p0i8.i64(i8* align 4 %392, i8 0, i64 %398, i1 false) #16
  br label %399

399:                                              ; preds = %370, %382, %389
  store i32 %374, i32* %367, align 4
  %400 = load %"class.WTF::Vector.1923"*, %"class.WTF::Vector.1923"** %363, align 8
  br label %401

401:                                              ; preds = %399, %366
  %402 = phi %"class.WTF::Vector.1923"* [ %400, %399 ], [ %364, %366 ]
  %403 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 21
  %404 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %403, align 8
  %405 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %404, i64 0, i32 1, i32 0, i32 0, i32 0
  %406 = bitcast %"class.blink::NGInlineItem"** %405 to i64*
  %407 = load i64, i64* %406, align 8
  %408 = ptrtoint %"class.blink::NGInlineItem"* %1 to i64
  %409 = sub i64 %408, %407
  %410 = lshr exact i64 %409, 5
  %411 = trunc i64 %410 to i32
  %412 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %344, i32 %106) #16
  %413 = extractvalue { i32, i1 } %412, 1
  %414 = extractvalue { i32, i1 } %412, 0
  %415 = select i1 %413, i32 %348, i32 %414, !prof !2
  %416 = call dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1923"* %402, i32 %411) #16
  %417 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %416, i64 0, i32 0
  store i32 %415, i32* %417, align 4
  br label %424

418:                                              ; preds = %336
  %419 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %344, i32 %106) #16
  %420 = extractvalue { i32, i1 } %419, 1
  %421 = extractvalue { i32, i1 } %419, 0
  %422 = select i1 %420, i32 %348, i32 %421, !prof !2
  %423 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %81, i64 %82, i32 4, i32 0
  store i32 %422, i32* %423, align 4
  br label %424

424:                                              ; preds = %362, %401, %418
  call void @_ZN5blink17NGConstraintSpaceD2Ev(%"class.blink::NGConstraintSpace"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %308) #16
  %425 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %7, i64 0, i32 0, i32 0
  call void @_ZN5blink17NGConstraintSpaceD2Ev(%"class.blink::NGConstraintSpace"* nonnull %425) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %238) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %231) #16
  br label %426

426:                                              ; preds = %216, %424, %192
  %427 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %81, i64 %82, i32 19
  store i8 1, i8* %427, align 1
  %428 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 12
  %429 = load i8, i8* %428, align 1, !range !3
  %430 = icmp eq i8 %429, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %426
  %432 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 18
  %433 = load i8, i8* %432, align 1, !range !3
  %434 = icmp eq i8 %433, 0
  br i1 %434, label %447, label %435

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 3
  %437 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %436, align 8
  %438 = icmp eq %"class.blink::LayoutObject"* %437, null
  br i1 %438, label %447, label %439

439:                                              ; preds = %435
  %440 = bitcast %"class.blink::LayoutObject"* %437 to i1 (%"class.blink::LayoutObject"*, i32)***
  %441 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %440, align 8
  %442 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %441, i64 92
  %443 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %442, align 8
  %444 = call zeroext i1 %443(%"class.blink::LayoutObject"* nonnull %437, i32 12) #16
  %445 = xor i1 %444, true
  %446 = zext i1 %445 to i8
  br label %447

447:                                              ; preds = %439, %435, %431, %426
  %448 = phi i8 [ 0, %426 ], [ 1, %431 ], [ 1, %435 ], [ %446, %439 ]
  %449 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %81, i64 %82, i32 16
  store i8 %448, i8* %449, align 2
  %450 = load i32, i32* %16, align 4
  %451 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %81, i64 %82, i32 4, i32 0
  %452 = load i32, i32* %451, align 4
  %453 = icmp slt i32 %452, 0
  %454 = select i1 %453, i32 -2147483648, i32 2147483647
  %455 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %450, i32 %452) #16
  %456 = extractvalue { i32, i1 } %455, 1
  %457 = extractvalue { i32, i1 } %455, 0
  %458 = select i1 %456, i32 %454, i32 %457, !prof !2
  store i32 %458, i32* %16, align 4
  %459 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 3
  %460 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %459, align 8
  %461 = icmp eq %"class.blink::LayoutObject"* %460, null
  br i1 %461, label %537, label %462

462:                                              ; preds = %447
  %463 = bitcast %"class.blink::LayoutObject"* %460 to i1 (%"class.blink::LayoutObject"*, i32)***
  %464 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %463, align 8
  %465 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %464, i64 92
  %466 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %465, align 8
  %467 = call zeroext i1 %466(%"class.blink::LayoutObject"* nonnull %460, i32 42) #16
  br i1 %467, label %468, label %537

468:                                              ; preds = %462
  %469 = load i8, i8* %428, align 1, !range !3
  %470 = icmp eq i8 %469, 0
  %471 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27
  br i1 %470, label %491, label %472

472:                                              ; preds = %468
  %473 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %81, i64 %82, i32 2, i32 1
  %474 = load i32, i32* %473, align 4
  %475 = add nsw i32 %474, 1
  %476 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %471, i64 0, i32 0, i32 0, i32 0
  %477 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %476, align 8
  %478 = icmp eq %"class.WTF::StringImpl"* %477, null
  br i1 %478, label %482, label %479

479:                                              ; preds = %472
  %480 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %477, i64 0, i32 1
  %481 = load i32, i32* %480, align 4
  br label %482

482:                                              ; preds = %479, %472
  %483 = phi i32 [ %481, %479 ], [ 0, %472 ]
  %484 = icmp slt i32 %483, %475
  %485 = select i1 %484, i32 %483, i32 %475
  %486 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 7
  %487 = load i32, i32* %486, align 4
  %488 = call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeEi(%"class.blink::LazyLineBreakIterator"* %471, i32 %474, i32 %487, i32 %485) #16
  %489 = icmp eq i32 %488, %474
  %490 = zext i1 %489 to i8
  br label %491

491:                                              ; preds = %468, %482
  %492 = phi i8 [ 0, %468 ], [ %490, %482 ]
  store i8 %492, i8* %449, align 2
  %493 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %493) #16
  %494 = bitcast i64* %9 to %"class.blink::LayoutUnit"*
  %495 = bitcast i64* %9 to i32*
  %496 = call i64 @_ZN5blink11GetOverhangERKNS_18NGInlineItemResultE(%"struct.blink::NGInlineItemResult"* dereferenceable(160) %83) #16
  store i64 %496, i64* %9, align 8
  %497 = lshr i64 %496, 32
  %498 = trunc i64 %497 to i32
  %499 = icmp sgt i32 %498, 0
  br i1 %499, label %500, label %503

500:                                              ; preds = %491
  %501 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %81, i64 %82, i32 5, i32 0
  store i32 %498, i32* %501, align 8
  %502 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 19
  store i8 1, i8* %502, align 2
  br label %503

503:                                              ; preds = %500, %491
  %504 = call zeroext i1 @_ZN5blink21CanApplyStartOverhangERKNS_10NGLineInfoERNS_10LayoutUnitE(%"class.blink::NGLineInfo"* dereferenceable(5208) %2, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %494) #16
  br i1 %504, label %505, label %536

505:                                              ; preds = %503
  %506 = load i32, i32* %495, align 8
  %507 = call i1 @llvm.is.constant.i32(i32 %506) #16
  br i1 %507, label %508, label %512

508:                                              ; preds = %505
  %509 = sub i32 0, %506
  %510 = icmp eq i32 %509, -2147483648
  %511 = select i1 %510, i32 2147483647, i32 %509
  br label %517

512:                                              ; preds = %505
  %513 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %506) #16
  %514 = extractvalue { i32, i1 } %513, 1
  %515 = extractvalue { i32, i1 } %513, 0
  %516 = select i1 %514, i32 2147483647, i32 %515
  br label %517

517:                                              ; preds = %508, %512
  %518 = phi i32 [ %511, %508 ], [ %516, %512 ]
  %519 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %81, i64 %82, i32 11, i32 0, i32 0
  store i32 %518, i32* %519, align 8
  %520 = load i32, i32* %451, align 4
  %521 = load i32, i32* %495, align 8
  %522 = icmp sgt i32 %521, -1
  %523 = select i1 %522, i32 -2147483648, i32 2147483647
  %524 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %520, i32 %521) #16
  %525 = extractvalue { i32, i1 } %524, 1
  %526 = extractvalue { i32, i1 } %524, 0
  %527 = select i1 %525, i32 %523, i32 %526, !prof !2
  store i32 %527, i32* %451, align 4
  %528 = load i32, i32* %16, align 4
  %529 = load i32, i32* %495, align 8
  %530 = icmp sgt i32 %529, -1
  %531 = select i1 %530, i32 -2147483648, i32 2147483647
  %532 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %528, i32 %529) #16
  %533 = extractvalue { i32, i1 } %532, 1
  %534 = extractvalue { i32, i1 } %532, 0
  %535 = select i1 %533, i32 %531, i32 %534, !prof !2
  store i32 %535, i32* %16, align 4
  br label %536

536:                                              ; preds = %517, %503
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %493) #16
  br label %537

537:                                              ; preds = %447, %536, %462
  %538 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 3
  store i32 1, i32* %538, align 4
  %539 = load i32, i32* %40, align 4
  store i32 %539, i32* %45, align 8
  %540 = load i32, i32* %43, align 4
  %541 = add i32 %540, 1
  store i32 %541, i32* %43, align 4
  br label %542

542:                                              ; preds = %29, %123, %537, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker25HandleOutOfFlowPositionedERKNS_12NGInlineItemEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, %"class.blink::NGInlineItem"* dereferenceable(32), %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"struct.blink::NGTextOffset", align 4
  %5 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %9 = bitcast %"struct.blink::NGTextOffset"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %4, i64 0, i32 0
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %4, i64 0, i32 1
  store i32 %6, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 13
  %15 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %33, label %18

18:                                               ; preds = %3
  %19 = add i32 %16, -1
  %20 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %7, i32 %19) #16
  %21 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %20, i64 0, i32 19
  %22 = load i8, i8* %21, align 1, !range !3
  %23 = icmp ne i8 %22, 0
  %24 = load i32, i32* %15, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %18
  %27 = add i32 %24, -1
  %28 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %7, i32 %27) #16
  %29 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %28, i64 0, i32 20
  %30 = load i8, i8* %29, align 2, !range !3
  %31 = icmp ne i8 %30, 0
  %32 = load i32, i32* %15, align 4
  br label %33

33:                                               ; preds = %26, %18, %3
  %34 = phi i32 [ 0, %18 ], [ %32, %26 ], [ 0, %3 ]
  %35 = phi i1 [ %23, %18 ], [ %23, %26 ], [ false, %3 ]
  %36 = phi i1 [ false, %18 ], [ %31, %26 ], [ false, %3 ]
  %37 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %34, %38
  br i1 %39, label %40, label %43, !prof !2

40:                                               ; preds = %33
  %41 = add i32 %34, 1
  tail call void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1970"* %7, i32 %41) #16
  %42 = load i32, i32* %15, align 4
  br label %43

43:                                               ; preds = %33, %40
  %44 = phi i32 [ %42, %40 ], [ %34, %33 ]
  %45 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %7, i64 0, i32 0, i32 0, i32 0
  %46 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %45, align 8
  %47 = zext i32 %44 to i64
  %48 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %46, i64 %47
  %49 = load i32, i32* %8, align 4
  %50 = load i8, i8* %14, align 1, !range !3
  %51 = icmp ne i8 %50, 0
  call void @_ZN5blink18NGInlineItemResultC1EPKNS_12NGInlineItemEjRKNS_12NGTextOffsetEbbb(%"struct.blink::NGInlineItemResult"* %48, %"class.blink::NGInlineItem"* %1, i32 %49, %"struct.blink::NGTextOffset"* nonnull dereferenceable(8) %4, i1 zeroext %51, i1 zeroext %35, i1 zeroext %36) #16
  %52 = load i32, i32* %15, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %15, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %54 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %46, i64 %47, i32 19
  %55 = load i8, i8* %54, align 1, !range !3
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %84, label %57

57:                                               ; preds = %43
  %58 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 12
  %59 = load i8, i8* %58, align 1, !range !3
  %60 = icmp eq i8 %59, 0
  %61 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27
  br i1 %60, label %81, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %46, i64 %47, i32 2, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = add nsw i32 %64, 1
  %66 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %61, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  br label %72

72:                                               ; preds = %69, %62
  %73 = phi i32 [ %71, %69 ], [ 0, %62 ]
  %74 = icmp slt i32 %73, %65
  %75 = select i1 %74, i32 %73, i32 %65
  %76 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 7
  %77 = load i32, i32* %76, align 4
  %78 = call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeEi(%"class.blink::LazyLineBreakIterator"* %61, i32 %64, i32 %77, i32 %75) #16
  %79 = icmp eq i32 %78, %64
  %80 = zext i1 %79 to i8
  br label %81

81:                                               ; preds = %57, %72
  %82 = phi i8 [ 0, %57 ], [ %80, %72 ]
  %83 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %46, i64 %47, i32 16
  store i8 %82, i8* %83, align 2
  br label %84

84:                                               ; preds = %43, %81
  %85 = load i32, i32* %5, align 4
  store i32 %85, i32* %10, align 8
  %86 = load i32, i32* %8, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %8, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker12MoveToNextOfERKNS_12NGInlineItemE(%"class.blink::NGLineBreaker"* nocapture, %"class.blink::NGInlineItem"* nocapture readonly dereferenceable(32)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, 1
  store i32 %8, i32* %6, align 4
  ret void
}

declare void @_ZN5blink10NGLineInfo15UpdateTextAlignEv(%"class.blink::NGLineInfo"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13NGLineBreaker24ShouldForceCanBreakAfterERKNS_18NGInlineItemResultE(%"class.blink::NGLineBreaker"* nocapture readonly, %"struct.blink::NGInlineItemResult"* nocapture readonly dereferenceable(160)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 22, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %79, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 2, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp ugt i32 %8, %10
  br i1 %11, label %12, label %79

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %79

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %19 = bitcast %"class.WTF::StringImpl"* %18 to i16*
  %20 = zext i32 %10 to i64
  %21 = getelementptr inbounds i16, i16* %19, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, -4
  br i1 %23, label %24, label %79

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 21
  %26 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %25, align 8
  %27 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 0
  %28 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %27, align 8
  %29 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %26, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %29, align 8
  %31 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %26, i64 0, i32 1, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %30, i64 %33
  br label %35

35:                                               ; preds = %75, %24
  %36 = phi %"class.blink::NGInlineItem"* [ %28, %24 ], [ %37, %75 ]
  %37 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %36, i64 1
  %38 = icmp eq %"class.blink::NGInlineItem"* %37, %34
  br i1 %38, label %79, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %36, i64 1, i32 4
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 2
  br i1 %42, label %43, label %75

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp ugt i32 %8, %45
  br i1 %46, label %47, label %64

47:                                               ; preds = %43
  %48 = load atomic i32, i32* %13 monotonic, align 4
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.WTF::StringImpl"* %18 to i8*
  %53 = zext i32 %45 to i64
  %54 = getelementptr inbounds i8, i8* %52, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i16
  br label %61

57:                                               ; preds = %47
  %58 = zext i32 %45 to i64
  %59 = getelementptr inbounds i16, i16* %19, i64 %58
  %60 = load i16, i16* %59, align 2
  br label %61

61:                                               ; preds = %51, %57
  %62 = phi i16 [ %56, %51 ], [ %60, %57 ]
  %63 = icmp eq i16 %62, 160
  br i1 %63, label %79, label %64, !prof !2

64:                                               ; preds = %43, %61
  %65 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %36, i64 1, i32 3
  %66 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %65, align 8
  %67 = icmp eq %"class.blink::LayoutObject"* %66, null
  br i1 %67, label %79, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.blink::LayoutObject"* %66 to i1 (%"class.blink::LayoutObject"*, i32)***
  %70 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %69, align 8
  %71 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %70, i64 92
  %72 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %71, align 8
  %73 = tail call zeroext i1 %72(%"class.blink::LayoutObject"* nonnull %66, i32 42) #16
  %74 = xor i1 %73, true
  br label %79

75:                                               ; preds = %39
  %76 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %36, i64 1, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = icmp ugt i32 %77, %10
  br i1 %78, label %79, label %35

79:                                               ; preds = %35, %75, %68, %64, %12, %2, %61, %6, %17
  %80 = phi i1 [ false, %17 ], [ false, %6 ], [ false, %61 ], [ false, %2 ], [ false, %12 ], [ true, %64 ], [ %74, %68 ], [ false, %75 ], [ false, %35 ]
  ret i1 %80
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker20HandleTrailingSpacesERKNS_12NGInlineItemEPKNS_11ShapeResultEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, %"class.blink::NGInlineItem"* dereferenceable(32), %"class.blink::ShapeResult"*, %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %5 = alloca %"struct.blink::NGTextOffset", align 4
  %6 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %22

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 22, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp ugt i32 %17, %15
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  br label %22

22:                                               ; preds = %19, %13, %9, %4
  %23 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 22
  %24 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %1)
  %25 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 12
  %26 = load i8, i8* %25, align 1, !range !3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %399, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %24, i64 0, i32 0, i32 9
  %30 = bitcast [20 x i8]* %29 to i160*
  %31 = load i160, i160* %30, align 8
  %32 = and i160 %31, 286720
  %33 = icmp eq i160 %32, 0
  br i1 %33, label %34, label %114

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %76, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp ugt i32 %42, %36
  br i1 %43, label %44, label %76

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %56

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 1
  %51 = bitcast %"class.WTF::StringImpl"* %50 to i16*
  %52 = zext i32 %36 to i64
  %53 = getelementptr inbounds i16, i16* %51, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = icmp eq i16 %54, 12288
  br i1 %55, label %114, label %56

56:                                               ; preds = %44, %49
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 1
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 1
  br i1 %60, label %68, label %62

62:                                               ; preds = %56
  %63 = bitcast %"class.WTF::StringImpl"* %61 to i8*
  %64 = zext i32 %36 to i64
  %65 = getelementptr inbounds i8, i8* %63, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i16
  br label %73

68:                                               ; preds = %56
  %69 = bitcast %"class.WTF::StringImpl"* %61 to i16*
  %70 = zext i32 %36 to i64
  %71 = getelementptr inbounds i16, i16* %69, i64 %70
  %72 = load i16, i16* %71, align 2
  br label %73

73:                                               ; preds = %62, %68
  %74 = phi i16 [ %67, %62 ], [ %72, %68 ]
  %75 = icmp eq i16 %74, 32
  br i1 %75, label %105, label %76

76:                                               ; preds = %40, %34, %73
  %77 = icmp eq i32 %36, 0
  br i1 %77, label %399, label %78

78:                                               ; preds = %76
  %79 = add i32 %36, -1
  br i1 %39, label %399, label %80

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp ugt i32 %82, %79
  br i1 %83, label %84, label %399

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 1
  br i1 %88, label %96, label %90

90:                                               ; preds = %84
  %91 = bitcast %"class.WTF::StringImpl"* %89 to i8*
  %92 = zext i32 %79 to i64
  %93 = getelementptr inbounds i8, i8* %91, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i16
  br label %101

96:                                               ; preds = %84
  %97 = bitcast %"class.WTF::StringImpl"* %89 to i16*
  %98 = zext i32 %79 to i64
  %99 = getelementptr inbounds i16, i16* %97, i64 %98
  %100 = load i16, i16* %99, align 2
  br label %101

101:                                              ; preds = %90, %96
  %102 = phi i16 [ %95, %90 ], [ %100, %96 ]
  switch i16 %102, label %399 [
    i16 32, label %103
    i16 9, label %103
  ]

103:                                              ; preds = %101, %101
  %104 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 3
  store i32 3, i32* %104, align 4
  br label %399

105:                                              ; preds = %73
  %106 = add nuw i32 %36, 1
  store i32 %106, i32* %35, align 8
  %107 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 3
  store i32 4, i32* %107, align 4
  %108 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %3, i64 0, i32 2
  %109 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %3, i64 0, i32 2, i32 0, i32 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = add i32 %110, -1
  %112 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %108, i32 %111) #16
  %113 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %112, i64 0, i32 16
  store i8 1, i8* %113, align 2
  br label %376

114:                                              ; preds = %49, %28
  %115 = and i160 %31, 520192
  %116 = icmp eq i160 %115, 262144
  br i1 %116, label %376, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %119 = load i32, i32* %118, align 8
  %120 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = icmp ult i32 %119, %121
  br i1 %122, label %123, label %167

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 1
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 1
  %130 = bitcast %"class.WTF::StringImpl"* %129 to i8*
  %131 = bitcast %"class.WTF::StringImpl"* %129 to i16*
  %132 = zext i32 %119 to i64
  %133 = zext i32 %121 to i64
  br label %134

134:                                              ; preds = %123, %154
  %135 = phi i64 [ %132, %123 ], [ %155, %154 ]
  %136 = phi i32 [ %119, %123 ], [ %156, %154 ]
  br i1 %126, label %162, label %137

137:                                              ; preds = %134
  %138 = load i32, i32* %127, align 4
  %139 = zext i32 %138 to i64
  %140 = icmp ult i64 %135, %139
  br i1 %140, label %141, label %160

141:                                              ; preds = %137
  %142 = load atomic i32, i32* %128 monotonic, align 4
  %143 = and i32 %142, 1
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %149, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds i8, i8* %130, i64 %135
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i16
  br label %152

149:                                              ; preds = %141
  %150 = getelementptr inbounds i16, i16* %131, i64 %135
  %151 = load i16, i16* %150, align 2
  br label %152

152:                                              ; preds = %145, %149
  %153 = phi i16 [ %148, %145 ], [ %151, %149 ]
  switch i16 %153, label %158 [
    i16 32, label %154
    i16 9, label %154
    i16 12288, label %154
  ]

154:                                              ; preds = %152, %152, %152
  %155 = add nuw nsw i64 %135, 1
  %156 = add nuw i32 %136, 1
  %157 = icmp ult i64 %155, %133
  br i1 %157, label %134, label %164

158:                                              ; preds = %152
  %159 = trunc i64 %135 to i32
  br label %164

160:                                              ; preds = %137
  %161 = trunc i64 %135 to i32
  br label %164

162:                                              ; preds = %134
  %163 = trunc i64 %135 to i32
  br label %164

164:                                              ; preds = %154, %162, %160, %158
  %165 = phi i32 [ %159, %158 ], [ %161, %160 ], [ %163, %162 ], [ %156, %154 ]
  %166 = icmp eq i32 %165, %119
  br i1 %166, label %167, label %197

167:                                              ; preds = %117, %164
  %168 = add i32 %119, -1
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %169, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %399, label %172

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = icmp ugt i32 %174, %168
  br i1 %175, label %176, label %399

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 1
  br i1 %180, label %188, label %182

182:                                              ; preds = %176
  %183 = bitcast %"class.WTF::StringImpl"* %181 to i8*
  %184 = zext i32 %168 to i64
  %185 = getelementptr inbounds i8, i8* %183, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i16
  br label %193

188:                                              ; preds = %176
  %189 = bitcast %"class.WTF::StringImpl"* %181 to i16*
  %190 = zext i32 %168 to i64
  %191 = getelementptr inbounds i16, i16* %189, i64 %190
  %192 = load i16, i16* %191, align 2
  br label %193

193:                                              ; preds = %182, %188
  %194 = phi i16 [ %187, %182 ], [ %192, %188 ]
  switch i16 %194, label %399 [
    i16 32, label %195
    i16 9, label %195
    i16 12288, label %195
  ]

195:                                              ; preds = %193, %193, %193
  %196 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 3
  store i32 5, i32* %196, align 4
  br label %399

197:                                              ; preds = %164
  %198 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %3, i64 0, i32 2
  %199 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %200 = bitcast %"struct.blink::NGTextOffset"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #16
  %201 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %5, i64 0, i32 0
  store i32 %119, i32* %201, align 4
  %202 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %5, i64 0, i32 1
  store i32 %165, i32* %202, align 4
  %203 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 13
  %204 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %3, i64 0, i32 2, i32 0, i32 0, i32 2
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %222, label %207

207:                                              ; preds = %197
  %208 = add i32 %205, -1
  %209 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %198, i32 %208) #16
  %210 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %209, i64 0, i32 19
  %211 = load i8, i8* %210, align 1, !range !3
  %212 = icmp ne i8 %211, 0
  %213 = load i32, i32* %204, align 4
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %222, label %215

215:                                              ; preds = %207
  %216 = add i32 %213, -1
  %217 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %198, i32 %216) #16
  %218 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %217, i64 0, i32 20
  %219 = load i8, i8* %218, align 2, !range !3
  %220 = icmp ne i8 %219, 0
  %221 = load i32, i32* %204, align 4
  br label %222

222:                                              ; preds = %215, %207, %197
  %223 = phi i32 [ 0, %207 ], [ %221, %215 ], [ 0, %197 ]
  %224 = phi i1 [ %212, %207 ], [ %212, %215 ], [ false, %197 ]
  %225 = phi i1 [ false, %207 ], [ %220, %215 ], [ false, %197 ]
  %226 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %3, i64 0, i32 2, i32 0, i32 0, i32 1
  %227 = load i32, i32* %226, align 8
  %228 = icmp eq i32 %223, %227
  br i1 %228, label %229, label %232, !prof !2

229:                                              ; preds = %222
  %230 = add i32 %223, 1
  tail call void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1970"* %198, i32 %230) #16
  %231 = load i32, i32* %204, align 4
  br label %232

232:                                              ; preds = %222, %229
  %233 = phi i32 [ %231, %229 ], [ %223, %222 ]
  %234 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %198, i64 0, i32 0, i32 0, i32 0
  %235 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %234, align 8
  %236 = zext i32 %233 to i64
  %237 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %235, i64 %236
  %238 = load i32, i32* %199, align 4
  %239 = load i8, i8* %203, align 1, !range !3
  %240 = icmp ne i8 %239, 0
  call void @_ZN5blink18NGInlineItemResultC1EPKNS_12NGInlineItemEjRKNS_12NGTextOffsetEbbb(%"struct.blink::NGInlineItemResult"* %237, %"class.blink::NGInlineItem"* %1, i32 %238, %"struct.blink::NGTextOffset"* nonnull dereferenceable(8) %5, i1 zeroext %240, i1 zeroext %224, i1 zeroext %225) #16
  %241 = load i32, i32* %204, align 4
  %242 = add i32 %241, 1
  store i32 %242, i32* %204, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #16
  %243 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %235, i64 %236, i32 19
  store i8 1, i8* %243, align 1
  %244 = load i32, i32* %118, align 4
  %245 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %235, i64 %236, i32 3, i32 0, i32 0, i32 0, i32 0
  %246 = bitcast i8* %245 to i64*
  %247 = zext i32 %244 to i64
  %248 = shl nuw i64 %247, 32
  %249 = or i64 %248, 1
  store i64 %249, i64* %246, align 4
  %250 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %235, i64 %236, i32 17
  store i8 1, i8* %250, align 1
  %251 = call %"class.blink::ShapeResultView"* @_ZN5blink15ShapeResultView6CreateEPKNS_11ShapeResultE(%"class.blink::ShapeResult"* %2) #16
  %252 = ptrtoint %"class.blink::ShapeResultView"* %251 to i64
  %253 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %235, i64 %236, i32 6
  %254 = bitcast %class.scoped_refptr.1909* %253 to i64*
  %255 = getelementptr inbounds %class.scoped_refptr.1909, %class.scoped_refptr.1909* %253, i64 0, i32 0
  %256 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %255, align 8
  store i64 %252, i64* %254, align 8
  %257 = icmp eq %"class.blink::ShapeResultView"* %256, null
  br i1 %257, label %265, label %258

258:                                              ; preds = %232
  %259 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %256, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %259) #16
  %260 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %256, i64 0, i32 0, i32 0, i32 0, i32 0
  %261 = load i32, i32* %260, align 4
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %265

263:                                              ; preds = %258
  call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %256) #16
  %264 = bitcast %"class.blink::ShapeResultView"* %256 to i8*
  call void @free(i8* %264) #16
  br label %265

265:                                              ; preds = %263, %258, %232
  %266 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %235, i64 %236, i32 2, i32 0
  %267 = load i32, i32* %266, align 4
  %268 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 0
  %269 = load i32, i32* %268, align 8
  %270 = icmp eq i32 %267, %269
  %271 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %235, i64 %236, i32 2, i32 1
  %272 = load i32, i32* %271, align 4
  %273 = load i32, i32* %120, align 4
  %274 = icmp eq i32 %272, %273
  %275 = and i1 %270, %274
  br i1 %275, label %276, label %298

276:                                              ; preds = %265
  %277 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %255, align 8
  %278 = icmp eq %"class.blink::ShapeResultView"* %277, null
  br i1 %278, label %295, label %279

279:                                              ; preds = %276
  %280 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  %281 = load i32, i32* %280, align 8
  %282 = icmp eq i32 %281, 1
  br i1 %282, label %295, label %283

283:                                              ; preds = %279
  %284 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %277, i64 0, i32 6
  %285 = load float, float* %284, align 8
  %286 = fmul float %285, 6.400000e+01
  %287 = call float @llvm.ceil.f32(float %286) #16
  %288 = fcmp ult float %287, 0xC1E0000000000000
  %289 = fcmp ugt float %287, 0x41DFFFFFE0000000
  %290 = fcmp ogt float %287, 0xC1E0000000000000
  %291 = select i1 %290, float %287, float 0xC1E0000000000000
  %292 = fptosi float %291 to i32
  %293 = select i1 %288, i32 0, i32 2147483647
  %294 = select i1 %289, i32 %293, i32 %292
  br label %295

295:                                              ; preds = %276, %279, %283
  %296 = phi i32 [ %294, %283 ], [ 0, %279 ], [ 0, %276 ]
  %297 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %235, i64 %236, i32 4, i32 0
  store i32 %296, i32* %297, align 4
  br label %328

298:                                              ; preds = %265
  %299 = call %"class.blink::ShapeResultView"* @_ZN5blink13NGLineBreaker21TruncateLineEndResultERKNS_10NGLineInfoERKNS_18NGInlineItemResultEj(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGLineInfo"* dereferenceable(5208) %3, %"struct.blink::NGInlineItemResult"* dereferenceable(160) %237, i32 %272) #16
  %300 = ptrtoint %"class.blink::ShapeResultView"* %299 to i64
  %301 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %255, align 8
  store i64 %300, i64* %254, align 8
  %302 = icmp eq %"class.blink::ShapeResultView"* %301, null
  br i1 %302, label %310, label %303

303:                                              ; preds = %298
  %304 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %301, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %304) #16
  %305 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %301, i64 0, i32 0, i32 0, i32 0, i32 0
  %306 = load i32, i32* %305, align 4
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %310

308:                                              ; preds = %303
  call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %301) #16
  %309 = bitcast %"class.blink::ShapeResultView"* %301 to i8*
  call void @free(i8* %309) #16
  br label %310

310:                                              ; preds = %298, %303, %308
  %311 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %255, align 8
  %312 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %311, i64 0, i32 6
  %313 = load float, float* %312, align 8
  %314 = fmul float %313, 6.400000e+01
  %315 = call float @llvm.ceil.f32(float %314) #16
  %316 = fcmp ult float %315, 0xC1E0000000000000
  %317 = fcmp ugt float %315, 0x41DFFFFFE0000000
  %318 = fcmp ogt float %315, 0xC1E0000000000000
  %319 = select i1 %318, float %315, float 0xC1E0000000000000
  %320 = fptosi float %319 to i32
  %321 = select i1 %316, i32 0, i32 2147483647
  %322 = select i1 %317, i32 %321, i32 %320
  %323 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %235, i64 %236, i32 4, i32 0
  store i32 %322, i32* %323, align 4
  %324 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  %325 = load i32, i32* %324, align 8
  %326 = icmp eq i32 %325, 1
  %327 = select i1 %326, i32 0, i32 %322
  store i32 %327, i32* %323, align 4
  br label %328

328:                                              ; preds = %310, %295
  %329 = phi i32 [ %327, %310 ], [ %296, %295 ]
  %330 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %331 = load i32, i32* %330, align 4
  %332 = icmp slt i32 %329, 0
  %333 = select i1 %332, i32 -2147483648, i32 2147483647
  %334 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %331, i32 %329) #16
  %335 = extractvalue { i32, i1 } %334, 1
  %336 = extractvalue { i32, i1 } %334, 0
  %337 = select i1 %335, i32 %333, i32 %336, !prof !2
  store i32 %337, i32* %330, align 4
  %338 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %339 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %338, align 8
  %340 = icmp eq %"class.WTF::StringImpl"* %339, null
  br i1 %340, label %344, label %341

341:                                              ; preds = %328
  %342 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %339, i64 0, i32 1
  %343 = load i32, i32* %342, align 4
  br label %344

344:                                              ; preds = %328, %341
  %345 = phi i32 [ %343, %341 ], [ 0, %328 ]
  %346 = icmp ult i32 %165, %345
  br i1 %346, label %347, label %372

347:                                              ; preds = %344
  br i1 %340, label %371, label %348

348:                                              ; preds = %347
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %339, i64 0, i32 1
  %350 = load i32, i32* %349, align 4
  %351 = icmp ugt i32 %350, %165
  br i1 %351, label %352, label %371

352:                                              ; preds = %348
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %339, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %354 = load atomic i32, i32* %353 monotonic, align 4
  %355 = and i32 %354, 1
  %356 = icmp eq i32 %355, 0
  %357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %339, i64 1
  br i1 %356, label %364, label %358

358:                                              ; preds = %352
  %359 = bitcast %"class.WTF::StringImpl"* %357 to i8*
  %360 = zext i32 %165 to i64
  %361 = getelementptr inbounds i8, i8* %359, i64 %360
  %362 = load i8, i8* %361, align 1
  %363 = zext i8 %362 to i16
  br label %369

364:                                              ; preds = %352
  %365 = bitcast %"class.WTF::StringImpl"* %357 to i16*
  %366 = zext i32 %165 to i64
  %367 = getelementptr inbounds i16, i16* %365, i64 %366
  %368 = load i16, i16* %367, align 2
  br label %369

369:                                              ; preds = %358, %364
  %370 = phi i16 [ %363, %358 ], [ %368, %364 ]
  switch i16 %370, label %371 [
    i16 32, label %372
    i16 9, label %372
    i16 12288, label %372
  ]

371:                                              ; preds = %347, %348, %369
  br label %372

372:                                              ; preds = %371, %369, %369, %369, %344
  %373 = phi i8 [ 0, %344 ], [ 0, %369 ], [ 1, %371 ], [ 0, %369 ], [ 0, %369 ]
  %374 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %235, i64 %236, i32 16
  store i8 %373, i8* %374, align 2
  store i32 %165, i32* %118, align 8
  %375 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 3
  store i32 5, i32* %375, align 4
  br label %376

376:                                              ; preds = %372, %114, %105
  %377 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %378 = load i32, i32* %377, align 8
  %379 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %380 = load i32, i32* %379, align 4
  %381 = icmp ult i32 %378, %380
  br i1 %381, label %399, label %382

382:                                              ; preds = %376
  %383 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  %384 = load i32, i32* %383, align 8
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %386, label %395

386:                                              ; preds = %382
  %387 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 3
  %388 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %387, align 8
  %389 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %388, i64 0, i32 4
  %390 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %389 to i96*
  %391 = load i96, i96* %390, align 4
  %392 = and i96 %391, 63
  %393 = icmp eq i96 %392, 0
  br i1 %393, label %395, label %394

394:                                              ; preds = %386
  call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %388) #16
  br label %395

395:                                              ; preds = %382, %386, %394
  %396 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %397 = load i32, i32* %396, align 4
  %398 = add i32 %397, 1
  store i32 %398, i32* %396, align 4
  br label %399

399:                                              ; preds = %376, %195, %193, %172, %167, %103, %76, %101, %80, %78, %22, %395
  %400 = phi i32 [ 2, %395 ], [ 0, %22 ], [ 0, %78 ], [ 0, %80 ], [ 0, %101 ], [ 0, %76 ], [ 0, %103 ], [ 0, %167 ], [ 0, %172 ], [ 0, %193 ], [ 0, %195 ], [ 0, %376 ]
  %401 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 0
  store i32 %400, i32* %401, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker14HandleOverflowEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %class.scoped_refptr, align 8
  %5 = alloca %"struct.blink::NGInlineItemResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 5, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp ne i32 %9, 2147483647
  %11 = zext i1 %10 to i32
  %12 = add nsw i32 %9, %11
  %13 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %12, -1
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 %12) #16
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !2
  %21 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 13
  %22 = load i8, i8* %21, align 8, !range !3
  %23 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 2
  %24 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i8
  %28 = lshr i64 %26, 32
  %29 = trunc i64 %28 to i32
  %30 = icmp eq i8 %27, 0
  br i1 %30, label %61, label %31, !prof !5

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %23, i32 %33) #16
  %35 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %34, i64 0, i32 8, i32 0
  %36 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %36, i64 0, i32 1
  %38 = load float, float* %37, align 4
  %39 = fmul float %38, 6.400000e+01
  %40 = tail call float @llvm.ceil.f32(float %39) #16
  %41 = fcmp ult float %40, 0xC1E0000000000000
  %42 = fcmp ugt float %40, 0x41DFFFFFE0000000
  %43 = fcmp ogt float %40, 0xC1E0000000000000
  %44 = select i1 %43, float %40, float 0xC1E0000000000000
  %45 = fptosi float %44 to i32
  %46 = select i1 %41, i32 0, i32 2147483647
  %47 = select i1 %42, i32 %46, i32 %45
  %48 = icmp sgt i32 %47, 0
  %49 = select i1 %48, i32 %47, i32 0
  %50 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %34, i64 0, i32 4, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %51, i32 %49) #16
  %53 = extractvalue { i32, i1 } %52, 1
  %54 = extractvalue { i32, i1 } %52, 0
  %55 = select i1 %53, i32 -2147483648, i32 %54, !prof !2
  store i32 %55, i32* %50, align 4
  store i8 0, i8* %24, align 4
  %56 = load i32, i32* %13, align 4
  %57 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %56, i32 %49) #16
  %58 = extractvalue { i32, i1 } %57, 1
  %59 = extractvalue { i32, i1 } %57, 0
  %60 = select i1 %58, i32 -2147483648, i32 %59, !prof !2
  store i32 %60, i32* %13, align 4
  br label %61

61:                                               ; preds = %2, %31
  %62 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %308, label %65

65:                                               ; preds = %61
  %66 = bitcast %class.scoped_refptr* %4 to i8*
  %67 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %68 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 26, i32 0
  %69 = bitcast %"struct.blink::NGInlineItemResult"* %5 to i8*
  %70 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %5, i64 0, i32 6, i32 0
  %71 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %5, i64 0, i32 7, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %5, i64 0, i32 8, i32 0
  %73 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %5, i64 0, i32 9, i32 0
  %74 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %5, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %5, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %5, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %77 = bitcast %"struct.blink::NGBfcOffset"* %76 to i8*
  %78 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %5, i64 0, i32 11
  %79 = bitcast %"struct.blink::NGLineBoxStrut"* %78 to i8*
  %80 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %5, i64 0, i32 2, i32 1
  %81 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0
  %82 = getelementptr inbounds i8, i8* %69, i64 36
  br label %83

83:                                               ; preds = %65, %306
  %84 = phi i32 [ 0, %65 ], [ %110, %306 ]
  %85 = phi i8 [ %22, %65 ], [ %92, %306 ]
  %86 = phi i32 [ %63, %65 ], [ %88, %306 ]
  %87 = phi i32 [ %20, %65 ], [ %118, %306 ]
  %88 = add i32 %86, -1
  %89 = call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %23, i32 %88) #16
  %90 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %89, i64 0, i32 18
  %91 = load i8, i8* %90, align 4, !range !3
  %92 = or i8 %91, %85
  %93 = load i32, i32* %62, align 4
  %94 = add i32 %93, -1
  %95 = icmp ult i32 %88, %94
  br i1 %95, label %96, label %109

96:                                               ; preds = %83
  %97 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %89, i64 0, i32 16
  %98 = load i8, i8* %97, align 2, !range !3
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %109, label %100

100:                                              ; preds = %96
  %101 = icmp slt i32 %87, 1
  br i1 %101, label %102, label %109

102:                                              ; preds = %100
  %103 = icmp eq i32 %87, 0
  %104 = select i1 %103, i32 2147483647, i32 -2147483648
  %105 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %12, i32 %87) #16
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !2
  store i32 %108, i32* %13, align 8
  call void @_ZN5blink13NGLineBreaker14RewindOverflowEjPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, i32 %86, %"class.blink::NGLineInfo"* %1)
  br label %382

109:                                              ; preds = %100, %96, %83
  %110 = phi i32 [ %84, %96 ], [ %84, %83 ], [ %86, %100 ]
  %111 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %89, i64 0, i32 4, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp sgt i32 %112, -1
  %114 = select i1 %113, i32 -2147483648, i32 2147483647
  %115 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %87, i32 %112) #16
  %116 = extractvalue { i32, i1 } %115, 1
  %117 = extractvalue { i32, i1 } %115, 0
  %118 = select i1 %116, i32 %114, i32 %117, !prof !2
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %306, label %120

120:                                              ; preds = %109
  %121 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %89, i64 0, i32 0
  %122 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %122, i64 0, i32 4
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %124, 0
  %126 = icmp ne i32 %118, 0
  %127 = and i1 %125, %126
  br i1 %127, label %128, label %306

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %89, i64 0, i32 15
  %130 = load i8, i8* %129, align 1, !range !3
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %306, label %132

132:                                              ; preds = %128
  %133 = call i1 @llvm.is.constant.i32(i32 %118) #16
  br i1 %133, label %134, label %138

134:                                              ; preds = %132
  %135 = sub i32 0, %118
  %136 = icmp eq i32 %135, -2147483648
  %137 = select i1 %136, i32 2147483647, i32 %135
  br label %143

138:                                              ; preds = %132
  %139 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %118) #16
  %140 = extractvalue { i32, i1 } %139, 1
  %141 = extractvalue { i32, i1 } %139, 0
  %142 = select i1 %140, i32 2147483647, i32 %141
  br label %143

143:                                              ; preds = %134, %138
  %144 = phi i32 [ %137, %134 ], [ %142, %138 ]
  %145 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %112, i32 -64)
  %146 = extractvalue { i32, i1 } %145, 1
  %147 = extractvalue { i32, i1 } %145, 0
  %148 = select i1 %146, i32 -2147483648, i32 %147, !prof !2
  %149 = icmp slt i32 %148, 1
  br i1 %149, label %150, label %152, !prof !2

150:                                              ; preds = %143
  %151 = call zeroext i1 @_ZN5blink13NGLineBreaker35BreakTextAtPreviousBreakOpportunityEPNS_18NGInlineItemResultE(%"class.blink::NGLineBreaker"* %0, %"struct.blink::NGInlineItemResult"* %89)
  br i1 %151, label %381, label %306

152:                                              ; preds = %143
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #16
  %153 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %68, align 8
  store %"class.blink::ComputedStyle"* %153, %"class.blink::ComputedStyle"** %67, align 8
  %154 = icmp eq %"class.blink::ComputedStyle"* %153, null
  br i1 %154, label %157, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %153, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %156) #16
  br label %157

157:                                              ; preds = %152, %155
  %158 = call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %122)
  call void @_ZN5blink13NGLineBreaker15SetCurrentStyleERKNS_13ComputedStyleE(%"class.blink::NGLineBreaker"* %0, %"class.blink::ComputedStyle"* dereferenceable(104) %158)
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %69) #16
  %159 = bitcast %"struct.blink::NGInlineItemResult"* %89 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %82, i8 -86, i64 124, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 8 %159, i64 36, i1 false) #16
  %160 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %89, i64 0, i32 6, i32 0
  %161 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %160, align 8
  store %"class.blink::ShapeResultView"* %161, %"class.blink::ShapeResultView"** %70, align 8
  %162 = icmp eq %"class.blink::ShapeResultView"* %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %161, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %164) #16
  br label %165

165:                                              ; preds = %163, %157
  %166 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %89, i64 0, i32 7, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  store %"class.WTF::StringImpl"* %167, %"class.WTF::StringImpl"** %71, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %186, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %186

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = zext i32 %176 to i33
  %178 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %177, i33 1) #16
  %179 = extractvalue { i33, i1 } %178, 1
  %180 = extractvalue { i33, i1 } %178, 0
  %181 = icmp slt i33 %180, 0
  %182 = or i1 %179, %181
  br i1 %182, label %183, label %184, !prof !2

183:                                              ; preds = %174
  call void @llvm.trap() #16
  unreachable

184:                                              ; preds = %174
  %185 = trunc i33 %180 to i32
  store i32 %185, i32* %175, align 4
  br label %186

186:                                              ; preds = %184, %169, %165
  %187 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %89, i64 0, i32 8, i32 0
  %188 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %187, align 8
  store %"class.blink::ShapeResult"* %188, %"class.blink::ShapeResult"** %72, align 8
  %189 = icmp eq %"class.blink::ShapeResult"* %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %188, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %191) #16
  br label %192

192:                                              ; preds = %190, %186
  %193 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %89, i64 0, i32 9, i32 0
  %194 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %193, align 8
  store %"class.blink::NGLayoutResult"* %194, %"class.blink::NGLayoutResult"** %73, align 8
  %195 = icmp eq %"class.blink::NGLayoutResult"* %194, null
  br i1 %195, label %198, label %196

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %194, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %197) #16
  br label %198

198:                                              ; preds = %196, %192
  %199 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %89, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 32, i1 false) #16
  %200 = load i8, i8* %199, align 8, !range !3
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %211, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %89, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %204 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %203, align 8
  store %"class.blink::NGLayoutResult"* %204, %"class.blink::NGLayoutResult"** %75, align 8
  %205 = icmp eq %"class.blink::NGLayoutResult"* %204, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %204, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %207) #16
  br label %208

208:                                              ; preds = %206, %202
  %209 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %89, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %210 = bitcast %"struct.blink::NGBfcOffset"* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %210, i64 9, i1 false) #16
  store i8 1, i8* %74, align 8
  br label %211

211:                                              ; preds = %198, %208
  %212 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %89, i64 0, i32 11
  %213 = bitcast %"struct.blink::NGLineBoxStrut"* %212 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %213, i64 56, i1 false) #16
  %214 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %122, i64 0, i32 2, i32 0
  %215 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %214, align 8
  %216 = icmp slt i32 %148, %144
  %217 = select i1 %216, i32 %148, i32 %144
  %218 = call i32 @_ZN5blink13NGLineBreaker9BreakTextEPNS_18NGInlineItemResultERKNS_12NGInlineItemERKNS_11ShapeResultENS_10LayoutUnitES9_PNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"struct.blink::NGInlineItemResult"* %89, %"class.blink::NGInlineItem"* dereferenceable(32) %122, %"class.blink::ShapeResult"* dereferenceable(72) %215, i32 %217, i32 %144, %"class.blink::NGLineInfo"* %1)
  %219 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %89, i64 0, i32 16
  %220 = load i8, i8* %219, align 2, !range !3
  %221 = icmp ne i8 %220, 0
  %222 = load i32, i32* %111, align 4
  %223 = icmp sle i32 %222, %144
  %224 = and i1 %221, %223
  br i1 %224, label %225, label %275

225:                                              ; preds = %211
  %226 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %89, i64 0, i32 2, i32 1
  %227 = load i32, i32* %226, align 4
  %228 = load i32, i32* %80, align 4
  %229 = icmp ult i32 %227, %228
  br i1 %229, label %230, label %275

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %122, i64 0, i32 2, i32 0
  %232 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %89, i64 0, i32 2, i32 1
  %233 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #16
  %234 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %234, align 8
  %235 = load i32, i32* %62, align 4
  %236 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %236)
  %237 = icmp ugt i32 %86, %235
  br i1 %237, label %239, label %238

238:                                              ; preds = %230
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %236)
  store i8* null, i8** %234, align 8
  br label %248

239:                                              ; preds = %230
  %240 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %86) #16
  %241 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %235) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i8* %240, i8* %241) #16
  %242 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %243 = load i8*, i8** %242, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %236)
  store i8* %243, i8** %234, align 8
  %244 = icmp eq i8* %243, null
  br i1 %244, label %248, label %245

245:                                              ; preds = %239
  %246 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %246) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i32 2138, %"class.logging::CheckOpResult"* nonnull %6) #16
  %247 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %246) #16
  br label %248

248:                                              ; preds = %238, %239, %245
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #16
  %249 = load i32, i32* %62, align 4
  %250 = icmp eq i32 %86, %249
  br i1 %250, label %251, label %273

251:                                              ; preds = %248
  %252 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %12, i32 %118) #16
  %253 = extractvalue { i32, i1 } %252, 1
  %254 = extractvalue { i32, i1 } %252, 0
  %255 = select i1 %253, i32 -2147483648, i32 %254, !prof !2
  %256 = load i32, i32* %111, align 4
  %257 = icmp slt i32 %256, 0
  %258 = select i1 %257, i32 -2147483648, i32 2147483647
  %259 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %255, i32 %256) #16
  %260 = extractvalue { i32, i1 } %259, 1
  %261 = extractvalue { i32, i1 } %259, 0
  %262 = select i1 %260, i32 %258, i32 %261, !prof !2
  store i32 %262, i32* %13, align 8
  %263 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %89, i64 0, i32 1
  %264 = load i32, i32* %263, align 8
  %265 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  store i32 %264, i32* %265, align 4
  %266 = load i32, i32* %232, align 4
  %267 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  store i32 %266, i32* %267, align 8
  %268 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 21
  %269 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %268, align 8
  %270 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %269, i64 0, i32 1
  %271 = call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZNK3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1841"* %270, i32 %264) #16
  %272 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %231, align 8
  call void @_ZN5blink13NGLineBreaker20HandleTrailingSpacesERKNS_12NGInlineItemEPKNS_11ShapeResultEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %122, %"class.blink::ShapeResult"* %272, %"class.blink::NGLineInfo"* %1) #16
  br label %305

273:                                              ; preds = %248
  %274 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 0
  store i32 2, i32* %274, align 8
  call void @_ZN5blink13NGLineBreaker6RewindEjPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, i32 %86, %"class.blink::NGLineInfo"* %1)
  br label %305

275:                                              ; preds = %211, %225
  %276 = load i8, i8* %24, align 4, !range !3
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %302, label %278, !prof !5

278:                                              ; preds = %275
  %279 = load i32, i32* %81, align 4
  %280 = call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %23, i32 %279) #16
  %281 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %280, i64 0, i32 8, i32 0
  %282 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %281, align 8
  %283 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %282, i64 0, i32 1
  %284 = load float, float* %283, align 4
  %285 = fmul float %284, 6.400000e+01
  %286 = call float @llvm.ceil.f32(float %285) #16
  %287 = fcmp ult float %286, 0xC1E0000000000000
  %288 = fcmp ugt float %286, 0x41DFFFFFE0000000
  %289 = fcmp ogt float %286, 0xC1E0000000000000
  %290 = select i1 %289, float %286, float 0xC1E0000000000000
  %291 = fptosi float %290 to i32
  %292 = select i1 %287, i32 0, i32 2147483647
  %293 = select i1 %288, i32 %292, i32 %291
  %294 = icmp sgt i32 %293, 0
  %295 = select i1 %294, i32 %293, i32 0
  %296 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %280, i64 0, i32 4, i32 0
  %297 = load i32, i32* %296, align 4
  %298 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %297, i32 %295) #16
  %299 = extractvalue { i32, i1 } %298, 1
  %300 = extractvalue { i32, i1 } %298, 0
  %301 = select i1 %299, i32 -2147483648, i32 %300, !prof !2
  store i32 %301, i32* %296, align 4
  store i8 0, i8* %24, align 4
  br label %302

302:                                              ; preds = %275, %278
  %303 = call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN5blink18NGInlineItemResultaSERKS0_(%"struct.blink::NGInlineItemResult"* %89, %"struct.blink::NGInlineItemResult"* nonnull dereferenceable(160) %5)
  %304 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %67, align 8
  call void @_ZN5blink13NGLineBreaker15SetCurrentStyleERKNS_13ComputedStyleE(%"class.blink::NGLineBreaker"* %0, %"class.blink::ComputedStyle"* dereferenceable(104) %304)
  call void @_ZN5blink18NGInlineItemResultD2Ev(%"struct.blink::NGInlineItemResult"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %69) #16
  call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #16
  br label %306

305:                                              ; preds = %273, %251
  call void @_ZN5blink18NGInlineItemResultD2Ev(%"struct.blink::NGInlineItemResult"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %69) #16
  call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #16
  br label %382

306:                                              ; preds = %109, %128, %120, %302, %150
  %307 = icmp eq i32 %88, 0
  br i1 %307, label %308, label %83

308:                                              ; preds = %306, %61
  %309 = phi i8 [ %22, %61 ], [ %92, %306 ]
  %310 = phi i32 [ 0, %61 ], [ %110, %306 ]
  %311 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 14
  %312 = load i8, i8* %311, align 1, !range !3
  %313 = icmp ne i8 %312, 0
  %314 = and i8 %309, 1
  %315 = icmp eq i8 %314, 0
  %316 = or i1 %315, %313
  br i1 %316, label %325, label %317

317:                                              ; preds = %308
  store i8 1, i8* %311, align 1
  %318 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 7
  store i32 2, i32* %318, align 4
  %319 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 0
  store i32 3, i32* %319, align 8
  %320 = load i32, i32* %62, align 4
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %323, label %322

322:                                              ; preds = %317
  call void @_ZN5blink13NGLineBreaker6RewindEjPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, i32 0, %"class.blink::NGLineInfo"* %1)
  br label %323

323:                                              ; preds = %322, %317
  %324 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 51, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %324, align 4
  br label %382

325:                                              ; preds = %308
  %326 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 16
  store i8 1, i8* %326, align 4
  br i1 %30, label %363, label %327, !prof !5

327:                                              ; preds = %325
  %328 = call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %23, i32 %29) #16
  %329 = and i64 %26, -4294967296
  %330 = or i64 %329, 1
  store i64 %330, i64* %25, align 8
  %331 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %328, i64 0, i32 7, i32 0, i32 0
  %332 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %331, align 8
  %333 = icmp eq %"class.WTF::StringImpl"* %332, null
  br i1 %333, label %334, label %336

334:                                              ; preds = %327
  call void @_ZN5blink18NGInlineItemResult11ShapeHyphenEv(%"struct.blink::NGInlineItemResult"* %328) #16
  %335 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 34
  store i8 1, i8* %335, align 8
  br label %336

336:                                              ; preds = %327, %334
  %337 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %328, i64 0, i32 8, i32 0
  %338 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %337, align 8
  %339 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %338, i64 0, i32 1
  %340 = load float, float* %339, align 4
  %341 = fmul float %340, 6.400000e+01
  %342 = call float @llvm.ceil.f32(float %341) #16
  %343 = fcmp ult float %342, 0xC1E0000000000000
  %344 = fcmp ugt float %342, 0x41DFFFFFE0000000
  %345 = fcmp ogt float %342, 0xC1E0000000000000
  %346 = select i1 %345, float %342, float 0xC1E0000000000000
  %347 = fptosi float %346 to i32
  %348 = select i1 %343, i32 0, i32 2147483647
  %349 = select i1 %344, i32 %348, i32 %347
  %350 = icmp sgt i32 %349, 0
  %351 = select i1 %350, i32 %349, i32 0
  %352 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %328, i64 0, i32 4, i32 0
  %353 = load i32, i32* %352, align 4
  %354 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %353, i32 %351) #16
  %355 = extractvalue { i32, i1 } %354, 1
  %356 = extractvalue { i32, i1 } %354, 0
  %357 = select i1 %355, i32 2147483647, i32 %356, !prof !2
  store i32 %357, i32* %352, align 4
  %358 = load i32, i32* %13, align 4
  %359 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %358, i32 %351) #16
  %360 = extractvalue { i32, i1 } %359, 1
  %361 = extractvalue { i32, i1 } %359, 0
  %362 = select i1 %360, i32 2147483647, i32 %361, !prof !2
  store i32 %362, i32* %13, align 4
  br label %363

363:                                              ; preds = %325, %336
  %364 = icmp eq i32 %310, 0
  br i1 %364, label %366, label %365

365:                                              ; preds = %363
  call void @_ZN5blink13NGLineBreaker14RewindOverflowEjPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, i32 %310, %"class.blink::NGLineInfo"* %1)
  br label %382

366:                                              ; preds = %363
  %367 = load i32, i32* %62, align 4
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %369, label %371

369:                                              ; preds = %366
  %370 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 0
  br label %379

371:                                              ; preds = %366
  %372 = add i32 %367, -1
  %373 = call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %23, i32 %372) #16
  %374 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %373, i64 0, i32 16
  %375 = load i8, i8* %374, align 2, !range !3
  %376 = icmp eq i8 %375, 0
  %377 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 0
  br i1 %376, label %379, label %378

378:                                              ; preds = %371
  store i32 2, i32* %377, align 8
  br label %382

379:                                              ; preds = %371, %369
  %380 = phi i32* [ %370, %369 ], [ %377, %371 ]
  store i32 1, i32* %380, align 8
  br label %382

381:                                              ; preds = %150
  call void @_ZN5blink13NGLineBreaker14RewindOverflowEjPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, i32 %86, %"class.blink::NGLineInfo"* %1)
  br label %382

382:                                              ; preds = %381, %305, %102, %379, %378, %365, %323
  ret void
}

declare i32 @_ZN5blink24CommitPendingEndOverhangEPNS_10NGLineInfoE(%"class.blink::NGLineInfo"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13NGLineBreaker27HandleTextForFastMinContentEPNS_18NGInlineItemResultERKNS_12NGInlineItemERKNS_11ShapeResultEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, %"struct.blink::NGInlineItemResult"*, %"class.blink::NGInlineItem"* dereferenceable(32), %"class.blink::ShapeResult"* dereferenceable(72), %"class.blink::NGLineInfo"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::Vector.1982", align 8
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 2, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %4, i64 0, i32 8
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %18, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %2, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %10, %16
  br i1 %17, label %490, label %18

18:                                               ; preds = %5, %14
  %19 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 42
  %20 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %19, align 8
  %21 = icmp eq %"class.blink::NGInlineItem"* %20, %2
  br i1 %21, label %490, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 13
  %24 = load i8, i8* %23, align 8, !range !3
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 14
  %28 = load i8, i8* %27, align 1, !range !3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 7
  %32 = load i32, i32* %31, align 4
  store i32 2, i32* %31, align 4
  br label %33

33:                                               ; preds = %26, %22, %30
  %34 = phi i8 [ 0, %22 ], [ 1, %30 ], [ 0, %26 ]
  %35 = phi i32 [ -1431655766, %22 ], [ %32, %30 ], [ -1431655766, %26 ]
  tail call void @_ZNK5blink11ShapeResult18EnsurePositionDataEv(%"class.blink::ShapeResult"* %3) #16
  %36 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %2, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp ult i32 %10, %37
  br i1 %38, label %39, label %442

39:                                               ; preds = %33
  %40 = add nuw i32 %10, 1
  %41 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27
  %42 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %2, i64 0, i32 0
  %43 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 22, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 15
  %45 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 32
  %46 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 8, i32 0
  %47 = bitcast %"class.WTF::StringView"* %6 to i8*
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %51 = bitcast i8** %49 to i16**
  %52 = bitcast %"class.WTF::StringView"* %6 to i64*
  %53 = bitcast %"class.WTF::Vector.1982"* %7 to i8*
  %54 = bitcast i32* %8 to i8*
  %55 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %7, i64 0, i32 0, i32 0, i32 2
  %56 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %7, i64 0, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %7, i64 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %3, i64 0, i32 6
  %59 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %3, i64 0, i32 8
  %60 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %7, i64 0, i32 0, i32 1, i64 0
  %61 = bitcast i8* %60 to i32*
  %62 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %7, i64 0, i32 0
  %63 = bitcast %"class.WTF::StringView"* %6 to i8*
  br label %64

64:                                               ; preds = %39, %433
  %65 = phi float [ 0.000000e+00, %39 ], [ %435, %433 ]
  %66 = phi i32 [ %37, %39 ], [ %434, %433 ]
  %67 = phi i32 [ %10, %39 ], [ %440, %433 ]
  %68 = phi i32 [ %40, %39 ], [ %439, %433 ]
  %69 = phi i32 [ 0, %39 ], [ %438, %433 ]
  %70 = phi i32 [ -1431655766, %39 ], [ %437, %433 ]
  %71 = phi i8 [ 0, %39 ], [ %436, %433 ]
  %72 = call i32 @_ZNK5blink21LazyLineBreakIterator20NextBreakOpportunityEjj(%"class.blink::LazyLineBreakIterator"* %41, i32 %68, i32 %66) #16
  %73 = call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %2)
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 520192
  %78 = icmp ne i160 %77, 262144
  %79 = load i32, i32* %42, align 8
  %80 = icmp ugt i32 %72, %79
  %81 = and i1 %78, %80
  br i1 %81, label %82, label %121

82:                                               ; preds = %64
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 1
  %88 = bitcast %"class.WTF::StringImpl"* %87 to i8*
  %89 = bitcast %"class.WTF::StringImpl"* %87 to i16*
  %90 = zext i32 %72 to i64
  br label %91

91:                                               ; preds = %82, %112
  %92 = phi i64 [ %90, %82 ], [ %114, %112 ]
  %93 = trunc i64 %92 to i32
  %94 = add i32 %93, -1
  br i1 %84, label %119, label %95

95:                                               ; preds = %91
  %96 = load i32, i32* %85, align 4
  %97 = icmp ugt i32 %96, %94
  br i1 %97, label %98, label %117

98:                                               ; preds = %95
  %99 = load atomic i32, i32* %86 monotonic, align 4
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  %102 = zext i32 %94 to i64
  br i1 %101, label %107, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds i8, i8* %88, i64 %102
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i16
  br label %110

107:                                              ; preds = %98
  %108 = getelementptr inbounds i16, i16* %89, i64 %102
  %109 = load i16, i16* %108, align 2
  br label %110

110:                                              ; preds = %103, %107
  %111 = phi i16 [ %106, %103 ], [ %109, %107 ]
  switch i16 %111, label %115 [
    i16 32, label %112
    i16 9, label %112
  ]

112:                                              ; preds = %110, %110
  %113 = icmp ugt i32 %94, %79
  %114 = add nsw i64 %92, -1
  br i1 %113, label %91, label %121

115:                                              ; preds = %110
  %116 = trunc i64 %92 to i32
  br label %121

117:                                              ; preds = %95
  %118 = trunc i64 %92 to i32
  br label %121

119:                                              ; preds = %91
  %120 = trunc i64 %92 to i32
  br label %121

121:                                              ; preds = %112, %115, %117, %119, %64
  %122 = phi i32 [ %72, %64 ], [ %116, %115 ], [ %118, %117 ], [ %120, %119 ], [ %94, %112 ]
  %123 = load i32, i32* %36, align 4
  %124 = icmp ult i32 %122, %123
  br i1 %124, label %125, label %442

125:                                              ; preds = %121
  %126 = add i32 %122, -1
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %159, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = icmp ugt i32 %131, %126
  br i1 %132, label %133, label %159

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 1
  br i1 %137, label %145, label %139

139:                                              ; preds = %133
  %140 = bitcast %"class.WTF::StringImpl"* %138 to i8*
  %141 = zext i32 %126 to i64
  %142 = getelementptr inbounds i8, i8* %140, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i16
  br label %150

145:                                              ; preds = %133
  %146 = bitcast %"class.WTF::StringImpl"* %138 to i16*
  %147 = zext i32 %126 to i64
  %148 = getelementptr inbounds i16, i16* %146, i64 %147
  %149 = load i16, i16* %148, align 2
  br label %150

150:                                              ; preds = %139, %145
  %151 = phi i16 [ %144, %139 ], [ %149, %145 ]
  %152 = icmp eq i16 %151, 173
  br i1 %152, label %153, label %159

153:                                              ; preds = %150
  %154 = load i8, i8* %44, align 2, !range !3
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %153
  %157 = add nuw i32 %122, 1
  %158 = icmp ult i32 %157, %123
  br i1 %158, label %433, label %159

159:                                              ; preds = %125, %129, %156, %153, %150
  %160 = phi i32 [ %122, %153 ], [ %122, %150 ], [ %157, %156 ], [ %122, %129 ], [ %122, %125 ]
  %161 = phi i8 [ 1, %153 ], [ 0, %150 ], [ 0, %156 ], [ 0, %129 ], [ 0, %125 ]
  %162 = load %"class.blink::Hyphenation"*, %"class.blink::Hyphenation"** %45, align 8
  %163 = icmp eq %"class.blink::Hyphenation"* %162, null
  br i1 %163, label %323, label %164, !prof !5

164:                                              ; preds = %159
  %165 = icmp eq i8 %71, 0
  br i1 %165, label %166, label %188

166:                                              ; preds = %164
  %167 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %46, align 8
  %168 = icmp eq %"class.blink::ShapeResult"* %167, null
  br i1 %168, label %169, label %172

169:                                              ; preds = %166
  call void @_ZN5blink18NGInlineItemResult11ShapeHyphenEv(%"struct.blink::NGInlineItemResult"* %1) #16
  %170 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %46, align 8
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  br label %172

172:                                              ; preds = %166, %169
  %173 = phi %"class.WTF::StringImpl"* [ %127, %166 ], [ %171, %169 ]
  %174 = phi %"class.blink::ShapeResult"* [ %167, %166 ], [ %170, %169 ]
  %175 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %174, i64 0, i32 1
  %176 = load float, float* %175, align 4
  %177 = fmul float %176, 6.400000e+01
  %178 = call float @llvm.ceil.f32(float %177) #16
  %179 = fcmp ult float %178, 0xC1E0000000000000
  %180 = fcmp ugt float %178, 0x41DFFFFFE0000000
  %181 = fcmp ogt float %178, 0xC1E0000000000000
  %182 = select i1 %181, float %178, float 0xC1E0000000000000
  %183 = fptosi float %182 to i32
  %184 = select i1 %179, i32 0, i32 2147483647
  %185 = select i1 %180, i32 %184, i32 %183
  %186 = icmp sgt i32 %185, 0
  %187 = select i1 %186, i32 %185, i32 0
  br label %188

188:                                              ; preds = %164, %172
  %189 = phi %"class.WTF::StringImpl"* [ %127, %164 ], [ %173, %172 ]
  %190 = phi i8 [ %71, %164 ], [ 1, %172 ]
  %191 = phi i32 [ %70, %164 ], [ %187, %172 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #16
  %192 = icmp eq %"class.WTF::StringImpl"* %189, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 24, i1 false)
  br i1 %192, label %208, label %193

193:                                              ; preds = %188
  %194 = sub i32 %122, %67
  store i32 %194, i32* %50, align 8
  store %"class.WTF::StringImpl"* %189, %"class.WTF::StringImpl"** %48, align 8
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 1
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 1
  br i1 %198, label %204, label %200

200:                                              ; preds = %193
  %201 = bitcast %"class.WTF::StringImpl"* %199 to i8*
  %202 = zext i32 %67 to i64
  %203 = getelementptr inbounds i8, i8* %201, i64 %202
  store i8* %203, i8** %49, align 8
  br label %210

204:                                              ; preds = %193
  %205 = bitcast %"class.WTF::StringImpl"* %199 to i16*
  %206 = zext i32 %67 to i64
  %207 = getelementptr inbounds i16, i16* %205, i64 %206
  store i16* %207, i16** %51, align 8
  br label %210

208:                                              ; preds = %188
  store i32 0, i32* %50, align 8
  store i8* null, i8** %49, align 8
  %209 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %209, i64* %52, align 8
  br label %210

210:                                              ; preds = %200, %204, %208
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %53) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 48, i1 false)
  %211 = load %"class.blink::Hyphenation"*, %"class.blink::Hyphenation"** %45, align 8
  %212 = bitcast %"class.blink::Hyphenation"* %211 to void (%"class.WTF::Vector.1982"*, %"class.blink::Hyphenation"*, %"class.WTF::StringView"*)***
  %213 = load void (%"class.WTF::Vector.1982"*, %"class.blink::Hyphenation"*, %"class.WTF::StringView"*)**, void (%"class.WTF::Vector.1982"*, %"class.blink::Hyphenation"*, %"class.WTF::StringView"*)*** %212, align 8
  %214 = getelementptr inbounds void (%"class.WTF::Vector.1982"*, %"class.blink::Hyphenation"*, %"class.WTF::StringView"*)*, void (%"class.WTF::Vector.1982"*, %"class.blink::Hyphenation"*, %"class.WTF::StringView"*)** %213, i64 4
  %215 = load void (%"class.WTF::Vector.1982"*, %"class.blink::Hyphenation"*, %"class.WTF::StringView"*)*, void (%"class.WTF::Vector.1982"*, %"class.blink::Hyphenation"*, %"class.WTF::StringView"*)** %214, align 8
  call void %215(%"class.WTF::Vector.1982"* nonnull sret %7, %"class.blink::Hyphenation"* %211, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #16
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #16
  store i32 0, i32* %8, align 4
  %216 = load i32, i32* %55, align 4
  %217 = load i32, i32* %56, align 8
  %218 = icmp eq i32 %216, %217
  br i1 %218, label %225, label %219, !prof !2

219:                                              ; preds = %210
  %220 = load i32*, i32** %57, align 8
  %221 = zext i32 %216 to i64
  %222 = getelementptr inbounds i32, i32* %220, i64 %221
  store i32 0, i32* %222, align 4
  %223 = load i32, i32* %55, align 4
  %224 = add i32 %223, 1
  store i32 %224, i32* %55, align 4
  br label %227

225:                                              ; preds = %210
  call void @_ZN3WTF6VectorIjLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_(%"class.WTF::Vector.1982"* nonnull %7, i32* nonnull dereferenceable(4) %8) #16
  %226 = load i32, i32* %55, align 4
  br label %227

227:                                              ; preds = %219, %225
  %228 = phi i32 [ %224, %219 ], [ %226, %225 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #16
  %229 = load i32*, i32** %57, align 8
  %230 = zext i32 %228 to i64
  %231 = getelementptr inbounds i32, i32* %229, i64 %230
  %232 = icmp eq i32 %228, 0
  br i1 %232, label %233, label %236

233:                                              ; preds = %227
  %234 = fcmp ogt float %65, 0.000000e+00
  %235 = select i1 %234, float %65, float 0.000000e+00
  br label %282

236:                                              ; preds = %227
  %237 = icmp slt i32 %191, 0
  %238 = select i1 %237, i32 -2147483648, i32 2147483647
  %239 = load i32, i32* %229, align 4
  %240 = add i32 %239, %67
  %241 = load i32, i32* %58, align 8
  %242 = sub i32 %240, %241
  %243 = call float @_ZNK5blink11ShapeResult23CachedPositionForOffsetEj(%"class.blink::ShapeResult"* %3, i32 %242) #16
  %244 = sub i32 %122, %241
  %245 = call float @_ZNK5blink11ShapeResult23CachedPositionForOffsetEj(%"class.blink::ShapeResult"* %3, i32 %244) #16
  %246 = load i32, i32* %59, align 8
  %247 = and i32 %246, 536870912
  %248 = icmp eq i32 %247, 0
  %249 = fsub float %245, %243
  %250 = fsub float %243, %245
  %251 = select i1 %248, float %249, float %250
  %252 = fmul float %251, 6.400000e+01
  %253 = call float @llvm.ceil.f32(float %252) #16
  %254 = fcmp ult float %253, 0xC1E0000000000000
  %255 = fcmp ugt float %253, 0x41DFFFFFE0000000
  %256 = fcmp ogt float %253, 0xC1E0000000000000
  %257 = select i1 %256, float %253, float 0xC1E0000000000000
  %258 = fptosi float %257 to i32
  %259 = select i1 %254, i32 0, i32 2147483647
  %260 = select i1 %255, i32 %259, i32 %258
  %261 = icmp eq i8 %161, 0
  br i1 %261, label %267, label %262

262:                                              ; preds = %236
  %263 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %260, i32 %191) #16
  %264 = extractvalue { i32, i1 } %263, 1
  %265 = extractvalue { i32, i1 } %263, 0
  %266 = select i1 %264, i32 %238, i32 %265, !prof !2
  br label %267

267:                                              ; preds = %262, %236
  %268 = phi i32 [ %260, %236 ], [ %266, %262 ]
  %269 = icmp sgt i32 %268, 0
  %270 = select i1 %269, i32 %268, i32 0
  %271 = getelementptr inbounds i32, i32* %229, i64 1
  %272 = icmp eq i32 %228, 1
  br i1 %272, label %273, label %288

273:                                              ; preds = %288, %267
  %274 = phi i32 [ %270, %267 ], [ %320, %288 ]
  %275 = load i32, i32* %55, align 4
  %276 = sitofp i32 %274 to float
  %277 = fmul float %276, 1.562500e-02
  %278 = fcmp olt float %277, %65
  %279 = select i1 %278, float %65, float %277
  %280 = icmp eq i32 %275, 0
  br i1 %280, label %282, label %281, !prof !2

281:                                              ; preds = %273
  store i32 0, i32* %55, align 4
  br label %282

282:                                              ; preds = %233, %281, %273
  %283 = phi float [ %235, %233 ], [ %279, %281 ], [ %279, %273 ]
  %284 = load i32*, i32** %57, align 8
  %285 = icmp eq i32* %284, %61
  br i1 %285, label %287, label %286, !prof !5

286:                                              ; preds = %282
  call void @_ZN3WTF12VectorBufferIjLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.1983"* nonnull %62, i32* %284) #16
  br label %287

287:                                              ; preds = %282, %286
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %53) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #16
  br label %384

288:                                              ; preds = %267, %288
  %289 = phi i32 [ %320, %288 ], [ %270, %267 ]
  %290 = phi i32* [ %321, %288 ], [ %271, %267 ]
  %291 = phi i32 [ %292, %288 ], [ %239, %267 ]
  %292 = load i32, i32* %290, align 4
  %293 = add i32 %292, %67
  %294 = add i32 %291, %67
  %295 = load i32, i32* %58, align 8
  %296 = sub i32 %293, %295
  %297 = call float @_ZNK5blink11ShapeResult23CachedPositionForOffsetEj(%"class.blink::ShapeResult"* %3, i32 %296) #16
  %298 = sub i32 %294, %295
  %299 = call float @_ZNK5blink11ShapeResult23CachedPositionForOffsetEj(%"class.blink::ShapeResult"* %3, i32 %298) #16
  %300 = load i32, i32* %59, align 8
  %301 = and i32 %300, 536870912
  %302 = icmp eq i32 %301, 0
  %303 = fsub float %299, %297
  %304 = fsub float %297, %299
  %305 = select i1 %302, float %303, float %304
  %306 = fmul float %305, 6.400000e+01
  %307 = call float @llvm.ceil.f32(float %306) #16
  %308 = fcmp ult float %307, 0xC1E0000000000000
  %309 = fcmp ugt float %307, 0x41DFFFFFE0000000
  %310 = fcmp ogt float %307, 0xC1E0000000000000
  %311 = select i1 %310, float %307, float 0xC1E0000000000000
  %312 = fptosi float %311 to i32
  %313 = select i1 %308, i32 0, i32 2147483647
  %314 = select i1 %309, i32 %313, i32 %312
  %315 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %314, i32 %191) #16
  %316 = extractvalue { i32, i1 } %315, 1
  %317 = extractvalue { i32, i1 } %315, 0
  %318 = select i1 %316, i32 %238, i32 %317, !prof !2
  %319 = icmp slt i32 %318, %289
  %320 = select i1 %319, i32 %289, i32 %318
  %321 = getelementptr inbounds i32, i32* %290, i64 1
  %322 = icmp eq i32* %321, %231
  br i1 %322, label %273, label %288, !llvm.loop !21

323:                                              ; preds = %159
  %324 = load i32, i32* %58, align 8
  %325 = sub i32 %67, %324
  %326 = call float @_ZNK5blink11ShapeResult23CachedPositionForOffsetEj(%"class.blink::ShapeResult"* %3, i32 %325) #16
  %327 = sub i32 %122, %324
  %328 = call float @_ZNK5blink11ShapeResult23CachedPositionForOffsetEj(%"class.blink::ShapeResult"* %3, i32 %327) #16
  %329 = load i32, i32* %59, align 8
  %330 = and i32 %329, 536870912
  %331 = icmp eq i32 %330, 0
  %332 = fsub float %328, %326
  %333 = fsub float %326, %328
  %334 = select i1 %331, float %332, float %333
  %335 = icmp eq i8 %161, 0
  br i1 %335, label %378, label %336

336:                                              ; preds = %323
  %337 = icmp eq i8 %71, 0
  br i1 %337, label %338, label %358

338:                                              ; preds = %336
  %339 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %46, align 8
  %340 = icmp eq %"class.blink::ShapeResult"* %339, null
  br i1 %340, label %341, label %343

341:                                              ; preds = %338
  call void @_ZN5blink18NGInlineItemResult11ShapeHyphenEv(%"struct.blink::NGInlineItemResult"* %1) #16
  %342 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %46, align 8
  br label %343

343:                                              ; preds = %338, %341
  %344 = phi %"class.blink::ShapeResult"* [ %339, %338 ], [ %342, %341 ]
  %345 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %344, i64 0, i32 1
  %346 = load float, float* %345, align 4
  %347 = fmul float %346, 6.400000e+01
  %348 = call float @llvm.ceil.f32(float %347) #16
  %349 = fcmp ult float %348, 0xC1E0000000000000
  %350 = fcmp ugt float %348, 0x41DFFFFFE0000000
  %351 = fcmp ogt float %348, 0xC1E0000000000000
  %352 = select i1 %351, float %348, float 0xC1E0000000000000
  %353 = fptosi float %352 to i32
  %354 = select i1 %349, i32 0, i32 2147483647
  %355 = select i1 %350, i32 %354, i32 %353
  %356 = icmp sgt i32 %355, 0
  %357 = select i1 %356, i32 %355, i32 0
  br label %358

358:                                              ; preds = %336, %343
  %359 = phi i8 [ %71, %336 ], [ 1, %343 ]
  %360 = phi i32 [ %70, %336 ], [ %357, %343 ]
  %361 = fmul float %334, 6.400000e+01
  %362 = call float @llvm.ceil.f32(float %361) #16
  %363 = fcmp ult float %362, 0xC1E0000000000000
  %364 = fcmp ugt float %362, 0x41DFFFFFE0000000
  %365 = fcmp ogt float %362, 0xC1E0000000000000
  %366 = select i1 %365, float %362, float 0xC1E0000000000000
  %367 = fptosi float %366 to i32
  %368 = select i1 %363, i32 0, i32 2147483647
  %369 = select i1 %364, i32 %368, i32 %367
  %370 = icmp slt i32 %360, 0
  %371 = select i1 %370, i32 -2147483648, i32 2147483647
  %372 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %369, i32 %360) #16
  %373 = extractvalue { i32, i1 } %372, 1
  %374 = extractvalue { i32, i1 } %372, 0
  %375 = select i1 %373, i32 %371, i32 %374, !prof !2
  %376 = sitofp i32 %375 to float
  %377 = fmul float %376, 1.562500e-02
  br label %378

378:                                              ; preds = %323, %358
  %379 = phi float [ %334, %323 ], [ %377, %358 ]
  %380 = phi i8 [ %71, %323 ], [ %359, %358 ]
  %381 = phi i32 [ %70, %323 ], [ %360, %358 ]
  %382 = fcmp olt float %379, %65
  %383 = select i1 %382, float %65, float %379
  br label %384

384:                                              ; preds = %378, %287
  %385 = phi float [ %383, %378 ], [ %283, %287 ]
  %386 = phi i8 [ %380, %378 ], [ %190, %287 ]
  %387 = phi i32 [ %381, %378 ], [ %191, %287 ]
  %388 = load i32, i32* %36, align 4
  %389 = icmp ult i32 %160, %388
  br i1 %389, label %390, label %402

390:                                              ; preds = %384
  %391 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %392 = icmp eq %"class.WTF::StringImpl"* %391, null
  %393 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %391, i64 0, i32 1
  %394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %391, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %391, i64 1
  %396 = bitcast %"class.WTF::StringImpl"* %395 to i8*
  %397 = bitcast %"class.WTF::StringImpl"* %395 to i16*
  %398 = zext i32 %160 to i64
  %399 = zext i32 %388 to i64
  br label %405

400:                                              ; preds = %427
  %401 = trunc i64 %426 to i32
  br label %402

402:                                              ; preds = %400, %384
  %403 = phi i32 [ %160, %384 ], [ %401, %400 ]
  %404 = add i32 %403, 1
  br label %433

405:                                              ; preds = %390, %427
  %406 = phi i64 [ %398, %390 ], [ %426, %427 ]
  br i1 %392, label %422, label %407

407:                                              ; preds = %405
  %408 = load i32, i32* %393, align 4
  %409 = zext i32 %408 to i64
  %410 = icmp ult i64 %406, %409
  br i1 %410, label %411, label %422

411:                                              ; preds = %407
  %412 = load atomic i32, i32* %394 monotonic, align 4
  %413 = and i32 %412, 1
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %419, label %415

415:                                              ; preds = %411
  %416 = getelementptr inbounds i8, i8* %396, i64 %406
  %417 = load i8, i8* %416, align 1
  %418 = zext i8 %417 to i16
  br label %424

419:                                              ; preds = %411
  %420 = getelementptr inbounds i16, i16* %397, i64 %406
  %421 = load i16, i16* %420, align 2
  br label %424

422:                                              ; preds = %407, %405
  %423 = add nuw nsw i64 %406, 1
  br label %429

424:                                              ; preds = %419, %415
  %425 = phi i16 [ %418, %415 ], [ %421, %419 ]
  %426 = add nuw nsw i64 %406, 1
  switch i16 %425, label %429 [
    i16 32, label %427
    i16 9, label %427
  ]

427:                                              ; preds = %424, %424
  %428 = icmp ult i64 %426, %399
  br i1 %428, label %405, label %400

429:                                              ; preds = %424, %422
  %430 = phi i64 [ %423, %422 ], [ %426, %424 ]
  %431 = trunc i64 %406 to i32
  %432 = trunc i64 %430 to i32
  br label %433

433:                                              ; preds = %429, %402, %156
  %434 = phi i32 [ %123, %156 ], [ %388, %402 ], [ %388, %429 ]
  %435 = phi float [ %65, %156 ], [ %385, %402 ], [ %385, %429 ]
  %436 = phi i8 [ %71, %156 ], [ %386, %402 ], [ %386, %429 ]
  %437 = phi i32 [ %70, %156 ], [ %387, %402 ], [ %387, %429 ]
  %438 = phi i32 [ %69, %156 ], [ %122, %402 ], [ %122, %429 ]
  %439 = phi i32 [ %157, %156 ], [ %404, %402 ], [ %432, %429 ]
  %440 = phi i32 [ %67, %156 ], [ %403, %402 ], [ %431, %429 ]
  %441 = icmp ult i32 %440, %434
  br i1 %441, label %64, label %442

442:                                              ; preds = %433, %121, %33
  %443 = phi float [ 0.000000e+00, %33 ], [ %435, %433 ], [ %65, %121 ]
  %444 = phi i32 [ 0, %33 ], [ %438, %433 ], [ %69, %121 ]
  %445 = icmp eq i8 %34, 0
  br i1 %445, label %448, label %446

446:                                              ; preds = %442
  %447 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 7
  store i32 %35, i32* %447, align 4
  br label %448

448:                                              ; preds = %442, %446
  %449 = icmp eq i32 %444, 0
  br i1 %449, label %490, label %450

450:                                              ; preds = %448
  %451 = load i32, i32* %9, align 4
  %452 = add i32 %451, 1
  %453 = icmp ult i32 %444, %452
  %454 = select i1 %453, i32 %452, i32 %444
  %455 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 2, i32 1
  store i32 %454, i32* %455, align 4
  %456 = fmul float %443, 6.400000e+01
  %457 = call float @llvm.ceil.f32(float %456) #16
  %458 = fcmp ult float %457, 0xC1E0000000000000
  %459 = fcmp ugt float %457, 0x41DFFFFFE0000000
  %460 = fcmp ogt float %457, 0xC1E0000000000000
  %461 = select i1 %460, float %457, float 0xC1E0000000000000
  %462 = fptosi float %461 to i32
  %463 = select i1 %458, i32 0, i32 2147483647
  %464 = select i1 %459, i32 %463, i32 %462
  %465 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 4, i32 0
  store i32 %464, i32* %465, align 4
  %466 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 16
  store i8 1, i8* %466, align 2
  %467 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 3
  store i32 2, i32* %467, align 4
  %468 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  %469 = load i32, i32* %468, align 4
  %470 = load i32, i32* %465, align 4
  %471 = icmp slt i32 %470, 0
  %472 = select i1 %471, i32 -2147483648, i32 2147483647
  %473 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %469, i32 %470) #16
  %474 = extractvalue { i32, i1 } %473, 1
  %475 = extractvalue { i32, i1 } %473, 0
  %476 = select i1 %474, i32 %472, i32 %475, !prof !2
  store i32 %476, i32* %468, align 4
  %477 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 0
  store i32 2, i32* %477, align 8
  store %"class.blink::NGInlineItem"* %2, %"class.blink::NGInlineItem"** %19, align 8
  %478 = load i32, i32* %455, align 4
  %479 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  store i32 %478, i32* %479, align 8
  %480 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 1
  %481 = load i32, i32* %480, align 8
  %482 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  store i32 %481, i32* %482, align 4
  %483 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 0
  %484 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %483, align 8
  %485 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %484, i64 0, i32 1
  %486 = load i32, i32* %485, align 4
  %487 = icmp eq i32 %478, %486
  br i1 %487, label %488, label %490

488:                                              ; preds = %450
  %489 = add i32 %481, 1
  store i32 %489, i32* %482, align 4
  br label %490

490:                                              ; preds = %448, %450, %488, %18, %14
  %491 = phi i1 [ false, %14 ], [ false, %18 ], [ false, %448 ], [ true, %450 ], [ true, %488 ]
  ret i1 %491
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink13NGLineBreaker9BreakTextEPNS_18NGInlineItemResultERKNS_12NGInlineItemERKNS_11ShapeResultENS_10LayoutUnitES9_PNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, %"struct.blink::NGInlineItemResult"*, %"class.blink::NGInlineItem"* dereferenceable(32), %"class.blink::ShapeResult"* dereferenceable(72), i32, i32, %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %struct.ShapeCallbackContext, align 8
  %10 = alloca %"class.blink::ShapingLineBreaker", align 8
  %11 = alloca %"struct.blink::ShapingLineBreaker::Result", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 2, i32 0
  %15 = bitcast %struct.ShapeCallbackContext* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #16
  %16 = getelementptr inbounds %struct.ShapeCallbackContext, %struct.ShapeCallbackContext* %9, i64 0, i32 0
  %17 = getelementptr inbounds %struct.ShapeCallbackContext, %struct.ShapeCallbackContext* %9, i64 0, i32 1
  store %"class.blink::NGLineBreaker"* %0, %"class.blink::NGLineBreaker"** %16, align 8
  store %"class.blink::NGInlineItem"* %2, %"class.blink::NGInlineItem"** %17, align 8
  %18 = bitcast %"class.blink::ShapingLineBreaker"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 48, i1 false)
  %19 = icmp eq %"class.blink::ShapeResult"* %3, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %21) #16
  br label %22

22:                                               ; preds = %7, %20
  %23 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27
  %24 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 32
  %25 = load %"class.blink::Hyphenation"*, %"class.blink::Hyphenation"** %24, align 8
  call void @_ZN5blink18ShapingLineBreakerC1E13scoped_refptrIKNS_11ShapeResultEEPKNS_21LazyLineBreakIteratorEPKNS_11HyphenationEPFS1_IS2_EPvjjESC_(%"class.blink::ShapingLineBreaker"* nonnull %10, %"class.blink::ShapeResult"* %3, %"class.blink::LazyLineBreakIterator"* %23, %"class.blink::Hyphenation"* %25, %"class.blink::ShapeResult"* (i8*, i32, i32)* nonnull @"_ZZN5blink13NGLineBreaker9BreakTextEPNS_18NGInlineItemResultERKNS_12NGInlineItemERKNS_11ShapeResultENS_10LayoutUnitES9_PNS_10NGLineInfoEEN3$_08__invokeEPvjj", i8* nonnull %15) #16
  %26 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 15
  %27 = load i8, i8* %26, align 2, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::ShapingLineBreaker", %"class.blink::ShapingLineBreaker"* %10, i64 0, i32 5
  store i8 0, i8* %30, align 8
  br label %31

31:                                               ; preds = %22, %29
  %32 = load i32, i32* %14, align 4
  %33 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %6, i64 0, i32 8
  %34 = load i32, i32* %33, align 8
  %35 = icmp ne i32 %32, %34
  %36 = zext i1 %35 to i32
  %37 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_124NeedsAccurateEndPositionERKNS_10NGLineInfoERKNS_12NGInlineItemE(%"class.blink::NGLineInfo"* dereferenceable(5208) %6, %"class.blink::NGInlineItem"* dereferenceable(32) %2)
  %38 = or i32 %36, 2
  %39 = select i1 %37, i32 %36, i32 %38
  %40 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 13
  %41 = load i8, i8* %40, align 8, !range !3
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 14
  %45 = load i8, i8* %44, align 1, !range !3
  %46 = icmp eq i8 %45, 0
  %47 = or i32 %39, 4
  %48 = select i1 %46, i32 %47, i32 %39
  br label %49

49:                                               ; preds = %43, %31
  %50 = phi i32 [ %39, %31 ], [ %48, %43 ]
  %51 = getelementptr inbounds %"struct.blink::ShapingLineBreaker::Result", %"struct.blink::ShapingLineBreaker::Result"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 16, i1 false)
  store i8 0, i8* %51, align 8
  %52 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  %53 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  %54 = getelementptr inbounds %"struct.blink::ShapingLineBreaker::Result", %"struct.blink::ShapingLineBreaker::Result"* %11, i64 0, i32 1
  %55 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  %56 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  %57 = bitcast %"class.logging::CheckError"* %13 to i8*
  %58 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 4, i32 0
  %59 = getelementptr inbounds %"struct.blink::ShapingLineBreaker::Result", %"struct.blink::ShapingLineBreaker::Result"* %11, i64 0, i32 4
  %60 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %6, i64 0, i32 2
  %61 = bitcast %"class.WTF::Vector.1970"* %60 to i64*
  %62 = ptrtoint %"struct.blink::NGInlineItemResult"* %1 to i64
  %63 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %64 = bitcast i8* %63 to i64*
  %65 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 7, i32 0, i32 0
  %66 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 34
  %67 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 8, i32 0
  %68 = getelementptr inbounds %"struct.blink::ShapingLineBreaker::Result", %"struct.blink::ShapingLineBreaker::Result"* %11, i64 0, i32 3
  %69 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0
  %70 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %5, i32 64) #16
  %71 = extractvalue { i32, i1 } %70, 1
  %72 = extractvalue { i32, i1 } %70, 0
  %73 = select i1 %71, i32 2147483647, i32 %72
  %74 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %2, i64 0, i32 1
  %75 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 2, i32 1
  %76 = load i32, i32* %14, align 4
  %77 = icmp sgt i32 %4, 0
  %78 = select i1 %77, i32 %4, i32 0
  %79 = call %"class.blink::ShapeResultView"* @_ZN5blink18ShapingLineBreaker9ShapeLineEjNS_10LayoutUnitEjPNS0_6ResultE(%"class.blink::ShapingLineBreaker"* nonnull %10, i32 %76, i32 %78, i32 %50, %"struct.blink::ShapingLineBreaker::Result"* nonnull %11) #16
  %80 = icmp eq %"class.blink::ShapeResultView"* %79, null
  br i1 %80, label %335, label %81

81:                                               ; preds = %49, %211
  %82 = phi %"class.blink::ShapeResultView"* [ %215, %211 ], [ %79, %49 ]
  %83 = phi i32 [ %181, %211 ], [ %4, %49 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %53, align 8
  %84 = load i32, i32* %54, align 8
  %85 = load i32, i32* %14, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55)
  %86 = icmp ugt i32 %84, %85
  br i1 %86, label %87, label %88

87:                                               ; preds = %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55)
  store i8* null, i8** %53, align 8
  br label %95

88:                                               ; preds = %81
  %89 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %84) #16
  %90 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %85) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %8, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i8* %89, i8* %90) #16
  %91 = load i8*, i8** %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55)
  store i8* %91, i8** %53, align 8
  %92 = icmp eq i8* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %88
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), i32 969, %"class.logging::CheckOpResult"* nonnull %12) #16
  %94 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #16
  br label %95

95:                                               ; preds = %87, %88, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #16
  %96 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %82, i64 0, i32 6
  %97 = load float, float* %96, align 8
  %98 = fmul float %97, 6.400000e+01
  %99 = call float @llvm.ceil.f32(float %98) #16
  %100 = fcmp ult float %99, 0xC1E0000000000000
  %101 = fcmp ugt float %99, 0x41DFFFFFE0000000
  %102 = fcmp ogt float %99, 0xC1E0000000000000
  %103 = select i1 %102, float %99, float 0xC1E0000000000000
  %104 = fptosi float %103 to i32
  %105 = select i1 %100, i32 0, i32 2147483647
  %106 = select i1 %101, i32 %105, i32 %104
  %107 = icmp sgt i32 %106, 0
  %108 = select i1 %107, i32 %106, i32 0
  store i32 %108, i32* %58, align 4
  %109 = load i8, i8* %59, align 2, !range !3
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %155, label %111, !prof !5

111:                                              ; preds = %95
  %112 = load i64, i64* %61, align 8
  %113 = sub i64 %62, %112
  %114 = sdiv exact i64 %113, 160
  %115 = shl i64 %114, 32
  %116 = or i64 %115, 1
  store i64 %116, i64* %64, align 8
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %119, label %120

119:                                              ; preds = %111
  call void @_ZN5blink18NGInlineItemResult11ShapeHyphenEv(%"struct.blink::NGInlineItemResult"* %1) #16
  store i8 1, i8* %66, align 8
  br label %120

120:                                              ; preds = %111, %119
  %121 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %67, align 8
  %122 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %121, i64 0, i32 1
  %123 = load float, float* %122, align 4
  %124 = fmul float %123, 6.400000e+01
  %125 = call float @llvm.ceil.f32(float %124) #16
  %126 = fcmp ult float %125, 0xC1E0000000000000
  %127 = fcmp ugt float %125, 0x41DFFFFFE0000000
  %128 = fcmp ogt float %125, 0xC1E0000000000000
  %129 = select i1 %128, float %125, float 0xC1E0000000000000
  %130 = fptosi float %129 to i32
  %131 = select i1 %126, i32 0, i32 2147483647
  %132 = select i1 %127, i32 %131, i32 %130
  %133 = icmp sgt i32 %132, 0
  %134 = select i1 %133, i32 %132, i32 0
  %135 = load i32, i32* %58, align 4
  %136 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %135, i32 %134) #16
  %137 = extractvalue { i32, i1 } %136, 1
  %138 = extractvalue { i32, i1 } %136, 0
  %139 = select i1 %137, i32 2147483647, i32 %138, !prof !2
  store i32 %139, i32* %58, align 4
  %140 = load i8, i8* %68, align 1, !range !3
  %141 = icmp eq i8 %140, 0
  %142 = icmp sle i32 %108, %83
  %143 = and i1 %142, %141
  br i1 %143, label %144, label %155

144:                                              ; preds = %120
  %145 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %5, i32 %108) #16
  %146 = extractvalue { i32, i1 } %145, 1
  %147 = extractvalue { i32, i1 } %145, 0
  %148 = select i1 %146, i32 -2147483648, i32 %147, !prof !2
  %149 = icmp ult i32 %148, %134
  br i1 %149, label %150, label %155

150:                                              ; preds = %144
  %151 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %83, i32 %134) #16
  %152 = load i8, i8* %63, align 4, !range !3
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %154, label %178, !prof !2

154:                                              ; preds = %150
  call void @llvm.trap() #16
  unreachable

155:                                              ; preds = %95, %144, %120
  %156 = phi i32 [ %139, %120 ], [ %139, %144 ], [ %108, %95 ]
  %157 = ptrtoint %"class.blink::ShapeResultView"* %82 to i64
  %158 = load i32, i32* %54, align 8
  store i32 %158, i32* %75, align 4
  %159 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %160 = bitcast %"struct.blink::ShapingLineBreaker::Result"* %11 to i64*
  %161 = bitcast i8* %159 to i64*
  %162 = load i64, i64* %160, align 8
  store i64 %162, i64* %161, align 4
  %163 = getelementptr inbounds %"struct.blink::ShapingLineBreaker::Result", %"struct.blink::ShapingLineBreaker::Result"* %11, i64 0, i32 2
  %164 = load i8, i8* %163, align 4, !range !3
  %165 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 17
  store i8 %164, i8* %165, align 1
  %166 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 6
  %167 = bitcast %class.scoped_refptr.1909* %166 to i64*
  %168 = getelementptr inbounds %class.scoped_refptr.1909, %class.scoped_refptr.1909* %166, i64 0, i32 0
  %169 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %168, align 8
  store i64 %157, i64* %167, align 8
  %170 = icmp eq %"class.blink::ShapeResultView"* %169, null
  br i1 %170, label %217, label %171

171:                                              ; preds = %155
  %172 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %169, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %172) #16
  %173 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %169, i64 0, i32 0, i32 0, i32 0, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %217

176:                                              ; preds = %171
  call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %169) #16
  %177 = bitcast %"class.blink::ShapeResultView"* %169 to i8*
  call void @free(i8* %177) #16
  br label %217

178:                                              ; preds = %150
  %179 = extractvalue { i32, i1 } %151, 1
  %180 = extractvalue { i32, i1 } %151, 0
  %181 = select i1 %179, i32 -2147483648, i32 %180, !prof !2
  %182 = load i32, i32* %69, align 4
  %183 = call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %60, i32 %182) #16
  %184 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %183, i64 0, i32 8, i32 0
  %185 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %184, align 8
  %186 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %185, i64 0, i32 1
  %187 = load float, float* %186, align 4
  %188 = fmul float %187, 6.400000e+01
  %189 = call float @llvm.ceil.f32(float %188) #16
  %190 = fcmp ult float %189, 0xC1E0000000000000
  %191 = fcmp ugt float %189, 0x41DFFFFFE0000000
  %192 = fcmp ogt float %189, 0xC1E0000000000000
  %193 = select i1 %192, float %189, float 0xC1E0000000000000
  %194 = fptosi float %193 to i32
  %195 = select i1 %190, i32 0, i32 2147483647
  %196 = select i1 %191, i32 %195, i32 %194
  %197 = icmp sgt i32 %196, 0
  %198 = select i1 %197, i32 %196, i32 0
  %199 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %183, i64 0, i32 4, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %200, i32 %198) #16
  %202 = extractvalue { i32, i1 } %201, 1
  %203 = extractvalue { i32, i1 } %201, 0
  %204 = select i1 %202, i32 -2147483648, i32 %203, !prof !2
  store i32 %204, i32* %199, align 4
  store i8 0, i8* %63, align 4
  %205 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %82, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %205) #16
  %206 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %82, i64 0, i32 0, i32 0, i32 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %211

209:                                              ; preds = %178
  call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %82) #16
  %210 = bitcast %"class.blink::ShapeResultView"* %82 to i8*
  call void @free(i8* %210) #16
  br label %211

211:                                              ; preds = %178, %209
  %212 = load i32, i32* %14, align 4
  %213 = icmp sgt i32 %181, 0
  %214 = select i1 %213, i32 %181, i32 0
  %215 = call %"class.blink::ShapeResultView"* @_ZN5blink18ShapingLineBreaker9ShapeLineEjNS_10LayoutUnitEjPNS0_6ResultE(%"class.blink::ShapingLineBreaker"* nonnull %10, i32 %212, i32 %214, i32 %50, %"struct.blink::ShapingLineBreaker::Result"* nonnull %11) #16
  %216 = icmp eq %"class.blink::ShapeResultView"* %215, null
  br i1 %216, label %335, label %81

217:                                              ; preds = %155, %171, %176
  %218 = load i32, i32* %75, align 4
  %219 = load i32, i32* %74, align 4
  %220 = icmp ult i32 %218, %219
  br i1 %220, label %221, label %229

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 16
  store i8 1, i8* %222, align 2
  %223 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 7
  %224 = load i32, i32* %223, align 4
  %225 = icmp eq i32 %224, 2
  %226 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 3
  br i1 %225, label %227, label %228, !prof !2

227:                                              ; preds = %221
  store i32 2, i32* %226, align 4
  br label %329

228:                                              ; preds = %221
  store i32 1, i32* %226, align 4
  br label %329

229:                                              ; preds = %217
  %230 = add nsw i32 %218, 1
  %231 = getelementptr inbounds %"class.blink::LazyLineBreakIterator", %"class.blink::LazyLineBreakIterator"* %23, i64 0, i32 0, i32 0, i32 0
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %233, label %237, label %234

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 1
  %236 = load i32, i32* %235, align 4
  br label %237

237:                                              ; preds = %229, %234
  %238 = phi i32 [ %236, %234 ], [ 0, %229 ]
  %239 = icmp slt i32 %238, %230
  %240 = select i1 %239, i32 %238, i32 %230
  %241 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27, i32 7
  %242 = load i32, i32* %241, align 4
  %243 = call i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeEi(%"class.blink::LazyLineBreakIterator"* %23, i32 %218, i32 %242, i32 %240) #16
  %244 = icmp eq i32 %243, %218
  %245 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 16
  %246 = zext i1 %244 to i8
  store i8 %246, i8* %245, align 2
  br i1 %244, label %327, label %247

247:                                              ; preds = %237
  %248 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %2, i64 0, i32 4
  %249 = load i32, i32* %248, align 8
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %327

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 22, i32 0, i32 0
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %252, align 8
  %254 = icmp eq %"class.WTF::StringImpl"* %253, null
  br i1 %254, label %327, label %255

255:                                              ; preds = %251
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 1
  %257 = load i32, i32* %256, align 4
  %258 = load i32, i32* %75, align 4
  %259 = icmp ugt i32 %257, %258
  br i1 %259, label %260, label %327

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load atomic i32, i32* %261 monotonic, align 4
  %263 = and i32 %262, 1
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %327

265:                                              ; preds = %260
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 1
  %267 = bitcast %"class.WTF::StringImpl"* %266 to i16*
  %268 = zext i32 %258 to i64
  %269 = getelementptr inbounds i16, i16* %267, i64 %268
  %270 = load i16, i16* %269, align 2
  %271 = icmp eq i16 %270, -4
  br i1 %271, label %272, label %327

272:                                              ; preds = %265
  %273 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 21
  %274 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %273, align 8
  %275 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 0
  %276 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %275, align 8
  %277 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %274, i64 0, i32 1, i32 0, i32 0, i32 0
  %278 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %277, align 8
  %279 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %274, i64 0, i32 1, i32 0, i32 0, i32 2
  %280 = load i32, i32* %279, align 4
  %281 = zext i32 %280 to i64
  %282 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %278, i64 %281
  br label %283

283:                                              ; preds = %316, %272
  %284 = phi %"class.blink::NGInlineItem"* [ %276, %272 ], [ %285, %316 ]
  %285 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %284, i64 1
  %286 = icmp eq %"class.blink::NGInlineItem"* %285, %282
  br i1 %286, label %327, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %284, i64 1, i32 4
  %289 = load i32, i32* %288, align 8
  %290 = icmp eq i32 %289, 2
  br i1 %290, label %291, label %316

291:                                              ; preds = %287
  %292 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 8
  %294 = icmp ugt i32 %257, %293
  br i1 %294, label %295, label %312

295:                                              ; preds = %291
  %296 = load atomic i32, i32* %261 monotonic, align 4
  %297 = and i32 %296, 1
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %305, label %299

299:                                              ; preds = %295
  %300 = bitcast %"class.WTF::StringImpl"* %266 to i8*
  %301 = zext i32 %293 to i64
  %302 = getelementptr inbounds i8, i8* %300, i64 %301
  %303 = load i8, i8* %302, align 1
  %304 = zext i8 %303 to i16
  br label %309

305:                                              ; preds = %295
  %306 = zext i32 %293 to i64
  %307 = getelementptr inbounds i16, i16* %267, i64 %306
  %308 = load i16, i16* %307, align 2
  br label %309

309:                                              ; preds = %305, %299
  %310 = phi i16 [ %304, %299 ], [ %308, %305 ]
  %311 = icmp eq i16 %310, 160
  br i1 %311, label %327, label %312, !prof !2

312:                                              ; preds = %309, %291
  %313 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %284, i64 1, i32 3
  %314 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %313, align 8
  %315 = icmp eq %"class.blink::LayoutObject"* %314, null
  br i1 %315, label %326, label %320

316:                                              ; preds = %287
  %317 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %284, i64 1, i32 1
  %318 = load i32, i32* %317, align 4
  %319 = icmp ugt i32 %318, %258
  br i1 %319, label %327, label %283

320:                                              ; preds = %312
  %321 = bitcast %"class.blink::LayoutObject"* %314 to i1 (%"class.blink::LayoutObject"*, i32)***
  %322 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %321, align 8
  %323 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %322, i64 92
  %324 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %323, align 8
  %325 = call zeroext i1 %324(%"class.blink::LayoutObject"* nonnull %314, i32 42) #16
  br i1 %325, label %327, label %326

326:                                              ; preds = %320, %312
  store i8 1, i8* %245, align 2
  br label %327

327:                                              ; preds = %283, %316, %320, %260, %251, %309, %255, %265, %326, %247, %237
  %328 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 3
  store i32 2, i32* %328, align 4
  br label %329

329:                                              ; preds = %227, %228, %327
  %330 = load i8, i8* %68, align 1, !range !3
  %331 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 15
  %332 = xor i8 %330, 1
  store i8 %332, i8* %331, align 1
  %333 = icmp sgt i32 %156, %5
  %334 = zext i1 %333 to i32
  br label %337

335:                                              ; preds = %211, %49
  store i32 %73, i32* %58, align 4
  %336 = load i32, i32* %74, align 4
  store i32 %336, i32* %75, align 4
  br label %337

337:                                              ; preds = %335, %329
  %338 = phi i32 [ %334, %329 ], [ 1, %335 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #16
  %339 = getelementptr inbounds %"class.blink::ShapingLineBreaker", %"class.blink::ShapingLineBreaker"* %10, i64 0, i32 2, i32 0
  %340 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %339, align 8
  %341 = icmp eq %"class.blink::ShapeResult"* %340, null
  br i1 %341, label %349, label %342

342:                                              ; preds = %337
  %343 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %340, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %343) #16
  %344 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %340, i64 0, i32 0, i32 0, i32 0, i32 0
  %345 = load i32, i32* %344, align 4
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %347, label %349

347:                                              ; preds = %342
  call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %340) #16
  %348 = bitcast %"class.blink::ShapeResult"* %340 to i8*
  call void @free(i8* %348) #16
  br label %349

349:                                              ; preds = %337, %342, %347
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #16
  ret i32 %338
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker12MoveToNextOfERKNS_18NGInlineItemResultE(%"class.blink::NGLineBreaker"* nocapture, %"struct.blink::NGInlineItemResult"* nocapture readonly dereferenceable(160)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 2, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 0
  %10 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %4, %12
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = add i32 %7, 1
  store i32 %15, i32* %8, align 4
  br label %16

16:                                               ; preds = %14, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker6RewindEjPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, i32, %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 51, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 51, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 51, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, %1
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 0
  store i32 0, i32* %19, align 8
  br label %362

20:                                               ; preds = %14, %8
  %21 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 51, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast %union.anon.1938* %21 to i64*
  %23 = zext i32 %1 to i64
  %24 = shl nuw i64 %23, 32
  %25 = zext i32 %10 to i64
  %26 = or i64 %24, %25
  store i64 %26, i64* %22, align 4
  store i8 1, i8* %5, align 4
  br label %27

27:                                               ; preds = %3, %20
  %28 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  br label %29

29:                                               ; preds = %37, %27
  %30 = phi i32 [ %1, %27 ], [ %38, %37 ]
  %31 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %4, i32 %30) #16
  %32 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %31, i64 0, i32 0
  %33 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %33, i64 0, i32 4
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 5
  br i1 %36, label %37, label %104

37:                                               ; preds = %29
  %38 = add i32 %30, 1
  %39 = load i32, i32* %28, align 4
  %40 = icmp eq i32 %38, %39
  br i1 %40, label %41, label %29

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %43 = load i8, i8* %42, align 4, !range !3
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %101

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 34
  %47 = load i8, i8* %46, align 8, !range !3
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %101, label %49, !prof !5

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %4, i64 0, i32 0, i32 0, i32 0
  %51 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %50, align 8
  %52 = zext i32 %38 to i64
  %53 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %51, i64 %52
  %54 = ptrtoint %"struct.blink::NGInlineItemResult"* %51 to i64
  br label %55

55:                                               ; preds = %96, %49
  %56 = phi %"struct.blink::NGInlineItemResult"* [ %53, %49 ], [ %59, %96 ]
  %57 = icmp eq %"struct.blink::NGInlineItemResult"* %56, %51
  br i1 %57, label %101, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %56, i64 -1
  %60 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %56, i64 -1, i32 7, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %96, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %56, i64 -1, i32 7, i32 0, i32 0
  %65 = ptrtoint %"struct.blink::NGInlineItemResult"* %59 to i64
  %66 = sub i64 %65, %54
  %67 = sdiv exact i64 %66, 160
  %68 = bitcast i8* %42 to i64*
  %69 = shl i64 %67, 32
  %70 = or i64 %69, 1
  store i64 %70, i64* %68, align 8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %73, label %74

73:                                               ; preds = %63
  tail call void @_ZN5blink18NGInlineItemResult11ShapeHyphenEv(%"struct.blink::NGInlineItemResult"* %59) #16
  store i8 1, i8* %46, align 8
  br label %74

74:                                               ; preds = %73, %63
  %75 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %56, i64 -1, i32 8, i32 0
  %76 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %76, i64 0, i32 1
  %78 = load float, float* %77, align 4
  %79 = fmul float %78, 6.400000e+01
  %80 = tail call float @llvm.ceil.f32(float %79) #16
  %81 = fcmp ult float %80, 0xC1E0000000000000
  %82 = fcmp ugt float %80, 0x41DFFFFFE0000000
  %83 = fcmp ogt float %80, 0xC1E0000000000000
  %84 = select i1 %83, float %80, float 0xC1E0000000000000
  %85 = fptosi float %84 to i32
  %86 = select i1 %81, i32 0, i32 2147483647
  %87 = select i1 %82, i32 %86, i32 %85
  %88 = icmp sgt i32 %87, 0
  %89 = select i1 %88, i32 %87, i32 0
  %90 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %56, i64 -1, i32 4, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %91, i32 %89) #16
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 2147483647, i32 %94, !prof !2
  store i32 %95, i32* %90, align 4
  br label %101

96:                                               ; preds = %58
  %97 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %59, i64 0, i32 0
  %98 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %98, i64 0, i32 4
  %100 = load i32, i32* %99, align 8
  switch i32 %100, label %55 [
    i32 0, label %101
    i32 2, label %101
  ]

101:                                              ; preds = %96, %96, %55, %45, %41, %74
  %102 = tail call i32 @_ZNK5blink10NGLineInfo12ComputeWidthEv(%"class.blink::NGLineInfo"* %2) #16
  %103 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  store i32 %102, i32* %103, align 8
  br label %362

104:                                              ; preds = %29
  %105 = load i32, i32* %28, align 4
  br label %106

106:                                              ; preds = %109, %104
  %107 = phi i32 [ %105, %104 ], [ %110, %109 ]
  %108 = icmp ugt i32 %107, %30
  br i1 %108, label %109, label %181

109:                                              ; preds = %106
  %110 = add i32 %107, -1
  %111 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %4, i32 %110) #16
  %112 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %111, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %113 = load i8, i8* %112, align 8, !range !3
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %106, label %115

115:                                              ; preds = %109
  %116 = load i32, i32* %28, align 4
  %117 = icmp eq i32 %107, %116
  br i1 %117, label %118, label %185

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %120 = load i8, i8* %119, align 4, !range !3
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %178

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 34
  %124 = load i8, i8* %123, align 8, !range !3
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %178, label %126, !prof !5

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %4, i64 0, i32 0, i32 0, i32 0
  %128 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %127, align 8
  %129 = zext i32 %107 to i64
  %130 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %128, i64 %129
  %131 = ptrtoint %"struct.blink::NGInlineItemResult"* %128 to i64
  br label %132

132:                                              ; preds = %173, %126
  %133 = phi %"struct.blink::NGInlineItemResult"* [ %130, %126 ], [ %136, %173 ]
  %134 = icmp eq %"struct.blink::NGInlineItemResult"* %133, %128
  br i1 %134, label %178, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %133, i64 -1
  %137 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %133, i64 -1, i32 7, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %173, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %133, i64 -1, i32 7, i32 0, i32 0
  %142 = ptrtoint %"struct.blink::NGInlineItemResult"* %136 to i64
  %143 = sub i64 %142, %131
  %144 = sdiv exact i64 %143, 160
  %145 = bitcast i8* %119 to i64*
  %146 = shl i64 %144, 32
  %147 = or i64 %146, 1
  store i64 %147, i64* %145, align 8
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %150, label %151

150:                                              ; preds = %140
  tail call void @_ZN5blink18NGInlineItemResult11ShapeHyphenEv(%"struct.blink::NGInlineItemResult"* %136) #16
  store i8 1, i8* %123, align 8
  br label %151

151:                                              ; preds = %150, %140
  %152 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %133, i64 -1, i32 8, i32 0
  %153 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %152, align 8
  %154 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %153, i64 0, i32 1
  %155 = load float, float* %154, align 4
  %156 = fmul float %155, 6.400000e+01
  %157 = tail call float @llvm.ceil.f32(float %156) #16
  %158 = fcmp ult float %157, 0xC1E0000000000000
  %159 = fcmp ugt float %157, 0x41DFFFFFE0000000
  %160 = fcmp ogt float %157, 0xC1E0000000000000
  %161 = select i1 %160, float %157, float 0xC1E0000000000000
  %162 = fptosi float %161 to i32
  %163 = select i1 %158, i32 0, i32 2147483647
  %164 = select i1 %159, i32 %163, i32 %162
  %165 = icmp sgt i32 %164, 0
  %166 = select i1 %165, i32 %164, i32 0
  %167 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %133, i64 -1, i32 4, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %168, i32 %166) #16
  %170 = extractvalue { i32, i1 } %169, 1
  %171 = extractvalue { i32, i1 } %169, 0
  %172 = select i1 %170, i32 2147483647, i32 %171, !prof !2
  store i32 %172, i32* %167, align 4
  br label %178

173:                                              ; preds = %135
  %174 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %136, i64 0, i32 0
  %175 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %174, align 8
  %176 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %175, i64 0, i32 4
  %177 = load i32, i32* %176, align 8
  switch i32 %177, label %132 [
    i32 0, label %178
    i32 2, label %178
  ]

178:                                              ; preds = %132, %173, %173, %122, %118, %151
  %179 = tail call i32 @_ZNK5blink10NGLineInfo12ComputeWidthEv(%"class.blink::NGLineInfo"* %2) #16
  %180 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  store i32 %179, i32* %180, align 8
  br label %362

181:                                              ; preds = %106
  %182 = icmp eq i32 %30, 0
  br i1 %182, label %248, label %183

183:                                              ; preds = %181
  %184 = add i32 %30, -1
  br label %185

185:                                              ; preds = %183, %115
  %186 = phi i32 [ %184, %183 ], [ %110, %115 ]
  %187 = phi i32 [ %30, %183 ], [ %107, %115 ]
  %188 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %4, i32 %186) #16
  %189 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %188, i64 0, i32 2, i32 1
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  store i32 %190, i32* %191, align 8
  %192 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %188, i64 0, i32 1
  %193 = load i32, i32* %192, align 8
  %194 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  store i32 %193, i32* %194, align 4
  %195 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %188, i64 0, i32 0
  %196 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %195, align 8
  %197 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %196, i64 0, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = icmp eq i32 %190, %198
  br i1 %199, label %200, label %202

200:                                              ; preds = %185
  %201 = add i32 %193, 1
  store i32 %201, i32* %194, align 4
  br label %202

202:                                              ; preds = %185, %200
  %203 = phi i32 [ %193, %185 ], [ %201, %200 ]
  %204 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 3
  store i32 2, i32* %204, align 4
  %205 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 21
  %206 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %205, align 8
  %207 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %206, i64 0, i32 1
  %208 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %206, i64 0, i32 1, i32 0, i32 0, i32 2
  %209 = load i32, i32* %208, align 4
  %210 = icmp ult i32 %203, %209
  br i1 %210, label %211, label %258

211:                                              ; preds = %202
  %212 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 8
  br label %213

213:                                              ; preds = %211, %241
  %214 = phi i32 [ %203, %211 ], [ %245, %241 ]
  %215 = tail call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZNK3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1841"* %207, i32 %214) #16
  %216 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %215, i64 0, i32 4
  %217 = load i32, i32* %216, align 8
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %258

219:                                              ; preds = %213
  %220 = load i32, i32* %194, align 4
  %221 = tail call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZNK3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1841"* %207, i32 %220) #16
  %222 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %221, i64 0, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %221, i64 0, i32 0
  %225 = load i32, i32* %224, align 8
  %226 = icmp eq i32 %223, %225
  br i1 %226, label %227, label %258

227:                                              ; preds = %219
  %228 = load i32, i32* %194, align 4
  %229 = tail call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZNK3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1841"* %207, i32 %228) #16
  %230 = load i32, i32* %212, align 8
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %241

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %229, i64 0, i32 3
  %234 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %233, align 8
  %235 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %234, i64 0, i32 4
  %236 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %235 to i96*
  %237 = load i96, i96* %236, align 4
  %238 = and i96 %237, 63
  %239 = icmp eq i96 %238, 0
  br i1 %239, label %241, label %240

240:                                              ; preds = %232
  tail call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %234) #16
  br label %241

241:                                              ; preds = %227, %232, %240
  %242 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %229, i64 0, i32 1
  %243 = load i32, i32* %242, align 4
  store i32 %243, i32* %191, align 8
  %244 = load i32, i32* %194, align 4
  %245 = add i32 %244, 1
  store i32 %245, i32* %194, align 4
  %246 = load i32, i32* %208, align 4
  %247 = icmp ult i32 %245, %246
  br i1 %247, label %213, label %258

248:                                              ; preds = %181
  %249 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %4, i32 0) #16
  %250 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %249, i64 0, i32 1
  %251 = load i32, i32* %250, align 8
  %252 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  store i32 %251, i32* %252, align 4
  %253 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %249, i64 0, i32 2, i32 0
  %254 = load i32, i32* %253, align 4
  %255 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  store i32 %254, i32* %255, align 8
  %256 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 3
  store i32 0, i32* %256, align 4
  %257 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 19
  store i8 0, i8* %257, align 2
  br label %258

258:                                              ; preds = %241, %213, %219, %202, %248
  %259 = phi i32 [ 0, %248 ], [ %187, %202 ], [ %187, %219 ], [ %187, %213 ], [ %187, %241 ]
  %260 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink13NGLineBreaker19ComputeCurrentStyleEjPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, i32 %259, %"class.blink::NGLineInfo"* %2)
  tail call void @_ZN5blink13NGLineBreaker15SetCurrentStyleERKNS_13ComputedStyleE(%"class.blink::NGLineBreaker"* %0, %"class.blink::ComputedStyle"* dereferenceable(104) %260)
  %261 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %4, i64 0, i32 0, i32 0, i32 0
  %262 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %261, align 8
  %263 = load i32, i32* %28, align 4
  %264 = zext i32 %263 to i64
  %265 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %262, i64 %264
  %266 = icmp eq i32 %263, %259
  br i1 %266, label %274, label %267

267:                                              ; preds = %258
  %268 = zext i32 %259 to i64
  %269 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %262, i64 %268
  br label %270

270:                                              ; preds = %270, %267
  %271 = phi %"struct.blink::NGInlineItemResult"* [ %272, %270 ], [ %269, %267 ]
  tail call void @_ZN5blink18NGInlineItemResultD2Ev(%"struct.blink::NGInlineItemResult"* %271) #16
  %272 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %271, i64 1
  %273 = icmp eq %"struct.blink::NGInlineItemResult"* %272, %265
  br i1 %273, label %274, label %270

274:                                              ; preds = %270, %258
  store i32 %259, i32* %28, align 4
  %275 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 0
  %276 = load i8, i8* %275, align 8, !range !3
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %290, label %278

278:                                              ; preds = %274
  %279 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %280 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %279, align 8
  %281 = icmp eq %"class.blink::ShapeResultView"* %280, null
  br i1 %281, label %289, label %282

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %280, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %283) #16
  %284 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %280, i64 0, i32 0, i32 0, i32 0, i32 0
  %285 = load i32, i32* %284, align 4
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %289

287:                                              ; preds = %282
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %280) #16
  %288 = bitcast %"class.blink::ShapeResultView"* %280 to i8*
  tail call void @free(i8* %288) #16
  br label %289

289:                                              ; preds = %287, %282, %278
  store i8 0, i8* %275, align 8
  br label %290

290:                                              ; preds = %274, %289
  %291 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 0
  %292 = load i8, i8* %291, align 4, !range !3
  %293 = icmp eq i8 %292, 0
  br i1 %293, label %299, label %294

294:                                              ; preds = %290
  %295 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 33, i32 0, i32 0, i32 0, i32 1, i32 0
  %296 = load i32, i32* %295, align 4
  %297 = icmp ult i32 %296, %259
  br i1 %297, label %355, label %298, !prof !5

298:                                              ; preds = %294
  store i8 0, i8* %291, align 4
  br label %299

299:                                              ; preds = %290, %298
  %300 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 34
  %301 = load i8, i8* %300, align 8, !range !3
  %302 = icmp eq i8 %301, 0
  br i1 %302, label %355, label %303, !prof !5

303:                                              ; preds = %299
  %304 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %261, align 8
  %305 = load i32, i32* %28, align 4
  %306 = zext i32 %305 to i64
  %307 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %304, i64 %306
  %308 = ptrtoint %"struct.blink::NGInlineItemResult"* %304 to i64
  br label %309

309:                                              ; preds = %350, %303
  %310 = phi %"struct.blink::NGInlineItemResult"* [ %307, %303 ], [ %313, %350 ]
  %311 = icmp eq %"struct.blink::NGInlineItemResult"* %310, %304
  br i1 %311, label %355, label %312

312:                                              ; preds = %309
  %313 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %310, i64 -1
  %314 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %310, i64 -1, i32 7, i32 0, i32 0
  %315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %314, align 8
  %316 = icmp eq %"class.WTF::StringImpl"* %315, null
  br i1 %316, label %350, label %317

317:                                              ; preds = %312
  %318 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %310, i64 -1, i32 7, i32 0, i32 0
  %319 = ptrtoint %"struct.blink::NGInlineItemResult"* %313 to i64
  %320 = sub i64 %319, %308
  %321 = sdiv exact i64 %320, 160
  %322 = bitcast i8* %291 to i64*
  %323 = shl i64 %321, 32
  %324 = or i64 %323, 1
  store i64 %324, i64* %322, align 8
  %325 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %326 = icmp eq %"class.WTF::StringImpl"* %325, null
  br i1 %326, label %327, label %328

327:                                              ; preds = %317
  tail call void @_ZN5blink18NGInlineItemResult11ShapeHyphenEv(%"struct.blink::NGInlineItemResult"* %313) #16
  store i8 1, i8* %300, align 8
  br label %328

328:                                              ; preds = %327, %317
  %329 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %310, i64 -1, i32 8, i32 0
  %330 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %329, align 8
  %331 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %330, i64 0, i32 1
  %332 = load float, float* %331, align 4
  %333 = fmul float %332, 6.400000e+01
  %334 = tail call float @llvm.ceil.f32(float %333) #16
  %335 = fcmp ult float %334, 0xC1E0000000000000
  %336 = fcmp ugt float %334, 0x41DFFFFFE0000000
  %337 = fcmp ogt float %334, 0xC1E0000000000000
  %338 = select i1 %337, float %334, float 0xC1E0000000000000
  %339 = fptosi float %338 to i32
  %340 = select i1 %335, i32 0, i32 2147483647
  %341 = select i1 %336, i32 %340, i32 %339
  %342 = icmp sgt i32 %341, 0
  %343 = select i1 %342, i32 %341, i32 0
  %344 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %310, i64 -1, i32 4, i32 0
  %345 = load i32, i32* %344, align 4
  %346 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %345, i32 %343) #16
  %347 = extractvalue { i32, i1 } %346, 1
  %348 = extractvalue { i32, i1 } %346, 0
  %349 = select i1 %347, i32 2147483647, i32 %348, !prof !2
  store i32 %349, i32* %344, align 4
  br label %355

350:                                              ; preds = %312
  %351 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %313, i64 0, i32 0
  %352 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %351, align 8
  %353 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %352, i64 0, i32 4
  %354 = load i32, i32* %353, align 8
  switch i32 %354, label %309 [
    i32 0, label %355
    i32 2, label %355
  ]

355:                                              ; preds = %350, %350, %309, %294, %299, %328
  %356 = tail call i32 @_ZNK5blink10NGLineInfo12ComputeWidthEv(%"class.blink::NGLineInfo"* %2) #16
  %357 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  store i32 %356, i32* %357, align 8
  %358 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 49
  %359 = load i8, i8* %358, align 4, !range !3
  %360 = icmp eq i8 %359, 0
  br i1 %360, label %362, label %361, !prof !5

361:                                              ; preds = %355
  tail call void @_ZN5blink13NGLineBreaker26RecalcClonedBoxDecorationsEv(%"class.blink::NGLineBreaker"* %0)
  br label %362

362:                                              ; preds = %178, %361, %355, %101, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker17SplitTextByGlyphsERKNS_12NGInlineItemEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* nocapture, %"class.blink::NGInlineItem"* dereferenceable(32), %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"struct.blink::NGTextOffset", align 4
  %5 = alloca %"class.WTF::Vector.1875", align 8
  %6 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 2, i32 0
  %7 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %6, align 8
  %8 = bitcast %"class.WTF::Vector.1875"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.WTF::Vector.1875", %"class.WTF::Vector.1875"* %5, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.WTF::Vector.1875", %"class.WTF::Vector.1875"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #16
  %11 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %7, i64 0, i32 8
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 536870911
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %24, label %15, !prof !2

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::Vector.1875", %"class.WTF::Vector.1875"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = zext i32 %13 to i64
  %18 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %17) #16
  %19 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %18, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #16
  %20 = ptrtoint i8* %19 to i64
  %21 = bitcast %"class.WTF::Vector.1875"* %5 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = lshr i64 %18, 2
  %23 = trunc i64 %22 to i32
  store i32 %23, i32* %16, align 8
  br label %24

24:                                               ; preds = %3, %15
  %25 = call float @_ZNK5blink11ShapeResult12ForEachGlyphEfPFvPvjtNS_9FloatSizeEfbNS_24CanvasRotationInVerticalEPKNS_14SimpleFontDataEES1_(%"class.blink::ShapeResult"* %7, float 0.000000e+00, void (i8*, i32, i16, <2 x float>, float, i1, i8, %"class.blink::SimpleFontData"*)* nonnull @_ZN5blink12_GLOBAL__N_116CollectCharIndexEPvjtNS_9FloatSizeEfbNS_24CanvasRotationInVerticalEPKNS_14SimpleFontDataE, i8* nonnull %8) #16
  %26 = load i32, i32* %11, align 8
  %27 = and i32 %26, 536870912
  %28 = icmp ne i32 %27, 0
  %29 = load i32, i32* %10, align 4
  %30 = icmp ugt i32 %29, 1
  %31 = and i1 %28, %30
  br i1 %31, label %32, label %45

32:                                               ; preds = %24, %32
  %33 = phi i32 [ %41, %32 ], [ 0, %24 ]
  %34 = call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1875"* nonnull %5, i32 %33) #16
  %35 = load i32, i32* %10, align 4
  %36 = xor i32 %33, -1
  %37 = add i32 %35, %36
  %38 = call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1875"* nonnull %5, i32 %37) #16
  %39 = load i32, i32* %34, align 4
  %40 = load i32, i32* %38, align 4
  store i32 %40, i32* %34, align 4
  store i32 %39, i32* %38, align 4
  %41 = add nuw nsw i32 %33, 1
  %42 = load i32, i32* %10, align 4
  %43 = lshr i32 %42, 1
  %44 = icmp ult i32 %41, %43
  br i1 %44, label %32, label %45

45:                                               ; preds = %32, %24
  %46 = phi i32 [ %29, %24 ], [ %42, %32 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %62, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %7, i64 0, i32 6
  %50 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %7, i64 0, i32 7
  %51 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2
  %52 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %53 = bitcast %"struct.blink::NGTextOffset"* %4 to i8*
  %54 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %55 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %4, i64 0, i32 0
  %56 = getelementptr inbounds %"struct.blink::NGTextOffset", %"struct.blink::NGTextOffset"* %4, i64 0, i32 1
  %57 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 13
  %58 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  %59 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %51, i64 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  br label %79

62:                                               ; preds = %157, %45
  %63 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 3
  store i32 2, i32* %63, align 4
  %64 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  store i32 %65, i32* %66, align 8
  %67 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = add i32 %68, 1
  store i32 %69, i32* %67, align 4
  %70 = load i32*, i32** %9, align 8
  %71 = icmp eq i32* %70, null
  %72 = bitcast i32* %70 to i8*
  br i1 %71, label %78, label %73, !prof !5

73:                                               ; preds = %62
  %74 = load i32, i32* %10, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %77, label %76, !prof !2

76:                                               ; preds = %73
  store i32 0, i32* %10, align 4
  br label %77

77:                                               ; preds = %76, %73
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #16
  store i32* null, i32** %9, align 8
  br label %78

78:                                               ; preds = %62, %77
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #16
  ret void

79:                                               ; preds = %157, %48
  %80 = phi i32 [ 0, %48 ], [ %81, %157 ]
  %81 = add nuw i32 %80, 1
  %82 = icmp ult i32 %81, %46
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1875"* nonnull %5, i32 %81) #16
  %85 = load i32, i32* %84, align 4
  br label %90

86:                                               ; preds = %79
  %87 = load i32, i32* %49, align 8
  %88 = load i32, i32* %50, align 4
  %89 = add i32 %88, %87
  br label %90

90:                                               ; preds = %86, %83
  %91 = phi i32 [ %85, %83 ], [ %89, %86 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #16
  %92 = load i32, i32* %54, align 8
  store i32 %92, i32* %55, align 4
  store i32 %91, i32* %56, align 4
  %93 = load i32, i32* %58, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %110, label %95

95:                                               ; preds = %90
  %96 = add i32 %93, -1
  %97 = call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %51, i32 %96) #16
  %98 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %97, i64 0, i32 19
  %99 = load i8, i8* %98, align 1, !range !3
  %100 = icmp ne i8 %99, 0
  %101 = load i32, i32* %58, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %110, label %103

103:                                              ; preds = %95
  %104 = add i32 %101, -1
  %105 = call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %51, i32 %104) #16
  %106 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %105, i64 0, i32 20
  %107 = load i8, i8* %106, align 2, !range !3
  %108 = icmp ne i8 %107, 0
  %109 = load i32, i32* %58, align 4
  br label %110

110:                                              ; preds = %103, %95, %90
  %111 = phi i32 [ 0, %95 ], [ %109, %103 ], [ 0, %90 ]
  %112 = phi i1 [ %100, %95 ], [ %100, %103 ], [ false, %90 ]
  %113 = phi i1 [ false, %95 ], [ %108, %103 ], [ false, %90 ]
  %114 = load i32, i32* %59, align 8
  %115 = icmp eq i32 %111, %114
  br i1 %115, label %116, label %119, !prof !2

116:                                              ; preds = %110
  %117 = add i32 %111, 1
  call void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1970"* %51, i32 %117) #16
  %118 = load i32, i32* %58, align 4
  br label %119

119:                                              ; preds = %110, %116
  %120 = phi i32 [ %118, %116 ], [ %111, %110 ]
  %121 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %60, align 8
  %122 = zext i32 %120 to i64
  %123 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %121, i64 %122
  %124 = load i32, i32* %52, align 4
  %125 = load i8, i8* %57, align 1, !range !3
  %126 = icmp ne i8 %125, 0
  call void @_ZN5blink18NGInlineItemResultC1EPKNS_12NGInlineItemEjRKNS_12NGTextOffsetEbbb(%"struct.blink::NGInlineItemResult"* %123, %"class.blink::NGInlineItem"* %1, i32 %124, %"struct.blink::NGTextOffset"* nonnull dereferenceable(8) %4, i1 zeroext %126, i1 zeroext %112, i1 zeroext %113) #16
  %127 = load i32, i32* %58, align 4
  %128 = add i32 %127, 1
  store i32 %128, i32* %58, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #16
  %129 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %121, i64 %122, i32 19
  store i8 1, i8* %129, align 1
  %130 = load i32, i32* %54, align 8
  %131 = call %"class.blink::ShapeResultView"* @_ZN5blink15ShapeResultView6CreateEPKNS_11ShapeResultEjj(%"class.blink::ShapeResult"* %7, i32 %130, i32 %91) #16
  %132 = ptrtoint %"class.blink::ShapeResultView"* %131 to i64
  %133 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %131, i64 0, i32 6
  %134 = load float, float* %133, align 8
  %135 = fmul float %134, 6.400000e+01
  %136 = call float @llvm.ceil.f32(float %135) #16
  %137 = fcmp ult float %136, 0xC1E0000000000000
  %138 = fcmp ugt float %136, 0x41DFFFFFE0000000
  %139 = fcmp ogt float %136, 0xC1E0000000000000
  %140 = select i1 %139, float %136, float 0xC1E0000000000000
  %141 = fptosi float %140 to i32
  %142 = select i1 %137, i32 0, i32 2147483647
  %143 = select i1 %138, i32 %142, i32 %141
  %144 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %121, i64 %122, i32 4, i32 0
  store i32 %143, i32* %144, align 4
  %145 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %121, i64 %122, i32 6
  %146 = bitcast %class.scoped_refptr.1909* %145 to i64*
  %147 = getelementptr inbounds %class.scoped_refptr.1909, %class.scoped_refptr.1909* %145, i64 0, i32 0
  %148 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %147, align 8
  store i64 %132, i64* %146, align 8
  %149 = icmp eq %"class.blink::ShapeResultView"* %148, null
  br i1 %149, label %157, label %150

150:                                              ; preds = %119
  %151 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %148, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %151) #16
  %152 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %148, i64 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %150
  call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %148) #16
  %156 = bitcast %"class.blink::ShapeResultView"* %148 to i8*
  call void @free(i8* %156) #16
  br label %157

157:                                              ; preds = %155, %150, %119
  store i32 %91, i32* %54, align 8
  %158 = load i32, i32* %61, align 4
  %159 = load i32, i32* %144, align 4
  %160 = icmp slt i32 %159, 0
  %161 = select i1 %160, i32 -2147483648, i32 2147483647
  %162 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %158, i32 %159) #16
  %163 = extractvalue { i32, i1 } %162, 1
  %164 = extractvalue { i32, i1 } %162, 0
  %165 = select i1 %163, i32 %161, i32 %164, !prof !2
  store i32 %165, i32* %61, align 4
  %166 = icmp eq i32 %81, %46
  br i1 %166, label %62, label %79
}

declare %"class.blink::ShapeResultView"* @_ZN5blink15ShapeResultView6CreateEPKNS_11ShapeResultE(%"class.blink::ShapeResult"*) local_unnamed_addr #3

declare %"class.blink::ShapeResultView"* @_ZN5blink15ShapeResultView6CreateEPKNS_11ShapeResultEjj(%"class.blink::ShapeResult"*, i32, i32) local_unnamed_addr #3

declare float @_ZNK5blink11ShapeResult12ForEachGlyphEfPFvPvjtNS_9FloatSizeEfbNS_24CanvasRotationInVerticalEPKNS_14SimpleFontDataEES1_(%"class.blink::ShapeResult"*, float, void (i8*, i32, i16, <2 x float>, float, i1, i8, %"class.blink::SimpleFontData"*)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_116CollectCharIndexEPvjtNS_9FloatSizeEfbNS_24CanvasRotationInVerticalEPKNS_14SimpleFontDataE(i8*, i32, i16 zeroext, <2 x float>, float, i1 zeroext, i8 signext, %"class.blink::SimpleFontData"* nocapture readnone) #8 {
  %9 = alloca i32, align 4
  store i32 %1, i32* %9, align 4
  %10 = bitcast i8* %0 to %"class.WTF::Vector.1875"*
  %11 = getelementptr inbounds i8, i8* %0, i64 12
  %12 = bitcast i8* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %8
  %16 = add i32 %13, -1
  %17 = tail call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1875"* %10, i32 %16)
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, %1
  br i1 %19, label %36, label %20

20:                                               ; preds = %15
  %21 = load i32, i32* %12, align 4
  br label %22

22:                                               ; preds = %20, %8
  %23 = phi i32 [ %21, %20 ], [ 0, %8 ]
  %24 = getelementptr inbounds i8, i8* %0, i64 8
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %23, %26
  br i1 %27, label %35, label %28, !prof !2

28:                                               ; preds = %22
  %29 = bitcast i8* %0 to i32**
  %30 = load i32*, i32** %29, align 8
  %31 = zext i32 %23 to i64
  %32 = getelementptr inbounds i32, i32* %30, i64 %31
  store i32 %1, i32* %32, align 4
  %33 = load i32, i32* %12, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %12, align 4
  br label %36

35:                                               ; preds = %22
  call void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_(%"class.WTF::Vector.1875"* %10, i32* nonnull dereferenceable(4) %9) #16
  br label %36

36:                                               ; preds = %35, %28, %15
  ret void
}

declare void @_ZN5blink18ShapingLineBreakerC1E13scoped_refptrIKNS_11ShapeResultEEPKNS_21LazyLineBreakIteratorEPKNS_11HyphenationEPFS1_IS2_EPvjjESC_(%"class.blink::ShapingLineBreaker"*, %"class.blink::ShapeResult"*, %"class.blink::LazyLineBreakIterator"*, %"class.blink::Hyphenation"*, %"class.blink::ShapeResult"* (i8*, i32, i32)*, i8*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_124NeedsAccurateEndPositionERKNS_10NGLineInfoERKNS_12NGInlineItemE(%"class.blink::NGLineInfo"* nocapture readonly dereferenceable(5208), %"class.blink::NGInlineItem"* dereferenceable(32)) unnamed_addr #6 {
  %3 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %0, i64 0, i32 18
  %4 = load i8, i8* %3, align 2, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %107

6:                                                ; preds = %2
  %7 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %1) #16
  %8 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() #16
  %9 = tail call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %7, %"class.blink::CSSProperty"* dereferenceable(24) %8) #16
  %10 = icmp ult i32 %9, 16777216
  br i1 %10, label %11, label %107

11:                                               ; preds = %6
  %12 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase40is_composite_bg_color_animation_enabled_E, align 1, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %16, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %18, i64 0, i32 39
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 262144
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %107

23:                                               ; preds = %14, %11
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 6, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %25, i64 0, i32 2, i32 5
  %27 = bitcast [7 x i8]* %26 to i56*
  %28 = load i56, i56* %27, align 8
  %29 = and i56 %28, 281474976710656
  %30 = icmp eq i56 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %25, i64 0, i32 2
  tail call void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"* %32) #16
  %33 = load i56, i56* %27, align 8
  br label %34

34:                                               ; preds = %31, %23
  %35 = phi i56 [ %28, %23 ], [ %33, %31 ]
  %36 = and i56 %35, 8796093022208
  %37 = icmp eq i56 %36, 0
  br i1 %37, label %38, label %107

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 7, i32 0, i32 0
  %40 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %40, i64 0, i32 27
  %42 = load i16, i16* %41, align 8
  %43 = and i16 %42, 224
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %40, i64 0, i32 24, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp ne i32 %47, 0
  %49 = and i16 %42, 240
  %50 = icmp ne i16 %49, 0
  %51 = and i1 %50, %48
  br i1 %51, label %107, label %52

52:                                               ; preds = %45, %38
  %53 = and i16 %42, 3584
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %40, i64 0, i32 25, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp ne i32 %57, 0
  %59 = and i16 %42, 3840
  %60 = icmp ne i16 %59, 0
  %61 = and i1 %60, %58
  br i1 %61, label %107, label %62

62:                                               ; preds = %55, %52
  %63 = icmp ult i16 %42, 8192
  br i1 %63, label %68, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %40, i64 0, i32 26, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %107

68:                                               ; preds = %64, %62
  %69 = and i16 %42, 14
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %78, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %40, i64 0, i32 23, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp ne i32 %73, 0
  %75 = and i16 %42, 15
  %76 = icmp ne i16 %75, 0
  %77 = and i1 %76, %74
  br i1 %77, label %107, label %78

78:                                               ; preds = %71, %68
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %40, i64 0, i32 2, i32 0, i32 0, i32 0
  %80 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %80, i64 0, i32 2, i32 0, i32 0
  %82 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %81, align 8
  %83 = icmp eq %"class.blink::StyleImage"* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %80, i64 0, i32 1
  %86 = load i8, i8* %85, align 4
  %87 = and i8 %86, 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %107

89:                                               ; preds = %84, %78
  %90 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %91 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %91, i64 0, i32 3, i32 0, i32 0
  %93 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %93, i64 0, i32 39
  %95 = load i32, i32* %94, align 4
  %96 = and i32 %95, 31
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %107

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %91, i64 0, i32 5, i32 0
  %100 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %99, align 8
  %101 = icmp eq %"class.blink::ShadowList"* %100, null
  br i1 %101, label %102, label %107

102:                                              ; preds = %98
  %103 = tail call dereferenceable(16) %"class.WTF::Vector.254"* @_ZNK5blink13ComputedStyle22AppliedTextDecorationsEv(%"class.blink::ComputedStyle"* %7) #16
  %104 = getelementptr inbounds %"class.WTF::Vector.254", %"class.WTF::Vector.254"* %103, i64 0, i32 0, i32 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = icmp ne i32 %105, 0
  br label %107

107:                                              ; preds = %2, %102, %98, %89, %84, %71, %64, %55, %45, %34, %14, %6
  %108 = phi i1 [ true, %2 ], [ true, %98 ], [ %106, %102 ], [ true, %89 ], [ true, %84 ], [ true, %34 ], [ true, %6 ], [ true, %14 ], [ true, %64 ], [ true, %45 ], [ true, %55 ], [ true, %71 ]
  ret i1 %108
}

declare %"class.blink::ShapeResultView"* @_ZN5blink18ShapingLineBreaker9ShapeLineEjNS_10LayoutUnitEjPNS0_6ResultE(%"class.blink::ShapingLineBreaker"*, i32, i32, i32, %"struct.blink::ShapingLineBreaker::Result"*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13NGLineBreaker35BreakTextAtPreviousBreakOpportunityEPNS_18NGInlineItemResultE(%"class.blink::NGLineBreaker"*, %"struct.blink::NGInlineItemResult"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 0
  %4 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 27
  %6 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 2, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, -1
  %9 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 2, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = tail call i32 @_ZNK5blink21LazyLineBreakIterator24PreviousBreakOpportunityEjj(%"class.blink::LazyLineBreakIterator"* %5, i32 %8, i32 %10) #16
  %12 = load i32, i32* %9, align 4
  %13 = icmp ugt i32 %11, %12
  br i1 %13, label %14, label %67

14:                                               ; preds = %2
  store i32 %11, i32* %6, align 4
  %15 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %4, i64 0, i32 2, i32 0
  %16 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %15, align 8
  %17 = tail call %"class.blink::ShapeResultView"* @_ZN5blink15ShapeResultView6CreateEPKNS_11ShapeResultEjj(%"class.blink::ShapeResult"* %16, i32 %12, i32 %11) #16
  %18 = ptrtoint %"class.blink::ShapeResultView"* %17 to i64
  %19 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 6
  %20 = bitcast %class.scoped_refptr.1909* %19 to i64*
  %21 = getelementptr inbounds %class.scoped_refptr.1909, %class.scoped_refptr.1909* %19, i64 0, i32 0
  %22 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %21, align 8
  store i64 %18, i64* %20, align 8
  %23 = icmp eq %"class.blink::ShapeResultView"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #16
  %26 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %22) #16
  %30 = bitcast %"class.blink::ShapeResultView"* %22 to i8*
  tail call void @free(i8* %30) #16
  br label %31

31:                                               ; preds = %29, %24, %14
  %32 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %21, align 8
  %33 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %32, i64 0, i32 6
  %34 = load float, float* %33, align 8
  %35 = fmul float %34, 6.400000e+01
  %36 = tail call float @llvm.ceil.f32(float %35) #16
  %37 = fcmp ult float %36, 0xC1E0000000000000
  %38 = fcmp ugt float %36, 0x41DFFFFFE0000000
  %39 = fcmp ogt float %36, 0xC1E0000000000000
  %40 = select i1 %39, float %36, float 0xC1E0000000000000
  %41 = fptosi float %40 to i32
  %42 = select i1 %37, i32 0, i32 2147483647
  %43 = select i1 %38, i32 %42, i32 %41
  %44 = icmp sgt i32 %43, 0
  %45 = select i1 %44, i32 %43, i32 0
  %46 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 4, i32 0
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 16
  store i8 1, i8* %47, align 2
  %48 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 0
  %49 = load i8, i8* %48, align 8, !range !3
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %67, label %51

51:                                               ; preds = %31
  %52 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %53 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %52, align 8
  %54 = icmp eq %"struct.blink::NGInlineItemResult"* %53, %1
  br i1 %54, label %55, label %67

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %57 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %56, align 8
  %58 = icmp eq %"class.blink::ShapeResultView"* %57, null
  br i1 %58, label %66, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %57, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %60) #16
  %61 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %57) #16
  %65 = bitcast %"class.blink::ShapeResultView"* %57 to i8*
  tail call void @free(i8* %65) #16
  br label %66

66:                                               ; preds = %55, %59, %64
  store i8 0, i8* %48, align 8
  br label %67

67:                                               ; preds = %31, %51, %66, %2
  %68 = phi i1 [ false, %2 ], [ true, %66 ], [ true, %51 ], [ true, %31 ]
  ret i1 %68
}

declare i32 @_ZNK5blink21LazyLineBreakIterator24PreviousBreakOpportunityEjj(%"class.blink::LazyLineBreakIterator"*, i32, i32) local_unnamed_addr #3

declare void @_ZNK5blink11ShapeResult18EnsurePositionDataEv(%"class.blink::ShapeResult"*) local_unnamed_addr #3

declare i32 @_ZNK5blink21LazyLineBreakIterator20NextBreakOpportunityEjj(%"class.blink::LazyLineBreakIterator"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ShapeResult"* @_ZN5blink13NGLineBreaker9ShapeTextERKNS_12NGInlineItemEjj(%"class.blink::NGLineBreaker"*, %"class.blink::NGInlineItem"* dereferenceable(32), i32, i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %"struct.blink::RunSegmenter::RunSegmenterRange", align 8
  %6 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 21
  %7 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %6, align 8
  %8 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.blink::NGInlineItemSegments"*, %"class.blink::NGInlineItemSegments"** %8, align 8
  %10 = icmp eq %"class.blink::NGInlineItemSegments"* %9, null
  br i1 %10, label %11, label %34

11:                                               ; preds = %4
  %12 = bitcast %"struct.blink::RunSegmenter::RunSegmenterRange"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %12) #16
  %13 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 0
  %14 = bitcast %"struct.blink::RunSegmenter::RunSegmenterRange"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 20, i1 false)
  %15 = load i32, i32* %13, align 8, !noalias !23
  %16 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 4, !noalias !23
  %18 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 5
  %19 = load i32, i32* %18, align 4, !noalias !23
  %20 = lshr i32 %19, 15
  %21 = and i32 %20, 2047
  call void @_ZN5blink19NGInlineItemSegment17UnpackSegmentDataEjjj(%"struct.blink::RunSegmenter::RunSegmenterRange"* nonnull sret %5, i32 %15, i32 %17, i32 %21) #16
  %22 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 28
  %23 = call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %1)
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %25, i64 0, i32 1, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %27, i64 0, i32 1
  %29 = load i32, i32* %18, align 4
  %30 = lshr i32 %29, 7
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 1
  %33 = call %"class.blink::ShapeResult"* @_ZNK5blink14HarfBuzzShaper5ShapeEPKNS_4FontENS_13TextDirectionEjjNS_12RunSegmenter17RunSegmenterRangeE(%"class.blink::HarfBuzzShaper"* %22, %"class.blink::Font"* %28, i8 zeroext %32, i32 %2, i32 %3, %"struct.blink::RunSegmenter::RunSegmenterRange"* nonnull byval(%"struct.blink::RunSegmenter::RunSegmenterRange") align 8 %5) #16
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %12) #16
  br label %56

34:                                               ; preds = %4
  %35 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 28
  %36 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %1)
  %37 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %38, i64 0, i32 1, i32 0, i32 0
  %40 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %40, i64 0, i32 1
  %42 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %1, i64 0, i32 5
  %43 = load i32, i32* %42, align 4
  %44 = lshr i32 %43, 7
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %6, align 8
  %48 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %47, i64 0, i32 1, i32 0, i32 0, i32 0
  %49 = bitcast %"class.blink::NGInlineItem"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = ptrtoint %"class.blink::NGInlineItem"* %1 to i64
  %52 = sub i64 %51, %50
  %53 = lshr exact i64 %52, 5
  %54 = trunc i64 %53 to i32
  %55 = tail call %"class.blink::ShapeResult"* @_ZNK5blink20NGInlineItemSegments9ShapeTextEPKNS_14HarfBuzzShaperEPKNS_4FontENS_13TextDirectionEjjj(%"class.blink::NGInlineItemSegments"* nonnull %9, %"class.blink::HarfBuzzShaper"* %35, %"class.blink::Font"* %41, i8 zeroext %46, i32 %2, i32 %3, i32 %54) #16
  br label %56

56:                                               ; preds = %34, %11
  %57 = phi %"class.blink::ShapeResult"* [ %55, %34 ], [ %33, %11 ]
  %58 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 29, i32 7
  %59 = load i8, i8* %58, align 8, !range !3
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %63, label %61, !prof !5

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 29
  call void @_ZN5blink11ShapeResult12ApplySpacingERNS_18ShapeResultSpacingIN3WTF6StringEEEi(%"class.blink::ShapeResult"* %57, %"class.blink::ShapeResultSpacing"* dereferenceable(40) %62, i32 0) #16
  br label %63

63:                                               ; preds = %56, %61
  ret %"class.blink::ShapeResult"* %57
}

declare %"class.blink::ShapeResult"* @_ZNK5blink14HarfBuzzShaper5ShapeEPKNS_4FontENS_13TextDirectionEjjNS_12RunSegmenter17RunSegmenterRangeE(%"class.blink::HarfBuzzShaper"*, %"class.blink::Font"*, i8 zeroext, i32, i32, %"struct.blink::RunSegmenter::RunSegmenterRange"* byval(%"struct.blink::RunSegmenter::RunSegmenterRange") align 8) local_unnamed_addr #3

declare %"class.blink::ShapeResult"* @_ZNK5blink20NGInlineItemSegments9ShapeTextEPKNS_14HarfBuzzShaperEPKNS_4FontENS_13TextDirectionEjjj(%"class.blink::NGInlineItemSegments"*, %"class.blink::HarfBuzzShaper"*, %"class.blink::Font"*, i8 zeroext, i32, i32, i32) local_unnamed_addr #3

declare void @_ZN5blink11ShapeResult12ApplySpacingERNS_18ShapeResultSpacingIN3WTF6StringEEEi(%"class.blink::ShapeResult"*, %"class.blink::ShapeResultSpacing"* dereferenceable(40), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ShapeResultView"* @_ZN5blink13NGLineBreaker21TruncateLineEndResultERKNS_10NGLineInfoERKNS_18NGInlineItemResultEj(%"class.blink::NGLineBreaker"*, %"class.blink::NGLineInfo"* nocapture readonly dereferenceable(5208), %"struct.blink::NGInlineItemResult"* nocapture readonly dereferenceable(160), i32) local_unnamed_addr #2 align 2 {
  %5 = alloca [2 x %"struct.blink::ShapeResultView::Segment"], align 16
  %6 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %2, i64 0, i32 0
  %7 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %6, align 8
  %8 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %2, i64 0, i32 2, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %2, i64 0, i32 6, i32 0
  %11 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %10, align 8
  %12 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_124NeedsAccurateEndPositionERKNS_10NGLineInfoERKNS_12NGInlineItemE(%"class.blink::NGLineInfo"* dereferenceable(5208) %1, %"class.blink::NGInlineItem"* dereferenceable(32) %7)
  br i1 %12, label %15, label %13

13:                                               ; preds = %4
  %14 = tail call %"class.blink::ShapeResultView"* @_ZN5blink15ShapeResultView6CreateEPKS0_jj(%"class.blink::ShapeResultView"* %11, i32 %9, i32 %3) #16
  br label %43

15:                                               ; preds = %4
  %16 = tail call i32 @_ZNK5blink15ShapeResultView25PreviousSafeToBreakOffsetEj(%"class.blink::ShapeResultView"* %11, i32 %3) #16
  %17 = icmp ne i32 %16, %3
  %18 = icmp ugt i32 %16, %9
  %19 = and i1 %17, %18
  br i1 %19, label %22, label %20

20:                                               ; preds = %15
  %21 = tail call %"class.blink::ShapeResultView"* @_ZN5blink15ShapeResultView6CreateEPKS0_jj(%"class.blink::ShapeResultView"* %11, i32 %9, i32 %3) #16
  br label %43

22:                                               ; preds = %15
  %23 = tail call %"class.blink::ShapeResult"* @_ZN5blink13NGLineBreaker9ShapeTextERKNS_12NGInlineItemEjj(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGInlineItem"* dereferenceable(32) %7, i32 %16, i32 %3)
  %24 = bitcast [2 x %"struct.blink::ShapeResultView::Segment"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %24) #16
  %25 = getelementptr inbounds [2 x %"struct.blink::ShapeResultView::Segment"], [2 x %"struct.blink::ShapeResultView::Segment"]* %5, i64 0, i64 0
  %26 = getelementptr inbounds [2 x %"struct.blink::ShapeResultView::Segment"], [2 x %"struct.blink::ShapeResultView::Segment"]* %5, i64 0, i64 0, i32 0
  store %"class.blink::ShapeResult"* null, %"class.blink::ShapeResult"** %26, align 16
  %27 = getelementptr inbounds [2 x %"struct.blink::ShapeResultView::Segment"], [2 x %"struct.blink::ShapeResultView::Segment"]* %5, i64 0, i64 0, i32 1
  store %"class.blink::ShapeResultView"* %11, %"class.blink::ShapeResultView"** %27, align 8
  %28 = getelementptr inbounds [2 x %"struct.blink::ShapeResultView::Segment"], [2 x %"struct.blink::ShapeResultView::Segment"]* %5, i64 0, i64 0, i32 2
  store i32 %9, i32* %28, align 16
  %29 = getelementptr inbounds [2 x %"struct.blink::ShapeResultView::Segment"], [2 x %"struct.blink::ShapeResultView::Segment"]* %5, i64 0, i64 0, i32 3
  store i32 %16, i32* %29, align 4
  %30 = getelementptr inbounds [2 x %"struct.blink::ShapeResultView::Segment"], [2 x %"struct.blink::ShapeResultView::Segment"]* %5, i64 0, i64 1, i32 0
  store %"class.blink::ShapeResult"* %23, %"class.blink::ShapeResult"** %30, align 8
  %31 = getelementptr inbounds [2 x %"struct.blink::ShapeResultView::Segment"], [2 x %"struct.blink::ShapeResultView::Segment"]* %5, i64 0, i64 1, i32 1
  store %"class.blink::ShapeResultView"* null, %"class.blink::ShapeResultView"** %31, align 8
  %32 = getelementptr inbounds [2 x %"struct.blink::ShapeResultView::Segment"], [2 x %"struct.blink::ShapeResultView::Segment"]* %5, i64 0, i64 1, i32 2
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds [2 x %"struct.blink::ShapeResultView::Segment"], [2 x %"struct.blink::ShapeResultView::Segment"]* %5, i64 0, i64 1, i32 3
  store i32 %3, i32* %33, align 4
  %34 = call %"class.blink::ShapeResultView"* @_ZN5blink15ShapeResultView6CreateEPKNS0_7SegmentEm(%"struct.blink::ShapeResultView::Segment"* nonnull %25, i64 2) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %24) #16
  %35 = icmp eq %"class.blink::ShapeResult"* %23, null
  br i1 %35, label %43, label %36

36:                                               ; preds = %22
  %37 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %23, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %37) #16
  %38 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %36
  call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %23) #16
  %42 = bitcast %"class.blink::ShapeResult"* %23 to i8*
  call void @free(i8* %42) #16
  br label %43

43:                                               ; preds = %20, %22, %36, %41, %13
  %44 = phi %"class.blink::ShapeResultView"* [ %14, %13 ], [ %21, %20 ], [ %34, %22 ], [ %34, %36 ], [ %34, %41 ]
  ret %"class.blink::ShapeResultView"* %44
}

declare %"class.blink::ShapeResultView"* @_ZN5blink15ShapeResultView6CreateEPKS0_jj(%"class.blink::ShapeResultView"*, i32, i32) local_unnamed_addr #3

declare i32 @_ZNK5blink15ShapeResultView25PreviousSafeToBreakOffsetEj(%"class.blink::ShapeResultView"*, i32) local_unnamed_addr #3

declare %"class.blink::ShapeResultView"* @_ZN5blink15ShapeResultView6CreateEPKNS0_7SegmentEm(%"struct.blink::ShapeResultView::Segment"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker17UpdateShapeResultERKNS_10NGLineInfoEPNS_18NGInlineItemResultE(%"class.blink::NGLineBreaker"*, %"class.blink::NGLineInfo"* nocapture readonly dereferenceable(5208), %"struct.blink::NGInlineItemResult"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %2, i64 0, i32 2, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = tail call %"class.blink::ShapeResultView"* @_ZN5blink13NGLineBreaker21TruncateLineEndResultERKNS_10NGLineInfoERKNS_18NGInlineItemResultEj(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGLineInfo"* dereferenceable(5208) %1, %"struct.blink::NGInlineItemResult"* dereferenceable(160) %2, i32 %5)
  %7 = ptrtoint %"class.blink::ShapeResultView"* %6 to i64
  %8 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %2, i64 0, i32 6
  %9 = bitcast %class.scoped_refptr.1909* %8 to i64*
  %10 = getelementptr inbounds %class.scoped_refptr.1909, %class.scoped_refptr.1909* %8, i64 0, i32 0
  %11 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %10, align 8
  store i64 %7, i64* %9, align 8
  %12 = icmp eq %"class.blink::ShapeResultView"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %11, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #16
  %15 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %11) #16
  %19 = bitcast %"class.blink::ShapeResultView"* %11 to i8*
  tail call void @free(i8* %19) #16
  br label %20

20:                                               ; preds = %18, %13, %3
  %21 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %10, align 8
  %22 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %21, i64 0, i32 6
  %23 = load float, float* %22, align 8
  %24 = fmul float %23, 6.400000e+01
  %25 = tail call float @llvm.ceil.f32(float %24) #16
  %26 = fcmp ult float %25, 0xC1E0000000000000
  %27 = fcmp ugt float %25, 0x41DFFFFFE0000000
  %28 = fcmp ogt float %25, 0xC1E0000000000000
  %29 = select i1 %28, float %25, float 0xC1E0000000000000
  %30 = fptosi float %29 to i32
  %31 = select i1 %26, i32 0, i32 2147483647
  %32 = select i1 %27, i32 %31, i32 %30
  %33 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %2, i64 0, i32 4, i32 0
  store i32 %32, i32* %33, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker31ComputeTrailingCollapsibleSpaceEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %21 [
    i32 0, label %5
    i32 1, label %5
    i32 4, label %5
    i32 5, label %5
  ]

5:                                                ; preds = %2, %2, %2, %2
  %6 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %170, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %11 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %10, align 8
  %12 = icmp eq %"class.blink::ShapeResultView"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %11, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #16
  %15 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %13
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %11) #16
  %19 = bitcast %"class.blink::ShapeResultView"* %11 to i8*
  tail call void @free(i8* %19) #16
  br label %20

20:                                               ; preds = %18, %13, %9
  store i8 0, i8* %6, align 8
  br label %170

21:                                               ; preds = %2
  store i32 1, i32* %3, align 4
  %22 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %154, label %27

27:                                               ; preds = %21
  %28 = zext i32 %25 to i64
  %29 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %23, i64 %28
  br label %30

30:                                               ; preds = %27, %152
  %31 = phi %"struct.blink::NGInlineItemResult"* [ %32, %152 ], [ %29, %27 ]
  %32 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %31, i64 -1
  %33 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %32, i64 0, i32 0
  %34 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %34, i64 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 96
  %38 = icmp eq i32 %37, 32
  br i1 %38, label %152, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %34, i64 0, i32 4
  %41 = load i32, i32* %40, align 8
  switch i32 %41, label %154 [
    i32 0, label %42
    i32 1, label %133
  ]

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %31, i64 -1, i32 2, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, -1
  %46 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 22, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %154, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp ugt i32 %51, %45
  br i1 %52, label %53, label %154

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 1
  br i1 %57, label %65, label %59

59:                                               ; preds = %53
  %60 = bitcast %"class.WTF::StringImpl"* %58 to i8*
  %61 = zext i32 %45 to i64
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i16
  br label %70

65:                                               ; preds = %53
  %66 = bitcast %"class.WTF::StringImpl"* %58 to i16*
  %67 = zext i32 %45 to i64
  %68 = getelementptr inbounds i16, i16* %66, i64 %67
  %69 = load i16, i16* %68, align 2
  br label %70

70:                                               ; preds = %59, %65
  %71 = phi i16 [ %64, %59 ], [ %69, %65 ]
  switch i16 %71, label %154 [
    i16 32, label %72
    i16 9, label %72
  ]

72:                                               ; preds = %70, %70
  %73 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %34)
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 286720
  %78 = icmp eq i160 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %72
  store i32 5, i32* %3, align 4
  br label %154

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %31, i64 -1, i32 6, i32 0
  %82 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %81, align 8
  %83 = icmp eq %"class.blink::ShapeResultView"* %82, null
  br i1 %83, label %154, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 0
  %86 = load i8, i8* %85, align 8, !range !3
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %104, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %90 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %89, align 8
  %91 = icmp eq %"struct.blink::NGInlineItemResult"* %90, %32
  br i1 %91, label %132, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %94 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %93, align 8
  %95 = icmp eq %"class.blink::ShapeResultView"* %94, null
  br i1 %95, label %103, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %94, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %97) #16
  %98 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %94, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %96
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %94) #16
  %102 = bitcast %"class.blink::ShapeResultView"* %94 to i8*
  tail call void @free(i8* %102) #16
  br label %103

103:                                              ; preds = %101, %96, %92
  store i8 0, i8* %85, align 8
  br label %104

104:                                              ; preds = %84, %103
  %105 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %106 = bitcast %class.scoped_refptr.1909* %105 to i64*
  store i64 0, i64* %106, align 8
  store i8 1, i8* %85, align 8
  %107 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"struct.blink::NGInlineItemResult"* %32, %"struct.blink::NGInlineItemResult"** %107, align 8
  %108 = load i32, i32* %43, align 4
  %109 = add i32 %108, -1
  %110 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %31, i64 -1, i32 2, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = icmp ugt i32 %109, %111
  br i1 %112, label %113, label %132

113:                                              ; preds = %104
  %114 = tail call %"class.blink::ShapeResultView"* @_ZN5blink13NGLineBreaker21TruncateLineEndResultERKNS_10NGLineInfoERKNS_18NGInlineItemResultEj(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGLineInfo"* dereferenceable(5208) %1, %"struct.blink::NGInlineItemResult"* dereferenceable(160) %32, i32 %109)
  %115 = load i8, i8* %85, align 8, !range !3
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %118, !prof !2

117:                                              ; preds = %113
  tail call void @llvm.trap() #16
  unreachable

118:                                              ; preds = %113
  %119 = ptrtoint %"class.blink::ShapeResultView"* %114 to i64
  %120 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %121 = bitcast %class.scoped_refptr.1909* %120 to i64*
  %122 = getelementptr inbounds %class.scoped_refptr.1909, %class.scoped_refptr.1909* %120, i64 0, i32 0
  %123 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %122, align 8
  store i64 %119, i64* %121, align 8
  %124 = icmp eq %"class.blink::ShapeResultView"* %123, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %123, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %126) #16
  %127 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %125
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %123) #16
  %131 = bitcast %"class.blink::ShapeResultView"* %123 to i8*
  tail call void @free(i8* %131) #16
  br label %132

132:                                              ; preds = %118, %125, %130, %88, %104
  store i32 3, i32* %3, align 4
  br label %170

133:                                              ; preds = %39
  %134 = and i32 %36, 7
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %152, label %136

136:                                              ; preds = %133
  store i32 5, i32* %3, align 4
  %137 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 0
  %138 = load i8, i8* %137, align 8, !range !3
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %170, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %142 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %141, align 8
  %143 = icmp eq %"class.blink::ShapeResultView"* %142, null
  br i1 %143, label %151, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %142, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %145) #16
  %146 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %142, i64 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %144
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %142) #16
  %150 = bitcast %"class.blink::ShapeResultView"* %142 to i8*
  tail call void @free(i8* %150) #16
  br label %151

151:                                              ; preds = %149, %144, %140
  store i8 0, i8* %137, align 8
  br label %170

152:                                              ; preds = %30, %133
  %153 = icmp eq %"struct.blink::NGInlineItemResult"* %32, %23
  br i1 %153, label %154, label %30

154:                                              ; preds = %39, %152, %42, %49, %21, %80, %70, %79
  %155 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 0
  %156 = load i8, i8* %155, align 8, !range !3
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %170, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %160 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %159, align 8
  %161 = icmp eq %"class.blink::ShapeResultView"* %160, null
  br i1 %161, label %169, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %160, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %163) #16
  %164 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %160, i64 0, i32 0, i32 0, i32 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %169

167:                                              ; preds = %162
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %160) #16
  %168 = bitcast %"class.blink::ShapeResultView"* %160 to i8*
  tail call void @free(i8* %168) #16
  br label %169

169:                                              ; preds = %167, %162, %158
  store i8 0, i8* %155, align 8
  br label %170

170:                                              ; preds = %169, %154, %151, %136, %132, %20, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink13NGLineBreaker29TrailingCollapsibleSpaceWidthEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  tail call void @_ZN5blink13NGLineBreaker31ComputeTrailingCollapsibleSpaceEPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, %"class.blink::NGLineInfo"* %1)
  %3 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %35, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 36, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %10 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %9, align 8
  %11 = icmp eq %"class.blink::ShapeResultView"* %10, null
  br i1 %11, label %32, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %10, i64 0, i32 6
  %14 = load float, float* %13, align 8
  %15 = fmul float %14, 6.400000e+01
  %16 = tail call float @llvm.ceil.f32(float %15) #16
  %17 = fcmp ult float %16, 0xC1E0000000000000
  %18 = fcmp ugt float %16, 0x41DFFFFFE0000000
  %19 = fcmp ogt float %16, 0xC1E0000000000000
  %20 = select i1 %19, float %16, float 0xC1E0000000000000
  %21 = fptosi float %20 to i32
  %22 = select i1 %17, i32 0, i32 2147483647
  %23 = select i1 %18, i32 %22, i32 %21
  %24 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %8, i64 0, i32 4, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %23, -1
  %27 = select i1 %26, i32 -2147483648, i32 2147483647
  %28 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %25, i32 %23) #16
  %29 = extractvalue { i32, i1 } %28, 1
  %30 = extractvalue { i32, i1 } %28, 0
  %31 = select i1 %29, i32 %27, i32 %30, !prof !2
  br label %35

32:                                               ; preds = %6
  %33 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %8, i64 0, i32 4, i32 0
  %34 = load i32, i32* %33, align 4
  br label %35

35:                                               ; preds = %2, %32, %12
  %36 = phi i32 [ %31, %12 ], [ %34, %32 ], [ 0, %2 ]
  ret i32 %36
}

declare %"class.blink::ShapeResult"* @_ZN5blink11ShapeResult29CreateForTabulationCharactersEPKNS_4FontENS_13TextDirectionERKNS_7TabSizeEfjj(%"class.blink::Font"*, i8 zeroext, %"struct.blink::TabSize"* dereferenceable(8), float, i32, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN5blink36ComputeLineMarginsForVisualContainerERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #6 comdat {
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = and i160 %7, 44601490397061246283071436545296723011960832
  %9 = icmp eq i160 %8, 0
  br i1 %9, label %100, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 512
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %100

15:                                               ; preds = %10
  %16 = and i32 %12, 2048
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %15
  %19 = lshr i32 %12, 26
  %20 = and i32 %19, 3
  switch i32 %20, label %21 [
    i32 0, label %22
    i32 1, label %56
    i32 2, label %25
    i32 3, label %26
  ]

21:                                               ; preds = %18
  unreachable

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  br label %56

25:                                               ; preds = %18
  br label %56

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %28 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %27 to i32**
  %29 = load i32*, i32** %28, align 8
  %30 = load i32, i32* %29, align 8
  br label %56

31:                                               ; preds = %15
  %32 = lshr i32 %12, 28
  %33 = and i32 %32, 3
  switch i32 %33, label %34 [
    i32 0, label %35
    i32 1, label %56
    i32 2, label %56
    i32 3, label %37
  ]

34:                                               ; preds = %31
  unreachable

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  br label %41

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %39 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %38, align 8
  %40 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %39, i64 0, i32 0, i32 1, i32 0
  br label %41

41:                                               ; preds = %37, %35
  %42 = phi i32* [ %40, %37 ], [ %36, %35 ]
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, -64
  br i1 %44, label %56, label %45

45:                                               ; preds = %41
  switch i32 %33, label %46 [
    i32 0, label %47
    i32 1, label %56
    i32 2, label %50
    i32 3, label %51
  ]

46:                                               ; preds = %45
  unreachable

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  %49 = load i32, i32* %48, align 4
  br label %56

50:                                               ; preds = %45
  br label %56

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %53 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %52, align 8
  %54 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %53, i64 0, i32 0, i32 1, i32 0
  %55 = load i32, i32* %54, align 4
  br label %56

56:                                               ; preds = %18, %22, %25, %26, %31, %31, %41, %45, %47, %50, %51
  %57 = phi i32 [ %30, %26 ], [ -64, %25 ], [ %24, %22 ], [ 0, %18 ], [ %55, %51 ], [ -64, %50 ], [ %49, %47 ], [ 0, %45 ], [ 0, %41 ], [ 0, %31 ], [ 0, %31 ]
  %58 = tail call { i64, i64 } @_ZN5blink22ComputePhysicalMarginsERKNS_13ComputedStyleENS_10LayoutUnitE(%"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 %57) #16
  %59 = extractvalue { i64, i64 } %58, 0
  %60 = lshr i64 %59, 32
  %61 = extractvalue { i64, i64 } %58, 1
  %62 = load i32, i32* %11, align 8
  %63 = lshr i32 %62, 4
  %64 = trunc i32 %63 to i8
  %65 = and i8 %64, 7
  %66 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66)
  %67 = bitcast { i64, i64 }* %3 to %"struct.blink::NGLineBoxStrut"*
  %68 = bitcast { i64, i64 }* %4 to %"struct.blink::NGBoxStrut"*
  %69 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #16
  switch i8 %65, label %86 [
    i8 0, label %70
    i8 1, label %75
    i8 3, label %75
    i8 2, label %78
    i8 4, label %82
  ]

70:                                               ; preds = %56
  %71 = lshr i64 %61, 32
  %72 = and i64 %59, 4294967295
  %73 = shl i64 %61, 32
  %74 = or i64 %73, %72
  br label %86

75:                                               ; preds = %56, %56
  %76 = and i64 %61, -4294967296
  %77 = or i64 %76, %60
  br label %86

78:                                               ; preds = %56
  %79 = lshr i64 %61, 32
  %80 = and i64 %59, -4294967296
  %81 = or i64 %80, %79
  br label %86

82:                                               ; preds = %56
  %83 = lshr i64 %61, 32
  %84 = and i64 %59, -4294967296
  %85 = or i64 %84, %83
  br label %86

86:                                               ; preds = %56, %70, %75, %78, %82
  %87 = phi i64 [ 0, %56 ], [ %85, %82 ], [ %81, %78 ], [ %77, %75 ], [ %74, %70 ]
  %88 = phi i64 [ 0, %56 ], [ %59, %82 ], [ %61, %78 ], [ %61, %75 ], [ %60, %70 ]
  %89 = phi i64 [ 0, %56 ], [ %61, %82 ], [ %59, %78 ], [ %59, %75 ], [ %71, %70 ]
  %90 = shl i64 %88, 32
  %91 = and i64 %89, 4294967295
  %92 = or i64 %91, %90
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %87, i64* %94, align 8
  %95 = icmp eq i8 %65, 2
  call void @_ZN5blink14NGLineBoxStrutC1ERKNS_10NGBoxStrutEb(%"struct.blink::NGLineBoxStrut"* nonnull %67, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %68, i1 zeroext %95) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #16
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %99 = load i64, i64* %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66)
  br label %100

100:                                              ; preds = %10, %2, %86
  %101 = phi i64 [ %99, %86 ], [ 0, %10 ], [ 0, %2 ]
  %102 = phi i64 [ %97, %86 ], [ 0, %10 ], [ 0, %2 ]
  %103 = insertvalue { i64, i64 } undef, i64 %102, 0
  %104 = insertvalue { i64, i64 } %103, i64 %101, 1
  ret { i64, i64 } %104
}

declare %"class.blink::NGLayoutResult"* @_ZN5blink11NGBlockNode18LayoutAtomicInlineERKNS_17NGConstraintSpaceERKNS_13ComputedStyleEbNS_23NGBaselineAlgorithmTypeE(%"class.blink::NGBlockNode"*, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), i1 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30NGMinMaxConstraintSpaceBuilderC2ERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_17NGLayoutInputNodeEb(%"class.blink::NGMinMaxConstraintSpaceBuilder"*, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::NGLayoutInputNode"* dereferenceable(16), i1 zeroext) unnamed_addr #2 comdat align 2 {
  %6 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0
  %7 = bitcast %"class.blink::NGLayoutInputNode"* %3 to %"class.blink::LayoutObject"**
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = lshr i160 %13, 102
  %15 = trunc i160 %14 to i16
  %16 = and i16 %15, 3
  %17 = lshr i160 %13, 108
  %18 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = zext i1 %4 to i8
  %21 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 -64, i32* %21, align 4
  %22 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 -64, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 3, i32 0
  %25 = shl nuw nsw i16 %16, 4
  %26 = trunc i160 %17 to i16
  %27 = and i16 %26, 128
  %28 = bitcast %union.anon.1634* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #16
  %29 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 -64, i32* %29, align 4
  %30 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 2
  %31 = and i32 %19, 112
  %32 = icmp ne i32 %31, 0
  %33 = icmp eq i16 %16, 0
  %34 = xor i1 %32, %33
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %30, align 4
  %36 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 3
  store i8 %20, i8* %36, align 1
  %37 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 4
  store i8 0, i8* %37, align 2
  %38 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 5
  store i8 1, i8* %38, align 1
  %39 = zext i1 %4 to i32
  %40 = shl nuw nsw i32 %39, 10
  %41 = select i1 %34, i32 0, i32 2048
  %42 = or i16 %25, %27
  %43 = zext i16 %42 to i32
  %44 = or i32 %40, %43
  %45 = or i32 %44, %41
  store i32 %45, i32* %24, align 8
  %46 = load i32, i32* %18, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %67, label %49

49:                                               ; preds = %5
  %50 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %51 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %50, align 8
  %52 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %51, i64 0, i32 6
  %53 = load i16, i16* %52, align 8
  %54 = and i16 %53, 512
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %67, label %56

56:                                               ; preds = %49
  %57 = tail call noalias i8* @malloc(i64 88) #16
  %58 = getelementptr inbounds i8, i8* %57, i64 24
  %59 = bitcast i8* %58 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 0, i64 24, i1 false) #16
  store i32 -64, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %57, i64 28
  %61 = bitcast i8* %60 to i32*
  store i32 0, i32* %61, align 4
  %62 = getelementptr inbounds i8, i8* %57, i64 32
  %63 = bitcast i8* %62 to i16*
  %64 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %65 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %64 to i8**
  store i8* %57, i8** %65, align 8
  %66 = or i32 %45, 1
  store i32 %66, i32* %24, align 8
  store i16 512, i16* %63, align 8
  br label %67

67:                                               ; preds = %5, %49, %56
  %68 = getelementptr inbounds %"class.blink::NGLayoutInputNode", %"class.blink::NGLayoutInputNode"* %3, i64 0, i32 0
  %69 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::NGLayoutInputNode", %"class.blink::NGLayoutInputNode"* %3, i64 0, i32 1
  %71 = bitcast i8* %70 to i64*
  %72 = load i64, i64* %71, align 8
  tail call void @_ZN5blink39SetOrthogonalFallbackInlineSizeIfNeededERKNS_13ComputedStyleENS_17NGLayoutInputNodeEPNS_24NGConstraintSpaceBuilderE(%"class.blink::ComputedStyle"* dereferenceable(104) %2, %"class.blink::LayoutBox"* %69, i64 %72, %"class.blink::NGConstraintSpaceBuilder"* %6) #16
  %73 = load i32, i32* %24, align 8
  %74 = or i32 %73, 65536
  store i32 %74, i32* %24, align 8
  %75 = load i32, i32* %18, align 8
  %76 = and i32 %75, 1
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %126, label %78

78:                                               ; preds = %67
  %79 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %80 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %79, align 8
  %81 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %80, i64 0, i32 6
  %82 = load i16, i16* %81, align 8
  %83 = and i16 %82, 1024
  %84 = icmp eq i16 %83, 0
  br i1 %84, label %126, label %85

85:                                               ; preds = %78
  %86 = load i8, i8* %70, align 8
  %87 = and i8 %86, 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %98

89:                                               ; preds = %85
  %90 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %68, align 8
  %91 = bitcast %"class.blink::LayoutBox"* %90 to i1 (%"class.blink::LayoutBox"*)***
  %92 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %91, align 8
  %93 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %92, i64 182
  %94 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %93, align 8
  %95 = tail call zeroext i1 %94(%"class.blink::LayoutBox"* %90) #16
  br i1 %95, label %126, label %96

96:                                               ; preds = %89
  %97 = load i32, i32* %24, align 8
  br label %98

98:                                               ; preds = %96, %85
  %99 = phi i32 [ %97, %96 ], [ %74, %85 ]
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %104 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %103, align 8
  br label %121

105:                                              ; preds = %98
  %106 = tail call noalias i8* @malloc(i64 88) #16
  %107 = bitcast %union.anon.1634* %23 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds i8, i8* %106, i64 16
  %110 = bitcast i8* %109 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %106, i8 0, i64 16, i1 false) #16
  store i64 %108, i64* %110, align 8
  %111 = getelementptr inbounds i8, i8* %106, i64 24
  %112 = bitcast i8* %111 to i32*
  store i32 -64, i32* %112, align 4
  %113 = getelementptr inbounds i8, i8* %106, i64 28
  %114 = bitcast i8* %113 to i32*
  store i32 0, i32* %114, align 4
  %115 = getelementptr inbounds i8, i8* %106, i64 32
  %116 = bitcast i8* %115 to i16*
  store i16 0, i16* %116, align 8
  %117 = getelementptr inbounds %"class.blink::NGMinMaxConstraintSpaceBuilder", %"class.blink::NGMinMaxConstraintSpaceBuilder"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %118 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %117 to i8**
  store i8* %106, i8** %118, align 8
  %119 = or i32 %99, 1
  store i32 %119, i32* %24, align 8
  %120 = bitcast i8* %106 to %"struct.blink::NGConstraintSpace::RareData"*
  br label %121

121:                                              ; preds = %102, %105
  %122 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %104, %102 ], [ %120, %105 ]
  %123 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %122, i64 0, i32 6
  %124 = load i16, i16* %123, align 8
  %125 = or i16 %124, 1024
  store i16 %125, i16* %123, align 8
  br label %126

126:                                              ; preds = %78, %67, %121, %89
  ret void
}

declare { i64, i8 } @_ZN5blink35ComputeMinAndMaxContentContributionERKNS_13ComputedStyleERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGConstraintSpace"* dereferenceable(32), i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGConstraintSpaceD2Ev(%"class.blink::NGConstraintSpace"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %8 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %7, align 8
  %9 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  tail call void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"* nonnull %8) #16
  %11 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %8 to i8*
  tail call void @free(i8* %11) #16
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %13, align 8
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %13, align 8
  %15 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %14, null
  br i1 %15, label %76, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %14, i64 0, i32 6
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.1751", %"class.std::__1::unique_ptr.1751"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %18, align 8
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %18, align 8
  %20 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.std::__1::unique_ptr.1751"* %17 to %"struct.std::__1::default_delete.1774"*
  tail call void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.1774"* %22, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nonnull %19) #16
  br label %23

23:                                               ; preds = %21, %16
  %24 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %14, i64 0, i32 0, i32 0
  %25 = load %"class.base::RefCountedData.1735"*, %"class.base::RefCountedData.1735"** %24, align 8
  %26 = icmp eq %"class.base::RefCountedData.1735"* %25, null
  br i1 %26, label %74, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.base::RefCountedData.1735", %"class.base::RefCountedData.1735"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw sub i32* %28, i32 1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %74

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.base::RefCountedData.1735", %"class.base::RefCountedData.1735"* %25, i64 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::Vector.1737", %"class.WTF::Vector.1737"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %class.scoped_refptr.1740*, %class.scoped_refptr.1740** %33, align 8
  %35 = icmp eq %class.scoped_refptr.1740* %34, null
  br i1 %35, label %72, label %36, !prof !5

36:                                               ; preds = %31
  %37 = bitcast %class.scoped_refptr.1740* %34 to i8*
  %38 = getelementptr inbounds %"class.base::RefCountedData.1735", %"class.base::RefCountedData.1735"* %25, i64 0, i32 1, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %70, label %41, !prof !2

41:                                               ; preds = %36
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %34, i64 %42
  br label %44

44:                                               ; preds = %64, %41
  %45 = phi %class.scoped_refptr.1740* [ %65, %64 ], [ %34, %41 ]
  %46 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %45, i64 0, i32 0
  %47 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %46, align 8
  %48 = icmp eq %"struct.blink::NGExclusion"* %47, null
  br i1 %48, label %64, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %47, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %50) #16
  %51 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %64

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %47, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.base::RefCounted.1742", %"class.base::RefCounted.1742"* %55, i64 8
  %57 = bitcast %"class.base::RefCounted.1742"* %56 to %"struct.blink::NGExclusionShapeData"**
  %58 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %57, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %57, align 8
  %59 = icmp eq %"struct.blink::NGExclusionShapeData"* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %54
  %61 = bitcast %"struct.blink::NGExclusionShapeData"* %58 to i8*
  tail call void @_ZdlPv(i8* %61) #17
  br label %62

62:                                               ; preds = %60, %54
  %63 = bitcast %"struct.blink::NGExclusion"* %47 to i8*
  tail call void @free(i8* %63) #16
  br label %64

64:                                               ; preds = %62, %49, %44
  %65 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %45, i64 1
  %66 = icmp eq %class.scoped_refptr.1740* %65, %43
  br i1 %66, label %67, label %44

67:                                               ; preds = %64
  store i32 0, i32* %38, align 4
  %68 = bitcast %"class.WTF::Vector.1737"* %32 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %70

70:                                               ; preds = %67, %36
  %71 = phi i8* [ %69, %67 ], [ %37, %36 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %71) #16
  br label %72

72:                                               ; preds = %31, %70
  %73 = bitcast %"class.base::RefCountedData.1735"* %25 to i8*
  tail call void @_ZdlPv(i8* %73) #17
  br label %74

74:                                               ; preds = %72, %27, %23
  %75 = bitcast %"class.blink::NGExclusionSpaceInternal"* %14 to i8*
  tail call void @free(i8* %75) #16
  br label %76

76:                                               ; preds = %12, %74
  ret void
}

declare i64 @_ZN5blink11GetOverhangERKNS_18NGInlineItemResultE(%"struct.blink::NGInlineItemResult"* dereferenceable(160)) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink21CanApplyStartOverhangERKNS_10NGLineInfoERNS_10LayoutUnitE(%"class.blink::NGLineInfo"* dereferenceable(5208), %"class.blink::LayoutUnit"* dereferenceable(4)) local_unnamed_addr #3

declare i32 @_ZN5blink46ComputeMarginBoxInlineSizeForUnpositionedFloatEPNS_19NGUnpositionedFloatE(%"struct.blink::NGUnpositionedFloat"*) local_unnamed_addr #3

declare void @_ZN5blink13PositionFloatEPNS_19NGUnpositionedFloatEPNS_16NGExclusionSpaceE(%"struct.blink::NGPositionedFloat"* sret, %"struct.blink::NGUnpositionedFloat"*, %"class.blink::NGExclusionSpace"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker19PropagateBreakTokenE13scoped_refptrIKNS_17NGBlockBreakTokenEE(%"class.blink::NGLineBreaker"*, %"class.blink::NGBlockBreakToken"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %class.scoped_refptr.1931, align 8
  %4 = getelementptr inbounds %class.scoped_refptr.1931, %class.scoped_refptr.1931* %3, i64 0, i32 0
  store %"class.blink::NGBlockBreakToken"* %1, %"class.blink::NGBlockBreakToken"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 45
  %6 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 45, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 45, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %20, label %11, !prof !2

11:                                               ; preds = %2
  %12 = ptrtoint %"class.blink::NGBlockBreakToken"* %1 to i64
  %13 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %5, i64 0, i32 0, i32 0, i32 0
  %14 = load %class.scoped_refptr.1931*, %class.scoped_refptr.1931** %13, align 8
  %15 = zext i32 %7 to i64
  %16 = getelementptr inbounds %class.scoped_refptr.1931, %class.scoped_refptr.1931* %14, i64 %15
  %17 = bitcast %class.scoped_refptr.1931* %16 to i64*
  store i64 %12, i64* %17, align 8
  store %"class.blink::NGBlockBreakToken"* null, %"class.blink::NGBlockBreakToken"** %4, align 8
  %18 = load i32, i32* %6, align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %6, align 4
  br label %36

20:                                               ; preds = %2
  call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink17NGBlockBreakTokenEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.1928"* %5, %class.scoped_refptr.1931* nonnull dereferenceable(8) %3) #16
  %21 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %4, align 8
  %22 = icmp eq %"class.blink::NGBlockBreakToken"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %21, i64 0, i32 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %24, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #16
  %26 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %24, i64 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.base::RefCounted.1784", %"class.base::RefCounted.1784"* %24, i64 -2
  %31 = bitcast %"class.base::RefCounted.1784"* %30 to %"class.blink::NGBreakToken"*
  %32 = bitcast %"class.base::RefCounted.1784"* %30 to void (%"class.blink::NGBreakToken"*)***
  %33 = load void (%"class.blink::NGBreakToken"*)**, void (%"class.blink::NGBreakToken"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %33, i64 1
  %35 = load void (%"class.blink::NGBreakToken"*)*, void (%"class.blink::NGBreakToken"*)** %34, align 8
  call void %35(%"class.blink::NGBreakToken"* nonnull %31) #16
  br label %36

36:                                               ; preds = %11, %20, %23, %29
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN5blink25ComputeLineMarginsForSelfERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #6 comdat {
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = and i160 %7, 44601490397061246283071436545296723011960832
  %9 = icmp eq i160 %8, 0
  br i1 %9, label %105, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 512
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %105

15:                                               ; preds = %10
  %16 = and i32 %12, 2048
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %15
  %19 = lshr i32 %12, 26
  %20 = and i32 %19, 3
  switch i32 %20, label %21 [
    i32 0, label %22
    i32 1, label %56
    i32 2, label %25
    i32 3, label %26
  ]

21:                                               ; preds = %18
  unreachable

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 8
  br label %56

25:                                               ; preds = %18
  br label %56

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %28 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %27 to i32**
  %29 = load i32*, i32** %28, align 8
  %30 = load i32, i32* %29, align 8
  br label %56

31:                                               ; preds = %15
  %32 = lshr i32 %12, 28
  %33 = and i32 %32, 3
  switch i32 %33, label %34 [
    i32 0, label %35
    i32 1, label %56
    i32 2, label %56
    i32 3, label %37
  ]

34:                                               ; preds = %31
  unreachable

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  br label %41

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %39 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %38, align 8
  %40 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %39, i64 0, i32 0, i32 1, i32 0
  br label %41

41:                                               ; preds = %37, %35
  %42 = phi i32* [ %40, %37 ], [ %36, %35 ]
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, -64
  br i1 %44, label %56, label %45

45:                                               ; preds = %41
  switch i32 %33, label %46 [
    i32 0, label %47
    i32 1, label %56
    i32 2, label %50
    i32 3, label %51
  ]

46:                                               ; preds = %45
  unreachable

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  %49 = load i32, i32* %48, align 4
  br label %56

50:                                               ; preds = %45
  br label %56

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %53 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %52, align 8
  %54 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %53, i64 0, i32 0, i32 1, i32 0
  %55 = load i32, i32* %54, align 4
  br label %56

56:                                               ; preds = %18, %22, %25, %26, %31, %31, %41, %45, %47, %50, %51
  %57 = phi i32 [ %30, %26 ], [ -64, %25 ], [ %24, %22 ], [ 0, %18 ], [ %55, %51 ], [ -64, %50 ], [ %49, %47 ], [ 0, %45 ], [ 0, %41 ], [ 0, %31 ], [ 0, %31 ]
  %58 = tail call { i64, i64 } @_ZN5blink22ComputePhysicalMarginsERKNS_13ComputedStyleENS_10LayoutUnitE(%"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 %57) #16
  %59 = extractvalue { i64, i64 } %58, 0
  %60 = trunc i64 %59 to i32
  %61 = lshr i64 %59, 32
  %62 = extractvalue { i64, i64 } %58, 1
  %63 = load i160, i160* %6, align 8
  %64 = lshr i160 %63, 102
  %65 = trunc i160 %64 to i8
  %66 = and i8 %65, 3
  %67 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67)
  %68 = bitcast { i64, i64 }* %3 to %"struct.blink::NGLineBoxStrut"*
  %69 = bitcast { i64, i64 }* %4 to %"struct.blink::NGBoxStrut"*
  %70 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #16
  switch i8 %66, label %84 [
    i8 0, label %71
    i8 1, label %77
    i8 3, label %77
    i8 2, label %80
  ]

71:                                               ; preds = %56
  %72 = lshr i64 %62, 32
  %73 = trunc i64 %72 to i32
  %74 = and i64 %59, 4294967295
  %75 = shl i64 %62, 32
  %76 = or i64 %75, %74
  br label %85

77:                                               ; preds = %56, %56
  %78 = and i64 %62, -4294967296
  %79 = or i64 %78, %61
  br label %85

80:                                               ; preds = %56
  %81 = lshr i64 %62, 32
  %82 = and i64 %59, -4294967296
  %83 = or i64 %82, %81
  br label %85

84:                                               ; preds = %56
  unreachable

85:                                               ; preds = %71, %77, %80
  %86 = phi i64 [ %83, %80 ], [ %79, %77 ], [ %76, %71 ]
  %87 = phi i64 [ %62, %80 ], [ %62, %77 ], [ %61, %71 ]
  %88 = phi i32 [ %60, %80 ], [ %60, %77 ], [ %73, %71 ]
  %89 = trunc i64 %87 to i32
  %90 = and i160 %63, 41538374868278621028243970633760768
  %91 = icmp ne i160 %90, 0
  %92 = select i1 %91, i32 %88, i32 %89
  %93 = select i1 %91, i32 %89, i32 %88
  %94 = zext i32 %92 to i64
  %95 = shl nuw i64 %94, 32
  %96 = zext i32 %93 to i64
  %97 = or i64 %95, %96
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %86, i64* %99, align 8
  %100 = icmp eq i8 %66, 2
  call void @_ZN5blink14NGLineBoxStrutC1ERKNS_10NGBoxStrutEb(%"struct.blink::NGLineBoxStrut"* nonnull %68, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %69, i1 zeroext %100) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #16
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %104 = load i64, i64* %103, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67)
  br label %105

105:                                              ; preds = %10, %2, %85
  %106 = phi i64 [ %104, %85 ], [ 0, %10 ], [ 0, %2 ]
  %107 = phi i64 [ %102, %85 ], [ 0, %10 ], [ 0, %2 ]
  %108 = insertvalue { i64, i64 } undef, i64 %107, 0
  %109 = insertvalue { i64, i64 } %108, i64 %106, 1
  ret { i64, i64 } %109
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13NGLineBreaker20IsPreviousItemOfTypeENS_12NGInlineItem16NGInlineItemTypeE(%"class.blink::NGLineBreaker"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 21
  %8 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %8, i64 0, i32 1
  %10 = add i32 %4, -1
  %11 = tail call dereferenceable(32) %"class.blink::NGInlineItem"* @_ZNK3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1841"* %9, i32 %10)
  %12 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %11, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, %1
  br label %15

15:                                               ; preds = %2, %6
  %16 = phi i1 [ %14, %6 ], [ false, %2 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13NGLineBreaker14RewindOverflowEjPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"*, i32, %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 21
  %5 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %151

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 13
  %12 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 14
  %13 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 22, i32 0, i32 0
  br label %14

14:                                               ; preds = %10, %141
  %15 = phi i32 [ %1, %10 ], [ %142, %141 ]
  %16 = phi i32 [ %1, %10 ], [ %144, %141 ]
  %17 = phi i32 [ 0, %10 ], [ %143, %141 ]
  %18 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %6, i32 %16) #16
  %19 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %18, i64 0, i32 0
  %20 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %20, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  switch i32 %22, label %141 [
    i32 0, label %23
    i32 1, label %117
    i32 3, label %129
    i32 4, label %133
    i32 7, label %137
    i32 6, label %137
    i32 2, label %137
  ]

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %18, i64 0, i32 6, i32 0
  %25 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %24, align 8
  %26 = icmp eq %"class.blink::ShapeResultView"* %25, null
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = load i8, i8* %11, align 8, !range !3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %137, label %30

30:                                               ; preds = %27
  %31 = load i8, i8* %12, align 1, !range !3
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %137

33:                                               ; preds = %23, %30
  %34 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %20)
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8
  %38 = lshr i160 %37, 12
  %39 = trunc i160 %38 to i32
  %40 = and i32 %39, 127
  %41 = and i32 %39, 18
  %42 = icmp eq i32 %41, 0
  %43 = icmp ne i32 %40, 64
  %44 = and i1 %42, %43
  br i1 %44, label %45, label %137

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %18, i64 0, i32 2, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %137, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp ugt i32 %52, %47
  br i1 %53, label %54, label %137

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 1
  br i1 %58, label %66, label %60

60:                                               ; preds = %54
  %61 = bitcast %"class.WTF::StringImpl"* %59 to i8*
  %62 = zext i32 %47 to i64
  %63 = getelementptr inbounds i8, i8* %61, i64 %62
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i16
  br label %71

66:                                               ; preds = %54
  %67 = bitcast %"class.WTF::StringImpl"* %59 to i16*
  %68 = zext i32 %47 to i64
  %69 = getelementptr inbounds i16, i16* %67, i64 %68
  %70 = load i16, i16* %69, align 2
  br label %71

71:                                               ; preds = %60, %66
  %72 = phi i16 [ %65, %60 ], [ %70, %66 ]
  switch i16 %72, label %137 [
    i16 32, label %73
    i16 9, label %73
  ]

73:                                               ; preds = %71, %71
  %74 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %24, align 8
  %75 = icmp eq %"class.blink::ShapeResultView"* %74, null
  br i1 %75, label %115, label %76

76:                                               ; preds = %73
  %77 = add nuw i32 %47, 1
  %78 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %18, i64 0, i32 2, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = sub i32 %79, %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 1
  %86 = bitcast %"class.WTF::StringImpl"* %85 to i16*
  %87 = zext i32 %77 to i64
  %88 = getelementptr inbounds i16, i16* %86, i64 %87
  %89 = bitcast i16* %88 to i8*
  %90 = bitcast %"class.WTF::StringImpl"* %85 to i8*
  %91 = getelementptr inbounds i8, i8* %90, i64 %87
  %92 = select i1 %84, i8* %89, i8* %91
  %93 = zext i32 %80 to i64
  %94 = icmp eq i32 %80, 0
  br i1 %94, label %141, label %95

95:                                               ; preds = %76
  %96 = load atomic i32, i32* %81 monotonic, align 4
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %106, label %99

99:                                               ; preds = %95, %103
  %100 = phi i64 [ %104, %103 ], [ 0, %95 ]
  %101 = getelementptr inbounds i8, i8* %92, i64 %100
  %102 = load i8, i8* %101, align 1
  switch i8 %102, label %115 [
    i8 32, label %103
    i8 9, label %103
  ]

103:                                              ; preds = %99, %99
  %104 = add nuw nsw i64 %100, 1
  %105 = icmp eq i64 %104, %93
  br i1 %105, label %141, label %99

106:                                              ; preds = %95
  %107 = bitcast i8* %92 to i16*
  br label %108

108:                                              ; preds = %112, %106
  %109 = phi i64 [ %113, %112 ], [ 0, %106 ]
  %110 = getelementptr inbounds i16, i16* %107, i64 %109
  %111 = load i16, i16* %110, align 2
  switch i16 %111, label %115 [
    i16 32, label %112
    i16 9, label %112
  ]

112:                                              ; preds = %108, %108
  %113 = add nuw nsw i64 %109, 1
  %114 = icmp eq i64 %113, %93
  br i1 %114, label %141, label %108

115:                                              ; preds = %73, %99, %108
  %116 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 0
  store i32 2, i32* %116, align 8
  tail call void @_ZN5blink13NGLineBreaker6RewindEjPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, i32 %16, %"class.blink::NGLineInfo"* %2)
  br label %163

117:                                              ; preds = %14
  %118 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %20)
  %119 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %118, i64 0, i32 0, i32 9
  %120 = bitcast [20 x i8]* %119 to i160*
  %121 = load i160, i160* %120, align 8
  %122 = lshr i160 %121, 12
  %123 = trunc i160 %122 to i32
  %124 = and i32 %123, 127
  %125 = and i32 %123, 18
  %126 = icmp ne i32 %125, 0
  %127 = icmp eq i32 %124, 64
  %128 = or i1 %127, %126
  br i1 %128, label %137, label %141

129:                                              ; preds = %14
  %130 = icmp eq i32 %17, 0
  %131 = select i1 %130, i32 %16, i32 %15
  %132 = add i32 %17, 1
  br label %141

133:                                              ; preds = %14
  %134 = icmp eq i32 %17, 0
  %135 = add i32 %17, -1
  %136 = select i1 %134, i32 0, i32 %135
  br label %141

137:                                              ; preds = %45, %50, %14, %14, %14, %71, %33, %30, %27, %117
  %138 = icmp eq i32 %17, 0
  %139 = select i1 %138, i32 %16, i32 %15
  %140 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 0
  store i32 0, i32* %140, align 8
  tail call void @_ZN5blink13NGLineBreaker6RewindEjPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, i32 %139, %"class.blink::NGLineInfo"* %2)
  br label %163

141:                                              ; preds = %103, %112, %14, %117, %76, %133, %129
  %142 = phi i32 [ %15, %133 ], [ %131, %129 ], [ %15, %76 ], [ %15, %117 ], [ %15, %14 ], [ %15, %112 ], [ %15, %103 ]
  %143 = phi i32 [ %136, %133 ], [ %132, %129 ], [ %17, %76 ], [ %17, %117 ], [ %17, %14 ], [ %17, %112 ], [ %17, %103 ]
  %144 = add nuw i32 %16, 1
  %145 = load i32, i32* %7, align 4
  %146 = icmp ult i32 %144, %145
  br i1 %146, label %14, label %147

147:                                              ; preds = %141
  %148 = icmp eq i32 %143, 0
  br i1 %148, label %151, label %149

149:                                              ; preds = %147
  %150 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 0
  store i32 0, i32* %150, align 8
  tail call void @_ZN5blink13NGLineBreaker6RewindEjPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* %0, i32 %142, %"class.blink::NGLineInfo"* %2)
  br label %163

151:                                              ; preds = %3, %147
  %152 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 3
  store i32 2, i32* %152, align 4
  %153 = tail call i32 @_ZNK5blink10NGLineInfo12ComputeWidthEv(%"class.blink::NGLineInfo"* %2) #16
  %154 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 4, i32 0
  store i32 %153, i32* %154, align 8
  %155 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 0
  store i32 0, i32* %155, align 8
  %156 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %5, i64 0, i32 1, i32 0, i32 0, i32 2
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %157, %159
  br i1 %160, label %161, label %163

161:                                              ; preds = %151
  %162 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 14
  store i8 1, i8* %162, align 2
  br label %163

163:                                              ; preds = %115, %137, %151, %161, %149
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN5blink18NGInlineItemResultaSERKS0_(%"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"* dereferenceable(160)) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast %"struct.blink::NGInlineItemResult"* %0 to i8*
  %4 = bitcast %"struct.blink::NGInlineItemResult"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 36, i1 false)
  %5 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 6
  %6 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 6, i32 0
  %7 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %6, align 8
  %8 = icmp eq %"class.blink::ShapeResultView"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %7, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %10) #16
  br label %11

11:                                               ; preds = %2, %9
  %12 = ptrtoint %"class.blink::ShapeResultView"* %7 to i64
  %13 = bitcast %class.scoped_refptr.1909* %5 to i64*
  %14 = getelementptr inbounds %class.scoped_refptr.1909, %class.scoped_refptr.1909* %5, i64 0, i32 0
  %15 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %14, align 8
  store i64 %12, i64* %13, align 8
  %16 = icmp eq %"class.blink::ShapeResultView"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %18) #16
  %19 = getelementptr inbounds %"class.blink::ShapeResultView", %"class.blink::ShapeResultView"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  tail call void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"* nonnull %15) #16
  %23 = bitcast %"class.blink::ShapeResultView"* %15 to i8*
  tail call void @free(i8* %23) #16
  br label %24

24:                                               ; preds = %11, %17, %22
  %25 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 7
  %26 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 7, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %46

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #16
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %34
  tail call void @llvm.trap() #16
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %46

46:                                               ; preds = %44, %29, %24
  %47 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %48 = bitcast %"class.WTF::String"* %25 to i64*
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  store i64 %47, i64* %48, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #16
  br label %65

65:                                               ; preds = %46, %61, %64
  %66 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 8
  %67 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 8, i32 0
  %68 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %67, align 8
  %69 = icmp eq %"class.blink::ShapeResult"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %68, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %71) #16
  br label %72

72:                                               ; preds = %65, %70
  %73 = ptrtoint %"class.blink::ShapeResult"* %68 to i64
  %74 = bitcast %class.scoped_refptr.1844* %66 to i64*
  %75 = getelementptr inbounds %class.scoped_refptr.1844, %class.scoped_refptr.1844* %66, i64 0, i32 0
  %76 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %75, align 8
  store i64 %73, i64* %74, align 8
  %77 = icmp eq %"class.blink::ShapeResult"* %76, null
  br i1 %77, label %85, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %76, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %79) #16
  %80 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %76, i64 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %78
  tail call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %76) #16
  %84 = bitcast %"class.blink::ShapeResult"* %76 to i8*
  tail call void @free(i8* %84) #16
  br label %85

85:                                               ; preds = %72, %78, %83
  %86 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 9
  %87 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 9, i32 0
  %88 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %87, align 8
  %89 = icmp eq %"class.blink::NGLayoutResult"* %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %88, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %91) #16
  br label %92

92:                                               ; preds = %85, %90
  %93 = ptrtoint %"class.blink::NGLayoutResult"* %88 to i64
  %94 = bitcast %class.scoped_refptr.1631* %86 to i64*
  %95 = getelementptr inbounds %class.scoped_refptr.1631, %class.scoped_refptr.1631* %86, i64 0, i32 0
  %96 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %95, align 8
  store i64 %93, i64* %94, align 8
  %97 = icmp eq %"class.blink::NGLayoutResult"* %96, null
  br i1 %97, label %105, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %96, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %99) #16
  %100 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %98
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %96) #16
  %104 = bitcast %"class.blink::NGLayoutResult"* %96 to i8*
  tail call void @free(i8* %104) #16
  br label %105

105:                                              ; preds = %92, %98, %103
  %106 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 10
  %107 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %108 = load i8, i8* %107, align 8, !range !3
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %113, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.absl::optional.1913", %"class.absl::optional.1913"* %106, i64 0, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN4absl17optional_internal18optional_data_baseIN5blink17NGPositionedFloatEE6assignIRKS3_EEvOT_(%"class.absl::optional_internal::optional_data_base.1915"* %111, %"struct.blink::NGPositionedFloat"* dereferenceable(24) %112) #16
  br label %129

113:                                              ; preds = %105
  %114 = getelementptr inbounds %"class.absl::optional.1913", %"class.absl::optional.1913"* %106, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8, i8* %114, align 8, !range !3
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %129, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %119 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %118, align 8
  %120 = icmp eq %"class.blink::NGLayoutResult"* %119, null
  br i1 %120, label %128, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %119, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %122) #16
  %123 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %119, i64 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %128

126:                                              ; preds = %121
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %119) #16
  %127 = bitcast %"class.blink::NGLayoutResult"* %119 to i8*
  tail call void @free(i8* %127) #16
  br label %128

128:                                              ; preds = %126, %121, %117
  store i8 0, i8* %114, align 8
  br label %129

129:                                              ; preds = %110, %113, %128
  %130 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 11
  %131 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %1, i64 0, i32 11
  %132 = bitcast %"struct.blink::NGLineBoxStrut"* %130 to i8*
  %133 = bitcast %"struct.blink::NGLineBoxStrut"* %131 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 56, i1 false)
  ret %"struct.blink::NGInlineItemResult"* %0
}

declare i32 @_ZNK5blink10NGLineInfo12ComputeWidthEv(%"class.blink::NGLineInfo"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink13NGLineBreaker19ComputeCurrentStyleEjPNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* nocapture readonly, i32, %"class.blink::NGLineInfo"*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 2
  %5 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %4, i32 %1) #16
  %6 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %5, i64 0, i32 0
  %7 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %7, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %12 [
    i32 0, label %10
    i32 4, label %10
  ]

10:                                               ; preds = %3, %3
  %11 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %7)
  br label %42

12:                                               ; preds = %3, %15
  %13 = phi i32 [ %16, %15 ], [ %1, %3 ]
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %31, label %15

15:                                               ; preds = %12
  %16 = add i32 %13, -1
  %17 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"* %4, i32 %16) #16
  %18 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %17, i64 0, i32 0
  %19 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %19, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %12 [
    i32 0, label %22
    i32 3, label %22
    i32 4, label %24
  ]

22:                                               ; preds = %15, %15
  %23 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %19)
  br label %42

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %19, i64 0, i32 3
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 7
  %28 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 5, i32 0
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  br label %42

31:                                               ; preds = %12
  %32 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 25, i32 0
  %33 = load %"class.blink::NGInlineBreakToken"*, %"class.blink::NGInlineBreakToken"** %32, align 8
  %34 = icmp eq %"class.blink::NGInlineBreakToken"* %33, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NGInlineBreakToken", %"class.blink::NGInlineBreakToken"* %33, i64 0, i32 1, i32 0
  %37 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %36, align 8
  %38 = icmp eq %"class.blink::ComputedStyle"* %37, null
  br i1 %38, label %39, label %42

39:                                               ; preds = %31, %35
  %40 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %2, i64 0, i32 1
  %41 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %40, align 8
  br label %42

42:                                               ; preds = %35, %39, %24, %22, %10
  %43 = phi %"class.blink::ComputedStyle"* [ %11, %10 ], [ %23, %22 ], [ %30, %24 ], [ %41, %39 ], [ %37, %35 ]
  ret %"class.blink::ComputedStyle"* %43
}

declare %"class.blink::Hyphenation"* @_ZNK5blink13ComputedStyle14GetHyphenationEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink13ComputedStyle26LocaleForLineBreakIteratorEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink18ShapeResultSpacingIN3WTF6StringEE10SetSpacingERKNS_15FontDescriptionE(%"class.blink::ShapeResultSpacing"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::NGInlineItem"* @_ZNK3WTF6VectorIN5blink12NGInlineItemELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1841"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1841", %"class.WTF::Vector.1841"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.1841", %"class.WTF::Vector.1841"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %24, i64 %25
  ret %"class.blink::NGInlineItem"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGInlineBreakToken"* @_ZNK5blink13NGLineBreaker16CreateBreakTokenERKNS_10NGLineInfoE(%"class.blink::NGLineBreaker"* nocapture readonly, %"class.blink::NGLineInfo"* nocapture readonly dereferenceable(5208)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 21
  %4 = load %"struct.blink::NGInlineItemsData"*, %"struct.blink::NGInlineItemsData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"struct.blink::NGInlineItemsData", %"struct.blink::NGInlineItemsData"* %4, i64 0, i32 1, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ult i32 %6, %8
  br i1 %9, label %10, label %35

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 7, i32 0, i32 0
  %12 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 7, i32 0, i32 1
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 26, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 17
  %21 = load i8, i8* %20, align 4, !range !3
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %1, i64 0, i32 13
  %24 = load i8, i8* %23, align 1, !range !3
  %25 = icmp eq i8 %24, 0
  %26 = select i1 %25, i32 0, i32 2
  %27 = or i32 %26, %22
  %28 = getelementptr inbounds %"class.blink::NGLineBreaker", %"class.blink::NGLineBreaker"* %0, i64 0, i32 46
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  %31 = select i1 %30, i32 0, i32 4
  %32 = or i32 %27, %31
  %33 = tail call noalias i8* @malloc(i64 48) #16
  %34 = bitcast i8* %33 to %"class.blink::NGInlineBreakToken"*
  tail call void @_ZN5blink18NGInlineBreakTokenC1EN4base7PassKeyIS0_EENS_12NGInlineNodeEPKNS_13ComputedStyleEjjj(%"class.blink::NGInlineBreakToken"* %34, %"class.blink::LayoutBox"* %12, i64 %15, %"class.blink::ComputedStyle"* %17, i32 %6, i32 %19, i32 %32) #16
  br label %35

35:                                               ; preds = %2, %10
  %36 = phi %"class.blink::NGInlineBreakToken"* [ %34, %10 ], [ null, %2 ]
  ret %"class.blink::NGInlineBreakToken"* %36
}

declare zeroext i1 @_ZNK5blink15LayoutBlockFlow28CanContainFirstFormattedLineEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN5blink24ReleaseLineBreakIteratorEPN6icu_6913BreakIteratorE(%"class.icu_69::BreakIterator"*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare i32 @_ZN3WTF10StringImpl11ReverseFindEDsj(%"class.WTF::StringImpl"*, i16 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #11

declare %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #9

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #12

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIPKN5blink12NGInlineItemELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.1966"*, %"class.blink::NGInlineItem"**) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %"class.blink::NGInlineItem"** %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #9

declare i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %24, i64 %25
  ret %"struct.blink::NGInlineItemResult"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare dereferenceable(64) %"struct.blink::NGInlineNodeData"* @_ZNK5blink12NGInlineNode10EnsureDataEv(%"class.blink::NGInlineNode"*) local_unnamed_addr #3

declare i32 @_ZNK5blink21LazyLineBreakIterator21NextBreakablePositionEiNS_13LineBreakTypeEi(%"class.blink::LazyLineBreakIterator"*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"*) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, -824633720840
  %6 = or i96 %5, 274877906944
  store i96 %6, i96* %3, align 4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !3
  %8 = icmp ne i8 %7, 0
  %9 = and i96 %4, 16777216
  %10 = icmp eq i96 %9, 0
  %11 = and i1 %10, %8
  br i1 %11, label %12, label %27

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 67108876
  %20 = icmp eq i32 %19, 67108864
  br i1 %20, label %21, label %27, !prof !26

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  %23 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %22) #16
  %24 = icmp eq %"class.blink::DisplayLockContext"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %23) #16
  br i1 %26, label %27, label %30

27:                                               ; preds = %25, %21, %16, %12, %1
  %28 = load i96, i96* %3, align 4
  %29 = and i96 %28, -57
  store i96 %29, i96* %3, align 4
  br label %55

30:                                               ; preds = %25
  %31 = load i96, i96* %3, align 4
  %32 = and i96 %31, 56
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %34, label %55

34:                                               ; preds = %30
  %35 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !3
  %36 = icmp ne i8 %35, 0
  %37 = and i96 %31, 16777216
  %38 = icmp eq i96 %37, 0
  %39 = and i1 %38, %36
  br i1 %39, label %40, label %51

40:                                               ; preds = %34
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 67108876
  %47 = icmp eq i32 %46, 67108864
  br i1 %47, label %48, label %51, !prof !26

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::Node"* %41 to %"class.blink::Element"*
  %50 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %49) #16
  br label %51

51:                                               ; preds = %48, %43, %40, %34
  %52 = phi %"class.blink::DisplayLockContext"* [ null, %34 ], [ %50, %48 ], [ null, %43 ], [ null, %40 ]
  %53 = getelementptr inbounds %"class.blink::DisplayLockContext", %"class.blink::DisplayLockContext"* %52, i64 0, i32 14
  store i8 1, i8* %53, align 2
  %54 = load i96, i96* %3, align 4
  br label %55

55:                                               ; preds = %27, %30, %51
  %56 = phi i96 [ %31, %30 ], [ %54, %51 ], [ %29, %27 ]
  %57 = and i96 %56, -1125899906842625
  store i96 %57, i96* %3, align 4
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %0) #16
  ret void
}

declare void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #14

declare zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #3

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1875"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1875", %"class.WTF::Vector.1875"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.1875", %"class.WTF::Vector.1875"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_(%"class.WTF::Vector.1875"*, i32* dereferenceable(4)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1875", %"class.WTF::Vector.1875"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1875", %"class.WTF::Vector.1875"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1875", %"class.WTF::Vector.1875"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %26) #16
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #16
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1875"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !5

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #16
  %47 = bitcast %"class.WTF::Vector.1875"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  %51 = bitcast %"class.WTF::Vector.1875"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.1875", %"class.WTF::Vector.1875"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !5

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %71) #16
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #16
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1875"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !5

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #16
  %87 = bitcast %"class.WTF::Vector.1875"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #16
  %91 = bitcast %"class.WTF::Vector.1875"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1970"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0), i8* %15, i8* %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #16
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !5

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %31, align 8
  %33 = icmp eq %"struct.blink::NGInlineItemResult"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 32
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18NGInlineItemResultEEEmm(i64 %37) #16
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18NGInlineItemResultEEEPKcv, i64 0, i64 0)) #16
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1970"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = udiv i64 %38, 160
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1970"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 32, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1970"* %0, i32 %27) #16
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN5blink18NGInlineItemResultC1EPKNS_12NGInlineItemEjRKNS_12NGTextOffsetEbbb(%"struct.blink::NGInlineItemResult"*, %"class.blink::NGInlineItem"*, i32, %"struct.blink::NGTextOffset"* dereferenceable(8), i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal %"class.blink::ShapeResult"* @"_ZZN5blink13NGLineBreaker9BreakTextEPNS_18NGInlineItemResultERKNS_12NGInlineItemERKNS_11ShapeResultENS_10LayoutUnitES9_PNS_10NGLineInfoEEN3$_08__invokeEPvjj"(i8* nocapture readonly, i32, i32) #6 align 2 {
  %4 = bitcast i8* %0 to %"class.blink::NGLineBreaker"**
  %5 = load %"class.blink::NGLineBreaker"*, %"class.blink::NGLineBreaker"** %4, align 8
  %6 = getelementptr inbounds i8, i8* %0, i64 8
  %7 = bitcast i8* %6 to %"class.blink::NGInlineItem"**
  %8 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %7, align 8
  %9 = tail call %"class.blink::ShapeResult"* @_ZN5blink13NGLineBreaker9ShapeTextERKNS_12NGInlineItemEjj(%"class.blink::NGLineBreaker"* %5, %"class.blink::NGInlineItem"* dereferenceable(32) %8, i32 %1, i32 %2) #16
  ret %"class.blink::ShapeResult"* %9
}

declare dereferenceable(16) %"class.WTF::Vector.254"* @_ZNK5blink13ComputedStyle22AppliedTextDecorationsEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #3

declare i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"*, %"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #3

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() local_unnamed_addr #3

declare void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

declare float @_ZNK5blink11ShapeResult23CachedPositionForOffsetEj(%"class.blink::ShapeResult"*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIjLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.1983"*, i32*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

declare void @_ZN5blink19NGInlineItemSegment17UnpackSegmentDataEjjj(%"struct.blink::RunSegmenter::RunSegmenterRange"* sret, i32, i32, i32) local_unnamed_addr #3

declare { i64, i64 } @_ZN5blink22ComputePhysicalMarginsERKNS_13ComputedStyleENS_10LayoutUnitE(%"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #3

declare void @_ZN5blink14NGLineBoxStrutC1ERKNS_10NGBoxStrutEb(%"struct.blink::NGLineBoxStrut"*, %"struct.blink::NGBoxStrut"* dereferenceable(16), i1 zeroext) unnamed_addr #3

declare void @_ZN5blink39SetOrthogonalFallbackInlineSizeIfNeededERKNS_13ComputedStyleENS_17NGLayoutInputNodeEPNS_24NGConstraintSpaceBuilderE(%"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::LayoutBox"*, i64, %"class.blink::NGConstraintSpaceBuilder"*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #15

declare void @_ZN5blink24NGConstraintSpaceBuilder27SetPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"*, i64) local_unnamed_addr #3

declare void @_ZN5blink24NGConstraintSpaceBuilder35SetReplacedPercentageResolutionSizeENS_11LogicalSizeE(%"class.blink::NGConstraintSpaceBuilder"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGConstraintSpace8RareDataD2Ev(%"struct.blink::NGConstraintSpace::RareData"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 6
  %3 = load i16, i16* %2, align 8
  %4 = and i16 %3, 7
  %5 = zext i16 %4 to i32
  switch i32 %5, label %128 [
    i32 5, label %118
    i32 4, label %62
    i32 3, label %6
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %8 = bitcast %union.anon.1635* %7 to %"class.blink::NGTableConstraintSpaceData"**
  %9 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %8, align 8
  %10 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %9, null
  br i1 %10, label %128, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #16
  %13 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %128

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 5, i32 0, i32 0, i32 0
  %18 = load %"struct.blink::NGTableConstraintSpaceData::Cell"*, %"struct.blink::NGTableConstraintSpaceData::Cell"** %17, align 8
  %19 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Cell"* %18, null
  %20 = bitcast %"struct.blink::NGTableConstraintSpaceData::Cell"* %18 to i8*
  br i1 %19, label %27, label %21, !prof !5

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 5, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !2

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #16
  store %"struct.blink::NGTableConstraintSpaceData::Cell"* null, %"struct.blink::NGTableConstraintSpaceData::Cell"** %17, align 8
  br label %27

27:                                               ; preds = %26, %16
  %28 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %"struct.blink::NGTableConstraintSpaceData::Row"*, %"struct.blink::NGTableConstraintSpaceData::Row"** %28, align 8
  %30 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Row"* %29, null
  %31 = bitcast %"struct.blink::NGTableConstraintSpaceData::Row"* %29 to i8*
  br i1 %30, label %38, label %32, !prof !5

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 4, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36, !prof !2

36:                                               ; preds = %32
  store i32 0, i32* %33, align 4
  br label %37

37:                                               ; preds = %36, %32
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #16
  store %"struct.blink::NGTableConstraintSpaceData::Row"* null, %"struct.blink::NGTableConstraintSpaceData::Row"** %28, align 8
  br label %38

38:                                               ; preds = %37, %27
  %39 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"struct.blink::NGTableConstraintSpaceData::Section"*, %"struct.blink::NGTableConstraintSpaceData::Section"** %39, align 8
  %41 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Section"* %40, null
  %42 = bitcast %"struct.blink::NGTableConstraintSpaceData::Section"* %40 to i8*
  br i1 %41, label %49, label %43, !prof !5

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 3, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47, !prof !2

47:                                               ; preds = %43
  store i32 0, i32* %44, align 4
  br label %48

48:                                               ; preds = %47, %43
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %42) #16
  store %"struct.blink::NGTableConstraintSpaceData::Section"* null, %"struct.blink::NGTableConstraintSpaceData::Section"** %39, align 8
  br label %49

49:                                               ; preds = %48, %38
  %50 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %51 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %50, align 8
  %52 = icmp eq %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %51, null
  %53 = bitcast %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %51 to i8*
  br i1 %52, label %60, label %54, !prof !5

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %9, i64 0, i32 2, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58, !prof !2

58:                                               ; preds = %54
  store i32 0, i32* %55, align 4
  br label %59

59:                                               ; preds = %58, %54
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #16
  br label %60

60:                                               ; preds = %49, %59
  %61 = bitcast %"class.blink::NGTableConstraintSpaceData"* %9 to i8*
  tail call void @free(i8* %61) #16
  br label %128

62:                                               ; preds = %1
  %63 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %64 = bitcast %union.anon.1635* %63 to %"class.blink::NGTableConstraintSpaceData"**
  %65 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %64, align 8
  %66 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %65, null
  br i1 %66, label %128, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %68) #16
  %69 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %128

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 5, i32 0, i32 0, i32 0
  %74 = load %"struct.blink::NGTableConstraintSpaceData::Cell"*, %"struct.blink::NGTableConstraintSpaceData::Cell"** %73, align 8
  %75 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Cell"* %74, null
  %76 = bitcast %"struct.blink::NGTableConstraintSpaceData::Cell"* %74 to i8*
  br i1 %75, label %83, label %77, !prof !5

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 5, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %82, label %81, !prof !2

81:                                               ; preds = %77
  store i32 0, i32* %78, align 4
  br label %82

82:                                               ; preds = %81, %77
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %76) #16
  store %"struct.blink::NGTableConstraintSpaceData::Cell"* null, %"struct.blink::NGTableConstraintSpaceData::Cell"** %73, align 8
  br label %83

83:                                               ; preds = %82, %72
  %84 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 4, i32 0, i32 0, i32 0
  %85 = load %"struct.blink::NGTableConstraintSpaceData::Row"*, %"struct.blink::NGTableConstraintSpaceData::Row"** %84, align 8
  %86 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Row"* %85, null
  %87 = bitcast %"struct.blink::NGTableConstraintSpaceData::Row"* %85 to i8*
  br i1 %86, label %94, label %88, !prof !5

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 4, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %93, label %92, !prof !2

92:                                               ; preds = %88
  store i32 0, i32* %89, align 4
  br label %93

93:                                               ; preds = %92, %88
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %87) #16
  store %"struct.blink::NGTableConstraintSpaceData::Row"* null, %"struct.blink::NGTableConstraintSpaceData::Row"** %84, align 8
  br label %94

94:                                               ; preds = %93, %83
  %95 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %96 = load %"struct.blink::NGTableConstraintSpaceData::Section"*, %"struct.blink::NGTableConstraintSpaceData::Section"** %95, align 8
  %97 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Section"* %96, null
  %98 = bitcast %"struct.blink::NGTableConstraintSpaceData::Section"* %96 to i8*
  br i1 %97, label %105, label %99, !prof !5

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 3, i32 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %104, label %103, !prof !2

103:                                              ; preds = %99
  store i32 0, i32* %100, align 4
  br label %104

104:                                              ; preds = %103, %99
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %98) #16
  store %"struct.blink::NGTableConstraintSpaceData::Section"* null, %"struct.blink::NGTableConstraintSpaceData::Section"** %95, align 8
  br label %105

105:                                              ; preds = %104, %94
  %106 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 2, i32 0, i32 0, i32 0
  %107 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %106, align 8
  %108 = icmp eq %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %107, null
  %109 = bitcast %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %107 to i8*
  br i1 %108, label %116, label %110, !prof !5

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %65, i64 0, i32 2, i32 0, i32 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %115, label %114, !prof !2

114:                                              ; preds = %110
  store i32 0, i32* %111, align 4
  br label %115

115:                                              ; preds = %114, %110
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %109) #16
  br label %116

116:                                              ; preds = %105, %115
  %117 = bitcast %"class.blink::NGTableConstraintSpaceData"* %65 to i8*
  tail call void @free(i8* %117) #16
  br label %128

118:                                              ; preds = %1
  %119 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %120 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %119, align 8
  %121 = icmp eq %"class.blink::SerializedScriptValue"* %120, null
  br i1 %121, label %128, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %120, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw sub i32* %123, i32 1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %128

126:                                              ; preds = %122
  tail call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %120) #16
  %127 = bitcast %"class.blink::SerializedScriptValue"* %120 to i8*
  tail call void @free(i8* %127) #16
  br label %128

128:                                              ; preds = %126, %122, %118, %116, %67, %62, %60, %11, %6, %1
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.1774"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, null
  br i1 %3, label %127, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::Vector.1767", %"class.WTF::Vector.1767"* %5, i64 0, i32 0, i32 0, i32 0
  br i1 %8, label %58, label %10, !prof !2

10:                                               ; preds = %4
  %11 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %12 = zext i32 %7 to i64
  %13 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %11, i64 %12
  br label %14

14:                                               ; preds = %54, %10
  %15 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %55, %54 ], [ %11, %10 ]
  %16 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !2

20:                                               ; preds = %14
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %14
  %22 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %16, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %24 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 1, i64 0
  %25 = bitcast i8* %24 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %26 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23, %25
  br i1 %26, label %29, label %27, !prof !5

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %16, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %28, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23) #16
  br label %29

29:                                               ; preds = %27, %21
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %30 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34, !prof !2

34:                                               ; preds = %29
  store i32 0, i32* %31, align 4
  br label %35

35:                                               ; preds = %34, %29
  %36 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %30, i64 0, i32 0, i32 0, i32 0
  %37 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %38 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 1, i64 0
  %39 = bitcast i8* %38 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %40 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37, %39
  br i1 %40, label %43, label %41, !prof !5

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %30, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %42, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37) #16
  br label %43

43:                                               ; preds = %41, %35
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %44 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 0, i32 1, i32 0
  %45 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %44, align 8
  %46 = icmp eq %"class.blink::NGShapeExclusions"* %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #16
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %45) #16
  %53 = bitcast %"class.blink::NGShapeExclusions"* %45 to i8*
  tail call void @free(i8* %53) #16
  br label %54

54:                                               ; preds = %43, %47, %52
  %55 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 1
  %56 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %55, %13
  br i1 %56, label %57, label %14

57:                                               ; preds = %54
  store i32 0, i32* %6, align 4
  br label %58

58:                                               ; preds = %57, %4
  %59 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %60 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 1, i64 0
  %61 = bitcast i8* %60 to %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*
  %62 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59, %61
  br i1 %62, label %65, label %63, !prof !5

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::Vector.1767", %"class.WTF::Vector.1767"* %5, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1768"* %64, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59) #16
  br label %65

65:                                               ; preds = %63, %58
  store %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* null, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %66 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %68, label %118, label %70, !prof !2

70:                                               ; preds = %65
  %71 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %72 = zext i32 %67 to i64
  %73 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %71, i64 %72
  br label %74

74:                                               ; preds = %114, %70
  %75 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelf"* [ %115, %114 ], [ %71, %70 ]
  %76 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 6, i32 0
  %77 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %76, align 8
  %78 = icmp eq %"class.blink::NGShapeExclusions"* %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %80) #16
  %81 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %77) #16
  %85 = bitcast %"class.blink::NGShapeExclusions"* %77 to i8*
  tail call void @free(i8* %85) #16
  br label %86

86:                                               ; preds = %84, %79, %74
  %87 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5
  %88 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %92, label %91, !prof !2

91:                                               ; preds = %86
  store i32 0, i32* %88, align 4
  br label %92

92:                                               ; preds = %91, %86
  %93 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %87, i64 0, i32 0, i32 0, i32 0
  %94 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %95 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 1, i64 0
  %96 = bitcast i8* %95 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %97 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94, %96
  br i1 %97, label %100, label %98, !prof !5

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %87, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %99, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94) #16
  br label %100

100:                                              ; preds = %98, %92
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %101 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4
  %102 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %106, label %105, !prof !2

105:                                              ; preds = %100
  store i32 0, i32* %102, align 4
  br label %106

106:                                              ; preds = %105, %100
  %107 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %101, i64 0, i32 0, i32 0, i32 0
  %108 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %109 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 1, i64 0
  %110 = bitcast i8* %109 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %111 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108, %110
  br i1 %111, label %114, label %112, !prof !5

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.WTF::Vector.1757", %"class.WTF::Vector.1757"* %101, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"* %113, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108) #16
  br label %114

114:                                              ; preds = %106, %112
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %115 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 1
  %116 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %115, %73
  br i1 %116, label %117, label %74

117:                                              ; preds = %114
  store i32 0, i32* %66, align 4
  br label %118

118:                                              ; preds = %117, %65
  %119 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %120 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 1, i64 0
  %121 = bitcast i8* %120 to %"struct.blink::NGExclusionSpaceInternal::NGShelf"*
  %122 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119, %121
  br i1 %122, label %125, label %123, !prof !5

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1755"* %124, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119) #16
  br label %125

125:                                              ; preds = %118, %123
  %126 = bitcast %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1 to i8*
  tail call void @free(i8* %126) #16
  br label %127

127:                                              ; preds = %125, %2
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1758"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1768"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.1737", %"class.WTF::Vector.1737"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.1740*, %class.scoped_refptr.1740** %3, align 8
  %5 = icmp eq %class.scoped_refptr.1740* %4, null
  br i1 %5, label %42, label %6, !prof !5

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.1740* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %40, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %4, i64 %12
  br label %14

14:                                               ; preds = %34, %11
  %15 = phi %class.scoped_refptr.1740* [ %35, %34 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %15, i64 0, i32 0
  %17 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %16, align 8
  %18 = icmp eq %"struct.blink::NGExclusion"* %17, null
  br i1 %18, label %34, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #16
  %21 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.1742", %"class.base::RefCounted.1742"* %25, i64 8
  %27 = bitcast %"class.base::RefCounted.1742"* %26 to %"struct.blink::NGExclusionShapeData"**
  %28 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %27, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %27, align 8
  %29 = icmp eq %"struct.blink::NGExclusionShapeData"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = bitcast %"struct.blink::NGExclusionShapeData"* %28 to i8*
  tail call void @_ZdlPv(i8* %31) #17
  br label %32

32:                                               ; preds = %30, %24
  %33 = bitcast %"struct.blink::NGExclusion"* %17 to i8*
  tail call void @free(i8* %33) #16
  br label %34

34:                                               ; preds = %32, %19, %14
  %35 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %15, i64 1
  %36 = icmp eq %class.scoped_refptr.1740* %35, %13
  br i1 %36, label %37, label %14

37:                                               ; preds = %34
  store i32 0, i32* %8, align 4
  %38 = bitcast %"class.WTF::Vector.1737"* %2 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %6
  %41 = phi i8* [ %39, %37 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %41) #16
  store %class.scoped_refptr.1740* null, %class.scoped_refptr.1740** %3, align 8
  br label %42

42:                                               ; preds = %1, %40
  %43 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::Vector.1737", %"class.WTF::Vector.1737"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %class.scoped_refptr.1740*, %class.scoped_refptr.1740** %44, align 8
  %46 = icmp eq %class.scoped_refptr.1740* %45, null
  br i1 %46, label %83, label %47, !prof !5

47:                                               ; preds = %42
  %48 = bitcast %class.scoped_refptr.1740* %45 to i8*
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %81, label %52, !prof !2

52:                                               ; preds = %47
  %53 = zext i32 %50 to i64
  %54 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %45, i64 %53
  br label %55

55:                                               ; preds = %75, %52
  %56 = phi %class.scoped_refptr.1740* [ %76, %75 ], [ %45, %52 ]
  %57 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %56, i64 0, i32 0
  %58 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %57, align 8
  %59 = icmp eq %"struct.blink::NGExclusion"* %58, null
  br i1 %59, label %75, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #16
  %62 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %75

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.base::RefCounted.1742", %"class.base::RefCounted.1742"* %66, i64 8
  %68 = bitcast %"class.base::RefCounted.1742"* %67 to %"struct.blink::NGExclusionShapeData"**
  %69 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %68, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %68, align 8
  %70 = icmp eq %"struct.blink::NGExclusionShapeData"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %65
  %72 = bitcast %"struct.blink::NGExclusionShapeData"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #17
  br label %73

73:                                               ; preds = %71, %65
  %74 = bitcast %"struct.blink::NGExclusion"* %58 to i8*
  tail call void @free(i8* %74) #16
  br label %75

75:                                               ; preds = %73, %60, %55
  %76 = getelementptr inbounds %class.scoped_refptr.1740, %class.scoped_refptr.1740* %56, i64 1
  %77 = icmp eq %class.scoped_refptr.1740* %76, %54
  br i1 %77, label %78, label %55

78:                                               ; preds = %75
  store i32 0, i32* %49, align 4
  %79 = bitcast %"class.WTF::Vector.1737"* %43 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %81

81:                                               ; preds = %78, %47
  %82 = phi i8* [ %80, %78 ], [ %48, %47 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %82) #16
  store %class.scoped_refptr.1740* null, %class.scoped_refptr.1740** %44, align 8
  br label %83

83:                                               ; preds = %42, %81
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1755"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

declare void @_ZN5blink17NGBlockBreakTokenC1EN4base7PassKeyIS0_EENS_17NGLayoutInputNodeE(%"class.blink::NGBlockBreakToken"*, %"class.blink::LayoutBox"*, i64) unnamed_addr #3

declare dereferenceable(648) %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* @_ZNK5blink24NGExclusionSpaceInternal18GetDerivedGeometryENS_10LayoutUnitE(%"class.blink::NGExclusionSpaceInternal"*, i32) local_unnamed_addr #3

declare void @_ZNK5blink24NGExclusionSpaceInternal15DerivedGeometry21FindLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitES5_(%"struct.blink::NGLayoutOpportunity"* sret, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGBfcOffset"* dereferenceable(8), i32, i32) local_unnamed_addr #3

declare i32 @_ZNK5blink19NGLayoutOpportunity21ComputeLineLeftOffsetERKNS_17NGConstraintSpaceENS_10LayoutUnitES4_(%"struct.blink::NGLayoutOpportunity"*, %"class.blink::NGConstraintSpace"* dereferenceable(32), i32, i32) local_unnamed_addr #3

declare i32 @_ZNK5blink19NGLayoutOpportunity22ComputeLineRightOffsetERKNS_17NGConstraintSpaceENS_10LayoutUnitES4_(%"struct.blink::NGLayoutOpportunity"*, %"class.blink::NGConstraintSpace"* dereferenceable(32), i32, i32) local_unnamed_addr #3

declare { i64, i64 } @_ZN5blink23ComputeBordersForInlineERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #3

declare { i64, i64 } @_ZN5blink14ComputePaddingERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #3

declare %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN5blink21ComputeMarginsForSelfERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %4 = bitcast [20 x i8]* %3 to i160*
  %5 = load i160, i160* %4, align 8
  %6 = and i160 %5, 44601490397061246283071436545296723011960832
  %7 = icmp eq i160 %6, 0
  br i1 %7, label %92, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 512
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %92

13:                                               ; preds = %8
  %14 = and i32 %10, 2048
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %29

16:                                               ; preds = %13
  %17 = lshr i32 %10, 26
  %18 = and i32 %17, 3
  switch i32 %18, label %19 [
    i32 0, label %20
    i32 1, label %54
    i32 2, label %23
    i32 3, label %24
  ]

19:                                               ; preds = %16
  unreachable

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  br label %54

23:                                               ; preds = %16
  br label %54

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %26 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = load i32, i32* %27, align 8
  br label %54

29:                                               ; preds = %13
  %30 = lshr i32 %10, 28
  %31 = and i32 %30, 3
  switch i32 %31, label %32 [
    i32 0, label %33
    i32 1, label %54
    i32 2, label %54
    i32 3, label %35
  ]

32:                                               ; preds = %29
  unreachable

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  br label %39

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %37 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %36, align 8
  %38 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %37, i64 0, i32 0, i32 1, i32 0
  br label %39

39:                                               ; preds = %35, %33
  %40 = phi i32* [ %38, %35 ], [ %34, %33 ]
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, -64
  br i1 %42, label %54, label %43

43:                                               ; preds = %39
  switch i32 %31, label %44 [
    i32 0, label %45
    i32 1, label %54
    i32 2, label %48
    i32 3, label %49
  ]

44:                                               ; preds = %43
  unreachable

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  %47 = load i32, i32* %46, align 4
  br label %54

48:                                               ; preds = %43
  br label %54

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %51 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %50, align 8
  %52 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %51, i64 0, i32 0, i32 1, i32 0
  %53 = load i32, i32* %52, align 4
  br label %54

54:                                               ; preds = %16, %20, %23, %24, %29, %29, %39, %43, %45, %48, %49
  %55 = phi i32 [ %28, %24 ], [ -64, %23 ], [ %22, %20 ], [ 0, %16 ], [ %53, %49 ], [ -64, %48 ], [ %47, %45 ], [ 0, %43 ], [ 0, %39 ], [ 0, %29 ], [ 0, %29 ]
  %56 = tail call { i64, i64 } @_ZN5blink22ComputePhysicalMarginsERKNS_13ComputedStyleENS_10LayoutUnitE(%"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 %55) #16
  %57 = extractvalue { i64, i64 } %56, 0
  %58 = trunc i64 %57 to i32
  %59 = lshr i64 %57, 32
  %60 = extractvalue { i64, i64 } %56, 1
  %61 = load i160, i160* %4, align 8
  %62 = lshr i160 %61, 102
  %63 = trunc i160 %62 to i8
  %64 = and i8 %63, 3
  switch i8 %64, label %78 [
    i8 0, label %65
    i8 1, label %71
    i8 3, label %71
    i8 2, label %74
  ]

65:                                               ; preds = %54
  %66 = lshr i64 %60, 32
  %67 = trunc i64 %66 to i32
  %68 = and i64 %57, 4294967295
  %69 = shl i64 %60, 32
  %70 = or i64 %69, %68
  br label %79

71:                                               ; preds = %54, %54
  %72 = and i64 %60, -4294967296
  %73 = or i64 %72, %59
  br label %79

74:                                               ; preds = %54
  %75 = lshr i64 %60, 32
  %76 = and i64 %57, -4294967296
  %77 = or i64 %76, %75
  br label %79

78:                                               ; preds = %54
  unreachable

79:                                               ; preds = %65, %71, %74
  %80 = phi i64 [ %77, %74 ], [ %73, %71 ], [ %70, %65 ]
  %81 = phi i64 [ %60, %74 ], [ %60, %71 ], [ %59, %65 ]
  %82 = phi i32 [ %58, %74 ], [ %58, %71 ], [ %67, %65 ]
  %83 = trunc i64 %81 to i32
  %84 = and i160 %61, 41538374868278621028243970633760768
  %85 = icmp ne i160 %84, 0
  %86 = select i1 %85, i32 %82, i32 %83
  %87 = select i1 %85, i32 %83, i32 %82
  %88 = zext i32 %86 to i64
  %89 = shl nuw i64 %88, 32
  %90 = zext i32 %87 to i64
  %91 = or i64 %89, %90
  br label %92

92:                                               ; preds = %8, %2, %79
  %93 = phi i64 [ %80, %79 ], [ 0, %8 ], [ 0, %2 ]
  %94 = phi i64 [ %91, %79 ], [ 0, %8 ], [ 0, %2 ]
  %95 = insertvalue { i64, i64 } undef, i64 %94, 0
  %96 = insertvalue { i64, i64 } %95, i64 %93, 1
  ret { i64, i64 } %96
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl17optional_internal18optional_data_baseIN5blink17NGPositionedFloatEE6assignIRKS3_EEvOT_(%"class.absl::optional_internal::optional_data_base.1915"*, %"struct.blink::NGPositionedFloat"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional_internal::optional_data_base.1915", %"class.absl::optional_internal::optional_data_base.1915"* %0, i64 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional_internal::optional_data_base.1915", %"class.absl::optional_internal::optional_data_base.1915"* %0, i64 0, i32 0, i32 2, i32 0
  %8 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %8, align 8
  %10 = icmp eq %"class.blink::NGLayoutResult"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %9, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %12) #16
  br label %13

13:                                               ; preds = %11, %6
  %14 = ptrtoint %"class.blink::NGLayoutResult"* %9 to i64
  %15 = bitcast %"struct.blink::NGPositionedFloat"* %7 to i64*
  %16 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %7, i64 0, i32 0, i32 0
  %17 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %16, align 8
  store i64 %14, i64* %15, align 8
  %18 = icmp eq %"class.blink::NGLayoutResult"* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #16
  %21 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %17) #16
  %25 = bitcast %"class.blink::NGLayoutResult"* %17 to i8*
  tail call void @free(i8* %25) #16
  br label %26

26:                                               ; preds = %13, %19, %24
  %27 = getelementptr inbounds %"class.absl::optional_internal::optional_data_base.1915", %"class.absl::optional_internal::optional_data_base.1915"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %28 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %1, i64 0, i32 1
  %29 = bitcast %"struct.blink::NGBfcOffset"* %27 to i8*
  %30 = bitcast %"struct.blink::NGBfcOffset"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 9, i1 false) #16
  br label %43

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %1, i64 0, i32 0, i32 0
  %33 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %32, align 8
  %34 = getelementptr inbounds %"class.absl::optional_internal::optional_data_base.1915", %"class.absl::optional_internal::optional_data_base.1915"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  store %"class.blink::NGLayoutResult"* %33, %"class.blink::NGLayoutResult"** %34, align 8
  %35 = icmp eq %"class.blink::NGLayoutResult"* %33, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %33, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %37) #16
  br label %38

38:                                               ; preds = %31, %36
  %39 = getelementptr inbounds %"class.absl::optional_internal::optional_data_base.1915", %"class.absl::optional_internal::optional_data_base.1915"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %40 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %1, i64 0, i32 1
  %41 = bitcast %"struct.blink::NGBfcOffset"* %39 to i8*
  %42 = bitcast %"struct.blink::NGBfcOffset"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 9, i1 false) #16
  store i8 1, i8* %3, align 8
  br label %43

43:                                               ; preds = %38, %26
  ret void
}

declare void @_ZN5blink18NGInlineBreakTokenC1EN4base7PassKeyIS0_EENS_12NGInlineNodeEPKNS_13ComputedStyleEjjj(%"class.blink::NGInlineBreakToken"*, %"class.blink::LayoutBox"*, i64, %"class.blink::ComputedStyle"*, i32, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"*, %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #16
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.729", %"class.base::RefCounted.729"* %11, i64 2
  %13 = bitcast %"class.base::RefCounted.729"* %12 to %"class.blink::StyleInheritedVariables"**
  %14 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %13, align 8
  %15 = icmp eq %"class.blink::StyleInheritedVariables"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #16
  %18 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %14) #16
  %22 = bitcast %"class.blink::StyleInheritedVariables"* %14 to i8*
  tail call void @free(i8* %22) #16
  br label %23

23:                                               ; preds = %21, %16, %10
  %24 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3 to i8*
  tail call void @free(i8* %24) #16
  br label %25

25:                                               ; preds = %1, %5, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 7, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %26, align 8
  %28 = icmp eq %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #16
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"* nonnull %27) #16
  %35 = bitcast %"class.blink::ComputedStyleBase::StyleSurroundData"* %27 to i8*
  tail call void @free(i8* %35) #16
  br label %36

36:                                               ; preds = %25, %29, %34
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %37, align 8
  %39 = icmp eq %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #16
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %46, i64 2
  %48 = bitcast %"class.base::RefCounted.721"* %47 to %"class.blink::FillLayer"*
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %48) #16
  %49 = bitcast %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38 to i8*
  tail call void @free(i8* %49) #16
  br label %50

50:                                               ; preds = %36, %40, %45
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 5, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %51, align 8
  %53 = icmp eq %"class.blink::ComputedStyleBase::StyleBoxData"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #16
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"* nonnull %52) #16
  %60 = bitcast %"class.blink::ComputedStyleBase::StyleBoxData"* %52 to i8*
  tail call void @free(i8* %60) #16
  br label %61

61:                                               ; preds = %50, %54, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 4, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %62, align 8
  %64 = icmp eq %"class.blink::ComputedStyleBase::StyleSVGData"* %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %66) #16
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  tail call void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"* nonnull %63) #16
  %71 = bitcast %"class.blink::ComputedStyleBase::StyleSVGData"* %63 to i8*
  tail call void @free(i8* %71) #16
  br label %72

72:                                               ; preds = %61, %65, %70
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %73, align 8
  %75 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #16
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* nonnull %74) #16
  %82 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74 to i8*
  tail call void @free(i8* %82) #16
  br label %83

83:                                               ; preds = %72, %76, %81
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %84, align 8
  %86 = icmp eq %"class.blink::ComputedStyleBase::StyleVisualData"* %85, null
  br i1 %86, label %118, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %88) #16
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %118

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 8
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %97) #16
  br label %98

98:                                               ; preds = %96, %92
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2, i32 2
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 8
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %103) #16
  br label %104

104:                                              ; preds = %102, %98
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1, i32 2
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 8
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %109) #16
  br label %110

110:                                              ; preds = %108, %104
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0, i32 2
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 8
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %115) #16
  br label %116

116:                                              ; preds = %114, %110
  %117 = bitcast %"class.blink::ComputedStyleBase::StyleVisualData"* %85 to i8*
  tail call void @free(i8* %117) #16
  br label %118

118:                                              ; preds = %83, %87, %116
  %119 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 1, i32 0, i32 0
  %120 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %119, align 8
  %121 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, null
  br i1 %121, label %129, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %123) #16
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %122
  tail call void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* nonnull %120) #16
  %128 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120 to i8*
  tail call void @free(i8* %128) #16
  br label %129

129:                                              ; preds = %118, %122, %127
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %130, align 8
  %132 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, null
  br i1 %132, label %160, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %134) #16
  %135 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %160

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2, i32 2
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 8
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %143) #16
  br label %144

144:                                              ; preds = %142, %138
  %145 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 1, i32 0, i32 0
  %146 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %145, align 8
  %147 = icmp eq %"class.blink::ComputedStyleBase::StyleFontData"* %146, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %149) #16
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %154, i64 2
  %156 = bitcast %"class.base::RefCounted.4"* %155 to %"class.blink::Font"*
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %156) #16
  %157 = bitcast %"class.blink::ComputedStyleBase::StyleFontData"* %146 to i8*
  tail call void @free(i8* %157) #16
  br label %158

158:                                              ; preds = %153, %148, %144
  %159 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedData"* %131 to i8*
  tail call void @free(i8* %159) #16
  br label %160

160:                                              ; preds = %129, %133, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv(%"class.WTF::Vector.739"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %42, label %5, !prof !2

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %8 = zext i32 %3 to i64
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 %8
  br label %10

10:                                               ; preds = %5, %38
  %11 = phi %class.scoped_refptr* [ %39, %38 ], [ %7, %5 ]
  %12 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 0, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = icmp eq %"class.blink::ComputedStyle"* %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #16
  %18 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %38

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 -23
  %23 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 1
  %24 = bitcast %"class.base::RefCounted.732"* %23 to %"class.blink::StyleCachedData"**
  %25 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %24, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %24, align 8
  %26 = icmp eq %"class.blink::StyleCachedData"* %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %28, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %28, align 8
  %30 = icmp eq %"class.WTF::Vector.739"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  tail call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv(%"class.WTF::Vector.739"* nonnull %29) #16
  %32 = bitcast %"class.WTF::Vector.739"* %29 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %32) #16
  br label %33

33:                                               ; preds = %31, %27
  %34 = bitcast %"class.blink::StyleCachedData"* %25 to i8*
  tail call void @_ZdlPv(i8* %34) #17
  br label %35

35:                                               ; preds = %33, %21
  %36 = bitcast %"class.base::RefCounted.732"* %22 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* %36) #16
  %37 = bitcast %"class.base::RefCounted.732"* %22 to i8*
  tail call void @free(i8* %37) #16
  br label %38

38:                                               ; preds = %15, %35, %10
  %39 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 1
  %40 = icmp eq %class.scoped_refptr* %39, %9
  br i1 %40, label %41, label %10

41:                                               ; preds = %38
  store i32 0, i32* %2, align 4
  br label %42

42:                                               ; preds = %1, %41
  %43 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 0, i32 0
  %44 = load %class.scoped_refptr*, %class.scoped_refptr** %43, align 8
  %45 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = bitcast i8* %45 to %class.scoped_refptr*
  %47 = icmp eq %class.scoped_refptr* %44, %46
  br i1 %47, label %50, label %48, !prof !5

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2034"* %49, %class.scoped_refptr* %44) #16
  br label %50

50:                                               ; preds = %42, %48
  store %class.scoped_refptr* null, %class.scoped_refptr** %43, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2034"*, %class.scoped_refptr*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %class.scoped_refptr* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %2, align 8
  %4 = icmp eq %"class.blink::StyleInheritedVariables"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #16
  %7 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %3) #16
  %11 = bitcast %"class.blink::StyleInheritedVariables"* %3 to i8*
  tail call void @free(i8* %11) #16
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 1
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %13) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #16
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #16
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %25, align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, null
  br i1 %27, label %73, label %28, !prof !5

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %71, label %32

32:                                               ; preds = %28
  %33 = zext i32 %30 to i64
  br label %34

34:                                               ; preds = %68, %32
  %35 = phi i64 [ 0, %32 ], [ %69, %68 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35
  %37 = bitcast %"struct.WTF::KeyValuePair"* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, inttoptr (i64 -1 to i8*)
  br i1 %39, label %68, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35, i32 1, i32 0
  %42 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %41, align 8
  %43 = icmp eq %"class.blink::CSSVariableData"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #16
  %46 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %42) #16
  %50 = bitcast %"class.blink::CSSVariableData"* %42 to i8*
  tail call void @free(i8* %50) #16
  br label %51

51:                                               ; preds = %49, %44, %40
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #16
  br label %68

68:                                               ; preds = %67, %64, %51, %34
  %69 = add nuw nsw i64 %35, 1
  %70 = icmp eq i64 %69, %33
  br i1 %70, label %71, label %34

71:                                               ; preds = %68, %28
  %72 = bitcast %"struct.WTF::KeyValuePair"* %26 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #16
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %25, align 8
  br label %73

73:                                               ; preds = %24, %71
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #16
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #16
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !5

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !2

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #16
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !5

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !2

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #16
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.630"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #16
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #16
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #16
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #16
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #16
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #16
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #16
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #16
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #16
  br label %55

55:                                               ; preds = %49, %53
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #16
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #16
  br label %67

67:                                               ; preds = %61, %65
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #16
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #16
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #16
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 8
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %90) #16
  br label %91

91:                                               ; preds = %89, %85
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0, i32 2
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 8
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %96) #16
  br label %97

97:                                               ; preds = %91, %95
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1, i32 2
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 8
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %102) #16
  br label %103

103:                                              ; preds = %101, %97
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0, i32 2
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 8
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %108) #16
  br label %109

109:                                              ; preds = %103, %107
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1, i32 2
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 8
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %114) #16
  br label %115

115:                                              ; preds = %113, %109
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0, i32 2
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 8
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %120) #16
  br label %121

121:                                              ; preds = %115, %119
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %123 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %122, align 8
  %124 = icmp eq %"class.blink::NinePieceImageData"* %123, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %126) #16
  %127 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %125
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %123) #16
  %131 = bitcast %"class.blink::NinePieceImageData"* %123 to i8*
  tail call void @free(i8* %131) #16
  br label %132

132:                                              ; preds = %121, %125, %130
  ret void
}

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #16
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #16
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #16
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #16
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #16
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #16
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #16
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #16
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #16
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #16
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #16
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %75 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %76 = icmp eq %"class.blink::PersistentNode"* %75, null
  br i1 %76, label %96, label %77

77:                                               ; preds = %73
  %78 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %79 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %78, i64 0, i32 1
  %80 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %79) #16
  %81 = icmp eq i8* %80, null
  br i1 %81, label %82, label %84, !prof !2

82:                                               ; preds = %77
  %83 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %79, i8* %83) #16
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i8* [ %83, %82 ], [ %80, %77 ]
  %86 = bitcast i8* %85 to %"class.blink::ThreadState"**
  %87 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %87, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %88, align 8
  %90 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %91 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %89, i64 0, i32 0, i32 0
  %92 = bitcast %"class.blink::PersistentRegion"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::PersistentNode"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %90, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %95, align 8
  store %"class.blink::PersistentNode"* %90, %"class.blink::PersistentNode"** %91, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %74, align 8
  br label %96

96:                                               ; preds = %73, %84
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #16
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #16
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #16
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #16
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #16
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #16
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #16
  br label %49

49:                                               ; preds = %47, %43
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #16
  br label %55

55:                                               ; preds = %49, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 8
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %2) #16
  %3 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleStopData"*, %"class.blink::ComputedStyleBase::StyleStopData"** %3, align 8
  %5 = icmp eq %"class.blink::ComputedStyleBase::StyleStopData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #16
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ComputedStyleBase::StyleStopData"* %4 to i8*
  tail call void @free(i8* %12) #16
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"*, %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"** %14, align 8
  %16 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, null
  br i1 %16, label %31, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #16
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 6
  %25 = bitcast %"class.base::RefCounted.709"* %24 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %25) #16
  %26 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 4
  %27 = bitcast %"class.base::RefCounted.709"* %26 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %27) #16
  %28 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 2
  %29 = bitcast %"class.base::RefCounted.709"* %28 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %29) #16
  %30 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15 to i8*
  tail call void @free(i8* %30) #16
  br label %31

31:                                               ; preds = %13, %17, %23
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 5, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %32, align 8
  %34 = icmp eq %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #16
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  tail call void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"* nonnull %33) #16
  %41 = bitcast %"class.blink::ComputedStyleBase::StyleStrokeData"* %33 to i8*
  tail call void @free(i8* %41) #16
  br label %42

42:                                               ; preds = %31, %35, %40
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 4, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleFillData"*, %"class.blink::ComputedStyleBase::StyleFillData"** %43, align 8
  %45 = icmp eq %"class.blink::ComputedStyleBase::StyleFillData"* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #16
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 8
  %54 = bitcast %"class.base::RefCounted.679"* %53 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %54) #16
  %55 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 2
  %56 = bitcast %"class.base::RefCounted.679"* %55 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %56) #16
  %57 = bitcast %"class.blink::ComputedStyleBase::StyleFillData"* %44 to i8*
  tail call void @free(i8* %57) #16
  br label %58

58:                                               ; preds = %42, %46, %52
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleGeometryData"*, %"class.blink::ComputedStyleBase::StyleGeometryData"** %59, align 8
  %61 = icmp eq %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #16
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"* nonnull %60) #16
  %68 = bitcast %"class.blink::ComputedStyleBase::StyleGeometryData"* %60 to i8*
  tail call void @free(i8* %68) #16
  br label %69

69:                                               ; preds = %58, %62, %67
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleMiscData"*, %"class.blink::ComputedStyleBase::StyleMiscData"** %70, align 8
  %72 = icmp eq %"class.blink::ComputedStyleBase::StyleMiscData"* %71, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %75) #16
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %88

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 1, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.base::RefCounted.654", %"class.base::RefCounted.654"* %74, i64 1
  %85 = bitcast %"class.base::RefCounted.654"* %84 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %85) #16
  br label %86

86:                                               ; preds = %83, %79
  %87 = bitcast %"class.blink::ComputedStyleBase::StyleMiscData"* %71 to i8*
  tail call void @free(i8* %87) #16
  br label %88

88:                                               ; preds = %69, %73, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.680, %class.scoped_refptr.680* %0, i64 0, i32 0
  %3 = load %"class.blink::StyleSVGResource"*, %"class.blink::StyleSVGResource"** %2, align 8
  %4 = icmp eq %"class.blink::StyleSVGResource"* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #16
  %7 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %52

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #16
  br label %27

27:                                               ; preds = %26, %23, %10
  %28 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %30 = icmp eq %"class.blink::PersistentNode"* %29, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %27
  %32 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %33 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %32, i64 0, i32 1
  %34 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %33) #16
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %38, !prof !2

36:                                               ; preds = %31
  %37 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %33, i8* %37) #16
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i8* [ %37, %36 ], [ %34, %31 ]
  %40 = bitcast i8* %39 to %"class.blink::ThreadState"**
  %41 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %42, align 8
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %45 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %43, i64 0, i32 0, i32 0
  %46 = bitcast %"class.blink::PersistentRegion"* %43 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::PersistentNode"* %44 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %49, align 8
  store %"class.blink::PersistentNode"* %44, %"class.blink::PersistentNode"** %45, align 8
  br label %50

50:                                               ; preds = %27, %38
  %51 = bitcast %"class.blink::StyleSVGResource"* %3 to i8*
  tail call void @free(i8* %51) #16
  br label %52

52:                                               ; preds = %5, %50, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #16
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 4
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %14) #16
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 3
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %15) #16
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 2, i32 0
  %17 = load %"class.base::RefCountedData.699"*, %"class.base::RefCountedData.699"** %16, align 8
  %18 = icmp eq %"class.base::RefCountedData.699"* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %53

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 2
  %26 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to %"class.blink::Length"**
  %27 = load %"class.blink::Length"*, %"class.blink::Length"** %26, align 8
  %28 = icmp eq %"class.blink::Length"* %27, null
  br i1 %28, label %51, label %29, !prof !5

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::Length"* %27 to i8*
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %49, label %34, !prof !2

34:                                               ; preds = %29
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 %35
  br label %37

37:                                               ; preds = %43, %34
  %38 = phi %"class.blink::Length"* [ %44, %43 ], [ %27, %34 ]
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 8
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %38) #16
  br label %43

43:                                               ; preds = %42, %37
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 1
  %45 = icmp eq %"class.blink::Length"* %44, %36
  br i1 %45, label %46, label %37

46:                                               ; preds = %43
  store i32 0, i32* %31, align 4
  %47 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %29
  %50 = phi i8* [ %48, %46 ], [ %30, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  br label %51

51:                                               ; preds = %49, %24
  %52 = bitcast %"class.base::RefCountedData.699"* %17 to i8*
  tail call void @_ZdlPv(i8* %52) #17
  br label %53

53:                                               ; preds = %13, %19, %51
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #16
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #16
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #16
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #16
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #16
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #16
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 1, i32 0
  %45 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %44, align 8
  %46 = icmp eq %"class.blink::StylePath"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %45, i64 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %49) #16
  %50 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 -2
  %55 = bitcast %"class.base::RefCounted.480"* %54 to %"class.blink::BasicShape"*
  %56 = bitcast %"class.base::RefCounted.480"* %54 to void (%"class.blink::BasicShape"*)***
  %57 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %57, i64 1
  %59 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %58, align 8
  tail call void %59(%"class.blink::BasicShape"* nonnull %55) #16
  br label %60

60:                                               ; preds = %43, %47, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #16
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 6, i32 0, i32 1, i32 0
  %15 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %16 = icmp eq %"class.blink::PersistentNode"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #16
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !2

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #16
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %28, align 8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::PersistentRegion"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %31, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  br label %36

36:                                               ; preds = %13, %24
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 5, i32 0
  %38 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %37, align 8
  %39 = icmp eq %"class.blink::ShadowList"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #16
  %43 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 2
  %48 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 5, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51, !prof !2

51:                                               ; preds = %46
  store i32 0, i32* %48, align 4
  br label %52

52:                                               ; preds = %51, %46
  %53 = bitcast %"class.base::RefCounted.300"* %47 to %"class.blink::ShadowData"**
  %54 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %53, align 8
  %55 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 6
  %56 = bitcast %"class.base::RefCounted.300"* %55 to %"class.blink::ShadowData"*
  %57 = icmp eq %"class.blink::ShadowData"* %54, %56
  br i1 %57, label %60, label %58, !prof !5

58:                                               ; preds = %52
  %59 = bitcast %"class.base::RefCounted.300"* %47 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %59, %"class.blink::ShadowData"* %54) #16
  br label %60

60:                                               ; preds = %58, %52
  %61 = bitcast %"class.blink::ShadowList"* %38 to i8*
  tail call void @free(i8* %61) #16
  br label %62

62:                                               ; preds = %36, %40, %60
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4
  %64 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %class.scoped_refptr.638*, %class.scoped_refptr.638** %64, align 8
  %66 = icmp eq %class.scoped_refptr.638* %65, null
  br i1 %66, label %101, label %67, !prof !5

67:                                               ; preds = %62
  %68 = bitcast %class.scoped_refptr.638* %65 to i8*
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %99, label %72, !prof !2

72:                                               ; preds = %67
  %73 = zext i32 %70 to i64
  %74 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %65, i64 %73
  br label %75

75:                                               ; preds = %93, %72
  %76 = phi %class.scoped_refptr.638* [ %94, %93 ], [ %65, %72 ]
  %77 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 0, i32 0
  %78 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %77, align 8
  %79 = icmp eq %"class.blink::TransformOperation"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %78, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %82) #16
  %83 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 -2
  %88 = bitcast %"class.base::RefCounted.483"* %87 to %"class.blink::TransformOperation"*
  %89 = bitcast %"class.base::RefCounted.483"* %87 to void (%"class.blink::TransformOperation"*)***
  %90 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %90, i64 1
  %92 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %91, align 8
  tail call void %92(%"class.blink::TransformOperation"* nonnull %88) #16
  br label %93

93:                                               ; preds = %86, %80, %75
  %94 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 1
  %95 = icmp eq %class.scoped_refptr.638* %94, %74
  br i1 %95, label %96, label %75

96:                                               ; preds = %93
  store i32 0, i32* %69, align 4
  %97 = bitcast %"class.blink::TransformOperations"* %63 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %67
  %100 = phi i8* [ %98, %96 ], [ %68, %67 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %100) #16
  store %class.scoped_refptr.638* null, %class.scoped_refptr.638** %64, align 8
  br label %101

101:                                              ; preds = %62, %99
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %102, align 8
  %104 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %106) #16
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  tail call void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* nonnull %103) #16
  %111 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103 to i8*
  tail call void @free(i8* %111) #16
  br label %112

112:                                              ; preds = %101, %105, %110
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %113, align 8
  %115 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %117) #16
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* nonnull %114) #16
  %122 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114 to i8*
  tail call void @free(i8* %122) #16
  br label %123

123:                                              ; preds = %112, %116, %121
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"*, %"class.blink::ShadowData"*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %"class.blink::ShadowData"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #16
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #16
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #16
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #16
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #16
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #16
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #16
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %51 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %50, align 8
  %52 = icmp eq %"class.blink::NinePieceImageData"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #16
  %55 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %51) #16
  %59 = bitcast %"class.blink::NinePieceImageData"* %51 to i8*
  tail call void @free(i8* %59) #16
  br label %60

60:                                               ; preds = %49, %53, %58
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 13
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %61) #16
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12
  %63 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %63, align 8
  %65 = icmp eq %"class.WTF::String"* %64, null
  br i1 %65, label %100, label %66, !prof !5

66:                                               ; preds = %60
  %67 = bitcast %"class.WTF::String"* %64 to i8*
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %98, label %71, !prof !2

71:                                               ; preds = %66
  %72 = zext i32 %69 to i64
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 %72
  br label %74

74:                                               ; preds = %92, %71
  %75 = phi %"class.WTF::String"* [ %93, %92 ], [ %64, %71 ]
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #16
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 1
  %94 = icmp eq %"class.WTF::String"* %93, %73
  br i1 %94, label %95, label %74

95:                                               ; preds = %92
  store i32 0, i32* %68, align 4
  %96 = bitcast %"class.WTF::Vector.630"* %62 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %66
  %99 = phi i8* [ %97, %95 ], [ %67, %66 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #16
  store %"class.WTF::String"* null, %"class.WTF::String"** %63, align 8
  br label %100

100:                                              ; preds = %60, %98
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %102 = load %"class.blink::StyleNonInheritedVariables"*, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  store %"class.blink::StyleNonInheritedVariables"* null, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  %103 = icmp eq %"class.blink::StyleNonInheritedVariables"* %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::StyleNonInheritedVariables", %"class.blink::StyleNonInheritedVariables"* %102, i64 0, i32 0
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %105) #16
  %106 = bitcast %"class.blink::StyleNonInheritedVariables"* %102 to i8*
  tail call void @free(i8* %106) #16
  br label %107

107:                                              ; preds = %100, %104
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 10
  tail call void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"* %108, %"class.blink::PaintImages"* null) #16
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %110 = load %"class.blink::CSSTransitionData"*, %"class.blink::CSSTransitionData"** %109, align 8
  store %"class.blink::CSSTransitionData"* null, %"class.blink::CSSTransitionData"** %109, align 8
  %111 = icmp eq %"class.blink::CSSTransitionData"* %110, null
  br i1 %111, label %154, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1
  %114 = getelementptr inbounds %"class.WTF::Vector.605", %"class.WTF::Vector.605"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  %116 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %115, null
  br i1 %116, label %151, label %117, !prof !5

117:                                              ; preds = %112
  %118 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %115 to i8*
  %119 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %149, label %122, !prof !2

122:                                              ; preds = %117
  %123 = zext i32 %120 to i64
  %124 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %115, i64 %123
  br label %125

125:                                              ; preds = %143, %122
  %126 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %144, %143 ], [ %115, %122 ]
  %127 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 0, i32 2, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #16
  br label %143

143:                                              ; preds = %142, %139, %125
  %144 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 1
  %145 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %144, %124
  br i1 %145, label %146, label %125

146:                                              ; preds = %143
  store i32 0, i32* %119, align 4
  %147 = bitcast %"class.WTF::Vector.605"* %113 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %149

149:                                              ; preds = %146, %117
  %150 = phi i8* [ %148, %146 ], [ %118, %117 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %150) #16
  store %"struct.blink::CSSTransitionData::TransitionProperty"* null, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  br label %151

151:                                              ; preds = %112, %149
  %152 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %152) #16
  %153 = bitcast %"class.blink::CSSTransitionData"* %110 to i8*
  tail call void @free(i8* %153) #16
  br label %154

154:                                              ; preds = %107, %151
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %156 = load %"class.blink::CSSAnimationData"*, %"class.blink::CSSAnimationData"** %155, align 8
  store %"class.blink::CSSAnimationData"* null, %"class.blink::CSSAnimationData"** %155, align 8
  %157 = icmp eq %"class.blink::CSSAnimationData"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %154
  tail call void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"* nonnull %156) #16
  %159 = bitcast %"class.blink::CSSAnimationData"* %156 to i8*
  tail call void @free(i8* %159) #16
  br label %160

160:                                              ; preds = %154, %158
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %162 = load %"class.blink::CounterDirectiveMap"*, %"class.blink::CounterDirectiveMap"** %161, align 8
  store %"class.blink::CounterDirectiveMap"* null, %"class.blink::CounterDirectiveMap"** %161, align 8
  %163 = icmp eq %"class.blink::CounterDirectiveMap"* %162, null
  br i1 %163, label %202, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 0
  %166 = load %"struct.WTF::KeyValuePair.560"*, %"struct.WTF::KeyValuePair.560"** %165, align 8
  %167 = icmp eq %"struct.WTF::KeyValuePair.560"* %166, null
  br i1 %167, label %200, label %168, !prof !5

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %198, label %172

172:                                              ; preds = %168
  %173 = zext i32 %170 to i64
  br label %174

174:                                              ; preds = %195, %172
  %175 = phi i64 [ 0, %172 ], [ %196, %195 ]
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.560", %"struct.WTF::KeyValuePair.560"* %166, i64 %175
  %177 = bitcast %"struct.WTF::KeyValuePair.560"* %176 to i8**
  %178 = load i8*, i8** %177, align 8
  %179 = bitcast i8* %178 to %"class.WTF::StringImpl"*
  %180 = ptrtoint i8* %178 to i64
  switch i64 %180, label %181 [
    i64 -1, label %195
    i64 0, label %195
  ]

181:                                              ; preds = %174
  %182 = getelementptr inbounds i8, i8* %178, i64 8
  %183 = bitcast i8* %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = bitcast i8* %178 to i32*
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %181
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %181
  %192 = phi i32 [ %190, %189 ], [ %188, %181 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #16
  br label %195

195:                                              ; preds = %194, %191, %174, %174
  %196 = add nuw nsw i64 %175, 1
  %197 = icmp eq i64 %196, %173
  br i1 %197, label %198, label %174

198:                                              ; preds = %195, %168
  %199 = bitcast %"struct.WTF::KeyValuePair.560"* %166 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %199) #16
  store %"struct.WTF::KeyValuePair.560"* null, %"struct.WTF::KeyValuePair.560"** %165, align 8
  br label %200

200:                                              ; preds = %198, %164
  %201 = bitcast %"class.blink::CounterDirectiveMap"* %162 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %201) #16
  br label %202

202:                                              ; preds = %160, %200
  %203 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #16
  br label %219

219:                                              ; preds = %202, %215, %218
  %220 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #16
  br label %236

236:                                              ; preds = %219, %232, %235
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #16
  br label %253

253:                                              ; preds = %236, %249, %252
  %254 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 3, i32 0, i32 0
  %255 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %254, align 8
  %256 = icmp eq %"class.blink::ComputedStyleBase::StyleGridData"* %255, null
  br i1 %256, label %264, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %258) #16
  %259 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %257
  tail call void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"* nonnull %255) #16
  %263 = bitcast %"class.blink::ComputedStyleBase::StyleGridData"* %255 to i8*
  tail call void @free(i8* %263) #16
  br label %264

264:                                              ; preds = %253, %257, %262
  %265 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0
  %266 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %265, align 8
  %267 = icmp eq %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, null
  br i1 %267, label %288, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0
  %270 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %270) #16
  %271 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %288

274:                                              ; preds = %268
  %275 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 2
  %276 = bitcast %"class.base::RefCounted.528"* %275 to i32**
  %277 = load i32*, i32** %276, align 8
  %278 = icmp eq i32* %277, null
  %279 = bitcast i32* %277 to i8*
  br i1 %278, label %286, label %280, !prof !5

280:                                              ; preds = %274
  %281 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 5, i32 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %285, label %284, !prof !2

284:                                              ; preds = %280
  store i32 0, i32* %281, align 4
  br label %285

285:                                              ; preds = %284, %280
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %279) #16
  br label %286

286:                                              ; preds = %285, %274
  %287 = bitcast %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266 to i8*
  tail call void @free(i8* %287) #16
  br label %288

288:                                              ; preds = %264, %268, %286
  %289 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 1, i32 0, i32 0
  %290 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %289, align 8
  %291 = icmp eq %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, null
  br i1 %291, label %299, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %293) #16
  %294 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %299

297:                                              ; preds = %292
  %298 = bitcast %"class.blink::ComputedStyleBase::StyleMultiColData"* %290 to i8*
  tail call void @free(i8* %298) #16
  br label %299

299:                                              ; preds = %288, %292, %297
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"*, %"class.blink::PaintImages"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.613"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PaintImages"*, %"class.blink::PaintImages"** %3, align 8
  store %"class.blink::PaintImages"* %1, %"class.blink::PaintImages"** %3, align 8
  %5 = icmp eq %"class.blink::PaintImages"* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Persistent.306"*, %"class.blink::Persistent.306"** %7, align 8
  %9 = icmp eq %"class.blink::Persistent.306"* %8, null
  br i1 %9, label %50, label %10, !prof !5

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::Persistent.306"* %8 to i8*
  %12 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %48, label %15, !prof !2

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %8, i64 %16
  br label %18

18:                                               ; preds = %15, %42
  %19 = phi %"class.blink::Persistent.306"* [ %43, %42 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 0, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #16
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #16
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %30, %18
  %43 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 1
  %44 = icmp eq %"class.blink::Persistent.306"* %43, %17
  br i1 %44, label %45, label %18

45:                                               ; preds = %42
  store i32 0, i32* %12, align 4
  %46 = bitcast %"class.blink::PaintImages"* %4 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %10
  %49 = phi i8* [ %47, %45 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #16
  store %"class.blink::Persistent.306"* null, %"class.blink::Persistent.306"** %7, align 8
  br label %50

50:                                               ; preds = %6, %48
  %51 = bitcast %"class.blink::PaintImages"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %51) #16
  br label %52

52:                                               ; preds = %2, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.572", %"class.WTF::Vector.572"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.575*, %class.scoped_refptr.575** %3, align 8
  %5 = icmp eq %class.scoped_refptr.575* %4, null
  br i1 %5, label %39, label %6, !prof !5

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.575* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %4, i64 %12
  br label %14

14:                                               ; preds = %31, %11
  %15 = phi %class.scoped_refptr.575* [ %32, %31 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 0, i32 0
  %17 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %16, align 8
  %18 = icmp eq %"class.blink::TimingFunction"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %17, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to %"class.blink::TimingFunction"*
  %27 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to void (%"class.blink::TimingFunction"*)***
  %28 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, i64 1
  %30 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %29, align 8
  tail call void %30(%"class.blink::TimingFunction"* nonnull %26) #16
  br label %31

31:                                               ; preds = %24, %19, %14
  %32 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 1
  %33 = icmp eq %class.scoped_refptr.575* %32, %13
  br i1 %33, label %34, label %14

34:                                               ; preds = %31
  store i32 0, i32* %8, align 4
  %35 = bitcast %"class.WTF::Vector.572"* %2 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %6
  %38 = phi i8* [ %36, %34 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #16
  store %class.scoped_refptr.575* null, %class.scoped_refptr.575** %3, align 8
  br label %39

39:                                               ; preds = %1, %37
  %40 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load double*, double** %40, align 8
  %42 = icmp eq double* %41, null
  %43 = bitcast double* %41 to i8*
  br i1 %42, label %50, label %44, !prof !5

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48, !prof !2

48:                                               ; preds = %44
  store i32 0, i32* %45, align 4
  br label %49

49:                                               ; preds = %48, %44
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #16
  store double* null, double** %40, align 8
  br label %50

50:                                               ; preds = %39, %49
  %51 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load double*, double** %51, align 8
  %53 = icmp eq double* %52, null
  %54 = bitcast double* %52 to i8*
  br i1 %53, label %61, label %55, !prof !5

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !2

59:                                               ; preds = %55
  store i32 0, i32* %56, align 4
  br label %60

60:                                               ; preds = %59, %55
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #16
  store double* null, double** %51, align 8
  br label %61

61:                                               ; preds = %50, %60
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  %5 = bitcast i32* %3 to i8*
  br i1 %4, label %12, label %6, !prof !5

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !2

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #16
  store i32* null, i32** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  %16 = bitcast i32* %14 to i8*
  br i1 %15, label %23, label %17, !prof !5

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !2

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #16
  store i32* null, i32** %13, align 8
  br label %23

23:                                               ; preds = %12, %22
  %24 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %25, null
  %27 = bitcast i32* %25 to i8*
  br i1 %26, label %34, label %28, !prof !5

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !2

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #16
  store i32* null, i32** %24, align 8
  br label %34

34:                                               ; preds = %23, %33
  %35 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load double*, double** %35, align 8
  %37 = icmp eq double* %36, null
  %38 = bitcast double* %36 to i8*
  br i1 %37, label %45, label %39, !prof !5

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !2

43:                                               ; preds = %39
  store i32 0, i32* %40, align 4
  br label %44

44:                                               ; preds = %43, %39
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #16
  store double* null, double** %35, align 8
  br label %45

45:                                               ; preds = %34, %44
  %46 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"class.WTF::Vector.579", %"class.WTF::Vector.579"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::StyleNameOrKeyword"*, %"class.blink::StyleNameOrKeyword"** %47, align 8
  %49 = icmp eq %"class.blink::StyleNameOrKeyword"* %48, null
  br i1 %49, label %84, label %50, !prof !5

50:                                               ; preds = %45
  %51 = bitcast %"class.blink::StyleNameOrKeyword"* %48 to i8*
  %52 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %82, label %55, !prof !2

55:                                               ; preds = %50
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %48, i64 %56
  br label %58

58:                                               ; preds = %76, %55
  %59 = phi %"class.blink::StyleNameOrKeyword"* [ %77, %76 ], [ %48, %55 ]
  %60 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #16
  br label %76

76:                                               ; preds = %75, %72, %58
  %77 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 1
  %78 = icmp eq %"class.blink::StyleNameOrKeyword"* %77, %57
  br i1 %78, label %79, label %58

79:                                               ; preds = %76
  store i32 0, i32* %52, align 4
  %80 = bitcast %"class.WTF::Vector.579"* %46 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %50
  %83 = phi i8* [ %81, %79 ], [ %51, %50 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %83) #16
  store %"class.blink::StyleNameOrKeyword"* null, %"class.blink::StyleNameOrKeyword"** %47, align 8
  br label %84

84:                                               ; preds = %45, %82
  %85 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %86, align 8
  %88 = icmp eq %"class.WTF::AtomicString"* %87, null
  br i1 %88, label %123, label %89, !prof !5

89:                                               ; preds = %84
  %90 = bitcast %"class.WTF::AtomicString"* %87 to i8*
  %91 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %121, label %94, !prof !2

94:                                               ; preds = %89
  %95 = zext i32 %92 to i64
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 %95
  br label %97

97:                                               ; preds = %115, %94
  %98 = phi %"class.WTF::AtomicString"* [ %116, %115 ], [ %87, %94 ]
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #16
  br label %115

115:                                              ; preds = %114, %111, %97
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 1
  %117 = icmp eq %"class.WTF::AtomicString"* %116, %96
  br i1 %117, label %118, label %97

118:                                              ; preds = %115
  store i32 0, i32* %91, align 4
  %119 = bitcast %"class.WTF::Vector.284"* %85 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %89
  %122 = phi i8* [ %120, %118 ], [ %90, %89 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %122) #16
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %86, align 8
  br label %123

123:                                              ; preds = %84, %121
  %124 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %124) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14
  %3 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %3, align 8
  %5 = icmp eq %"class.blink::GridTrackSize"* %4, null
  br i1 %5, label %41, label %6, !prof !5

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::GridTrackSize"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 %12
  br label %14

14:                                               ; preds = %33, %11
  %15 = phi %"class.blink::GridTrackSize"* [ %34, %33 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 8
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %20) #16
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 8
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %26) #16
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %32) #16
  br label %33

33:                                               ; preds = %31, %27
  %34 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 1
  %35 = icmp eq %"class.blink::GridTrackSize"* %34, %13
  br i1 %35, label %36, label %14

36:                                               ; preds = %33
  store i32 0, i32* %8, align 4
  %37 = bitcast %"class.WTF::Vector.459"* %2 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %6
  %40 = phi i8* [ %38, %36 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #16
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %3, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13
  %43 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %43, align 8
  %45 = icmp eq %"class.blink::GridTrackSize"* %44, null
  br i1 %45, label %81, label %46, !prof !5

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::GridTrackSize"* %44 to i8*
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %79, label %51, !prof !2

51:                                               ; preds = %46
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %44, i64 %52
  br label %54

54:                                               ; preds = %73, %51
  %55 = phi %"class.blink::GridTrackSize"* [ %74, %73 ], [ %44, %51 ]
  %56 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #16
  br label %61

61:                                               ; preds = %59, %54
  %62 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #16
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #16
  br label %73

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 1
  %75 = icmp eq %"class.blink::GridTrackSize"* %74, %53
  br i1 %75, label %76, label %54

76:                                               ; preds = %73
  store i32 0, i32* %48, align 4
  %77 = bitcast %"class.WTF::Vector.459"* %42 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %46
  %80 = phi i8* [ %78, %76 ], [ %47, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #16
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %43, align 8
  br label %81

81:                                               ; preds = %41, %79
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 0
  %83 = load %"struct.WTF::KeyValuePair.552"*, %"struct.WTF::KeyValuePair.552"** %82, align 8
  %84 = icmp eq %"struct.WTF::KeyValuePair.552"* %83, null
  br i1 %84, label %117, label %85, !prof !5

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %115, label %89

89:                                               ; preds = %85
  %90 = zext i32 %87 to i64
  br label %91

91:                                               ; preds = %112, %89
  %92 = phi i64 [ 0, %89 ], [ %113, %112 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %83, i64 %92
  %94 = bitcast %"struct.WTF::KeyValuePair.552"* %93 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = bitcast i8* %95 to %"class.WTF::StringImpl"*
  %97 = ptrtoint i8* %95 to i64
  switch i64 %97, label %98 [
    i64 -1, label %112
    i64 0, label %112
  ]

98:                                               ; preds = %91
  %99 = getelementptr inbounds i8, i8* %95, i64 8
  %100 = bitcast i8* %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = bitcast i8* %95 to i32*
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %98
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %98
  %109 = phi i32 [ %107, %106 ], [ %105, %98 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #16
  br label %112

112:                                              ; preds = %111, %108, %91, %91
  %113 = add nuw nsw i64 %92, 1
  %114 = icmp eq i64 %113, %90
  br i1 %114, label %115, label %91

115:                                              ; preds = %112, %85
  %116 = bitcast %"struct.WTF::KeyValuePair.552"* %83 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %116) #16
  store %"struct.WTF::KeyValuePair.552"* null, %"struct.WTF::KeyValuePair.552"** %82, align 8
  br label %117

117:                                              ; preds = %81, %115
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 0
  %119 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %118, align 8
  %120 = icmp eq %"struct.WTF::KeyValuePair.547"* %119, null
  br i1 %120, label %124, label %121, !prof !5

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %119, i32 %123) #16
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %118, align 8
  br label %124

124:                                              ; preds = %117, %121
  %125 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 0
  %126 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %125, align 8
  %127 = icmp eq %"struct.WTF::KeyValuePair.547"* %126, null
  br i1 %127, label %131, label %128, !prof !5

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %126, i32 %130) #16
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %125, align 8
  br label %131

131:                                              ; preds = %124, %128
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 0
  %133 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %132, align 8
  %134 = icmp eq %"struct.WTF::KeyValuePair.547"* %133, null
  br i1 %134, label %138, label %135, !prof !5

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %133, i32 %137) #16
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %132, align 8
  br label %138

138:                                              ; preds = %131, %135
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 0
  %140 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %139, align 8
  %141 = icmp eq %"struct.WTF::KeyValuePair.547"* %140, null
  br i1 %141, label %145, label %142, !prof !5

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 1
  %144 = load i32, i32* %143, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %140, i32 %144) #16
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %139, align 8
  br label %145

145:                                              ; preds = %138, %142
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 0
  %147 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %146, align 8
  %148 = icmp eq %"struct.WTF::KeyValuePair.542"* %147, null
  br i1 %148, label %196, label %149, !prof !5

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %194, label %153

153:                                              ; preds = %149
  %154 = zext i32 %151 to i64
  br label %155

155:                                              ; preds = %191, %153
  %156 = phi i64 [ 0, %153 ], [ %192, %191 ]
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156
  %158 = bitcast %"struct.WTF::KeyValuePair.542"* %157 to i8**
  %159 = load i8*, i8** %158, align 8
  %160 = icmp eq i8* %159, inttoptr (i64 -1 to i8*)
  br i1 %160, label %191, label %161

161:                                              ; preds = %155
  %162 = bitcast i8* %159 to %"class.WTF::StringImpl"*
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %164, null
  %166 = bitcast i64* %164 to i8*
  br i1 %165, label %175, label %167, !prof !5

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %172, label %171, !prof !2

171:                                              ; preds = %167
  store i32 0, i32* %168, align 4
  br label %172

172:                                              ; preds = %171, %167
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #16
  store i64* null, i64** %163, align 8
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %157, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  br label %175

175:                                              ; preds = %172, %161
  %176 = phi %"class.WTF::StringImpl"* [ %174, %172 ], [ %162, %161 ]
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #16
  br label %191

191:                                              ; preds = %190, %187, %175, %155
  %192 = add nuw nsw i64 %156, 1
  %193 = icmp eq i64 %192, %154
  br i1 %193, label %194, label %155

194:                                              ; preds = %191, %149
  %195 = bitcast %"struct.WTF::KeyValuePair.542"* %147 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %195) #16
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %146, align 8
  br label %196

196:                                              ; preds = %145, %194
  %197 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 0
  %198 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %197, align 8
  %199 = icmp eq %"struct.WTF::KeyValuePair.542"* %198, null
  br i1 %199, label %247, label %200, !prof !5

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 1
  %202 = load i32, i32* %201, align 8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %245, label %204

204:                                              ; preds = %200
  %205 = zext i32 %202 to i64
  br label %206

206:                                              ; preds = %242, %204
  %207 = phi i64 [ 0, %204 ], [ %243, %242 ]
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207
  %209 = bitcast %"struct.WTF::KeyValuePair.542"* %208 to i8**
  %210 = load i8*, i8** %209, align 8
  %211 = icmp eq i8* %210, inttoptr (i64 -1 to i8*)
  br i1 %211, label %242, label %212

212:                                              ; preds = %206
  %213 = bitcast i8* %210 to %"class.WTF::StringImpl"*
  %214 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 0
  %215 = load i64*, i64** %214, align 8
  %216 = icmp eq i64* %215, null
  %217 = bitcast i64* %215 to i8*
  br i1 %216, label %226, label %218, !prof !5

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %223, label %222, !prof !2

222:                                              ; preds = %218
  store i32 0, i32* %219, align 4
  br label %223

223:                                              ; preds = %222, %218
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %217) #16
  store i64* null, i64** %214, align 8
  %224 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %208, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  br label %226

226:                                              ; preds = %223, %212
  %227 = phi %"class.WTF::StringImpl"* [ %225, %223 ], [ %213, %212 ]
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #16
  br label %242

242:                                              ; preds = %241, %238, %226, %206
  %243 = add nuw nsw i64 %207, 1
  %244 = icmp eq i64 %243, %205
  br i1 %244, label %245, label %206

245:                                              ; preds = %242, %200
  %246 = bitcast %"struct.WTF::KeyValuePair.542"* %198 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %246) #16
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %197, align 8
  br label %247

247:                                              ; preds = %196, %245
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 0
  %249 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %248, align 8
  %250 = icmp eq %"struct.WTF::KeyValuePair.542"* %249, null
  br i1 %250, label %298, label %251, !prof !5

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %296, label %255

255:                                              ; preds = %251
  %256 = zext i32 %253 to i64
  br label %257

257:                                              ; preds = %293, %255
  %258 = phi i64 [ 0, %255 ], [ %294, %293 ]
  %259 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258
  %260 = bitcast %"struct.WTF::KeyValuePair.542"* %259 to i8**
  %261 = load i8*, i8** %260, align 8
  %262 = icmp eq i8* %261, inttoptr (i64 -1 to i8*)
  br i1 %262, label %293, label %263

263:                                              ; preds = %257
  %264 = bitcast i8* %261 to %"class.WTF::StringImpl"*
  %265 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 0
  %266 = load i64*, i64** %265, align 8
  %267 = icmp eq i64* %266, null
  %268 = bitcast i64* %266 to i8*
  br i1 %267, label %277, label %269, !prof !5

269:                                              ; preds = %263
  %270 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 2
  %271 = load i32, i32* %270, align 4
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %274, label %273, !prof !2

273:                                              ; preds = %269
  store i32 0, i32* %270, align 4
  br label %274

274:                                              ; preds = %273, %269
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %268) #16
  store i64* null, i64** %265, align 8
  %275 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %259, i64 0, i32 0, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  br label %277

277:                                              ; preds = %274, %263
  %278 = phi %"class.WTF::StringImpl"* [ %276, %274 ], [ %264, %263 ]
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #16
  br label %293

293:                                              ; preds = %292, %289, %277, %257
  %294 = add nuw nsw i64 %258, 1
  %295 = icmp eq i64 %294, %256
  br i1 %295, label %296, label %257

296:                                              ; preds = %293, %251
  %297 = bitcast %"struct.WTF::KeyValuePair.542"* %249 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %297) #16
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %248, align 8
  br label %298

298:                                              ; preds = %247, %296
  %299 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 0
  %300 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %299, align 8
  %301 = icmp eq %"struct.WTF::KeyValuePair.542"* %300, null
  br i1 %301, label %349, label %302, !prof !5

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 1
  %304 = load i32, i32* %303, align 8
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %347, label %306

306:                                              ; preds = %302
  %307 = zext i32 %304 to i64
  br label %308

308:                                              ; preds = %344, %306
  %309 = phi i64 [ 0, %306 ], [ %345, %344 ]
  %310 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309
  %311 = bitcast %"struct.WTF::KeyValuePair.542"* %310 to i8**
  %312 = load i8*, i8** %311, align 8
  %313 = icmp eq i8* %312, inttoptr (i64 -1 to i8*)
  br i1 %313, label %344, label %314

314:                                              ; preds = %308
  %315 = bitcast i8* %312 to %"class.WTF::StringImpl"*
  %316 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 0
  %317 = load i64*, i64** %316, align 8
  %318 = icmp eq i64* %317, null
  %319 = bitcast i64* %317 to i8*
  br i1 %318, label %328, label %320, !prof !5

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 2
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %325, label %324, !prof !2

324:                                              ; preds = %320
  store i32 0, i32* %321, align 4
  br label %325

325:                                              ; preds = %324, %320
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %319) #16
  store i64* null, i64** %316, align 8
  %326 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %310, i64 0, i32 0, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  br label %328

328:                                              ; preds = %325, %314
  %329 = phi %"class.WTF::StringImpl"* [ %327, %325 ], [ %315, %314 ]
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #16
  br label %344

344:                                              ; preds = %343, %340, %328, %308
  %345 = add nuw nsw i64 %309, 1
  %346 = icmp eq i64 %345, %307
  br i1 %346, label %347, label %308

347:                                              ; preds = %344, %302
  %348 = bitcast %"struct.WTF::KeyValuePair.542"* %300 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %348) #16
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %299, align 8
  br label %349

349:                                              ; preds = %298, %347
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 0
  %351 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %350, align 8
  %352 = icmp eq %"struct.WTF::KeyValuePair.542"* %351, null
  br i1 %352, label %400, label %353, !prof !5

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 1
  %355 = load i32, i32* %354, align 8
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %398, label %357

357:                                              ; preds = %353
  %358 = zext i32 %355 to i64
  br label %359

359:                                              ; preds = %395, %357
  %360 = phi i64 [ 0, %357 ], [ %396, %395 ]
  %361 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360
  %362 = bitcast %"struct.WTF::KeyValuePair.542"* %361 to i8**
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, inttoptr (i64 -1 to i8*)
  br i1 %364, label %395, label %365

365:                                              ; preds = %359
  %366 = bitcast i8* %363 to %"class.WTF::StringImpl"*
  %367 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 0
  %368 = load i64*, i64** %367, align 8
  %369 = icmp eq i64* %368, null
  %370 = bitcast i64* %368 to i8*
  br i1 %369, label %379, label %371, !prof !5

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %376, label %375, !prof !2

375:                                              ; preds = %371
  store i32 0, i32* %372, align 4
  br label %376

376:                                              ; preds = %375, %371
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %370) #16
  store i64* null, i64** %367, align 8
  %377 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %361, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  br label %379

379:                                              ; preds = %376, %365
  %380 = phi %"class.WTF::StringImpl"* [ %378, %376 ], [ %366, %365 ]
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %395, label %382

382:                                              ; preds = %379
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %382
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i32 [ %390, %389 ], [ %388, %382 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %380) #16
  br label %395

395:                                              ; preds = %394, %391, %379, %359
  %396 = add nuw nsw i64 %360, 1
  %397 = icmp eq i64 %396, %358
  br i1 %397, label %398, label %359

398:                                              ; preds = %395, %353
  %399 = bitcast %"struct.WTF::KeyValuePair.542"* %351 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %399) #16
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %350, align 8
  br label %400

400:                                              ; preds = %349, %398
  %401 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 0
  %402 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %401, align 8
  %403 = icmp eq %"struct.WTF::KeyValuePair.542"* %402, null
  br i1 %403, label %451, label %404, !prof !5

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 1
  %406 = load i32, i32* %405, align 8
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %449, label %408

408:                                              ; preds = %404
  %409 = zext i32 %406 to i64
  br label %410

410:                                              ; preds = %446, %408
  %411 = phi i64 [ 0, %408 ], [ %447, %446 ]
  %412 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411
  %413 = bitcast %"struct.WTF::KeyValuePair.542"* %412 to i8**
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, inttoptr (i64 -1 to i8*)
  br i1 %415, label %446, label %416

416:                                              ; preds = %410
  %417 = bitcast i8* %414 to %"class.WTF::StringImpl"*
  %418 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 0
  %419 = load i64*, i64** %418, align 8
  %420 = icmp eq i64* %419, null
  %421 = bitcast i64* %419 to i8*
  br i1 %420, label %430, label %422, !prof !5

422:                                              ; preds = %416
  %423 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 2
  %424 = load i32, i32* %423, align 4
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %427, label %426, !prof !2

426:                                              ; preds = %422
  store i32 0, i32* %423, align 4
  br label %427

427:                                              ; preds = %426, %422
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %421) #16
  store i64* null, i64** %418, align 8
  %428 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %412, i64 0, i32 0, i32 0, i32 0
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  br label %430

430:                                              ; preds = %427, %416
  %431 = phi %"class.WTF::StringImpl"* [ %429, %427 ], [ %417, %416 ]
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %446, label %433

433:                                              ; preds = %430
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  br i1 %437, label %440, label %442

440:                                              ; preds = %433
  %441 = add i32 %439, -1
  store i32 %441, i32* %438, align 4
  br label %442

442:                                              ; preds = %440, %433
  %443 = phi i32 [ %441, %440 ], [ %439, %433 ]
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %446

445:                                              ; preds = %442
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %431) #16
  br label %446

446:                                              ; preds = %445, %442, %430, %410
  %447 = add nuw nsw i64 %411, 1
  %448 = icmp eq i64 %447, %409
  br i1 %448, label %449, label %410

449:                                              ; preds = %446, %404
  %450 = bitcast %"struct.WTF::KeyValuePair.542"* %402 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %450) #16
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %401, align 8
  br label %451

451:                                              ; preds = %400, %449
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %52, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.547"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #16
  ret void

8:                                                ; preds = %52, %4
  %9 = phi i64 [ 0, %4 ], [ %53, %52 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -2
  br i1 %12, label %52, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = icmp eq %"class.WTF::String"* %16, null
  br i1 %17, label %52, label %18, !prof !5

18:                                               ; preds = %13
  %19 = bitcast %"class.WTF::String"* %16 to i8*
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %50, label %23, !prof !2

23:                                               ; preds = %18
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %24
  br label %26

26:                                               ; preds = %44, %23
  %27 = phi %"class.WTF::String"* [ %45, %44 ], [ %16, %23 ]
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #16
  br label %44

44:                                               ; preds = %43, %40, %26
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %46 = icmp eq %"class.WTF::String"* %45, %25
  br i1 %46, label %47, label %26

47:                                               ; preds = %44
  store i32 0, i32* %20, align 4
  %48 = bitcast %"class.WTF::Vector.630"* %14 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %18
  %51 = phi i8* [ %49, %47 ], [ %19, %18 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #16
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %52

52:                                               ; preds = %50, %13, %8
  %53 = add nuw nsw i64 %9, 1
  %54 = icmp eq i64 %53, %5
  br i1 %54, label %6, label %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #16
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !2

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #16
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %25, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  br label %30

30:                                               ; preds = %7, %18
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %31, align 8
  %33 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #16
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  tail call void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* nonnull %32) #16
  %40 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32 to i8*
  tail call void @free(i8* %40) #16
  br label %41

41:                                               ; preds = %30, %34, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #16
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #16
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #16
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #16
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #16
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #16
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #16
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #16
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #16
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #16
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #16
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #16
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #16
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 4, !range !3
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 8
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %94) #16
  br label %95

95:                                               ; preds = %93, %89
  store i8 0, i8* %86, align 4
  br label %96

96:                                               ; preds = %85, %95
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 4, !range !3
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %107, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 8
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %105) #16
  br label %106

106:                                              ; preds = %104, %100
  store i8 0, i8* %97, align 4
  br label %107

107:                                              ; preds = %96, %106
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 17, i32 0, i32 1, i32 0
  %109 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %110 = icmp eq %"class.blink::PersistentNode"* %109, null
  br i1 %110, label %130, label %111

111:                                              ; preds = %107
  %112 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %113 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %112, i64 0, i32 1
  %114 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %113) #16
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %118, !prof !2

116:                                              ; preds = %111
  %117 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %113, i8* %117) #16
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i8* [ %117, %116 ], [ %114, %111 ]
  %120 = bitcast i8* %119 to %"class.blink::ThreadState"**
  %121 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %121, i64 0, i32 3, i32 0, i32 0, i32 0
  %123 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %122, align 8
  %124 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %125 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %123, i64 0, i32 0, i32 0
  %126 = bitcast %"class.blink::PersistentRegion"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.blink::PersistentNode"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %124, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %129, align 8
  store %"class.blink::PersistentNode"* %124, %"class.blink::PersistentNode"** %125, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %108, align 8
  br label %130

130:                                              ; preds = %107, %118
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 16, i32 0, i32 1, i32 0
  %132 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %133 = icmp eq %"class.blink::PersistentNode"* %132, null
  br i1 %133, label %153, label %134

134:                                              ; preds = %130
  %135 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %136 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %135, i64 0, i32 1
  %137 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %136) #16
  %138 = icmp eq i8* %137, null
  br i1 %138, label %139, label %141, !prof !2

139:                                              ; preds = %134
  %140 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %136, i8* %140) #16
  br label %141

141:                                              ; preds = %139, %134
  %142 = phi i8* [ %140, %139 ], [ %137, %134 ]
  %143 = bitcast i8* %142 to %"class.blink::ThreadState"**
  %144 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %146 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %145, align 8
  %147 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %148 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %146, i64 0, i32 0, i32 0
  %149 = bitcast %"class.blink::PersistentRegion"* %146 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.blink::PersistentNode"* %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %147, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %152, align 8
  store %"class.blink::PersistentNode"* %147, %"class.blink::PersistentNode"** %148, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %131, align 8
  br label %153

153:                                              ; preds = %130, %141
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 15, i32 0
  %155 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %154, align 8
  %156 = icmp eq %"class.blink::StyleReflection"* %155, null
  br i1 %156, label %181, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %158) #16
  %159 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %181

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %163, align 8
  %165 = icmp eq %"class.blink::NinePieceImageData"* %164, null
  br i1 %165, label %173, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %167) #16
  %168 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %166
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %164) #16
  %172 = bitcast %"class.blink::NinePieceImageData"* %164 to i8*
  tail call void @free(i8* %172) #16
  br label %173

173:                                              ; preds = %171, %166, %162
  %174 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2, i32 2
  %175 = load i8, i8* %174, align 1
  %176 = icmp eq i8 %175, 8
  br i1 %176, label %177, label %179

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %178) #16
  br label %179

179:                                              ; preds = %173, %177
  %180 = bitcast %"class.blink::StyleReflection"* %155 to i8*
  tail call void @free(i8* %180) #16
  br label %181

181:                                              ; preds = %153, %157, %179
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 14, i32 0
  %183 = load %"class.blink::TranslateTransformOperation"*, %"class.blink::TranslateTransformOperation"** %182, align 8
  %184 = icmp eq %"class.blink::TranslateTransformOperation"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %183, i64 0, i32 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %187) #16
  %188 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %198

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 -2
  %193 = bitcast %"class.base::RefCounted.483"* %192 to %"class.blink::TransformOperation"*
  %194 = bitcast %"class.base::RefCounted.483"* %192 to void (%"class.blink::TransformOperation"*)***
  %195 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %195, i64 1
  %197 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %196, align 8
  tail call void %197(%"class.blink::TransformOperation"* nonnull %193) #16
  br label %198

198:                                              ; preds = %181, %185, %191
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 13, i32 0
  %200 = load %"class.blink::ScaleTransformOperation"*, %"class.blink::ScaleTransformOperation"** %199, align 8
  %201 = icmp eq %"class.blink::ScaleTransformOperation"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::ScaleTransformOperation", %"class.blink::ScaleTransformOperation"* %200, i64 0, i32 0, i32 1, i32 0
  %204 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %204) #16
  %205 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 -2
  %210 = bitcast %"class.base::RefCounted.483"* %209 to %"class.blink::TransformOperation"*
  %211 = bitcast %"class.base::RefCounted.483"* %209 to void (%"class.blink::TransformOperation"*)***
  %212 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %212, i64 1
  %214 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %213, align 8
  tail call void %214(%"class.blink::TransformOperation"* nonnull %210) #16
  br label %215

215:                                              ; preds = %198, %202, %208
  %216 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 12, i32 0
  %217 = load %"class.blink::RotateTransformOperation"*, %"class.blink::RotateTransformOperation"** %216, align 8
  %218 = icmp eq %"class.blink::RotateTransformOperation"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.blink::RotateTransformOperation", %"class.blink::RotateTransformOperation"* %217, i64 0, i32 0, i32 1, i32 0
  %221 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %221) #16
  %222 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %232

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 -2
  %227 = bitcast %"class.base::RefCounted.483"* %226 to %"class.blink::TransformOperation"*
  %228 = bitcast %"class.base::RefCounted.483"* %226 to void (%"class.blink::TransformOperation"*)***
  %229 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %229, i64 1
  %231 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %230, align 8
  tail call void %231(%"class.blink::TransformOperation"* nonnull %227) #16
  br label %232

232:                                              ; preds = %215, %219, %225
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 11, i32 0
  %234 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %233, align 8
  %235 = icmp eq %"class.blink::BasicShape"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %234, i64 0, i32 1, i32 0
  %238 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %238) #16
  %239 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 -2
  %244 = bitcast %"class.base::RefCounted.480"* %243 to %"class.blink::BasicShape"*
  %245 = bitcast %"class.base::RefCounted.480"* %243 to void (%"class.blink::BasicShape"*)***
  %246 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %245, align 8
  %247 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %246, i64 1
  %248 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %247, align 8
  tail call void %248(%"class.blink::BasicShape"* nonnull %244) #16
  br label %249

249:                                              ; preds = %232, %236, %242
  %250 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 10, i32 0
  %251 = load %"class.blink::ClipPathOperation"*, %"class.blink::ClipPathOperation"** %250, align 8
  %252 = icmp eq %"class.blink::ClipPathOperation"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.blink::ClipPathOperation", %"class.blink::ClipPathOperation"* %251, i64 0, i32 1, i32 0
  %255 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %255) #16
  %256 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 -2
  %261 = bitcast %"class.base::RefCounted.477"* %260 to %"class.blink::ClipPathOperation"*
  %262 = bitcast %"class.base::RefCounted.477"* %260 to void (%"class.blink::ClipPathOperation"*)***
  %263 = load void (%"class.blink::ClipPathOperation"*)**, void (%"class.blink::ClipPathOperation"*)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %263, i64 1
  %265 = load void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %264, align 8
  tail call void %265(%"class.blink::ClipPathOperation"* nonnull %261) #16
  br label %266

266:                                              ; preds = %249, %253, %259
  %267 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #16
  br label %283

283:                                              ; preds = %266, %279, %282
  %284 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #16
  br label %300

300:                                              ; preds = %283, %296, %299
  %301 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %317, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #16
  br label %317

317:                                              ; preds = %300, %313, %316
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %334, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  br i1 %325, label %328, label %330

328:                                              ; preds = %321
  %329 = add i32 %327, -1
  store i32 %329, i32* %326, align 4
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i32 [ %329, %328 ], [ %327, %321 ]
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #16
  br label %334

334:                                              ; preds = %317, %330, %333
  %335 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #16
  br label %351

351:                                              ; preds = %334, %347, %350
  %352 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4
  %353 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 1
  %354 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %353, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %354, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %354, align 8
  %356 = icmp eq %"class.blink::NGGridTrackList"* %355, null
  br i1 %356, label %359, label %357

357:                                              ; preds = %351
  %358 = bitcast %"class.std::__1::unique_ptr.464"* %353 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %358, %"class.blink::NGGridTrackList"* nonnull %355) #16
  br label %359

359:                                              ; preds = %357, %351
  %360 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %352, i64 0, i32 0, i32 0, i32 0, i32 0
  %361 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %360, align 8
  %362 = icmp eq %"class.blink::GridTrackSize"* %361, null
  br i1 %362, label %398, label %363, !prof !5

363:                                              ; preds = %359
  %364 = bitcast %"class.blink::GridTrackSize"* %361 to i8*
  %365 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %396, label %368, !prof !2

368:                                              ; preds = %363
  %369 = zext i32 %366 to i64
  %370 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %361, i64 %369
  br label %371

371:                                              ; preds = %390, %368
  %372 = phi %"class.blink::GridTrackSize"* [ %391, %390 ], [ %361, %368 ]
  %373 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0, i32 2
  %374 = load i8, i8* %373, align 1
  %375 = icmp eq i8 %374, 8
  br i1 %375, label %376, label %378

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %377) #16
  br label %378

378:                                              ; preds = %376, %371
  %379 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0, i32 2
  %380 = load i8, i8* %379, align 1
  %381 = icmp eq i8 %380, 8
  br i1 %381, label %382, label %384

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %383) #16
  br label %384

384:                                              ; preds = %382, %378
  %385 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0, i32 2
  %386 = load i8, i8* %385, align 1
  %387 = icmp eq i8 %386, 8
  br i1 %387, label %388, label %390

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %389) #16
  br label %390

390:                                              ; preds = %388, %384
  %391 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 1
  %392 = icmp eq %"class.blink::GridTrackSize"* %391, %370
  br i1 %392, label %393, label %371

393:                                              ; preds = %390
  store i32 0, i32* %365, align 4
  %394 = bitcast %"class.blink::GridTrackList"* %352 to i8**
  %395 = load i8*, i8** %394, align 8
  br label %396

396:                                              ; preds = %393, %363
  %397 = phi i8* [ %395, %393 ], [ %364, %363 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %397) #16
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %360, align 8
  br label %398

398:                                              ; preds = %359, %396
  %399 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3
  %400 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 1
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %401, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %401, align 8
  %403 = icmp eq %"class.blink::NGGridTrackList"* %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %398
  %405 = bitcast %"class.std::__1::unique_ptr.464"* %400 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %405, %"class.blink::NGGridTrackList"* nonnull %402) #16
  br label %406

406:                                              ; preds = %404, %398
  %407 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %399, i64 0, i32 0, i32 0, i32 0, i32 0
  %408 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %407, align 8
  %409 = icmp eq %"class.blink::GridTrackSize"* %408, null
  br i1 %409, label %445, label %410, !prof !5

410:                                              ; preds = %406
  %411 = bitcast %"class.blink::GridTrackSize"* %408 to i8*
  %412 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %413 = load i32, i32* %412, align 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %443, label %415, !prof !2

415:                                              ; preds = %410
  %416 = zext i32 %413 to i64
  %417 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %408, i64 %416
  br label %418

418:                                              ; preds = %437, %415
  %419 = phi %"class.blink::GridTrackSize"* [ %438, %437 ], [ %408, %415 ]
  %420 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0, i32 2
  %421 = load i8, i8* %420, align 1
  %422 = icmp eq i8 %421, 8
  br i1 %422, label %423, label %425

423:                                              ; preds = %418
  %424 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %424) #16
  br label %425

425:                                              ; preds = %423, %418
  %426 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0, i32 2
  %427 = load i8, i8* %426, align 1
  %428 = icmp eq i8 %427, 8
  br i1 %428, label %429, label %431

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %430) #16
  br label %431

431:                                              ; preds = %429, %425
  %432 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0, i32 2
  %433 = load i8, i8* %432, align 1
  %434 = icmp eq i8 %433, 8
  br i1 %434, label %435, label %437

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %436) #16
  br label %437

437:                                              ; preds = %435, %431
  %438 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 1
  %439 = icmp eq %"class.blink::GridTrackSize"* %438, %417
  br i1 %439, label %440, label %418

440:                                              ; preds = %437
  store i32 0, i32* %412, align 4
  %441 = bitcast %"class.blink::GridTrackList"* %399 to i8**
  %442 = load i8*, i8** %441, align 8
  br label %443

443:                                              ; preds = %440, %410
  %444 = phi i8* [ %442, %440 ], [ %411, %410 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %444) #16
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %407, align 8
  br label %445

445:                                              ; preds = %406, %443
  %446 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2
  %447 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 1
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %447, i64 0, i32 0, i32 0, i32 0
  %449 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %448, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %448, align 8
  %450 = icmp eq %"class.blink::NGGridTrackList"* %449, null
  br i1 %450, label %453, label %451

451:                                              ; preds = %445
  %452 = bitcast %"class.std::__1::unique_ptr.464"* %447 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %452, %"class.blink::NGGridTrackList"* nonnull %449) #16
  br label %453

453:                                              ; preds = %451, %445
  %454 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %446, i64 0, i32 0, i32 0, i32 0, i32 0
  %455 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %454, align 8
  %456 = icmp eq %"class.blink::GridTrackSize"* %455, null
  br i1 %456, label %492, label %457, !prof !5

457:                                              ; preds = %453
  %458 = bitcast %"class.blink::GridTrackSize"* %455 to i8*
  %459 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %460 = load i32, i32* %459, align 4
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %490, label %462, !prof !2

462:                                              ; preds = %457
  %463 = zext i32 %460 to i64
  %464 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %455, i64 %463
  br label %465

465:                                              ; preds = %484, %462
  %466 = phi %"class.blink::GridTrackSize"* [ %485, %484 ], [ %455, %462 ]
  %467 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0, i32 2
  %468 = load i8, i8* %467, align 1
  %469 = icmp eq i8 %468, 8
  br i1 %469, label %470, label %472

470:                                              ; preds = %465
  %471 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %471) #16
  br label %472

472:                                              ; preds = %470, %465
  %473 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0, i32 2
  %474 = load i8, i8* %473, align 1
  %475 = icmp eq i8 %474, 8
  br i1 %475, label %476, label %478

476:                                              ; preds = %472
  %477 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %477) #16
  br label %478

478:                                              ; preds = %476, %472
  %479 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0, i32 2
  %480 = load i8, i8* %479, align 1
  %481 = icmp eq i8 %480, 8
  br i1 %481, label %482, label %484

482:                                              ; preds = %478
  %483 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %483) #16
  br label %484

484:                                              ; preds = %482, %478
  %485 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 1
  %486 = icmp eq %"class.blink::GridTrackSize"* %485, %464
  br i1 %486, label %487, label %465

487:                                              ; preds = %484
  store i32 0, i32* %459, align 4
  %488 = bitcast %"class.blink::GridTrackList"* %446 to i8**
  %489 = load i8*, i8** %488, align 8
  br label %490

490:                                              ; preds = %487, %457
  %491 = phi i8* [ %489, %487 ], [ %458, %457 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %491) #16
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %454, align 8
  br label %492

492:                                              ; preds = %453, %490
  %493 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1
  %494 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 1
  %495 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %494, i64 0, i32 0, i32 0, i32 0
  %496 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %495, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %495, align 8
  %497 = icmp eq %"class.blink::NGGridTrackList"* %496, null
  br i1 %497, label %500, label %498

498:                                              ; preds = %492
  %499 = bitcast %"class.std::__1::unique_ptr.464"* %494 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %499, %"class.blink::NGGridTrackList"* nonnull %496) #16
  br label %500

500:                                              ; preds = %498, %492
  %501 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %493, i64 0, i32 0, i32 0, i32 0, i32 0
  %502 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %501, align 8
  %503 = icmp eq %"class.blink::GridTrackSize"* %502, null
  br i1 %503, label %539, label %504, !prof !5

504:                                              ; preds = %500
  %505 = bitcast %"class.blink::GridTrackSize"* %502 to i8*
  %506 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %507 = load i32, i32* %506, align 4
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %537, label %509, !prof !2

509:                                              ; preds = %504
  %510 = zext i32 %507 to i64
  %511 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %502, i64 %510
  br label %512

512:                                              ; preds = %531, %509
  %513 = phi %"class.blink::GridTrackSize"* [ %532, %531 ], [ %502, %509 ]
  %514 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0, i32 2
  %515 = load i8, i8* %514, align 1
  %516 = icmp eq i8 %515, 8
  br i1 %516, label %517, label %519

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %518) #16
  br label %519

519:                                              ; preds = %517, %512
  %520 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0, i32 2
  %521 = load i8, i8* %520, align 1
  %522 = icmp eq i8 %521, 8
  br i1 %522, label %523, label %525

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %524) #16
  br label %525

525:                                              ; preds = %523, %519
  %526 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0, i32 2
  %527 = load i8, i8* %526, align 1
  %528 = icmp eq i8 %527, 8
  br i1 %528, label %529, label %531

529:                                              ; preds = %525
  %530 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %530) #16
  br label %531

531:                                              ; preds = %529, %525
  %532 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 1
  %533 = icmp eq %"class.blink::GridTrackSize"* %532, %511
  br i1 %533, label %534, label %512

534:                                              ; preds = %531
  store i32 0, i32* %506, align 4
  %535 = bitcast %"class.blink::GridTrackList"* %493 to i8**
  %536 = load i8*, i8** %535, align 8
  br label %537

537:                                              ; preds = %534, %504
  %538 = phi i8* [ %536, %534 ], [ %505, %504 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %538) #16
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %501, align 8
  br label %539

539:                                              ; preds = %500, %537
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"*, %"class.blink::NGGridTrackList"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.blink::NGGridTrackList"* %1, null
  br i1 %3, label %57, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %6, align 8
  %8 = icmp eq %"class.blink::GridTrackSize"* %7, null
  br i1 %8, label %44, label %9, !prof !5

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::GridTrackSize"* %7 to i8*
  %11 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %42, label %14, !prof !2

14:                                               ; preds = %9
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 %15
  br label %17

17:                                               ; preds = %36, %14
  %18 = phi %"class.blink::GridTrackSize"* [ %37, %36 ], [ %7, %14 ]
  %19 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 8
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %23) #16
  br label %24

24:                                               ; preds = %22, %17
  %25 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %29) #16
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %35) #16
  br label %36

36:                                               ; preds = %34, %30
  %37 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 1
  %38 = icmp eq %"class.blink::GridTrackSize"* %37, %16
  br i1 %38, label %39, label %17

39:                                               ; preds = %36
  store i32 0, i32* %11, align 4
  %40 = bitcast %"class.WTF::Vector.459"* %5 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %9
  %43 = phi i8* [ %41, %39 ], [ %10, %9 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #16
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %6, align 8
  br label %44

44:                                               ; preds = %42, %4
  %45 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.blink::NGGridTrackRepeater"*, %"struct.blink::NGGridTrackRepeater"** %45, align 8
  %47 = icmp eq %"struct.blink::NGGridTrackRepeater"* %46, null
  %48 = bitcast %"struct.blink::NGGridTrackRepeater"* %46 to i8*
  br i1 %47, label %55, label %49, !prof !5

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53, !prof !2

53:                                               ; preds = %49
  store i32 0, i32* %50, align 4
  br label %54

54:                                               ; preds = %53, %49
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %48) #16
  br label %55

55:                                               ; preds = %44, %54
  %56 = bitcast %"class.blink::NGGridTrackList"* %1 to i8*
  tail call void @_ZdlPv(i8* %56) #17
  br label %57

57:                                               ; preds = %55, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #16
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #16
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 10, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #16
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #16
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %19, %30
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %42
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #16
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #16
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %57, align 8
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %58, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::PersistentRegion"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.blink::PersistentNode"* %59 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %59, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %64, align 8
  store %"class.blink::PersistentNode"* %59, %"class.blink::PersistentNode"** %60, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8
  br label %65

65:                                               ; preds = %42, %53
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 8, i32 0
  %67 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %66, align 8
  %68 = icmp eq %"class.blink::ShadowList"* %67, null
  br i1 %68, label %91, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %71) #16
  %72 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %91

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 2
  %77 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 5, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %81, label %80, !prof !2

80:                                               ; preds = %75
  store i32 0, i32* %77, align 4
  br label %81

81:                                               ; preds = %80, %75
  %82 = bitcast %"class.base::RefCounted.300"* %76 to %"class.blink::ShadowData"**
  %83 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %82, align 8
  %84 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 6
  %85 = bitcast %"class.base::RefCounted.300"* %84 to %"class.blink::ShadowData"*
  %86 = icmp eq %"class.blink::ShadowData"* %83, %85
  br i1 %86, label %89, label %87, !prof !5

87:                                               ; preds = %81
  %88 = bitcast %"class.base::RefCounted.300"* %76 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %88, %"class.blink::ShadowData"* %83) #16
  br label %89

89:                                               ; preds = %87, %81
  %90 = bitcast %"class.blink::ShadowList"* %67 to i8*
  tail call void @free(i8* %90) #16
  br label %91

91:                                               ; preds = %65, %69, %89
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 7, i32 0
  %93 = load %"class.blink::QuotesData"*, %"class.blink::QuotesData"** %92, align 8
  %94 = icmp eq %"class.blink::QuotesData"* %93, null
  br i1 %94, label %158, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %96) #16
  %97 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %158

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1
  %102 = getelementptr inbounds %"class.WTF::Vector.292", %"class.WTF::Vector.292"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::pair.295"*, %"struct.std::__1::pair.295"** %102, align 8
  %104 = icmp eq %"struct.std::__1::pair.295"* %103, null
  br i1 %104, label %156, label %105, !prof !5

105:                                              ; preds = %100
  %106 = bitcast %"struct.std::__1::pair.295"* %103 to i8*
  %107 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %154, label %110, !prof !2

110:                                              ; preds = %105
  %111 = zext i32 %108 to i64
  %112 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %103, i64 %111
  br label %113

113:                                              ; preds = %148, %110
  %114 = phi %"struct.std::__1::pair.295"* [ %149, %148 ], [ %103, %110 ]
  %115 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 1, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #16
  br label %131

131:                                              ; preds = %130, %127, %113
  %132 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #16
  br label %148

148:                                              ; preds = %147, %144, %131
  %149 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 1
  %150 = icmp eq %"struct.std::__1::pair.295"* %149, %112
  br i1 %150, label %151, label %113

151:                                              ; preds = %148
  store i32 0, i32* %107, align 4
  %152 = bitcast %"class.WTF::Vector.292"* %101 to i8**
  %153 = load i8*, i8** %152, align 8
  br label %154

154:                                              ; preds = %151, %105
  %155 = phi i8* [ %153, %151 ], [ %106, %105 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %155) #16
  br label %156

156:                                              ; preds = %100, %154
  %157 = bitcast %"class.blink::QuotesData"* %93 to i8*
  tail call void @free(i8* %157) #16
  br label %158

158:                                              ; preds = %91, %95, %156
  %159 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #16
  br label %175

175:                                              ; preds = %158, %171, %174
  %176 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #16
  br label %192

192:                                              ; preds = %175, %188, %191
  %193 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4
  %194 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %193, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %194, align 8
  %196 = icmp eq %"class.WTF::AtomicString"* %195, null
  br i1 %196, label %231, label %197, !prof !5

197:                                              ; preds = %192
  %198 = bitcast %"class.WTF::AtomicString"* %195 to i8*
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %229, label %202, !prof !2

202:                                              ; preds = %197
  %203 = zext i32 %200 to i64
  %204 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %195, i64 %203
  br label %205

205:                                              ; preds = %223, %202
  %206 = phi %"class.WTF::AtomicString"* [ %224, %223 ], [ %195, %202 ]
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 0, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #16
  br label %223

223:                                              ; preds = %222, %219, %205
  %224 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 1
  %225 = icmp eq %"class.WTF::AtomicString"* %224, %204
  br i1 %225, label %226, label %205

226:                                              ; preds = %223
  store i32 0, i32* %199, align 4
  %227 = bitcast %"class.WTF::Vector.284"* %193 to i8**
  %228 = load i8*, i8** %227, align 8
  br label %229

229:                                              ; preds = %226, %197
  %230 = phi i8* [ %228, %226 ], [ %198, %197 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %230) #16
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %194, align 8
  br label %231

231:                                              ; preds = %192, %229
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %233 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"** %232, align 8
  %234 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, null
  br i1 %234, label %242, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %236) #16
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %242

240:                                              ; preds = %235
  %241 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233 to i8*
  tail call void @free(i8* %241) #16
  br label %242

242:                                              ; preds = %231, %235, %240
  %243 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %244 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %243, align 8
  %245 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, null
  br i1 %245, label %253, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %247) #16
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %246
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* nonnull %244) #16
  %252 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244 to i8*
  tail call void @free(i8* %252) #16
  br label %253

253:                                              ; preds = %242, %246, %251
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #16
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #16
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 4, i32 0
  %26 = load %"class.blink::StyleInitialData"*, %"class.blink::StyleInitialData"** %25, align 8
  %27 = icmp eq %"class.blink::StyleInitialData"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #16
  %30 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.base::RefCounted.261", %"class.base::RefCounted.261"* %34, i64 2
  %36 = bitcast %"class.base::RefCounted.261"* %35 to %"class.blink::StyleVariables"*
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %36) #16
  %37 = bitcast %"class.blink::StyleInitialData"* %26 to i8*
  tail call void @free(i8* %37) #16
  br label %38

38:                                               ; preds = %24, %28, %33
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 3, i32 0
  %40 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %39, align 8
  %41 = icmp eq %"class.base::RefCountedData"* %40, null
  br i1 %41, label %82, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0
  %44 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %82

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 2
  %49 = bitcast %"class.base::RefCountedThreadSafe.253"* %48 to %"class.blink::AppliedTextDecoration"**
  %50 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  %51 = icmp eq %"class.blink::AppliedTextDecoration"* %50, null
  br i1 %51, label %80, label %52, !prof !5

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %77, label %56, !prof !2

56:                                               ; preds = %52
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %50, i64 %57
  br label %59

59:                                               ; preds = %72, %56
  %60 = phi %"class.blink::AppliedTextDecoration"* [ %73, %72 ], [ %50, %56 ]
  %61 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3, i32 2
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 8
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %65) #16
  br label %66

66:                                               ; preds = %64, %59
  %67 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 8
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %71) #16
  br label %72

72:                                               ; preds = %70, %66
  %73 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 1
  %74 = icmp eq %"class.blink::AppliedTextDecoration"* %73, %58
  br i1 %74, label %75, label %59

75:                                               ; preds = %72
  store i32 0, i32* %53, align 4
  %76 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  br label %77

77:                                               ; preds = %75, %52
  %78 = phi %"class.blink::AppliedTextDecoration"* [ %50, %52 ], [ %76, %75 ]
  %79 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %78, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #16
  br label %80

80:                                               ; preds = %77, %47
  %81 = bitcast %"class.base::RefCountedData"* %40 to i8*
  tail call void @_ZdlPv(i8* %81) #17
  br label %82

82:                                               ; preds = %38, %42, %80
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #16
  br label %99

99:                                               ; preds = %82, %95, %98
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4FontD1Ev(%"class.blink::Font"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink15ShapeResultViewD1Ev(%"class.blink::ShapeResultView"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1970"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %24, i64 %25
  ret %"struct.blink::NGInlineItemResult"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1970"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp ult i32 %1, 33
  br i1 %3, label %4, label %79

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %5, align 8
  %7 = icmp eq %"struct.blink::NGInlineItemResult"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"struct.blink::NGInlineItemResult"*
  %10 = icmp eq %"struct.blink::NGInlineItemResult"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1970"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %15, align 8
  br label %159

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %6, i64 %19
  %21 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0
  %22 = ptrtoint i8* %8 to i64
  %23 = bitcast %"class.WTF::Vector.1970"* %0 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %24, align 8
  %25 = icmp eq i32 %18, 0
  br i1 %25, label %78, label %26

26:                                               ; preds = %16, %70
  %27 = phi %"struct.blink::NGInlineItemResult"* [ %76, %70 ], [ %6, %16 ]
  %28 = phi %"struct.blink::NGInlineItemResult"* [ %75, %70 ], [ %9, %16 ]
  %29 = bitcast %"struct.blink::NGInlineItemResult"* %28 to i8*
  %30 = bitcast %"struct.blink::NGInlineItemResult"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 36, i1 false) #16
  %31 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %28, i64 0, i32 6
  %32 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %27, i64 0, i32 6
  %33 = getelementptr inbounds %class.scoped_refptr.1909, %class.scoped_refptr.1909* %32, i64 0, i32 0
  %34 = bitcast %class.scoped_refptr.1909* %32 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %class.scoped_refptr.1909* %31 to i64*
  store i64 %35, i64* %36, align 8
  store %"class.blink::ShapeResultView"* null, %"class.blink::ShapeResultView"** %33, align 8
  %37 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %28, i64 0, i32 7
  %38 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %27, i64 0, i32 7
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %38, i64 0, i32 0, i32 0
  %40 = bitcast %"class.WTF::String"* %38 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.WTF::String"* %37 to i64*
  store i64 %41, i64* %42, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %39, align 8
  %43 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %28, i64 0, i32 8
  %44 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %27, i64 0, i32 8
  %45 = getelementptr inbounds %class.scoped_refptr.1844, %class.scoped_refptr.1844* %44, i64 0, i32 0
  %46 = bitcast %class.scoped_refptr.1844* %44 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %class.scoped_refptr.1844* %43 to i64*
  store i64 %47, i64* %48, align 8
  store %"class.blink::ShapeResult"* null, %"class.blink::ShapeResult"** %45, align 8
  %49 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %28, i64 0, i32 9
  %50 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %27, i64 0, i32 9
  %51 = getelementptr inbounds %class.scoped_refptr.1631, %class.scoped_refptr.1631* %50, i64 0, i32 0
  %52 = bitcast %class.scoped_refptr.1631* %50 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %class.scoped_refptr.1631* %49 to i64*
  store i64 %53, i64* %54, align 8
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %51, align 8
  %55 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %28, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %27, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 32, i1 false) #16
  %57 = load i8, i8* %56, align 8, !range !3
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %70, label %59

59:                                               ; preds = %26
  %60 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %27, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0
  %61 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %28, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2
  %62 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %60, i64 0, i32 0, i32 0
  %63 = bitcast %"struct.blink::NGPositionedFloat"* %60 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %union.anon.1917* %61 to i64*
  store i64 %64, i64* %65, align 8
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %62, align 8
  %66 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %28, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %67 = bitcast %"struct.blink::NGBfcOffset"* %66 to i8*
  %68 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %27, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %69 = bitcast %"struct.blink::NGBfcOffset"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %69, i64 9, i1 false) #16
  store i8 1, i8* %55, align 8
  br label %70

70:                                               ; preds = %59, %26
  %71 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %28, i64 0, i32 11
  %72 = bitcast %"struct.blink::NGLineBoxStrut"* %71 to i8*
  %73 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %27, i64 0, i32 11
  %74 = bitcast %"struct.blink::NGLineBoxStrut"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %74, i64 56, i1 false) #16
  tail call void @_ZN5blink18NGInlineItemResultD2Ev(%"struct.blink::NGInlineItemResult"* %27) #16
  %75 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %28, i64 1
  %76 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %27, i64 1
  %77 = icmp eq %"struct.blink::NGInlineItemResult"* %76, %20
  br i1 %77, label %78, label %26

78:                                               ; preds = %70, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1971"* %21, %"struct.blink::NGInlineItemResult"* %6) #16
  br label %159

79:                                               ; preds = %2
  %80 = zext i32 %1 to i64
  %81 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18NGInlineItemResultEEEmm(i64 %80) #16
  %82 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %81, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18NGInlineItemResultEEEPKcv, i64 0, i64 0)) #16
  %83 = udiv i64 %81, 160
  %84 = ptrtoint i8* %82 to i64
  %85 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %85, align 8
  %87 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0, i32 0, i32 2
  %88 = load i32, i32* %87, align 4
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %86, i64 %89
  %91 = icmp eq i32 %88, 0
  br i1 %91, label %148, label %92

92:                                               ; preds = %79
  %93 = bitcast i8* %82 to %"struct.blink::NGInlineItemResult"*
  br label %94

94:                                               ; preds = %92, %138
  %95 = phi %"struct.blink::NGInlineItemResult"* [ %144, %138 ], [ %86, %92 ]
  %96 = phi %"struct.blink::NGInlineItemResult"* [ %143, %138 ], [ %93, %92 ]
  %97 = bitcast %"struct.blink::NGInlineItemResult"* %96 to i8*
  %98 = bitcast %"struct.blink::NGInlineItemResult"* %95 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 36, i1 false) #16
  %99 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %96, i64 0, i32 6
  %100 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %95, i64 0, i32 6
  %101 = getelementptr inbounds %class.scoped_refptr.1909, %class.scoped_refptr.1909* %100, i64 0, i32 0
  %102 = bitcast %class.scoped_refptr.1909* %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %class.scoped_refptr.1909* %99 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.blink::ShapeResultView"* null, %"class.blink::ShapeResultView"** %101, align 8
  %105 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %96, i64 0, i32 7
  %106 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %95, i64 0, i32 7
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %108 = bitcast %"class.WTF::String"* %106 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.WTF::String"* %105 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %107, align 8
  %111 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %96, i64 0, i32 8
  %112 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %95, i64 0, i32 8
  %113 = getelementptr inbounds %class.scoped_refptr.1844, %class.scoped_refptr.1844* %112, i64 0, i32 0
  %114 = bitcast %class.scoped_refptr.1844* %112 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %class.scoped_refptr.1844* %111 to i64*
  store i64 %115, i64* %116, align 8
  store %"class.blink::ShapeResult"* null, %"class.blink::ShapeResult"** %113, align 8
  %117 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %96, i64 0, i32 9
  %118 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %95, i64 0, i32 9
  %119 = getelementptr inbounds %class.scoped_refptr.1631, %class.scoped_refptr.1631* %118, i64 0, i32 0
  %120 = bitcast %class.scoped_refptr.1631* %118 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %class.scoped_refptr.1631* %117 to i64*
  store i64 %121, i64* %122, align 8
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %119, align 8
  %123 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %96, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %124 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %95, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 32, i1 false) #16
  %125 = load i8, i8* %124, align 8, !range !3
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %94
  %128 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %95, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0
  %129 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %96, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2
  %130 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %128, i64 0, i32 0, i32 0
  %131 = bitcast %"struct.blink::NGPositionedFloat"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %union.anon.1917* %129 to i64*
  store i64 %132, i64* %133, align 8
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %130, align 8
  %134 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %96, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %135 = bitcast %"struct.blink::NGBfcOffset"* %134 to i8*
  %136 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %95, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %137 = bitcast %"struct.blink::NGBfcOffset"* %136 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* align 8 %137, i64 9, i1 false) #16
  store i8 1, i8* %123, align 8
  br label %138

138:                                              ; preds = %127, %94
  %139 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %96, i64 0, i32 11
  %140 = bitcast %"struct.blink::NGLineBoxStrut"* %139 to i8*
  %141 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %95, i64 0, i32 11
  %142 = bitcast %"struct.blink::NGLineBoxStrut"* %141 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* align 8 %142, i64 56, i1 false) #16
  tail call void @_ZN5blink18NGInlineItemResultD2Ev(%"struct.blink::NGInlineItemResult"* %95) #16
  %143 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %96, i64 1
  %144 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %95, i64 1
  %145 = icmp eq %"struct.blink::NGInlineItemResult"* %144, %90
  br i1 %145, label %146, label %94

146:                                              ; preds = %138
  %147 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %85, align 8
  br label %148

148:                                              ; preds = %146, %79
  %149 = phi %"struct.blink::NGInlineItemResult"* [ %147, %146 ], [ %86, %79 ]
  %150 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0, i32 1, i64 0
  %151 = bitcast i8* %150 to %"struct.blink::NGInlineItemResult"*
  %152 = icmp eq %"struct.blink::NGInlineItemResult"* %149, %151
  br i1 %152, label %155, label %153, !prof !5

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1971"* %154, %"struct.blink::NGInlineItemResult"* %149) #16
  br label %155

155:                                              ; preds = %148, %153
  %156 = bitcast %"class.WTF::Vector.1970"* %0 to i64*
  store atomic i64 %84, i64* %156 monotonic, align 8
  %157 = trunc i64 %83 to i32
  %158 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %157, i32* %158, align 8
  br label %159

159:                                              ; preds = %78, %155, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18NGInlineItemResultEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 13408665
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 13408665) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = mul i64 %0, 160
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1971"*, %"struct.blink::NGInlineItemResult"*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %"struct.blink::NGInlineItemResult"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIiEEvOT_(%"class.WTF::Vector.1982"*, i32* dereferenceable(4)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIjLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1982"* %0, i32 %5) #16
  %6 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds i32, i32* %7, i64 %9
  %11 = load i32, i32* %1, align 4
  store i32 %11, i32* %10, align 4
  %12 = load i32, i32* %3, align 4
  %13 = add i32 %12, 1
  store i32 %13, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1982"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0), i8* %15, i8* %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #16
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !5

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %37) #16
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #16
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1982"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 2
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1982"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIjLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1982"* %0, i32 %27) #16
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1982"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i32*
  %10 = icmp eq i32* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1982"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1982"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i32* %6 to i8*
  %27 = shl nuw nsw i64 %25, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #16
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIjLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.1983"* %19, i32* nonnull %6) #16
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %30) #16
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #16
  %33 = lshr i64 %31, 2
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i32* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !5

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i32* %36 to i8*
  %45 = shl nuw nsw i64 %43, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #16
  %46 = load i32*, i32** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i32* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32* %48, %50
  br i1 %51, label %54, label %52, !prof !5

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIjLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.1983"* %53, i32* %48) #16
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1982"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1982", %"class.WTF::Vector.1982"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector.1970"*, i32) local_unnamed_addr #6 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.1970", %"class.WTF::Vector.1970"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %24, i64 %25
  call void @_ZN5blink18NGInlineItemResultD2Ev(%"struct.blink::NGInlineItemResult"* %26) #16
  %27 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %26, i64 1
  %28 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %23, align 8
  %29 = load i32, i32* %8, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %28, i64 %30
  call void @_ZN3WTF11VectorMoverILb0EN5blink18NGInlineItemResultENS_18PartitionAllocatorEE15MoveOverlappingEPS2_S5_S5_b(%"struct.blink::NGInlineItemResult"* %27, %"struct.blink::NGInlineItemResult"* %31, %"struct.blink::NGInlineItemResult"* %26, i1 zeroext true) #16
  %32 = load i32, i32* %8, align 4
  %33 = add i32 %32, -1
  store i32 %33, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink18NGInlineItemResultENS_18PartitionAllocatorEE15MoveOverlappingEPS2_S5_S5_b(%"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"*, i1 zeroext) local_unnamed_addr #2 comdat align 2 {
  %5 = icmp ugt %"struct.blink::NGInlineItemResult"* %0, %2
  br i1 %5, label %6, label %60

6:                                                ; preds = %4
  %7 = icmp eq %"struct.blink::NGInlineItemResult"* %0, %1
  br i1 %7, label %120, label %8

8:                                                ; preds = %6, %52
  %9 = phi %"struct.blink::NGInlineItemResult"* [ %58, %52 ], [ %0, %6 ]
  %10 = phi %"struct.blink::NGInlineItemResult"* [ %57, %52 ], [ %2, %6 ]
  %11 = bitcast %"struct.blink::NGInlineItemResult"* %10 to i8*
  %12 = bitcast %"struct.blink::NGInlineItemResult"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 36, i1 false) #16
  %13 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %10, i64 0, i32 6
  %14 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %9, i64 0, i32 6
  %15 = getelementptr inbounds %class.scoped_refptr.1909, %class.scoped_refptr.1909* %14, i64 0, i32 0
  %16 = bitcast %class.scoped_refptr.1909* %14 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %class.scoped_refptr.1909* %13 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.blink::ShapeResultView"* null, %"class.blink::ShapeResultView"** %15, align 8
  %19 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %10, i64 0, i32 7
  %20 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %9, i64 0, i32 7
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %22 = bitcast %"class.WTF::String"* %20 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.WTF::String"* %19 to i64*
  store i64 %23, i64* %24, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %21, align 8
  %25 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %10, i64 0, i32 8
  %26 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %9, i64 0, i32 8
  %27 = getelementptr inbounds %class.scoped_refptr.1844, %class.scoped_refptr.1844* %26, i64 0, i32 0
  %28 = bitcast %class.scoped_refptr.1844* %26 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %class.scoped_refptr.1844* %25 to i64*
  store i64 %29, i64* %30, align 8
  store %"class.blink::ShapeResult"* null, %"class.blink::ShapeResult"** %27, align 8
  %31 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %10, i64 0, i32 9
  %32 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %9, i64 0, i32 9
  %33 = getelementptr inbounds %class.scoped_refptr.1631, %class.scoped_refptr.1631* %32, i64 0, i32 0
  %34 = bitcast %class.scoped_refptr.1631* %32 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %class.scoped_refptr.1631* %31 to i64*
  store i64 %35, i64* %36, align 8
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %33, align 8
  %37 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %10, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %9, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 32, i1 false) #16
  %39 = load i8, i8* %38, align 8, !range !3
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %52, label %41

41:                                               ; preds = %8
  %42 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %9, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0
  %43 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %10, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2
  %44 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"struct.blink::NGPositionedFloat"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %union.anon.1917* %43 to i64*
  store i64 %46, i64* %47, align 8
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %44, align 8
  %48 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %10, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %49 = bitcast %"struct.blink::NGBfcOffset"* %48 to i8*
  %50 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %9, i64 0, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %51 = bitcast %"struct.blink::NGBfcOffset"* %50 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %51, i64 9, i1 false) #16
  store i8 1, i8* %37, align 8
  br label %52

52:                                               ; preds = %41, %8
  %53 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %10, i64 0, i32 11
  %54 = bitcast %"struct.blink::NGLineBoxStrut"* %53 to i8*
  %55 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %9, i64 0, i32 11
  %56 = bitcast %"struct.blink::NGLineBoxStrut"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %56, i64 56, i1 false) #16
  tail call void @_ZN5blink18NGInlineItemResultD2Ev(%"struct.blink::NGInlineItemResult"* %9) #16
  %57 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %10, i64 1
  %58 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %9, i64 1
  %59 = icmp eq %"struct.blink::NGInlineItemResult"* %58, %1
  br i1 %59, label %120, label %8

60:                                               ; preds = %4
  %61 = icmp eq %"struct.blink::NGInlineItemResult"* %1, %0
  br i1 %61, label %120, label %62

62:                                               ; preds = %60
  %63 = ptrtoint %"struct.blink::NGInlineItemResult"* %1 to i64
  %64 = ptrtoint %"struct.blink::NGInlineItemResult"* %0 to i64
  %65 = sub i64 %63, %64
  %66 = sdiv exact i64 %65, 160
  %67 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %2, i64 %66
  br label %68

68:                                               ; preds = %62, %114
  %69 = phi %"struct.blink::NGInlineItemResult"* [ %72, %114 ], [ %67, %62 ]
  %70 = phi %"struct.blink::NGInlineItemResult"* [ %71, %114 ], [ %1, %62 ]
  %71 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %70, i64 -1
  %72 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %69, i64 -1
  %73 = bitcast %"struct.blink::NGInlineItemResult"* %72 to i8*
  %74 = bitcast %"struct.blink::NGInlineItemResult"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 36, i1 false) #16
  %75 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %69, i64 -1, i32 6
  %76 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %70, i64 -1, i32 6
  %77 = getelementptr inbounds %class.scoped_refptr.1909, %class.scoped_refptr.1909* %76, i64 0, i32 0
  %78 = bitcast %class.scoped_refptr.1909* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %class.scoped_refptr.1909* %75 to i64*
  store i64 %79, i64* %80, align 8
  store %"class.blink::ShapeResultView"* null, %"class.blink::ShapeResultView"** %77, align 8
  %81 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %69, i64 -1, i32 7
  %82 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %70, i64 -1, i32 7
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %82, i64 0, i32 0, i32 0
  %84 = bitcast %"class.WTF::String"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.WTF::String"* %81 to i64*
  store i64 %85, i64* %86, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  %87 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %69, i64 -1, i32 8
  %88 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %70, i64 -1, i32 8
  %89 = getelementptr inbounds %class.scoped_refptr.1844, %class.scoped_refptr.1844* %88, i64 0, i32 0
  %90 = bitcast %class.scoped_refptr.1844* %88 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %class.scoped_refptr.1844* %87 to i64*
  store i64 %91, i64* %92, align 8
  store %"class.blink::ShapeResult"* null, %"class.blink::ShapeResult"** %89, align 8
  %93 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %69, i64 -1, i32 9
  %94 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %70, i64 -1, i32 9
  %95 = getelementptr inbounds %class.scoped_refptr.1631, %class.scoped_refptr.1631* %94, i64 0, i32 0
  %96 = bitcast %class.scoped_refptr.1631* %94 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %class.scoped_refptr.1631* %93 to i64*
  store i64 %97, i64* %98, align 8
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %95, align 8
  %99 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %69, i64 -1, i32 10, i32 0, i32 0, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %70, i64 -1, i32 10, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 32, i1 false) #16
  %101 = load i8, i8* %100, align 8, !range !3
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %114, label %103

103:                                              ; preds = %68
  %104 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %70, i64 -1, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0
  %105 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %69, i64 -1, i32 10, i32 0, i32 0, i32 0, i32 2
  %106 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %104, i64 0, i32 0, i32 0
  %107 = bitcast %"struct.blink::NGPositionedFloat"* %104 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %union.anon.1917* %105 to i64*
  store i64 %108, i64* %109, align 8
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %106, align 8
  %110 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %69, i64 -1, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %111 = bitcast %"struct.blink::NGBfcOffset"* %110 to i8*
  %112 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %70, i64 -1, i32 10, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %113 = bitcast %"struct.blink::NGBfcOffset"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %113, i64 9, i1 false) #16
  store i8 1, i8* %99, align 8
  br label %114

114:                                              ; preds = %68, %103
  %115 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %69, i64 -1, i32 11
  %116 = bitcast %"struct.blink::NGLineBoxStrut"* %115 to i8*
  %117 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %70, i64 -1, i32 11
  %118 = bitcast %"struct.blink::NGLineBoxStrut"* %117 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %118, i64 56, i1 false) #16
  tail call void @_ZN5blink18NGInlineItemResultD2Ev(%"struct.blink::NGInlineItemResult"* %71) #16
  %119 = icmp eq %"struct.blink::NGInlineItemResult"* %71, %0
  br i1 %119, label %120, label %68

120:                                              ; preds = %114, %52, %60, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) %"class.blink::LayoutUnit"* @_ZN3WTF6VectorIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1923"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %24, i64 %25
  ret %"class.blink::LayoutUnit"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1923"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0), i8* %15, i8* %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #16
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !5

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %31, align 8
  %33 = icmp eq %"class.blink::LayoutUnit"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 64
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64 %37) #16
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv, i64 0, i64 0)) #16
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1923"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 2
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1923"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 64, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1923"* %0, i32 %27) #16
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1923"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp ult i32 %1, 65
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %5, align 8
  %7 = icmp eq %"class.blink::LayoutUnit"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::LayoutUnit"*
  %10 = icmp eq %"class.blink::LayoutUnit"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1923"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 64, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1923"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 64, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::LayoutUnit"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #16
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1924"* %19, %"class.blink::LayoutUnit"* nonnull %6) #16
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64 %30) #16
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10LayoutUnitEEEPKcv, i64 0, i64 0)) #16
  %33 = lshr i64 %31, 2
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::LayoutUnit"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !5

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::LayoutUnit"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #16
  %46 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::LayoutUnit"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::LayoutUnit"*
  %51 = icmp eq %"class.blink::LayoutUnit"* %48, %50
  br i1 %51, label %54, label %52, !prof !5

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1924"* %53, %"class.blink::LayoutUnit"* %48) #16
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1923"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1923", %"class.WTF::Vector.1923"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink10LayoutUnitEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10LayoutUnitELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1924"*, %"class.blink::LayoutUnit"*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutUnit"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"struct.blink::NGPositionedFloat"* @_ZNK3WTF6VectorIN5blink17NGPositionedFloatELj8ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1918"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1918", %"class.WTF::Vector.1918"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.1918", %"class.WTF::Vector.1918"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGPositionedFloat"*, %"struct.blink::NGPositionedFloat"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGPositionedFloat", %"struct.blink::NGPositionedFloat"* %24, i64 %25
  ret %"struct.blink::NGPositionedFloat"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIKN5blink17NGBlockBreakTokenEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.1928"*, %class.scoped_refptr.1931* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr.1931*, %class.scoped_refptr.1931** %6, align 8
  %8 = icmp ugt %class.scoped_refptr.1931* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %class.scoped_refptr.1931, %class.scoped_refptr.1931* %7, i64 %10
  %12 = icmp ugt %class.scoped_refptr.1931* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq %class.scoped_refptr.1931* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink17NGBlockBreakTokenEEEEmm(i64 %26) #16
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink17NGBlockBreakTokenEEEEPKcv, i64 0, i64 0)) #16
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1928"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %class.scoped_refptr.1931*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %class.scoped_refptr.1931*, %class.scoped_refptr.1931** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %class.scoped_refptr.1931* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %class.scoped_refptr.1931* %38 to i8*
  br i1 %41, label %43, label %49, !prof !5

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #16
  %47 = bitcast %"class.WTF::Vector.1928"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  %51 = bitcast %"class.WTF::Vector.1928"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %class.scoped_refptr.1931*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %class.scoped_refptr.1931* %1 to i64
  %56 = ptrtoint %class.scoped_refptr.1931* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.1928", %"class.WTF::Vector.1928"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !5

69:                                               ; preds = %54
  %70 = icmp eq %class.scoped_refptr.1931* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink17NGBlockBreakTokenEEEEmm(i64 %71) #16
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink17NGBlockBreakTokenEEEEPKcv, i64 0, i64 0)) #16
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1928"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %class.scoped_refptr.1931*, %class.scoped_refptr.1931** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %class.scoped_refptr.1931* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %class.scoped_refptr.1931* %78 to i8*
  br i1 %81, label %83, label %89, !prof !5

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #16
  %87 = bitcast %"class.WTF::Vector.1928"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #16
  %91 = bitcast %"class.WTF::Vector.1928"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %class.scoped_refptr.1931*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %class.scoped_refptr.1931* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %class.scoped_refptr.1931, %class.scoped_refptr.1931* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %class.scoped_refptr.1931* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %class.scoped_refptr.1931* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %class.scoped_refptr.1931, %class.scoped_refptr.1931* %100, i64 %103
  %105 = getelementptr inbounds %class.scoped_refptr.1931, %class.scoped_refptr.1931* %101, i64 0, i32 0
  %106 = bitcast %class.scoped_refptr.1931* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %class.scoped_refptr.1931* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.blink::NGBlockBreakToken"* null, %"class.blink::NGBlockBreakToken"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink17NGBlockBreakTokenEEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 4001, i32 1}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!"branch_weights", i32 1073205, i32 2146410443}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK5blink16NGExclusionSpace21FindLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitES4_: argument 0"}
!9 = distinct !{!9, !"_ZNK5blink16NGExclusionSpace21FindLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitES4_"}
!10 = !{!11, !8}
!11 = distinct !{!11, !12, !"_ZNK5blink24NGExclusionSpaceInternal21FindLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitES4_: argument 0"}
!12 = distinct !{!12, !"_ZNK5blink24NGExclusionSpaceInternal21FindLayoutOpportunityERKNS_11NGBfcOffsetENS_10LayoutUnitES4_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK5blink19NGLayoutOpportunity28ComputeLineLayoutOpportunityERKNS_17NGConstraintSpaceENS_10LayoutUnitES4_: argument 0"}
!15 = distinct !{!15, !"_ZNK5blink19NGLayoutOpportunity28ComputeLineLayoutOpportunityERKNS_17NGConstraintSpaceENS_10LayoutUnitES4_"}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv: argument 0"}
!18 = distinct !{!18, !"_ZN5blink24NGConstraintSpaceBuilder17ToConstraintSpaceEv"}
!19 = distinct !{!19, !20, !"_ZN5blink30NGMinMaxConstraintSpaceBuilder17ToConstraintSpaceEv: argument 0"}
!20 = distinct !{!20, !"_ZN5blink30NGMinMaxConstraintSpaceBuilder17ToConstraintSpaceEv"}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.unroll.disable"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5blink12NGInlineItem23CreateRunSegmenterRangeEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink12NGInlineItem23CreateRunSegmenterRangeEv"}
!26 = !{!"branch_weights", i32 1, i32 4001}
