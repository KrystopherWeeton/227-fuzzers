; ModuleID = '../../ui/events/platform/x11/x11_event_source.cc'
source_filename = "../../ui/events/platform/x11/x11_event_source.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.x11::Xkb::PerClientFlagsRequest" = type { i16, i32, i32, i32, i32, i32 }
%"class.ui::X11EventSource" = type { %"class.ui::PlatformEventSource", %"class.x11::EventObserver", %"class.std::__1::unique_ptr", %"class.x11::Connection"*, i8, i32, i32, %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.276" }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.1" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type { i32 (...)** }
%"class.base::ObserverList.1" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.2", i64, i32, [4 x i8] }>
%"class.base::LinkedList.2" = type { %"class.base::LinkNode.3" }
%"class.base::LinkNode.3" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::EventObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.ui::X11EventWatcher"* }
%"class.ui::X11EventWatcher" = type { i32 (...)** }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.x11::XScopedEventSelector"* }
%"class.x11::XScopedEventSelector" = type { i32, i32, %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.266 }
%class.scoped_refptr.266 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.267", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.267" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.252" }
%"struct.std::__1::__atomic_base.252" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.268" }
%"struct.std::__1::atomic.268" = type { %"struct.std::__1::__atomic_base.269" }
%"struct.std::__1::__atomic_base.269" = type { %"struct.std::__1::__atomic_base.270" }
%"struct.std::__1::__atomic_base.270" = type { %"struct.std::__1::__cxx_atomic_impl.271" }
%"struct.std::__1::__cxx_atomic_impl.271" = type { %"struct.std::__1::__cxx_atomic_base_impl.272" }
%"struct.std::__1::__cxx_atomic_base_impl.272" = type { i8 }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.ui::X11HotplugEventHandler"* }
%"class.ui::X11HotplugEventHandler" = type { i8 }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.188", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.194", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.240", %"class.base::circular_deque", %"class.base::ObserverList.246", %"class.x11::Event"*, %"class.base::circular_deque.250", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.262" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.182" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.x11::Render"* }
%"class.x11::Render" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"struct.x11::QueryExtensionReply" = type { i16, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.x11::Input"* }
%"class.x11::Input" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.ui::PlatformEventSource"* }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.205", %"class.std::__1::vector.212" }
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.207" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.214" }
%"class.std::__1::vector.214" = type { %"class.std::__1::__vector_base.215" }
%"class.std::__1::__vector_base.215" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.216" }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.233" }
%"class.std::__1::vector.233" = type { %"class.std::__1::__vector_base.234" }
%"class.std::__1::__vector_base.234" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.235" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.246" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.247", i64, i32, [4 x i8] }>
%"class.base::LinkedList.247" = type { %"class.base::LinkNode.248" }
%"class.base::LinkNode.248" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type { i16, i32, void (i8*)*, i8*, i32* }
%"class.base::circular_deque.250" = type { %"class.base::internal::VectorBuffer.251", i64, i64 }
%"class.base::internal::VectorBuffer.251" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.253, %"class.std::__1::unique_ptr.255" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.253 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.254", [4 x i8] }>
%"class.base::RefCountedThreadSafe.254" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.261 }
%union.anon.261 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.262" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.560" = type { %"class.base::internal::CallbackBase" }
%"struct.x11::Xkb::SelectEventsRequest" = type { i16, i32, i32, i32, i32, i32, %"class.absl::optional.562", %"class.absl::optional.562", %"class.absl::optional.567", %"class.absl::optional.567", %"class.absl::optional.572", %"class.absl::optional.572", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.577", %"class.absl::optional.577", %"class.absl::optional.582", %"class.absl::optional.582", %"class.absl::optional.587", %"class.absl::optional.587", %"class.absl::optional.587", %"class.absl::optional.587", %"class.absl::optional.592", %"class.absl::optional.592", %"class.absl::optional.597", %"class.absl::optional.597" }
%"class.absl::optional.562" = type { %"class.absl::optional_internal::optional_data.563" }
%"class.absl::optional_internal::optional_data.563" = type { %"class.absl::optional_internal::optional_data_base.564" }
%"class.absl::optional_internal::optional_data_base.564" = type { %"class.absl::optional_internal::optional_data_dtor_base.565" }
%"class.absl::optional_internal::optional_data_dtor_base.565" = type { i8, %union.anon.566 }
%union.anon.566 = type { i32 }
%"class.absl::optional.567" = type { %"class.absl::optional_internal::optional_data.568" }
%"class.absl::optional_internal::optional_data.568" = type { %"class.absl::optional_internal::optional_data_base.569" }
%"class.absl::optional_internal::optional_data_base.569" = type { %"class.absl::optional_internal::optional_data_dtor_base.570" }
%"class.absl::optional_internal::optional_data_dtor_base.570" = type { i8, %union.anon.571 }
%union.anon.571 = type { i32 }
%"class.absl::optional.572" = type { %"class.absl::optional_internal::optional_data.573" }
%"class.absl::optional_internal::optional_data.573" = type { %"class.absl::optional_internal::optional_data_base.574" }
%"class.absl::optional_internal::optional_data_base.574" = type { %"class.absl::optional_internal::optional_data_dtor_base.575" }
%"class.absl::optional_internal::optional_data_dtor_base.575" = type { i8, %union.anon.576 }
%union.anon.576 = type { i32 }
%"class.absl::optional.577" = type { %"class.absl::optional_internal::optional_data.578" }
%"class.absl::optional_internal::optional_data.578" = type { %"class.absl::optional_internal::optional_data_base.579" }
%"class.absl::optional_internal::optional_data_base.579" = type { %"class.absl::optional_internal::optional_data_dtor_base.580" }
%"class.absl::optional_internal::optional_data_dtor_base.580" = type { i8, %union.anon.581 }
%union.anon.581 = type { i32 }
%"class.absl::optional.582" = type { %"class.absl::optional_internal::optional_data.583" }
%"class.absl::optional_internal::optional_data.583" = type { %"class.absl::optional_internal::optional_data_base.584" }
%"class.absl::optional_internal::optional_data_base.584" = type { %"class.absl::optional_internal::optional_data_dtor_base.585" }
%"class.absl::optional_internal::optional_data_dtor_base.585" = type { i8, %union.anon.586 }
%union.anon.586 = type { i32 }
%"class.absl::optional.587" = type { %"class.absl::optional_internal::optional_data.588" }
%"class.absl::optional_internal::optional_data.588" = type { %"class.absl::optional_internal::optional_data_base.589" }
%"class.absl::optional_internal::optional_data_base.589" = type { %"class.absl::optional_internal::optional_data_dtor_base.590" }
%"class.absl::optional_internal::optional_data_dtor_base.590" = type { i8, %union.anon.591 }
%union.anon.591 = type { i8 }
%"class.absl::optional.592" = type { %"class.absl::optional_internal::optional_data.593" }
%"class.absl::optional_internal::optional_data.593" = type { %"class.absl::optional_internal::optional_data_base.594" }
%"class.absl::optional_internal::optional_data_base.594" = type { %"class.absl::optional_internal::optional_data_dtor_base.595" }
%"class.absl::optional_internal::optional_data_dtor_base.595" = type { i8, %union.anon.596 }
%union.anon.596 = type { i32 }
%"class.absl::optional.597" = type { %"class.absl::optional_internal::optional_data.598" }
%"class.absl::optional_internal::optional_data.598" = type { %"class.absl::optional_internal::optional_data_base.599" }
%"class.absl::optional_internal::optional_data_base.599" = type { %"class.absl::optional_internal::optional_data_dtor_base.600" }
%"class.absl::optional_internal::optional_data_dtor_base.600" = type { i8, %union.anon.601 }
%union.anon.601 = type { i32 }
%"class.ui::X11EventWatcherGlib" = type <{ %"class.ui::X11EventWatcher", %"class.ui::X11EventSource"*, %struct._GSource*, %"class.std::__1::unique_ptr.285", i8, [7 x i8] }>
%struct._GSource = type opaque
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %struct._GPollFD* }
%struct._GPollFD = type opaque
%"class.x11::Connection::FutureImpl" = type { %"class.x11::Connection"*, i32, i8, i8* }
%"struct.x11::CreateWindowRequest" = type { i8, i32, i32, i16, i16, i16, i16, i16, i32, i32, %"class.absl::optional.300", %"class.absl::optional", %"class.absl::optional.300", %"class.absl::optional", %"class.absl::optional.305", %"class.absl::optional.305", %"class.absl::optional.310", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.315", %"class.absl::optional.315", %"class.absl::optional.320", %"class.absl::optional.320", %"class.absl::optional.325", %"class.absl::optional.330" }
%"class.absl::optional.300" = type { %"class.absl::optional_internal::optional_data.301" }
%"class.absl::optional_internal::optional_data.301" = type { %"class.absl::optional_internal::optional_data_base.302" }
%"class.absl::optional_internal::optional_data_base.302" = type { %"class.absl::optional_internal::optional_data_dtor_base.303" }
%"class.absl::optional_internal::optional_data_dtor_base.303" = type { i8, %union.anon.304 }
%union.anon.304 = type { i32 }
%"class.absl::optional.305" = type { %"class.absl::optional_internal::optional_data.306" }
%"class.absl::optional_internal::optional_data.306" = type { %"class.absl::optional_internal::optional_data_base.307" }
%"class.absl::optional_internal::optional_data_base.307" = type { %"class.absl::optional_internal::optional_data_dtor_base.308" }
%"class.absl::optional_internal::optional_data_dtor_base.308" = type { i8, %union.anon.309 }
%union.anon.309 = type { i32 }
%"class.absl::optional.310" = type { %"class.absl::optional_internal::optional_data.311" }
%"class.absl::optional_internal::optional_data.311" = type { %"class.absl::optional_internal::optional_data_base.312" }
%"class.absl::optional_internal::optional_data_base.312" = type { %"class.absl::optional_internal::optional_data_dtor_base.313" }
%"class.absl::optional_internal::optional_data_dtor_base.313" = type { i8, %union.anon.314 }
%union.anon.314 = type { i32 }
%"class.absl::optional.315" = type { %"class.absl::optional_internal::optional_data.316" }
%"class.absl::optional_internal::optional_data.316" = type { %"class.absl::optional_internal::optional_data_base.317" }
%"class.absl::optional_internal::optional_data_base.317" = type { %"class.absl::optional_internal::optional_data_dtor_base.318" }
%"class.absl::optional_internal::optional_data_dtor_base.318" = type { i8, %union.anon.319 }
%union.anon.319 = type { i32 }
%"class.absl::optional.320" = type { %"class.absl::optional_internal::optional_data.321" }
%"class.absl::optional_internal::optional_data.321" = type { %"class.absl::optional_internal::optional_data_base.322" }
%"class.absl::optional_internal::optional_data_base.322" = type { %"class.absl::optional_internal::optional_data_dtor_base.323" }
%"class.absl::optional_internal::optional_data_dtor_base.323" = type { i8, %union.anon.324 }
%union.anon.324 = type { i32 }
%"class.absl::optional.325" = type { %"class.absl::optional_internal::optional_data.326" }
%"class.absl::optional_internal::optional_data.326" = type { %"class.absl::optional_internal::optional_data_base.327" }
%"class.absl::optional_internal::optional_data_base.327" = type { %"class.absl::optional_internal::optional_data_dtor_base.328" }
%"class.absl::optional_internal::optional_data_dtor_base.328" = type { i8, %union.anon.329 }
%union.anon.329 = type { i32 }
%"class.absl::optional.330" = type { %"class.absl::optional_internal::optional_data.331" }
%"class.absl::optional_internal::optional_data.331" = type { %"class.absl::optional_internal::optional_data_base.332" }
%"class.absl::optional_internal::optional_data_base.332" = type { %"class.absl::optional_internal::optional_data_dtor_base.333" }
%"class.absl::optional_internal::optional_data_dtor_base.333" = type { i8, %union.anon.334 }
%union.anon.334 = type { i32 }
%"class.std::__1::vector.335" = type { %"class.std::__1::__vector_base.336" }
%"class.std::__1::__vector_base.336" = type { i8*, i8*, %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { i8* }
%"struct.x11::ChangePropertyRequest" = type { i32, i32, i32, i32, i8, i32, %class.scoped_refptr.253 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::RefCountedBytes" = type { %"class.base::RefCountedMemory.base", %"class.std::__1::vector.335" }
%"class.base::RefCountedMemory.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.254" }>
%"struct.x11::PropertyNotifyEvent" = type { i8, i16, i32, i32, i32, i32 }
%"struct.x11::KeyEvent" = type <{ i32, i8, i8, i16, i32, i32, i32, i32, i16, i16, i16, i16, i32, i8, [3 x i8] }>
%"struct.x11::ButtonEvent" = type <{ i32, i8, i8, i16, i32, i32, i32, i32, i16, i16, i16, i16, i32, i8, [3 x i8] }>
%"struct.x11::MotionNotifyEvent" = type <{ i8, [3 x i8], i32, i16, [2 x i8], i32, i32, i32, i32, i16, i16, i16, i16, i32, i8, [3 x i8] }>
%"struct.x11::CrossingEvent" = type <{ i32, i8, [3 x i8], i32, i16, [2 x i8], i32, i32, i32, i32, i16, i16, i16, i16, i32, i32, i8, [3 x i8] }>
%"struct.x11::SelectionClearEvent" = type { i8, i16, i32, i32, i32 }
%"struct.x11::SelectionRequestEvent" = type { i8, i16, i32, i32, i32, i32, i32, i32 }
%"struct.x11::SelectionNotifyEvent" = type { i8, i16, i32, i32, i32, i32, i32 }
%"struct.x11::Input::DeviceChangedEvent" = type { i8, i16, i16, i32, i16, i32, %"class.std::__1::vector.419" }
%"class.std::__1::vector.419" = type { %"class.std::__1::__vector_base.420" }
%"class.std::__1::__vector_base.420" = type { %"struct.x11::Input::DeviceClass"*, %"struct.x11::Input::DeviceClass"*, %"class.std::__1::__compressed_pair.453" }
%"struct.x11::Input::DeviceClass" = type { i16, i16, %"class.absl::optional.421", %"class.absl::optional.426", %"class.absl::optional.438", %"class.absl::optional.443", %"class.absl::optional.448" }
%"class.absl::optional.421" = type { %"class.absl::optional_internal::optional_data.422" }
%"class.absl::optional_internal::optional_data.422" = type { %"class.absl::optional_internal::optional_data_base.423" }
%"class.absl::optional_internal::optional_data_base.423" = type { %"class.absl::optional_internal::optional_data_dtor_base.424" }
%"class.absl::optional_internal::optional_data_dtor_base.424" = type { i8, %union.anon.425 }
%union.anon.425 = type { %"struct.x11::Input::DeviceClass::Key" }
%"struct.x11::Input::DeviceClass::Key" = type { %"class.std::__1::vector.348" }
%"class.std::__1::vector.348" = type { %"class.std::__1::__vector_base.349" }
%"class.std::__1::__vector_base.349" = type { i32*, i32*, %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { i32* }
%"class.absl::optional.426" = type { %"class.absl::optional_internal::optional_data.427" }
%"class.absl::optional_internal::optional_data.427" = type { %"class.absl::optional_internal::optional_data_base.428" }
%"class.absl::optional_internal::optional_data_base.428" = type { %"class.absl::optional_internal::optional_data_dtor_base.429" }
%"class.absl::optional_internal::optional_data_dtor_base.429" = type { i8, %union.anon.430 }
%union.anon.430 = type { %"struct.x11::Input::DeviceClass::Button" }
%"struct.x11::Input::DeviceClass::Button" = type { %"class.std::__1::vector.348", %"class.std::__1::vector.431" }
%"class.std::__1::vector.431" = type { %"class.std::__1::__vector_base.432" }
%"class.std::__1::__vector_base.432" = type { i32*, i32*, %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { i32* }
%"class.absl::optional.438" = type { %"class.absl::optional_internal::optional_data.439" }
%"class.absl::optional_internal::optional_data.439" = type { %"class.absl::optional_internal::optional_data_base.440" }
%"class.absl::optional_internal::optional_data_base.440" = type { %"class.absl::optional_internal::optional_data_dtor_base.441" }
%"class.absl::optional_internal::optional_data_dtor_base.441" = type { i8, %union.anon.442 }
%union.anon.442 = type { %"struct.x11::Input::DeviceClass::Valuator" }
%"struct.x11::Input::DeviceClass::Valuator" = type { i16, i32, %"struct.x11::Input::Fp3232", %"struct.x11::Input::Fp3232", %"struct.x11::Input::Fp3232", i32, i32 }
%"struct.x11::Input::Fp3232" = type { i32, i32 }
%"class.absl::optional.443" = type { %"class.absl::optional_internal::optional_data.444" }
%"class.absl::optional_internal::optional_data.444" = type { %"class.absl::optional_internal::optional_data_base.445" }
%"class.absl::optional_internal::optional_data_base.445" = type { %"class.absl::optional_internal::optional_data_dtor_base.446" }
%"class.absl::optional_internal::optional_data_dtor_base.446" = type { i8, %union.anon.447 }
%union.anon.447 = type { %"struct.x11::Input::DeviceClass::Scroll" }
%"struct.x11::Input::DeviceClass::Scroll" = type { i16, i32, i32, %"struct.x11::Input::Fp3232" }
%"class.absl::optional.448" = type { %"class.absl::optional_internal::optional_data.449" }
%"class.absl::optional_internal::optional_data.449" = type { %"class.absl::optional_internal::optional_data_base.450" }
%"class.absl::optional_internal::optional_data_base.450" = type { %"class.absl::optional_internal::optional_data_dtor_base.451" }
%"class.absl::optional_internal::optional_data_dtor_base.451" = type { i8, [3 x i8], %union.anon.452 }
%union.anon.452 = type { %"struct.x11::Input::DeviceClass::Touch" }
%"struct.x11::Input::DeviceClass::Touch" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.x11::Input::DeviceClass"* }
%"struct.x11::Input::DeviceEvent" = type { i32, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i32, %"struct.x11::Input::ModifierInfo", %"struct.x11::Input::GroupInfo", %"class.std::__1::vector.348", %"class.std::__1::vector.348", %"class.std::__1::vector.355" }
%"struct.x11::Input::ModifierInfo" = type { i32, i32, i32, i32 }
%"struct.x11::Input::GroupInfo" = type { i8, i8, i8, i8 }
%"class.std::__1::vector.355" = type { %"class.std::__1::__vector_base.356" }
%"class.std::__1::__vector_base.356" = type { %"struct.x11::Input::Fp3232"*, %"struct.x11::Input::Fp3232"*, %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"struct.x11::Input::Fp3232"* }
%"struct.x11::Input::CrossingEvent" = type { i32, i8, i16, i16, i32, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"struct.x11::Input::ModifierInfo", %"struct.x11::Input::GroupInfo", %"class.std::__1::vector.348" }
%"class.absl::optional_internal::optional_data_dtor_base.346" = type { i8, %union.anon.347 }
%union.anon.347 = type { %"class.gfx::Point" }
%"class.gfx::Point" = type { i32, i32 }
%"class.ui::TouchFactory" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset", %"class.std::__1::map", %"class.std::__1::set", %"class.absl::optional.379", [4 x i8], %"class.ui::SequentialIDGenerator", %"class.std::__1::map.403", i8, [7 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [2 x i64] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.362", %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree.370" }
%"class.std::__1::__tree.370" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.371", %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.absl::optional.379" = type { %"class.absl::optional_internal::optional_data.380" }
%"class.absl::optional_internal::optional_data.380" = type { %"class.absl::optional_internal::optional_data_base.381" }
%"class.absl::optional_internal::optional_data_base.381" = type { %"class.absl::optional_internal::optional_data_dtor_base.382" }
%"class.absl::optional_internal::optional_data_dtor_base.382" = type { i8, %union.anon.383 }
%union.anon.383 = type { i16 }
%"class.ui::SequentialIDGenerator" = type { %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.384", %"class.std::__1::__compressed_pair.392", %"class.std::__1::__compressed_pair.397", %"class.std::__1::__compressed_pair.399", [4 x i8] }>
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386", %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { float }
%"class.std::__1::map.403" = type { %"class.std::__1::__tree.404" }
%"class.std::__1::__tree.404" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.405", %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.x11::Input::HierarchyEvent" = type { i8, i16, i16, i32, i32, %"class.std::__1::vector.412" }
%"class.std::__1::vector.412" = type { %"class.std::__1::__vector_base.413" }
%"class.std::__1::__vector_base.413" = type { %"struct.x11::Input::HierarchyInfo"*, %"struct.x11::Input::HierarchyInfo"*, %"class.std::__1::__compressed_pair.414" }
%"struct.x11::Input::HierarchyInfo" = type { i16, i16, i32, i8, i32 }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.x11::Input::HierarchyInfo"* }
%"class.ui::DeviceDataManagerX11" = type { %"class.ui::DeviceDataManager", i32, %"class.std::__1::bitset", %"class.std::__1::bitset", %"class.std::__1::vector.486", %"class.std::__1::bitset", %"class.std::__1::unique_ptr.493", [128 x i32], [128 x %"class.std::__1::vector.500"], i8, [128 x %"struct.ui::DeviceDataManagerX11::ScrollInfo"], [128 x %"class.std::__1::vector.507"], [128 x [10 x %"class.std::__1::vector.514"]], %"class.std::__1::map.521", %"class.std::__1::vector.335" }
%"class.ui::DeviceDataManager" = type { %"class.ui::DeviceHotplugEventObserver", %"class.std::__1::vector.458", %"class.std::__1::vector.465", %"class.std::__1::vector.465", %"class.std::__1::vector.465", %"class.std::__1::vector.465", i8, [7 x i8], %"class.base::ObserverList.472", i8, i8, %"class.base::flat_map.476" }
%"class.ui::DeviceHotplugEventObserver" = type { i32 (...)** }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"struct.ui::TouchscreenDevice"*, %"struct.ui::TouchscreenDevice"*, %"class.std::__1::__compressed_pair.460" }
%"struct.ui::TouchscreenDevice" = type { %"struct.ui::InputDevice.base", %"class.gfx::Size", i32, i8, i8, i64 }
%"struct.ui::InputDevice.base" = type <{ i32 (...)**, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8], %"class.base::FilePath", i16, i16, i16 }>
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"struct.ui::TouchscreenDevice"* }
%"class.std::__1::vector.465" = type { %"class.std::__1::__vector_base.466" }
%"class.std::__1::__vector_base.466" = type { %"struct.ui::InputDevice"*, %"struct.ui::InputDevice"*, %"class.std::__1::__compressed_pair.467" }
%"struct.ui::InputDevice" = type <{ i32 (...)**, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8], %"class.base::FilePath", i16, i16, i16, [2 x i8] }>
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"struct.ui::InputDevice"* }
%"class.base::ObserverList.472" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.473", i64, i32, [4 x i8] }>
%"class.base::LinkedList.473" = type { %"class.base::LinkNode.474" }
%"class.base::LinkNode.474" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::flat_map.476" = type { %"class.base::internal::flat_tree.477" }
%"class.base::internal::flat_tree.477" = type { %"class.std::__1::vector.478" }
%"class.std::__1::vector.478" = type { %"class.std::__1::__vector_base.479" }
%"class.std::__1::__vector_base.479" = type { %"struct.std::__1::pair.480"*, %"struct.std::__1::pair.480"*, %"class.std::__1::__compressed_pair.481" }
%"struct.std::__1::pair.480" = type opaque
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"struct.std::__1::pair.480"* }
%"class.std::__1::vector.486" = type { %"class.std::__1::__vector_base.487" }
%"class.std::__1::__vector_base.487" = type { i16*, i16*, %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { i16* }
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.std::__1::set.496"* }
%"class.std::__1::set.496" = type opaque
%"class.std::__1::vector.500" = type { %"class.std::__1::__vector_base.501" }
%"class.std::__1::__vector_base.501" = type { %"struct.ui::DeviceDataManagerX11::ValuatorInfo"*, %"struct.ui::DeviceDataManagerX11::ValuatorInfo"*, %"class.std::__1::__compressed_pair.502" }
%"struct.ui::DeviceDataManagerX11::ValuatorInfo" = type { i32, double, double }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"struct.ui::DeviceDataManagerX11::ValuatorInfo"* }
%"struct.ui::DeviceDataManagerX11::ScrollInfo" = type { %"struct.ui::DeviceDataManagerX11::ScrollInfo::AxisInfo", %"struct.ui::DeviceDataManagerX11::ScrollInfo::AxisInfo" }
%"struct.ui::DeviceDataManagerX11::ScrollInfo::AxisInfo" = type { i32, double, double, i8 }
%"class.std::__1::vector.507" = type { %"class.std::__1::__vector_base.508" }
%"class.std::__1::__vector_base.508" = type { i32*, i32*, %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { i32* }
%"class.std::__1::vector.514" = type { %"class.std::__1::__vector_base.515" }
%"class.std::__1::__vector_base.515" = type { double*, double*, %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { double* }
%"class.std::__1::map.521" = type { %"class.std::__1::__tree.522" }
%"class.std::__1::__tree.522" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.523", %"class.std::__1::__compressed_pair.527" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.ui::DeviceListCacheX11" = type { i8, %"class.std::__1::vector.616", %"class.std::__1::vector.623" }
%"class.std::__1::vector.616" = type { %"class.std::__1::__vector_base.617" }
%"class.std::__1::__vector_base.617" = type { %"struct.x11::Input::DeviceInfo"*, %"struct.x11::Input::DeviceInfo"*, %"class.std::__1::__compressed_pair.618" }
%"struct.x11::Input::DeviceInfo" = type { i32, i8, i8, i32 }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"struct.x11::Input::DeviceInfo"* }
%"class.std::__1::vector.623" = type { %"class.std::__1::__vector_base.624" }
%"class.std::__1::__vector_base.624" = type { %"struct.x11::Input::XIDeviceInfo"*, %"struct.x11::Input::XIDeviceInfo"*, %"class.std::__1::__compressed_pair.625" }
%"struct.x11::Input::XIDeviceInfo" = type { i16, i32, i16, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.419" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"struct.x11::Input::XIDeviceInfo"* }
%"struct.x11::MappingNotifyEvent" = type <{ i8, i8, i16, i32, i8, i8, [2 x i8] }>
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.543" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map.533", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map.533" = type { %"class.base::internal::flat_tree.534" }
%"class.base::internal::flat_tree.534" = type { %"class.std::__1::vector.535" }
%"class.std::__1::vector.535" = type { %"class.std::__1::__vector_base.536" }
%"class.std::__1::__vector_base.536" = type { %"struct.std::__1::pair.537"*, %"struct.std::__1::pair.537"*, %"class.std::__1::__compressed_pair.538" }
%"struct.std::__1::pair.537" = type opaque
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"struct.std::__1::pair.537"* }
%"class.ui::EventTarget" = type opaque
%"class.std::__1::unique_ptr.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.base::flat_map.546"* }
%"class.base::flat_map.546" = type opaque
%class.anon.602 = type { i8 }
%"struct.x11::Response" = type { %"class.std::__1::unique_ptr.604", %"class.std::__1::unique_ptr.255" }
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"struct.x11::Xkb::PerClientFlagsReply"* }
%"struct.x11::Xkb::PerClientFlagsReply" = type { i8, i16, i32, i32, i32, i32 }
%"struct.x11::ReadBuffer" = type { %class.scoped_refptr.253, i64, i32* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN4base8internal7InvokerINS0_9BindStateIZN3x116FutureINS3_3Xkb19PerClientFlagsReplyEE10OnResponseENS_12OnceCallbackIFvNS3_8ResponseIS6_EEEEEEUlSC_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS3_5ErrorENSG_14default_deleteISI_EEEEE_JSC_EEEFvSF_SL_EE7RunOnceEPNS0_13BindStateBaseEOSF_OSL_ = comdat any

$_ZN4base8internal12InvokeHelperILb0EvE8MakeItSoIZN3x116FutureINS4_3Xkb19PerClientFlagsReplyEE10OnResponseENS_12OnceCallbackIFvNS4_8ResponseIS7_EEEEEEUlSD_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS4_5ErrorENSH_14default_deleteISJ_EEEEE_JSD_SG_SM_EEEvOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIZN3x116FutureINS2_3Xkb19PerClientFlagsReplyEE10OnResponseENS_12OnceCallbackIFvNS2_8ResponseIS5_EEEEEEUlSB_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS2_5ErrorENSF_14default_deleteISH_EEEEE_JSB_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNK4base8internal12VectorBufferIN3x115EventEEixEm = comdat any

@_ZTVN2ui14X11EventSourceE = hidden unnamed_addr constant { [7 x i8*], [5 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::X11EventSource"*)* @_ZN2ui14X11EventSourceD2Ev to i8*), i8* bitcast (void (%"class.ui::X11EventSource"*)* @_ZN2ui14X11EventSourceD0Ev to i8*), i8* bitcast (i32 (%"class.ui::PlatformEventSource"*, %"class.ui::Event"*)* @_ZN2ui19PlatformEventSource13DispatchEventEPNS_5EventE to i8*), i8* bitcast (void (%"class.ui::X11EventSource"*)* @_ZN2ui14X11EventSource23OnDispatcherListChangedEv to i8*), i8* bitcast (void (%"class.ui::X11EventSource"*, %"class.x11::Event"*)* @_ZN2ui14X11EventSource7OnEventERKN3x115EventE to i8*)], [5 x i8*] [i8* inttoptr (i64 -136 to i8*), i8* null, i8* bitcast (void (%"class.ui::X11EventSource"*, %"class.x11::Event"*)* @_ZThn136_N2ui14X11EventSource7OnEventERKN3x115EventE to i8*), i8* bitcast (void (%"class.ui::X11EventSource"*)* @_ZThn136_N2ui14X11EventSourceD1Ev to i8*), i8* bitcast (void (%"class.ui::X11EventSource"*)* @_ZThn136_N2ui14X11EventSourceD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [19 x i8] c"CHROMIUM_TIMESTAMP\00", align 1
@.ref.tmp.1 = private constant %"struct.x11::Xkb::PerClientFlagsRequest" { i16 256, i32 1, i32 1, i32 0, i32 0, i32 0 }, align 4
@.str.3 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1

@_ZN2ui14X11EventSourceC1EPN3x1110ConnectionE = hidden unnamed_addr alias void (%"class.ui::X11EventSource"*, %"class.x11::Connection"*), void (%"class.ui::X11EventSource"*, %"class.x11::Connection"*)* @_ZN2ui14X11EventSourceC2EPN3x1110ConnectionE
@_ZN2ui14X11EventSourceD1Ev = hidden unnamed_addr alias void (%"class.ui::X11EventSource"*), void (%"class.ui::X11EventSource"*)* @_ZN2ui14X11EventSourceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14X11EventSourceC2EPN3x1110ConnectionE(%"class.ui::X11EventSource"*, %"class.x11::Connection"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback.560", align 8
  %5 = alloca %"struct.x11::Xkb::SelectEventsRequest", align 4
  %6 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 0
  tail call void @_ZN2ui19PlatformEventSourceC2Ev(%"class.ui::PlatformEventSource"* %6) #7
  %7 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.x11::EventObserver", %"class.x11::EventObserver"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN2ui14X11EventSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN2ui14X11EventSourceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 2
  %11 = tail call i8* @_Znwm(i64 40) #8
  %12 = bitcast i8* %11 to %"class.ui::X11EventWatcherGlib"*
  tail call void @_ZN2ui19X11EventWatcherGlibC1EPNS_14X11EventSourceE(%"class.ui::X11EventWatcherGlib"* nonnull %12, %"class.ui::X11EventSource"* %0) #7
  %13 = ptrtoint i8* %11 to i64
  %14 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 3
  store %"class.x11::Connection"* %1, %"class.x11::Connection"** %15, align 8
  %16 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 4
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 7
  %18 = bitcast %"class.std::__1::unique_ptr.263"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false)
  tail call void @_ZN3x1110Connection16AddEventObserverEPNS_13EventObserverE(%"class.x11::Connection"* %1, %"class.x11::EventObserver"* %7) #7
  tail call void @_ZN2ui20DeviceDataManagerX1114CreateInstanceEv() #7
  %19 = load %"class.x11::Connection"*, %"class.x11::Connection"** %15, align 8
  %20 = bitcast %"class.base::OnceCallback.560"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %19, i64 0, i32 1, i32 24, i32 0, i32 0, i32 0
  %22 = load %"class.x11::Xkb"*, %"class.x11::Xkb"** %21, align 8
  %23 = tail call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb14PerClientFlagsERKNS0_21PerClientFlagsRequestE(%"class.x11::Xkb"* %22, %"struct.x11::Xkb::PerClientFlagsRequest"* nonnull dereferenceable(24) @.ref.tmp.1) #7
  %24 = tail call i8* @_Znwm(i64 40) #8, !noalias !2
  %25 = bitcast i8* %24 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %25, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"struct.x11::Response"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN2ui12_GLOBAL__N_113InitializeXkbEPN3x1110ConnectionEE3$_1JEEEFvNS5_8ResponseINS5_3Xkb19PerClientFlagsReplyEEEEE7RunOnceEPNS0_13BindStateBaseEOSD_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN2ui12_GLOBAL__N_113InitializeXkbEPN3x1110ConnectionEE3$_1JEE7DestroyEPKNS0_13BindStateBaseE") #7, !noalias !2
  %26 = bitcast %"class.base::OnceCallback.560"* %4 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !2
  %27 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  %28 = icmp eq %"class.x11::Connection::FutureImpl"* %23, null
  br i1 %28, label %40, label %29

29:                                               ; preds = %2
  %30 = ptrtoint i8* %24 to i64
  %31 = tail call i8* @_Znwm(i64 48) #8, !noalias !7
  %32 = bitcast i8* %31 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %32, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.scoped_refptr.253*, %"class.std::__1::unique_ptr.255"*)* @_ZN4base8internal7InvokerINS0_9BindStateIZN3x116FutureINS3_3Xkb19PerClientFlagsReplyEE10OnResponseENS_12OnceCallbackIFvNS3_8ResponseIS6_EEEEEEUlSC_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS3_5ErrorENSG_14default_deleteISI_EEEEE_JSC_EEEFvSF_SL_EE7RunOnceEPNS0_13BindStateBaseEOSF_OSL_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIZN3x116FutureINS2_3Xkb19PerClientFlagsReplyEE10OnResponseENS_12OnceCallbackIFvNS2_8ResponseIS5_EEEEEEUlSB_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS2_5ErrorENSF_14default_deleteISH_EEEEE_JSB_EE7DestroyEPKNS0_13BindStateBaseE) #7, !noalias !7
  %33 = getelementptr inbounds i8, i8* %31, i64 40
  %34 = getelementptr inbounds %"class.base::OnceCallback.560", %"class.base::OnceCallback.560"* %4, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast i8* %33 to i64*
  store i64 %30, i64* %35, align 8, !noalias !7
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8, !noalias !7
  %36 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %31, i8** %36, align 8, !alias.scope !7
  call void @_ZN3x1110Connection10FutureImpl10OnResponseEN4base12OnceCallbackIFv13scoped_refptrINS2_16RefCountedMemoryEENSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEEEEE(%"class.x11::Connection::FutureImpl"* nonnull %23, %"class.base::OnceCallback"* nonnull %3) #7
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  %38 = getelementptr inbounds %"class.base::OnceCallback.560", %"class.base::OnceCallback.560"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #7
  %39 = bitcast %"class.x11::Connection::FutureImpl"* %23 to i8*
  call void @_ZdlPv(i8* %39) #8
  br label %42

40:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  %41 = getelementptr inbounds %"class.base::OnceCallback.560", %"class.base::OnceCallback.560"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #7
  br label %42

42:                                               ; preds = %40, %29
  %43 = bitcast %"struct.x11::Xkb::SelectEventsRequest"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %43) #7
  %44 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 0
  store i16 256, i16* %44, align 4
  %45 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 1
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 0, i32 1, i32 255>, <4 x i32>* %46, align 4
  %47 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 5
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %48, align 4
  %49 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %49, align 4
  %50 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %50, align 4
  %51 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %51, align 4
  %52 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %52, align 4
  %53 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %53, align 4
  %54 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %54, align 4
  %55 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %55, align 4
  %56 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %56, align 4
  %57 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %57, align 4
  %58 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %58, align 4
  %59 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %59, align 4
  %60 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %60, align 4
  %61 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %61, align 4
  %62 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %62, align 4
  %63 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %63, align 2
  %64 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %64, align 4
  %65 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %65, align 2
  %66 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %66, align 4
  %67 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %67, align 4
  %68 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %68, align 4
  %69 = getelementptr inbounds %"struct.x11::Xkb::SelectEventsRequest", %"struct.x11::Xkb::SelectEventsRequest"* %5, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %69, align 4
  %70 = call %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb12SelectEventsERKNS0_19SelectEventsRequestE(%"class.x11::Xkb"* %22, %"struct.x11::Xkb::SelectEventsRequest"* nonnull dereferenceable(176) %5) #7
  %71 = icmp eq %"class.x11::Connection::FutureImpl"* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %42
  %73 = bitcast %"class.x11::Connection::FutureImpl"* %70 to i8*
  call void @_ZdlPv(i8* %73) #8
  br label %74

74:                                               ; preds = %42, %72
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %43) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.ui::X11EventWatcher"*, %"class.ui::X11EventWatcher"** %75, align 8
  %77 = bitcast %"class.ui::X11EventWatcher"* %76 to void (%"class.ui::X11EventWatcher"*)***
  %78 = load void (%"class.ui::X11EventWatcher"*)**, void (%"class.ui::X11EventWatcher"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.ui::X11EventWatcher"*)*, void (%"class.ui::X11EventWatcher"*)** %78, i64 2
  %80 = load void (%"class.ui::X11EventWatcher"*)*, void (%"class.ui::X11EventWatcher"*)** %79, align 8
  call void %80(%"class.ui::X11EventWatcher"* %76) #7
  ret void
}

declare void @_ZN2ui19PlatformEventSourceC2Ev(%"class.ui::PlatformEventSource"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3x1110Connection16AddEventObserverEPNS_13EventObserverE(%"class.x11::Connection"*, %"class.x11::EventObserver"*) local_unnamed_addr #1

declare void @_ZN2ui20DeviceDataManagerX1114CreateInstanceEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14X11EventSourceD2Ev(%"class.ui::X11EventSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN2ui14X11EventSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.x11::EventObserver", %"class.x11::EventObserver"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [5 x i8*] }, { [7 x i8*], [5 x i8*] }* @_ZTVN2ui14X11EventSourceE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 4
  %6 = load i8, i8* %5, align 8, !range !12
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 3
  %10 = bitcast %"class.x11::Connection"** %9 to %"class.x11::XProto"**
  %11 = load %"class.x11::XProto"*, %"class.x11::XProto"** %10, align 8
  %12 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 5
  %13 = tail call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto13DestroyWindowERKNS_6WindowE(%"class.x11::XProto"* %11, i32* dereferenceable(4) %12) #7
  %14 = icmp eq %"class.x11::Connection::FutureImpl"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"class.x11::Connection::FutureImpl"* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  br label %17

17:                                               ; preds = %15, %8, %1
  %18 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 3
  %19 = load %"class.x11::Connection"*, %"class.x11::Connection"** %18, align 8
  tail call void @_ZN3x1110Connection19RemoveEventObserverEPNS_13EventObserverE(%"class.x11::Connection"* %19, %"class.x11::EventObserver"* %3) #7
  %20 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %21 = load %"class.ui::X11HotplugEventHandler"*, %"class.ui::X11HotplugEventHandler"** %20, align 8
  store %"class.ui::X11HotplugEventHandler"* null, %"class.ui::X11HotplugEventHandler"** %20, align 8
  %22 = icmp eq %"class.ui::X11HotplugEventHandler"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  tail call void @_ZN2ui22X11HotplugEventHandlerD1Ev(%"class.ui::X11HotplugEventHandler"* nonnull %21) #7
  %24 = getelementptr inbounds %"class.ui::X11HotplugEventHandler", %"class.ui::X11HotplugEventHandler"* %21, i64 0, i32 0
  tail call void @_ZdlPv(i8* %24) #8
  br label %25

25:                                               ; preds = %17, %23
  %26 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %27 = load %"class.x11::XScopedEventSelector"*, %"class.x11::XScopedEventSelector"** %26, align 8
  store %"class.x11::XScopedEventSelector"* null, %"class.x11::XScopedEventSelector"** %26, align 8
  %28 = icmp eq %"class.x11::XScopedEventSelector"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  tail call void @_ZN3x1120XScopedEventSelectorD1Ev(%"class.x11::XScopedEventSelector"* nonnull %27) #7
  %30 = bitcast %"class.x11::XScopedEventSelector"* %27 to i8*
  tail call void @_ZdlPv(i8* %30) #8
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %33 = load %"class.ui::X11EventWatcher"*, %"class.ui::X11EventWatcher"** %32, align 8
  store %"class.ui::X11EventWatcher"* null, %"class.ui::X11EventWatcher"** %32, align 8
  %34 = icmp eq %"class.ui::X11EventWatcher"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.ui::X11EventWatcher"* %33 to void (%"class.ui::X11EventWatcher"*)***
  %37 = load void (%"class.ui::X11EventWatcher"*)**, void (%"class.ui::X11EventWatcher"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.ui::X11EventWatcher"*)*, void (%"class.ui::X11EventWatcher"*)** %37, i64 1
  %39 = load void (%"class.ui::X11EventWatcher"*)*, void (%"class.ui::X11EventWatcher"*)** %38, align 8
  tail call void %39(%"class.ui::X11EventWatcher"* nonnull %33) #7
  br label %40

40:                                               ; preds = %31, %35
  %41 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 0
  tail call void @_ZN2ui19PlatformEventSourceD2Ev(%"class.ui::PlatformEventSource"* %41) #7
  ret void
}

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto13DestroyWindowERKNS_6WindowE(%"class.x11::XProto"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare void @_ZN3x1110Connection19RemoveEventObserverEPNS_13EventObserverE(%"class.x11::Connection"*, %"class.x11::EventObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui19PlatformEventSourceD2Ev(%"class.ui::PlatformEventSource"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn136_N2ui14X11EventSourceD1Ev(%"class.ui::X11EventSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 -1, i32 0, i32 1, i32 3
  %3 = bitcast i32* %2 to %"class.ui::X11EventSource"*
  tail call void @_ZN2ui14X11EventSourceD2Ev(%"class.ui::X11EventSource"* %3) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14X11EventSourceD0Ev(%"class.ui::X11EventSource"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2ui14X11EventSourceD2Ev(%"class.ui::X11EventSource"* %0) #7
  %2 = bitcast %"class.ui::X11EventSource"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn136_N2ui14X11EventSourceD0Ev(%"class.ui::X11EventSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 -1, i32 0, i32 1, i32 3
  %3 = bitcast i32* %2 to %"class.ui::X11EventSource"*
  tail call void @_ZN2ui14X11EventSourceD2Ev(%"class.ui::X11EventSource"* %3) #7
  %4 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui14X11EventSource11HasInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = tail call %"class.ui::PlatformEventSource"* @_ZN2ui19PlatformEventSource11GetInstanceEv() #7
  %2 = icmp ne %"class.ui::PlatformEventSource"* %1, null
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::X11EventSource"* @_ZN2ui14X11EventSource11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = tail call %"class.ui::PlatformEventSource"* @_ZN2ui19PlatformEventSource11GetInstanceEv() #7
  %2 = bitcast %"class.ui::PlatformEventSource"* %1 to %"class.ui::X11EventSource"*
  ret %"class.ui::X11EventSource"* %2
}

declare %"class.ui::PlatformEventSource"* @_ZN2ui19PlatformEventSource11GetInstanceEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui14X11EventSource20GetCurrentServerTimeEv(%"class.ui::X11EventSource"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.x11::CreateWindowRequest", align 4
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::vector.335", align 8
  %5 = alloca %"struct.x11::ChangePropertyRequest", align 8
  %6 = alloca %"class.x11::Event", align 8
  %7 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 4
  %8 = load i8, i8* %7, align 8, !range !12
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %76

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 3
  %12 = load %"class.x11::Connection"*, %"class.x11::Connection"** %11, align 8
  %13 = tail call i32 @_ZN3x1110Connection14GenerateIdImplEv(%"class.x11::Connection"* %12) #7
  %14 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 5
  store i32 %13, i32* %14, align 4
  %15 = bitcast %"class.x11::Connection"** %11 to %"class.x11::XProto"**
  %16 = load %"class.x11::XProto"*, %"class.x11::XProto"** %15, align 8
  %17 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %17) #7
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 1
  store i32 %13, i32* %18, align 4
  %19 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 2
  %20 = getelementptr inbounds %"class.x11::XProto", %"class.x11::XProto"* %16, i64 53
  %21 = bitcast %"class.x11::XProto"* %20 to %"struct.x11::Screen"**
  %22 = load %"struct.x11::Screen"*, %"struct.x11::Screen"** %21, align 8
  %23 = getelementptr inbounds %"struct.x11::Screen", %"struct.x11::Screen"* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  store i32 %24, i32* %19, align 4
  %25 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 3
  store i16 0, i16* %25, align 4
  %26 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 4
  store i16 0, i16* %26, align 2
  %27 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 5
  store i16 1, i16* %27, align 4
  %28 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 6
  store i16 1, i16* %28, align 2
  %29 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 7
  store i16 0, i16* %29, align 4
  %30 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 8
  %31 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %31, align 4
  %32 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %32, align 4
  %33 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %33, align 4
  %34 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %34, align 4
  %35 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %36, align 4
  %37 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 4
  %39 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast i32* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %40, i8 0, i64 9, i1 false)
  store i8 1, i8* %39, align 4
  %41 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 1, i32* %41, align 4
  %42 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %42, align 4
  %43 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 21, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %43, align 4
  %44 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 22, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %44, align 4
  %45 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %45, align 4
  %46 = getelementptr inbounds %"struct.x11::CreateWindowRequest", %"struct.x11::CreateWindowRequest"* %2, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %46, align 4
  %47 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto12CreateWindowERKNS_19CreateWindowRequestE(%"class.x11::XProto"* %16, %"struct.x11::CreateWindowRequest"* nonnull dereferenceable(152) %2) #7
  %48 = icmp eq %"class.x11::Connection::FutureImpl"* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %10
  %50 = bitcast %"class.x11::Connection::FutureImpl"* %47 to i8*
  call void @_ZdlPv(i8* %50) #8
  br label %51

51:                                               ; preds = %10, %49
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %17) #7
  %52 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #7
  %53 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  store i8 18, i8* %54, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i64 18, i1 false) #7
  %55 = getelementptr inbounds i8, i8* %52, i64 18
  store i8 0, i8* %55, align 2
  %56 = call i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #7
  %57 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 6
  store i32 %56, i32* %57, align 8
  %58 = load i8, i8* %54, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #8
  br label %63

63:                                               ; preds = %51, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #7
  %64 = call i8* @_Znwm(i64 24) #8
  %65 = bitcast i8* %64 to %"class.x11::XScopedEventSelector"*
  %66 = load i32, i32* %14, align 4
  call void @_ZN3x1120XScopedEventSelectorC1ENS_6WindowENS_9EventMaskE(%"class.x11::XScopedEventSelector"* nonnull %65, i32 %66, i32 4194304) #7
  %67 = ptrtoint i8* %64 to i64
  %68 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 7
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.263"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.x11::XScopedEventSelector"*, %"class.x11::XScopedEventSelector"** %69, align 8
  %71 = bitcast %"class.std::__1::unique_ptr.263"* %68 to i64*
  store i64 %67, i64* %71, align 8
  %72 = icmp eq %"class.x11::XScopedEventSelector"* %70, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %63
  call void @_ZN3x1120XScopedEventSelectorD1Ev(%"class.x11::XScopedEventSelector"* nonnull %70) #7
  %74 = bitcast %"class.x11::XScopedEventSelector"* %70 to i8*
  call void @_ZdlPv(i8* %74) #8
  br label %75

75:                                               ; preds = %73, %63
  store i8 1, i8* %7, align 8
  br label %76

76:                                               ; preds = %1, %75
  %77 = bitcast %"class.std::__1::vector.335"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #7
  %78 = getelementptr inbounds %"class.std::__1::vector.335", %"class.std::__1::vector.335"* %4, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.std::__1::vector.335", %"class.std::__1::vector.335"* %4, i64 0, i32 0, i32 1
  %80 = getelementptr inbounds %"class.std::__1::vector.335", %"class.std::__1::vector.335"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %81 = call i8* @_Znwm(i64 1) #8
  store i8* %81, i8** %78, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 1
  store i8* %82, i8** %80, align 8
  %83 = bitcast i8** %79 to i64*
  store i8 0, i8* %81, align 1
  %84 = ptrtoint i8* %82 to i64
  store i64 %84, i64* %83, align 8
  %85 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 3
  %86 = bitcast %"class.x11::Connection"** %85 to %"class.x11::XProto"**
  %87 = load %"class.x11::XProto"*, %"class.x11::XProto"** %86, align 8
  %88 = bitcast %"struct.x11::ChangePropertyRequest"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %88) #7
  %89 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %5, i64 0, i32 0
  store i32 0, i32* %89, align 8
  %90 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %5, i64 0, i32 1
  %91 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 5
  %92 = load i32, i32* %91, align 4
  store i32 %92, i32* %90, align 4
  %93 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %5, i64 0, i32 2
  %94 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 6
  %95 = load i32, i32* %94, align 8
  store i32 %95, i32* %93, align 8
  %96 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %5, i64 0, i32 3
  store i32 31, i32* %96, align 4
  %97 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %5, i64 0, i32 4
  store i8 8, i8* %97, align 8
  %98 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %5, i64 0, i32 5
  store i32 1, i32* %98, align 4
  %99 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %5, i64 0, i32 6
  %100 = call %"class.base::RefCountedBytes"* @_ZN4base15RefCountedBytes10TakeVectorEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::vector.335"* nonnull %4) #7
  %101 = ptrtoint %"class.base::RefCountedBytes"* %100 to i64
  %102 = bitcast %class.scoped_refptr.253* %99 to i64*
  store i64 %101, i64* %102, align 8
  %103 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto14ChangePropertyERKNS_21ChangePropertyRequestE(%"class.x11::XProto"* %87, %"struct.x11::ChangePropertyRequest"* nonnull dereferenceable(32) %5) #7
  %104 = icmp eq %"class.x11::Connection::FutureImpl"* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %76
  %106 = bitcast %"class.x11::Connection::FutureImpl"* %103 to i8*
  call void @_ZdlPv(i8* %106) #8
  br label %107

107:                                              ; preds = %76, %105
  %108 = getelementptr inbounds %"struct.x11::ChangePropertyRequest", %"struct.x11::ChangePropertyRequest"* %5, i64 0, i32 6, i32 0
  %109 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %108, align 8
  %110 = icmp eq %"class.base::RefCountedMemory"* %109, null
  br i1 %110, label %123, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %109, i64 0, i32 1
  %113 = getelementptr inbounds %"class.base::RefCountedThreadSafe.254", %"class.base::RefCountedThreadSafe.254"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw sub i32* %113, i32 1 acq_rel
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %116, label %123

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.base::RefCountedThreadSafe.254", %"class.base::RefCountedThreadSafe.254"* %112, i64 -2
  %118 = bitcast %"class.base::RefCountedThreadSafe.254"* %117 to %"class.base::RefCountedMemory"*
  %119 = bitcast %"class.base::RefCountedThreadSafe.254"* %117 to void (%"class.base::RefCountedMemory"*)***
  %120 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %120, i64 3
  %122 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %121, align 8
  call void %122(%"class.base::RefCountedMemory"* nonnull %118) #7
  br label %123

123:                                              ; preds = %116, %111, %107
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %88) #7
  %124 = load %"class.x11::Connection"*, %"class.x11::Connection"** %85, align 8
  call void @_ZN3x1110Connection4SyncEv(%"class.x11::Connection"* %124) #7
  %125 = load %"class.x11::Connection"*, %"class.x11::Connection"** %85, align 8
  call void @_ZN3x1110Connection13ReadResponsesEv(%"class.x11::Connection"* %125) #7
  %126 = load %"class.x11::Connection"*, %"class.x11::Connection"** %85, align 8
  %127 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %126, i64 0, i32 16
  %128 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %126, i64 0, i32 16, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %126, i64 0, i32 16, i32 2
  %131 = load i64, i64* %130, align 8
  %132 = icmp eq i64 %129, %131
  br i1 %132, label %161, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %127, i64 0, i32 0
  %135 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %126, i64 0, i32 16, i32 0, i32 1
  br label %136

136:                                              ; preds = %155, %133
  %137 = phi i64 [ %129, %133 ], [ %159, %155 ]
  %138 = call dereferenceable(32) %"class.x11::Event"* @_ZNK4base8internal12VectorBufferIN3x115EventEEixEm(%"class.base::internal::VectorBuffer"* %134, i64 %137) #7
  %139 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %138, i64 0, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 73
  br i1 %141, label %142, label %155

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %138, i64 0, i32 3
  %144 = bitcast i8** %143 to %"struct.x11::PropertyNotifyEvent"**
  %145 = load %"struct.x11::PropertyNotifyEvent"*, %"struct.x11::PropertyNotifyEvent"** %144, align 8
  %146 = icmp eq %"struct.x11::PropertyNotifyEvent"* %145, null
  br i1 %146, label %155, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"struct.x11::PropertyNotifyEvent", %"struct.x11::PropertyNotifyEvent"* %145, i64 0, i32 2
  %149 = load i32, i32* %148, align 4
  %150 = load i32, i32* %91, align 4
  %151 = icmp eq i32 %149, %150
  br i1 %151, label %152, label %155

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"struct.x11::PropertyNotifyEvent", %"struct.x11::PropertyNotifyEvent"* %145, i64 0, i32 4
  %154 = load i32, i32* %153, align 4
  br label %161

155:                                              ; preds = %147, %142, %136
  %156 = add i64 %137, 1
  %157 = load i64, i64* %135, align 8
  %158 = icmp eq i64 %156, %157
  %159 = select i1 %158, i64 0, i64 %156
  %160 = icmp eq i64 %159, %131
  br i1 %160, label %161, label %136

161:                                              ; preds = %155, %123, %152
  %162 = phi i32 [ 0, %123 ], [ %154, %152 ], [ 0, %155 ]
  %163 = phi i64 [ %129, %123 ], [ %137, %152 ], [ %131, %155 ]
  %164 = load i64, i64* %130, align 8
  %165 = icmp eq i64 %163, %164
  br i1 %165, label %171, label %166

166:                                              ; preds = %161
  %167 = bitcast %"class.x11::Event"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %167) #7
  call void @_ZN3x115EventC1Ev(%"class.x11::Event"* nonnull %6) #7
  %168 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %127, i64 0, i32 0
  %169 = call dereferenceable(32) %"class.x11::Event"* @_ZNK4base8internal12VectorBufferIN3x115EventEEixEm(%"class.base::internal::VectorBuffer"* %168, i64 %163) #7
  %170 = call dereferenceable(32) %"class.x11::Event"* @_ZN3x115EventaSEOS0_(%"class.x11::Event"* %169, %"class.x11::Event"* nonnull dereferenceable(32) %6) #7
  call void @_ZN3x115EventD1Ev(%"class.x11::Event"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %167) #7
  br label %171

171:                                              ; preds = %161, %166
  %172 = load i8*, i8** %78, align 8
  %173 = icmp eq i8* %172, null
  br i1 %173, label %176, label %174

174:                                              ; preds = %171
  %175 = ptrtoint i8* %172 to i64
  store i64 %175, i64* %83, align 8
  call void @_ZdlPv(i8* nonnull %172) #8
  br label %176

176:                                              ; preds = %171, %174
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #7
  ret i32 %162
}

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto12CreateWindowERKNS_19CreateWindowRequestE(%"class.x11::XProto"*, %"struct.x11::CreateWindowRequest"* dereferenceable(152)) local_unnamed_addr #1

declare i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto14ChangePropertyERKNS_21ChangePropertyRequestE(%"class.x11::XProto"*, %"struct.x11::ChangePropertyRequest"* dereferenceable(32)) local_unnamed_addr #1

declare %"class.base::RefCountedBytes"* @_ZN4base15RefCountedBytes10TakeVectorEPNSt3__16vectorIhNS1_9allocatorIhEEEE(%"class.std::__1::vector.335"*) local_unnamed_addr #1

declare void @_ZN3x1110Connection4SyncEv(%"class.x11::Connection"*) local_unnamed_addr #1

declare void @_ZN3x1110Connection13ReadResponsesEv(%"class.x11::Connection"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3x115EventC1Ev(%"class.x11::Event"*) unnamed_addr #1

declare dereferenceable(32) %"class.x11::Event"* @_ZN3x115EventaSEOS0_(%"class.x11::Event"*, %"class.x11::Event"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3x115EventD1Ev(%"class.x11::Event"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui14X11EventSource12GetTimestampEv(%"class.ui::X11EventSource"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 3
  %3 = load %"class.x11::Connection"*, %"class.x11::Connection"** %2, align 8
  %4 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %3, i64 0, i32 18
  %5 = load %"class.x11::Event"*, %"class.x11::Event"** %4, align 8
  %6 = icmp eq %"class.x11::Event"* %5, null
  br i1 %6, label %91, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  switch i32 %9, label %91 [
    i32 52, label %10
    i32 53, label %17
    i32 54, label %24
    i32 55, label %31
    i32 73, label %38
    i32 74, label %45
    i32 75, label %52
    i32 76, label %59
    i32 30, label %66
    i32 31, label %73
    i32 32, label %80
  ]

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %5, i64 0, i32 3
  %12 = bitcast i8** %11 to %"struct.x11::KeyEvent"**
  %13 = load %"struct.x11::KeyEvent"*, %"struct.x11::KeyEvent"** %12, align 8
  %14 = icmp eq %"struct.x11::KeyEvent"* %13, null
  br i1 %14, label %91, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"struct.x11::KeyEvent", %"struct.x11::KeyEvent"* %13, i64 0, i32 4
  br label %87

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %5, i64 0, i32 3
  %19 = bitcast i8** %18 to %"struct.x11::ButtonEvent"**
  %20 = load %"struct.x11::ButtonEvent"*, %"struct.x11::ButtonEvent"** %19, align 8
  %21 = icmp eq %"struct.x11::ButtonEvent"* %20, null
  br i1 %21, label %91, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.x11::ButtonEvent", %"struct.x11::ButtonEvent"* %20, i64 0, i32 4
  br label %87

24:                                               ; preds = %7
  %25 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %5, i64 0, i32 3
  %26 = bitcast i8** %25 to %"struct.x11::MotionNotifyEvent"**
  %27 = load %"struct.x11::MotionNotifyEvent"*, %"struct.x11::MotionNotifyEvent"** %26, align 8
  %28 = icmp eq %"struct.x11::MotionNotifyEvent"* %27, null
  br i1 %28, label %91, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"struct.x11::MotionNotifyEvent", %"struct.x11::MotionNotifyEvent"* %27, i64 0, i32 5
  br label %87

31:                                               ; preds = %7
  %32 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %5, i64 0, i32 3
  %33 = bitcast i8** %32 to %"struct.x11::CrossingEvent"**
  %34 = load %"struct.x11::CrossingEvent"*, %"struct.x11::CrossingEvent"** %33, align 8
  %35 = icmp eq %"struct.x11::CrossingEvent"* %34, null
  br i1 %35, label %91, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.x11::CrossingEvent", %"struct.x11::CrossingEvent"* %34, i64 0, i32 6
  br label %87

38:                                               ; preds = %7
  %39 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %5, i64 0, i32 3
  %40 = bitcast i8** %39 to %"struct.x11::PropertyNotifyEvent"**
  %41 = load %"struct.x11::PropertyNotifyEvent"*, %"struct.x11::PropertyNotifyEvent"** %40, align 8
  %42 = icmp eq %"struct.x11::PropertyNotifyEvent"* %41, null
  br i1 %42, label %91, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"struct.x11::PropertyNotifyEvent", %"struct.x11::PropertyNotifyEvent"* %41, i64 0, i32 4
  br label %87

45:                                               ; preds = %7
  %46 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %5, i64 0, i32 3
  %47 = bitcast i8** %46 to %"struct.x11::SelectionClearEvent"**
  %48 = load %"struct.x11::SelectionClearEvent"*, %"struct.x11::SelectionClearEvent"** %47, align 8
  %49 = icmp eq %"struct.x11::SelectionClearEvent"* %48, null
  br i1 %49, label %91, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"struct.x11::SelectionClearEvent", %"struct.x11::SelectionClearEvent"* %48, i64 0, i32 2
  br label %87

52:                                               ; preds = %7
  %53 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %5, i64 0, i32 3
  %54 = bitcast i8** %53 to %"struct.x11::SelectionRequestEvent"**
  %55 = load %"struct.x11::SelectionRequestEvent"*, %"struct.x11::SelectionRequestEvent"** %54, align 8
  %56 = icmp eq %"struct.x11::SelectionRequestEvent"* %55, null
  br i1 %56, label %91, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"struct.x11::SelectionRequestEvent", %"struct.x11::SelectionRequestEvent"* %55, i64 0, i32 2
  br label %87

59:                                               ; preds = %7
  %60 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %5, i64 0, i32 3
  %61 = bitcast i8** %60 to %"struct.x11::SelectionNotifyEvent"**
  %62 = load %"struct.x11::SelectionNotifyEvent"*, %"struct.x11::SelectionNotifyEvent"** %61, align 8
  %63 = icmp eq %"struct.x11::SelectionNotifyEvent"* %62, null
  br i1 %63, label %91, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"struct.x11::SelectionNotifyEvent", %"struct.x11::SelectionNotifyEvent"* %62, i64 0, i32 2
  br label %87

66:                                               ; preds = %7
  %67 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %5, i64 0, i32 3
  %68 = bitcast i8** %67 to %"struct.x11::Input::DeviceChangedEvent"**
  %69 = load %"struct.x11::Input::DeviceChangedEvent"*, %"struct.x11::Input::DeviceChangedEvent"** %68, align 8
  %70 = icmp eq %"struct.x11::Input::DeviceChangedEvent"* %69, null
  br i1 %70, label %91, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.x11::Input::DeviceChangedEvent", %"struct.x11::Input::DeviceChangedEvent"* %69, i64 0, i32 3
  br label %87

73:                                               ; preds = %7
  %74 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %5, i64 0, i32 3
  %75 = bitcast i8** %74 to %"struct.x11::Input::DeviceEvent"**
  %76 = load %"struct.x11::Input::DeviceEvent"*, %"struct.x11::Input::DeviceEvent"** %75, align 8
  %77 = icmp eq %"struct.x11::Input::DeviceEvent"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"struct.x11::Input::DeviceEvent", %"struct.x11::Input::DeviceEvent"* %76, i64 0, i32 4
  br label %87

80:                                               ; preds = %7
  %81 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %5, i64 0, i32 3
  %82 = bitcast i8** %81 to %"struct.x11::Input::CrossingEvent"**
  %83 = load %"struct.x11::Input::CrossingEvent"*, %"struct.x11::Input::CrossingEvent"** %82, align 8
  %84 = icmp eq %"struct.x11::Input::CrossingEvent"* %83, null
  br i1 %84, label %91, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"struct.x11::Input::CrossingEvent", %"struct.x11::Input::CrossingEvent"* %83, i64 0, i32 4
  br label %87

87:                                               ; preds = %15, %22, %29, %36, %43, %50, %57, %64, %71, %78, %85
  %88 = phi i32* [ %86, %85 ], [ %79, %78 ], [ %72, %71 ], [ %65, %64 ], [ %58, %57 ], [ %51, %50 ], [ %44, %43 ], [ %37, %36 ], [ %30, %29 ], [ %23, %22 ], [ %16, %15 ]
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %7, %17, %10, %24, %31, %38, %45, %52, %59, %66, %73, %80, %1, %87
  %92 = tail call i32 @_ZN2ui14X11EventSource20GetCurrentServerTimeEv(%"class.ui::X11EventSource"* %0)
  br label %93

93:                                               ; preds = %87, %91
  %94 = phi i32 [ %92, %91 ], [ %89, %87 ]
  ret i32 %94
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK2ui14X11EventSource37GetRootCursorLocationFromCurrentEventEv(%"class.ui::X11EventSource"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::optional_internal::optional_data_dtor_base.346", align 8
  %3 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 3
  %4 = load %"class.x11::Connection"*, %"class.x11::Connection"** %3, align 8
  %5 = getelementptr inbounds %"class.x11::Connection", %"class.x11::Connection"* %4, i64 0, i32 18
  %6 = load %"class.x11::Event"*, %"class.x11::Event"** %5, align 8
  %7 = icmp eq %"class.x11::Event"* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.346", %"class.absl::optional_internal::optional_data_dtor_base.346"* %2, i64 0, i32 0
  store i8 0, i8* %9, align 8
  br label %68

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %6, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %21 [
    i32 31, label %13
    i32 32, label %17
  ]

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %6, i64 0, i32 3
  %15 = bitcast i8** %14 to %"struct.x11::Input::DeviceEvent"**
  %16 = load %"struct.x11::Input::DeviceEvent"*, %"struct.x11::Input::DeviceEvent"** %15, align 8
  br label %21

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %6, i64 0, i32 3
  %19 = bitcast i8** %18 to %"struct.x11::Input::CrossingEvent"**
  %20 = load %"struct.x11::Input::CrossingEvent"*, %"struct.x11::Input::CrossingEvent"** %19, align 8
  br label %21

21:                                               ; preds = %10, %13, %17
  %22 = phi %"struct.x11::Input::DeviceEvent"* [ null, %17 ], [ %16, %13 ], [ null, %10 ]
  %23 = phi %"struct.x11::Input::CrossingEvent"* [ %20, %17 ], [ null, %13 ], [ null, %10 ]
  %24 = tail call %"class.ui::TouchFactory"* @_ZN2ui12TouchFactory11GetInstanceEv() #7
  %25 = load i32, i32* %11, align 4
  switch i32 %25, label %41 [
    i32 53, label %26
    i32 54, label %31
    i32 55, label %36
  ]

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %6, i64 0, i32 3
  %28 = bitcast i8** %27 to %"struct.x11::ButtonEvent"**
  %29 = load %"struct.x11::ButtonEvent"*, %"struct.x11::ButtonEvent"** %28, align 8
  %30 = icmp eq %"struct.x11::ButtonEvent"* %29, null
  br i1 %30, label %41, label %59

31:                                               ; preds = %21
  %32 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %6, i64 0, i32 3
  %33 = bitcast i8** %32 to %"struct.x11::MotionNotifyEvent"**
  %34 = load %"struct.x11::MotionNotifyEvent"*, %"struct.x11::MotionNotifyEvent"** %33, align 8
  %35 = icmp eq %"struct.x11::MotionNotifyEvent"* %34, null
  br i1 %35, label %41, label %59

36:                                               ; preds = %21
  %37 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %6, i64 0, i32 3
  %38 = bitcast i8** %37 to %"struct.x11::CrossingEvent"**
  %39 = load %"struct.x11::CrossingEvent"*, %"struct.x11::CrossingEvent"** %38, align 8
  %40 = icmp eq %"struct.x11::CrossingEvent"* %39, null
  br i1 %40, label %41, label %59

41:                                               ; preds = %21, %31, %26, %36
  %42 = icmp eq %"struct.x11::Input::DeviceEvent"* %22, null
  br i1 %42, label %50, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"struct.x11::Input::DeviceEvent", %"struct.x11::Input::DeviceEvent"* %22, i64 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = add i32 %45, -4
  %47 = icmp ult i32 %46, 3
  br i1 %47, label %48, label %50

48:                                               ; preds = %43
  %49 = tail call zeroext i1 @_ZN2ui12TouchFactory24ShouldProcessDeviceEventERKN3x115Input11DeviceEventE(%"class.ui::TouchFactory"* %24, %"struct.x11::Input::DeviceEvent"* nonnull dereferenceable(152) %22) #7
  br i1 %49, label %59, label %66

50:                                               ; preds = %43, %41
  %51 = icmp eq %"struct.x11::Input::CrossingEvent"* %23, null
  br i1 %51, label %66, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"struct.x11::Input::CrossingEvent", %"struct.x11::Input::CrossingEvent"* %23, i64 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = add i32 %54, -7
  %56 = icmp ult i32 %55, 2
  br i1 %56, label %57, label %66

57:                                               ; preds = %52
  %58 = tail call zeroext i1 @_ZN2ui12TouchFactory26ShouldProcessCrossingEventERKN3x115Input13CrossingEventE(%"class.ui::TouchFactory"* %24, %"struct.x11::Input::CrossingEvent"* nonnull dereferenceable(104) %23) #7
  br i1 %58, label %59, label %66

59:                                               ; preds = %48, %26, %31, %36, %57
  %60 = tail call i64 @_ZN2ui29EventSystemLocationFromXEventERKN3x115EventE(%"class.x11::Event"* nonnull dereferenceable(32) %6) #7
  %61 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.346", %"class.absl::optional_internal::optional_data_dtor_base.346"* %2, i64 0, i32 0
  store i8 1, i8* %61, align 8
  %62 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.346", %"class.absl::optional_internal::optional_data_dtor_base.346"* %2, i64 0, i32 1
  %63 = bitcast %union.anon.347* %62 to i64*
  store i64 %60, i64* %63, align 4
  %64 = lshr i64 %60, 32
  %65 = trunc i64 %64 to i32
  br label %68

66:                                               ; preds = %48, %52, %50, %57
  %67 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.346", %"class.absl::optional_internal::optional_data_dtor_base.346"* %2, i64 0, i32 0
  store i8 0, i8* %67, align 8
  br label %68

68:                                               ; preds = %59, %66, %8
  %69 = phi i32 [ %65, %59 ], [ undef, %66 ], [ undef, %8 ]
  %70 = bitcast %"class.absl::optional_internal::optional_data_dtor_base.346"* %2 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = insertvalue { i64, i32 } undef, i64 %71, 0
  %73 = insertvalue { i64, i32 } %72, i32 %69, 1
  ret { i64, i32 } %73
}

declare %"class.ui::TouchFactory"* @_ZN2ui12TouchFactory11GetInstanceEv() local_unnamed_addr #1

declare zeroext i1 @_ZN2ui12TouchFactory24ShouldProcessDeviceEventERKN3x115Input11DeviceEventE(%"class.ui::TouchFactory"*, %"struct.x11::Input::DeviceEvent"* dereferenceable(152)) local_unnamed_addr #1

declare zeroext i1 @_ZN2ui12TouchFactory26ShouldProcessCrossingEventERKN3x115Input13CrossingEventE(%"class.ui::TouchFactory"*, %"struct.x11::Input::CrossingEvent"* dereferenceable(104)) local_unnamed_addr #1

declare i64 @_ZN2ui29EventSystemLocationFromXEventERKN3x115EventE(%"class.x11::Event"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14X11EventSource7OnEventERKN3x115EventE(%"class.ui::X11EventSource"*, %"class.x11::Event"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %31 [
    i32 33, label %5
    i32 30, label %10
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %7 = bitcast i8** %6 to %"struct.x11::Input::HierarchyEvent"**
  %8 = load %"struct.x11::Input::HierarchyEvent"*, %"struct.x11::Input::HierarchyEvent"** %7, align 8
  %9 = icmp eq %"struct.x11::Input::HierarchyEvent"* %8, null
  br i1 %9, label %29, label %22

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %12 = bitcast i8** %11 to %"struct.x11::Input::DeviceChangedEvent"**
  %13 = load %"struct.x11::Input::DeviceChangedEvent"*, %"struct.x11::Input::DeviceChangedEvent"** %12, align 8
  %14 = icmp eq %"struct.x11::Input::DeviceChangedEvent"* %13, null
  br i1 %14, label %29, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"struct.x11::Input::DeviceChangedEvent", %"struct.x11::Input::DeviceChangedEvent"* %13, i64 0, i32 5
  %17 = load i32, i32* %16, align 8
  switch i32 %17, label %29 [
    i32 2, label %22
    i32 1, label %18
  ]

18:                                               ; preds = %15
  %19 = tail call %"class.ui::DeviceDataManagerX11"* @_ZN2ui20DeviceDataManagerX1111GetInstanceEv() #7
  %20 = getelementptr inbounds %"struct.x11::Input::DeviceChangedEvent", %"struct.x11::Input::DeviceChangedEvent"* %13, i64 0, i32 4
  %21 = load i16, i16* %20, align 4
  tail call void @_ZN2ui20DeviceDataManagerX1123InvalidateScrollClassesEN3x115Input8DeviceIdE(%"class.ui::DeviceDataManagerX11"* %19, i16 zeroext %21) #7
  br label %29

22:                                               ; preds = %15, %5
  %23 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #7
  %24 = tail call %"class.ui::DeviceListCacheX11"* @_ZN2ui18DeviceListCacheX1111GetInstanceEv() #7
  tail call void @_ZN2ui18DeviceListCacheX1116UpdateDeviceListEPN3x1110ConnectionE(%"class.ui::DeviceListCacheX11"* %24, %"class.x11::Connection"* %23) #7
  %25 = tail call %"class.ui::TouchFactory"* @_ZN2ui12TouchFactory11GetInstanceEv() #7
  tail call void @_ZN2ui12TouchFactory16UpdateDeviceListEPN3x1110ConnectionE(%"class.ui::TouchFactory"* %25, %"class.x11::Connection"* %23) #7
  %26 = tail call %"class.ui::DeviceDataManagerX11"* @_ZN2ui20DeviceDataManagerX1111GetInstanceEv() #7
  tail call void @_ZN2ui20DeviceDataManagerX1116UpdateDeviceListEPN3x1110ConnectionE(%"class.ui::DeviceDataManagerX11"* %26, %"class.x11::Connection"* %23) #7
  %27 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %28 = load %"class.ui::X11HotplugEventHandler"*, %"class.ui::X11HotplugEventHandler"** %27, align 8
  tail call void @_ZN2ui22X11HotplugEventHandler14OnHotplugEventEv(%"class.ui::X11HotplugEventHandler"* %28) #7
  br label %29

29:                                               ; preds = %22, %18, %10, %15, %5
  %30 = load i32, i32* %3, align 4
  br label %31

31:                                               ; preds = %2, %29
  %32 = phi i32 [ %30, %29 ], [ %4, %2 ]
  %33 = icmp eq i32 %32, 55
  br i1 %33, label %34, label %54

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %36 = bitcast i8** %35 to %"struct.x11::CrossingEvent"**
  %37 = load %"struct.x11::CrossingEvent"*, %"struct.x11::CrossingEvent"** %36, align 8
  %38 = icmp eq %"struct.x11::CrossingEvent"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"struct.x11::CrossingEvent", %"struct.x11::CrossingEvent"* %37, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 7
  br i1 %42, label %43, label %68

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"struct.x11::CrossingEvent", %"struct.x11::CrossingEvent"* %37, i64 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 2
  br i1 %46, label %68, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"struct.x11::CrossingEvent", %"struct.x11::CrossingEvent"* %37, i64 0, i32 15
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 2
  br i1 %50, label %68, label %51

51:                                               ; preds = %47
  %52 = tail call %"class.ui::DeviceDataManagerX11"* @_ZN2ui20DeviceDataManagerX1111GetInstanceEv() #7
  tail call void @_ZN2ui20DeviceDataManagerX1123InvalidateScrollClassesEN3x115Input8DeviceIdE(%"class.ui::DeviceDataManagerX11"* %52, i16 zeroext -1) #7
  %53 = load i32, i32* %3, align 4
  br label %54

54:                                               ; preds = %51, %31
  %55 = phi i32 [ %32, %31 ], [ %53, %51 ]
  %56 = icmp eq i32 %55, 79
  br i1 %56, label %57, label %68

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %1, i64 0, i32 3
  %59 = bitcast i8** %58 to %"struct.x11::MappingNotifyEvent"**
  %60 = load %"struct.x11::MappingNotifyEvent"*, %"struct.x11::MappingNotifyEvent"** %59, align 8
  %61 = icmp eq %"struct.x11::MappingNotifyEvent"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"struct.x11::MappingNotifyEvent", %"struct.x11::MappingNotifyEvent"* %60, i64 0, i32 3
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 2
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = tail call %"class.ui::DeviceDataManagerX11"* @_ZN2ui20DeviceDataManagerX1111GetInstanceEv() #7
  tail call void @_ZN2ui20DeviceDataManagerX1115UpdateButtonMapEv(%"class.ui::DeviceDataManagerX11"* %67) #7
  br label %68

68:                                               ; preds = %47, %43, %34, %39, %54, %57, %66, %62
  %69 = tail call %"class.ui::Event"* @_ZN2ui20BuildEventFromXEventERKN3x115EventE(%"class.x11::Event"* dereferenceable(32) %1) #7
  %70 = tail call zeroext i1 @_ZN2ui19PlatformEventSource32ShouldIgnoreNativePlatformEventsEv() #7
  %71 = icmp ne %"class.ui::Event"* %69, null
  br i1 %70, label %72, label %76

72:                                               ; preds = %68
  br i1 %71, label %73, label %95

73:                                               ; preds = %72
  %74 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %69, i64 0, i32 1
  %75 = load i32, i32* %74, align 8
  switch i32 %75, label %80 [
    i32 1, label %90
    i32 2, label %90
    i32 3, label %90
    i32 4, label %90
    i32 5, label %90
    i32 6, label %90
    i32 9, label %90
    i32 10, label %90
  ]

76:                                               ; preds = %68
  br i1 %71, label %77, label %95

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.ui::Event", %"class.ui::Event"* %69, i64 0, i32 1
  %79 = load i32, i32* %78, align 8
  br label %80

80:                                               ; preds = %77, %73
  %81 = phi i32 [ %79, %77 ], [ %75, %73 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %90, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 0
  %85 = bitcast %"class.ui::X11EventSource"* %0 to i32 (%"class.ui::PlatformEventSource"*, %"class.ui::Event"*)***
  %86 = load i32 (%"class.ui::PlatformEventSource"*, %"class.ui::Event"*)**, i32 (%"class.ui::PlatformEventSource"*, %"class.ui::Event"*)*** %85, align 8
  %87 = getelementptr inbounds i32 (%"class.ui::PlatformEventSource"*, %"class.ui::Event"*)*, i32 (%"class.ui::PlatformEventSource"*, %"class.ui::Event"*)** %86, i64 2
  %88 = load i32 (%"class.ui::PlatformEventSource"*, %"class.ui::Event"*)*, i32 (%"class.ui::PlatformEventSource"*, %"class.ui::Event"*)** %87, align 8
  %89 = tail call i32 %88(%"class.ui::PlatformEventSource"* %84, %"class.ui::Event"* nonnull %69) #7
  br label %90

90:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %83, %80
  %91 = bitcast %"class.ui::Event"* %69 to void (%"class.ui::Event"*)***
  %92 = load void (%"class.ui::Event"*)**, void (%"class.ui::Event"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.ui::Event"*)*, void (%"class.ui::Event"*)** %92, i64 1
  %94 = load void (%"class.ui::Event"*)*, void (%"class.ui::Event"*)** %93, align 8
  tail call void %94(%"class.ui::Event"* nonnull %69) #7
  br label %95

95:                                               ; preds = %72, %76, %90
  ret void
}

declare %"class.ui::DeviceDataManagerX11"* @_ZN2ui20DeviceDataManagerX1111GetInstanceEv() local_unnamed_addr #1

declare void @_ZN2ui20DeviceDataManagerX1123InvalidateScrollClassesEN3x115Input8DeviceIdE(%"class.ui::DeviceDataManagerX11"*, i16 zeroext) local_unnamed_addr #1

declare void @_ZN2ui22X11HotplugEventHandler14OnHotplugEventEv(%"class.ui::X11HotplugEventHandler"*) local_unnamed_addr #1

declare void @_ZN2ui20DeviceDataManagerX1115UpdateButtonMapEv(%"class.ui::DeviceDataManagerX11"*) local_unnamed_addr #1

declare %"class.ui::Event"* @_ZN2ui20BuildEventFromXEventERKN3x115EventE(%"class.x11::Event"* dereferenceable(32)) local_unnamed_addr #1

declare zeroext i1 @_ZN2ui19PlatformEventSource32ShouldIgnoreNativePlatformEventsEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn136_N2ui14X11EventSource7OnEventERKN3x115EventE(%"class.ui::X11EventSource"*, %"class.x11::Event"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 -1, i32 0, i32 1, i32 3
  %4 = bitcast i32* %3 to %"class.ui::X11EventSource"*
  tail call void @_ZN2ui14X11EventSource7OnEventERKN3x115EventE(%"class.ui::X11EventSource"* %4, %"class.x11::Event"* dereferenceable(32) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui14X11EventSource23OnDispatcherListChangedEv(%"class.ui::X11EventSource"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.ui::X11EventWatcher"*, %"class.ui::X11EventWatcher"** %2, align 8
  %4 = bitcast %"class.ui::X11EventWatcher"* %3 to void (%"class.ui::X11EventWatcher"*)***
  %5 = load void (%"class.ui::X11EventWatcher"*)**, void (%"class.ui::X11EventWatcher"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.ui::X11EventWatcher"*)*, void (%"class.ui::X11EventWatcher"*)** %5, i64 2
  %7 = load void (%"class.ui::X11EventWatcher"*)*, void (%"class.ui::X11EventWatcher"*)** %6, align 8
  tail call void %7(%"class.ui::X11EventWatcher"* %3) #7
  %8 = getelementptr inbounds %"class.ui::X11EventSource", %"class.ui::X11EventSource"* %0, i64 0, i32 8
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.276"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.ui::X11HotplugEventHandler"*, %"class.ui::X11HotplugEventHandler"** %9, align 8
  %11 = icmp eq %"class.ui::X11HotplugEventHandler"* %10, null
  br i1 %11, label %12, label %25

12:                                               ; preds = %1
  %13 = tail call i8* @_Znwm(i64 1) #8
  %14 = bitcast i8* %13 to %"class.ui::X11HotplugEventHandler"*
  tail call void @_ZN2ui22X11HotplugEventHandlerC1Ev(%"class.ui::X11HotplugEventHandler"* nonnull %14) #7
  %15 = ptrtoint i8* %13 to i64
  %16 = load %"class.ui::X11HotplugEventHandler"*, %"class.ui::X11HotplugEventHandler"** %9, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.276"* %8 to i64*
  store i64 %15, i64* %17, align 8
  %18 = icmp eq %"class.ui::X11HotplugEventHandler"* %16, null
  %19 = bitcast i8* %13 to %"class.ui::X11HotplugEventHandler"*
  br i1 %18, label %23, label %20

20:                                               ; preds = %12
  tail call void @_ZN2ui22X11HotplugEventHandlerD1Ev(%"class.ui::X11HotplugEventHandler"* nonnull %16) #7
  %21 = getelementptr inbounds %"class.ui::X11HotplugEventHandler", %"class.ui::X11HotplugEventHandler"* %16, i64 0, i32 0
  tail call void @_ZdlPv(i8* %21) #8
  %22 = load %"class.ui::X11HotplugEventHandler"*, %"class.ui::X11HotplugEventHandler"** %9, align 8
  br label %23

23:                                               ; preds = %20, %12
  %24 = phi %"class.ui::X11HotplugEventHandler"* [ %22, %20 ], [ %19, %12 ]
  tail call void @_ZN2ui22X11HotplugEventHandler14OnHotplugEventEv(%"class.ui::X11HotplugEventHandler"* %24) #7
  br label %25

25:                                               ; preds = %1, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::PlatformEventSource"* @_ZN2ui19PlatformEventSource13CreateDefaultEv() local_unnamed_addr #0 align 2 {
  %1 = tail call zeroext i1 @_ZN8features20IsUsingOzonePlatformEv() #7
  br i1 %1, label %7, label %2

2:                                                ; preds = %0
  %3 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #7
  %4 = tail call i8* @_Znwm(i64 192) #8
  %5 = bitcast i8* %4 to %"class.ui::X11EventSource"*
  tail call void @_ZN2ui14X11EventSourceC2EPN3x1110ConnectionE(%"class.ui::X11EventSource"* nonnull %5, %"class.x11::Connection"* %3) #7
  %6 = bitcast i8* %4 to %"class.ui::PlatformEventSource"*
  br label %7

7:                                                ; preds = %0, %2
  %8 = phi %"class.ui::PlatformEventSource"* [ %6, %2 ], [ null, %0 ]
  ret %"class.ui::PlatformEventSource"* %8
}

declare zeroext i1 @_ZN8features20IsUsingOzonePlatformEv() local_unnamed_addr #1

declare %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() local_unnamed_addr #1

declare i32 @_ZN2ui19PlatformEventSource13DispatchEventEPNS_5EventE(%"class.ui::PlatformEventSource"*, %"class.ui::Event"*) unnamed_addr #1

declare %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb14PerClientFlagsERKNS0_21PerClientFlagsRequestE(%"class.x11::Xkb"*, %"struct.x11::Xkb::PerClientFlagsRequest"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare %"class.x11::Connection::FutureImpl"* @_ZN3x113Xkb12SelectEventsERKNS0_19SelectEventsRequestE(%"class.x11::Xkb"*, %"struct.x11::Xkb::SelectEventsRequest"* dereferenceable(176)) local_unnamed_addr #1

declare void @_ZN3x1110Connection10FutureImpl10OnResponseEN4base12OnceCallbackIFv13scoped_refptrINS2_16RefCountedMemoryEENSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEEEEE(%"class.x11::Connection::FutureImpl"*, %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIZN3x116FutureINS3_3Xkb19PerClientFlagsReplyEE10OnResponseENS_12OnceCallbackIFvNS3_8ResponseIS6_EEEEEEUlSC_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS3_5ErrorENSG_14default_deleteISI_EEEEE_JSC_EEEFvSF_SL_EE7RunOnceEPNS0_13BindStateBaseEOSF_OSL_(%"class.base::internal::BindStateBase"*, %class.scoped_refptr.253* dereferenceable(8), %"class.std::__1::unique_ptr.255"* dereferenceable(8)) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %class.anon.602*
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::OnceCallback.560"*
  tail call void @_ZN4base8internal12InvokeHelperILb0EvE8MakeItSoIZN3x116FutureINS4_3Xkb19PerClientFlagsReplyEE10OnResponseENS_12OnceCallbackIFvNS4_8ResponseIS7_EEEEEEUlSD_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS4_5ErrorENSH_14default_deleteISJ_EEEEE_JSD_SG_SM_EEEvOT_DpOT0_(%class.anon.602* dereferenceable(1) %5, %"class.base::OnceCallback.560"* dereferenceable(8) %7, %class.scoped_refptr.253* dereferenceable(8) %1, %"class.std::__1::unique_ptr.255"* dereferenceable(8) %2) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12InvokeHelperILb0EvE8MakeItSoIZN3x116FutureINS4_3Xkb19PerClientFlagsReplyEE10OnResponseENS_12OnceCallbackIFvNS4_8ResponseIS7_EEEEEEUlSD_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS4_5ErrorENSH_14default_deleteISJ_EEEEE_JSD_SG_SM_EEEvOT_DpOT0_(%class.anon.602* dereferenceable(1), %"class.base::OnceCallback.560"* dereferenceable(8), %class.scoped_refptr.253* dereferenceable(8), %"class.std::__1::unique_ptr.255"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %5 = alloca %"struct.x11::Response", align 8
  %6 = alloca %"class.base::OnceCallback.560", align 8
  %7 = alloca %"struct.x11::ReadBuffer", align 8
  %8 = alloca %"class.base::OnceCallback.560", align 8
  %9 = bitcast %"class.base::OnceCallback.560"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = getelementptr inbounds %"class.base::OnceCallback.560", %"class.base::OnceCallback.560"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.560"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.560"* %8 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = getelementptr inbounds %class.scoped_refptr.253, %class.scoped_refptr.253* %2, i64 0, i32 0
  %15 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %14, align 8
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.255"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::unique_ptr.255"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %16, align 8
  %19 = icmp eq %"class.base::RefCountedMemory"* %15, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %4
  %21 = bitcast %"struct.x11::ReadBuffer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #7
  %22 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false) #7
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %7, %"class.base::RefCountedMemory"* nonnull %15, i1 zeroext false) #7
  %24 = call %"struct.x11::Xkb::PerClientFlagsReply"* @_ZN3x116detail9ReadReplyINS_3Xkb19PerClientFlagsReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %7) #7
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #7
  %25 = load i64, i64* %13, align 8
  br label %26

26:                                               ; preds = %20, %4
  %27 = phi i64 [ %25, %20 ], [ %12, %4 ]
  %28 = phi %"struct.x11::Xkb::PerClientFlagsReply"* [ %24, %20 ], [ null, %4 ]
  %29 = bitcast %"struct.x11::Response"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #7
  %30 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.x11::Xkb::PerClientFlagsReply"* %28, %"struct.x11::Xkb::PerClientFlagsReply"** %30, align 8
  %31 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %32 = bitcast %"class.x11::Error"** %31 to i64*
  store i64 %18, i64* %32, align 8
  %33 = bitcast %"class.base::OnceCallback.560"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.base::OnceCallback.560", %"class.base::OnceCallback.560"* %8, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.base::OnceCallback.560"* %6 to i64*
  store i64 %27, i64* %35, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8
  %36 = getelementptr inbounds %"class.base::OnceCallback.560", %"class.base::OnceCallback.560"* %6, i64 0, i32 0
  %37 = inttoptr i64 %27 to %"class.base::internal::BindStateBase"*
  %38 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %37, i64 0, i32 1
  %39 = bitcast void ()** %38 to void (%"class.base::internal::BindStateBase"*, %"struct.x11::Response"*)**
  %40 = load void (%"class.base::internal::BindStateBase"*, %"struct.x11::Response"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.x11::Response"*)** %39, align 8
  call void %40(%"class.base::internal::BindStateBase"* %37, %"struct.x11::Response"* nonnull dereferenceable(16) %5) #7
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %41 = load %"class.x11::Error"*, %"class.x11::Error"** %31, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %31, align 8
  %42 = icmp eq %"class.x11::Error"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %26
  %44 = bitcast %"class.x11::Error"* %41 to void (%"class.x11::Error"*)***
  %45 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %45, i64 1
  %47 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %46, align 8
  call void %47(%"class.x11::Error"* nonnull %41) #7
  br label %48

48:                                               ; preds = %43, %26
  %49 = load %"struct.x11::Xkb::PerClientFlagsReply"*, %"struct.x11::Xkb::PerClientFlagsReply"** %30, align 8
  store %"struct.x11::Xkb::PerClientFlagsReply"* null, %"struct.x11::Xkb::PerClientFlagsReply"** %30, align 8
  %50 = icmp eq %"struct.x11::Xkb::PerClientFlagsReply"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"struct.x11::Xkb::PerClientFlagsReply", %"struct.x11::Xkb::PerClientFlagsReply"* %49, i64 0, i32 0
  call void @_ZdlPv(i8* %52) #8
  br label %53

53:                                               ; preds = %51, %48
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #7
  br i1 %19, label %66, label %54

54:                                               ; preds = %53
  %55 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %15, i64 0, i32 1
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.254", %"class.base::RefCountedThreadSafe.254"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %66

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe.254", %"class.base::RefCountedThreadSafe.254"* %55, i64 -2
  %61 = bitcast %"class.base::RefCountedThreadSafe.254"* %60 to %"class.base::RefCountedMemory"*
  %62 = bitcast %"class.base::RefCountedThreadSafe.254"* %60 to void (%"class.base::RefCountedMemory"*)***
  %63 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %63, i64 3
  %65 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %64, align 8
  call void %65(%"class.base::RefCountedMemory"* nonnull %61) #7
  br label %66

66:                                               ; preds = %53, %54, %59
  %67 = getelementptr inbounds %"class.base::OnceCallback.560", %"class.base::OnceCallback.560"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %67) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  ret void
}

declare void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"*, %"class.base::RefCountedMemory"*, i1 zeroext) unnamed_addr #1

declare %"struct.x11::Xkb::PerClientFlagsReply"* @_ZN3x116detail9ReadReplyINS_3Xkb19PerClientFlagsReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIZN3x116FutureINS2_3Xkb19PerClientFlagsReplyEE10OnResponseENS_12OnceCallbackIFvNS2_8ResponseIS5_EEEEEEUlSB_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS2_5ErrorENSF_14default_deleteISH_EEEEE_JSB_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #7
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #8
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN2ui12_GLOBAL__N_113InitializeXkbEPN3x1110ConnectionEE3$_1JEEEFvNS5_8ResponseINS5_3Xkb19PerClientFlagsReplyEEEEE7RunOnceEPNS0_13BindStateBaseEOSD_"(%"class.base::internal::BindStateBase"* nocapture readnone, %"struct.x11::Response"* nocapture dereferenceable(16)) #0 align 2 {
  %3 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.x11::Xkb::PerClientFlagsReply"*, %"struct.x11::Xkb::PerClientFlagsReply"** %3, align 8
  store %"struct.x11::Xkb::PerClientFlagsReply"* null, %"struct.x11::Xkb::PerClientFlagsReply"** %3, align 8
  %5 = getelementptr inbounds %"struct.x11::Response", %"struct.x11::Response"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Error"*, %"class.x11::Error"** %5, align 8
  store %"class.x11::Error"* null, %"class.x11::Error"** %5, align 8
  %7 = icmp eq %"class.x11::Error"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.x11::Error"* %6 to void (%"class.x11::Error"*)***
  %10 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %10, i64 1
  %12 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %11, align 8
  tail call void %12(%"class.x11::Error"* nonnull %6) #7
  br label %13

13:                                               ; preds = %8, %2
  %14 = icmp eq %"struct.x11::Xkb::PerClientFlagsReply"* %4, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"struct.x11::Xkb::PerClientFlagsReply", %"struct.x11::Xkb::PerClientFlagsReply"* %4, i64 0, i32 0
  tail call void @_ZdlPv(i8* %16) #8
  br label %17

17:                                               ; preds = %13, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN2ui12_GLOBAL__N_113InitializeXkbEPN3x1110ConnectionEE3$_1JEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #8
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare %"class.ui::DeviceListCacheX11"* @_ZN2ui18DeviceListCacheX1111GetInstanceEv() local_unnamed_addr #1

declare void @_ZN2ui18DeviceListCacheX1116UpdateDeviceListEPN3x1110ConnectionE(%"class.ui::DeviceListCacheX11"*, %"class.x11::Connection"*) local_unnamed_addr #1

declare void @_ZN2ui12TouchFactory16UpdateDeviceListEPN3x1110ConnectionE(%"class.ui::TouchFactory"*, %"class.x11::Connection"*) local_unnamed_addr #1

declare void @_ZN2ui20DeviceDataManagerX1116UpdateDeviceListEPN3x1110ConnectionE(%"class.ui::DeviceDataManagerX11"*, %"class.x11::Connection"*) local_unnamed_addr #1

declare void @_ZN2ui19X11EventWatcherGlibC1EPNS_14X11EventSourceE(%"class.ui::X11EventWatcherGlib"*, %"class.ui::X11EventSource"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3x1120XScopedEventSelectorD1Ev(%"class.x11::XScopedEventSelector"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2ui22X11HotplugEventHandlerD1Ev(%"class.ui::X11HotplugEventHandler"*) unnamed_addr #3

declare i32 @_ZN3x1110Connection14GenerateIdImplEv(%"class.x11::Connection"*) local_unnamed_addr #1

declare void @_ZN3x1120XScopedEventSelectorC1ENS_6WindowENS_9EventMaskE(%"class.x11::XScopedEventSelector"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.x11::Event"* @_ZNK4base8internal12VectorBufferIN3x115EventEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.x11::Event"*, %"class.x11::Event"** %23, align 8
  %25 = getelementptr inbounds %"class.x11::Event", %"class.x11::Event"* %24, i64 %1
  ret %"class.x11::Event"* %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN2ui22X11HotplugEventHandlerC1Ev(%"class.ui::X11HotplugEventHandler"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN2ui12_GLOBAL__N_113InitializeXkbEPN3x1110ConnectionEE3$_1JEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN2ui12_GLOBAL__N_113InitializeXkbEPN3x1110ConnectionEE3$_1JEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN2ui12_GLOBAL__N_113InitializeXkbEPN3x1110ConnectionEE3$_1JEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN2ui12_GLOBAL__N_113InitializeXkbEPN3x1110ConnectionEE3$_1JEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackERZN3x116FutureINS3_3Xkb19PerClientFlagsReplyEE10OnResponseENS2_IFvNS3_8ResponseIS6_EEEEEEUlSB_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS3_5ErrorENSF_14default_deleteISH_EEEEE_JSB_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackERZN3x116FutureINS3_3Xkb19PerClientFlagsReplyEE10OnResponseENS2_IFvNS3_8ResponseIS6_EEEEEEUlSB_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS3_5ErrorENSF_14default_deleteISH_EEEEE_JSB_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIRZN3x116FutureINS1_3Xkb19PerClientFlagsReplyEE10OnResponseENS_12OnceCallbackIFvNS1_8ResponseIS4_EEEEEEUlSA_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS1_5ErrorENSE_14default_deleteISG_EEEEE_JSA_EEENS6_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIRZN3x116FutureINS1_3Xkb19PerClientFlagsReplyEE10OnResponseENS_12OnceCallbackIFvNS1_8ResponseIS4_EEEEEEUlSA_13scoped_refptrINS_16RefCountedMemoryEENSt3__110unique_ptrINS1_5ErrorENSE_14default_deleteISG_EEEEE_JSA_EEENS6_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_"}
!12 = !{i8 0, i8 2}
