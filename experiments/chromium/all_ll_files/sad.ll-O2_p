; ModuleID = '../../third_party/libvpx/source/libvpx/vpx_dsp/sad.c'
source_filename = "../../third_party/libvpx/source/libvpx/vpx_dsp/sad.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_sad64x64_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = sext i32 %1 to i64
  %6 = sext i32 %3 to i64
  br label %7

7:                                                ; preds = %4, %45
  %8 = phi i32 [ 0, %4 ], [ %50, %45 ]
  %9 = phi i32 [ 0, %4 ], [ %53, %45 ]
  %10 = phi i8* [ %0, %4 ], [ %51, %45 ]
  %11 = phi i8* [ %2, %4 ], [ %52, %45 ]
  %12 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %8, i32 0
  br label %13

13:                                               ; preds = %13, %7
  %14 = phi i64 [ 0, %7 ], [ %43, %13 ]
  %15 = phi <4 x i32> [ %12, %7 ], [ %42, %13 ]
  %16 = getelementptr inbounds i8, i8* %10, i64 %14
  %17 = bitcast i8* %16 to <4 x i8>*
  %18 = load <4 x i8>, <4 x i8>* %17, align 1
  %19 = zext <4 x i8> %18 to <4 x i32>
  %20 = getelementptr inbounds i8, i8* %11, i64 %14
  %21 = bitcast i8* %20 to <4 x i8>*
  %22 = load <4 x i8>, <4 x i8>* %21, align 1
  %23 = zext <4 x i8> %22 to <4 x i32>
  %24 = sub nsw <4 x i32> %19, %23
  %25 = icmp slt <4 x i32> %24, zeroinitializer
  %26 = sub nsw <4 x i32> zeroinitializer, %24
  %27 = select <4 x i1> %25, <4 x i32> %26, <4 x i32> %24
  %28 = add <4 x i32> %27, %15
  %29 = or i64 %14, 4
  %30 = getelementptr inbounds i8, i8* %10, i64 %29
  %31 = bitcast i8* %30 to <4 x i8>*
  %32 = load <4 x i8>, <4 x i8>* %31, align 1
  %33 = zext <4 x i8> %32 to <4 x i32>
  %34 = getelementptr inbounds i8, i8* %11, i64 %29
  %35 = bitcast i8* %34 to <4 x i8>*
  %36 = load <4 x i8>, <4 x i8>* %35, align 1
  %37 = zext <4 x i8> %36 to <4 x i32>
  %38 = sub nsw <4 x i32> %33, %37
  %39 = icmp slt <4 x i32> %38, zeroinitializer
  %40 = sub nsw <4 x i32> zeroinitializer, %38
  %41 = select <4 x i1> %39, <4 x i32> %40, <4 x i32> %38
  %42 = add <4 x i32> %41, %28
  %43 = add nuw nsw i64 %14, 8
  %44 = icmp eq i64 %43, 64
  br i1 %44, label %45, label %13, !llvm.loop !2

45:                                               ; preds = %13
  %46 = shufflevector <4 x i32> %42, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %47 = add <4 x i32> %42, %46
  %48 = shufflevector <4 x i32> %47, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %49 = add <4 x i32> %47, %48
  %50 = extractelement <4 x i32> %49, i32 0
  %51 = getelementptr inbounds i8, i8* %10, i64 %5
  %52 = getelementptr inbounds i8, i8* %11, i64 %6
  %53 = add nuw nsw i32 %9, 1
  %54 = icmp eq i32 %53, 64
  br i1 %54, label %55, label %7

55:                                               ; preds = %45
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_sad64x64_avg_c(i8* nocapture readonly, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [4096 x i8], align 16
  %7 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 4096, i1 false)
  call void @vpx_comp_avg_pred_c(i8* nonnull %7, i8* %4, i32 64, i32 64, i8* %2, i32 %3) #5
  %8 = sext i32 %1 to i64
  br label %9

9:                                                ; preds = %5, %47
  %10 = phi i32 [ 0, %5 ], [ %52, %47 ]
  %11 = phi i32 [ 0, %5 ], [ %55, %47 ]
  %12 = phi i8* [ %0, %5 ], [ %53, %47 ]
  %13 = phi i8* [ %7, %5 ], [ %54, %47 ]
  %14 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %10, i32 0
  br label %15

15:                                               ; preds = %15, %9
  %16 = phi i64 [ 0, %9 ], [ %45, %15 ]
  %17 = phi <4 x i32> [ %14, %9 ], [ %44, %15 ]
  %18 = getelementptr inbounds i8, i8* %12, i64 %16
  %19 = bitcast i8* %18 to <4 x i8>*
  %20 = load <4 x i8>, <4 x i8>* %19, align 1
  %21 = zext <4 x i8> %20 to <4 x i32>
  %22 = getelementptr inbounds i8, i8* %13, i64 %16
  %23 = bitcast i8* %22 to <4 x i8>*
  %24 = load <4 x i8>, <4 x i8>* %23, align 1
  %25 = zext <4 x i8> %24 to <4 x i32>
  %26 = sub nsw <4 x i32> %21, %25
  %27 = icmp slt <4 x i32> %26, zeroinitializer
  %28 = sub nsw <4 x i32> zeroinitializer, %26
  %29 = select <4 x i1> %27, <4 x i32> %28, <4 x i32> %26
  %30 = add <4 x i32> %29, %17
  %31 = or i64 %16, 4
  %32 = getelementptr inbounds i8, i8* %12, i64 %31
  %33 = bitcast i8* %32 to <4 x i8>*
  %34 = load <4 x i8>, <4 x i8>* %33, align 1
  %35 = zext <4 x i8> %34 to <4 x i32>
  %36 = getelementptr inbounds i8, i8* %13, i64 %31
  %37 = bitcast i8* %36 to <4 x i8>*
  %38 = load <4 x i8>, <4 x i8>* %37, align 1
  %39 = zext <4 x i8> %38 to <4 x i32>
  %40 = sub nsw <4 x i32> %35, %39
  %41 = icmp slt <4 x i32> %40, zeroinitializer
  %42 = sub nsw <4 x i32> zeroinitializer, %40
  %43 = select <4 x i1> %41, <4 x i32> %42, <4 x i32> %40
  %44 = add <4 x i32> %43, %30
  %45 = add nuw nsw i64 %16, 8
  %46 = icmp eq i64 %45, 64
  br i1 %46, label %47, label %15, !llvm.loop !4

47:                                               ; preds = %15
  %48 = shufflevector <4 x i32> %44, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %49 = add <4 x i32> %44, %48
  %50 = shufflevector <4 x i32> %49, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %51 = add <4 x i32> %49, %50
  %52 = extractelement <4 x i32> %51, i32 0
  %53 = getelementptr inbounds i8, i8* %12, i64 %8
  %54 = getelementptr inbounds i8, i8* %13, i64 64
  %55 = add nuw nsw i32 %11, 1
  %56 = icmp eq i32 %55, 64
  br i1 %56, label %57, label %9

57:                                               ; preds = %47
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %7) #5
  ret i32 %52
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @vpx_comp_avg_pred_c(i8*, i8*, i32, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad64x64x4d_c(i8* nocapture readonly, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = sext i32 %1 to i64
  %7 = sext i32 %3 to i64
  %8 = load i8*, i8** %2, align 8
  br label %9

9:                                                ; preds = %5, %47
  %10 = phi i32 [ 0, %5 ], [ %52, %47 ]
  %11 = phi i32 [ 0, %5 ], [ %55, %47 ]
  %12 = phi i8* [ %0, %5 ], [ %53, %47 ]
  %13 = phi i8* [ %8, %5 ], [ %54, %47 ]
  %14 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %10, i32 0
  br label %15

15:                                               ; preds = %15, %9
  %16 = phi i64 [ 0, %9 ], [ %45, %15 ]
  %17 = phi <4 x i32> [ %14, %9 ], [ %44, %15 ]
  %18 = getelementptr inbounds i8, i8* %12, i64 %16
  %19 = bitcast i8* %18 to <4 x i8>*
  %20 = load <4 x i8>, <4 x i8>* %19, align 1
  %21 = zext <4 x i8> %20 to <4 x i32>
  %22 = getelementptr inbounds i8, i8* %13, i64 %16
  %23 = bitcast i8* %22 to <4 x i8>*
  %24 = load <4 x i8>, <4 x i8>* %23, align 1
  %25 = zext <4 x i8> %24 to <4 x i32>
  %26 = sub nsw <4 x i32> %21, %25
  %27 = icmp slt <4 x i32> %26, zeroinitializer
  %28 = sub nsw <4 x i32> zeroinitializer, %26
  %29 = select <4 x i1> %27, <4 x i32> %28, <4 x i32> %26
  %30 = add <4 x i32> %29, %17
  %31 = or i64 %16, 4
  %32 = getelementptr inbounds i8, i8* %12, i64 %31
  %33 = bitcast i8* %32 to <4 x i8>*
  %34 = load <4 x i8>, <4 x i8>* %33, align 1
  %35 = zext <4 x i8> %34 to <4 x i32>
  %36 = getelementptr inbounds i8, i8* %13, i64 %31
  %37 = bitcast i8* %36 to <4 x i8>*
  %38 = load <4 x i8>, <4 x i8>* %37, align 1
  %39 = zext <4 x i8> %38 to <4 x i32>
  %40 = sub nsw <4 x i32> %35, %39
  %41 = icmp slt <4 x i32> %40, zeroinitializer
  %42 = sub nsw <4 x i32> zeroinitializer, %40
  %43 = select <4 x i1> %41, <4 x i32> %42, <4 x i32> %40
  %44 = add <4 x i32> %43, %30
  %45 = add nuw nsw i64 %16, 8
  %46 = icmp eq i64 %45, 64
  br i1 %46, label %47, label %15, !llvm.loop !5

47:                                               ; preds = %15
  %48 = shufflevector <4 x i32> %44, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %49 = add <4 x i32> %44, %48
  %50 = shufflevector <4 x i32> %49, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %51 = add <4 x i32> %49, %50
  %52 = extractelement <4 x i32> %51, i32 0
  %53 = getelementptr inbounds i8, i8* %12, i64 %6
  %54 = getelementptr inbounds i8, i8* %13, i64 %7
  %55 = add nuw nsw i32 %11, 1
  %56 = icmp eq i32 %55, 64
  br i1 %56, label %57, label %9

57:                                               ; preds = %47
  store i32 %52, i32* %4, align 4
  %58 = getelementptr inbounds i8*, i8** %2, i64 1
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %57, %98
  %61 = phi i32 [ 0, %57 ], [ %103, %98 ]
  %62 = phi i32 [ 0, %57 ], [ %106, %98 ]
  %63 = phi i8* [ %0, %57 ], [ %104, %98 ]
  %64 = phi i8* [ %59, %57 ], [ %105, %98 ]
  %65 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %61, i32 0
  br label %66

66:                                               ; preds = %66, %60
  %67 = phi i64 [ 0, %60 ], [ %96, %66 ]
  %68 = phi <4 x i32> [ %65, %60 ], [ %95, %66 ]
  %69 = getelementptr inbounds i8, i8* %63, i64 %67
  %70 = bitcast i8* %69 to <4 x i8>*
  %71 = load <4 x i8>, <4 x i8>* %70, align 1
  %72 = zext <4 x i8> %71 to <4 x i32>
  %73 = getelementptr inbounds i8, i8* %64, i64 %67
  %74 = bitcast i8* %73 to <4 x i8>*
  %75 = load <4 x i8>, <4 x i8>* %74, align 1
  %76 = zext <4 x i8> %75 to <4 x i32>
  %77 = sub nsw <4 x i32> %72, %76
  %78 = icmp slt <4 x i32> %77, zeroinitializer
  %79 = sub nsw <4 x i32> zeroinitializer, %77
  %80 = select <4 x i1> %78, <4 x i32> %79, <4 x i32> %77
  %81 = add <4 x i32> %80, %68
  %82 = or i64 %67, 4
  %83 = getelementptr inbounds i8, i8* %63, i64 %82
  %84 = bitcast i8* %83 to <4 x i8>*
  %85 = load <4 x i8>, <4 x i8>* %84, align 1
  %86 = zext <4 x i8> %85 to <4 x i32>
  %87 = getelementptr inbounds i8, i8* %64, i64 %82
  %88 = bitcast i8* %87 to <4 x i8>*
  %89 = load <4 x i8>, <4 x i8>* %88, align 1
  %90 = zext <4 x i8> %89 to <4 x i32>
  %91 = sub nsw <4 x i32> %86, %90
  %92 = icmp slt <4 x i32> %91, zeroinitializer
  %93 = sub nsw <4 x i32> zeroinitializer, %91
  %94 = select <4 x i1> %92, <4 x i32> %93, <4 x i32> %91
  %95 = add <4 x i32> %94, %81
  %96 = add nuw nsw i64 %67, 8
  %97 = icmp eq i64 %96, 64
  br i1 %97, label %98, label %66, !llvm.loop !6

98:                                               ; preds = %66
  %99 = shufflevector <4 x i32> %95, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %100 = add <4 x i32> %95, %99
  %101 = shufflevector <4 x i32> %100, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %102 = add <4 x i32> %100, %101
  %103 = extractelement <4 x i32> %102, i32 0
  %104 = getelementptr inbounds i8, i8* %63, i64 %6
  %105 = getelementptr inbounds i8, i8* %64, i64 %7
  %106 = add nuw nsw i32 %62, 1
  %107 = icmp eq i32 %106, 64
  br i1 %107, label %108, label %60

108:                                              ; preds = %98
  %109 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %103, i32* %109, align 4
  %110 = getelementptr inbounds i8*, i8** %2, i64 2
  %111 = load i8*, i8** %110, align 8
  br label %112

112:                                              ; preds = %108, %150
  %113 = phi i32 [ 0, %108 ], [ %155, %150 ]
  %114 = phi i32 [ 0, %108 ], [ %158, %150 ]
  %115 = phi i8* [ %0, %108 ], [ %156, %150 ]
  %116 = phi i8* [ %111, %108 ], [ %157, %150 ]
  %117 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %113, i32 0
  br label %118

118:                                              ; preds = %118, %112
  %119 = phi i64 [ 0, %112 ], [ %148, %118 ]
  %120 = phi <4 x i32> [ %117, %112 ], [ %147, %118 ]
  %121 = getelementptr inbounds i8, i8* %115, i64 %119
  %122 = bitcast i8* %121 to <4 x i8>*
  %123 = load <4 x i8>, <4 x i8>* %122, align 1
  %124 = zext <4 x i8> %123 to <4 x i32>
  %125 = getelementptr inbounds i8, i8* %116, i64 %119
  %126 = bitcast i8* %125 to <4 x i8>*
  %127 = load <4 x i8>, <4 x i8>* %126, align 1
  %128 = zext <4 x i8> %127 to <4 x i32>
  %129 = sub nsw <4 x i32> %124, %128
  %130 = icmp slt <4 x i32> %129, zeroinitializer
  %131 = sub nsw <4 x i32> zeroinitializer, %129
  %132 = select <4 x i1> %130, <4 x i32> %131, <4 x i32> %129
  %133 = add <4 x i32> %132, %120
  %134 = or i64 %119, 4
  %135 = getelementptr inbounds i8, i8* %115, i64 %134
  %136 = bitcast i8* %135 to <4 x i8>*
  %137 = load <4 x i8>, <4 x i8>* %136, align 1
  %138 = zext <4 x i8> %137 to <4 x i32>
  %139 = getelementptr inbounds i8, i8* %116, i64 %134
  %140 = bitcast i8* %139 to <4 x i8>*
  %141 = load <4 x i8>, <4 x i8>* %140, align 1
  %142 = zext <4 x i8> %141 to <4 x i32>
  %143 = sub nsw <4 x i32> %138, %142
  %144 = icmp slt <4 x i32> %143, zeroinitializer
  %145 = sub nsw <4 x i32> zeroinitializer, %143
  %146 = select <4 x i1> %144, <4 x i32> %145, <4 x i32> %143
  %147 = add <4 x i32> %146, %133
  %148 = add nuw nsw i64 %119, 8
  %149 = icmp eq i64 %148, 64
  br i1 %149, label %150, label %118, !llvm.loop !7

150:                                              ; preds = %118
  %151 = shufflevector <4 x i32> %147, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %152 = add <4 x i32> %147, %151
  %153 = shufflevector <4 x i32> %152, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %154 = add <4 x i32> %152, %153
  %155 = extractelement <4 x i32> %154, i32 0
  %156 = getelementptr inbounds i8, i8* %115, i64 %6
  %157 = getelementptr inbounds i8, i8* %116, i64 %7
  %158 = add nuw nsw i32 %114, 1
  %159 = icmp eq i32 %158, 64
  br i1 %159, label %160, label %112

160:                                              ; preds = %150
  %161 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %155, i32* %161, align 4
  %162 = getelementptr inbounds i8*, i8** %2, i64 3
  %163 = load i8*, i8** %162, align 8
  br label %164

164:                                              ; preds = %160, %202
  %165 = phi i32 [ 0, %160 ], [ %207, %202 ]
  %166 = phi i32 [ 0, %160 ], [ %210, %202 ]
  %167 = phi i8* [ %0, %160 ], [ %208, %202 ]
  %168 = phi i8* [ %163, %160 ], [ %209, %202 ]
  %169 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %165, i32 0
  br label %170

170:                                              ; preds = %170, %164
  %171 = phi i64 [ 0, %164 ], [ %200, %170 ]
  %172 = phi <4 x i32> [ %169, %164 ], [ %199, %170 ]
  %173 = getelementptr inbounds i8, i8* %167, i64 %171
  %174 = bitcast i8* %173 to <4 x i8>*
  %175 = load <4 x i8>, <4 x i8>* %174, align 1
  %176 = zext <4 x i8> %175 to <4 x i32>
  %177 = getelementptr inbounds i8, i8* %168, i64 %171
  %178 = bitcast i8* %177 to <4 x i8>*
  %179 = load <4 x i8>, <4 x i8>* %178, align 1
  %180 = zext <4 x i8> %179 to <4 x i32>
  %181 = sub nsw <4 x i32> %176, %180
  %182 = icmp slt <4 x i32> %181, zeroinitializer
  %183 = sub nsw <4 x i32> zeroinitializer, %181
  %184 = select <4 x i1> %182, <4 x i32> %183, <4 x i32> %181
  %185 = add <4 x i32> %184, %172
  %186 = or i64 %171, 4
  %187 = getelementptr inbounds i8, i8* %167, i64 %186
  %188 = bitcast i8* %187 to <4 x i8>*
  %189 = load <4 x i8>, <4 x i8>* %188, align 1
  %190 = zext <4 x i8> %189 to <4 x i32>
  %191 = getelementptr inbounds i8, i8* %168, i64 %186
  %192 = bitcast i8* %191 to <4 x i8>*
  %193 = load <4 x i8>, <4 x i8>* %192, align 1
  %194 = zext <4 x i8> %193 to <4 x i32>
  %195 = sub nsw <4 x i32> %190, %194
  %196 = icmp slt <4 x i32> %195, zeroinitializer
  %197 = sub nsw <4 x i32> zeroinitializer, %195
  %198 = select <4 x i1> %196, <4 x i32> %197, <4 x i32> %195
  %199 = add <4 x i32> %198, %185
  %200 = add nuw nsw i64 %171, 8
  %201 = icmp eq i64 %200, 64
  br i1 %201, label %202, label %170, !llvm.loop !8

202:                                              ; preds = %170
  %203 = shufflevector <4 x i32> %199, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %204 = add <4 x i32> %199, %203
  %205 = shufflevector <4 x i32> %204, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %206 = add <4 x i32> %204, %205
  %207 = extractelement <4 x i32> %206, i32 0
  %208 = getelementptr inbounds i8, i8* %167, i64 %6
  %209 = getelementptr inbounds i8, i8* %168, i64 %7
  %210 = add nuw nsw i32 %166, 1
  %211 = icmp eq i32 %210, 64
  br i1 %211, label %212, label %164

212:                                              ; preds = %202
  %213 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %207, i32* %213, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_sad64x32_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = sext i32 %1 to i64
  %6 = sext i32 %3 to i64
  br label %7

7:                                                ; preds = %4, %45
  %8 = phi i32 [ 0, %4 ], [ %50, %45 ]
  %9 = phi i32 [ 0, %4 ], [ %53, %45 ]
  %10 = phi i8* [ %0, %4 ], [ %51, %45 ]
  %11 = phi i8* [ %2, %4 ], [ %52, %45 ]
  %12 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %8, i32 0
  br label %13

13:                                               ; preds = %13, %7
  %14 = phi i64 [ 0, %7 ], [ %43, %13 ]
  %15 = phi <4 x i32> [ %12, %7 ], [ %42, %13 ]
  %16 = getelementptr inbounds i8, i8* %10, i64 %14
  %17 = bitcast i8* %16 to <4 x i8>*
  %18 = load <4 x i8>, <4 x i8>* %17, align 1
  %19 = zext <4 x i8> %18 to <4 x i32>
  %20 = getelementptr inbounds i8, i8* %11, i64 %14
  %21 = bitcast i8* %20 to <4 x i8>*
  %22 = load <4 x i8>, <4 x i8>* %21, align 1
  %23 = zext <4 x i8> %22 to <4 x i32>
  %24 = sub nsw <4 x i32> %19, %23
  %25 = icmp slt <4 x i32> %24, zeroinitializer
  %26 = sub nsw <4 x i32> zeroinitializer, %24
  %27 = select <4 x i1> %25, <4 x i32> %26, <4 x i32> %24
  %28 = add <4 x i32> %27, %15
  %29 = or i64 %14, 4
  %30 = getelementptr inbounds i8, i8* %10, i64 %29
  %31 = bitcast i8* %30 to <4 x i8>*
  %32 = load <4 x i8>, <4 x i8>* %31, align 1
  %33 = zext <4 x i8> %32 to <4 x i32>
  %34 = getelementptr inbounds i8, i8* %11, i64 %29
  %35 = bitcast i8* %34 to <4 x i8>*
  %36 = load <4 x i8>, <4 x i8>* %35, align 1
  %37 = zext <4 x i8> %36 to <4 x i32>
  %38 = sub nsw <4 x i32> %33, %37
  %39 = icmp slt <4 x i32> %38, zeroinitializer
  %40 = sub nsw <4 x i32> zeroinitializer, %38
  %41 = select <4 x i1> %39, <4 x i32> %40, <4 x i32> %38
  %42 = add <4 x i32> %41, %28
  %43 = add nuw nsw i64 %14, 8
  %44 = icmp eq i64 %43, 64
  br i1 %44, label %45, label %13, !llvm.loop !9

45:                                               ; preds = %13
  %46 = shufflevector <4 x i32> %42, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %47 = add <4 x i32> %42, %46
  %48 = shufflevector <4 x i32> %47, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %49 = add <4 x i32> %47, %48
  %50 = extractelement <4 x i32> %49, i32 0
  %51 = getelementptr inbounds i8, i8* %10, i64 %5
  %52 = getelementptr inbounds i8, i8* %11, i64 %6
  %53 = add nuw nsw i32 %9, 1
  %54 = icmp eq i32 %53, 32
  br i1 %54, label %55, label %7

55:                                               ; preds = %45
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_sad64x32_avg_c(i8* nocapture readonly, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [2048 x i8], align 16
  %7 = getelementptr inbounds [2048 x i8], [2048 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 2048, i1 false)
  call void @vpx_comp_avg_pred_c(i8* nonnull %7, i8* %4, i32 64, i32 32, i8* %2, i32 %3) #5
  %8 = sext i32 %1 to i64
  br label %9

9:                                                ; preds = %5, %47
  %10 = phi i32 [ 0, %5 ], [ %52, %47 ]
  %11 = phi i32 [ 0, %5 ], [ %55, %47 ]
  %12 = phi i8* [ %0, %5 ], [ %53, %47 ]
  %13 = phi i8* [ %7, %5 ], [ %54, %47 ]
  %14 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %10, i32 0
  br label %15

15:                                               ; preds = %15, %9
  %16 = phi i64 [ 0, %9 ], [ %45, %15 ]
  %17 = phi <4 x i32> [ %14, %9 ], [ %44, %15 ]
  %18 = getelementptr inbounds i8, i8* %12, i64 %16
  %19 = bitcast i8* %18 to <4 x i8>*
  %20 = load <4 x i8>, <4 x i8>* %19, align 1
  %21 = zext <4 x i8> %20 to <4 x i32>
  %22 = getelementptr inbounds i8, i8* %13, i64 %16
  %23 = bitcast i8* %22 to <4 x i8>*
  %24 = load <4 x i8>, <4 x i8>* %23, align 1
  %25 = zext <4 x i8> %24 to <4 x i32>
  %26 = sub nsw <4 x i32> %21, %25
  %27 = icmp slt <4 x i32> %26, zeroinitializer
  %28 = sub nsw <4 x i32> zeroinitializer, %26
  %29 = select <4 x i1> %27, <4 x i32> %28, <4 x i32> %26
  %30 = add <4 x i32> %29, %17
  %31 = or i64 %16, 4
  %32 = getelementptr inbounds i8, i8* %12, i64 %31
  %33 = bitcast i8* %32 to <4 x i8>*
  %34 = load <4 x i8>, <4 x i8>* %33, align 1
  %35 = zext <4 x i8> %34 to <4 x i32>
  %36 = getelementptr inbounds i8, i8* %13, i64 %31
  %37 = bitcast i8* %36 to <4 x i8>*
  %38 = load <4 x i8>, <4 x i8>* %37, align 1
  %39 = zext <4 x i8> %38 to <4 x i32>
  %40 = sub nsw <4 x i32> %35, %39
  %41 = icmp slt <4 x i32> %40, zeroinitializer
  %42 = sub nsw <4 x i32> zeroinitializer, %40
  %43 = select <4 x i1> %41, <4 x i32> %42, <4 x i32> %40
  %44 = add <4 x i32> %43, %30
  %45 = add nuw nsw i64 %16, 8
  %46 = icmp eq i64 %45, 64
  br i1 %46, label %47, label %15, !llvm.loop !10

47:                                               ; preds = %15
  %48 = shufflevector <4 x i32> %44, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %49 = add <4 x i32> %44, %48
  %50 = shufflevector <4 x i32> %49, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %51 = add <4 x i32> %49, %50
  %52 = extractelement <4 x i32> %51, i32 0
  %53 = getelementptr inbounds i8, i8* %12, i64 %8
  %54 = getelementptr inbounds i8, i8* %13, i64 64
  %55 = add nuw nsw i32 %11, 1
  %56 = icmp eq i32 %55, 32
  br i1 %56, label %57, label %9

57:                                               ; preds = %47
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %7) #5
  ret i32 %52
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad64x32x4d_c(i8* nocapture readonly, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = sext i32 %1 to i64
  %7 = sext i32 %3 to i64
  %8 = load i8*, i8** %2, align 8
  br label %9

9:                                                ; preds = %5, %47
  %10 = phi i32 [ 0, %5 ], [ %52, %47 ]
  %11 = phi i32 [ 0, %5 ], [ %55, %47 ]
  %12 = phi i8* [ %0, %5 ], [ %53, %47 ]
  %13 = phi i8* [ %8, %5 ], [ %54, %47 ]
  %14 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %10, i32 0
  br label %15

15:                                               ; preds = %15, %9
  %16 = phi i64 [ 0, %9 ], [ %45, %15 ]
  %17 = phi <4 x i32> [ %14, %9 ], [ %44, %15 ]
  %18 = getelementptr inbounds i8, i8* %12, i64 %16
  %19 = bitcast i8* %18 to <4 x i8>*
  %20 = load <4 x i8>, <4 x i8>* %19, align 1
  %21 = zext <4 x i8> %20 to <4 x i32>
  %22 = getelementptr inbounds i8, i8* %13, i64 %16
  %23 = bitcast i8* %22 to <4 x i8>*
  %24 = load <4 x i8>, <4 x i8>* %23, align 1
  %25 = zext <4 x i8> %24 to <4 x i32>
  %26 = sub nsw <4 x i32> %21, %25
  %27 = icmp slt <4 x i32> %26, zeroinitializer
  %28 = sub nsw <4 x i32> zeroinitializer, %26
  %29 = select <4 x i1> %27, <4 x i32> %28, <4 x i32> %26
  %30 = add <4 x i32> %29, %17
  %31 = or i64 %16, 4
  %32 = getelementptr inbounds i8, i8* %12, i64 %31
  %33 = bitcast i8* %32 to <4 x i8>*
  %34 = load <4 x i8>, <4 x i8>* %33, align 1
  %35 = zext <4 x i8> %34 to <4 x i32>
  %36 = getelementptr inbounds i8, i8* %13, i64 %31
  %37 = bitcast i8* %36 to <4 x i8>*
  %38 = load <4 x i8>, <4 x i8>* %37, align 1
  %39 = zext <4 x i8> %38 to <4 x i32>
  %40 = sub nsw <4 x i32> %35, %39
  %41 = icmp slt <4 x i32> %40, zeroinitializer
  %42 = sub nsw <4 x i32> zeroinitializer, %40
  %43 = select <4 x i1> %41, <4 x i32> %42, <4 x i32> %40
  %44 = add <4 x i32> %43, %30
  %45 = add nuw nsw i64 %16, 8
  %46 = icmp eq i64 %45, 64
  br i1 %46, label %47, label %15, !llvm.loop !11

47:                                               ; preds = %15
  %48 = shufflevector <4 x i32> %44, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %49 = add <4 x i32> %44, %48
  %50 = shufflevector <4 x i32> %49, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %51 = add <4 x i32> %49, %50
  %52 = extractelement <4 x i32> %51, i32 0
  %53 = getelementptr inbounds i8, i8* %12, i64 %6
  %54 = getelementptr inbounds i8, i8* %13, i64 %7
  %55 = add nuw nsw i32 %11, 1
  %56 = icmp eq i32 %55, 32
  br i1 %56, label %57, label %9

57:                                               ; preds = %47
  store i32 %52, i32* %4, align 4
  %58 = getelementptr inbounds i8*, i8** %2, i64 1
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %57, %98
  %61 = phi i32 [ 0, %57 ], [ %103, %98 ]
  %62 = phi i32 [ 0, %57 ], [ %106, %98 ]
  %63 = phi i8* [ %0, %57 ], [ %104, %98 ]
  %64 = phi i8* [ %59, %57 ], [ %105, %98 ]
  %65 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %61, i32 0
  br label %66

66:                                               ; preds = %66, %60
  %67 = phi i64 [ 0, %60 ], [ %96, %66 ]
  %68 = phi <4 x i32> [ %65, %60 ], [ %95, %66 ]
  %69 = getelementptr inbounds i8, i8* %63, i64 %67
  %70 = bitcast i8* %69 to <4 x i8>*
  %71 = load <4 x i8>, <4 x i8>* %70, align 1
  %72 = zext <4 x i8> %71 to <4 x i32>
  %73 = getelementptr inbounds i8, i8* %64, i64 %67
  %74 = bitcast i8* %73 to <4 x i8>*
  %75 = load <4 x i8>, <4 x i8>* %74, align 1
  %76 = zext <4 x i8> %75 to <4 x i32>
  %77 = sub nsw <4 x i32> %72, %76
  %78 = icmp slt <4 x i32> %77, zeroinitializer
  %79 = sub nsw <4 x i32> zeroinitializer, %77
  %80 = select <4 x i1> %78, <4 x i32> %79, <4 x i32> %77
  %81 = add <4 x i32> %80, %68
  %82 = or i64 %67, 4
  %83 = getelementptr inbounds i8, i8* %63, i64 %82
  %84 = bitcast i8* %83 to <4 x i8>*
  %85 = load <4 x i8>, <4 x i8>* %84, align 1
  %86 = zext <4 x i8> %85 to <4 x i32>
  %87 = getelementptr inbounds i8, i8* %64, i64 %82
  %88 = bitcast i8* %87 to <4 x i8>*
  %89 = load <4 x i8>, <4 x i8>* %88, align 1
  %90 = zext <4 x i8> %89 to <4 x i32>
  %91 = sub nsw <4 x i32> %86, %90
  %92 = icmp slt <4 x i32> %91, zeroinitializer
  %93 = sub nsw <4 x i32> zeroinitializer, %91
  %94 = select <4 x i1> %92, <4 x i32> %93, <4 x i32> %91
  %95 = add <4 x i32> %94, %81
  %96 = add nuw nsw i64 %67, 8
  %97 = icmp eq i64 %96, 64
  br i1 %97, label %98, label %66, !llvm.loop !12

98:                                               ; preds = %66
  %99 = shufflevector <4 x i32> %95, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %100 = add <4 x i32> %95, %99
  %101 = shufflevector <4 x i32> %100, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %102 = add <4 x i32> %100, %101
  %103 = extractelement <4 x i32> %102, i32 0
  %104 = getelementptr inbounds i8, i8* %63, i64 %6
  %105 = getelementptr inbounds i8, i8* %64, i64 %7
  %106 = add nuw nsw i32 %62, 1
  %107 = icmp eq i32 %106, 32
  br i1 %107, label %108, label %60

108:                                              ; preds = %98
  %109 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %103, i32* %109, align 4
  %110 = getelementptr inbounds i8*, i8** %2, i64 2
  %111 = load i8*, i8** %110, align 8
  br label %112

112:                                              ; preds = %108, %150
  %113 = phi i32 [ 0, %108 ], [ %155, %150 ]
  %114 = phi i32 [ 0, %108 ], [ %158, %150 ]
  %115 = phi i8* [ %0, %108 ], [ %156, %150 ]
  %116 = phi i8* [ %111, %108 ], [ %157, %150 ]
  %117 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %113, i32 0
  br label %118

118:                                              ; preds = %118, %112
  %119 = phi i64 [ 0, %112 ], [ %148, %118 ]
  %120 = phi <4 x i32> [ %117, %112 ], [ %147, %118 ]
  %121 = getelementptr inbounds i8, i8* %115, i64 %119
  %122 = bitcast i8* %121 to <4 x i8>*
  %123 = load <4 x i8>, <4 x i8>* %122, align 1
  %124 = zext <4 x i8> %123 to <4 x i32>
  %125 = getelementptr inbounds i8, i8* %116, i64 %119
  %126 = bitcast i8* %125 to <4 x i8>*
  %127 = load <4 x i8>, <4 x i8>* %126, align 1
  %128 = zext <4 x i8> %127 to <4 x i32>
  %129 = sub nsw <4 x i32> %124, %128
  %130 = icmp slt <4 x i32> %129, zeroinitializer
  %131 = sub nsw <4 x i32> zeroinitializer, %129
  %132 = select <4 x i1> %130, <4 x i32> %131, <4 x i32> %129
  %133 = add <4 x i32> %132, %120
  %134 = or i64 %119, 4
  %135 = getelementptr inbounds i8, i8* %115, i64 %134
  %136 = bitcast i8* %135 to <4 x i8>*
  %137 = load <4 x i8>, <4 x i8>* %136, align 1
  %138 = zext <4 x i8> %137 to <4 x i32>
  %139 = getelementptr inbounds i8, i8* %116, i64 %134
  %140 = bitcast i8* %139 to <4 x i8>*
  %141 = load <4 x i8>, <4 x i8>* %140, align 1
  %142 = zext <4 x i8> %141 to <4 x i32>
  %143 = sub nsw <4 x i32> %138, %142
  %144 = icmp slt <4 x i32> %143, zeroinitializer
  %145 = sub nsw <4 x i32> zeroinitializer, %143
  %146 = select <4 x i1> %144, <4 x i32> %145, <4 x i32> %143
  %147 = add <4 x i32> %146, %133
  %148 = add nuw nsw i64 %119, 8
  %149 = icmp eq i64 %148, 64
  br i1 %149, label %150, label %118, !llvm.loop !13

150:                                              ; preds = %118
  %151 = shufflevector <4 x i32> %147, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %152 = add <4 x i32> %147, %151
  %153 = shufflevector <4 x i32> %152, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %154 = add <4 x i32> %152, %153
  %155 = extractelement <4 x i32> %154, i32 0
  %156 = getelementptr inbounds i8, i8* %115, i64 %6
  %157 = getelementptr inbounds i8, i8* %116, i64 %7
  %158 = add nuw nsw i32 %114, 1
  %159 = icmp eq i32 %158, 32
  br i1 %159, label %160, label %112

160:                                              ; preds = %150
  %161 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %155, i32* %161, align 4
  %162 = getelementptr inbounds i8*, i8** %2, i64 3
  %163 = load i8*, i8** %162, align 8
  br label %164

164:                                              ; preds = %160, %202
  %165 = phi i32 [ 0, %160 ], [ %207, %202 ]
  %166 = phi i32 [ 0, %160 ], [ %210, %202 ]
  %167 = phi i8* [ %0, %160 ], [ %208, %202 ]
  %168 = phi i8* [ %163, %160 ], [ %209, %202 ]
  %169 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %165, i32 0
  br label %170

170:                                              ; preds = %170, %164
  %171 = phi i64 [ 0, %164 ], [ %200, %170 ]
  %172 = phi <4 x i32> [ %169, %164 ], [ %199, %170 ]
  %173 = getelementptr inbounds i8, i8* %167, i64 %171
  %174 = bitcast i8* %173 to <4 x i8>*
  %175 = load <4 x i8>, <4 x i8>* %174, align 1
  %176 = zext <4 x i8> %175 to <4 x i32>
  %177 = getelementptr inbounds i8, i8* %168, i64 %171
  %178 = bitcast i8* %177 to <4 x i8>*
  %179 = load <4 x i8>, <4 x i8>* %178, align 1
  %180 = zext <4 x i8> %179 to <4 x i32>
  %181 = sub nsw <4 x i32> %176, %180
  %182 = icmp slt <4 x i32> %181, zeroinitializer
  %183 = sub nsw <4 x i32> zeroinitializer, %181
  %184 = select <4 x i1> %182, <4 x i32> %183, <4 x i32> %181
  %185 = add <4 x i32> %184, %172
  %186 = or i64 %171, 4
  %187 = getelementptr inbounds i8, i8* %167, i64 %186
  %188 = bitcast i8* %187 to <4 x i8>*
  %189 = load <4 x i8>, <4 x i8>* %188, align 1
  %190 = zext <4 x i8> %189 to <4 x i32>
  %191 = getelementptr inbounds i8, i8* %168, i64 %186
  %192 = bitcast i8* %191 to <4 x i8>*
  %193 = load <4 x i8>, <4 x i8>* %192, align 1
  %194 = zext <4 x i8> %193 to <4 x i32>
  %195 = sub nsw <4 x i32> %190, %194
  %196 = icmp slt <4 x i32> %195, zeroinitializer
  %197 = sub nsw <4 x i32> zeroinitializer, %195
  %198 = select <4 x i1> %196, <4 x i32> %197, <4 x i32> %195
  %199 = add <4 x i32> %198, %185
  %200 = add nuw nsw i64 %171, 8
  %201 = icmp eq i64 %200, 64
  br i1 %201, label %202, label %170, !llvm.loop !14

202:                                              ; preds = %170
  %203 = shufflevector <4 x i32> %199, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %204 = add <4 x i32> %199, %203
  %205 = shufflevector <4 x i32> %204, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %206 = add <4 x i32> %204, %205
  %207 = extractelement <4 x i32> %206, i32 0
  %208 = getelementptr inbounds i8, i8* %167, i64 %6
  %209 = getelementptr inbounds i8, i8* %168, i64 %7
  %210 = add nuw nsw i32 %166, 1
  %211 = icmp eq i32 %210, 32
  br i1 %211, label %212, label %164

212:                                              ; preds = %202
  %213 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %207, i32* %213, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_sad32x64_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = sext i32 %1 to i64
  %6 = sext i32 %3 to i64
  br label %7

7:                                                ; preds = %4, %7
  %8 = phi i32 [ 0, %4 ], [ %119, %7 ]
  %9 = phi i32 [ 0, %4 ], [ %122, %7 ]
  %10 = phi i8* [ %0, %4 ], [ %120, %7 ]
  %11 = phi i8* [ %2, %4 ], [ %121, %7 ]
  %12 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %8, i32 0
  %13 = bitcast i8* %10 to <4 x i8>*
  %14 = load <4 x i8>, <4 x i8>* %13, align 1
  %15 = zext <4 x i8> %14 to <4 x i32>
  %16 = bitcast i8* %11 to <4 x i8>*
  %17 = load <4 x i8>, <4 x i8>* %16, align 1
  %18 = zext <4 x i8> %17 to <4 x i32>
  %19 = sub nsw <4 x i32> %15, %18
  %20 = icmp slt <4 x i32> %19, zeroinitializer
  %21 = sub nsw <4 x i32> zeroinitializer, %19
  %22 = select <4 x i1> %20, <4 x i32> %21, <4 x i32> %19
  %23 = add <4 x i32> %22, %12
  %24 = getelementptr inbounds i8, i8* %10, i64 4
  %25 = bitcast i8* %24 to <4 x i8>*
  %26 = load <4 x i8>, <4 x i8>* %25, align 1
  %27 = zext <4 x i8> %26 to <4 x i32>
  %28 = getelementptr inbounds i8, i8* %11, i64 4
  %29 = bitcast i8* %28 to <4 x i8>*
  %30 = load <4 x i8>, <4 x i8>* %29, align 1
  %31 = zext <4 x i8> %30 to <4 x i32>
  %32 = sub nsw <4 x i32> %27, %31
  %33 = icmp slt <4 x i32> %32, zeroinitializer
  %34 = sub nsw <4 x i32> zeroinitializer, %32
  %35 = select <4 x i1> %33, <4 x i32> %34, <4 x i32> %32
  %36 = add <4 x i32> %35, %23
  %37 = getelementptr inbounds i8, i8* %10, i64 8
  %38 = bitcast i8* %37 to <4 x i8>*
  %39 = load <4 x i8>, <4 x i8>* %38, align 1
  %40 = zext <4 x i8> %39 to <4 x i32>
  %41 = getelementptr inbounds i8, i8* %11, i64 8
  %42 = bitcast i8* %41 to <4 x i8>*
  %43 = load <4 x i8>, <4 x i8>* %42, align 1
  %44 = zext <4 x i8> %43 to <4 x i32>
  %45 = sub nsw <4 x i32> %40, %44
  %46 = icmp slt <4 x i32> %45, zeroinitializer
  %47 = sub nsw <4 x i32> zeroinitializer, %45
  %48 = select <4 x i1> %46, <4 x i32> %47, <4 x i32> %45
  %49 = add <4 x i32> %48, %36
  %50 = getelementptr inbounds i8, i8* %10, i64 12
  %51 = bitcast i8* %50 to <4 x i8>*
  %52 = load <4 x i8>, <4 x i8>* %51, align 1
  %53 = zext <4 x i8> %52 to <4 x i32>
  %54 = getelementptr inbounds i8, i8* %11, i64 12
  %55 = bitcast i8* %54 to <4 x i8>*
  %56 = load <4 x i8>, <4 x i8>* %55, align 1
  %57 = zext <4 x i8> %56 to <4 x i32>
  %58 = sub nsw <4 x i32> %53, %57
  %59 = icmp slt <4 x i32> %58, zeroinitializer
  %60 = sub nsw <4 x i32> zeroinitializer, %58
  %61 = select <4 x i1> %59, <4 x i32> %60, <4 x i32> %58
  %62 = add <4 x i32> %61, %49
  %63 = getelementptr inbounds i8, i8* %10, i64 16
  %64 = bitcast i8* %63 to <4 x i8>*
  %65 = load <4 x i8>, <4 x i8>* %64, align 1
  %66 = zext <4 x i8> %65 to <4 x i32>
  %67 = getelementptr inbounds i8, i8* %11, i64 16
  %68 = bitcast i8* %67 to <4 x i8>*
  %69 = load <4 x i8>, <4 x i8>* %68, align 1
  %70 = zext <4 x i8> %69 to <4 x i32>
  %71 = sub nsw <4 x i32> %66, %70
  %72 = icmp slt <4 x i32> %71, zeroinitializer
  %73 = sub nsw <4 x i32> zeroinitializer, %71
  %74 = select <4 x i1> %72, <4 x i32> %73, <4 x i32> %71
  %75 = add <4 x i32> %74, %62
  %76 = getelementptr inbounds i8, i8* %10, i64 20
  %77 = bitcast i8* %76 to <4 x i8>*
  %78 = load <4 x i8>, <4 x i8>* %77, align 1
  %79 = zext <4 x i8> %78 to <4 x i32>
  %80 = getelementptr inbounds i8, i8* %11, i64 20
  %81 = bitcast i8* %80 to <4 x i8>*
  %82 = load <4 x i8>, <4 x i8>* %81, align 1
  %83 = zext <4 x i8> %82 to <4 x i32>
  %84 = sub nsw <4 x i32> %79, %83
  %85 = icmp slt <4 x i32> %84, zeroinitializer
  %86 = sub nsw <4 x i32> zeroinitializer, %84
  %87 = select <4 x i1> %85, <4 x i32> %86, <4 x i32> %84
  %88 = add <4 x i32> %87, %75
  %89 = getelementptr inbounds i8, i8* %10, i64 24
  %90 = bitcast i8* %89 to <4 x i8>*
  %91 = load <4 x i8>, <4 x i8>* %90, align 1
  %92 = zext <4 x i8> %91 to <4 x i32>
  %93 = getelementptr inbounds i8, i8* %11, i64 24
  %94 = bitcast i8* %93 to <4 x i8>*
  %95 = load <4 x i8>, <4 x i8>* %94, align 1
  %96 = zext <4 x i8> %95 to <4 x i32>
  %97 = sub nsw <4 x i32> %92, %96
  %98 = icmp slt <4 x i32> %97, zeroinitializer
  %99 = sub nsw <4 x i32> zeroinitializer, %97
  %100 = select <4 x i1> %98, <4 x i32> %99, <4 x i32> %97
  %101 = add <4 x i32> %100, %88
  %102 = getelementptr inbounds i8, i8* %10, i64 28
  %103 = bitcast i8* %102 to <4 x i8>*
  %104 = load <4 x i8>, <4 x i8>* %103, align 1
  %105 = zext <4 x i8> %104 to <4 x i32>
  %106 = getelementptr inbounds i8, i8* %11, i64 28
  %107 = bitcast i8* %106 to <4 x i8>*
  %108 = load <4 x i8>, <4 x i8>* %107, align 1
  %109 = zext <4 x i8> %108 to <4 x i32>
  %110 = sub nsw <4 x i32> %105, %109
  %111 = icmp slt <4 x i32> %110, zeroinitializer
  %112 = sub nsw <4 x i32> zeroinitializer, %110
  %113 = select <4 x i1> %111, <4 x i32> %112, <4 x i32> %110
  %114 = add <4 x i32> %113, %101
  %115 = shufflevector <4 x i32> %114, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %116 = add <4 x i32> %114, %115
  %117 = shufflevector <4 x i32> %116, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %118 = add <4 x i32> %116, %117
  %119 = extractelement <4 x i32> %118, i32 0
  %120 = getelementptr inbounds i8, i8* %10, i64 %5
  %121 = getelementptr inbounds i8, i8* %11, i64 %6
  %122 = add nuw nsw i32 %9, 1
  %123 = icmp eq i32 %122, 64
  br i1 %123, label %124, label %7

124:                                              ; preds = %7
  ret i32 %119
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_sad32x64_avg_c(i8* nocapture readonly, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [2048 x i8], align 16
  %7 = getelementptr inbounds [2048 x i8], [2048 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 2048, i1 false)
  call void @vpx_comp_avg_pred_c(i8* nonnull %7, i8* %4, i32 32, i32 64, i8* %2, i32 %3) #5
  %8 = sext i32 %1 to i64
  br label %9

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %121, %9 ]
  %11 = phi i32 [ 0, %5 ], [ %124, %9 ]
  %12 = phi i8* [ %0, %5 ], [ %122, %9 ]
  %13 = phi i8* [ %7, %5 ], [ %123, %9 ]
  %14 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %10, i32 0
  %15 = bitcast i8* %12 to <4 x i8>*
  %16 = load <4 x i8>, <4 x i8>* %15, align 1
  %17 = zext <4 x i8> %16 to <4 x i32>
  %18 = bitcast i8* %13 to <4 x i8>*
  %19 = load <4 x i8>, <4 x i8>* %18, align 1
  %20 = zext <4 x i8> %19 to <4 x i32>
  %21 = sub nsw <4 x i32> %17, %20
  %22 = icmp slt <4 x i32> %21, zeroinitializer
  %23 = sub nsw <4 x i32> zeroinitializer, %21
  %24 = select <4 x i1> %22, <4 x i32> %23, <4 x i32> %21
  %25 = add <4 x i32> %24, %14
  %26 = getelementptr inbounds i8, i8* %12, i64 4
  %27 = bitcast i8* %26 to <4 x i8>*
  %28 = load <4 x i8>, <4 x i8>* %27, align 1
  %29 = zext <4 x i8> %28 to <4 x i32>
  %30 = getelementptr inbounds i8, i8* %13, i64 4
  %31 = bitcast i8* %30 to <4 x i8>*
  %32 = load <4 x i8>, <4 x i8>* %31, align 1
  %33 = zext <4 x i8> %32 to <4 x i32>
  %34 = sub nsw <4 x i32> %29, %33
  %35 = icmp slt <4 x i32> %34, zeroinitializer
  %36 = sub nsw <4 x i32> zeroinitializer, %34
  %37 = select <4 x i1> %35, <4 x i32> %36, <4 x i32> %34
  %38 = add <4 x i32> %37, %25
  %39 = getelementptr inbounds i8, i8* %12, i64 8
  %40 = bitcast i8* %39 to <4 x i8>*
  %41 = load <4 x i8>, <4 x i8>* %40, align 1
  %42 = zext <4 x i8> %41 to <4 x i32>
  %43 = getelementptr inbounds i8, i8* %13, i64 8
  %44 = bitcast i8* %43 to <4 x i8>*
  %45 = load <4 x i8>, <4 x i8>* %44, align 1
  %46 = zext <4 x i8> %45 to <4 x i32>
  %47 = sub nsw <4 x i32> %42, %46
  %48 = icmp slt <4 x i32> %47, zeroinitializer
  %49 = sub nsw <4 x i32> zeroinitializer, %47
  %50 = select <4 x i1> %48, <4 x i32> %49, <4 x i32> %47
  %51 = add <4 x i32> %50, %38
  %52 = getelementptr inbounds i8, i8* %12, i64 12
  %53 = bitcast i8* %52 to <4 x i8>*
  %54 = load <4 x i8>, <4 x i8>* %53, align 1
  %55 = zext <4 x i8> %54 to <4 x i32>
  %56 = getelementptr inbounds i8, i8* %13, i64 12
  %57 = bitcast i8* %56 to <4 x i8>*
  %58 = load <4 x i8>, <4 x i8>* %57, align 1
  %59 = zext <4 x i8> %58 to <4 x i32>
  %60 = sub nsw <4 x i32> %55, %59
  %61 = icmp slt <4 x i32> %60, zeroinitializer
  %62 = sub nsw <4 x i32> zeroinitializer, %60
  %63 = select <4 x i1> %61, <4 x i32> %62, <4 x i32> %60
  %64 = add <4 x i32> %63, %51
  %65 = getelementptr inbounds i8, i8* %12, i64 16
  %66 = bitcast i8* %65 to <4 x i8>*
  %67 = load <4 x i8>, <4 x i8>* %66, align 1
  %68 = zext <4 x i8> %67 to <4 x i32>
  %69 = getelementptr inbounds i8, i8* %13, i64 16
  %70 = bitcast i8* %69 to <4 x i8>*
  %71 = load <4 x i8>, <4 x i8>* %70, align 1
  %72 = zext <4 x i8> %71 to <4 x i32>
  %73 = sub nsw <4 x i32> %68, %72
  %74 = icmp slt <4 x i32> %73, zeroinitializer
  %75 = sub nsw <4 x i32> zeroinitializer, %73
  %76 = select <4 x i1> %74, <4 x i32> %75, <4 x i32> %73
  %77 = add <4 x i32> %76, %64
  %78 = getelementptr inbounds i8, i8* %12, i64 20
  %79 = bitcast i8* %78 to <4 x i8>*
  %80 = load <4 x i8>, <4 x i8>* %79, align 1
  %81 = zext <4 x i8> %80 to <4 x i32>
  %82 = getelementptr inbounds i8, i8* %13, i64 20
  %83 = bitcast i8* %82 to <4 x i8>*
  %84 = load <4 x i8>, <4 x i8>* %83, align 1
  %85 = zext <4 x i8> %84 to <4 x i32>
  %86 = sub nsw <4 x i32> %81, %85
  %87 = icmp slt <4 x i32> %86, zeroinitializer
  %88 = sub nsw <4 x i32> zeroinitializer, %86
  %89 = select <4 x i1> %87, <4 x i32> %88, <4 x i32> %86
  %90 = add <4 x i32> %89, %77
  %91 = getelementptr inbounds i8, i8* %12, i64 24
  %92 = bitcast i8* %91 to <4 x i8>*
  %93 = load <4 x i8>, <4 x i8>* %92, align 1
  %94 = zext <4 x i8> %93 to <4 x i32>
  %95 = getelementptr inbounds i8, i8* %13, i64 24
  %96 = bitcast i8* %95 to <4 x i8>*
  %97 = load <4 x i8>, <4 x i8>* %96, align 1
  %98 = zext <4 x i8> %97 to <4 x i32>
  %99 = sub nsw <4 x i32> %94, %98
  %100 = icmp slt <4 x i32> %99, zeroinitializer
  %101 = sub nsw <4 x i32> zeroinitializer, %99
  %102 = select <4 x i1> %100, <4 x i32> %101, <4 x i32> %99
  %103 = add <4 x i32> %102, %90
  %104 = getelementptr inbounds i8, i8* %12, i64 28
  %105 = bitcast i8* %104 to <4 x i8>*
  %106 = load <4 x i8>, <4 x i8>* %105, align 1
  %107 = zext <4 x i8> %106 to <4 x i32>
  %108 = getelementptr inbounds i8, i8* %13, i64 28
  %109 = bitcast i8* %108 to <4 x i8>*
  %110 = load <4 x i8>, <4 x i8>* %109, align 1
  %111 = zext <4 x i8> %110 to <4 x i32>
  %112 = sub nsw <4 x i32> %107, %111
  %113 = icmp slt <4 x i32> %112, zeroinitializer
  %114 = sub nsw <4 x i32> zeroinitializer, %112
  %115 = select <4 x i1> %113, <4 x i32> %114, <4 x i32> %112
  %116 = add <4 x i32> %115, %103
  %117 = shufflevector <4 x i32> %116, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %118 = add <4 x i32> %116, %117
  %119 = shufflevector <4 x i32> %118, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %120 = add <4 x i32> %118, %119
  %121 = extractelement <4 x i32> %120, i32 0
  %122 = getelementptr inbounds i8, i8* %12, i64 %8
  %123 = getelementptr inbounds i8, i8* %13, i64 32
  %124 = add nuw nsw i32 %11, 1
  %125 = icmp eq i32 %124, 64
  br i1 %125, label %126, label %9

126:                                              ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %7) #5
  ret i32 %121
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad32x64x4d_c(i8* nocapture readonly, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = sext i32 %1 to i64
  %7 = sext i32 %3 to i64
  %8 = load i8*, i8** %2, align 8
  br label %9

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %121, %9 ]
  %11 = phi i32 [ 0, %5 ], [ %124, %9 ]
  %12 = phi i8* [ %0, %5 ], [ %122, %9 ]
  %13 = phi i8* [ %8, %5 ], [ %123, %9 ]
  %14 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %10, i32 0
  %15 = bitcast i8* %12 to <4 x i8>*
  %16 = load <4 x i8>, <4 x i8>* %15, align 1
  %17 = zext <4 x i8> %16 to <4 x i32>
  %18 = bitcast i8* %13 to <4 x i8>*
  %19 = load <4 x i8>, <4 x i8>* %18, align 1
  %20 = zext <4 x i8> %19 to <4 x i32>
  %21 = sub nsw <4 x i32> %17, %20
  %22 = icmp slt <4 x i32> %21, zeroinitializer
  %23 = sub nsw <4 x i32> zeroinitializer, %21
  %24 = select <4 x i1> %22, <4 x i32> %23, <4 x i32> %21
  %25 = add <4 x i32> %24, %14
  %26 = getelementptr inbounds i8, i8* %12, i64 4
  %27 = bitcast i8* %26 to <4 x i8>*
  %28 = load <4 x i8>, <4 x i8>* %27, align 1
  %29 = zext <4 x i8> %28 to <4 x i32>
  %30 = getelementptr inbounds i8, i8* %13, i64 4
  %31 = bitcast i8* %30 to <4 x i8>*
  %32 = load <4 x i8>, <4 x i8>* %31, align 1
  %33 = zext <4 x i8> %32 to <4 x i32>
  %34 = sub nsw <4 x i32> %29, %33
  %35 = icmp slt <4 x i32> %34, zeroinitializer
  %36 = sub nsw <4 x i32> zeroinitializer, %34
  %37 = select <4 x i1> %35, <4 x i32> %36, <4 x i32> %34
  %38 = add <4 x i32> %37, %25
  %39 = getelementptr inbounds i8, i8* %12, i64 8
  %40 = bitcast i8* %39 to <4 x i8>*
  %41 = load <4 x i8>, <4 x i8>* %40, align 1
  %42 = zext <4 x i8> %41 to <4 x i32>
  %43 = getelementptr inbounds i8, i8* %13, i64 8
  %44 = bitcast i8* %43 to <4 x i8>*
  %45 = load <4 x i8>, <4 x i8>* %44, align 1
  %46 = zext <4 x i8> %45 to <4 x i32>
  %47 = sub nsw <4 x i32> %42, %46
  %48 = icmp slt <4 x i32> %47, zeroinitializer
  %49 = sub nsw <4 x i32> zeroinitializer, %47
  %50 = select <4 x i1> %48, <4 x i32> %49, <4 x i32> %47
  %51 = add <4 x i32> %50, %38
  %52 = getelementptr inbounds i8, i8* %12, i64 12
  %53 = bitcast i8* %52 to <4 x i8>*
  %54 = load <4 x i8>, <4 x i8>* %53, align 1
  %55 = zext <4 x i8> %54 to <4 x i32>
  %56 = getelementptr inbounds i8, i8* %13, i64 12
  %57 = bitcast i8* %56 to <4 x i8>*
  %58 = load <4 x i8>, <4 x i8>* %57, align 1
  %59 = zext <4 x i8> %58 to <4 x i32>
  %60 = sub nsw <4 x i32> %55, %59
  %61 = icmp slt <4 x i32> %60, zeroinitializer
  %62 = sub nsw <4 x i32> zeroinitializer, %60
  %63 = select <4 x i1> %61, <4 x i32> %62, <4 x i32> %60
  %64 = add <4 x i32> %63, %51
  %65 = getelementptr inbounds i8, i8* %12, i64 16
  %66 = bitcast i8* %65 to <4 x i8>*
  %67 = load <4 x i8>, <4 x i8>* %66, align 1
  %68 = zext <4 x i8> %67 to <4 x i32>
  %69 = getelementptr inbounds i8, i8* %13, i64 16
  %70 = bitcast i8* %69 to <4 x i8>*
  %71 = load <4 x i8>, <4 x i8>* %70, align 1
  %72 = zext <4 x i8> %71 to <4 x i32>
  %73 = sub nsw <4 x i32> %68, %72
  %74 = icmp slt <4 x i32> %73, zeroinitializer
  %75 = sub nsw <4 x i32> zeroinitializer, %73
  %76 = select <4 x i1> %74, <4 x i32> %75, <4 x i32> %73
  %77 = add <4 x i32> %76, %64
  %78 = getelementptr inbounds i8, i8* %12, i64 20
  %79 = bitcast i8* %78 to <4 x i8>*
  %80 = load <4 x i8>, <4 x i8>* %79, align 1
  %81 = zext <4 x i8> %80 to <4 x i32>
  %82 = getelementptr inbounds i8, i8* %13, i64 20
  %83 = bitcast i8* %82 to <4 x i8>*
  %84 = load <4 x i8>, <4 x i8>* %83, align 1
  %85 = zext <4 x i8> %84 to <4 x i32>
  %86 = sub nsw <4 x i32> %81, %85
  %87 = icmp slt <4 x i32> %86, zeroinitializer
  %88 = sub nsw <4 x i32> zeroinitializer, %86
  %89 = select <4 x i1> %87, <4 x i32> %88, <4 x i32> %86
  %90 = add <4 x i32> %89, %77
  %91 = getelementptr inbounds i8, i8* %12, i64 24
  %92 = bitcast i8* %91 to <4 x i8>*
  %93 = load <4 x i8>, <4 x i8>* %92, align 1
  %94 = zext <4 x i8> %93 to <4 x i32>
  %95 = getelementptr inbounds i8, i8* %13, i64 24
  %96 = bitcast i8* %95 to <4 x i8>*
  %97 = load <4 x i8>, <4 x i8>* %96, align 1
  %98 = zext <4 x i8> %97 to <4 x i32>
  %99 = sub nsw <4 x i32> %94, %98
  %100 = icmp slt <4 x i32> %99, zeroinitializer
  %101 = sub nsw <4 x i32> zeroinitializer, %99
  %102 = select <4 x i1> %100, <4 x i32> %101, <4 x i32> %99
  %103 = add <4 x i32> %102, %90
  %104 = getelementptr inbounds i8, i8* %12, i64 28
  %105 = bitcast i8* %104 to <4 x i8>*
  %106 = load <4 x i8>, <4 x i8>* %105, align 1
  %107 = zext <4 x i8> %106 to <4 x i32>
  %108 = getelementptr inbounds i8, i8* %13, i64 28
  %109 = bitcast i8* %108 to <4 x i8>*
  %110 = load <4 x i8>, <4 x i8>* %109, align 1
  %111 = zext <4 x i8> %110 to <4 x i32>
  %112 = sub nsw <4 x i32> %107, %111
  %113 = icmp slt <4 x i32> %112, zeroinitializer
  %114 = sub nsw <4 x i32> zeroinitializer, %112
  %115 = select <4 x i1> %113, <4 x i32> %114, <4 x i32> %112
  %116 = add <4 x i32> %115, %103
  %117 = shufflevector <4 x i32> %116, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %118 = add <4 x i32> %116, %117
  %119 = shufflevector <4 x i32> %118, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %120 = add <4 x i32> %118, %119
  %121 = extractelement <4 x i32> %120, i32 0
  %122 = getelementptr inbounds i8, i8* %12, i64 %6
  %123 = getelementptr inbounds i8, i8* %13, i64 %7
  %124 = add nuw nsw i32 %11, 1
  %125 = icmp eq i32 %124, 64
  br i1 %125, label %126, label %9

126:                                              ; preds = %9
  store i32 %121, i32* %4, align 4
  %127 = getelementptr inbounds i8*, i8** %2, i64 1
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %126, %129
  %130 = phi i32 [ 0, %126 ], [ %241, %129 ]
  %131 = phi i32 [ 0, %126 ], [ %244, %129 ]
  %132 = phi i8* [ %0, %126 ], [ %242, %129 ]
  %133 = phi i8* [ %128, %126 ], [ %243, %129 ]
  %134 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %130, i32 0
  %135 = bitcast i8* %132 to <4 x i8>*
  %136 = load <4 x i8>, <4 x i8>* %135, align 1
  %137 = zext <4 x i8> %136 to <4 x i32>
  %138 = bitcast i8* %133 to <4 x i8>*
  %139 = load <4 x i8>, <4 x i8>* %138, align 1
  %140 = zext <4 x i8> %139 to <4 x i32>
  %141 = sub nsw <4 x i32> %137, %140
  %142 = icmp slt <4 x i32> %141, zeroinitializer
  %143 = sub nsw <4 x i32> zeroinitializer, %141
  %144 = select <4 x i1> %142, <4 x i32> %143, <4 x i32> %141
  %145 = add <4 x i32> %144, %134
  %146 = getelementptr inbounds i8, i8* %132, i64 4
  %147 = bitcast i8* %146 to <4 x i8>*
  %148 = load <4 x i8>, <4 x i8>* %147, align 1
  %149 = zext <4 x i8> %148 to <4 x i32>
  %150 = getelementptr inbounds i8, i8* %133, i64 4
  %151 = bitcast i8* %150 to <4 x i8>*
  %152 = load <4 x i8>, <4 x i8>* %151, align 1
  %153 = zext <4 x i8> %152 to <4 x i32>
  %154 = sub nsw <4 x i32> %149, %153
  %155 = icmp slt <4 x i32> %154, zeroinitializer
  %156 = sub nsw <4 x i32> zeroinitializer, %154
  %157 = select <4 x i1> %155, <4 x i32> %156, <4 x i32> %154
  %158 = add <4 x i32> %157, %145
  %159 = getelementptr inbounds i8, i8* %132, i64 8
  %160 = bitcast i8* %159 to <4 x i8>*
  %161 = load <4 x i8>, <4 x i8>* %160, align 1
  %162 = zext <4 x i8> %161 to <4 x i32>
  %163 = getelementptr inbounds i8, i8* %133, i64 8
  %164 = bitcast i8* %163 to <4 x i8>*
  %165 = load <4 x i8>, <4 x i8>* %164, align 1
  %166 = zext <4 x i8> %165 to <4 x i32>
  %167 = sub nsw <4 x i32> %162, %166
  %168 = icmp slt <4 x i32> %167, zeroinitializer
  %169 = sub nsw <4 x i32> zeroinitializer, %167
  %170 = select <4 x i1> %168, <4 x i32> %169, <4 x i32> %167
  %171 = add <4 x i32> %170, %158
  %172 = getelementptr inbounds i8, i8* %132, i64 12
  %173 = bitcast i8* %172 to <4 x i8>*
  %174 = load <4 x i8>, <4 x i8>* %173, align 1
  %175 = zext <4 x i8> %174 to <4 x i32>
  %176 = getelementptr inbounds i8, i8* %133, i64 12
  %177 = bitcast i8* %176 to <4 x i8>*
  %178 = load <4 x i8>, <4 x i8>* %177, align 1
  %179 = zext <4 x i8> %178 to <4 x i32>
  %180 = sub nsw <4 x i32> %175, %179
  %181 = icmp slt <4 x i32> %180, zeroinitializer
  %182 = sub nsw <4 x i32> zeroinitializer, %180
  %183 = select <4 x i1> %181, <4 x i32> %182, <4 x i32> %180
  %184 = add <4 x i32> %183, %171
  %185 = getelementptr inbounds i8, i8* %132, i64 16
  %186 = bitcast i8* %185 to <4 x i8>*
  %187 = load <4 x i8>, <4 x i8>* %186, align 1
  %188 = zext <4 x i8> %187 to <4 x i32>
  %189 = getelementptr inbounds i8, i8* %133, i64 16
  %190 = bitcast i8* %189 to <4 x i8>*
  %191 = load <4 x i8>, <4 x i8>* %190, align 1
  %192 = zext <4 x i8> %191 to <4 x i32>
  %193 = sub nsw <4 x i32> %188, %192
  %194 = icmp slt <4 x i32> %193, zeroinitializer
  %195 = sub nsw <4 x i32> zeroinitializer, %193
  %196 = select <4 x i1> %194, <4 x i32> %195, <4 x i32> %193
  %197 = add <4 x i32> %196, %184
  %198 = getelementptr inbounds i8, i8* %132, i64 20
  %199 = bitcast i8* %198 to <4 x i8>*
  %200 = load <4 x i8>, <4 x i8>* %199, align 1
  %201 = zext <4 x i8> %200 to <4 x i32>
  %202 = getelementptr inbounds i8, i8* %133, i64 20
  %203 = bitcast i8* %202 to <4 x i8>*
  %204 = load <4 x i8>, <4 x i8>* %203, align 1
  %205 = zext <4 x i8> %204 to <4 x i32>
  %206 = sub nsw <4 x i32> %201, %205
  %207 = icmp slt <4 x i32> %206, zeroinitializer
  %208 = sub nsw <4 x i32> zeroinitializer, %206
  %209 = select <4 x i1> %207, <4 x i32> %208, <4 x i32> %206
  %210 = add <4 x i32> %209, %197
  %211 = getelementptr inbounds i8, i8* %132, i64 24
  %212 = bitcast i8* %211 to <4 x i8>*
  %213 = load <4 x i8>, <4 x i8>* %212, align 1
  %214 = zext <4 x i8> %213 to <4 x i32>
  %215 = getelementptr inbounds i8, i8* %133, i64 24
  %216 = bitcast i8* %215 to <4 x i8>*
  %217 = load <4 x i8>, <4 x i8>* %216, align 1
  %218 = zext <4 x i8> %217 to <4 x i32>
  %219 = sub nsw <4 x i32> %214, %218
  %220 = icmp slt <4 x i32> %219, zeroinitializer
  %221 = sub nsw <4 x i32> zeroinitializer, %219
  %222 = select <4 x i1> %220, <4 x i32> %221, <4 x i32> %219
  %223 = add <4 x i32> %222, %210
  %224 = getelementptr inbounds i8, i8* %132, i64 28
  %225 = bitcast i8* %224 to <4 x i8>*
  %226 = load <4 x i8>, <4 x i8>* %225, align 1
  %227 = zext <4 x i8> %226 to <4 x i32>
  %228 = getelementptr inbounds i8, i8* %133, i64 28
  %229 = bitcast i8* %228 to <4 x i8>*
  %230 = load <4 x i8>, <4 x i8>* %229, align 1
  %231 = zext <4 x i8> %230 to <4 x i32>
  %232 = sub nsw <4 x i32> %227, %231
  %233 = icmp slt <4 x i32> %232, zeroinitializer
  %234 = sub nsw <4 x i32> zeroinitializer, %232
  %235 = select <4 x i1> %233, <4 x i32> %234, <4 x i32> %232
  %236 = add <4 x i32> %235, %223
  %237 = shufflevector <4 x i32> %236, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %238 = add <4 x i32> %236, %237
  %239 = shufflevector <4 x i32> %238, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %240 = add <4 x i32> %238, %239
  %241 = extractelement <4 x i32> %240, i32 0
  %242 = getelementptr inbounds i8, i8* %132, i64 %6
  %243 = getelementptr inbounds i8, i8* %133, i64 %7
  %244 = add nuw nsw i32 %131, 1
  %245 = icmp eq i32 %244, 64
  br i1 %245, label %246, label %129

246:                                              ; preds = %129
  %247 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %241, i32* %247, align 4
  %248 = getelementptr inbounds i8*, i8** %2, i64 2
  %249 = load i8*, i8** %248, align 8
  br label %250

250:                                              ; preds = %246, %250
  %251 = phi i32 [ 0, %246 ], [ %362, %250 ]
  %252 = phi i32 [ 0, %246 ], [ %365, %250 ]
  %253 = phi i8* [ %0, %246 ], [ %363, %250 ]
  %254 = phi i8* [ %249, %246 ], [ %364, %250 ]
  %255 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %251, i32 0
  %256 = bitcast i8* %253 to <4 x i8>*
  %257 = load <4 x i8>, <4 x i8>* %256, align 1
  %258 = zext <4 x i8> %257 to <4 x i32>
  %259 = bitcast i8* %254 to <4 x i8>*
  %260 = load <4 x i8>, <4 x i8>* %259, align 1
  %261 = zext <4 x i8> %260 to <4 x i32>
  %262 = sub nsw <4 x i32> %258, %261
  %263 = icmp slt <4 x i32> %262, zeroinitializer
  %264 = sub nsw <4 x i32> zeroinitializer, %262
  %265 = select <4 x i1> %263, <4 x i32> %264, <4 x i32> %262
  %266 = add <4 x i32> %265, %255
  %267 = getelementptr inbounds i8, i8* %253, i64 4
  %268 = bitcast i8* %267 to <4 x i8>*
  %269 = load <4 x i8>, <4 x i8>* %268, align 1
  %270 = zext <4 x i8> %269 to <4 x i32>
  %271 = getelementptr inbounds i8, i8* %254, i64 4
  %272 = bitcast i8* %271 to <4 x i8>*
  %273 = load <4 x i8>, <4 x i8>* %272, align 1
  %274 = zext <4 x i8> %273 to <4 x i32>
  %275 = sub nsw <4 x i32> %270, %274
  %276 = icmp slt <4 x i32> %275, zeroinitializer
  %277 = sub nsw <4 x i32> zeroinitializer, %275
  %278 = select <4 x i1> %276, <4 x i32> %277, <4 x i32> %275
  %279 = add <4 x i32> %278, %266
  %280 = getelementptr inbounds i8, i8* %253, i64 8
  %281 = bitcast i8* %280 to <4 x i8>*
  %282 = load <4 x i8>, <4 x i8>* %281, align 1
  %283 = zext <4 x i8> %282 to <4 x i32>
  %284 = getelementptr inbounds i8, i8* %254, i64 8
  %285 = bitcast i8* %284 to <4 x i8>*
  %286 = load <4 x i8>, <4 x i8>* %285, align 1
  %287 = zext <4 x i8> %286 to <4 x i32>
  %288 = sub nsw <4 x i32> %283, %287
  %289 = icmp slt <4 x i32> %288, zeroinitializer
  %290 = sub nsw <4 x i32> zeroinitializer, %288
  %291 = select <4 x i1> %289, <4 x i32> %290, <4 x i32> %288
  %292 = add <4 x i32> %291, %279
  %293 = getelementptr inbounds i8, i8* %253, i64 12
  %294 = bitcast i8* %293 to <4 x i8>*
  %295 = load <4 x i8>, <4 x i8>* %294, align 1
  %296 = zext <4 x i8> %295 to <4 x i32>
  %297 = getelementptr inbounds i8, i8* %254, i64 12
  %298 = bitcast i8* %297 to <4 x i8>*
  %299 = load <4 x i8>, <4 x i8>* %298, align 1
  %300 = zext <4 x i8> %299 to <4 x i32>
  %301 = sub nsw <4 x i32> %296, %300
  %302 = icmp slt <4 x i32> %301, zeroinitializer
  %303 = sub nsw <4 x i32> zeroinitializer, %301
  %304 = select <4 x i1> %302, <4 x i32> %303, <4 x i32> %301
  %305 = add <4 x i32> %304, %292
  %306 = getelementptr inbounds i8, i8* %253, i64 16
  %307 = bitcast i8* %306 to <4 x i8>*
  %308 = load <4 x i8>, <4 x i8>* %307, align 1
  %309 = zext <4 x i8> %308 to <4 x i32>
  %310 = getelementptr inbounds i8, i8* %254, i64 16
  %311 = bitcast i8* %310 to <4 x i8>*
  %312 = load <4 x i8>, <4 x i8>* %311, align 1
  %313 = zext <4 x i8> %312 to <4 x i32>
  %314 = sub nsw <4 x i32> %309, %313
  %315 = icmp slt <4 x i32> %314, zeroinitializer
  %316 = sub nsw <4 x i32> zeroinitializer, %314
  %317 = select <4 x i1> %315, <4 x i32> %316, <4 x i32> %314
  %318 = add <4 x i32> %317, %305
  %319 = getelementptr inbounds i8, i8* %253, i64 20
  %320 = bitcast i8* %319 to <4 x i8>*
  %321 = load <4 x i8>, <4 x i8>* %320, align 1
  %322 = zext <4 x i8> %321 to <4 x i32>
  %323 = getelementptr inbounds i8, i8* %254, i64 20
  %324 = bitcast i8* %323 to <4 x i8>*
  %325 = load <4 x i8>, <4 x i8>* %324, align 1
  %326 = zext <4 x i8> %325 to <4 x i32>
  %327 = sub nsw <4 x i32> %322, %326
  %328 = icmp slt <4 x i32> %327, zeroinitializer
  %329 = sub nsw <4 x i32> zeroinitializer, %327
  %330 = select <4 x i1> %328, <4 x i32> %329, <4 x i32> %327
  %331 = add <4 x i32> %330, %318
  %332 = getelementptr inbounds i8, i8* %253, i64 24
  %333 = bitcast i8* %332 to <4 x i8>*
  %334 = load <4 x i8>, <4 x i8>* %333, align 1
  %335 = zext <4 x i8> %334 to <4 x i32>
  %336 = getelementptr inbounds i8, i8* %254, i64 24
  %337 = bitcast i8* %336 to <4 x i8>*
  %338 = load <4 x i8>, <4 x i8>* %337, align 1
  %339 = zext <4 x i8> %338 to <4 x i32>
  %340 = sub nsw <4 x i32> %335, %339
  %341 = icmp slt <4 x i32> %340, zeroinitializer
  %342 = sub nsw <4 x i32> zeroinitializer, %340
  %343 = select <4 x i1> %341, <4 x i32> %342, <4 x i32> %340
  %344 = add <4 x i32> %343, %331
  %345 = getelementptr inbounds i8, i8* %253, i64 28
  %346 = bitcast i8* %345 to <4 x i8>*
  %347 = load <4 x i8>, <4 x i8>* %346, align 1
  %348 = zext <4 x i8> %347 to <4 x i32>
  %349 = getelementptr inbounds i8, i8* %254, i64 28
  %350 = bitcast i8* %349 to <4 x i8>*
  %351 = load <4 x i8>, <4 x i8>* %350, align 1
  %352 = zext <4 x i8> %351 to <4 x i32>
  %353 = sub nsw <4 x i32> %348, %352
  %354 = icmp slt <4 x i32> %353, zeroinitializer
  %355 = sub nsw <4 x i32> zeroinitializer, %353
  %356 = select <4 x i1> %354, <4 x i32> %355, <4 x i32> %353
  %357 = add <4 x i32> %356, %344
  %358 = shufflevector <4 x i32> %357, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %359 = add <4 x i32> %357, %358
  %360 = shufflevector <4 x i32> %359, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %361 = add <4 x i32> %359, %360
  %362 = extractelement <4 x i32> %361, i32 0
  %363 = getelementptr inbounds i8, i8* %253, i64 %6
  %364 = getelementptr inbounds i8, i8* %254, i64 %7
  %365 = add nuw nsw i32 %252, 1
  %366 = icmp eq i32 %365, 64
  br i1 %366, label %367, label %250

367:                                              ; preds = %250
  %368 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %362, i32* %368, align 4
  %369 = getelementptr inbounds i8*, i8** %2, i64 3
  %370 = load i8*, i8** %369, align 8
  br label %371

371:                                              ; preds = %367, %371
  %372 = phi i32 [ 0, %367 ], [ %483, %371 ]
  %373 = phi i32 [ 0, %367 ], [ %486, %371 ]
  %374 = phi i8* [ %0, %367 ], [ %484, %371 ]
  %375 = phi i8* [ %370, %367 ], [ %485, %371 ]
  %376 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %372, i32 0
  %377 = bitcast i8* %374 to <4 x i8>*
  %378 = load <4 x i8>, <4 x i8>* %377, align 1
  %379 = zext <4 x i8> %378 to <4 x i32>
  %380 = bitcast i8* %375 to <4 x i8>*
  %381 = load <4 x i8>, <4 x i8>* %380, align 1
  %382 = zext <4 x i8> %381 to <4 x i32>
  %383 = sub nsw <4 x i32> %379, %382
  %384 = icmp slt <4 x i32> %383, zeroinitializer
  %385 = sub nsw <4 x i32> zeroinitializer, %383
  %386 = select <4 x i1> %384, <4 x i32> %385, <4 x i32> %383
  %387 = add <4 x i32> %386, %376
  %388 = getelementptr inbounds i8, i8* %374, i64 4
  %389 = bitcast i8* %388 to <4 x i8>*
  %390 = load <4 x i8>, <4 x i8>* %389, align 1
  %391 = zext <4 x i8> %390 to <4 x i32>
  %392 = getelementptr inbounds i8, i8* %375, i64 4
  %393 = bitcast i8* %392 to <4 x i8>*
  %394 = load <4 x i8>, <4 x i8>* %393, align 1
  %395 = zext <4 x i8> %394 to <4 x i32>
  %396 = sub nsw <4 x i32> %391, %395
  %397 = icmp slt <4 x i32> %396, zeroinitializer
  %398 = sub nsw <4 x i32> zeroinitializer, %396
  %399 = select <4 x i1> %397, <4 x i32> %398, <4 x i32> %396
  %400 = add <4 x i32> %399, %387
  %401 = getelementptr inbounds i8, i8* %374, i64 8
  %402 = bitcast i8* %401 to <4 x i8>*
  %403 = load <4 x i8>, <4 x i8>* %402, align 1
  %404 = zext <4 x i8> %403 to <4 x i32>
  %405 = getelementptr inbounds i8, i8* %375, i64 8
  %406 = bitcast i8* %405 to <4 x i8>*
  %407 = load <4 x i8>, <4 x i8>* %406, align 1
  %408 = zext <4 x i8> %407 to <4 x i32>
  %409 = sub nsw <4 x i32> %404, %408
  %410 = icmp slt <4 x i32> %409, zeroinitializer
  %411 = sub nsw <4 x i32> zeroinitializer, %409
  %412 = select <4 x i1> %410, <4 x i32> %411, <4 x i32> %409
  %413 = add <4 x i32> %412, %400
  %414 = getelementptr inbounds i8, i8* %374, i64 12
  %415 = bitcast i8* %414 to <4 x i8>*
  %416 = load <4 x i8>, <4 x i8>* %415, align 1
  %417 = zext <4 x i8> %416 to <4 x i32>
  %418 = getelementptr inbounds i8, i8* %375, i64 12
  %419 = bitcast i8* %418 to <4 x i8>*
  %420 = load <4 x i8>, <4 x i8>* %419, align 1
  %421 = zext <4 x i8> %420 to <4 x i32>
  %422 = sub nsw <4 x i32> %417, %421
  %423 = icmp slt <4 x i32> %422, zeroinitializer
  %424 = sub nsw <4 x i32> zeroinitializer, %422
  %425 = select <4 x i1> %423, <4 x i32> %424, <4 x i32> %422
  %426 = add <4 x i32> %425, %413
  %427 = getelementptr inbounds i8, i8* %374, i64 16
  %428 = bitcast i8* %427 to <4 x i8>*
  %429 = load <4 x i8>, <4 x i8>* %428, align 1
  %430 = zext <4 x i8> %429 to <4 x i32>
  %431 = getelementptr inbounds i8, i8* %375, i64 16
  %432 = bitcast i8* %431 to <4 x i8>*
  %433 = load <4 x i8>, <4 x i8>* %432, align 1
  %434 = zext <4 x i8> %433 to <4 x i32>
  %435 = sub nsw <4 x i32> %430, %434
  %436 = icmp slt <4 x i32> %435, zeroinitializer
  %437 = sub nsw <4 x i32> zeroinitializer, %435
  %438 = select <4 x i1> %436, <4 x i32> %437, <4 x i32> %435
  %439 = add <4 x i32> %438, %426
  %440 = getelementptr inbounds i8, i8* %374, i64 20
  %441 = bitcast i8* %440 to <4 x i8>*
  %442 = load <4 x i8>, <4 x i8>* %441, align 1
  %443 = zext <4 x i8> %442 to <4 x i32>
  %444 = getelementptr inbounds i8, i8* %375, i64 20
  %445 = bitcast i8* %444 to <4 x i8>*
  %446 = load <4 x i8>, <4 x i8>* %445, align 1
  %447 = zext <4 x i8> %446 to <4 x i32>
  %448 = sub nsw <4 x i32> %443, %447
  %449 = icmp slt <4 x i32> %448, zeroinitializer
  %450 = sub nsw <4 x i32> zeroinitializer, %448
  %451 = select <4 x i1> %449, <4 x i32> %450, <4 x i32> %448
  %452 = add <4 x i32> %451, %439
  %453 = getelementptr inbounds i8, i8* %374, i64 24
  %454 = bitcast i8* %453 to <4 x i8>*
  %455 = load <4 x i8>, <4 x i8>* %454, align 1
  %456 = zext <4 x i8> %455 to <4 x i32>
  %457 = getelementptr inbounds i8, i8* %375, i64 24
  %458 = bitcast i8* %457 to <4 x i8>*
  %459 = load <4 x i8>, <4 x i8>* %458, align 1
  %460 = zext <4 x i8> %459 to <4 x i32>
  %461 = sub nsw <4 x i32> %456, %460
  %462 = icmp slt <4 x i32> %461, zeroinitializer
  %463 = sub nsw <4 x i32> zeroinitializer, %461
  %464 = select <4 x i1> %462, <4 x i32> %463, <4 x i32> %461
  %465 = add <4 x i32> %464, %452
  %466 = getelementptr inbounds i8, i8* %374, i64 28
  %467 = bitcast i8* %466 to <4 x i8>*
  %468 = load <4 x i8>, <4 x i8>* %467, align 1
  %469 = zext <4 x i8> %468 to <4 x i32>
  %470 = getelementptr inbounds i8, i8* %375, i64 28
  %471 = bitcast i8* %470 to <4 x i8>*
  %472 = load <4 x i8>, <4 x i8>* %471, align 1
  %473 = zext <4 x i8> %472 to <4 x i32>
  %474 = sub nsw <4 x i32> %469, %473
  %475 = icmp slt <4 x i32> %474, zeroinitializer
  %476 = sub nsw <4 x i32> zeroinitializer, %474
  %477 = select <4 x i1> %475, <4 x i32> %476, <4 x i32> %474
  %478 = add <4 x i32> %477, %465
  %479 = shufflevector <4 x i32> %478, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %480 = add <4 x i32> %478, %479
  %481 = shufflevector <4 x i32> %480, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %482 = add <4 x i32> %480, %481
  %483 = extractelement <4 x i32> %482, i32 0
  %484 = getelementptr inbounds i8, i8* %374, i64 %6
  %485 = getelementptr inbounds i8, i8* %375, i64 %7
  %486 = add nuw nsw i32 %373, 1
  %487 = icmp eq i32 %486, 64
  br i1 %487, label %488, label %371

488:                                              ; preds = %371
  %489 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %483, i32* %489, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_sad32x32_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = sext i32 %1 to i64
  %6 = sext i32 %3 to i64
  br label %7

7:                                                ; preds = %4, %7
  %8 = phi i32 [ 0, %4 ], [ %119, %7 ]
  %9 = phi i32 [ 0, %4 ], [ %122, %7 ]
  %10 = phi i8* [ %0, %4 ], [ %120, %7 ]
  %11 = phi i8* [ %2, %4 ], [ %121, %7 ]
  %12 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %8, i32 0
  %13 = bitcast i8* %10 to <4 x i8>*
  %14 = load <4 x i8>, <4 x i8>* %13, align 1
  %15 = zext <4 x i8> %14 to <4 x i32>
  %16 = bitcast i8* %11 to <4 x i8>*
  %17 = load <4 x i8>, <4 x i8>* %16, align 1
  %18 = zext <4 x i8> %17 to <4 x i32>
  %19 = sub nsw <4 x i32> %15, %18
  %20 = icmp slt <4 x i32> %19, zeroinitializer
  %21 = sub nsw <4 x i32> zeroinitializer, %19
  %22 = select <4 x i1> %20, <4 x i32> %21, <4 x i32> %19
  %23 = add <4 x i32> %22, %12
  %24 = getelementptr inbounds i8, i8* %10, i64 4
  %25 = bitcast i8* %24 to <4 x i8>*
  %26 = load <4 x i8>, <4 x i8>* %25, align 1
  %27 = zext <4 x i8> %26 to <4 x i32>
  %28 = getelementptr inbounds i8, i8* %11, i64 4
  %29 = bitcast i8* %28 to <4 x i8>*
  %30 = load <4 x i8>, <4 x i8>* %29, align 1
  %31 = zext <4 x i8> %30 to <4 x i32>
  %32 = sub nsw <4 x i32> %27, %31
  %33 = icmp slt <4 x i32> %32, zeroinitializer
  %34 = sub nsw <4 x i32> zeroinitializer, %32
  %35 = select <4 x i1> %33, <4 x i32> %34, <4 x i32> %32
  %36 = add <4 x i32> %35, %23
  %37 = getelementptr inbounds i8, i8* %10, i64 8
  %38 = bitcast i8* %37 to <4 x i8>*
  %39 = load <4 x i8>, <4 x i8>* %38, align 1
  %40 = zext <4 x i8> %39 to <4 x i32>
  %41 = getelementptr inbounds i8, i8* %11, i64 8
  %42 = bitcast i8* %41 to <4 x i8>*
  %43 = load <4 x i8>, <4 x i8>* %42, align 1
  %44 = zext <4 x i8> %43 to <4 x i32>
  %45 = sub nsw <4 x i32> %40, %44
  %46 = icmp slt <4 x i32> %45, zeroinitializer
  %47 = sub nsw <4 x i32> zeroinitializer, %45
  %48 = select <4 x i1> %46, <4 x i32> %47, <4 x i32> %45
  %49 = add <4 x i32> %48, %36
  %50 = getelementptr inbounds i8, i8* %10, i64 12
  %51 = bitcast i8* %50 to <4 x i8>*
  %52 = load <4 x i8>, <4 x i8>* %51, align 1
  %53 = zext <4 x i8> %52 to <4 x i32>
  %54 = getelementptr inbounds i8, i8* %11, i64 12
  %55 = bitcast i8* %54 to <4 x i8>*
  %56 = load <4 x i8>, <4 x i8>* %55, align 1
  %57 = zext <4 x i8> %56 to <4 x i32>
  %58 = sub nsw <4 x i32> %53, %57
  %59 = icmp slt <4 x i32> %58, zeroinitializer
  %60 = sub nsw <4 x i32> zeroinitializer, %58
  %61 = select <4 x i1> %59, <4 x i32> %60, <4 x i32> %58
  %62 = add <4 x i32> %61, %49
  %63 = getelementptr inbounds i8, i8* %10, i64 16
  %64 = bitcast i8* %63 to <4 x i8>*
  %65 = load <4 x i8>, <4 x i8>* %64, align 1
  %66 = zext <4 x i8> %65 to <4 x i32>
  %67 = getelementptr inbounds i8, i8* %11, i64 16
  %68 = bitcast i8* %67 to <4 x i8>*
  %69 = load <4 x i8>, <4 x i8>* %68, align 1
  %70 = zext <4 x i8> %69 to <4 x i32>
  %71 = sub nsw <4 x i32> %66, %70
  %72 = icmp slt <4 x i32> %71, zeroinitializer
  %73 = sub nsw <4 x i32> zeroinitializer, %71
  %74 = select <4 x i1> %72, <4 x i32> %73, <4 x i32> %71
  %75 = add <4 x i32> %74, %62
  %76 = getelementptr inbounds i8, i8* %10, i64 20
  %77 = bitcast i8* %76 to <4 x i8>*
  %78 = load <4 x i8>, <4 x i8>* %77, align 1
  %79 = zext <4 x i8> %78 to <4 x i32>
  %80 = getelementptr inbounds i8, i8* %11, i64 20
  %81 = bitcast i8* %80 to <4 x i8>*
  %82 = load <4 x i8>, <4 x i8>* %81, align 1
  %83 = zext <4 x i8> %82 to <4 x i32>
  %84 = sub nsw <4 x i32> %79, %83
  %85 = icmp slt <4 x i32> %84, zeroinitializer
  %86 = sub nsw <4 x i32> zeroinitializer, %84
  %87 = select <4 x i1> %85, <4 x i32> %86, <4 x i32> %84
  %88 = add <4 x i32> %87, %75
  %89 = getelementptr inbounds i8, i8* %10, i64 24
  %90 = bitcast i8* %89 to <4 x i8>*
  %91 = load <4 x i8>, <4 x i8>* %90, align 1
  %92 = zext <4 x i8> %91 to <4 x i32>
  %93 = getelementptr inbounds i8, i8* %11, i64 24
  %94 = bitcast i8* %93 to <4 x i8>*
  %95 = load <4 x i8>, <4 x i8>* %94, align 1
  %96 = zext <4 x i8> %95 to <4 x i32>
  %97 = sub nsw <4 x i32> %92, %96
  %98 = icmp slt <4 x i32> %97, zeroinitializer
  %99 = sub nsw <4 x i32> zeroinitializer, %97
  %100 = select <4 x i1> %98, <4 x i32> %99, <4 x i32> %97
  %101 = add <4 x i32> %100, %88
  %102 = getelementptr inbounds i8, i8* %10, i64 28
  %103 = bitcast i8* %102 to <4 x i8>*
  %104 = load <4 x i8>, <4 x i8>* %103, align 1
  %105 = zext <4 x i8> %104 to <4 x i32>
  %106 = getelementptr inbounds i8, i8* %11, i64 28
  %107 = bitcast i8* %106 to <4 x i8>*
  %108 = load <4 x i8>, <4 x i8>* %107, align 1
  %109 = zext <4 x i8> %108 to <4 x i32>
  %110 = sub nsw <4 x i32> %105, %109
  %111 = icmp slt <4 x i32> %110, zeroinitializer
  %112 = sub nsw <4 x i32> zeroinitializer, %110
  %113 = select <4 x i1> %111, <4 x i32> %112, <4 x i32> %110
  %114 = add <4 x i32> %113, %101
  %115 = shufflevector <4 x i32> %114, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %116 = add <4 x i32> %114, %115
  %117 = shufflevector <4 x i32> %116, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %118 = add <4 x i32> %116, %117
  %119 = extractelement <4 x i32> %118, i32 0
  %120 = getelementptr inbounds i8, i8* %10, i64 %5
  %121 = getelementptr inbounds i8, i8* %11, i64 %6
  %122 = add nuw nsw i32 %9, 1
  %123 = icmp eq i32 %122, 32
  br i1 %123, label %124, label %7

124:                                              ; preds = %7
  ret i32 %119
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_sad32x32_avg_c(i8* nocapture readonly, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [1024 x i8], align 16
  %7 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 1024, i1 false)
  call void @vpx_comp_avg_pred_c(i8* nonnull %7, i8* %4, i32 32, i32 32, i8* %2, i32 %3) #5
  %8 = sext i32 %1 to i64
  br label %9

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %121, %9 ]
  %11 = phi i32 [ 0, %5 ], [ %124, %9 ]
  %12 = phi i8* [ %0, %5 ], [ %122, %9 ]
  %13 = phi i8* [ %7, %5 ], [ %123, %9 ]
  %14 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %10, i32 0
  %15 = bitcast i8* %12 to <4 x i8>*
  %16 = load <4 x i8>, <4 x i8>* %15, align 1
  %17 = zext <4 x i8> %16 to <4 x i32>
  %18 = bitcast i8* %13 to <4 x i8>*
  %19 = load <4 x i8>, <4 x i8>* %18, align 1
  %20 = zext <4 x i8> %19 to <4 x i32>
  %21 = sub nsw <4 x i32> %17, %20
  %22 = icmp slt <4 x i32> %21, zeroinitializer
  %23 = sub nsw <4 x i32> zeroinitializer, %21
  %24 = select <4 x i1> %22, <4 x i32> %23, <4 x i32> %21
  %25 = add <4 x i32> %24, %14
  %26 = getelementptr inbounds i8, i8* %12, i64 4
  %27 = bitcast i8* %26 to <4 x i8>*
  %28 = load <4 x i8>, <4 x i8>* %27, align 1
  %29 = zext <4 x i8> %28 to <4 x i32>
  %30 = getelementptr inbounds i8, i8* %13, i64 4
  %31 = bitcast i8* %30 to <4 x i8>*
  %32 = load <4 x i8>, <4 x i8>* %31, align 1
  %33 = zext <4 x i8> %32 to <4 x i32>
  %34 = sub nsw <4 x i32> %29, %33
  %35 = icmp slt <4 x i32> %34, zeroinitializer
  %36 = sub nsw <4 x i32> zeroinitializer, %34
  %37 = select <4 x i1> %35, <4 x i32> %36, <4 x i32> %34
  %38 = add <4 x i32> %37, %25
  %39 = getelementptr inbounds i8, i8* %12, i64 8
  %40 = bitcast i8* %39 to <4 x i8>*
  %41 = load <4 x i8>, <4 x i8>* %40, align 1
  %42 = zext <4 x i8> %41 to <4 x i32>
  %43 = getelementptr inbounds i8, i8* %13, i64 8
  %44 = bitcast i8* %43 to <4 x i8>*
  %45 = load <4 x i8>, <4 x i8>* %44, align 1
  %46 = zext <4 x i8> %45 to <4 x i32>
  %47 = sub nsw <4 x i32> %42, %46
  %48 = icmp slt <4 x i32> %47, zeroinitializer
  %49 = sub nsw <4 x i32> zeroinitializer, %47
  %50 = select <4 x i1> %48, <4 x i32> %49, <4 x i32> %47
  %51 = add <4 x i32> %50, %38
  %52 = getelementptr inbounds i8, i8* %12, i64 12
  %53 = bitcast i8* %52 to <4 x i8>*
  %54 = load <4 x i8>, <4 x i8>* %53, align 1
  %55 = zext <4 x i8> %54 to <4 x i32>
  %56 = getelementptr inbounds i8, i8* %13, i64 12
  %57 = bitcast i8* %56 to <4 x i8>*
  %58 = load <4 x i8>, <4 x i8>* %57, align 1
  %59 = zext <4 x i8> %58 to <4 x i32>
  %60 = sub nsw <4 x i32> %55, %59
  %61 = icmp slt <4 x i32> %60, zeroinitializer
  %62 = sub nsw <4 x i32> zeroinitializer, %60
  %63 = select <4 x i1> %61, <4 x i32> %62, <4 x i32> %60
  %64 = add <4 x i32> %63, %51
  %65 = getelementptr inbounds i8, i8* %12, i64 16
  %66 = bitcast i8* %65 to <4 x i8>*
  %67 = load <4 x i8>, <4 x i8>* %66, align 1
  %68 = zext <4 x i8> %67 to <4 x i32>
  %69 = getelementptr inbounds i8, i8* %13, i64 16
  %70 = bitcast i8* %69 to <4 x i8>*
  %71 = load <4 x i8>, <4 x i8>* %70, align 1
  %72 = zext <4 x i8> %71 to <4 x i32>
  %73 = sub nsw <4 x i32> %68, %72
  %74 = icmp slt <4 x i32> %73, zeroinitializer
  %75 = sub nsw <4 x i32> zeroinitializer, %73
  %76 = select <4 x i1> %74, <4 x i32> %75, <4 x i32> %73
  %77 = add <4 x i32> %76, %64
  %78 = getelementptr inbounds i8, i8* %12, i64 20
  %79 = bitcast i8* %78 to <4 x i8>*
  %80 = load <4 x i8>, <4 x i8>* %79, align 1
  %81 = zext <4 x i8> %80 to <4 x i32>
  %82 = getelementptr inbounds i8, i8* %13, i64 20
  %83 = bitcast i8* %82 to <4 x i8>*
  %84 = load <4 x i8>, <4 x i8>* %83, align 1
  %85 = zext <4 x i8> %84 to <4 x i32>
  %86 = sub nsw <4 x i32> %81, %85
  %87 = icmp slt <4 x i32> %86, zeroinitializer
  %88 = sub nsw <4 x i32> zeroinitializer, %86
  %89 = select <4 x i1> %87, <4 x i32> %88, <4 x i32> %86
  %90 = add <4 x i32> %89, %77
  %91 = getelementptr inbounds i8, i8* %12, i64 24
  %92 = bitcast i8* %91 to <4 x i8>*
  %93 = load <4 x i8>, <4 x i8>* %92, align 1
  %94 = zext <4 x i8> %93 to <4 x i32>
  %95 = getelementptr inbounds i8, i8* %13, i64 24
  %96 = bitcast i8* %95 to <4 x i8>*
  %97 = load <4 x i8>, <4 x i8>* %96, align 1
  %98 = zext <4 x i8> %97 to <4 x i32>
  %99 = sub nsw <4 x i32> %94, %98
  %100 = icmp slt <4 x i32> %99, zeroinitializer
  %101 = sub nsw <4 x i32> zeroinitializer, %99
  %102 = select <4 x i1> %100, <4 x i32> %101, <4 x i32> %99
  %103 = add <4 x i32> %102, %90
  %104 = getelementptr inbounds i8, i8* %12, i64 28
  %105 = bitcast i8* %104 to <4 x i8>*
  %106 = load <4 x i8>, <4 x i8>* %105, align 1
  %107 = zext <4 x i8> %106 to <4 x i32>
  %108 = getelementptr inbounds i8, i8* %13, i64 28
  %109 = bitcast i8* %108 to <4 x i8>*
  %110 = load <4 x i8>, <4 x i8>* %109, align 1
  %111 = zext <4 x i8> %110 to <4 x i32>
  %112 = sub nsw <4 x i32> %107, %111
  %113 = icmp slt <4 x i32> %112, zeroinitializer
  %114 = sub nsw <4 x i32> zeroinitializer, %112
  %115 = select <4 x i1> %113, <4 x i32> %114, <4 x i32> %112
  %116 = add <4 x i32> %115, %103
  %117 = shufflevector <4 x i32> %116, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %118 = add <4 x i32> %116, %117
  %119 = shufflevector <4 x i32> %118, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %120 = add <4 x i32> %118, %119
  %121 = extractelement <4 x i32> %120, i32 0
  %122 = getelementptr inbounds i8, i8* %12, i64 %8
  %123 = getelementptr inbounds i8, i8* %13, i64 32
  %124 = add nuw nsw i32 %11, 1
  %125 = icmp eq i32 %124, 32
  br i1 %125, label %126, label %9

126:                                              ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %7) #5
  ret i32 %121
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad32x32x8_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = sext i32 %1 to i64
  %7 = sext i32 %3 to i64
  br label %8

8:                                                ; preds = %5, %8
  %9 = phi i32 [ 0, %5 ], [ %120, %8 ]
  %10 = phi i32 [ 0, %5 ], [ %123, %8 ]
  %11 = phi i8* [ %0, %5 ], [ %121, %8 ]
  %12 = phi i8* [ %2, %5 ], [ %122, %8 ]
  %13 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %9, i32 0
  %14 = bitcast i8* %11 to <4 x i8>*
  %15 = load <4 x i8>, <4 x i8>* %14, align 1
  %16 = zext <4 x i8> %15 to <4 x i32>
  %17 = bitcast i8* %12 to <4 x i8>*
  %18 = load <4 x i8>, <4 x i8>* %17, align 1
  %19 = zext <4 x i8> %18 to <4 x i32>
  %20 = sub nsw <4 x i32> %16, %19
  %21 = icmp slt <4 x i32> %20, zeroinitializer
  %22 = sub nsw <4 x i32> zeroinitializer, %20
  %23 = select <4 x i1> %21, <4 x i32> %22, <4 x i32> %20
  %24 = add <4 x i32> %23, %13
  %25 = getelementptr inbounds i8, i8* %11, i64 4
  %26 = bitcast i8* %25 to <4 x i8>*
  %27 = load <4 x i8>, <4 x i8>* %26, align 1
  %28 = zext <4 x i8> %27 to <4 x i32>
  %29 = getelementptr inbounds i8, i8* %12, i64 4
  %30 = bitcast i8* %29 to <4 x i8>*
  %31 = load <4 x i8>, <4 x i8>* %30, align 1
  %32 = zext <4 x i8> %31 to <4 x i32>
  %33 = sub nsw <4 x i32> %28, %32
  %34 = icmp slt <4 x i32> %33, zeroinitializer
  %35 = sub nsw <4 x i32> zeroinitializer, %33
  %36 = select <4 x i1> %34, <4 x i32> %35, <4 x i32> %33
  %37 = add <4 x i32> %36, %24
  %38 = getelementptr inbounds i8, i8* %11, i64 8
  %39 = bitcast i8* %38 to <4 x i8>*
  %40 = load <4 x i8>, <4 x i8>* %39, align 1
  %41 = zext <4 x i8> %40 to <4 x i32>
  %42 = getelementptr inbounds i8, i8* %12, i64 8
  %43 = bitcast i8* %42 to <4 x i8>*
  %44 = load <4 x i8>, <4 x i8>* %43, align 1
  %45 = zext <4 x i8> %44 to <4 x i32>
  %46 = sub nsw <4 x i32> %41, %45
  %47 = icmp slt <4 x i32> %46, zeroinitializer
  %48 = sub nsw <4 x i32> zeroinitializer, %46
  %49 = select <4 x i1> %47, <4 x i32> %48, <4 x i32> %46
  %50 = add <4 x i32> %49, %37
  %51 = getelementptr inbounds i8, i8* %11, i64 12
  %52 = bitcast i8* %51 to <4 x i8>*
  %53 = load <4 x i8>, <4 x i8>* %52, align 1
  %54 = zext <4 x i8> %53 to <4 x i32>
  %55 = getelementptr inbounds i8, i8* %12, i64 12
  %56 = bitcast i8* %55 to <4 x i8>*
  %57 = load <4 x i8>, <4 x i8>* %56, align 1
  %58 = zext <4 x i8> %57 to <4 x i32>
  %59 = sub nsw <4 x i32> %54, %58
  %60 = icmp slt <4 x i32> %59, zeroinitializer
  %61 = sub nsw <4 x i32> zeroinitializer, %59
  %62 = select <4 x i1> %60, <4 x i32> %61, <4 x i32> %59
  %63 = add <4 x i32> %62, %50
  %64 = getelementptr inbounds i8, i8* %11, i64 16
  %65 = bitcast i8* %64 to <4 x i8>*
  %66 = load <4 x i8>, <4 x i8>* %65, align 1
  %67 = zext <4 x i8> %66 to <4 x i32>
  %68 = getelementptr inbounds i8, i8* %12, i64 16
  %69 = bitcast i8* %68 to <4 x i8>*
  %70 = load <4 x i8>, <4 x i8>* %69, align 1
  %71 = zext <4 x i8> %70 to <4 x i32>
  %72 = sub nsw <4 x i32> %67, %71
  %73 = icmp slt <4 x i32> %72, zeroinitializer
  %74 = sub nsw <4 x i32> zeroinitializer, %72
  %75 = select <4 x i1> %73, <4 x i32> %74, <4 x i32> %72
  %76 = add <4 x i32> %75, %63
  %77 = getelementptr inbounds i8, i8* %11, i64 20
  %78 = bitcast i8* %77 to <4 x i8>*
  %79 = load <4 x i8>, <4 x i8>* %78, align 1
  %80 = zext <4 x i8> %79 to <4 x i32>
  %81 = getelementptr inbounds i8, i8* %12, i64 20
  %82 = bitcast i8* %81 to <4 x i8>*
  %83 = load <4 x i8>, <4 x i8>* %82, align 1
  %84 = zext <4 x i8> %83 to <4 x i32>
  %85 = sub nsw <4 x i32> %80, %84
  %86 = icmp slt <4 x i32> %85, zeroinitializer
  %87 = sub nsw <4 x i32> zeroinitializer, %85
  %88 = select <4 x i1> %86, <4 x i32> %87, <4 x i32> %85
  %89 = add <4 x i32> %88, %76
  %90 = getelementptr inbounds i8, i8* %11, i64 24
  %91 = bitcast i8* %90 to <4 x i8>*
  %92 = load <4 x i8>, <4 x i8>* %91, align 1
  %93 = zext <4 x i8> %92 to <4 x i32>
  %94 = getelementptr inbounds i8, i8* %12, i64 24
  %95 = bitcast i8* %94 to <4 x i8>*
  %96 = load <4 x i8>, <4 x i8>* %95, align 1
  %97 = zext <4 x i8> %96 to <4 x i32>
  %98 = sub nsw <4 x i32> %93, %97
  %99 = icmp slt <4 x i32> %98, zeroinitializer
  %100 = sub nsw <4 x i32> zeroinitializer, %98
  %101 = select <4 x i1> %99, <4 x i32> %100, <4 x i32> %98
  %102 = add <4 x i32> %101, %89
  %103 = getelementptr inbounds i8, i8* %11, i64 28
  %104 = bitcast i8* %103 to <4 x i8>*
  %105 = load <4 x i8>, <4 x i8>* %104, align 1
  %106 = zext <4 x i8> %105 to <4 x i32>
  %107 = getelementptr inbounds i8, i8* %12, i64 28
  %108 = bitcast i8* %107 to <4 x i8>*
  %109 = load <4 x i8>, <4 x i8>* %108, align 1
  %110 = zext <4 x i8> %109 to <4 x i32>
  %111 = sub nsw <4 x i32> %106, %110
  %112 = icmp slt <4 x i32> %111, zeroinitializer
  %113 = sub nsw <4 x i32> zeroinitializer, %111
  %114 = select <4 x i1> %112, <4 x i32> %113, <4 x i32> %111
  %115 = add <4 x i32> %114, %102
  %116 = shufflevector <4 x i32> %115, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %117 = add <4 x i32> %115, %116
  %118 = shufflevector <4 x i32> %117, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %119 = add <4 x i32> %117, %118
  %120 = extractelement <4 x i32> %119, i32 0
  %121 = getelementptr inbounds i8, i8* %11, i64 %6
  %122 = getelementptr inbounds i8, i8* %12, i64 %7
  %123 = add nuw nsw i32 %10, 1
  %124 = icmp eq i32 %123, 32
  br i1 %124, label %125, label %8

125:                                              ; preds = %8
  store i32 %120, i32* %4, align 4
  %126 = getelementptr inbounds i8, i8* %2, i64 1
  br label %127

127:                                              ; preds = %125, %127
  %128 = phi i32 [ 0, %125 ], [ %239, %127 ]
  %129 = phi i32 [ 0, %125 ], [ %242, %127 ]
  %130 = phi i8* [ %0, %125 ], [ %240, %127 ]
  %131 = phi i8* [ %126, %125 ], [ %241, %127 ]
  %132 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %128, i32 0
  %133 = bitcast i8* %130 to <4 x i8>*
  %134 = load <4 x i8>, <4 x i8>* %133, align 1
  %135 = zext <4 x i8> %134 to <4 x i32>
  %136 = bitcast i8* %131 to <4 x i8>*
  %137 = load <4 x i8>, <4 x i8>* %136, align 1
  %138 = zext <4 x i8> %137 to <4 x i32>
  %139 = sub nsw <4 x i32> %135, %138
  %140 = icmp slt <4 x i32> %139, zeroinitializer
  %141 = sub nsw <4 x i32> zeroinitializer, %139
  %142 = select <4 x i1> %140, <4 x i32> %141, <4 x i32> %139
  %143 = add <4 x i32> %142, %132
  %144 = getelementptr inbounds i8, i8* %130, i64 4
  %145 = bitcast i8* %144 to <4 x i8>*
  %146 = load <4 x i8>, <4 x i8>* %145, align 1
  %147 = zext <4 x i8> %146 to <4 x i32>
  %148 = getelementptr inbounds i8, i8* %131, i64 4
  %149 = bitcast i8* %148 to <4 x i8>*
  %150 = load <4 x i8>, <4 x i8>* %149, align 1
  %151 = zext <4 x i8> %150 to <4 x i32>
  %152 = sub nsw <4 x i32> %147, %151
  %153 = icmp slt <4 x i32> %152, zeroinitializer
  %154 = sub nsw <4 x i32> zeroinitializer, %152
  %155 = select <4 x i1> %153, <4 x i32> %154, <4 x i32> %152
  %156 = add <4 x i32> %155, %143
  %157 = getelementptr inbounds i8, i8* %130, i64 8
  %158 = bitcast i8* %157 to <4 x i8>*
  %159 = load <4 x i8>, <4 x i8>* %158, align 1
  %160 = zext <4 x i8> %159 to <4 x i32>
  %161 = getelementptr inbounds i8, i8* %131, i64 8
  %162 = bitcast i8* %161 to <4 x i8>*
  %163 = load <4 x i8>, <4 x i8>* %162, align 1
  %164 = zext <4 x i8> %163 to <4 x i32>
  %165 = sub nsw <4 x i32> %160, %164
  %166 = icmp slt <4 x i32> %165, zeroinitializer
  %167 = sub nsw <4 x i32> zeroinitializer, %165
  %168 = select <4 x i1> %166, <4 x i32> %167, <4 x i32> %165
  %169 = add <4 x i32> %168, %156
  %170 = getelementptr inbounds i8, i8* %130, i64 12
  %171 = bitcast i8* %170 to <4 x i8>*
  %172 = load <4 x i8>, <4 x i8>* %171, align 1
  %173 = zext <4 x i8> %172 to <4 x i32>
  %174 = getelementptr inbounds i8, i8* %131, i64 12
  %175 = bitcast i8* %174 to <4 x i8>*
  %176 = load <4 x i8>, <4 x i8>* %175, align 1
  %177 = zext <4 x i8> %176 to <4 x i32>
  %178 = sub nsw <4 x i32> %173, %177
  %179 = icmp slt <4 x i32> %178, zeroinitializer
  %180 = sub nsw <4 x i32> zeroinitializer, %178
  %181 = select <4 x i1> %179, <4 x i32> %180, <4 x i32> %178
  %182 = add <4 x i32> %181, %169
  %183 = getelementptr inbounds i8, i8* %130, i64 16
  %184 = bitcast i8* %183 to <4 x i8>*
  %185 = load <4 x i8>, <4 x i8>* %184, align 1
  %186 = zext <4 x i8> %185 to <4 x i32>
  %187 = getelementptr inbounds i8, i8* %131, i64 16
  %188 = bitcast i8* %187 to <4 x i8>*
  %189 = load <4 x i8>, <4 x i8>* %188, align 1
  %190 = zext <4 x i8> %189 to <4 x i32>
  %191 = sub nsw <4 x i32> %186, %190
  %192 = icmp slt <4 x i32> %191, zeroinitializer
  %193 = sub nsw <4 x i32> zeroinitializer, %191
  %194 = select <4 x i1> %192, <4 x i32> %193, <4 x i32> %191
  %195 = add <4 x i32> %194, %182
  %196 = getelementptr inbounds i8, i8* %130, i64 20
  %197 = bitcast i8* %196 to <4 x i8>*
  %198 = load <4 x i8>, <4 x i8>* %197, align 1
  %199 = zext <4 x i8> %198 to <4 x i32>
  %200 = getelementptr inbounds i8, i8* %131, i64 20
  %201 = bitcast i8* %200 to <4 x i8>*
  %202 = load <4 x i8>, <4 x i8>* %201, align 1
  %203 = zext <4 x i8> %202 to <4 x i32>
  %204 = sub nsw <4 x i32> %199, %203
  %205 = icmp slt <4 x i32> %204, zeroinitializer
  %206 = sub nsw <4 x i32> zeroinitializer, %204
  %207 = select <4 x i1> %205, <4 x i32> %206, <4 x i32> %204
  %208 = add <4 x i32> %207, %195
  %209 = getelementptr inbounds i8, i8* %130, i64 24
  %210 = bitcast i8* %209 to <4 x i8>*
  %211 = load <4 x i8>, <4 x i8>* %210, align 1
  %212 = zext <4 x i8> %211 to <4 x i32>
  %213 = getelementptr inbounds i8, i8* %131, i64 24
  %214 = bitcast i8* %213 to <4 x i8>*
  %215 = load <4 x i8>, <4 x i8>* %214, align 1
  %216 = zext <4 x i8> %215 to <4 x i32>
  %217 = sub nsw <4 x i32> %212, %216
  %218 = icmp slt <4 x i32> %217, zeroinitializer
  %219 = sub nsw <4 x i32> zeroinitializer, %217
  %220 = select <4 x i1> %218, <4 x i32> %219, <4 x i32> %217
  %221 = add <4 x i32> %220, %208
  %222 = getelementptr inbounds i8, i8* %130, i64 28
  %223 = bitcast i8* %222 to <4 x i8>*
  %224 = load <4 x i8>, <4 x i8>* %223, align 1
  %225 = zext <4 x i8> %224 to <4 x i32>
  %226 = getelementptr inbounds i8, i8* %131, i64 28
  %227 = bitcast i8* %226 to <4 x i8>*
  %228 = load <4 x i8>, <4 x i8>* %227, align 1
  %229 = zext <4 x i8> %228 to <4 x i32>
  %230 = sub nsw <4 x i32> %225, %229
  %231 = icmp slt <4 x i32> %230, zeroinitializer
  %232 = sub nsw <4 x i32> zeroinitializer, %230
  %233 = select <4 x i1> %231, <4 x i32> %232, <4 x i32> %230
  %234 = add <4 x i32> %233, %221
  %235 = shufflevector <4 x i32> %234, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %236 = add <4 x i32> %234, %235
  %237 = shufflevector <4 x i32> %236, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %238 = add <4 x i32> %236, %237
  %239 = extractelement <4 x i32> %238, i32 0
  %240 = getelementptr inbounds i8, i8* %130, i64 %6
  %241 = getelementptr inbounds i8, i8* %131, i64 %7
  %242 = add nuw nsw i32 %129, 1
  %243 = icmp eq i32 %242, 32
  br i1 %243, label %244, label %127

244:                                              ; preds = %127
  %245 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %239, i32* %245, align 4
  %246 = getelementptr inbounds i8, i8* %2, i64 2
  br label %247

247:                                              ; preds = %244, %247
  %248 = phi i32 [ 0, %244 ], [ %359, %247 ]
  %249 = phi i32 [ 0, %244 ], [ %362, %247 ]
  %250 = phi i8* [ %0, %244 ], [ %360, %247 ]
  %251 = phi i8* [ %246, %244 ], [ %361, %247 ]
  %252 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %248, i32 0
  %253 = bitcast i8* %250 to <4 x i8>*
  %254 = load <4 x i8>, <4 x i8>* %253, align 1
  %255 = zext <4 x i8> %254 to <4 x i32>
  %256 = bitcast i8* %251 to <4 x i8>*
  %257 = load <4 x i8>, <4 x i8>* %256, align 1
  %258 = zext <4 x i8> %257 to <4 x i32>
  %259 = sub nsw <4 x i32> %255, %258
  %260 = icmp slt <4 x i32> %259, zeroinitializer
  %261 = sub nsw <4 x i32> zeroinitializer, %259
  %262 = select <4 x i1> %260, <4 x i32> %261, <4 x i32> %259
  %263 = add <4 x i32> %262, %252
  %264 = getelementptr inbounds i8, i8* %250, i64 4
  %265 = bitcast i8* %264 to <4 x i8>*
  %266 = load <4 x i8>, <4 x i8>* %265, align 1
  %267 = zext <4 x i8> %266 to <4 x i32>
  %268 = getelementptr inbounds i8, i8* %251, i64 4
  %269 = bitcast i8* %268 to <4 x i8>*
  %270 = load <4 x i8>, <4 x i8>* %269, align 1
  %271 = zext <4 x i8> %270 to <4 x i32>
  %272 = sub nsw <4 x i32> %267, %271
  %273 = icmp slt <4 x i32> %272, zeroinitializer
  %274 = sub nsw <4 x i32> zeroinitializer, %272
  %275 = select <4 x i1> %273, <4 x i32> %274, <4 x i32> %272
  %276 = add <4 x i32> %275, %263
  %277 = getelementptr inbounds i8, i8* %250, i64 8
  %278 = bitcast i8* %277 to <4 x i8>*
  %279 = load <4 x i8>, <4 x i8>* %278, align 1
  %280 = zext <4 x i8> %279 to <4 x i32>
  %281 = getelementptr inbounds i8, i8* %251, i64 8
  %282 = bitcast i8* %281 to <4 x i8>*
  %283 = load <4 x i8>, <4 x i8>* %282, align 1
  %284 = zext <4 x i8> %283 to <4 x i32>
  %285 = sub nsw <4 x i32> %280, %284
  %286 = icmp slt <4 x i32> %285, zeroinitializer
  %287 = sub nsw <4 x i32> zeroinitializer, %285
  %288 = select <4 x i1> %286, <4 x i32> %287, <4 x i32> %285
  %289 = add <4 x i32> %288, %276
  %290 = getelementptr inbounds i8, i8* %250, i64 12
  %291 = bitcast i8* %290 to <4 x i8>*
  %292 = load <4 x i8>, <4 x i8>* %291, align 1
  %293 = zext <4 x i8> %292 to <4 x i32>
  %294 = getelementptr inbounds i8, i8* %251, i64 12
  %295 = bitcast i8* %294 to <4 x i8>*
  %296 = load <4 x i8>, <4 x i8>* %295, align 1
  %297 = zext <4 x i8> %296 to <4 x i32>
  %298 = sub nsw <4 x i32> %293, %297
  %299 = icmp slt <4 x i32> %298, zeroinitializer
  %300 = sub nsw <4 x i32> zeroinitializer, %298
  %301 = select <4 x i1> %299, <4 x i32> %300, <4 x i32> %298
  %302 = add <4 x i32> %301, %289
  %303 = getelementptr inbounds i8, i8* %250, i64 16
  %304 = bitcast i8* %303 to <4 x i8>*
  %305 = load <4 x i8>, <4 x i8>* %304, align 1
  %306 = zext <4 x i8> %305 to <4 x i32>
  %307 = getelementptr inbounds i8, i8* %251, i64 16
  %308 = bitcast i8* %307 to <4 x i8>*
  %309 = load <4 x i8>, <4 x i8>* %308, align 1
  %310 = zext <4 x i8> %309 to <4 x i32>
  %311 = sub nsw <4 x i32> %306, %310
  %312 = icmp slt <4 x i32> %311, zeroinitializer
  %313 = sub nsw <4 x i32> zeroinitializer, %311
  %314 = select <4 x i1> %312, <4 x i32> %313, <4 x i32> %311
  %315 = add <4 x i32> %314, %302
  %316 = getelementptr inbounds i8, i8* %250, i64 20
  %317 = bitcast i8* %316 to <4 x i8>*
  %318 = load <4 x i8>, <4 x i8>* %317, align 1
  %319 = zext <4 x i8> %318 to <4 x i32>
  %320 = getelementptr inbounds i8, i8* %251, i64 20
  %321 = bitcast i8* %320 to <4 x i8>*
  %322 = load <4 x i8>, <4 x i8>* %321, align 1
  %323 = zext <4 x i8> %322 to <4 x i32>
  %324 = sub nsw <4 x i32> %319, %323
  %325 = icmp slt <4 x i32> %324, zeroinitializer
  %326 = sub nsw <4 x i32> zeroinitializer, %324
  %327 = select <4 x i1> %325, <4 x i32> %326, <4 x i32> %324
  %328 = add <4 x i32> %327, %315
  %329 = getelementptr inbounds i8, i8* %250, i64 24
  %330 = bitcast i8* %329 to <4 x i8>*
  %331 = load <4 x i8>, <4 x i8>* %330, align 1
  %332 = zext <4 x i8> %331 to <4 x i32>
  %333 = getelementptr inbounds i8, i8* %251, i64 24
  %334 = bitcast i8* %333 to <4 x i8>*
  %335 = load <4 x i8>, <4 x i8>* %334, align 1
  %336 = zext <4 x i8> %335 to <4 x i32>
  %337 = sub nsw <4 x i32> %332, %336
  %338 = icmp slt <4 x i32> %337, zeroinitializer
  %339 = sub nsw <4 x i32> zeroinitializer, %337
  %340 = select <4 x i1> %338, <4 x i32> %339, <4 x i32> %337
  %341 = add <4 x i32> %340, %328
  %342 = getelementptr inbounds i8, i8* %250, i64 28
  %343 = bitcast i8* %342 to <4 x i8>*
  %344 = load <4 x i8>, <4 x i8>* %343, align 1
  %345 = zext <4 x i8> %344 to <4 x i32>
  %346 = getelementptr inbounds i8, i8* %251, i64 28
  %347 = bitcast i8* %346 to <4 x i8>*
  %348 = load <4 x i8>, <4 x i8>* %347, align 1
  %349 = zext <4 x i8> %348 to <4 x i32>
  %350 = sub nsw <4 x i32> %345, %349
  %351 = icmp slt <4 x i32> %350, zeroinitializer
  %352 = sub nsw <4 x i32> zeroinitializer, %350
  %353 = select <4 x i1> %351, <4 x i32> %352, <4 x i32> %350
  %354 = add <4 x i32> %353, %341
  %355 = shufflevector <4 x i32> %354, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %356 = add <4 x i32> %354, %355
  %357 = shufflevector <4 x i32> %356, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %358 = add <4 x i32> %356, %357
  %359 = extractelement <4 x i32> %358, i32 0
  %360 = getelementptr inbounds i8, i8* %250, i64 %6
  %361 = getelementptr inbounds i8, i8* %251, i64 %7
  %362 = add nuw nsw i32 %249, 1
  %363 = icmp eq i32 %362, 32
  br i1 %363, label %364, label %247

364:                                              ; preds = %247
  %365 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %359, i32* %365, align 4
  %366 = getelementptr inbounds i8, i8* %2, i64 3
  br label %367

367:                                              ; preds = %364, %367
  %368 = phi i32 [ 0, %364 ], [ %479, %367 ]
  %369 = phi i32 [ 0, %364 ], [ %482, %367 ]
  %370 = phi i8* [ %0, %364 ], [ %480, %367 ]
  %371 = phi i8* [ %366, %364 ], [ %481, %367 ]
  %372 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %368, i32 0
  %373 = bitcast i8* %370 to <4 x i8>*
  %374 = load <4 x i8>, <4 x i8>* %373, align 1
  %375 = zext <4 x i8> %374 to <4 x i32>
  %376 = bitcast i8* %371 to <4 x i8>*
  %377 = load <4 x i8>, <4 x i8>* %376, align 1
  %378 = zext <4 x i8> %377 to <4 x i32>
  %379 = sub nsw <4 x i32> %375, %378
  %380 = icmp slt <4 x i32> %379, zeroinitializer
  %381 = sub nsw <4 x i32> zeroinitializer, %379
  %382 = select <4 x i1> %380, <4 x i32> %381, <4 x i32> %379
  %383 = add <4 x i32> %382, %372
  %384 = getelementptr inbounds i8, i8* %370, i64 4
  %385 = bitcast i8* %384 to <4 x i8>*
  %386 = load <4 x i8>, <4 x i8>* %385, align 1
  %387 = zext <4 x i8> %386 to <4 x i32>
  %388 = getelementptr inbounds i8, i8* %371, i64 4
  %389 = bitcast i8* %388 to <4 x i8>*
  %390 = load <4 x i8>, <4 x i8>* %389, align 1
  %391 = zext <4 x i8> %390 to <4 x i32>
  %392 = sub nsw <4 x i32> %387, %391
  %393 = icmp slt <4 x i32> %392, zeroinitializer
  %394 = sub nsw <4 x i32> zeroinitializer, %392
  %395 = select <4 x i1> %393, <4 x i32> %394, <4 x i32> %392
  %396 = add <4 x i32> %395, %383
  %397 = getelementptr inbounds i8, i8* %370, i64 8
  %398 = bitcast i8* %397 to <4 x i8>*
  %399 = load <4 x i8>, <4 x i8>* %398, align 1
  %400 = zext <4 x i8> %399 to <4 x i32>
  %401 = getelementptr inbounds i8, i8* %371, i64 8
  %402 = bitcast i8* %401 to <4 x i8>*
  %403 = load <4 x i8>, <4 x i8>* %402, align 1
  %404 = zext <4 x i8> %403 to <4 x i32>
  %405 = sub nsw <4 x i32> %400, %404
  %406 = icmp slt <4 x i32> %405, zeroinitializer
  %407 = sub nsw <4 x i32> zeroinitializer, %405
  %408 = select <4 x i1> %406, <4 x i32> %407, <4 x i32> %405
  %409 = add <4 x i32> %408, %396
  %410 = getelementptr inbounds i8, i8* %370, i64 12
  %411 = bitcast i8* %410 to <4 x i8>*
  %412 = load <4 x i8>, <4 x i8>* %411, align 1
  %413 = zext <4 x i8> %412 to <4 x i32>
  %414 = getelementptr inbounds i8, i8* %371, i64 12
  %415 = bitcast i8* %414 to <4 x i8>*
  %416 = load <4 x i8>, <4 x i8>* %415, align 1
  %417 = zext <4 x i8> %416 to <4 x i32>
  %418 = sub nsw <4 x i32> %413, %417
  %419 = icmp slt <4 x i32> %418, zeroinitializer
  %420 = sub nsw <4 x i32> zeroinitializer, %418
  %421 = select <4 x i1> %419, <4 x i32> %420, <4 x i32> %418
  %422 = add <4 x i32> %421, %409
  %423 = getelementptr inbounds i8, i8* %370, i64 16
  %424 = bitcast i8* %423 to <4 x i8>*
  %425 = load <4 x i8>, <4 x i8>* %424, align 1
  %426 = zext <4 x i8> %425 to <4 x i32>
  %427 = getelementptr inbounds i8, i8* %371, i64 16
  %428 = bitcast i8* %427 to <4 x i8>*
  %429 = load <4 x i8>, <4 x i8>* %428, align 1
  %430 = zext <4 x i8> %429 to <4 x i32>
  %431 = sub nsw <4 x i32> %426, %430
  %432 = icmp slt <4 x i32> %431, zeroinitializer
  %433 = sub nsw <4 x i32> zeroinitializer, %431
  %434 = select <4 x i1> %432, <4 x i32> %433, <4 x i32> %431
  %435 = add <4 x i32> %434, %422
  %436 = getelementptr inbounds i8, i8* %370, i64 20
  %437 = bitcast i8* %436 to <4 x i8>*
  %438 = load <4 x i8>, <4 x i8>* %437, align 1
  %439 = zext <4 x i8> %438 to <4 x i32>
  %440 = getelementptr inbounds i8, i8* %371, i64 20
  %441 = bitcast i8* %440 to <4 x i8>*
  %442 = load <4 x i8>, <4 x i8>* %441, align 1
  %443 = zext <4 x i8> %442 to <4 x i32>
  %444 = sub nsw <4 x i32> %439, %443
  %445 = icmp slt <4 x i32> %444, zeroinitializer
  %446 = sub nsw <4 x i32> zeroinitializer, %444
  %447 = select <4 x i1> %445, <4 x i32> %446, <4 x i32> %444
  %448 = add <4 x i32> %447, %435
  %449 = getelementptr inbounds i8, i8* %370, i64 24
  %450 = bitcast i8* %449 to <4 x i8>*
  %451 = load <4 x i8>, <4 x i8>* %450, align 1
  %452 = zext <4 x i8> %451 to <4 x i32>
  %453 = getelementptr inbounds i8, i8* %371, i64 24
  %454 = bitcast i8* %453 to <4 x i8>*
  %455 = load <4 x i8>, <4 x i8>* %454, align 1
  %456 = zext <4 x i8> %455 to <4 x i32>
  %457 = sub nsw <4 x i32> %452, %456
  %458 = icmp slt <4 x i32> %457, zeroinitializer
  %459 = sub nsw <4 x i32> zeroinitializer, %457
  %460 = select <4 x i1> %458, <4 x i32> %459, <4 x i32> %457
  %461 = add <4 x i32> %460, %448
  %462 = getelementptr inbounds i8, i8* %370, i64 28
  %463 = bitcast i8* %462 to <4 x i8>*
  %464 = load <4 x i8>, <4 x i8>* %463, align 1
  %465 = zext <4 x i8> %464 to <4 x i32>
  %466 = getelementptr inbounds i8, i8* %371, i64 28
  %467 = bitcast i8* %466 to <4 x i8>*
  %468 = load <4 x i8>, <4 x i8>* %467, align 1
  %469 = zext <4 x i8> %468 to <4 x i32>
  %470 = sub nsw <4 x i32> %465, %469
  %471 = icmp slt <4 x i32> %470, zeroinitializer
  %472 = sub nsw <4 x i32> zeroinitializer, %470
  %473 = select <4 x i1> %471, <4 x i32> %472, <4 x i32> %470
  %474 = add <4 x i32> %473, %461
  %475 = shufflevector <4 x i32> %474, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %476 = add <4 x i32> %474, %475
  %477 = shufflevector <4 x i32> %476, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %478 = add <4 x i32> %476, %477
  %479 = extractelement <4 x i32> %478, i32 0
  %480 = getelementptr inbounds i8, i8* %370, i64 %6
  %481 = getelementptr inbounds i8, i8* %371, i64 %7
  %482 = add nuw nsw i32 %369, 1
  %483 = icmp eq i32 %482, 32
  br i1 %483, label %484, label %367

484:                                              ; preds = %367
  %485 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %479, i32* %485, align 4
  %486 = getelementptr inbounds i8, i8* %2, i64 4
  br label %487

487:                                              ; preds = %484, %487
  %488 = phi i32 [ 0, %484 ], [ %599, %487 ]
  %489 = phi i32 [ 0, %484 ], [ %602, %487 ]
  %490 = phi i8* [ %0, %484 ], [ %600, %487 ]
  %491 = phi i8* [ %486, %484 ], [ %601, %487 ]
  %492 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %488, i32 0
  %493 = bitcast i8* %490 to <4 x i8>*
  %494 = load <4 x i8>, <4 x i8>* %493, align 1
  %495 = zext <4 x i8> %494 to <4 x i32>
  %496 = bitcast i8* %491 to <4 x i8>*
  %497 = load <4 x i8>, <4 x i8>* %496, align 1
  %498 = zext <4 x i8> %497 to <4 x i32>
  %499 = sub nsw <4 x i32> %495, %498
  %500 = icmp slt <4 x i32> %499, zeroinitializer
  %501 = sub nsw <4 x i32> zeroinitializer, %499
  %502 = select <4 x i1> %500, <4 x i32> %501, <4 x i32> %499
  %503 = add <4 x i32> %502, %492
  %504 = getelementptr inbounds i8, i8* %490, i64 4
  %505 = bitcast i8* %504 to <4 x i8>*
  %506 = load <4 x i8>, <4 x i8>* %505, align 1
  %507 = zext <4 x i8> %506 to <4 x i32>
  %508 = getelementptr inbounds i8, i8* %491, i64 4
  %509 = bitcast i8* %508 to <4 x i8>*
  %510 = load <4 x i8>, <4 x i8>* %509, align 1
  %511 = zext <4 x i8> %510 to <4 x i32>
  %512 = sub nsw <4 x i32> %507, %511
  %513 = icmp slt <4 x i32> %512, zeroinitializer
  %514 = sub nsw <4 x i32> zeroinitializer, %512
  %515 = select <4 x i1> %513, <4 x i32> %514, <4 x i32> %512
  %516 = add <4 x i32> %515, %503
  %517 = getelementptr inbounds i8, i8* %490, i64 8
  %518 = bitcast i8* %517 to <4 x i8>*
  %519 = load <4 x i8>, <4 x i8>* %518, align 1
  %520 = zext <4 x i8> %519 to <4 x i32>
  %521 = getelementptr inbounds i8, i8* %491, i64 8
  %522 = bitcast i8* %521 to <4 x i8>*
  %523 = load <4 x i8>, <4 x i8>* %522, align 1
  %524 = zext <4 x i8> %523 to <4 x i32>
  %525 = sub nsw <4 x i32> %520, %524
  %526 = icmp slt <4 x i32> %525, zeroinitializer
  %527 = sub nsw <4 x i32> zeroinitializer, %525
  %528 = select <4 x i1> %526, <4 x i32> %527, <4 x i32> %525
  %529 = add <4 x i32> %528, %516
  %530 = getelementptr inbounds i8, i8* %490, i64 12
  %531 = bitcast i8* %530 to <4 x i8>*
  %532 = load <4 x i8>, <4 x i8>* %531, align 1
  %533 = zext <4 x i8> %532 to <4 x i32>
  %534 = getelementptr inbounds i8, i8* %491, i64 12
  %535 = bitcast i8* %534 to <4 x i8>*
  %536 = load <4 x i8>, <4 x i8>* %535, align 1
  %537 = zext <4 x i8> %536 to <4 x i32>
  %538 = sub nsw <4 x i32> %533, %537
  %539 = icmp slt <4 x i32> %538, zeroinitializer
  %540 = sub nsw <4 x i32> zeroinitializer, %538
  %541 = select <4 x i1> %539, <4 x i32> %540, <4 x i32> %538
  %542 = add <4 x i32> %541, %529
  %543 = getelementptr inbounds i8, i8* %490, i64 16
  %544 = bitcast i8* %543 to <4 x i8>*
  %545 = load <4 x i8>, <4 x i8>* %544, align 1
  %546 = zext <4 x i8> %545 to <4 x i32>
  %547 = getelementptr inbounds i8, i8* %491, i64 16
  %548 = bitcast i8* %547 to <4 x i8>*
  %549 = load <4 x i8>, <4 x i8>* %548, align 1
  %550 = zext <4 x i8> %549 to <4 x i32>
  %551 = sub nsw <4 x i32> %546, %550
  %552 = icmp slt <4 x i32> %551, zeroinitializer
  %553 = sub nsw <4 x i32> zeroinitializer, %551
  %554 = select <4 x i1> %552, <4 x i32> %553, <4 x i32> %551
  %555 = add <4 x i32> %554, %542
  %556 = getelementptr inbounds i8, i8* %490, i64 20
  %557 = bitcast i8* %556 to <4 x i8>*
  %558 = load <4 x i8>, <4 x i8>* %557, align 1
  %559 = zext <4 x i8> %558 to <4 x i32>
  %560 = getelementptr inbounds i8, i8* %491, i64 20
  %561 = bitcast i8* %560 to <4 x i8>*
  %562 = load <4 x i8>, <4 x i8>* %561, align 1
  %563 = zext <4 x i8> %562 to <4 x i32>
  %564 = sub nsw <4 x i32> %559, %563
  %565 = icmp slt <4 x i32> %564, zeroinitializer
  %566 = sub nsw <4 x i32> zeroinitializer, %564
  %567 = select <4 x i1> %565, <4 x i32> %566, <4 x i32> %564
  %568 = add <4 x i32> %567, %555
  %569 = getelementptr inbounds i8, i8* %490, i64 24
  %570 = bitcast i8* %569 to <4 x i8>*
  %571 = load <4 x i8>, <4 x i8>* %570, align 1
  %572 = zext <4 x i8> %571 to <4 x i32>
  %573 = getelementptr inbounds i8, i8* %491, i64 24
  %574 = bitcast i8* %573 to <4 x i8>*
  %575 = load <4 x i8>, <4 x i8>* %574, align 1
  %576 = zext <4 x i8> %575 to <4 x i32>
  %577 = sub nsw <4 x i32> %572, %576
  %578 = icmp slt <4 x i32> %577, zeroinitializer
  %579 = sub nsw <4 x i32> zeroinitializer, %577
  %580 = select <4 x i1> %578, <4 x i32> %579, <4 x i32> %577
  %581 = add <4 x i32> %580, %568
  %582 = getelementptr inbounds i8, i8* %490, i64 28
  %583 = bitcast i8* %582 to <4 x i8>*
  %584 = load <4 x i8>, <4 x i8>* %583, align 1
  %585 = zext <4 x i8> %584 to <4 x i32>
  %586 = getelementptr inbounds i8, i8* %491, i64 28
  %587 = bitcast i8* %586 to <4 x i8>*
  %588 = load <4 x i8>, <4 x i8>* %587, align 1
  %589 = zext <4 x i8> %588 to <4 x i32>
  %590 = sub nsw <4 x i32> %585, %589
  %591 = icmp slt <4 x i32> %590, zeroinitializer
  %592 = sub nsw <4 x i32> zeroinitializer, %590
  %593 = select <4 x i1> %591, <4 x i32> %592, <4 x i32> %590
  %594 = add <4 x i32> %593, %581
  %595 = shufflevector <4 x i32> %594, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %596 = add <4 x i32> %594, %595
  %597 = shufflevector <4 x i32> %596, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %598 = add <4 x i32> %596, %597
  %599 = extractelement <4 x i32> %598, i32 0
  %600 = getelementptr inbounds i8, i8* %490, i64 %6
  %601 = getelementptr inbounds i8, i8* %491, i64 %7
  %602 = add nuw nsw i32 %489, 1
  %603 = icmp eq i32 %602, 32
  br i1 %603, label %604, label %487

604:                                              ; preds = %487
  %605 = getelementptr inbounds i32, i32* %4, i64 4
  store i32 %599, i32* %605, align 4
  %606 = getelementptr inbounds i8, i8* %2, i64 5
  br label %607

607:                                              ; preds = %604, %607
  %608 = phi i32 [ 0, %604 ], [ %719, %607 ]
  %609 = phi i32 [ 0, %604 ], [ %722, %607 ]
  %610 = phi i8* [ %0, %604 ], [ %720, %607 ]
  %611 = phi i8* [ %606, %604 ], [ %721, %607 ]
  %612 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %608, i32 0
  %613 = bitcast i8* %610 to <4 x i8>*
  %614 = load <4 x i8>, <4 x i8>* %613, align 1
  %615 = zext <4 x i8> %614 to <4 x i32>
  %616 = bitcast i8* %611 to <4 x i8>*
  %617 = load <4 x i8>, <4 x i8>* %616, align 1
  %618 = zext <4 x i8> %617 to <4 x i32>
  %619 = sub nsw <4 x i32> %615, %618
  %620 = icmp slt <4 x i32> %619, zeroinitializer
  %621 = sub nsw <4 x i32> zeroinitializer, %619
  %622 = select <4 x i1> %620, <4 x i32> %621, <4 x i32> %619
  %623 = add <4 x i32> %622, %612
  %624 = getelementptr inbounds i8, i8* %610, i64 4
  %625 = bitcast i8* %624 to <4 x i8>*
  %626 = load <4 x i8>, <4 x i8>* %625, align 1
  %627 = zext <4 x i8> %626 to <4 x i32>
  %628 = getelementptr inbounds i8, i8* %611, i64 4
  %629 = bitcast i8* %628 to <4 x i8>*
  %630 = load <4 x i8>, <4 x i8>* %629, align 1
  %631 = zext <4 x i8> %630 to <4 x i32>
  %632 = sub nsw <4 x i32> %627, %631
  %633 = icmp slt <4 x i32> %632, zeroinitializer
  %634 = sub nsw <4 x i32> zeroinitializer, %632
  %635 = select <4 x i1> %633, <4 x i32> %634, <4 x i32> %632
  %636 = add <4 x i32> %635, %623
  %637 = getelementptr inbounds i8, i8* %610, i64 8
  %638 = bitcast i8* %637 to <4 x i8>*
  %639 = load <4 x i8>, <4 x i8>* %638, align 1
  %640 = zext <4 x i8> %639 to <4 x i32>
  %641 = getelementptr inbounds i8, i8* %611, i64 8
  %642 = bitcast i8* %641 to <4 x i8>*
  %643 = load <4 x i8>, <4 x i8>* %642, align 1
  %644 = zext <4 x i8> %643 to <4 x i32>
  %645 = sub nsw <4 x i32> %640, %644
  %646 = icmp slt <4 x i32> %645, zeroinitializer
  %647 = sub nsw <4 x i32> zeroinitializer, %645
  %648 = select <4 x i1> %646, <4 x i32> %647, <4 x i32> %645
  %649 = add <4 x i32> %648, %636
  %650 = getelementptr inbounds i8, i8* %610, i64 12
  %651 = bitcast i8* %650 to <4 x i8>*
  %652 = load <4 x i8>, <4 x i8>* %651, align 1
  %653 = zext <4 x i8> %652 to <4 x i32>
  %654 = getelementptr inbounds i8, i8* %611, i64 12
  %655 = bitcast i8* %654 to <4 x i8>*
  %656 = load <4 x i8>, <4 x i8>* %655, align 1
  %657 = zext <4 x i8> %656 to <4 x i32>
  %658 = sub nsw <4 x i32> %653, %657
  %659 = icmp slt <4 x i32> %658, zeroinitializer
  %660 = sub nsw <4 x i32> zeroinitializer, %658
  %661 = select <4 x i1> %659, <4 x i32> %660, <4 x i32> %658
  %662 = add <4 x i32> %661, %649
  %663 = getelementptr inbounds i8, i8* %610, i64 16
  %664 = bitcast i8* %663 to <4 x i8>*
  %665 = load <4 x i8>, <4 x i8>* %664, align 1
  %666 = zext <4 x i8> %665 to <4 x i32>
  %667 = getelementptr inbounds i8, i8* %611, i64 16
  %668 = bitcast i8* %667 to <4 x i8>*
  %669 = load <4 x i8>, <4 x i8>* %668, align 1
  %670 = zext <4 x i8> %669 to <4 x i32>
  %671 = sub nsw <4 x i32> %666, %670
  %672 = icmp slt <4 x i32> %671, zeroinitializer
  %673 = sub nsw <4 x i32> zeroinitializer, %671
  %674 = select <4 x i1> %672, <4 x i32> %673, <4 x i32> %671
  %675 = add <4 x i32> %674, %662
  %676 = getelementptr inbounds i8, i8* %610, i64 20
  %677 = bitcast i8* %676 to <4 x i8>*
  %678 = load <4 x i8>, <4 x i8>* %677, align 1
  %679 = zext <4 x i8> %678 to <4 x i32>
  %680 = getelementptr inbounds i8, i8* %611, i64 20
  %681 = bitcast i8* %680 to <4 x i8>*
  %682 = load <4 x i8>, <4 x i8>* %681, align 1
  %683 = zext <4 x i8> %682 to <4 x i32>
  %684 = sub nsw <4 x i32> %679, %683
  %685 = icmp slt <4 x i32> %684, zeroinitializer
  %686 = sub nsw <4 x i32> zeroinitializer, %684
  %687 = select <4 x i1> %685, <4 x i32> %686, <4 x i32> %684
  %688 = add <4 x i32> %687, %675
  %689 = getelementptr inbounds i8, i8* %610, i64 24
  %690 = bitcast i8* %689 to <4 x i8>*
  %691 = load <4 x i8>, <4 x i8>* %690, align 1
  %692 = zext <4 x i8> %691 to <4 x i32>
  %693 = getelementptr inbounds i8, i8* %611, i64 24
  %694 = bitcast i8* %693 to <4 x i8>*
  %695 = load <4 x i8>, <4 x i8>* %694, align 1
  %696 = zext <4 x i8> %695 to <4 x i32>
  %697 = sub nsw <4 x i32> %692, %696
  %698 = icmp slt <4 x i32> %697, zeroinitializer
  %699 = sub nsw <4 x i32> zeroinitializer, %697
  %700 = select <4 x i1> %698, <4 x i32> %699, <4 x i32> %697
  %701 = add <4 x i32> %700, %688
  %702 = getelementptr inbounds i8, i8* %610, i64 28
  %703 = bitcast i8* %702 to <4 x i8>*
  %704 = load <4 x i8>, <4 x i8>* %703, align 1
  %705 = zext <4 x i8> %704 to <4 x i32>
  %706 = getelementptr inbounds i8, i8* %611, i64 28
  %707 = bitcast i8* %706 to <4 x i8>*
  %708 = load <4 x i8>, <4 x i8>* %707, align 1
  %709 = zext <4 x i8> %708 to <4 x i32>
  %710 = sub nsw <4 x i32> %705, %709
  %711 = icmp slt <4 x i32> %710, zeroinitializer
  %712 = sub nsw <4 x i32> zeroinitializer, %710
  %713 = select <4 x i1> %711, <4 x i32> %712, <4 x i32> %710
  %714 = add <4 x i32> %713, %701
  %715 = shufflevector <4 x i32> %714, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %716 = add <4 x i32> %714, %715
  %717 = shufflevector <4 x i32> %716, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %718 = add <4 x i32> %716, %717
  %719 = extractelement <4 x i32> %718, i32 0
  %720 = getelementptr inbounds i8, i8* %610, i64 %6
  %721 = getelementptr inbounds i8, i8* %611, i64 %7
  %722 = add nuw nsw i32 %609, 1
  %723 = icmp eq i32 %722, 32
  br i1 %723, label %724, label %607

724:                                              ; preds = %607
  %725 = getelementptr inbounds i32, i32* %4, i64 5
  store i32 %719, i32* %725, align 4
  %726 = getelementptr inbounds i8, i8* %2, i64 6
  br label %727

727:                                              ; preds = %724, %727
  %728 = phi i32 [ 0, %724 ], [ %839, %727 ]
  %729 = phi i32 [ 0, %724 ], [ %842, %727 ]
  %730 = phi i8* [ %0, %724 ], [ %840, %727 ]
  %731 = phi i8* [ %726, %724 ], [ %841, %727 ]
  %732 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %728, i32 0
  %733 = bitcast i8* %730 to <4 x i8>*
  %734 = load <4 x i8>, <4 x i8>* %733, align 1
  %735 = zext <4 x i8> %734 to <4 x i32>
  %736 = bitcast i8* %731 to <4 x i8>*
  %737 = load <4 x i8>, <4 x i8>* %736, align 1
  %738 = zext <4 x i8> %737 to <4 x i32>
  %739 = sub nsw <4 x i32> %735, %738
  %740 = icmp slt <4 x i32> %739, zeroinitializer
  %741 = sub nsw <4 x i32> zeroinitializer, %739
  %742 = select <4 x i1> %740, <4 x i32> %741, <4 x i32> %739
  %743 = add <4 x i32> %742, %732
  %744 = getelementptr inbounds i8, i8* %730, i64 4
  %745 = bitcast i8* %744 to <4 x i8>*
  %746 = load <4 x i8>, <4 x i8>* %745, align 1
  %747 = zext <4 x i8> %746 to <4 x i32>
  %748 = getelementptr inbounds i8, i8* %731, i64 4
  %749 = bitcast i8* %748 to <4 x i8>*
  %750 = load <4 x i8>, <4 x i8>* %749, align 1
  %751 = zext <4 x i8> %750 to <4 x i32>
  %752 = sub nsw <4 x i32> %747, %751
  %753 = icmp slt <4 x i32> %752, zeroinitializer
  %754 = sub nsw <4 x i32> zeroinitializer, %752
  %755 = select <4 x i1> %753, <4 x i32> %754, <4 x i32> %752
  %756 = add <4 x i32> %755, %743
  %757 = getelementptr inbounds i8, i8* %730, i64 8
  %758 = bitcast i8* %757 to <4 x i8>*
  %759 = load <4 x i8>, <4 x i8>* %758, align 1
  %760 = zext <4 x i8> %759 to <4 x i32>
  %761 = getelementptr inbounds i8, i8* %731, i64 8
  %762 = bitcast i8* %761 to <4 x i8>*
  %763 = load <4 x i8>, <4 x i8>* %762, align 1
  %764 = zext <4 x i8> %763 to <4 x i32>
  %765 = sub nsw <4 x i32> %760, %764
  %766 = icmp slt <4 x i32> %765, zeroinitializer
  %767 = sub nsw <4 x i32> zeroinitializer, %765
  %768 = select <4 x i1> %766, <4 x i32> %767, <4 x i32> %765
  %769 = add <4 x i32> %768, %756
  %770 = getelementptr inbounds i8, i8* %730, i64 12
  %771 = bitcast i8* %770 to <4 x i8>*
  %772 = load <4 x i8>, <4 x i8>* %771, align 1
  %773 = zext <4 x i8> %772 to <4 x i32>
  %774 = getelementptr inbounds i8, i8* %731, i64 12
  %775 = bitcast i8* %774 to <4 x i8>*
  %776 = load <4 x i8>, <4 x i8>* %775, align 1
  %777 = zext <4 x i8> %776 to <4 x i32>
  %778 = sub nsw <4 x i32> %773, %777
  %779 = icmp slt <4 x i32> %778, zeroinitializer
  %780 = sub nsw <4 x i32> zeroinitializer, %778
  %781 = select <4 x i1> %779, <4 x i32> %780, <4 x i32> %778
  %782 = add <4 x i32> %781, %769
  %783 = getelementptr inbounds i8, i8* %730, i64 16
  %784 = bitcast i8* %783 to <4 x i8>*
  %785 = load <4 x i8>, <4 x i8>* %784, align 1
  %786 = zext <4 x i8> %785 to <4 x i32>
  %787 = getelementptr inbounds i8, i8* %731, i64 16
  %788 = bitcast i8* %787 to <4 x i8>*
  %789 = load <4 x i8>, <4 x i8>* %788, align 1
  %790 = zext <4 x i8> %789 to <4 x i32>
  %791 = sub nsw <4 x i32> %786, %790
  %792 = icmp slt <4 x i32> %791, zeroinitializer
  %793 = sub nsw <4 x i32> zeroinitializer, %791
  %794 = select <4 x i1> %792, <4 x i32> %793, <4 x i32> %791
  %795 = add <4 x i32> %794, %782
  %796 = getelementptr inbounds i8, i8* %730, i64 20
  %797 = bitcast i8* %796 to <4 x i8>*
  %798 = load <4 x i8>, <4 x i8>* %797, align 1
  %799 = zext <4 x i8> %798 to <4 x i32>
  %800 = getelementptr inbounds i8, i8* %731, i64 20
  %801 = bitcast i8* %800 to <4 x i8>*
  %802 = load <4 x i8>, <4 x i8>* %801, align 1
  %803 = zext <4 x i8> %802 to <4 x i32>
  %804 = sub nsw <4 x i32> %799, %803
  %805 = icmp slt <4 x i32> %804, zeroinitializer
  %806 = sub nsw <4 x i32> zeroinitializer, %804
  %807 = select <4 x i1> %805, <4 x i32> %806, <4 x i32> %804
  %808 = add <4 x i32> %807, %795
  %809 = getelementptr inbounds i8, i8* %730, i64 24
  %810 = bitcast i8* %809 to <4 x i8>*
  %811 = load <4 x i8>, <4 x i8>* %810, align 1
  %812 = zext <4 x i8> %811 to <4 x i32>
  %813 = getelementptr inbounds i8, i8* %731, i64 24
  %814 = bitcast i8* %813 to <4 x i8>*
  %815 = load <4 x i8>, <4 x i8>* %814, align 1
  %816 = zext <4 x i8> %815 to <4 x i32>
  %817 = sub nsw <4 x i32> %812, %816
  %818 = icmp slt <4 x i32> %817, zeroinitializer
  %819 = sub nsw <4 x i32> zeroinitializer, %817
  %820 = select <4 x i1> %818, <4 x i32> %819, <4 x i32> %817
  %821 = add <4 x i32> %820, %808
  %822 = getelementptr inbounds i8, i8* %730, i64 28
  %823 = bitcast i8* %822 to <4 x i8>*
  %824 = load <4 x i8>, <4 x i8>* %823, align 1
  %825 = zext <4 x i8> %824 to <4 x i32>
  %826 = getelementptr inbounds i8, i8* %731, i64 28
  %827 = bitcast i8* %826 to <4 x i8>*
  %828 = load <4 x i8>, <4 x i8>* %827, align 1
  %829 = zext <4 x i8> %828 to <4 x i32>
  %830 = sub nsw <4 x i32> %825, %829
  %831 = icmp slt <4 x i32> %830, zeroinitializer
  %832 = sub nsw <4 x i32> zeroinitializer, %830
  %833 = select <4 x i1> %831, <4 x i32> %832, <4 x i32> %830
  %834 = add <4 x i32> %833, %821
  %835 = shufflevector <4 x i32> %834, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %836 = add <4 x i32> %834, %835
  %837 = shufflevector <4 x i32> %836, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %838 = add <4 x i32> %836, %837
  %839 = extractelement <4 x i32> %838, i32 0
  %840 = getelementptr inbounds i8, i8* %730, i64 %6
  %841 = getelementptr inbounds i8, i8* %731, i64 %7
  %842 = add nuw nsw i32 %729, 1
  %843 = icmp eq i32 %842, 32
  br i1 %843, label %844, label %727

844:                                              ; preds = %727
  %845 = getelementptr inbounds i32, i32* %4, i64 6
  store i32 %839, i32* %845, align 4
  %846 = getelementptr inbounds i8, i8* %2, i64 7
  br label %847

847:                                              ; preds = %844, %847
  %848 = phi i32 [ 0, %844 ], [ %959, %847 ]
  %849 = phi i32 [ 0, %844 ], [ %962, %847 ]
  %850 = phi i8* [ %0, %844 ], [ %960, %847 ]
  %851 = phi i8* [ %846, %844 ], [ %961, %847 ]
  %852 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %848, i32 0
  %853 = bitcast i8* %850 to <4 x i8>*
  %854 = load <4 x i8>, <4 x i8>* %853, align 1
  %855 = zext <4 x i8> %854 to <4 x i32>
  %856 = bitcast i8* %851 to <4 x i8>*
  %857 = load <4 x i8>, <4 x i8>* %856, align 1
  %858 = zext <4 x i8> %857 to <4 x i32>
  %859 = sub nsw <4 x i32> %855, %858
  %860 = icmp slt <4 x i32> %859, zeroinitializer
  %861 = sub nsw <4 x i32> zeroinitializer, %859
  %862 = select <4 x i1> %860, <4 x i32> %861, <4 x i32> %859
  %863 = add <4 x i32> %862, %852
  %864 = getelementptr inbounds i8, i8* %850, i64 4
  %865 = bitcast i8* %864 to <4 x i8>*
  %866 = load <4 x i8>, <4 x i8>* %865, align 1
  %867 = zext <4 x i8> %866 to <4 x i32>
  %868 = getelementptr inbounds i8, i8* %851, i64 4
  %869 = bitcast i8* %868 to <4 x i8>*
  %870 = load <4 x i8>, <4 x i8>* %869, align 1
  %871 = zext <4 x i8> %870 to <4 x i32>
  %872 = sub nsw <4 x i32> %867, %871
  %873 = icmp slt <4 x i32> %872, zeroinitializer
  %874 = sub nsw <4 x i32> zeroinitializer, %872
  %875 = select <4 x i1> %873, <4 x i32> %874, <4 x i32> %872
  %876 = add <4 x i32> %875, %863
  %877 = getelementptr inbounds i8, i8* %850, i64 8
  %878 = bitcast i8* %877 to <4 x i8>*
  %879 = load <4 x i8>, <4 x i8>* %878, align 1
  %880 = zext <4 x i8> %879 to <4 x i32>
  %881 = getelementptr inbounds i8, i8* %851, i64 8
  %882 = bitcast i8* %881 to <4 x i8>*
  %883 = load <4 x i8>, <4 x i8>* %882, align 1
  %884 = zext <4 x i8> %883 to <4 x i32>
  %885 = sub nsw <4 x i32> %880, %884
  %886 = icmp slt <4 x i32> %885, zeroinitializer
  %887 = sub nsw <4 x i32> zeroinitializer, %885
  %888 = select <4 x i1> %886, <4 x i32> %887, <4 x i32> %885
  %889 = add <4 x i32> %888, %876
  %890 = getelementptr inbounds i8, i8* %850, i64 12
  %891 = bitcast i8* %890 to <4 x i8>*
  %892 = load <4 x i8>, <4 x i8>* %891, align 1
  %893 = zext <4 x i8> %892 to <4 x i32>
  %894 = getelementptr inbounds i8, i8* %851, i64 12
  %895 = bitcast i8* %894 to <4 x i8>*
  %896 = load <4 x i8>, <4 x i8>* %895, align 1
  %897 = zext <4 x i8> %896 to <4 x i32>
  %898 = sub nsw <4 x i32> %893, %897
  %899 = icmp slt <4 x i32> %898, zeroinitializer
  %900 = sub nsw <4 x i32> zeroinitializer, %898
  %901 = select <4 x i1> %899, <4 x i32> %900, <4 x i32> %898
  %902 = add <4 x i32> %901, %889
  %903 = getelementptr inbounds i8, i8* %850, i64 16
  %904 = bitcast i8* %903 to <4 x i8>*
  %905 = load <4 x i8>, <4 x i8>* %904, align 1
  %906 = zext <4 x i8> %905 to <4 x i32>
  %907 = getelementptr inbounds i8, i8* %851, i64 16
  %908 = bitcast i8* %907 to <4 x i8>*
  %909 = load <4 x i8>, <4 x i8>* %908, align 1
  %910 = zext <4 x i8> %909 to <4 x i32>
  %911 = sub nsw <4 x i32> %906, %910
  %912 = icmp slt <4 x i32> %911, zeroinitializer
  %913 = sub nsw <4 x i32> zeroinitializer, %911
  %914 = select <4 x i1> %912, <4 x i32> %913, <4 x i32> %911
  %915 = add <4 x i32> %914, %902
  %916 = getelementptr inbounds i8, i8* %850, i64 20
  %917 = bitcast i8* %916 to <4 x i8>*
  %918 = load <4 x i8>, <4 x i8>* %917, align 1
  %919 = zext <4 x i8> %918 to <4 x i32>
  %920 = getelementptr inbounds i8, i8* %851, i64 20
  %921 = bitcast i8* %920 to <4 x i8>*
  %922 = load <4 x i8>, <4 x i8>* %921, align 1
  %923 = zext <4 x i8> %922 to <4 x i32>
  %924 = sub nsw <4 x i32> %919, %923
  %925 = icmp slt <4 x i32> %924, zeroinitializer
  %926 = sub nsw <4 x i32> zeroinitializer, %924
  %927 = select <4 x i1> %925, <4 x i32> %926, <4 x i32> %924
  %928 = add <4 x i32> %927, %915
  %929 = getelementptr inbounds i8, i8* %850, i64 24
  %930 = bitcast i8* %929 to <4 x i8>*
  %931 = load <4 x i8>, <4 x i8>* %930, align 1
  %932 = zext <4 x i8> %931 to <4 x i32>
  %933 = getelementptr inbounds i8, i8* %851, i64 24
  %934 = bitcast i8* %933 to <4 x i8>*
  %935 = load <4 x i8>, <4 x i8>* %934, align 1
  %936 = zext <4 x i8> %935 to <4 x i32>
  %937 = sub nsw <4 x i32> %932, %936
  %938 = icmp slt <4 x i32> %937, zeroinitializer
  %939 = sub nsw <4 x i32> zeroinitializer, %937
  %940 = select <4 x i1> %938, <4 x i32> %939, <4 x i32> %937
  %941 = add <4 x i32> %940, %928
  %942 = getelementptr inbounds i8, i8* %850, i64 28
  %943 = bitcast i8* %942 to <4 x i8>*
  %944 = load <4 x i8>, <4 x i8>* %943, align 1
  %945 = zext <4 x i8> %944 to <4 x i32>
  %946 = getelementptr inbounds i8, i8* %851, i64 28
  %947 = bitcast i8* %946 to <4 x i8>*
  %948 = load <4 x i8>, <4 x i8>* %947, align 1
  %949 = zext <4 x i8> %948 to <4 x i32>
  %950 = sub nsw <4 x i32> %945, %949
  %951 = icmp slt <4 x i32> %950, zeroinitializer
  %952 = sub nsw <4 x i32> zeroinitializer, %950
  %953 = select <4 x i1> %951, <4 x i32> %952, <4 x i32> %950
  %954 = add <4 x i32> %953, %941
  %955 = shufflevector <4 x i32> %954, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %956 = add <4 x i32> %954, %955
  %957 = shufflevector <4 x i32> %956, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %958 = add <4 x i32> %956, %957
  %959 = extractelement <4 x i32> %958, i32 0
  %960 = getelementptr inbounds i8, i8* %850, i64 %6
  %961 = getelementptr inbounds i8, i8* %851, i64 %7
  %962 = add nuw nsw i32 %849, 1
  %963 = icmp eq i32 %962, 32
  br i1 %963, label %964, label %847

964:                                              ; preds = %847
  %965 = getelementptr inbounds i32, i32* %4, i64 7
  store i32 %959, i32* %965, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad32x32x4d_c(i8* nocapture readonly, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = sext i32 %1 to i64
  %7 = sext i32 %3 to i64
  %8 = load i8*, i8** %2, align 8
  br label %9

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %121, %9 ]
  %11 = phi i32 [ 0, %5 ], [ %124, %9 ]
  %12 = phi i8* [ %0, %5 ], [ %122, %9 ]
  %13 = phi i8* [ %8, %5 ], [ %123, %9 ]
  %14 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %10, i32 0
  %15 = bitcast i8* %12 to <4 x i8>*
  %16 = load <4 x i8>, <4 x i8>* %15, align 1
  %17 = zext <4 x i8> %16 to <4 x i32>
  %18 = bitcast i8* %13 to <4 x i8>*
  %19 = load <4 x i8>, <4 x i8>* %18, align 1
  %20 = zext <4 x i8> %19 to <4 x i32>
  %21 = sub nsw <4 x i32> %17, %20
  %22 = icmp slt <4 x i32> %21, zeroinitializer
  %23 = sub nsw <4 x i32> zeroinitializer, %21
  %24 = select <4 x i1> %22, <4 x i32> %23, <4 x i32> %21
  %25 = add <4 x i32> %24, %14
  %26 = getelementptr inbounds i8, i8* %12, i64 4
  %27 = bitcast i8* %26 to <4 x i8>*
  %28 = load <4 x i8>, <4 x i8>* %27, align 1
  %29 = zext <4 x i8> %28 to <4 x i32>
  %30 = getelementptr inbounds i8, i8* %13, i64 4
  %31 = bitcast i8* %30 to <4 x i8>*
  %32 = load <4 x i8>, <4 x i8>* %31, align 1
  %33 = zext <4 x i8> %32 to <4 x i32>
  %34 = sub nsw <4 x i32> %29, %33
  %35 = icmp slt <4 x i32> %34, zeroinitializer
  %36 = sub nsw <4 x i32> zeroinitializer, %34
  %37 = select <4 x i1> %35, <4 x i32> %36, <4 x i32> %34
  %38 = add <4 x i32> %37, %25
  %39 = getelementptr inbounds i8, i8* %12, i64 8
  %40 = bitcast i8* %39 to <4 x i8>*
  %41 = load <4 x i8>, <4 x i8>* %40, align 1
  %42 = zext <4 x i8> %41 to <4 x i32>
  %43 = getelementptr inbounds i8, i8* %13, i64 8
  %44 = bitcast i8* %43 to <4 x i8>*
  %45 = load <4 x i8>, <4 x i8>* %44, align 1
  %46 = zext <4 x i8> %45 to <4 x i32>
  %47 = sub nsw <4 x i32> %42, %46
  %48 = icmp slt <4 x i32> %47, zeroinitializer
  %49 = sub nsw <4 x i32> zeroinitializer, %47
  %50 = select <4 x i1> %48, <4 x i32> %49, <4 x i32> %47
  %51 = add <4 x i32> %50, %38
  %52 = getelementptr inbounds i8, i8* %12, i64 12
  %53 = bitcast i8* %52 to <4 x i8>*
  %54 = load <4 x i8>, <4 x i8>* %53, align 1
  %55 = zext <4 x i8> %54 to <4 x i32>
  %56 = getelementptr inbounds i8, i8* %13, i64 12
  %57 = bitcast i8* %56 to <4 x i8>*
  %58 = load <4 x i8>, <4 x i8>* %57, align 1
  %59 = zext <4 x i8> %58 to <4 x i32>
  %60 = sub nsw <4 x i32> %55, %59
  %61 = icmp slt <4 x i32> %60, zeroinitializer
  %62 = sub nsw <4 x i32> zeroinitializer, %60
  %63 = select <4 x i1> %61, <4 x i32> %62, <4 x i32> %60
  %64 = add <4 x i32> %63, %51
  %65 = getelementptr inbounds i8, i8* %12, i64 16
  %66 = bitcast i8* %65 to <4 x i8>*
  %67 = load <4 x i8>, <4 x i8>* %66, align 1
  %68 = zext <4 x i8> %67 to <4 x i32>
  %69 = getelementptr inbounds i8, i8* %13, i64 16
  %70 = bitcast i8* %69 to <4 x i8>*
  %71 = load <4 x i8>, <4 x i8>* %70, align 1
  %72 = zext <4 x i8> %71 to <4 x i32>
  %73 = sub nsw <4 x i32> %68, %72
  %74 = icmp slt <4 x i32> %73, zeroinitializer
  %75 = sub nsw <4 x i32> zeroinitializer, %73
  %76 = select <4 x i1> %74, <4 x i32> %75, <4 x i32> %73
  %77 = add <4 x i32> %76, %64
  %78 = getelementptr inbounds i8, i8* %12, i64 20
  %79 = bitcast i8* %78 to <4 x i8>*
  %80 = load <4 x i8>, <4 x i8>* %79, align 1
  %81 = zext <4 x i8> %80 to <4 x i32>
  %82 = getelementptr inbounds i8, i8* %13, i64 20
  %83 = bitcast i8* %82 to <4 x i8>*
  %84 = load <4 x i8>, <4 x i8>* %83, align 1
  %85 = zext <4 x i8> %84 to <4 x i32>
  %86 = sub nsw <4 x i32> %81, %85
  %87 = icmp slt <4 x i32> %86, zeroinitializer
  %88 = sub nsw <4 x i32> zeroinitializer, %86
  %89 = select <4 x i1> %87, <4 x i32> %88, <4 x i32> %86
  %90 = add <4 x i32> %89, %77
  %91 = getelementptr inbounds i8, i8* %12, i64 24
  %92 = bitcast i8* %91 to <4 x i8>*
  %93 = load <4 x i8>, <4 x i8>* %92, align 1
  %94 = zext <4 x i8> %93 to <4 x i32>
  %95 = getelementptr inbounds i8, i8* %13, i64 24
  %96 = bitcast i8* %95 to <4 x i8>*
  %97 = load <4 x i8>, <4 x i8>* %96, align 1
  %98 = zext <4 x i8> %97 to <4 x i32>
  %99 = sub nsw <4 x i32> %94, %98
  %100 = icmp slt <4 x i32> %99, zeroinitializer
  %101 = sub nsw <4 x i32> zeroinitializer, %99
  %102 = select <4 x i1> %100, <4 x i32> %101, <4 x i32> %99
  %103 = add <4 x i32> %102, %90
  %104 = getelementptr inbounds i8, i8* %12, i64 28
  %105 = bitcast i8* %104 to <4 x i8>*
  %106 = load <4 x i8>, <4 x i8>* %105, align 1
  %107 = zext <4 x i8> %106 to <4 x i32>
  %108 = getelementptr inbounds i8, i8* %13, i64 28
  %109 = bitcast i8* %108 to <4 x i8>*
  %110 = load <4 x i8>, <4 x i8>* %109, align 1
  %111 = zext <4 x i8> %110 to <4 x i32>
  %112 = sub nsw <4 x i32> %107, %111
  %113 = icmp slt <4 x i32> %112, zeroinitializer
  %114 = sub nsw <4 x i32> zeroinitializer, %112
  %115 = select <4 x i1> %113, <4 x i32> %114, <4 x i32> %112
  %116 = add <4 x i32> %115, %103
  %117 = shufflevector <4 x i32> %116, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %118 = add <4 x i32> %116, %117
  %119 = shufflevector <4 x i32> %118, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %120 = add <4 x i32> %118, %119
  %121 = extractelement <4 x i32> %120, i32 0
  %122 = getelementptr inbounds i8, i8* %12, i64 %6
  %123 = getelementptr inbounds i8, i8* %13, i64 %7
  %124 = add nuw nsw i32 %11, 1
  %125 = icmp eq i32 %124, 32
  br i1 %125, label %126, label %9

126:                                              ; preds = %9
  store i32 %121, i32* %4, align 4
  %127 = getelementptr inbounds i8*, i8** %2, i64 1
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %126, %129
  %130 = phi i32 [ 0, %126 ], [ %241, %129 ]
  %131 = phi i32 [ 0, %126 ], [ %244, %129 ]
  %132 = phi i8* [ %0, %126 ], [ %242, %129 ]
  %133 = phi i8* [ %128, %126 ], [ %243, %129 ]
  %134 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %130, i32 0
  %135 = bitcast i8* %132 to <4 x i8>*
  %136 = load <4 x i8>, <4 x i8>* %135, align 1
  %137 = zext <4 x i8> %136 to <4 x i32>
  %138 = bitcast i8* %133 to <4 x i8>*
  %139 = load <4 x i8>, <4 x i8>* %138, align 1
  %140 = zext <4 x i8> %139 to <4 x i32>
  %141 = sub nsw <4 x i32> %137, %140
  %142 = icmp slt <4 x i32> %141, zeroinitializer
  %143 = sub nsw <4 x i32> zeroinitializer, %141
  %144 = select <4 x i1> %142, <4 x i32> %143, <4 x i32> %141
  %145 = add <4 x i32> %144, %134
  %146 = getelementptr inbounds i8, i8* %132, i64 4
  %147 = bitcast i8* %146 to <4 x i8>*
  %148 = load <4 x i8>, <4 x i8>* %147, align 1
  %149 = zext <4 x i8> %148 to <4 x i32>
  %150 = getelementptr inbounds i8, i8* %133, i64 4
  %151 = bitcast i8* %150 to <4 x i8>*
  %152 = load <4 x i8>, <4 x i8>* %151, align 1
  %153 = zext <4 x i8> %152 to <4 x i32>
  %154 = sub nsw <4 x i32> %149, %153
  %155 = icmp slt <4 x i32> %154, zeroinitializer
  %156 = sub nsw <4 x i32> zeroinitializer, %154
  %157 = select <4 x i1> %155, <4 x i32> %156, <4 x i32> %154
  %158 = add <4 x i32> %157, %145
  %159 = getelementptr inbounds i8, i8* %132, i64 8
  %160 = bitcast i8* %159 to <4 x i8>*
  %161 = load <4 x i8>, <4 x i8>* %160, align 1
  %162 = zext <4 x i8> %161 to <4 x i32>
  %163 = getelementptr inbounds i8, i8* %133, i64 8
  %164 = bitcast i8* %163 to <4 x i8>*
  %165 = load <4 x i8>, <4 x i8>* %164, align 1
  %166 = zext <4 x i8> %165 to <4 x i32>
  %167 = sub nsw <4 x i32> %162, %166
  %168 = icmp slt <4 x i32> %167, zeroinitializer
  %169 = sub nsw <4 x i32> zeroinitializer, %167
  %170 = select <4 x i1> %168, <4 x i32> %169, <4 x i32> %167
  %171 = add <4 x i32> %170, %158
  %172 = getelementptr inbounds i8, i8* %132, i64 12
  %173 = bitcast i8* %172 to <4 x i8>*
  %174 = load <4 x i8>, <4 x i8>* %173, align 1
  %175 = zext <4 x i8> %174 to <4 x i32>
  %176 = getelementptr inbounds i8, i8* %133, i64 12
  %177 = bitcast i8* %176 to <4 x i8>*
  %178 = load <4 x i8>, <4 x i8>* %177, align 1
  %179 = zext <4 x i8> %178 to <4 x i32>
  %180 = sub nsw <4 x i32> %175, %179
  %181 = icmp slt <4 x i32> %180, zeroinitializer
  %182 = sub nsw <4 x i32> zeroinitializer, %180
  %183 = select <4 x i1> %181, <4 x i32> %182, <4 x i32> %180
  %184 = add <4 x i32> %183, %171
  %185 = getelementptr inbounds i8, i8* %132, i64 16
  %186 = bitcast i8* %185 to <4 x i8>*
  %187 = load <4 x i8>, <4 x i8>* %186, align 1
  %188 = zext <4 x i8> %187 to <4 x i32>
  %189 = getelementptr inbounds i8, i8* %133, i64 16
  %190 = bitcast i8* %189 to <4 x i8>*
  %191 = load <4 x i8>, <4 x i8>* %190, align 1
  %192 = zext <4 x i8> %191 to <4 x i32>
  %193 = sub nsw <4 x i32> %188, %192
  %194 = icmp slt <4 x i32> %193, zeroinitializer
  %195 = sub nsw <4 x i32> zeroinitializer, %193
  %196 = select <4 x i1> %194, <4 x i32> %195, <4 x i32> %193
  %197 = add <4 x i32> %196, %184
  %198 = getelementptr inbounds i8, i8* %132, i64 20
  %199 = bitcast i8* %198 to <4 x i8>*
  %200 = load <4 x i8>, <4 x i8>* %199, align 1
  %201 = zext <4 x i8> %200 to <4 x i32>
  %202 = getelementptr inbounds i8, i8* %133, i64 20
  %203 = bitcast i8* %202 to <4 x i8>*
  %204 = load <4 x i8>, <4 x i8>* %203, align 1
  %205 = zext <4 x i8> %204 to <4 x i32>
  %206 = sub nsw <4 x i32> %201, %205
  %207 = icmp slt <4 x i32> %206, zeroinitializer
  %208 = sub nsw <4 x i32> zeroinitializer, %206
  %209 = select <4 x i1> %207, <4 x i32> %208, <4 x i32> %206
  %210 = add <4 x i32> %209, %197
  %211 = getelementptr inbounds i8, i8* %132, i64 24
  %212 = bitcast i8* %211 to <4 x i8>*
  %213 = load <4 x i8>, <4 x i8>* %212, align 1
  %214 = zext <4 x i8> %213 to <4 x i32>
  %215 = getelementptr inbounds i8, i8* %133, i64 24
  %216 = bitcast i8* %215 to <4 x i8>*
  %217 = load <4 x i8>, <4 x i8>* %216, align 1
  %218 = zext <4 x i8> %217 to <4 x i32>
  %219 = sub nsw <4 x i32> %214, %218
  %220 = icmp slt <4 x i32> %219, zeroinitializer
  %221 = sub nsw <4 x i32> zeroinitializer, %219
  %222 = select <4 x i1> %220, <4 x i32> %221, <4 x i32> %219
  %223 = add <4 x i32> %222, %210
  %224 = getelementptr inbounds i8, i8* %132, i64 28
  %225 = bitcast i8* %224 to <4 x i8>*
  %226 = load <4 x i8>, <4 x i8>* %225, align 1
  %227 = zext <4 x i8> %226 to <4 x i32>
  %228 = getelementptr inbounds i8, i8* %133, i64 28
  %229 = bitcast i8* %228 to <4 x i8>*
  %230 = load <4 x i8>, <4 x i8>* %229, align 1
  %231 = zext <4 x i8> %230 to <4 x i32>
  %232 = sub nsw <4 x i32> %227, %231
  %233 = icmp slt <4 x i32> %232, zeroinitializer
  %234 = sub nsw <4 x i32> zeroinitializer, %232
  %235 = select <4 x i1> %233, <4 x i32> %234, <4 x i32> %232
  %236 = add <4 x i32> %235, %223
  %237 = shufflevector <4 x i32> %236, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %238 = add <4 x i32> %236, %237
  %239 = shufflevector <4 x i32> %238, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %240 = add <4 x i32> %238, %239
  %241 = extractelement <4 x i32> %240, i32 0
  %242 = getelementptr inbounds i8, i8* %132, i64 %6
  %243 = getelementptr inbounds i8, i8* %133, i64 %7
  %244 = add nuw nsw i32 %131, 1
  %245 = icmp eq i32 %244, 32
  br i1 %245, label %246, label %129

246:                                              ; preds = %129
  %247 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %241, i32* %247, align 4
  %248 = getelementptr inbounds i8*, i8** %2, i64 2
  %249 = load i8*, i8** %248, align 8
  br label %250

250:                                              ; preds = %246, %250
  %251 = phi i32 [ 0, %246 ], [ %362, %250 ]
  %252 = phi i32 [ 0, %246 ], [ %365, %250 ]
  %253 = phi i8* [ %0, %246 ], [ %363, %250 ]
  %254 = phi i8* [ %249, %246 ], [ %364, %250 ]
  %255 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %251, i32 0
  %256 = bitcast i8* %253 to <4 x i8>*
  %257 = load <4 x i8>, <4 x i8>* %256, align 1
  %258 = zext <4 x i8> %257 to <4 x i32>
  %259 = bitcast i8* %254 to <4 x i8>*
  %260 = load <4 x i8>, <4 x i8>* %259, align 1
  %261 = zext <4 x i8> %260 to <4 x i32>
  %262 = sub nsw <4 x i32> %258, %261
  %263 = icmp slt <4 x i32> %262, zeroinitializer
  %264 = sub nsw <4 x i32> zeroinitializer, %262
  %265 = select <4 x i1> %263, <4 x i32> %264, <4 x i32> %262
  %266 = add <4 x i32> %265, %255
  %267 = getelementptr inbounds i8, i8* %253, i64 4
  %268 = bitcast i8* %267 to <4 x i8>*
  %269 = load <4 x i8>, <4 x i8>* %268, align 1
  %270 = zext <4 x i8> %269 to <4 x i32>
  %271 = getelementptr inbounds i8, i8* %254, i64 4
  %272 = bitcast i8* %271 to <4 x i8>*
  %273 = load <4 x i8>, <4 x i8>* %272, align 1
  %274 = zext <4 x i8> %273 to <4 x i32>
  %275 = sub nsw <4 x i32> %270, %274
  %276 = icmp slt <4 x i32> %275, zeroinitializer
  %277 = sub nsw <4 x i32> zeroinitializer, %275
  %278 = select <4 x i1> %276, <4 x i32> %277, <4 x i32> %275
  %279 = add <4 x i32> %278, %266
  %280 = getelementptr inbounds i8, i8* %253, i64 8
  %281 = bitcast i8* %280 to <4 x i8>*
  %282 = load <4 x i8>, <4 x i8>* %281, align 1
  %283 = zext <4 x i8> %282 to <4 x i32>
  %284 = getelementptr inbounds i8, i8* %254, i64 8
  %285 = bitcast i8* %284 to <4 x i8>*
  %286 = load <4 x i8>, <4 x i8>* %285, align 1
  %287 = zext <4 x i8> %286 to <4 x i32>
  %288 = sub nsw <4 x i32> %283, %287
  %289 = icmp slt <4 x i32> %288, zeroinitializer
  %290 = sub nsw <4 x i32> zeroinitializer, %288
  %291 = select <4 x i1> %289, <4 x i32> %290, <4 x i32> %288
  %292 = add <4 x i32> %291, %279
  %293 = getelementptr inbounds i8, i8* %253, i64 12
  %294 = bitcast i8* %293 to <4 x i8>*
  %295 = load <4 x i8>, <4 x i8>* %294, align 1
  %296 = zext <4 x i8> %295 to <4 x i32>
  %297 = getelementptr inbounds i8, i8* %254, i64 12
  %298 = bitcast i8* %297 to <4 x i8>*
  %299 = load <4 x i8>, <4 x i8>* %298, align 1
  %300 = zext <4 x i8> %299 to <4 x i32>
  %301 = sub nsw <4 x i32> %296, %300
  %302 = icmp slt <4 x i32> %301, zeroinitializer
  %303 = sub nsw <4 x i32> zeroinitializer, %301
  %304 = select <4 x i1> %302, <4 x i32> %303, <4 x i32> %301
  %305 = add <4 x i32> %304, %292
  %306 = getelementptr inbounds i8, i8* %253, i64 16
  %307 = bitcast i8* %306 to <4 x i8>*
  %308 = load <4 x i8>, <4 x i8>* %307, align 1
  %309 = zext <4 x i8> %308 to <4 x i32>
  %310 = getelementptr inbounds i8, i8* %254, i64 16
  %311 = bitcast i8* %310 to <4 x i8>*
  %312 = load <4 x i8>, <4 x i8>* %311, align 1
  %313 = zext <4 x i8> %312 to <4 x i32>
  %314 = sub nsw <4 x i32> %309, %313
  %315 = icmp slt <4 x i32> %314, zeroinitializer
  %316 = sub nsw <4 x i32> zeroinitializer, %314
  %317 = select <4 x i1> %315, <4 x i32> %316, <4 x i32> %314
  %318 = add <4 x i32> %317, %305
  %319 = getelementptr inbounds i8, i8* %253, i64 20
  %320 = bitcast i8* %319 to <4 x i8>*
  %321 = load <4 x i8>, <4 x i8>* %320, align 1
  %322 = zext <4 x i8> %321 to <4 x i32>
  %323 = getelementptr inbounds i8, i8* %254, i64 20
  %324 = bitcast i8* %323 to <4 x i8>*
  %325 = load <4 x i8>, <4 x i8>* %324, align 1
  %326 = zext <4 x i8> %325 to <4 x i32>
  %327 = sub nsw <4 x i32> %322, %326
  %328 = icmp slt <4 x i32> %327, zeroinitializer
  %329 = sub nsw <4 x i32> zeroinitializer, %327
  %330 = select <4 x i1> %328, <4 x i32> %329, <4 x i32> %327
  %331 = add <4 x i32> %330, %318
  %332 = getelementptr inbounds i8, i8* %253, i64 24
  %333 = bitcast i8* %332 to <4 x i8>*
  %334 = load <4 x i8>, <4 x i8>* %333, align 1
  %335 = zext <4 x i8> %334 to <4 x i32>
  %336 = getelementptr inbounds i8, i8* %254, i64 24
  %337 = bitcast i8* %336 to <4 x i8>*
  %338 = load <4 x i8>, <4 x i8>* %337, align 1
  %339 = zext <4 x i8> %338 to <4 x i32>
  %340 = sub nsw <4 x i32> %335, %339
  %341 = icmp slt <4 x i32> %340, zeroinitializer
  %342 = sub nsw <4 x i32> zeroinitializer, %340
  %343 = select <4 x i1> %341, <4 x i32> %342, <4 x i32> %340
  %344 = add <4 x i32> %343, %331
  %345 = getelementptr inbounds i8, i8* %253, i64 28
  %346 = bitcast i8* %345 to <4 x i8>*
  %347 = load <4 x i8>, <4 x i8>* %346, align 1
  %348 = zext <4 x i8> %347 to <4 x i32>
  %349 = getelementptr inbounds i8, i8* %254, i64 28
  %350 = bitcast i8* %349 to <4 x i8>*
  %351 = load <4 x i8>, <4 x i8>* %350, align 1
  %352 = zext <4 x i8> %351 to <4 x i32>
  %353 = sub nsw <4 x i32> %348, %352
  %354 = icmp slt <4 x i32> %353, zeroinitializer
  %355 = sub nsw <4 x i32> zeroinitializer, %353
  %356 = select <4 x i1> %354, <4 x i32> %355, <4 x i32> %353
  %357 = add <4 x i32> %356, %344
  %358 = shufflevector <4 x i32> %357, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %359 = add <4 x i32> %357, %358
  %360 = shufflevector <4 x i32> %359, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %361 = add <4 x i32> %359, %360
  %362 = extractelement <4 x i32> %361, i32 0
  %363 = getelementptr inbounds i8, i8* %253, i64 %6
  %364 = getelementptr inbounds i8, i8* %254, i64 %7
  %365 = add nuw nsw i32 %252, 1
  %366 = icmp eq i32 %365, 32
  br i1 %366, label %367, label %250

367:                                              ; preds = %250
  %368 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %362, i32* %368, align 4
  %369 = getelementptr inbounds i8*, i8** %2, i64 3
  %370 = load i8*, i8** %369, align 8
  br label %371

371:                                              ; preds = %367, %371
  %372 = phi i32 [ 0, %367 ], [ %483, %371 ]
  %373 = phi i32 [ 0, %367 ], [ %486, %371 ]
  %374 = phi i8* [ %0, %367 ], [ %484, %371 ]
  %375 = phi i8* [ %370, %367 ], [ %485, %371 ]
  %376 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %372, i32 0
  %377 = bitcast i8* %374 to <4 x i8>*
  %378 = load <4 x i8>, <4 x i8>* %377, align 1
  %379 = zext <4 x i8> %378 to <4 x i32>
  %380 = bitcast i8* %375 to <4 x i8>*
  %381 = load <4 x i8>, <4 x i8>* %380, align 1
  %382 = zext <4 x i8> %381 to <4 x i32>
  %383 = sub nsw <4 x i32> %379, %382
  %384 = icmp slt <4 x i32> %383, zeroinitializer
  %385 = sub nsw <4 x i32> zeroinitializer, %383
  %386 = select <4 x i1> %384, <4 x i32> %385, <4 x i32> %383
  %387 = add <4 x i32> %386, %376
  %388 = getelementptr inbounds i8, i8* %374, i64 4
  %389 = bitcast i8* %388 to <4 x i8>*
  %390 = load <4 x i8>, <4 x i8>* %389, align 1
  %391 = zext <4 x i8> %390 to <4 x i32>
  %392 = getelementptr inbounds i8, i8* %375, i64 4
  %393 = bitcast i8* %392 to <4 x i8>*
  %394 = load <4 x i8>, <4 x i8>* %393, align 1
  %395 = zext <4 x i8> %394 to <4 x i32>
  %396 = sub nsw <4 x i32> %391, %395
  %397 = icmp slt <4 x i32> %396, zeroinitializer
  %398 = sub nsw <4 x i32> zeroinitializer, %396
  %399 = select <4 x i1> %397, <4 x i32> %398, <4 x i32> %396
  %400 = add <4 x i32> %399, %387
  %401 = getelementptr inbounds i8, i8* %374, i64 8
  %402 = bitcast i8* %401 to <4 x i8>*
  %403 = load <4 x i8>, <4 x i8>* %402, align 1
  %404 = zext <4 x i8> %403 to <4 x i32>
  %405 = getelementptr inbounds i8, i8* %375, i64 8
  %406 = bitcast i8* %405 to <4 x i8>*
  %407 = load <4 x i8>, <4 x i8>* %406, align 1
  %408 = zext <4 x i8> %407 to <4 x i32>
  %409 = sub nsw <4 x i32> %404, %408
  %410 = icmp slt <4 x i32> %409, zeroinitializer
  %411 = sub nsw <4 x i32> zeroinitializer, %409
  %412 = select <4 x i1> %410, <4 x i32> %411, <4 x i32> %409
  %413 = add <4 x i32> %412, %400
  %414 = getelementptr inbounds i8, i8* %374, i64 12
  %415 = bitcast i8* %414 to <4 x i8>*
  %416 = load <4 x i8>, <4 x i8>* %415, align 1
  %417 = zext <4 x i8> %416 to <4 x i32>
  %418 = getelementptr inbounds i8, i8* %375, i64 12
  %419 = bitcast i8* %418 to <4 x i8>*
  %420 = load <4 x i8>, <4 x i8>* %419, align 1
  %421 = zext <4 x i8> %420 to <4 x i32>
  %422 = sub nsw <4 x i32> %417, %421
  %423 = icmp slt <4 x i32> %422, zeroinitializer
  %424 = sub nsw <4 x i32> zeroinitializer, %422
  %425 = select <4 x i1> %423, <4 x i32> %424, <4 x i32> %422
  %426 = add <4 x i32> %425, %413
  %427 = getelementptr inbounds i8, i8* %374, i64 16
  %428 = bitcast i8* %427 to <4 x i8>*
  %429 = load <4 x i8>, <4 x i8>* %428, align 1
  %430 = zext <4 x i8> %429 to <4 x i32>
  %431 = getelementptr inbounds i8, i8* %375, i64 16
  %432 = bitcast i8* %431 to <4 x i8>*
  %433 = load <4 x i8>, <4 x i8>* %432, align 1
  %434 = zext <4 x i8> %433 to <4 x i32>
  %435 = sub nsw <4 x i32> %430, %434
  %436 = icmp slt <4 x i32> %435, zeroinitializer
  %437 = sub nsw <4 x i32> zeroinitializer, %435
  %438 = select <4 x i1> %436, <4 x i32> %437, <4 x i32> %435
  %439 = add <4 x i32> %438, %426
  %440 = getelementptr inbounds i8, i8* %374, i64 20
  %441 = bitcast i8* %440 to <4 x i8>*
  %442 = load <4 x i8>, <4 x i8>* %441, align 1
  %443 = zext <4 x i8> %442 to <4 x i32>
  %444 = getelementptr inbounds i8, i8* %375, i64 20
  %445 = bitcast i8* %444 to <4 x i8>*
  %446 = load <4 x i8>, <4 x i8>* %445, align 1
  %447 = zext <4 x i8> %446 to <4 x i32>
  %448 = sub nsw <4 x i32> %443, %447
  %449 = icmp slt <4 x i32> %448, zeroinitializer
  %450 = sub nsw <4 x i32> zeroinitializer, %448
  %451 = select <4 x i1> %449, <4 x i32> %450, <4 x i32> %448
  %452 = add <4 x i32> %451, %439
  %453 = getelementptr inbounds i8, i8* %374, i64 24
  %454 = bitcast i8* %453 to <4 x i8>*
  %455 = load <4 x i8>, <4 x i8>* %454, align 1
  %456 = zext <4 x i8> %455 to <4 x i32>
  %457 = getelementptr inbounds i8, i8* %375, i64 24
  %458 = bitcast i8* %457 to <4 x i8>*
  %459 = load <4 x i8>, <4 x i8>* %458, align 1
  %460 = zext <4 x i8> %459 to <4 x i32>
  %461 = sub nsw <4 x i32> %456, %460
  %462 = icmp slt <4 x i32> %461, zeroinitializer
  %463 = sub nsw <4 x i32> zeroinitializer, %461
  %464 = select <4 x i1> %462, <4 x i32> %463, <4 x i32> %461
  %465 = add <4 x i32> %464, %452
  %466 = getelementptr inbounds i8, i8* %374, i64 28
  %467 = bitcast i8* %466 to <4 x i8>*
  %468 = load <4 x i8>, <4 x i8>* %467, align 1
  %469 = zext <4 x i8> %468 to <4 x i32>
  %470 = getelementptr inbounds i8, i8* %375, i64 28
  %471 = bitcast i8* %470 to <4 x i8>*
  %472 = load <4 x i8>, <4 x i8>* %471, align 1
  %473 = zext <4 x i8> %472 to <4 x i32>
  %474 = sub nsw <4 x i32> %469, %473
  %475 = icmp slt <4 x i32> %474, zeroinitializer
  %476 = sub nsw <4 x i32> zeroinitializer, %474
  %477 = select <4 x i1> %475, <4 x i32> %476, <4 x i32> %474
  %478 = add <4 x i32> %477, %465
  %479 = shufflevector <4 x i32> %478, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %480 = add <4 x i32> %478, %479
  %481 = shufflevector <4 x i32> %480, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %482 = add <4 x i32> %480, %481
  %483 = extractelement <4 x i32> %482, i32 0
  %484 = getelementptr inbounds i8, i8* %374, i64 %6
  %485 = getelementptr inbounds i8, i8* %375, i64 %7
  %486 = add nuw nsw i32 %373, 1
  %487 = icmp eq i32 %486, 32
  br i1 %487, label %488, label %371

488:                                              ; preds = %371
  %489 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %483, i32* %489, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_sad32x16_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = sext i32 %1 to i64
  %6 = sext i32 %3 to i64
  br label %7

7:                                                ; preds = %4, %7
  %8 = phi i32 [ 0, %4 ], [ %119, %7 ]
  %9 = phi i32 [ 0, %4 ], [ %122, %7 ]
  %10 = phi i8* [ %0, %4 ], [ %120, %7 ]
  %11 = phi i8* [ %2, %4 ], [ %121, %7 ]
  %12 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %8, i32 0
  %13 = bitcast i8* %10 to <4 x i8>*
  %14 = load <4 x i8>, <4 x i8>* %13, align 1
  %15 = zext <4 x i8> %14 to <4 x i32>
  %16 = bitcast i8* %11 to <4 x i8>*
  %17 = load <4 x i8>, <4 x i8>* %16, align 1
  %18 = zext <4 x i8> %17 to <4 x i32>
  %19 = sub nsw <4 x i32> %15, %18
  %20 = icmp slt <4 x i32> %19, zeroinitializer
  %21 = sub nsw <4 x i32> zeroinitializer, %19
  %22 = select <4 x i1> %20, <4 x i32> %21, <4 x i32> %19
  %23 = add <4 x i32> %22, %12
  %24 = getelementptr inbounds i8, i8* %10, i64 4
  %25 = bitcast i8* %24 to <4 x i8>*
  %26 = load <4 x i8>, <4 x i8>* %25, align 1
  %27 = zext <4 x i8> %26 to <4 x i32>
  %28 = getelementptr inbounds i8, i8* %11, i64 4
  %29 = bitcast i8* %28 to <4 x i8>*
  %30 = load <4 x i8>, <4 x i8>* %29, align 1
  %31 = zext <4 x i8> %30 to <4 x i32>
  %32 = sub nsw <4 x i32> %27, %31
  %33 = icmp slt <4 x i32> %32, zeroinitializer
  %34 = sub nsw <4 x i32> zeroinitializer, %32
  %35 = select <4 x i1> %33, <4 x i32> %34, <4 x i32> %32
  %36 = add <4 x i32> %35, %23
  %37 = getelementptr inbounds i8, i8* %10, i64 8
  %38 = bitcast i8* %37 to <4 x i8>*
  %39 = load <4 x i8>, <4 x i8>* %38, align 1
  %40 = zext <4 x i8> %39 to <4 x i32>
  %41 = getelementptr inbounds i8, i8* %11, i64 8
  %42 = bitcast i8* %41 to <4 x i8>*
  %43 = load <4 x i8>, <4 x i8>* %42, align 1
  %44 = zext <4 x i8> %43 to <4 x i32>
  %45 = sub nsw <4 x i32> %40, %44
  %46 = icmp slt <4 x i32> %45, zeroinitializer
  %47 = sub nsw <4 x i32> zeroinitializer, %45
  %48 = select <4 x i1> %46, <4 x i32> %47, <4 x i32> %45
  %49 = add <4 x i32> %48, %36
  %50 = getelementptr inbounds i8, i8* %10, i64 12
  %51 = bitcast i8* %50 to <4 x i8>*
  %52 = load <4 x i8>, <4 x i8>* %51, align 1
  %53 = zext <4 x i8> %52 to <4 x i32>
  %54 = getelementptr inbounds i8, i8* %11, i64 12
  %55 = bitcast i8* %54 to <4 x i8>*
  %56 = load <4 x i8>, <4 x i8>* %55, align 1
  %57 = zext <4 x i8> %56 to <4 x i32>
  %58 = sub nsw <4 x i32> %53, %57
  %59 = icmp slt <4 x i32> %58, zeroinitializer
  %60 = sub nsw <4 x i32> zeroinitializer, %58
  %61 = select <4 x i1> %59, <4 x i32> %60, <4 x i32> %58
  %62 = add <4 x i32> %61, %49
  %63 = getelementptr inbounds i8, i8* %10, i64 16
  %64 = bitcast i8* %63 to <4 x i8>*
  %65 = load <4 x i8>, <4 x i8>* %64, align 1
  %66 = zext <4 x i8> %65 to <4 x i32>
  %67 = getelementptr inbounds i8, i8* %11, i64 16
  %68 = bitcast i8* %67 to <4 x i8>*
  %69 = load <4 x i8>, <4 x i8>* %68, align 1
  %70 = zext <4 x i8> %69 to <4 x i32>
  %71 = sub nsw <4 x i32> %66, %70
  %72 = icmp slt <4 x i32> %71, zeroinitializer
  %73 = sub nsw <4 x i32> zeroinitializer, %71
  %74 = select <4 x i1> %72, <4 x i32> %73, <4 x i32> %71
  %75 = add <4 x i32> %74, %62
  %76 = getelementptr inbounds i8, i8* %10, i64 20
  %77 = bitcast i8* %76 to <4 x i8>*
  %78 = load <4 x i8>, <4 x i8>* %77, align 1
  %79 = zext <4 x i8> %78 to <4 x i32>
  %80 = getelementptr inbounds i8, i8* %11, i64 20
  %81 = bitcast i8* %80 to <4 x i8>*
  %82 = load <4 x i8>, <4 x i8>* %81, align 1
  %83 = zext <4 x i8> %82 to <4 x i32>
  %84 = sub nsw <4 x i32> %79, %83
  %85 = icmp slt <4 x i32> %84, zeroinitializer
  %86 = sub nsw <4 x i32> zeroinitializer, %84
  %87 = select <4 x i1> %85, <4 x i32> %86, <4 x i32> %84
  %88 = add <4 x i32> %87, %75
  %89 = getelementptr inbounds i8, i8* %10, i64 24
  %90 = bitcast i8* %89 to <4 x i8>*
  %91 = load <4 x i8>, <4 x i8>* %90, align 1
  %92 = zext <4 x i8> %91 to <4 x i32>
  %93 = getelementptr inbounds i8, i8* %11, i64 24
  %94 = bitcast i8* %93 to <4 x i8>*
  %95 = load <4 x i8>, <4 x i8>* %94, align 1
  %96 = zext <4 x i8> %95 to <4 x i32>
  %97 = sub nsw <4 x i32> %92, %96
  %98 = icmp slt <4 x i32> %97, zeroinitializer
  %99 = sub nsw <4 x i32> zeroinitializer, %97
  %100 = select <4 x i1> %98, <4 x i32> %99, <4 x i32> %97
  %101 = add <4 x i32> %100, %88
  %102 = getelementptr inbounds i8, i8* %10, i64 28
  %103 = bitcast i8* %102 to <4 x i8>*
  %104 = load <4 x i8>, <4 x i8>* %103, align 1
  %105 = zext <4 x i8> %104 to <4 x i32>
  %106 = getelementptr inbounds i8, i8* %11, i64 28
  %107 = bitcast i8* %106 to <4 x i8>*
  %108 = load <4 x i8>, <4 x i8>* %107, align 1
  %109 = zext <4 x i8> %108 to <4 x i32>
  %110 = sub nsw <4 x i32> %105, %109
  %111 = icmp slt <4 x i32> %110, zeroinitializer
  %112 = sub nsw <4 x i32> zeroinitializer, %110
  %113 = select <4 x i1> %111, <4 x i32> %112, <4 x i32> %110
  %114 = add <4 x i32> %113, %101
  %115 = shufflevector <4 x i32> %114, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %116 = add <4 x i32> %114, %115
  %117 = shufflevector <4 x i32> %116, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %118 = add <4 x i32> %116, %117
  %119 = extractelement <4 x i32> %118, i32 0
  %120 = getelementptr inbounds i8, i8* %10, i64 %5
  %121 = getelementptr inbounds i8, i8* %11, i64 %6
  %122 = add nuw nsw i32 %9, 1
  %123 = icmp eq i32 %122, 16
  br i1 %123, label %124, label %7

124:                                              ; preds = %7
  ret i32 %119
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_sad32x16_avg_c(i8* nocapture readonly, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [512 x i8], align 16
  %7 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 512, i1 false)
  call void @vpx_comp_avg_pred_c(i8* nonnull %7, i8* %4, i32 32, i32 16, i8* %2, i32 %3) #5
  %8 = sext i32 %1 to i64
  br label %9

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %121, %9 ]
  %11 = phi i32 [ 0, %5 ], [ %124, %9 ]
  %12 = phi i8* [ %0, %5 ], [ %122, %9 ]
  %13 = phi i8* [ %7, %5 ], [ %123, %9 ]
  %14 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %10, i32 0
  %15 = bitcast i8* %12 to <4 x i8>*
  %16 = load <4 x i8>, <4 x i8>* %15, align 1
  %17 = zext <4 x i8> %16 to <4 x i32>
  %18 = bitcast i8* %13 to <4 x i8>*
  %19 = load <4 x i8>, <4 x i8>* %18, align 1
  %20 = zext <4 x i8> %19 to <4 x i32>
  %21 = sub nsw <4 x i32> %17, %20
  %22 = icmp slt <4 x i32> %21, zeroinitializer
  %23 = sub nsw <4 x i32> zeroinitializer, %21
  %24 = select <4 x i1> %22, <4 x i32> %23, <4 x i32> %21
  %25 = add <4 x i32> %24, %14
  %26 = getelementptr inbounds i8, i8* %12, i64 4
  %27 = bitcast i8* %26 to <4 x i8>*
  %28 = load <4 x i8>, <4 x i8>* %27, align 1
  %29 = zext <4 x i8> %28 to <4 x i32>
  %30 = getelementptr inbounds i8, i8* %13, i64 4
  %31 = bitcast i8* %30 to <4 x i8>*
  %32 = load <4 x i8>, <4 x i8>* %31, align 1
  %33 = zext <4 x i8> %32 to <4 x i32>
  %34 = sub nsw <4 x i32> %29, %33
  %35 = icmp slt <4 x i32> %34, zeroinitializer
  %36 = sub nsw <4 x i32> zeroinitializer, %34
  %37 = select <4 x i1> %35, <4 x i32> %36, <4 x i32> %34
  %38 = add <4 x i32> %37, %25
  %39 = getelementptr inbounds i8, i8* %12, i64 8
  %40 = bitcast i8* %39 to <4 x i8>*
  %41 = load <4 x i8>, <4 x i8>* %40, align 1
  %42 = zext <4 x i8> %41 to <4 x i32>
  %43 = getelementptr inbounds i8, i8* %13, i64 8
  %44 = bitcast i8* %43 to <4 x i8>*
  %45 = load <4 x i8>, <4 x i8>* %44, align 1
  %46 = zext <4 x i8> %45 to <4 x i32>
  %47 = sub nsw <4 x i32> %42, %46
  %48 = icmp slt <4 x i32> %47, zeroinitializer
  %49 = sub nsw <4 x i32> zeroinitializer, %47
  %50 = select <4 x i1> %48, <4 x i32> %49, <4 x i32> %47
  %51 = add <4 x i32> %50, %38
  %52 = getelementptr inbounds i8, i8* %12, i64 12
  %53 = bitcast i8* %52 to <4 x i8>*
  %54 = load <4 x i8>, <4 x i8>* %53, align 1
  %55 = zext <4 x i8> %54 to <4 x i32>
  %56 = getelementptr inbounds i8, i8* %13, i64 12
  %57 = bitcast i8* %56 to <4 x i8>*
  %58 = load <4 x i8>, <4 x i8>* %57, align 1
  %59 = zext <4 x i8> %58 to <4 x i32>
  %60 = sub nsw <4 x i32> %55, %59
  %61 = icmp slt <4 x i32> %60, zeroinitializer
  %62 = sub nsw <4 x i32> zeroinitializer, %60
  %63 = select <4 x i1> %61, <4 x i32> %62, <4 x i32> %60
  %64 = add <4 x i32> %63, %51
  %65 = getelementptr inbounds i8, i8* %12, i64 16
  %66 = bitcast i8* %65 to <4 x i8>*
  %67 = load <4 x i8>, <4 x i8>* %66, align 1
  %68 = zext <4 x i8> %67 to <4 x i32>
  %69 = getelementptr inbounds i8, i8* %13, i64 16
  %70 = bitcast i8* %69 to <4 x i8>*
  %71 = load <4 x i8>, <4 x i8>* %70, align 1
  %72 = zext <4 x i8> %71 to <4 x i32>
  %73 = sub nsw <4 x i32> %68, %72
  %74 = icmp slt <4 x i32> %73, zeroinitializer
  %75 = sub nsw <4 x i32> zeroinitializer, %73
  %76 = select <4 x i1> %74, <4 x i32> %75, <4 x i32> %73
  %77 = add <4 x i32> %76, %64
  %78 = getelementptr inbounds i8, i8* %12, i64 20
  %79 = bitcast i8* %78 to <4 x i8>*
  %80 = load <4 x i8>, <4 x i8>* %79, align 1
  %81 = zext <4 x i8> %80 to <4 x i32>
  %82 = getelementptr inbounds i8, i8* %13, i64 20
  %83 = bitcast i8* %82 to <4 x i8>*
  %84 = load <4 x i8>, <4 x i8>* %83, align 1
  %85 = zext <4 x i8> %84 to <4 x i32>
  %86 = sub nsw <4 x i32> %81, %85
  %87 = icmp slt <4 x i32> %86, zeroinitializer
  %88 = sub nsw <4 x i32> zeroinitializer, %86
  %89 = select <4 x i1> %87, <4 x i32> %88, <4 x i32> %86
  %90 = add <4 x i32> %89, %77
  %91 = getelementptr inbounds i8, i8* %12, i64 24
  %92 = bitcast i8* %91 to <4 x i8>*
  %93 = load <4 x i8>, <4 x i8>* %92, align 1
  %94 = zext <4 x i8> %93 to <4 x i32>
  %95 = getelementptr inbounds i8, i8* %13, i64 24
  %96 = bitcast i8* %95 to <4 x i8>*
  %97 = load <4 x i8>, <4 x i8>* %96, align 1
  %98 = zext <4 x i8> %97 to <4 x i32>
  %99 = sub nsw <4 x i32> %94, %98
  %100 = icmp slt <4 x i32> %99, zeroinitializer
  %101 = sub nsw <4 x i32> zeroinitializer, %99
  %102 = select <4 x i1> %100, <4 x i32> %101, <4 x i32> %99
  %103 = add <4 x i32> %102, %90
  %104 = getelementptr inbounds i8, i8* %12, i64 28
  %105 = bitcast i8* %104 to <4 x i8>*
  %106 = load <4 x i8>, <4 x i8>* %105, align 1
  %107 = zext <4 x i8> %106 to <4 x i32>
  %108 = getelementptr inbounds i8, i8* %13, i64 28
  %109 = bitcast i8* %108 to <4 x i8>*
  %110 = load <4 x i8>, <4 x i8>* %109, align 1
  %111 = zext <4 x i8> %110 to <4 x i32>
  %112 = sub nsw <4 x i32> %107, %111
  %113 = icmp slt <4 x i32> %112, zeroinitializer
  %114 = sub nsw <4 x i32> zeroinitializer, %112
  %115 = select <4 x i1> %113, <4 x i32> %114, <4 x i32> %112
  %116 = add <4 x i32> %115, %103
  %117 = shufflevector <4 x i32> %116, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %118 = add <4 x i32> %116, %117
  %119 = shufflevector <4 x i32> %118, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %120 = add <4 x i32> %118, %119
  %121 = extractelement <4 x i32> %120, i32 0
  %122 = getelementptr inbounds i8, i8* %12, i64 %8
  %123 = getelementptr inbounds i8, i8* %13, i64 32
  %124 = add nuw nsw i32 %11, 1
  %125 = icmp eq i32 %124, 16
  br i1 %125, label %126, label %9

126:                                              ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %7) #5
  ret i32 %121
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad32x16x4d_c(i8* nocapture readonly, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = sext i32 %1 to i64
  %7 = sext i32 %3 to i64
  %8 = load i8*, i8** %2, align 8
  br label %9

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %121, %9 ]
  %11 = phi i32 [ 0, %5 ], [ %124, %9 ]
  %12 = phi i8* [ %0, %5 ], [ %122, %9 ]
  %13 = phi i8* [ %8, %5 ], [ %123, %9 ]
  %14 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %10, i32 0
  %15 = bitcast i8* %12 to <4 x i8>*
  %16 = load <4 x i8>, <4 x i8>* %15, align 1
  %17 = zext <4 x i8> %16 to <4 x i32>
  %18 = bitcast i8* %13 to <4 x i8>*
  %19 = load <4 x i8>, <4 x i8>* %18, align 1
  %20 = zext <4 x i8> %19 to <4 x i32>
  %21 = sub nsw <4 x i32> %17, %20
  %22 = icmp slt <4 x i32> %21, zeroinitializer
  %23 = sub nsw <4 x i32> zeroinitializer, %21
  %24 = select <4 x i1> %22, <4 x i32> %23, <4 x i32> %21
  %25 = add <4 x i32> %24, %14
  %26 = getelementptr inbounds i8, i8* %12, i64 4
  %27 = bitcast i8* %26 to <4 x i8>*
  %28 = load <4 x i8>, <4 x i8>* %27, align 1
  %29 = zext <4 x i8> %28 to <4 x i32>
  %30 = getelementptr inbounds i8, i8* %13, i64 4
  %31 = bitcast i8* %30 to <4 x i8>*
  %32 = load <4 x i8>, <4 x i8>* %31, align 1
  %33 = zext <4 x i8> %32 to <4 x i32>
  %34 = sub nsw <4 x i32> %29, %33
  %35 = icmp slt <4 x i32> %34, zeroinitializer
  %36 = sub nsw <4 x i32> zeroinitializer, %34
  %37 = select <4 x i1> %35, <4 x i32> %36, <4 x i32> %34
  %38 = add <4 x i32> %37, %25
  %39 = getelementptr inbounds i8, i8* %12, i64 8
  %40 = bitcast i8* %39 to <4 x i8>*
  %41 = load <4 x i8>, <4 x i8>* %40, align 1
  %42 = zext <4 x i8> %41 to <4 x i32>
  %43 = getelementptr inbounds i8, i8* %13, i64 8
  %44 = bitcast i8* %43 to <4 x i8>*
  %45 = load <4 x i8>, <4 x i8>* %44, align 1
  %46 = zext <4 x i8> %45 to <4 x i32>
  %47 = sub nsw <4 x i32> %42, %46
  %48 = icmp slt <4 x i32> %47, zeroinitializer
  %49 = sub nsw <4 x i32> zeroinitializer, %47
  %50 = select <4 x i1> %48, <4 x i32> %49, <4 x i32> %47
  %51 = add <4 x i32> %50, %38
  %52 = getelementptr inbounds i8, i8* %12, i64 12
  %53 = bitcast i8* %52 to <4 x i8>*
  %54 = load <4 x i8>, <4 x i8>* %53, align 1
  %55 = zext <4 x i8> %54 to <4 x i32>
  %56 = getelementptr inbounds i8, i8* %13, i64 12
  %57 = bitcast i8* %56 to <4 x i8>*
  %58 = load <4 x i8>, <4 x i8>* %57, align 1
  %59 = zext <4 x i8> %58 to <4 x i32>
  %60 = sub nsw <4 x i32> %55, %59
  %61 = icmp slt <4 x i32> %60, zeroinitializer
  %62 = sub nsw <4 x i32> zeroinitializer, %60
  %63 = select <4 x i1> %61, <4 x i32> %62, <4 x i32> %60
  %64 = add <4 x i32> %63, %51
  %65 = getelementptr inbounds i8, i8* %12, i64 16
  %66 = bitcast i8* %65 to <4 x i8>*
  %67 = load <4 x i8>, <4 x i8>* %66, align 1
  %68 = zext <4 x i8> %67 to <4 x i32>
  %69 = getelementptr inbounds i8, i8* %13, i64 16
  %70 = bitcast i8* %69 to <4 x i8>*
  %71 = load <4 x i8>, <4 x i8>* %70, align 1
  %72 = zext <4 x i8> %71 to <4 x i32>
  %73 = sub nsw <4 x i32> %68, %72
  %74 = icmp slt <4 x i32> %73, zeroinitializer
  %75 = sub nsw <4 x i32> zeroinitializer, %73
  %76 = select <4 x i1> %74, <4 x i32> %75, <4 x i32> %73
  %77 = add <4 x i32> %76, %64
  %78 = getelementptr inbounds i8, i8* %12, i64 20
  %79 = bitcast i8* %78 to <4 x i8>*
  %80 = load <4 x i8>, <4 x i8>* %79, align 1
  %81 = zext <4 x i8> %80 to <4 x i32>
  %82 = getelementptr inbounds i8, i8* %13, i64 20
  %83 = bitcast i8* %82 to <4 x i8>*
  %84 = load <4 x i8>, <4 x i8>* %83, align 1
  %85 = zext <4 x i8> %84 to <4 x i32>
  %86 = sub nsw <4 x i32> %81, %85
  %87 = icmp slt <4 x i32> %86, zeroinitializer
  %88 = sub nsw <4 x i32> zeroinitializer, %86
  %89 = select <4 x i1> %87, <4 x i32> %88, <4 x i32> %86
  %90 = add <4 x i32> %89, %77
  %91 = getelementptr inbounds i8, i8* %12, i64 24
  %92 = bitcast i8* %91 to <4 x i8>*
  %93 = load <4 x i8>, <4 x i8>* %92, align 1
  %94 = zext <4 x i8> %93 to <4 x i32>
  %95 = getelementptr inbounds i8, i8* %13, i64 24
  %96 = bitcast i8* %95 to <4 x i8>*
  %97 = load <4 x i8>, <4 x i8>* %96, align 1
  %98 = zext <4 x i8> %97 to <4 x i32>
  %99 = sub nsw <4 x i32> %94, %98
  %100 = icmp slt <4 x i32> %99, zeroinitializer
  %101 = sub nsw <4 x i32> zeroinitializer, %99
  %102 = select <4 x i1> %100, <4 x i32> %101, <4 x i32> %99
  %103 = add <4 x i32> %102, %90
  %104 = getelementptr inbounds i8, i8* %12, i64 28
  %105 = bitcast i8* %104 to <4 x i8>*
  %106 = load <4 x i8>, <4 x i8>* %105, align 1
  %107 = zext <4 x i8> %106 to <4 x i32>
  %108 = getelementptr inbounds i8, i8* %13, i64 28
  %109 = bitcast i8* %108 to <4 x i8>*
  %110 = load <4 x i8>, <4 x i8>* %109, align 1
  %111 = zext <4 x i8> %110 to <4 x i32>
  %112 = sub nsw <4 x i32> %107, %111
  %113 = icmp slt <4 x i32> %112, zeroinitializer
  %114 = sub nsw <4 x i32> zeroinitializer, %112
  %115 = select <4 x i1> %113, <4 x i32> %114, <4 x i32> %112
  %116 = add <4 x i32> %115, %103
  %117 = shufflevector <4 x i32> %116, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %118 = add <4 x i32> %116, %117
  %119 = shufflevector <4 x i32> %118, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %120 = add <4 x i32> %118, %119
  %121 = extractelement <4 x i32> %120, i32 0
  %122 = getelementptr inbounds i8, i8* %12, i64 %6
  %123 = getelementptr inbounds i8, i8* %13, i64 %7
  %124 = add nuw nsw i32 %11, 1
  %125 = icmp eq i32 %124, 16
  br i1 %125, label %126, label %9

126:                                              ; preds = %9
  store i32 %121, i32* %4, align 4
  %127 = getelementptr inbounds i8*, i8** %2, i64 1
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %126, %129
  %130 = phi i32 [ 0, %126 ], [ %241, %129 ]
  %131 = phi i32 [ 0, %126 ], [ %244, %129 ]
  %132 = phi i8* [ %0, %126 ], [ %242, %129 ]
  %133 = phi i8* [ %128, %126 ], [ %243, %129 ]
  %134 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %130, i32 0
  %135 = bitcast i8* %132 to <4 x i8>*
  %136 = load <4 x i8>, <4 x i8>* %135, align 1
  %137 = zext <4 x i8> %136 to <4 x i32>
  %138 = bitcast i8* %133 to <4 x i8>*
  %139 = load <4 x i8>, <4 x i8>* %138, align 1
  %140 = zext <4 x i8> %139 to <4 x i32>
  %141 = sub nsw <4 x i32> %137, %140
  %142 = icmp slt <4 x i32> %141, zeroinitializer
  %143 = sub nsw <4 x i32> zeroinitializer, %141
  %144 = select <4 x i1> %142, <4 x i32> %143, <4 x i32> %141
  %145 = add <4 x i32> %144, %134
  %146 = getelementptr inbounds i8, i8* %132, i64 4
  %147 = bitcast i8* %146 to <4 x i8>*
  %148 = load <4 x i8>, <4 x i8>* %147, align 1
  %149 = zext <4 x i8> %148 to <4 x i32>
  %150 = getelementptr inbounds i8, i8* %133, i64 4
  %151 = bitcast i8* %150 to <4 x i8>*
  %152 = load <4 x i8>, <4 x i8>* %151, align 1
  %153 = zext <4 x i8> %152 to <4 x i32>
  %154 = sub nsw <4 x i32> %149, %153
  %155 = icmp slt <4 x i32> %154, zeroinitializer
  %156 = sub nsw <4 x i32> zeroinitializer, %154
  %157 = select <4 x i1> %155, <4 x i32> %156, <4 x i32> %154
  %158 = add <4 x i32> %157, %145
  %159 = getelementptr inbounds i8, i8* %132, i64 8
  %160 = bitcast i8* %159 to <4 x i8>*
  %161 = load <4 x i8>, <4 x i8>* %160, align 1
  %162 = zext <4 x i8> %161 to <4 x i32>
  %163 = getelementptr inbounds i8, i8* %133, i64 8
  %164 = bitcast i8* %163 to <4 x i8>*
  %165 = load <4 x i8>, <4 x i8>* %164, align 1
  %166 = zext <4 x i8> %165 to <4 x i32>
  %167 = sub nsw <4 x i32> %162, %166
  %168 = icmp slt <4 x i32> %167, zeroinitializer
  %169 = sub nsw <4 x i32> zeroinitializer, %167
  %170 = select <4 x i1> %168, <4 x i32> %169, <4 x i32> %167
  %171 = add <4 x i32> %170, %158
  %172 = getelementptr inbounds i8, i8* %132, i64 12
  %173 = bitcast i8* %172 to <4 x i8>*
  %174 = load <4 x i8>, <4 x i8>* %173, align 1
  %175 = zext <4 x i8> %174 to <4 x i32>
  %176 = getelementptr inbounds i8, i8* %133, i64 12
  %177 = bitcast i8* %176 to <4 x i8>*
  %178 = load <4 x i8>, <4 x i8>* %177, align 1
  %179 = zext <4 x i8> %178 to <4 x i32>
  %180 = sub nsw <4 x i32> %175, %179
  %181 = icmp slt <4 x i32> %180, zeroinitializer
  %182 = sub nsw <4 x i32> zeroinitializer, %180
  %183 = select <4 x i1> %181, <4 x i32> %182, <4 x i32> %180
  %184 = add <4 x i32> %183, %171
  %185 = getelementptr inbounds i8, i8* %132, i64 16
  %186 = bitcast i8* %185 to <4 x i8>*
  %187 = load <4 x i8>, <4 x i8>* %186, align 1
  %188 = zext <4 x i8> %187 to <4 x i32>
  %189 = getelementptr inbounds i8, i8* %133, i64 16
  %190 = bitcast i8* %189 to <4 x i8>*
  %191 = load <4 x i8>, <4 x i8>* %190, align 1
  %192 = zext <4 x i8> %191 to <4 x i32>
  %193 = sub nsw <4 x i32> %188, %192
  %194 = icmp slt <4 x i32> %193, zeroinitializer
  %195 = sub nsw <4 x i32> zeroinitializer, %193
  %196 = select <4 x i1> %194, <4 x i32> %195, <4 x i32> %193
  %197 = add <4 x i32> %196, %184
  %198 = getelementptr inbounds i8, i8* %132, i64 20
  %199 = bitcast i8* %198 to <4 x i8>*
  %200 = load <4 x i8>, <4 x i8>* %199, align 1
  %201 = zext <4 x i8> %200 to <4 x i32>
  %202 = getelementptr inbounds i8, i8* %133, i64 20
  %203 = bitcast i8* %202 to <4 x i8>*
  %204 = load <4 x i8>, <4 x i8>* %203, align 1
  %205 = zext <4 x i8> %204 to <4 x i32>
  %206 = sub nsw <4 x i32> %201, %205
  %207 = icmp slt <4 x i32> %206, zeroinitializer
  %208 = sub nsw <4 x i32> zeroinitializer, %206
  %209 = select <4 x i1> %207, <4 x i32> %208, <4 x i32> %206
  %210 = add <4 x i32> %209, %197
  %211 = getelementptr inbounds i8, i8* %132, i64 24
  %212 = bitcast i8* %211 to <4 x i8>*
  %213 = load <4 x i8>, <4 x i8>* %212, align 1
  %214 = zext <4 x i8> %213 to <4 x i32>
  %215 = getelementptr inbounds i8, i8* %133, i64 24
  %216 = bitcast i8* %215 to <4 x i8>*
  %217 = load <4 x i8>, <4 x i8>* %216, align 1
  %218 = zext <4 x i8> %217 to <4 x i32>
  %219 = sub nsw <4 x i32> %214, %218
  %220 = icmp slt <4 x i32> %219, zeroinitializer
  %221 = sub nsw <4 x i32> zeroinitializer, %219
  %222 = select <4 x i1> %220, <4 x i32> %221, <4 x i32> %219
  %223 = add <4 x i32> %222, %210
  %224 = getelementptr inbounds i8, i8* %132, i64 28
  %225 = bitcast i8* %224 to <4 x i8>*
  %226 = load <4 x i8>, <4 x i8>* %225, align 1
  %227 = zext <4 x i8> %226 to <4 x i32>
  %228 = getelementptr inbounds i8, i8* %133, i64 28
  %229 = bitcast i8* %228 to <4 x i8>*
  %230 = load <4 x i8>, <4 x i8>* %229, align 1
  %231 = zext <4 x i8> %230 to <4 x i32>
  %232 = sub nsw <4 x i32> %227, %231
  %233 = icmp slt <4 x i32> %232, zeroinitializer
  %234 = sub nsw <4 x i32> zeroinitializer, %232
  %235 = select <4 x i1> %233, <4 x i32> %234, <4 x i32> %232
  %236 = add <4 x i32> %235, %223
  %237 = shufflevector <4 x i32> %236, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %238 = add <4 x i32> %236, %237
  %239 = shufflevector <4 x i32> %238, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %240 = add <4 x i32> %238, %239
  %241 = extractelement <4 x i32> %240, i32 0
  %242 = getelementptr inbounds i8, i8* %132, i64 %6
  %243 = getelementptr inbounds i8, i8* %133, i64 %7
  %244 = add nuw nsw i32 %131, 1
  %245 = icmp eq i32 %244, 16
  br i1 %245, label %246, label %129

246:                                              ; preds = %129
  %247 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %241, i32* %247, align 4
  %248 = getelementptr inbounds i8*, i8** %2, i64 2
  %249 = load i8*, i8** %248, align 8
  br label %250

250:                                              ; preds = %246, %250
  %251 = phi i32 [ 0, %246 ], [ %362, %250 ]
  %252 = phi i32 [ 0, %246 ], [ %365, %250 ]
  %253 = phi i8* [ %0, %246 ], [ %363, %250 ]
  %254 = phi i8* [ %249, %246 ], [ %364, %250 ]
  %255 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %251, i32 0
  %256 = bitcast i8* %253 to <4 x i8>*
  %257 = load <4 x i8>, <4 x i8>* %256, align 1
  %258 = zext <4 x i8> %257 to <4 x i32>
  %259 = bitcast i8* %254 to <4 x i8>*
  %260 = load <4 x i8>, <4 x i8>* %259, align 1
  %261 = zext <4 x i8> %260 to <4 x i32>
  %262 = sub nsw <4 x i32> %258, %261
  %263 = icmp slt <4 x i32> %262, zeroinitializer
  %264 = sub nsw <4 x i32> zeroinitializer, %262
  %265 = select <4 x i1> %263, <4 x i32> %264, <4 x i32> %262
  %266 = add <4 x i32> %265, %255
  %267 = getelementptr inbounds i8, i8* %253, i64 4
  %268 = bitcast i8* %267 to <4 x i8>*
  %269 = load <4 x i8>, <4 x i8>* %268, align 1
  %270 = zext <4 x i8> %269 to <4 x i32>
  %271 = getelementptr inbounds i8, i8* %254, i64 4
  %272 = bitcast i8* %271 to <4 x i8>*
  %273 = load <4 x i8>, <4 x i8>* %272, align 1
  %274 = zext <4 x i8> %273 to <4 x i32>
  %275 = sub nsw <4 x i32> %270, %274
  %276 = icmp slt <4 x i32> %275, zeroinitializer
  %277 = sub nsw <4 x i32> zeroinitializer, %275
  %278 = select <4 x i1> %276, <4 x i32> %277, <4 x i32> %275
  %279 = add <4 x i32> %278, %266
  %280 = getelementptr inbounds i8, i8* %253, i64 8
  %281 = bitcast i8* %280 to <4 x i8>*
  %282 = load <4 x i8>, <4 x i8>* %281, align 1
  %283 = zext <4 x i8> %282 to <4 x i32>
  %284 = getelementptr inbounds i8, i8* %254, i64 8
  %285 = bitcast i8* %284 to <4 x i8>*
  %286 = load <4 x i8>, <4 x i8>* %285, align 1
  %287 = zext <4 x i8> %286 to <4 x i32>
  %288 = sub nsw <4 x i32> %283, %287
  %289 = icmp slt <4 x i32> %288, zeroinitializer
  %290 = sub nsw <4 x i32> zeroinitializer, %288
  %291 = select <4 x i1> %289, <4 x i32> %290, <4 x i32> %288
  %292 = add <4 x i32> %291, %279
  %293 = getelementptr inbounds i8, i8* %253, i64 12
  %294 = bitcast i8* %293 to <4 x i8>*
  %295 = load <4 x i8>, <4 x i8>* %294, align 1
  %296 = zext <4 x i8> %295 to <4 x i32>
  %297 = getelementptr inbounds i8, i8* %254, i64 12
  %298 = bitcast i8* %297 to <4 x i8>*
  %299 = load <4 x i8>, <4 x i8>* %298, align 1
  %300 = zext <4 x i8> %299 to <4 x i32>
  %301 = sub nsw <4 x i32> %296, %300
  %302 = icmp slt <4 x i32> %301, zeroinitializer
  %303 = sub nsw <4 x i32> zeroinitializer, %301
  %304 = select <4 x i1> %302, <4 x i32> %303, <4 x i32> %301
  %305 = add <4 x i32> %304, %292
  %306 = getelementptr inbounds i8, i8* %253, i64 16
  %307 = bitcast i8* %306 to <4 x i8>*
  %308 = load <4 x i8>, <4 x i8>* %307, align 1
  %309 = zext <4 x i8> %308 to <4 x i32>
  %310 = getelementptr inbounds i8, i8* %254, i64 16
  %311 = bitcast i8* %310 to <4 x i8>*
  %312 = load <4 x i8>, <4 x i8>* %311, align 1
  %313 = zext <4 x i8> %312 to <4 x i32>
  %314 = sub nsw <4 x i32> %309, %313
  %315 = icmp slt <4 x i32> %314, zeroinitializer
  %316 = sub nsw <4 x i32> zeroinitializer, %314
  %317 = select <4 x i1> %315, <4 x i32> %316, <4 x i32> %314
  %318 = add <4 x i32> %317, %305
  %319 = getelementptr inbounds i8, i8* %253, i64 20
  %320 = bitcast i8* %319 to <4 x i8>*
  %321 = load <4 x i8>, <4 x i8>* %320, align 1
  %322 = zext <4 x i8> %321 to <4 x i32>
  %323 = getelementptr inbounds i8, i8* %254, i64 20
  %324 = bitcast i8* %323 to <4 x i8>*
  %325 = load <4 x i8>, <4 x i8>* %324, align 1
  %326 = zext <4 x i8> %325 to <4 x i32>
  %327 = sub nsw <4 x i32> %322, %326
  %328 = icmp slt <4 x i32> %327, zeroinitializer
  %329 = sub nsw <4 x i32> zeroinitializer, %327
  %330 = select <4 x i1> %328, <4 x i32> %329, <4 x i32> %327
  %331 = add <4 x i32> %330, %318
  %332 = getelementptr inbounds i8, i8* %253, i64 24
  %333 = bitcast i8* %332 to <4 x i8>*
  %334 = load <4 x i8>, <4 x i8>* %333, align 1
  %335 = zext <4 x i8> %334 to <4 x i32>
  %336 = getelementptr inbounds i8, i8* %254, i64 24
  %337 = bitcast i8* %336 to <4 x i8>*
  %338 = load <4 x i8>, <4 x i8>* %337, align 1
  %339 = zext <4 x i8> %338 to <4 x i32>
  %340 = sub nsw <4 x i32> %335, %339
  %341 = icmp slt <4 x i32> %340, zeroinitializer
  %342 = sub nsw <4 x i32> zeroinitializer, %340
  %343 = select <4 x i1> %341, <4 x i32> %342, <4 x i32> %340
  %344 = add <4 x i32> %343, %331
  %345 = getelementptr inbounds i8, i8* %253, i64 28
  %346 = bitcast i8* %345 to <4 x i8>*
  %347 = load <4 x i8>, <4 x i8>* %346, align 1
  %348 = zext <4 x i8> %347 to <4 x i32>
  %349 = getelementptr inbounds i8, i8* %254, i64 28
  %350 = bitcast i8* %349 to <4 x i8>*
  %351 = load <4 x i8>, <4 x i8>* %350, align 1
  %352 = zext <4 x i8> %351 to <4 x i32>
  %353 = sub nsw <4 x i32> %348, %352
  %354 = icmp slt <4 x i32> %353, zeroinitializer
  %355 = sub nsw <4 x i32> zeroinitializer, %353
  %356 = select <4 x i1> %354, <4 x i32> %355, <4 x i32> %353
  %357 = add <4 x i32> %356, %344
  %358 = shufflevector <4 x i32> %357, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %359 = add <4 x i32> %357, %358
  %360 = shufflevector <4 x i32> %359, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %361 = add <4 x i32> %359, %360
  %362 = extractelement <4 x i32> %361, i32 0
  %363 = getelementptr inbounds i8, i8* %253, i64 %6
  %364 = getelementptr inbounds i8, i8* %254, i64 %7
  %365 = add nuw nsw i32 %252, 1
  %366 = icmp eq i32 %365, 16
  br i1 %366, label %367, label %250

367:                                              ; preds = %250
  %368 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %362, i32* %368, align 4
  %369 = getelementptr inbounds i8*, i8** %2, i64 3
  %370 = load i8*, i8** %369, align 8
  br label %371

371:                                              ; preds = %367, %371
  %372 = phi i32 [ 0, %367 ], [ %483, %371 ]
  %373 = phi i32 [ 0, %367 ], [ %486, %371 ]
  %374 = phi i8* [ %0, %367 ], [ %484, %371 ]
  %375 = phi i8* [ %370, %367 ], [ %485, %371 ]
  %376 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %372, i32 0
  %377 = bitcast i8* %374 to <4 x i8>*
  %378 = load <4 x i8>, <4 x i8>* %377, align 1
  %379 = zext <4 x i8> %378 to <4 x i32>
  %380 = bitcast i8* %375 to <4 x i8>*
  %381 = load <4 x i8>, <4 x i8>* %380, align 1
  %382 = zext <4 x i8> %381 to <4 x i32>
  %383 = sub nsw <4 x i32> %379, %382
  %384 = icmp slt <4 x i32> %383, zeroinitializer
  %385 = sub nsw <4 x i32> zeroinitializer, %383
  %386 = select <4 x i1> %384, <4 x i32> %385, <4 x i32> %383
  %387 = add <4 x i32> %386, %376
  %388 = getelementptr inbounds i8, i8* %374, i64 4
  %389 = bitcast i8* %388 to <4 x i8>*
  %390 = load <4 x i8>, <4 x i8>* %389, align 1
  %391 = zext <4 x i8> %390 to <4 x i32>
  %392 = getelementptr inbounds i8, i8* %375, i64 4
  %393 = bitcast i8* %392 to <4 x i8>*
  %394 = load <4 x i8>, <4 x i8>* %393, align 1
  %395 = zext <4 x i8> %394 to <4 x i32>
  %396 = sub nsw <4 x i32> %391, %395
  %397 = icmp slt <4 x i32> %396, zeroinitializer
  %398 = sub nsw <4 x i32> zeroinitializer, %396
  %399 = select <4 x i1> %397, <4 x i32> %398, <4 x i32> %396
  %400 = add <4 x i32> %399, %387
  %401 = getelementptr inbounds i8, i8* %374, i64 8
  %402 = bitcast i8* %401 to <4 x i8>*
  %403 = load <4 x i8>, <4 x i8>* %402, align 1
  %404 = zext <4 x i8> %403 to <4 x i32>
  %405 = getelementptr inbounds i8, i8* %375, i64 8
  %406 = bitcast i8* %405 to <4 x i8>*
  %407 = load <4 x i8>, <4 x i8>* %406, align 1
  %408 = zext <4 x i8> %407 to <4 x i32>
  %409 = sub nsw <4 x i32> %404, %408
  %410 = icmp slt <4 x i32> %409, zeroinitializer
  %411 = sub nsw <4 x i32> zeroinitializer, %409
  %412 = select <4 x i1> %410, <4 x i32> %411, <4 x i32> %409
  %413 = add <4 x i32> %412, %400
  %414 = getelementptr inbounds i8, i8* %374, i64 12
  %415 = bitcast i8* %414 to <4 x i8>*
  %416 = load <4 x i8>, <4 x i8>* %415, align 1
  %417 = zext <4 x i8> %416 to <4 x i32>
  %418 = getelementptr inbounds i8, i8* %375, i64 12
  %419 = bitcast i8* %418 to <4 x i8>*
  %420 = load <4 x i8>, <4 x i8>* %419, align 1
  %421 = zext <4 x i8> %420 to <4 x i32>
  %422 = sub nsw <4 x i32> %417, %421
  %423 = icmp slt <4 x i32> %422, zeroinitializer
  %424 = sub nsw <4 x i32> zeroinitializer, %422
  %425 = select <4 x i1> %423, <4 x i32> %424, <4 x i32> %422
  %426 = add <4 x i32> %425, %413
  %427 = getelementptr inbounds i8, i8* %374, i64 16
  %428 = bitcast i8* %427 to <4 x i8>*
  %429 = load <4 x i8>, <4 x i8>* %428, align 1
  %430 = zext <4 x i8> %429 to <4 x i32>
  %431 = getelementptr inbounds i8, i8* %375, i64 16
  %432 = bitcast i8* %431 to <4 x i8>*
  %433 = load <4 x i8>, <4 x i8>* %432, align 1
  %434 = zext <4 x i8> %433 to <4 x i32>
  %435 = sub nsw <4 x i32> %430, %434
  %436 = icmp slt <4 x i32> %435, zeroinitializer
  %437 = sub nsw <4 x i32> zeroinitializer, %435
  %438 = select <4 x i1> %436, <4 x i32> %437, <4 x i32> %435
  %439 = add <4 x i32> %438, %426
  %440 = getelementptr inbounds i8, i8* %374, i64 20
  %441 = bitcast i8* %440 to <4 x i8>*
  %442 = load <4 x i8>, <4 x i8>* %441, align 1
  %443 = zext <4 x i8> %442 to <4 x i32>
  %444 = getelementptr inbounds i8, i8* %375, i64 20
  %445 = bitcast i8* %444 to <4 x i8>*
  %446 = load <4 x i8>, <4 x i8>* %445, align 1
  %447 = zext <4 x i8> %446 to <4 x i32>
  %448 = sub nsw <4 x i32> %443, %447
  %449 = icmp slt <4 x i32> %448, zeroinitializer
  %450 = sub nsw <4 x i32> zeroinitializer, %448
  %451 = select <4 x i1> %449, <4 x i32> %450, <4 x i32> %448
  %452 = add <4 x i32> %451, %439
  %453 = getelementptr inbounds i8, i8* %374, i64 24
  %454 = bitcast i8* %453 to <4 x i8>*
  %455 = load <4 x i8>, <4 x i8>* %454, align 1
  %456 = zext <4 x i8> %455 to <4 x i32>
  %457 = getelementptr inbounds i8, i8* %375, i64 24
  %458 = bitcast i8* %457 to <4 x i8>*
  %459 = load <4 x i8>, <4 x i8>* %458, align 1
  %460 = zext <4 x i8> %459 to <4 x i32>
  %461 = sub nsw <4 x i32> %456, %460
  %462 = icmp slt <4 x i32> %461, zeroinitializer
  %463 = sub nsw <4 x i32> zeroinitializer, %461
  %464 = select <4 x i1> %462, <4 x i32> %463, <4 x i32> %461
  %465 = add <4 x i32> %464, %452
  %466 = getelementptr inbounds i8, i8* %374, i64 28
  %467 = bitcast i8* %466 to <4 x i8>*
  %468 = load <4 x i8>, <4 x i8>* %467, align 1
  %469 = zext <4 x i8> %468 to <4 x i32>
  %470 = getelementptr inbounds i8, i8* %375, i64 28
  %471 = bitcast i8* %470 to <4 x i8>*
  %472 = load <4 x i8>, <4 x i8>* %471, align 1
  %473 = zext <4 x i8> %472 to <4 x i32>
  %474 = sub nsw <4 x i32> %469, %473
  %475 = icmp slt <4 x i32> %474, zeroinitializer
  %476 = sub nsw <4 x i32> zeroinitializer, %474
  %477 = select <4 x i1> %475, <4 x i32> %476, <4 x i32> %474
  %478 = add <4 x i32> %477, %465
  %479 = shufflevector <4 x i32> %478, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %480 = add <4 x i32> %478, %479
  %481 = shufflevector <4 x i32> %480, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %482 = add <4 x i32> %480, %481
  %483 = extractelement <4 x i32> %482, i32 0
  %484 = getelementptr inbounds i8, i8* %374, i64 %6
  %485 = getelementptr inbounds i8, i8* %375, i64 %7
  %486 = add nuw nsw i32 %373, 1
  %487 = icmp eq i32 %486, 16
  br i1 %487, label %488, label %371

488:                                              ; preds = %371
  %489 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %483, i32* %489, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_sad16x32_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = sext i32 %1 to i64
  %6 = sext i32 %3 to i64
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi i32 [ 0, %4 ], [ %31, %7 ]
  %9 = phi i32 [ 0, %4 ], [ %34, %7 ]
  %10 = phi i8* [ %0, %4 ], [ %32, %7 ]
  %11 = phi i8* [ %2, %4 ], [ %33, %7 ]
  %12 = bitcast i8* %10 to <16 x i8>*
  %13 = load <16 x i8>, <16 x i8>* %12, align 1
  %14 = zext <16 x i8> %13 to <16 x i32>
  %15 = bitcast i8* %11 to <16 x i8>*
  %16 = load <16 x i8>, <16 x i8>* %15, align 1
  %17 = zext <16 x i8> %16 to <16 x i32>
  %18 = sub nsw <16 x i32> %14, %17
  %19 = icmp slt <16 x i32> %18, zeroinitializer
  %20 = sub nsw <16 x i32> zeroinitializer, %18
  %21 = select <16 x i1> %19, <16 x i32> %20, <16 x i32> %18
  %22 = shufflevector <16 x i32> %21, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %23 = add <16 x i32> %21, %22
  %24 = shufflevector <16 x i32> %23, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %25 = add <16 x i32> %23, %24
  %26 = shufflevector <16 x i32> %25, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %27 = add <16 x i32> %25, %26
  %28 = shufflevector <16 x i32> %27, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %29 = add <16 x i32> %27, %28
  %30 = extractelement <16 x i32> %29, i32 0
  %31 = add i32 %30, %8
  %32 = getelementptr inbounds i8, i8* %10, i64 %5
  %33 = getelementptr inbounds i8, i8* %11, i64 %6
  %34 = add nuw nsw i32 %9, 1
  %35 = icmp eq i32 %34, 32
  br i1 %35, label %36, label %7

36:                                               ; preds = %7
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_sad16x32_avg_c(i8* nocapture readonly, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [512 x i8], align 16
  %7 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 512, i1 false)
  call void @vpx_comp_avg_pred_c(i8* nonnull %7, i8* %4, i32 16, i32 32, i8* %2, i32 %3) #5
  %8 = sext i32 %1 to i64
  br label %9

9:                                                ; preds = %9, %5
  %10 = phi i32 [ 0, %5 ], [ %33, %9 ]
  %11 = phi i32 [ 0, %5 ], [ %36, %9 ]
  %12 = phi i8* [ %0, %5 ], [ %34, %9 ]
  %13 = phi i8* [ %7, %5 ], [ %35, %9 ]
  %14 = bitcast i8* %12 to <16 x i8>*
  %15 = load <16 x i8>, <16 x i8>* %14, align 1
  %16 = zext <16 x i8> %15 to <16 x i32>
  %17 = bitcast i8* %13 to <16 x i8>*
  %18 = load <16 x i8>, <16 x i8>* %17, align 1
  %19 = zext <16 x i8> %18 to <16 x i32>
  %20 = sub nsw <16 x i32> %16, %19
  %21 = icmp slt <16 x i32> %20, zeroinitializer
  %22 = sub nsw <16 x i32> zeroinitializer, %20
  %23 = select <16 x i1> %21, <16 x i32> %22, <16 x i32> %20
  %24 = shufflevector <16 x i32> %23, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %25 = add <16 x i32> %23, %24
  %26 = shufflevector <16 x i32> %25, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %27 = add <16 x i32> %25, %26
  %28 = shufflevector <16 x i32> %27, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %29 = add <16 x i32> %27, %28
  %30 = shufflevector <16 x i32> %29, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %31 = add <16 x i32> %29, %30
  %32 = extractelement <16 x i32> %31, i32 0
  %33 = add i32 %32, %10
  %34 = getelementptr inbounds i8, i8* %12, i64 %8
  %35 = getelementptr inbounds i8, i8* %13, i64 16
  %36 = add nuw nsw i32 %11, 1
  %37 = icmp eq i32 %36, 32
  br i1 %37, label %38, label %9

38:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %7) #5
  ret i32 %33
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad16x32x4d_c(i8* nocapture readonly, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = load i8*, i8** %2, align 8
  %7 = tail call i32 @vpx_sad16x32_c(i8* %0, i32 %1, i8* %6, i32 %3)
  store i32 %7, i32* %4, align 4
  %8 = getelementptr inbounds i8*, i8** %2, i64 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @vpx_sad16x32_c(i8* %0, i32 %1, i8* %9, i32 %3)
  %11 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds i8*, i8** %2, i64 2
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i32 @vpx_sad16x32_c(i8* %0, i32 %1, i8* %13, i32 %3)
  %15 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i8*, i8** %2, i64 3
  %17 = load i8*, i8** %16, align 8
  %18 = tail call i32 @vpx_sad16x32_c(i8* %0, i32 %1, i8* %17, i32 %3)
  %19 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %18, i32* %19, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_sad16x16_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = sext i32 %1 to i64
  %6 = sext i32 %3 to i64
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi i32 [ 0, %4 ], [ %31, %7 ]
  %9 = phi i32 [ 0, %4 ], [ %34, %7 ]
  %10 = phi i8* [ %0, %4 ], [ %32, %7 ]
  %11 = phi i8* [ %2, %4 ], [ %33, %7 ]
  %12 = bitcast i8* %10 to <16 x i8>*
  %13 = load <16 x i8>, <16 x i8>* %12, align 1
  %14 = zext <16 x i8> %13 to <16 x i32>
  %15 = bitcast i8* %11 to <16 x i8>*
  %16 = load <16 x i8>, <16 x i8>* %15, align 1
  %17 = zext <16 x i8> %16 to <16 x i32>
  %18 = sub nsw <16 x i32> %14, %17
  %19 = icmp slt <16 x i32> %18, zeroinitializer
  %20 = sub nsw <16 x i32> zeroinitializer, %18
  %21 = select <16 x i1> %19, <16 x i32> %20, <16 x i32> %18
  %22 = shufflevector <16 x i32> %21, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %23 = add <16 x i32> %21, %22
  %24 = shufflevector <16 x i32> %23, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %25 = add <16 x i32> %23, %24
  %26 = shufflevector <16 x i32> %25, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %27 = add <16 x i32> %25, %26
  %28 = shufflevector <16 x i32> %27, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %29 = add <16 x i32> %27, %28
  %30 = extractelement <16 x i32> %29, i32 0
  %31 = add i32 %30, %8
  %32 = getelementptr inbounds i8, i8* %10, i64 %5
  %33 = getelementptr inbounds i8, i8* %11, i64 %6
  %34 = add nuw nsw i32 %9, 1
  %35 = icmp eq i32 %34, 16
  br i1 %35, label %36, label %7

36:                                               ; preds = %7
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_sad16x16_avg_c(i8* nocapture readonly, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [256 x i8], align 16
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 256, i1 false)
  call void @vpx_comp_avg_pred_c(i8* nonnull %7, i8* %4, i32 16, i32 16, i8* %2, i32 %3) #5
  %8 = sext i32 %1 to i64
  br label %9

9:                                                ; preds = %9, %5
  %10 = phi i32 [ 0, %5 ], [ %33, %9 ]
  %11 = phi i32 [ 0, %5 ], [ %36, %9 ]
  %12 = phi i8* [ %0, %5 ], [ %34, %9 ]
  %13 = phi i8* [ %7, %5 ], [ %35, %9 ]
  %14 = bitcast i8* %12 to <16 x i8>*
  %15 = load <16 x i8>, <16 x i8>* %14, align 1
  %16 = zext <16 x i8> %15 to <16 x i32>
  %17 = bitcast i8* %13 to <16 x i8>*
  %18 = load <16 x i8>, <16 x i8>* %17, align 1
  %19 = zext <16 x i8> %18 to <16 x i32>
  %20 = sub nsw <16 x i32> %16, %19
  %21 = icmp slt <16 x i32> %20, zeroinitializer
  %22 = sub nsw <16 x i32> zeroinitializer, %20
  %23 = select <16 x i1> %21, <16 x i32> %22, <16 x i32> %20
  %24 = shufflevector <16 x i32> %23, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %25 = add <16 x i32> %23, %24
  %26 = shufflevector <16 x i32> %25, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %27 = add <16 x i32> %25, %26
  %28 = shufflevector <16 x i32> %27, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %29 = add <16 x i32> %27, %28
  %30 = shufflevector <16 x i32> %29, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %31 = add <16 x i32> %29, %30
  %32 = extractelement <16 x i32> %31, i32 0
  %33 = add i32 %32, %10
  %34 = getelementptr inbounds i8, i8* %12, i64 %8
  %35 = getelementptr inbounds i8, i8* %13, i64 16
  %36 = add nuw nsw i32 %11, 1
  %37 = icmp eq i32 %36, 16
  br i1 %37, label %38, label %9

38:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %7) #5
  ret i32 %33
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad16x16x3_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = tail call i32 @vpx_sad16x16_c(i8* %0, i32 %1, i8* %2, i32 %3)
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds i8, i8* %2, i64 1
  %8 = tail call i32 @vpx_sad16x16_c(i8* %0, i32 %1, i8* %7, i32 %3)
  %9 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %2, i64 2
  %11 = tail call i32 @vpx_sad16x16_c(i8* %0, i32 %1, i8* %10, i32 %3)
  %12 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %11, i32* %12, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad16x16x8_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = tail call i32 @vpx_sad16x16_c(i8* %0, i32 %1, i8* %2, i32 %3)
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds i8, i8* %2, i64 1
  %8 = tail call i32 @vpx_sad16x16_c(i8* %0, i32 %1, i8* %7, i32 %3)
  %9 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %2, i64 2
  %11 = tail call i32 @vpx_sad16x16_c(i8* %0, i32 %1, i8* %10, i32 %3)
  %12 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 3
  %14 = tail call i32 @vpx_sad16x16_c(i8* %0, i32 %1, i8* %13, i32 %3)
  %15 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %2, i64 4
  %17 = tail call i32 @vpx_sad16x16_c(i8* %0, i32 %1, i8* %16, i32 %3)
  %18 = getelementptr inbounds i32, i32* %4, i64 4
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %2, i64 5
  %20 = tail call i32 @vpx_sad16x16_c(i8* %0, i32 %1, i8* %19, i32 %3)
  %21 = getelementptr inbounds i32, i32* %4, i64 5
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %2, i64 6
  %23 = tail call i32 @vpx_sad16x16_c(i8* %0, i32 %1, i8* %22, i32 %3)
  %24 = getelementptr inbounds i32, i32* %4, i64 6
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %2, i64 7
  %26 = tail call i32 @vpx_sad16x16_c(i8* %0, i32 %1, i8* %25, i32 %3)
  %27 = getelementptr inbounds i32, i32* %4, i64 7
  store i32 %26, i32* %27, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad16x16x4d_c(i8* nocapture readonly, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = load i8*, i8** %2, align 8
  %7 = tail call i32 @vpx_sad16x16_c(i8* %0, i32 %1, i8* %6, i32 %3)
  store i32 %7, i32* %4, align 4
  %8 = getelementptr inbounds i8*, i8** %2, i64 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @vpx_sad16x16_c(i8* %0, i32 %1, i8* %9, i32 %3)
  %11 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds i8*, i8** %2, i64 2
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i32 @vpx_sad16x16_c(i8* %0, i32 %1, i8* %13, i32 %3)
  %15 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i8*, i8** %2, i64 3
  %17 = load i8*, i8** %16, align 8
  %18 = tail call i32 @vpx_sad16x16_c(i8* %0, i32 %1, i8* %17, i32 %3)
  %19 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %18, i32* %19, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_sad16x8_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = sext i32 %1 to i64
  %6 = sext i32 %3 to i64
  %7 = bitcast i8* %0 to <16 x i8>*
  %8 = load <16 x i8>, <16 x i8>* %7, align 1
  %9 = zext <16 x i8> %8 to <16 x i32>
  %10 = bitcast i8* %2 to <16 x i8>*
  %11 = load <16 x i8>, <16 x i8>* %10, align 1
  %12 = zext <16 x i8> %11 to <16 x i32>
  %13 = sub nsw <16 x i32> %9, %12
  %14 = icmp slt <16 x i32> %13, zeroinitializer
  %15 = sub nsw <16 x i32> zeroinitializer, %13
  %16 = select <16 x i1> %14, <16 x i32> %15, <16 x i32> %13
  %17 = shufflevector <16 x i32> %16, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %18 = add <16 x i32> %16, %17
  %19 = shufflevector <16 x i32> %18, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %20 = add <16 x i32> %18, %19
  %21 = shufflevector <16 x i32> %20, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %22 = add <16 x i32> %20, %21
  %23 = shufflevector <16 x i32> %22, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %24 = add <16 x i32> %22, %23
  %25 = extractelement <16 x i32> %24, i32 0
  %26 = getelementptr inbounds i8, i8* %0, i64 %5
  %27 = getelementptr inbounds i8, i8* %2, i64 %6
  %28 = bitcast i8* %26 to <16 x i8>*
  %29 = load <16 x i8>, <16 x i8>* %28, align 1
  %30 = zext <16 x i8> %29 to <16 x i32>
  %31 = bitcast i8* %27 to <16 x i8>*
  %32 = load <16 x i8>, <16 x i8>* %31, align 1
  %33 = zext <16 x i8> %32 to <16 x i32>
  %34 = sub nsw <16 x i32> %30, %33
  %35 = icmp slt <16 x i32> %34, zeroinitializer
  %36 = sub nsw <16 x i32> zeroinitializer, %34
  %37 = select <16 x i1> %35, <16 x i32> %36, <16 x i32> %34
  %38 = shufflevector <16 x i32> %37, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %39 = add <16 x i32> %37, %38
  %40 = shufflevector <16 x i32> %39, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %41 = add <16 x i32> %39, %40
  %42 = shufflevector <16 x i32> %41, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %43 = add <16 x i32> %41, %42
  %44 = shufflevector <16 x i32> %43, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %45 = add <16 x i32> %43, %44
  %46 = extractelement <16 x i32> %45, i32 0
  %47 = add i32 %46, %25
  %48 = getelementptr inbounds i8, i8* %26, i64 %5
  %49 = getelementptr inbounds i8, i8* %27, i64 %6
  %50 = bitcast i8* %48 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1
  %52 = zext <16 x i8> %51 to <16 x i32>
  %53 = bitcast i8* %49 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1
  %55 = zext <16 x i8> %54 to <16 x i32>
  %56 = sub nsw <16 x i32> %52, %55
  %57 = icmp slt <16 x i32> %56, zeroinitializer
  %58 = sub nsw <16 x i32> zeroinitializer, %56
  %59 = select <16 x i1> %57, <16 x i32> %58, <16 x i32> %56
  %60 = shufflevector <16 x i32> %59, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %61 = add <16 x i32> %59, %60
  %62 = shufflevector <16 x i32> %61, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %63 = add <16 x i32> %61, %62
  %64 = shufflevector <16 x i32> %63, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %65 = add <16 x i32> %63, %64
  %66 = shufflevector <16 x i32> %65, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %67 = add <16 x i32> %65, %66
  %68 = extractelement <16 x i32> %67, i32 0
  %69 = add i32 %68, %47
  %70 = getelementptr inbounds i8, i8* %48, i64 %5
  %71 = getelementptr inbounds i8, i8* %49, i64 %6
  %72 = bitcast i8* %70 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1
  %74 = zext <16 x i8> %73 to <16 x i32>
  %75 = bitcast i8* %71 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 1
  %77 = zext <16 x i8> %76 to <16 x i32>
  %78 = sub nsw <16 x i32> %74, %77
  %79 = icmp slt <16 x i32> %78, zeroinitializer
  %80 = sub nsw <16 x i32> zeroinitializer, %78
  %81 = select <16 x i1> %79, <16 x i32> %80, <16 x i32> %78
  %82 = shufflevector <16 x i32> %81, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %83 = add <16 x i32> %81, %82
  %84 = shufflevector <16 x i32> %83, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %85 = add <16 x i32> %83, %84
  %86 = shufflevector <16 x i32> %85, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %87 = add <16 x i32> %85, %86
  %88 = shufflevector <16 x i32> %87, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %89 = add <16 x i32> %87, %88
  %90 = extractelement <16 x i32> %89, i32 0
  %91 = add i32 %90, %69
  %92 = getelementptr inbounds i8, i8* %70, i64 %5
  %93 = getelementptr inbounds i8, i8* %71, i64 %6
  %94 = bitcast i8* %92 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1
  %96 = zext <16 x i8> %95 to <16 x i32>
  %97 = bitcast i8* %93 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1
  %99 = zext <16 x i8> %98 to <16 x i32>
  %100 = sub nsw <16 x i32> %96, %99
  %101 = icmp slt <16 x i32> %100, zeroinitializer
  %102 = sub nsw <16 x i32> zeroinitializer, %100
  %103 = select <16 x i1> %101, <16 x i32> %102, <16 x i32> %100
  %104 = shufflevector <16 x i32> %103, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %105 = add <16 x i32> %103, %104
  %106 = shufflevector <16 x i32> %105, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %107 = add <16 x i32> %105, %106
  %108 = shufflevector <16 x i32> %107, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %109 = add <16 x i32> %107, %108
  %110 = shufflevector <16 x i32> %109, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %111 = add <16 x i32> %109, %110
  %112 = extractelement <16 x i32> %111, i32 0
  %113 = add i32 %112, %91
  %114 = getelementptr inbounds i8, i8* %92, i64 %5
  %115 = getelementptr inbounds i8, i8* %93, i64 %6
  %116 = bitcast i8* %114 to <16 x i8>*
  %117 = load <16 x i8>, <16 x i8>* %116, align 1
  %118 = zext <16 x i8> %117 to <16 x i32>
  %119 = bitcast i8* %115 to <16 x i8>*
  %120 = load <16 x i8>, <16 x i8>* %119, align 1
  %121 = zext <16 x i8> %120 to <16 x i32>
  %122 = sub nsw <16 x i32> %118, %121
  %123 = icmp slt <16 x i32> %122, zeroinitializer
  %124 = sub nsw <16 x i32> zeroinitializer, %122
  %125 = select <16 x i1> %123, <16 x i32> %124, <16 x i32> %122
  %126 = shufflevector <16 x i32> %125, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %127 = add <16 x i32> %125, %126
  %128 = shufflevector <16 x i32> %127, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %129 = add <16 x i32> %127, %128
  %130 = shufflevector <16 x i32> %129, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %131 = add <16 x i32> %129, %130
  %132 = shufflevector <16 x i32> %131, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %133 = add <16 x i32> %131, %132
  %134 = extractelement <16 x i32> %133, i32 0
  %135 = add i32 %134, %113
  %136 = getelementptr inbounds i8, i8* %114, i64 %5
  %137 = getelementptr inbounds i8, i8* %115, i64 %6
  %138 = bitcast i8* %136 to <16 x i8>*
  %139 = load <16 x i8>, <16 x i8>* %138, align 1
  %140 = zext <16 x i8> %139 to <16 x i32>
  %141 = bitcast i8* %137 to <16 x i8>*
  %142 = load <16 x i8>, <16 x i8>* %141, align 1
  %143 = zext <16 x i8> %142 to <16 x i32>
  %144 = sub nsw <16 x i32> %140, %143
  %145 = icmp slt <16 x i32> %144, zeroinitializer
  %146 = sub nsw <16 x i32> zeroinitializer, %144
  %147 = select <16 x i1> %145, <16 x i32> %146, <16 x i32> %144
  %148 = shufflevector <16 x i32> %147, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %149 = add <16 x i32> %147, %148
  %150 = shufflevector <16 x i32> %149, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %151 = add <16 x i32> %149, %150
  %152 = shufflevector <16 x i32> %151, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %153 = add <16 x i32> %151, %152
  %154 = shufflevector <16 x i32> %153, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %155 = add <16 x i32> %153, %154
  %156 = extractelement <16 x i32> %155, i32 0
  %157 = add i32 %156, %135
  %158 = getelementptr inbounds i8, i8* %136, i64 %5
  %159 = getelementptr inbounds i8, i8* %137, i64 %6
  %160 = bitcast i8* %158 to <16 x i8>*
  %161 = load <16 x i8>, <16 x i8>* %160, align 1
  %162 = zext <16 x i8> %161 to <16 x i32>
  %163 = bitcast i8* %159 to <16 x i8>*
  %164 = load <16 x i8>, <16 x i8>* %163, align 1
  %165 = zext <16 x i8> %164 to <16 x i32>
  %166 = sub nsw <16 x i32> %162, %165
  %167 = icmp slt <16 x i32> %166, zeroinitializer
  %168 = sub nsw <16 x i32> zeroinitializer, %166
  %169 = select <16 x i1> %167, <16 x i32> %168, <16 x i32> %166
  %170 = shufflevector <16 x i32> %169, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %171 = add <16 x i32> %169, %170
  %172 = shufflevector <16 x i32> %171, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %173 = add <16 x i32> %171, %172
  %174 = shufflevector <16 x i32> %173, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %175 = add <16 x i32> %173, %174
  %176 = shufflevector <16 x i32> %175, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %177 = add <16 x i32> %175, %176
  %178 = extractelement <16 x i32> %177, i32 0
  %179 = add i32 %178, %157
  ret i32 %179
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_sad16x8_avg_c(i8* nocapture readonly, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [128 x i8], align 16
  %7 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 128, i1 false)
  call void @vpx_comp_avg_pred_c(i8* nonnull %7, i8* %4, i32 16, i32 8, i8* %2, i32 %3) #5
  %8 = sext i32 %1 to i64
  %9 = bitcast i8* %0 to <16 x i8>*
  %10 = load <16 x i8>, <16 x i8>* %9, align 1
  %11 = zext <16 x i8> %10 to <16 x i32>
  %12 = bitcast [128 x i8]* %6 to <16 x i8>*
  %13 = load <16 x i8>, <16 x i8>* %12, align 16
  %14 = zext <16 x i8> %13 to <16 x i32>
  %15 = sub nsw <16 x i32> %11, %14
  %16 = icmp slt <16 x i32> %15, zeroinitializer
  %17 = sub nsw <16 x i32> zeroinitializer, %15
  %18 = select <16 x i1> %16, <16 x i32> %17, <16 x i32> %15
  %19 = shufflevector <16 x i32> %18, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %20 = add <16 x i32> %18, %19
  %21 = shufflevector <16 x i32> %20, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %22 = add <16 x i32> %20, %21
  %23 = shufflevector <16 x i32> %22, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %24 = add <16 x i32> %22, %23
  %25 = shufflevector <16 x i32> %24, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %26 = add <16 x i32> %24, %25
  %27 = extractelement <16 x i32> %26, i32 0
  %28 = getelementptr inbounds i8, i8* %0, i64 %8
  %29 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 16
  %30 = bitcast i8* %28 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = zext <16 x i8> %31 to <16 x i32>
  %33 = bitcast i8* %29 to <16 x i8>*
  %34 = load <16 x i8>, <16 x i8>* %33, align 16
  %35 = zext <16 x i8> %34 to <16 x i32>
  %36 = sub nsw <16 x i32> %32, %35
  %37 = icmp slt <16 x i32> %36, zeroinitializer
  %38 = sub nsw <16 x i32> zeroinitializer, %36
  %39 = select <16 x i1> %37, <16 x i32> %38, <16 x i32> %36
  %40 = shufflevector <16 x i32> %39, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %41 = add <16 x i32> %39, %40
  %42 = shufflevector <16 x i32> %41, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %43 = add <16 x i32> %41, %42
  %44 = shufflevector <16 x i32> %43, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %45 = add <16 x i32> %43, %44
  %46 = shufflevector <16 x i32> %45, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %47 = add <16 x i32> %45, %46
  %48 = extractelement <16 x i32> %47, i32 0
  %49 = add i32 %48, %27
  %50 = getelementptr inbounds i8, i8* %28, i64 %8
  %51 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 32
  %52 = bitcast i8* %50 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = zext <16 x i8> %53 to <16 x i32>
  %55 = bitcast i8* %51 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 16
  %57 = zext <16 x i8> %56 to <16 x i32>
  %58 = sub nsw <16 x i32> %54, %57
  %59 = icmp slt <16 x i32> %58, zeroinitializer
  %60 = sub nsw <16 x i32> zeroinitializer, %58
  %61 = select <16 x i1> %59, <16 x i32> %60, <16 x i32> %58
  %62 = shufflevector <16 x i32> %61, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %63 = add <16 x i32> %61, %62
  %64 = shufflevector <16 x i32> %63, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %65 = add <16 x i32> %63, %64
  %66 = shufflevector <16 x i32> %65, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %67 = add <16 x i32> %65, %66
  %68 = shufflevector <16 x i32> %67, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %69 = add <16 x i32> %67, %68
  %70 = extractelement <16 x i32> %69, i32 0
  %71 = add i32 %70, %49
  %72 = getelementptr inbounds i8, i8* %50, i64 %8
  %73 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 48
  %74 = bitcast i8* %72 to <16 x i8>*
  %75 = load <16 x i8>, <16 x i8>* %74, align 1
  %76 = zext <16 x i8> %75 to <16 x i32>
  %77 = bitcast i8* %73 to <16 x i8>*
  %78 = load <16 x i8>, <16 x i8>* %77, align 16
  %79 = zext <16 x i8> %78 to <16 x i32>
  %80 = sub nsw <16 x i32> %76, %79
  %81 = icmp slt <16 x i32> %80, zeroinitializer
  %82 = sub nsw <16 x i32> zeroinitializer, %80
  %83 = select <16 x i1> %81, <16 x i32> %82, <16 x i32> %80
  %84 = shufflevector <16 x i32> %83, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %85 = add <16 x i32> %83, %84
  %86 = shufflevector <16 x i32> %85, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %87 = add <16 x i32> %85, %86
  %88 = shufflevector <16 x i32> %87, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %89 = add <16 x i32> %87, %88
  %90 = shufflevector <16 x i32> %89, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %91 = add <16 x i32> %89, %90
  %92 = extractelement <16 x i32> %91, i32 0
  %93 = add i32 %92, %71
  %94 = getelementptr inbounds i8, i8* %72, i64 %8
  %95 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 64
  %96 = bitcast i8* %94 to <16 x i8>*
  %97 = load <16 x i8>, <16 x i8>* %96, align 1
  %98 = zext <16 x i8> %97 to <16 x i32>
  %99 = bitcast i8* %95 to <16 x i8>*
  %100 = load <16 x i8>, <16 x i8>* %99, align 16
  %101 = zext <16 x i8> %100 to <16 x i32>
  %102 = sub nsw <16 x i32> %98, %101
  %103 = icmp slt <16 x i32> %102, zeroinitializer
  %104 = sub nsw <16 x i32> zeroinitializer, %102
  %105 = select <16 x i1> %103, <16 x i32> %104, <16 x i32> %102
  %106 = shufflevector <16 x i32> %105, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %107 = add <16 x i32> %105, %106
  %108 = shufflevector <16 x i32> %107, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %109 = add <16 x i32> %107, %108
  %110 = shufflevector <16 x i32> %109, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %111 = add <16 x i32> %109, %110
  %112 = shufflevector <16 x i32> %111, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %113 = add <16 x i32> %111, %112
  %114 = extractelement <16 x i32> %113, i32 0
  %115 = add i32 %114, %93
  %116 = getelementptr inbounds i8, i8* %94, i64 %8
  %117 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 80
  %118 = bitcast i8* %116 to <16 x i8>*
  %119 = load <16 x i8>, <16 x i8>* %118, align 1
  %120 = zext <16 x i8> %119 to <16 x i32>
  %121 = bitcast i8* %117 to <16 x i8>*
  %122 = load <16 x i8>, <16 x i8>* %121, align 16
  %123 = zext <16 x i8> %122 to <16 x i32>
  %124 = sub nsw <16 x i32> %120, %123
  %125 = icmp slt <16 x i32> %124, zeroinitializer
  %126 = sub nsw <16 x i32> zeroinitializer, %124
  %127 = select <16 x i1> %125, <16 x i32> %126, <16 x i32> %124
  %128 = shufflevector <16 x i32> %127, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %129 = add <16 x i32> %127, %128
  %130 = shufflevector <16 x i32> %129, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %131 = add <16 x i32> %129, %130
  %132 = shufflevector <16 x i32> %131, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %133 = add <16 x i32> %131, %132
  %134 = shufflevector <16 x i32> %133, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %135 = add <16 x i32> %133, %134
  %136 = extractelement <16 x i32> %135, i32 0
  %137 = add i32 %136, %115
  %138 = getelementptr inbounds i8, i8* %116, i64 %8
  %139 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 96
  %140 = bitcast i8* %138 to <16 x i8>*
  %141 = load <16 x i8>, <16 x i8>* %140, align 1
  %142 = zext <16 x i8> %141 to <16 x i32>
  %143 = bitcast i8* %139 to <16 x i8>*
  %144 = load <16 x i8>, <16 x i8>* %143, align 16
  %145 = zext <16 x i8> %144 to <16 x i32>
  %146 = sub nsw <16 x i32> %142, %145
  %147 = icmp slt <16 x i32> %146, zeroinitializer
  %148 = sub nsw <16 x i32> zeroinitializer, %146
  %149 = select <16 x i1> %147, <16 x i32> %148, <16 x i32> %146
  %150 = shufflevector <16 x i32> %149, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %151 = add <16 x i32> %149, %150
  %152 = shufflevector <16 x i32> %151, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %153 = add <16 x i32> %151, %152
  %154 = shufflevector <16 x i32> %153, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %155 = add <16 x i32> %153, %154
  %156 = shufflevector <16 x i32> %155, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %157 = add <16 x i32> %155, %156
  %158 = extractelement <16 x i32> %157, i32 0
  %159 = add i32 %158, %137
  %160 = getelementptr inbounds i8, i8* %138, i64 %8
  %161 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 112
  %162 = bitcast i8* %160 to <16 x i8>*
  %163 = load <16 x i8>, <16 x i8>* %162, align 1
  %164 = zext <16 x i8> %163 to <16 x i32>
  %165 = bitcast i8* %161 to <16 x i8>*
  %166 = load <16 x i8>, <16 x i8>* %165, align 16
  %167 = zext <16 x i8> %166 to <16 x i32>
  %168 = sub nsw <16 x i32> %164, %167
  %169 = icmp slt <16 x i32> %168, zeroinitializer
  %170 = sub nsw <16 x i32> zeroinitializer, %168
  %171 = select <16 x i1> %169, <16 x i32> %170, <16 x i32> %168
  %172 = shufflevector <16 x i32> %171, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %173 = add <16 x i32> %171, %172
  %174 = shufflevector <16 x i32> %173, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %175 = add <16 x i32> %173, %174
  %176 = shufflevector <16 x i32> %175, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %177 = add <16 x i32> %175, %176
  %178 = shufflevector <16 x i32> %177, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %179 = add <16 x i32> %177, %178
  %180 = extractelement <16 x i32> %179, i32 0
  %181 = add i32 %180, %159
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #5
  ret i32 %181
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad16x8x3_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = tail call i32 @vpx_sad16x8_c(i8* %0, i32 %1, i8* %2, i32 %3)
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds i8, i8* %2, i64 1
  %8 = tail call i32 @vpx_sad16x8_c(i8* %0, i32 %1, i8* %7, i32 %3)
  %9 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %2, i64 2
  %11 = tail call i32 @vpx_sad16x8_c(i8* %0, i32 %1, i8* %10, i32 %3)
  %12 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %11, i32* %12, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad16x8x8_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = tail call i32 @vpx_sad16x8_c(i8* %0, i32 %1, i8* %2, i32 %3)
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds i8, i8* %2, i64 1
  %8 = tail call i32 @vpx_sad16x8_c(i8* %0, i32 %1, i8* %7, i32 %3)
  %9 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %2, i64 2
  %11 = tail call i32 @vpx_sad16x8_c(i8* %0, i32 %1, i8* %10, i32 %3)
  %12 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 3
  %14 = tail call i32 @vpx_sad16x8_c(i8* %0, i32 %1, i8* %13, i32 %3)
  %15 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %2, i64 4
  %17 = tail call i32 @vpx_sad16x8_c(i8* %0, i32 %1, i8* %16, i32 %3)
  %18 = getelementptr inbounds i32, i32* %4, i64 4
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %2, i64 5
  %20 = tail call i32 @vpx_sad16x8_c(i8* %0, i32 %1, i8* %19, i32 %3)
  %21 = getelementptr inbounds i32, i32* %4, i64 5
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %2, i64 6
  %23 = tail call i32 @vpx_sad16x8_c(i8* %0, i32 %1, i8* %22, i32 %3)
  %24 = getelementptr inbounds i32, i32* %4, i64 6
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %2, i64 7
  %26 = tail call i32 @vpx_sad16x8_c(i8* %0, i32 %1, i8* %25, i32 %3)
  %27 = getelementptr inbounds i32, i32* %4, i64 7
  store i32 %26, i32* %27, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad16x8x4d_c(i8* nocapture readonly, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = load i8*, i8** %2, align 8
  %7 = tail call i32 @vpx_sad16x8_c(i8* %0, i32 %1, i8* %6, i32 %3)
  store i32 %7, i32* %4, align 4
  %8 = getelementptr inbounds i8*, i8** %2, i64 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @vpx_sad16x8_c(i8* %0, i32 %1, i8* %9, i32 %3)
  %11 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds i8*, i8** %2, i64 2
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i32 @vpx_sad16x8_c(i8* %0, i32 %1, i8* %13, i32 %3)
  %15 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i8*, i8** %2, i64 3
  %17 = load i8*, i8** %16, align 8
  %18 = tail call i32 @vpx_sad16x8_c(i8* %0, i32 %1, i8* %17, i32 %3)
  %19 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %18, i32* %19, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_sad8x16_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = sext i32 %1 to i64
  %6 = sext i32 %3 to i64
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi i32 [ 0, %4 ], [ %29, %7 ]
  %9 = phi i32 [ 0, %4 ], [ %32, %7 ]
  %10 = phi i8* [ %0, %4 ], [ %30, %7 ]
  %11 = phi i8* [ %2, %4 ], [ %31, %7 ]
  %12 = bitcast i8* %10 to <8 x i8>*
  %13 = load <8 x i8>, <8 x i8>* %12, align 1
  %14 = zext <8 x i8> %13 to <8 x i32>
  %15 = bitcast i8* %11 to <8 x i8>*
  %16 = load <8 x i8>, <8 x i8>* %15, align 1
  %17 = zext <8 x i8> %16 to <8 x i32>
  %18 = sub nsw <8 x i32> %14, %17
  %19 = icmp slt <8 x i32> %18, zeroinitializer
  %20 = sub nsw <8 x i32> zeroinitializer, %18
  %21 = select <8 x i1> %19, <8 x i32> %20, <8 x i32> %18
  %22 = shufflevector <8 x i32> %21, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %23 = add <8 x i32> %21, %22
  %24 = shufflevector <8 x i32> %23, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %25 = add <8 x i32> %23, %24
  %26 = shufflevector <8 x i32> %25, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %27 = add <8 x i32> %25, %26
  %28 = extractelement <8 x i32> %27, i32 0
  %29 = add i32 %28, %8
  %30 = getelementptr inbounds i8, i8* %10, i64 %5
  %31 = getelementptr inbounds i8, i8* %11, i64 %6
  %32 = add nuw nsw i32 %9, 1
  %33 = icmp eq i32 %32, 16
  br i1 %33, label %34, label %7

34:                                               ; preds = %7
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_sad8x16_avg_c(i8* nocapture readonly, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [128 x i8], align 16
  %7 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 128, i1 false)
  call void @vpx_comp_avg_pred_c(i8* nonnull %7, i8* %4, i32 8, i32 16, i8* %2, i32 %3) #5
  %8 = sext i32 %1 to i64
  br label %9

9:                                                ; preds = %9, %5
  %10 = phi i32 [ 0, %5 ], [ %31, %9 ]
  %11 = phi i32 [ 0, %5 ], [ %34, %9 ]
  %12 = phi i8* [ %0, %5 ], [ %32, %9 ]
  %13 = phi i8* [ %7, %5 ], [ %33, %9 ]
  %14 = bitcast i8* %12 to <8 x i8>*
  %15 = load <8 x i8>, <8 x i8>* %14, align 1
  %16 = zext <8 x i8> %15 to <8 x i32>
  %17 = bitcast i8* %13 to <8 x i8>*
  %18 = load <8 x i8>, <8 x i8>* %17, align 1
  %19 = zext <8 x i8> %18 to <8 x i32>
  %20 = sub nsw <8 x i32> %16, %19
  %21 = icmp slt <8 x i32> %20, zeroinitializer
  %22 = sub nsw <8 x i32> zeroinitializer, %20
  %23 = select <8 x i1> %21, <8 x i32> %22, <8 x i32> %20
  %24 = shufflevector <8 x i32> %23, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %25 = add <8 x i32> %23, %24
  %26 = shufflevector <8 x i32> %25, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %27 = add <8 x i32> %25, %26
  %28 = shufflevector <8 x i32> %27, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %29 = add <8 x i32> %27, %28
  %30 = extractelement <8 x i32> %29, i32 0
  %31 = add i32 %30, %10
  %32 = getelementptr inbounds i8, i8* %12, i64 %8
  %33 = getelementptr inbounds i8, i8* %13, i64 8
  %34 = add nuw nsw i32 %11, 1
  %35 = icmp eq i32 %34, 16
  br i1 %35, label %36, label %9

36:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #5
  ret i32 %31
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad8x16x3_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = tail call i32 @vpx_sad8x16_c(i8* %0, i32 %1, i8* %2, i32 %3)
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds i8, i8* %2, i64 1
  %8 = tail call i32 @vpx_sad8x16_c(i8* %0, i32 %1, i8* %7, i32 %3)
  %9 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %2, i64 2
  %11 = tail call i32 @vpx_sad8x16_c(i8* %0, i32 %1, i8* %10, i32 %3)
  %12 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %11, i32* %12, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad8x16x8_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = tail call i32 @vpx_sad8x16_c(i8* %0, i32 %1, i8* %2, i32 %3)
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds i8, i8* %2, i64 1
  %8 = tail call i32 @vpx_sad8x16_c(i8* %0, i32 %1, i8* %7, i32 %3)
  %9 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %2, i64 2
  %11 = tail call i32 @vpx_sad8x16_c(i8* %0, i32 %1, i8* %10, i32 %3)
  %12 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 3
  %14 = tail call i32 @vpx_sad8x16_c(i8* %0, i32 %1, i8* %13, i32 %3)
  %15 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %2, i64 4
  %17 = tail call i32 @vpx_sad8x16_c(i8* %0, i32 %1, i8* %16, i32 %3)
  %18 = getelementptr inbounds i32, i32* %4, i64 4
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %2, i64 5
  %20 = tail call i32 @vpx_sad8x16_c(i8* %0, i32 %1, i8* %19, i32 %3)
  %21 = getelementptr inbounds i32, i32* %4, i64 5
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %2, i64 6
  %23 = tail call i32 @vpx_sad8x16_c(i8* %0, i32 %1, i8* %22, i32 %3)
  %24 = getelementptr inbounds i32, i32* %4, i64 6
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %2, i64 7
  %26 = tail call i32 @vpx_sad8x16_c(i8* %0, i32 %1, i8* %25, i32 %3)
  %27 = getelementptr inbounds i32, i32* %4, i64 7
  store i32 %26, i32* %27, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad8x16x4d_c(i8* nocapture readonly, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = load i8*, i8** %2, align 8
  %7 = tail call i32 @vpx_sad8x16_c(i8* %0, i32 %1, i8* %6, i32 %3)
  store i32 %7, i32* %4, align 4
  %8 = getelementptr inbounds i8*, i8** %2, i64 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @vpx_sad8x16_c(i8* %0, i32 %1, i8* %9, i32 %3)
  %11 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds i8*, i8** %2, i64 2
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i32 @vpx_sad8x16_c(i8* %0, i32 %1, i8* %13, i32 %3)
  %15 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i8*, i8** %2, i64 3
  %17 = load i8*, i8** %16, align 8
  %18 = tail call i32 @vpx_sad8x16_c(i8* %0, i32 %1, i8* %17, i32 %3)
  %19 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %18, i32* %19, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_sad8x8_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = sext i32 %1 to i64
  %6 = sext i32 %3 to i64
  %7 = bitcast i8* %0 to <8 x i8>*
  %8 = load <8 x i8>, <8 x i8>* %7, align 1
  %9 = zext <8 x i8> %8 to <8 x i32>
  %10 = bitcast i8* %2 to <8 x i8>*
  %11 = load <8 x i8>, <8 x i8>* %10, align 1
  %12 = zext <8 x i8> %11 to <8 x i32>
  %13 = sub nsw <8 x i32> %9, %12
  %14 = icmp slt <8 x i32> %13, zeroinitializer
  %15 = sub nsw <8 x i32> zeroinitializer, %13
  %16 = select <8 x i1> %14, <8 x i32> %15, <8 x i32> %13
  %17 = shufflevector <8 x i32> %16, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %18 = add <8 x i32> %16, %17
  %19 = shufflevector <8 x i32> %18, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %20 = add <8 x i32> %18, %19
  %21 = shufflevector <8 x i32> %20, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %22 = add <8 x i32> %20, %21
  %23 = extractelement <8 x i32> %22, i32 0
  %24 = getelementptr inbounds i8, i8* %0, i64 %5
  %25 = getelementptr inbounds i8, i8* %2, i64 %6
  %26 = bitcast i8* %24 to <8 x i8>*
  %27 = load <8 x i8>, <8 x i8>* %26, align 1
  %28 = zext <8 x i8> %27 to <8 x i32>
  %29 = bitcast i8* %25 to <8 x i8>*
  %30 = load <8 x i8>, <8 x i8>* %29, align 1
  %31 = zext <8 x i8> %30 to <8 x i32>
  %32 = sub nsw <8 x i32> %28, %31
  %33 = icmp slt <8 x i32> %32, zeroinitializer
  %34 = sub nsw <8 x i32> zeroinitializer, %32
  %35 = select <8 x i1> %33, <8 x i32> %34, <8 x i32> %32
  %36 = shufflevector <8 x i32> %35, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %37 = add <8 x i32> %35, %36
  %38 = shufflevector <8 x i32> %37, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %39 = add <8 x i32> %37, %38
  %40 = shufflevector <8 x i32> %39, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %41 = add <8 x i32> %39, %40
  %42 = extractelement <8 x i32> %41, i32 0
  %43 = add i32 %42, %23
  %44 = getelementptr inbounds i8, i8* %24, i64 %5
  %45 = getelementptr inbounds i8, i8* %25, i64 %6
  %46 = bitcast i8* %44 to <8 x i8>*
  %47 = load <8 x i8>, <8 x i8>* %46, align 1
  %48 = zext <8 x i8> %47 to <8 x i32>
  %49 = bitcast i8* %45 to <8 x i8>*
  %50 = load <8 x i8>, <8 x i8>* %49, align 1
  %51 = zext <8 x i8> %50 to <8 x i32>
  %52 = sub nsw <8 x i32> %48, %51
  %53 = icmp slt <8 x i32> %52, zeroinitializer
  %54 = sub nsw <8 x i32> zeroinitializer, %52
  %55 = select <8 x i1> %53, <8 x i32> %54, <8 x i32> %52
  %56 = shufflevector <8 x i32> %55, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %57 = add <8 x i32> %55, %56
  %58 = shufflevector <8 x i32> %57, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %59 = add <8 x i32> %57, %58
  %60 = shufflevector <8 x i32> %59, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %61 = add <8 x i32> %59, %60
  %62 = extractelement <8 x i32> %61, i32 0
  %63 = add i32 %62, %43
  %64 = getelementptr inbounds i8, i8* %44, i64 %5
  %65 = getelementptr inbounds i8, i8* %45, i64 %6
  %66 = bitcast i8* %64 to <8 x i8>*
  %67 = load <8 x i8>, <8 x i8>* %66, align 1
  %68 = zext <8 x i8> %67 to <8 x i32>
  %69 = bitcast i8* %65 to <8 x i8>*
  %70 = load <8 x i8>, <8 x i8>* %69, align 1
  %71 = zext <8 x i8> %70 to <8 x i32>
  %72 = sub nsw <8 x i32> %68, %71
  %73 = icmp slt <8 x i32> %72, zeroinitializer
  %74 = sub nsw <8 x i32> zeroinitializer, %72
  %75 = select <8 x i1> %73, <8 x i32> %74, <8 x i32> %72
  %76 = shufflevector <8 x i32> %75, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %77 = add <8 x i32> %75, %76
  %78 = shufflevector <8 x i32> %77, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %79 = add <8 x i32> %77, %78
  %80 = shufflevector <8 x i32> %79, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %81 = add <8 x i32> %79, %80
  %82 = extractelement <8 x i32> %81, i32 0
  %83 = add i32 %82, %63
  %84 = getelementptr inbounds i8, i8* %64, i64 %5
  %85 = getelementptr inbounds i8, i8* %65, i64 %6
  %86 = bitcast i8* %84 to <8 x i8>*
  %87 = load <8 x i8>, <8 x i8>* %86, align 1
  %88 = zext <8 x i8> %87 to <8 x i32>
  %89 = bitcast i8* %85 to <8 x i8>*
  %90 = load <8 x i8>, <8 x i8>* %89, align 1
  %91 = zext <8 x i8> %90 to <8 x i32>
  %92 = sub nsw <8 x i32> %88, %91
  %93 = icmp slt <8 x i32> %92, zeroinitializer
  %94 = sub nsw <8 x i32> zeroinitializer, %92
  %95 = select <8 x i1> %93, <8 x i32> %94, <8 x i32> %92
  %96 = shufflevector <8 x i32> %95, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %97 = add <8 x i32> %95, %96
  %98 = shufflevector <8 x i32> %97, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %99 = add <8 x i32> %97, %98
  %100 = shufflevector <8 x i32> %99, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %101 = add <8 x i32> %99, %100
  %102 = extractelement <8 x i32> %101, i32 0
  %103 = add i32 %102, %83
  %104 = getelementptr inbounds i8, i8* %84, i64 %5
  %105 = getelementptr inbounds i8, i8* %85, i64 %6
  %106 = bitcast i8* %104 to <8 x i8>*
  %107 = load <8 x i8>, <8 x i8>* %106, align 1
  %108 = zext <8 x i8> %107 to <8 x i32>
  %109 = bitcast i8* %105 to <8 x i8>*
  %110 = load <8 x i8>, <8 x i8>* %109, align 1
  %111 = zext <8 x i8> %110 to <8 x i32>
  %112 = sub nsw <8 x i32> %108, %111
  %113 = icmp slt <8 x i32> %112, zeroinitializer
  %114 = sub nsw <8 x i32> zeroinitializer, %112
  %115 = select <8 x i1> %113, <8 x i32> %114, <8 x i32> %112
  %116 = shufflevector <8 x i32> %115, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %117 = add <8 x i32> %115, %116
  %118 = shufflevector <8 x i32> %117, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %119 = add <8 x i32> %117, %118
  %120 = shufflevector <8 x i32> %119, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %121 = add <8 x i32> %119, %120
  %122 = extractelement <8 x i32> %121, i32 0
  %123 = add i32 %122, %103
  %124 = getelementptr inbounds i8, i8* %104, i64 %5
  %125 = getelementptr inbounds i8, i8* %105, i64 %6
  %126 = bitcast i8* %124 to <8 x i8>*
  %127 = load <8 x i8>, <8 x i8>* %126, align 1
  %128 = zext <8 x i8> %127 to <8 x i32>
  %129 = bitcast i8* %125 to <8 x i8>*
  %130 = load <8 x i8>, <8 x i8>* %129, align 1
  %131 = zext <8 x i8> %130 to <8 x i32>
  %132 = sub nsw <8 x i32> %128, %131
  %133 = icmp slt <8 x i32> %132, zeroinitializer
  %134 = sub nsw <8 x i32> zeroinitializer, %132
  %135 = select <8 x i1> %133, <8 x i32> %134, <8 x i32> %132
  %136 = shufflevector <8 x i32> %135, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %137 = add <8 x i32> %135, %136
  %138 = shufflevector <8 x i32> %137, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %139 = add <8 x i32> %137, %138
  %140 = shufflevector <8 x i32> %139, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %141 = add <8 x i32> %139, %140
  %142 = extractelement <8 x i32> %141, i32 0
  %143 = add i32 %142, %123
  %144 = getelementptr inbounds i8, i8* %124, i64 %5
  %145 = getelementptr inbounds i8, i8* %125, i64 %6
  %146 = bitcast i8* %144 to <8 x i8>*
  %147 = load <8 x i8>, <8 x i8>* %146, align 1
  %148 = zext <8 x i8> %147 to <8 x i32>
  %149 = bitcast i8* %145 to <8 x i8>*
  %150 = load <8 x i8>, <8 x i8>* %149, align 1
  %151 = zext <8 x i8> %150 to <8 x i32>
  %152 = sub nsw <8 x i32> %148, %151
  %153 = icmp slt <8 x i32> %152, zeroinitializer
  %154 = sub nsw <8 x i32> zeroinitializer, %152
  %155 = select <8 x i1> %153, <8 x i32> %154, <8 x i32> %152
  %156 = shufflevector <8 x i32> %155, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %157 = add <8 x i32> %155, %156
  %158 = shufflevector <8 x i32> %157, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %159 = add <8 x i32> %157, %158
  %160 = shufflevector <8 x i32> %159, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %161 = add <8 x i32> %159, %160
  %162 = extractelement <8 x i32> %161, i32 0
  %163 = add i32 %162, %143
  ret i32 %163
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_sad8x8_avg_c(i8* nocapture readonly, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [64 x i8], align 16
  %7 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 64, i1 false)
  call void @vpx_comp_avg_pred_c(i8* nonnull %7, i8* %4, i32 8, i32 8, i8* %2, i32 %3) #5
  %8 = sext i32 %1 to i64
  %9 = bitcast i8* %0 to <8 x i8>*
  %10 = load <8 x i8>, <8 x i8>* %9, align 1
  %11 = zext <8 x i8> %10 to <8 x i32>
  %12 = bitcast [64 x i8]* %6 to <8 x i8>*
  %13 = load <8 x i8>, <8 x i8>* %12, align 16
  %14 = zext <8 x i8> %13 to <8 x i32>
  %15 = sub nsw <8 x i32> %11, %14
  %16 = icmp slt <8 x i32> %15, zeroinitializer
  %17 = sub nsw <8 x i32> zeroinitializer, %15
  %18 = select <8 x i1> %16, <8 x i32> %17, <8 x i32> %15
  %19 = shufflevector <8 x i32> %18, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %20 = add <8 x i32> %18, %19
  %21 = shufflevector <8 x i32> %20, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %22 = add <8 x i32> %20, %21
  %23 = shufflevector <8 x i32> %22, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %24 = add <8 x i32> %22, %23
  %25 = extractelement <8 x i32> %24, i32 0
  %26 = getelementptr inbounds i8, i8* %0, i64 %8
  %27 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 8
  %28 = bitcast i8* %26 to <8 x i8>*
  %29 = load <8 x i8>, <8 x i8>* %28, align 1
  %30 = zext <8 x i8> %29 to <8 x i32>
  %31 = bitcast i8* %27 to <8 x i8>*
  %32 = load <8 x i8>, <8 x i8>* %31, align 8
  %33 = zext <8 x i8> %32 to <8 x i32>
  %34 = sub nsw <8 x i32> %30, %33
  %35 = icmp slt <8 x i32> %34, zeroinitializer
  %36 = sub nsw <8 x i32> zeroinitializer, %34
  %37 = select <8 x i1> %35, <8 x i32> %36, <8 x i32> %34
  %38 = shufflevector <8 x i32> %37, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %39 = add <8 x i32> %37, %38
  %40 = shufflevector <8 x i32> %39, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %41 = add <8 x i32> %39, %40
  %42 = shufflevector <8 x i32> %41, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %43 = add <8 x i32> %41, %42
  %44 = extractelement <8 x i32> %43, i32 0
  %45 = add i32 %44, %25
  %46 = getelementptr inbounds i8, i8* %26, i64 %8
  %47 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 16
  %48 = bitcast i8* %46 to <8 x i8>*
  %49 = load <8 x i8>, <8 x i8>* %48, align 1
  %50 = zext <8 x i8> %49 to <8 x i32>
  %51 = bitcast i8* %47 to <8 x i8>*
  %52 = load <8 x i8>, <8 x i8>* %51, align 16
  %53 = zext <8 x i8> %52 to <8 x i32>
  %54 = sub nsw <8 x i32> %50, %53
  %55 = icmp slt <8 x i32> %54, zeroinitializer
  %56 = sub nsw <8 x i32> zeroinitializer, %54
  %57 = select <8 x i1> %55, <8 x i32> %56, <8 x i32> %54
  %58 = shufflevector <8 x i32> %57, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %59 = add <8 x i32> %57, %58
  %60 = shufflevector <8 x i32> %59, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %61 = add <8 x i32> %59, %60
  %62 = shufflevector <8 x i32> %61, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %63 = add <8 x i32> %61, %62
  %64 = extractelement <8 x i32> %63, i32 0
  %65 = add i32 %64, %45
  %66 = getelementptr inbounds i8, i8* %46, i64 %8
  %67 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 24
  %68 = bitcast i8* %66 to <8 x i8>*
  %69 = load <8 x i8>, <8 x i8>* %68, align 1
  %70 = zext <8 x i8> %69 to <8 x i32>
  %71 = bitcast i8* %67 to <8 x i8>*
  %72 = load <8 x i8>, <8 x i8>* %71, align 8
  %73 = zext <8 x i8> %72 to <8 x i32>
  %74 = sub nsw <8 x i32> %70, %73
  %75 = icmp slt <8 x i32> %74, zeroinitializer
  %76 = sub nsw <8 x i32> zeroinitializer, %74
  %77 = select <8 x i1> %75, <8 x i32> %76, <8 x i32> %74
  %78 = shufflevector <8 x i32> %77, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %79 = add <8 x i32> %77, %78
  %80 = shufflevector <8 x i32> %79, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %81 = add <8 x i32> %79, %80
  %82 = shufflevector <8 x i32> %81, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %83 = add <8 x i32> %81, %82
  %84 = extractelement <8 x i32> %83, i32 0
  %85 = add i32 %84, %65
  %86 = getelementptr inbounds i8, i8* %66, i64 %8
  %87 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 32
  %88 = bitcast i8* %86 to <8 x i8>*
  %89 = load <8 x i8>, <8 x i8>* %88, align 1
  %90 = zext <8 x i8> %89 to <8 x i32>
  %91 = bitcast i8* %87 to <8 x i8>*
  %92 = load <8 x i8>, <8 x i8>* %91, align 16
  %93 = zext <8 x i8> %92 to <8 x i32>
  %94 = sub nsw <8 x i32> %90, %93
  %95 = icmp slt <8 x i32> %94, zeroinitializer
  %96 = sub nsw <8 x i32> zeroinitializer, %94
  %97 = select <8 x i1> %95, <8 x i32> %96, <8 x i32> %94
  %98 = shufflevector <8 x i32> %97, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %99 = add <8 x i32> %97, %98
  %100 = shufflevector <8 x i32> %99, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %101 = add <8 x i32> %99, %100
  %102 = shufflevector <8 x i32> %101, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %103 = add <8 x i32> %101, %102
  %104 = extractelement <8 x i32> %103, i32 0
  %105 = add i32 %104, %85
  %106 = getelementptr inbounds i8, i8* %86, i64 %8
  %107 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 40
  %108 = bitcast i8* %106 to <8 x i8>*
  %109 = load <8 x i8>, <8 x i8>* %108, align 1
  %110 = zext <8 x i8> %109 to <8 x i32>
  %111 = bitcast i8* %107 to <8 x i8>*
  %112 = load <8 x i8>, <8 x i8>* %111, align 8
  %113 = zext <8 x i8> %112 to <8 x i32>
  %114 = sub nsw <8 x i32> %110, %113
  %115 = icmp slt <8 x i32> %114, zeroinitializer
  %116 = sub nsw <8 x i32> zeroinitializer, %114
  %117 = select <8 x i1> %115, <8 x i32> %116, <8 x i32> %114
  %118 = shufflevector <8 x i32> %117, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %119 = add <8 x i32> %117, %118
  %120 = shufflevector <8 x i32> %119, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %121 = add <8 x i32> %119, %120
  %122 = shufflevector <8 x i32> %121, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %123 = add <8 x i32> %121, %122
  %124 = extractelement <8 x i32> %123, i32 0
  %125 = add i32 %124, %105
  %126 = getelementptr inbounds i8, i8* %106, i64 %8
  %127 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 48
  %128 = bitcast i8* %126 to <8 x i8>*
  %129 = load <8 x i8>, <8 x i8>* %128, align 1
  %130 = zext <8 x i8> %129 to <8 x i32>
  %131 = bitcast i8* %127 to <8 x i8>*
  %132 = load <8 x i8>, <8 x i8>* %131, align 16
  %133 = zext <8 x i8> %132 to <8 x i32>
  %134 = sub nsw <8 x i32> %130, %133
  %135 = icmp slt <8 x i32> %134, zeroinitializer
  %136 = sub nsw <8 x i32> zeroinitializer, %134
  %137 = select <8 x i1> %135, <8 x i32> %136, <8 x i32> %134
  %138 = shufflevector <8 x i32> %137, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %139 = add <8 x i32> %137, %138
  %140 = shufflevector <8 x i32> %139, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %141 = add <8 x i32> %139, %140
  %142 = shufflevector <8 x i32> %141, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %143 = add <8 x i32> %141, %142
  %144 = extractelement <8 x i32> %143, i32 0
  %145 = add i32 %144, %125
  %146 = getelementptr inbounds i8, i8* %126, i64 %8
  %147 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 56
  %148 = bitcast i8* %146 to <8 x i8>*
  %149 = load <8 x i8>, <8 x i8>* %148, align 1
  %150 = zext <8 x i8> %149 to <8 x i32>
  %151 = bitcast i8* %147 to <8 x i8>*
  %152 = load <8 x i8>, <8 x i8>* %151, align 8
  %153 = zext <8 x i8> %152 to <8 x i32>
  %154 = sub nsw <8 x i32> %150, %153
  %155 = icmp slt <8 x i32> %154, zeroinitializer
  %156 = sub nsw <8 x i32> zeroinitializer, %154
  %157 = select <8 x i1> %155, <8 x i32> %156, <8 x i32> %154
  %158 = shufflevector <8 x i32> %157, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %159 = add <8 x i32> %157, %158
  %160 = shufflevector <8 x i32> %159, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %161 = add <8 x i32> %159, %160
  %162 = shufflevector <8 x i32> %161, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %163 = add <8 x i32> %161, %162
  %164 = extractelement <8 x i32> %163, i32 0
  %165 = add i32 %164, %145
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #5
  ret i32 %165
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad8x8x3_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = tail call i32 @vpx_sad8x8_c(i8* %0, i32 %1, i8* %2, i32 %3)
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds i8, i8* %2, i64 1
  %8 = tail call i32 @vpx_sad8x8_c(i8* %0, i32 %1, i8* %7, i32 %3)
  %9 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %2, i64 2
  %11 = tail call i32 @vpx_sad8x8_c(i8* %0, i32 %1, i8* %10, i32 %3)
  %12 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %11, i32* %12, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad8x8x8_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = tail call i32 @vpx_sad8x8_c(i8* %0, i32 %1, i8* %2, i32 %3)
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds i8, i8* %2, i64 1
  %8 = tail call i32 @vpx_sad8x8_c(i8* %0, i32 %1, i8* %7, i32 %3)
  %9 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %2, i64 2
  %11 = tail call i32 @vpx_sad8x8_c(i8* %0, i32 %1, i8* %10, i32 %3)
  %12 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 3
  %14 = tail call i32 @vpx_sad8x8_c(i8* %0, i32 %1, i8* %13, i32 %3)
  %15 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %2, i64 4
  %17 = tail call i32 @vpx_sad8x8_c(i8* %0, i32 %1, i8* %16, i32 %3)
  %18 = getelementptr inbounds i32, i32* %4, i64 4
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %2, i64 5
  %20 = tail call i32 @vpx_sad8x8_c(i8* %0, i32 %1, i8* %19, i32 %3)
  %21 = getelementptr inbounds i32, i32* %4, i64 5
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %2, i64 6
  %23 = tail call i32 @vpx_sad8x8_c(i8* %0, i32 %1, i8* %22, i32 %3)
  %24 = getelementptr inbounds i32, i32* %4, i64 6
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %2, i64 7
  %26 = tail call i32 @vpx_sad8x8_c(i8* %0, i32 %1, i8* %25, i32 %3)
  %27 = getelementptr inbounds i32, i32* %4, i64 7
  store i32 %26, i32* %27, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad8x8x4d_c(i8* nocapture readonly, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = load i8*, i8** %2, align 8
  %7 = tail call i32 @vpx_sad8x8_c(i8* %0, i32 %1, i8* %6, i32 %3)
  store i32 %7, i32* %4, align 4
  %8 = getelementptr inbounds i8*, i8** %2, i64 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @vpx_sad8x8_c(i8* %0, i32 %1, i8* %9, i32 %3)
  %11 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds i8*, i8** %2, i64 2
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i32 @vpx_sad8x8_c(i8* %0, i32 %1, i8* %13, i32 %3)
  %15 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i8*, i8** %2, i64 3
  %17 = load i8*, i8** %16, align 8
  %18 = tail call i32 @vpx_sad8x8_c(i8* %0, i32 %1, i8* %17, i32 %3)
  %19 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %18, i32* %19, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_sad8x4_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = sext i32 %1 to i64
  %6 = sext i32 %3 to i64
  %7 = bitcast i8* %0 to <8 x i8>*
  %8 = load <8 x i8>, <8 x i8>* %7, align 1
  %9 = zext <8 x i8> %8 to <8 x i32>
  %10 = bitcast i8* %2 to <8 x i8>*
  %11 = load <8 x i8>, <8 x i8>* %10, align 1
  %12 = zext <8 x i8> %11 to <8 x i32>
  %13 = sub nsw <8 x i32> %9, %12
  %14 = icmp slt <8 x i32> %13, zeroinitializer
  %15 = sub nsw <8 x i32> zeroinitializer, %13
  %16 = select <8 x i1> %14, <8 x i32> %15, <8 x i32> %13
  %17 = shufflevector <8 x i32> %16, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %18 = add <8 x i32> %16, %17
  %19 = shufflevector <8 x i32> %18, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %20 = add <8 x i32> %18, %19
  %21 = shufflevector <8 x i32> %20, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %22 = add <8 x i32> %20, %21
  %23 = extractelement <8 x i32> %22, i32 0
  %24 = getelementptr inbounds i8, i8* %0, i64 %5
  %25 = getelementptr inbounds i8, i8* %2, i64 %6
  %26 = bitcast i8* %24 to <8 x i8>*
  %27 = load <8 x i8>, <8 x i8>* %26, align 1
  %28 = zext <8 x i8> %27 to <8 x i32>
  %29 = bitcast i8* %25 to <8 x i8>*
  %30 = load <8 x i8>, <8 x i8>* %29, align 1
  %31 = zext <8 x i8> %30 to <8 x i32>
  %32 = sub nsw <8 x i32> %28, %31
  %33 = icmp slt <8 x i32> %32, zeroinitializer
  %34 = sub nsw <8 x i32> zeroinitializer, %32
  %35 = select <8 x i1> %33, <8 x i32> %34, <8 x i32> %32
  %36 = shufflevector <8 x i32> %35, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %37 = add <8 x i32> %35, %36
  %38 = shufflevector <8 x i32> %37, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %39 = add <8 x i32> %37, %38
  %40 = shufflevector <8 x i32> %39, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %41 = add <8 x i32> %39, %40
  %42 = extractelement <8 x i32> %41, i32 0
  %43 = add i32 %42, %23
  %44 = getelementptr inbounds i8, i8* %24, i64 %5
  %45 = getelementptr inbounds i8, i8* %25, i64 %6
  %46 = bitcast i8* %44 to <8 x i8>*
  %47 = load <8 x i8>, <8 x i8>* %46, align 1
  %48 = zext <8 x i8> %47 to <8 x i32>
  %49 = bitcast i8* %45 to <8 x i8>*
  %50 = load <8 x i8>, <8 x i8>* %49, align 1
  %51 = zext <8 x i8> %50 to <8 x i32>
  %52 = sub nsw <8 x i32> %48, %51
  %53 = icmp slt <8 x i32> %52, zeroinitializer
  %54 = sub nsw <8 x i32> zeroinitializer, %52
  %55 = select <8 x i1> %53, <8 x i32> %54, <8 x i32> %52
  %56 = shufflevector <8 x i32> %55, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %57 = add <8 x i32> %55, %56
  %58 = shufflevector <8 x i32> %57, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %59 = add <8 x i32> %57, %58
  %60 = shufflevector <8 x i32> %59, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %61 = add <8 x i32> %59, %60
  %62 = extractelement <8 x i32> %61, i32 0
  %63 = add i32 %62, %43
  %64 = getelementptr inbounds i8, i8* %44, i64 %5
  %65 = getelementptr inbounds i8, i8* %45, i64 %6
  %66 = bitcast i8* %64 to <8 x i8>*
  %67 = load <8 x i8>, <8 x i8>* %66, align 1
  %68 = zext <8 x i8> %67 to <8 x i32>
  %69 = bitcast i8* %65 to <8 x i8>*
  %70 = load <8 x i8>, <8 x i8>* %69, align 1
  %71 = zext <8 x i8> %70 to <8 x i32>
  %72 = sub nsw <8 x i32> %68, %71
  %73 = icmp slt <8 x i32> %72, zeroinitializer
  %74 = sub nsw <8 x i32> zeroinitializer, %72
  %75 = select <8 x i1> %73, <8 x i32> %74, <8 x i32> %72
  %76 = shufflevector <8 x i32> %75, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %77 = add <8 x i32> %75, %76
  %78 = shufflevector <8 x i32> %77, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %79 = add <8 x i32> %77, %78
  %80 = shufflevector <8 x i32> %79, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %81 = add <8 x i32> %79, %80
  %82 = extractelement <8 x i32> %81, i32 0
  %83 = add i32 %82, %63
  ret i32 %83
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_sad8x4_avg_c(i8* nocapture readonly, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [32 x i8], align 16
  %7 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 32, i1 false)
  call void @vpx_comp_avg_pred_c(i8* nonnull %7, i8* %4, i32 8, i32 4, i8* %2, i32 %3) #5
  %8 = sext i32 %1 to i64
  %9 = bitcast i8* %0 to <8 x i8>*
  %10 = load <8 x i8>, <8 x i8>* %9, align 1
  %11 = zext <8 x i8> %10 to <8 x i32>
  %12 = bitcast [32 x i8]* %6 to <8 x i8>*
  %13 = load <8 x i8>, <8 x i8>* %12, align 16
  %14 = zext <8 x i8> %13 to <8 x i32>
  %15 = sub nsw <8 x i32> %11, %14
  %16 = icmp slt <8 x i32> %15, zeroinitializer
  %17 = sub nsw <8 x i32> zeroinitializer, %15
  %18 = select <8 x i1> %16, <8 x i32> %17, <8 x i32> %15
  %19 = shufflevector <8 x i32> %18, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %20 = add <8 x i32> %18, %19
  %21 = shufflevector <8 x i32> %20, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %22 = add <8 x i32> %20, %21
  %23 = shufflevector <8 x i32> %22, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %24 = add <8 x i32> %22, %23
  %25 = extractelement <8 x i32> %24, i32 0
  %26 = getelementptr inbounds i8, i8* %0, i64 %8
  %27 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 8
  %28 = bitcast i8* %26 to <8 x i8>*
  %29 = load <8 x i8>, <8 x i8>* %28, align 1
  %30 = zext <8 x i8> %29 to <8 x i32>
  %31 = bitcast i8* %27 to <8 x i8>*
  %32 = load <8 x i8>, <8 x i8>* %31, align 8
  %33 = zext <8 x i8> %32 to <8 x i32>
  %34 = sub nsw <8 x i32> %30, %33
  %35 = icmp slt <8 x i32> %34, zeroinitializer
  %36 = sub nsw <8 x i32> zeroinitializer, %34
  %37 = select <8 x i1> %35, <8 x i32> %36, <8 x i32> %34
  %38 = shufflevector <8 x i32> %37, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %39 = add <8 x i32> %37, %38
  %40 = shufflevector <8 x i32> %39, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %41 = add <8 x i32> %39, %40
  %42 = shufflevector <8 x i32> %41, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %43 = add <8 x i32> %41, %42
  %44 = extractelement <8 x i32> %43, i32 0
  %45 = add i32 %44, %25
  %46 = getelementptr inbounds i8, i8* %26, i64 %8
  %47 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 16
  %48 = bitcast i8* %46 to <8 x i8>*
  %49 = load <8 x i8>, <8 x i8>* %48, align 1
  %50 = zext <8 x i8> %49 to <8 x i32>
  %51 = bitcast i8* %47 to <8 x i8>*
  %52 = load <8 x i8>, <8 x i8>* %51, align 16
  %53 = zext <8 x i8> %52 to <8 x i32>
  %54 = sub nsw <8 x i32> %50, %53
  %55 = icmp slt <8 x i32> %54, zeroinitializer
  %56 = sub nsw <8 x i32> zeroinitializer, %54
  %57 = select <8 x i1> %55, <8 x i32> %56, <8 x i32> %54
  %58 = shufflevector <8 x i32> %57, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %59 = add <8 x i32> %57, %58
  %60 = shufflevector <8 x i32> %59, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %61 = add <8 x i32> %59, %60
  %62 = shufflevector <8 x i32> %61, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %63 = add <8 x i32> %61, %62
  %64 = extractelement <8 x i32> %63, i32 0
  %65 = add i32 %64, %45
  %66 = getelementptr inbounds i8, i8* %46, i64 %8
  %67 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 24
  %68 = bitcast i8* %66 to <8 x i8>*
  %69 = load <8 x i8>, <8 x i8>* %68, align 1
  %70 = zext <8 x i8> %69 to <8 x i32>
  %71 = bitcast i8* %67 to <8 x i8>*
  %72 = load <8 x i8>, <8 x i8>* %71, align 8
  %73 = zext <8 x i8> %72 to <8 x i32>
  %74 = sub nsw <8 x i32> %70, %73
  %75 = icmp slt <8 x i32> %74, zeroinitializer
  %76 = sub nsw <8 x i32> zeroinitializer, %74
  %77 = select <8 x i1> %75, <8 x i32> %76, <8 x i32> %74
  %78 = shufflevector <8 x i32> %77, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %79 = add <8 x i32> %77, %78
  %80 = shufflevector <8 x i32> %79, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %81 = add <8 x i32> %79, %80
  %82 = shufflevector <8 x i32> %81, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %83 = add <8 x i32> %81, %82
  %84 = extractelement <8 x i32> %83, i32 0
  %85 = add i32 %84, %65
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #5
  ret i32 %85
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad8x4x4d_c(i8* nocapture readonly, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = load i8*, i8** %2, align 8
  %7 = tail call i32 @vpx_sad8x4_c(i8* %0, i32 %1, i8* %6, i32 %3)
  store i32 %7, i32* %4, align 4
  %8 = getelementptr inbounds i8*, i8** %2, i64 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @vpx_sad8x4_c(i8* %0, i32 %1, i8* %9, i32 %3)
  %11 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds i8*, i8** %2, i64 2
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i32 @vpx_sad8x4_c(i8* %0, i32 %1, i8* %13, i32 %3)
  %15 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i8*, i8** %2, i64 3
  %17 = load i8*, i8** %16, align 8
  %18 = tail call i32 @vpx_sad8x4_c(i8* %0, i32 %1, i8* %17, i32 %3)
  %19 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %18, i32* %19, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_sad4x8_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = sext i32 %1 to i64
  %6 = sext i32 %3 to i64
  %7 = bitcast i8* %0 to <4 x i8>*
  %8 = load <4 x i8>, <4 x i8>* %7, align 1
  %9 = zext <4 x i8> %8 to <4 x i32>
  %10 = bitcast i8* %2 to <4 x i8>*
  %11 = load <4 x i8>, <4 x i8>* %10, align 1
  %12 = zext <4 x i8> %11 to <4 x i32>
  %13 = sub nsw <4 x i32> %9, %12
  %14 = icmp slt <4 x i32> %13, zeroinitializer
  %15 = sub nsw <4 x i32> zeroinitializer, %13
  %16 = select <4 x i1> %14, <4 x i32> %15, <4 x i32> %13
  %17 = shufflevector <4 x i32> %16, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %18 = add <4 x i32> %16, %17
  %19 = shufflevector <4 x i32> %18, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %20 = add <4 x i32> %18, %19
  %21 = extractelement <4 x i32> %20, i32 0
  %22 = getelementptr inbounds i8, i8* %0, i64 %5
  %23 = getelementptr inbounds i8, i8* %2, i64 %6
  %24 = bitcast i8* %22 to <4 x i8>*
  %25 = load <4 x i8>, <4 x i8>* %24, align 1
  %26 = zext <4 x i8> %25 to <4 x i32>
  %27 = bitcast i8* %23 to <4 x i8>*
  %28 = load <4 x i8>, <4 x i8>* %27, align 1
  %29 = zext <4 x i8> %28 to <4 x i32>
  %30 = sub nsw <4 x i32> %26, %29
  %31 = icmp slt <4 x i32> %30, zeroinitializer
  %32 = sub nsw <4 x i32> zeroinitializer, %30
  %33 = select <4 x i1> %31, <4 x i32> %32, <4 x i32> %30
  %34 = shufflevector <4 x i32> %33, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %35 = add <4 x i32> %33, %34
  %36 = shufflevector <4 x i32> %35, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %37 = add <4 x i32> %35, %36
  %38 = extractelement <4 x i32> %37, i32 0
  %39 = add i32 %38, %21
  %40 = getelementptr inbounds i8, i8* %22, i64 %5
  %41 = getelementptr inbounds i8, i8* %23, i64 %6
  %42 = bitcast i8* %40 to <4 x i8>*
  %43 = load <4 x i8>, <4 x i8>* %42, align 1
  %44 = zext <4 x i8> %43 to <4 x i32>
  %45 = bitcast i8* %41 to <4 x i8>*
  %46 = load <4 x i8>, <4 x i8>* %45, align 1
  %47 = zext <4 x i8> %46 to <4 x i32>
  %48 = sub nsw <4 x i32> %44, %47
  %49 = icmp slt <4 x i32> %48, zeroinitializer
  %50 = sub nsw <4 x i32> zeroinitializer, %48
  %51 = select <4 x i1> %49, <4 x i32> %50, <4 x i32> %48
  %52 = shufflevector <4 x i32> %51, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %53 = add <4 x i32> %51, %52
  %54 = shufflevector <4 x i32> %53, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %55 = add <4 x i32> %53, %54
  %56 = extractelement <4 x i32> %55, i32 0
  %57 = add i32 %56, %39
  %58 = getelementptr inbounds i8, i8* %40, i64 %5
  %59 = getelementptr inbounds i8, i8* %41, i64 %6
  %60 = bitcast i8* %58 to <4 x i8>*
  %61 = load <4 x i8>, <4 x i8>* %60, align 1
  %62 = zext <4 x i8> %61 to <4 x i32>
  %63 = bitcast i8* %59 to <4 x i8>*
  %64 = load <4 x i8>, <4 x i8>* %63, align 1
  %65 = zext <4 x i8> %64 to <4 x i32>
  %66 = sub nsw <4 x i32> %62, %65
  %67 = icmp slt <4 x i32> %66, zeroinitializer
  %68 = sub nsw <4 x i32> zeroinitializer, %66
  %69 = select <4 x i1> %67, <4 x i32> %68, <4 x i32> %66
  %70 = shufflevector <4 x i32> %69, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %71 = add <4 x i32> %69, %70
  %72 = shufflevector <4 x i32> %71, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %73 = add <4 x i32> %71, %72
  %74 = extractelement <4 x i32> %73, i32 0
  %75 = add i32 %74, %57
  %76 = getelementptr inbounds i8, i8* %58, i64 %5
  %77 = getelementptr inbounds i8, i8* %59, i64 %6
  %78 = bitcast i8* %76 to <4 x i8>*
  %79 = load <4 x i8>, <4 x i8>* %78, align 1
  %80 = zext <4 x i8> %79 to <4 x i32>
  %81 = bitcast i8* %77 to <4 x i8>*
  %82 = load <4 x i8>, <4 x i8>* %81, align 1
  %83 = zext <4 x i8> %82 to <4 x i32>
  %84 = sub nsw <4 x i32> %80, %83
  %85 = icmp slt <4 x i32> %84, zeroinitializer
  %86 = sub nsw <4 x i32> zeroinitializer, %84
  %87 = select <4 x i1> %85, <4 x i32> %86, <4 x i32> %84
  %88 = shufflevector <4 x i32> %87, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %89 = add <4 x i32> %87, %88
  %90 = shufflevector <4 x i32> %89, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %91 = add <4 x i32> %89, %90
  %92 = extractelement <4 x i32> %91, i32 0
  %93 = add i32 %92, %75
  %94 = getelementptr inbounds i8, i8* %76, i64 %5
  %95 = getelementptr inbounds i8, i8* %77, i64 %6
  %96 = bitcast i8* %94 to <4 x i8>*
  %97 = load <4 x i8>, <4 x i8>* %96, align 1
  %98 = zext <4 x i8> %97 to <4 x i32>
  %99 = bitcast i8* %95 to <4 x i8>*
  %100 = load <4 x i8>, <4 x i8>* %99, align 1
  %101 = zext <4 x i8> %100 to <4 x i32>
  %102 = sub nsw <4 x i32> %98, %101
  %103 = icmp slt <4 x i32> %102, zeroinitializer
  %104 = sub nsw <4 x i32> zeroinitializer, %102
  %105 = select <4 x i1> %103, <4 x i32> %104, <4 x i32> %102
  %106 = shufflevector <4 x i32> %105, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %107 = add <4 x i32> %105, %106
  %108 = shufflevector <4 x i32> %107, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %109 = add <4 x i32> %107, %108
  %110 = extractelement <4 x i32> %109, i32 0
  %111 = add i32 %110, %93
  %112 = getelementptr inbounds i8, i8* %94, i64 %5
  %113 = getelementptr inbounds i8, i8* %95, i64 %6
  %114 = bitcast i8* %112 to <4 x i8>*
  %115 = load <4 x i8>, <4 x i8>* %114, align 1
  %116 = zext <4 x i8> %115 to <4 x i32>
  %117 = bitcast i8* %113 to <4 x i8>*
  %118 = load <4 x i8>, <4 x i8>* %117, align 1
  %119 = zext <4 x i8> %118 to <4 x i32>
  %120 = sub nsw <4 x i32> %116, %119
  %121 = icmp slt <4 x i32> %120, zeroinitializer
  %122 = sub nsw <4 x i32> zeroinitializer, %120
  %123 = select <4 x i1> %121, <4 x i32> %122, <4 x i32> %120
  %124 = shufflevector <4 x i32> %123, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %125 = add <4 x i32> %123, %124
  %126 = shufflevector <4 x i32> %125, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %127 = add <4 x i32> %125, %126
  %128 = extractelement <4 x i32> %127, i32 0
  %129 = add i32 %128, %111
  %130 = getelementptr inbounds i8, i8* %112, i64 %5
  %131 = getelementptr inbounds i8, i8* %113, i64 %6
  %132 = bitcast i8* %130 to <4 x i8>*
  %133 = load <4 x i8>, <4 x i8>* %132, align 1
  %134 = zext <4 x i8> %133 to <4 x i32>
  %135 = bitcast i8* %131 to <4 x i8>*
  %136 = load <4 x i8>, <4 x i8>* %135, align 1
  %137 = zext <4 x i8> %136 to <4 x i32>
  %138 = sub nsw <4 x i32> %134, %137
  %139 = icmp slt <4 x i32> %138, zeroinitializer
  %140 = sub nsw <4 x i32> zeroinitializer, %138
  %141 = select <4 x i1> %139, <4 x i32> %140, <4 x i32> %138
  %142 = shufflevector <4 x i32> %141, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %143 = add <4 x i32> %141, %142
  %144 = shufflevector <4 x i32> %143, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %145 = add <4 x i32> %143, %144
  %146 = extractelement <4 x i32> %145, i32 0
  %147 = add i32 %146, %129
  ret i32 %147
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_sad4x8_avg_c(i8* nocapture readonly, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [32 x i8], align 16
  %7 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 32, i1 false)
  call void @vpx_comp_avg_pred_c(i8* nonnull %7, i8* %4, i32 4, i32 8, i8* %2, i32 %3) #5
  %8 = sext i32 %1 to i64
  %9 = bitcast i8* %0 to <4 x i8>*
  %10 = load <4 x i8>, <4 x i8>* %9, align 1
  %11 = zext <4 x i8> %10 to <4 x i32>
  %12 = bitcast [32 x i8]* %6 to <4 x i8>*
  %13 = load <4 x i8>, <4 x i8>* %12, align 16
  %14 = zext <4 x i8> %13 to <4 x i32>
  %15 = sub nsw <4 x i32> %11, %14
  %16 = icmp slt <4 x i32> %15, zeroinitializer
  %17 = sub nsw <4 x i32> zeroinitializer, %15
  %18 = select <4 x i1> %16, <4 x i32> %17, <4 x i32> %15
  %19 = shufflevector <4 x i32> %18, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %20 = add <4 x i32> %18, %19
  %21 = shufflevector <4 x i32> %20, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %22 = add <4 x i32> %20, %21
  %23 = extractelement <4 x i32> %22, i32 0
  %24 = getelementptr inbounds i8, i8* %0, i64 %8
  %25 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 4
  %26 = bitcast i8* %24 to <4 x i8>*
  %27 = load <4 x i8>, <4 x i8>* %26, align 1
  %28 = zext <4 x i8> %27 to <4 x i32>
  %29 = bitcast i8* %25 to <4 x i8>*
  %30 = load <4 x i8>, <4 x i8>* %29, align 4
  %31 = zext <4 x i8> %30 to <4 x i32>
  %32 = sub nsw <4 x i32> %28, %31
  %33 = icmp slt <4 x i32> %32, zeroinitializer
  %34 = sub nsw <4 x i32> zeroinitializer, %32
  %35 = select <4 x i1> %33, <4 x i32> %34, <4 x i32> %32
  %36 = shufflevector <4 x i32> %35, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %37 = add <4 x i32> %35, %36
  %38 = shufflevector <4 x i32> %37, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %39 = add <4 x i32> %37, %38
  %40 = extractelement <4 x i32> %39, i32 0
  %41 = add i32 %40, %23
  %42 = getelementptr inbounds i8, i8* %24, i64 %8
  %43 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 8
  %44 = bitcast i8* %42 to <4 x i8>*
  %45 = load <4 x i8>, <4 x i8>* %44, align 1
  %46 = zext <4 x i8> %45 to <4 x i32>
  %47 = bitcast i8* %43 to <4 x i8>*
  %48 = load <4 x i8>, <4 x i8>* %47, align 8
  %49 = zext <4 x i8> %48 to <4 x i32>
  %50 = sub nsw <4 x i32> %46, %49
  %51 = icmp slt <4 x i32> %50, zeroinitializer
  %52 = sub nsw <4 x i32> zeroinitializer, %50
  %53 = select <4 x i1> %51, <4 x i32> %52, <4 x i32> %50
  %54 = shufflevector <4 x i32> %53, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %55 = add <4 x i32> %53, %54
  %56 = shufflevector <4 x i32> %55, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %57 = add <4 x i32> %55, %56
  %58 = extractelement <4 x i32> %57, i32 0
  %59 = add i32 %58, %41
  %60 = getelementptr inbounds i8, i8* %42, i64 %8
  %61 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 12
  %62 = bitcast i8* %60 to <4 x i8>*
  %63 = load <4 x i8>, <4 x i8>* %62, align 1
  %64 = zext <4 x i8> %63 to <4 x i32>
  %65 = bitcast i8* %61 to <4 x i8>*
  %66 = load <4 x i8>, <4 x i8>* %65, align 4
  %67 = zext <4 x i8> %66 to <4 x i32>
  %68 = sub nsw <4 x i32> %64, %67
  %69 = icmp slt <4 x i32> %68, zeroinitializer
  %70 = sub nsw <4 x i32> zeroinitializer, %68
  %71 = select <4 x i1> %69, <4 x i32> %70, <4 x i32> %68
  %72 = shufflevector <4 x i32> %71, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %73 = add <4 x i32> %71, %72
  %74 = shufflevector <4 x i32> %73, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %75 = add <4 x i32> %73, %74
  %76 = extractelement <4 x i32> %75, i32 0
  %77 = add i32 %76, %59
  %78 = getelementptr inbounds i8, i8* %60, i64 %8
  %79 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 16
  %80 = bitcast i8* %78 to <4 x i8>*
  %81 = load <4 x i8>, <4 x i8>* %80, align 1
  %82 = zext <4 x i8> %81 to <4 x i32>
  %83 = bitcast i8* %79 to <4 x i8>*
  %84 = load <4 x i8>, <4 x i8>* %83, align 16
  %85 = zext <4 x i8> %84 to <4 x i32>
  %86 = sub nsw <4 x i32> %82, %85
  %87 = icmp slt <4 x i32> %86, zeroinitializer
  %88 = sub nsw <4 x i32> zeroinitializer, %86
  %89 = select <4 x i1> %87, <4 x i32> %88, <4 x i32> %86
  %90 = shufflevector <4 x i32> %89, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %91 = add <4 x i32> %89, %90
  %92 = shufflevector <4 x i32> %91, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %93 = add <4 x i32> %91, %92
  %94 = extractelement <4 x i32> %93, i32 0
  %95 = add i32 %94, %77
  %96 = getelementptr inbounds i8, i8* %78, i64 %8
  %97 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 20
  %98 = bitcast i8* %96 to <4 x i8>*
  %99 = load <4 x i8>, <4 x i8>* %98, align 1
  %100 = zext <4 x i8> %99 to <4 x i32>
  %101 = bitcast i8* %97 to <4 x i8>*
  %102 = load <4 x i8>, <4 x i8>* %101, align 4
  %103 = zext <4 x i8> %102 to <4 x i32>
  %104 = sub nsw <4 x i32> %100, %103
  %105 = icmp slt <4 x i32> %104, zeroinitializer
  %106 = sub nsw <4 x i32> zeroinitializer, %104
  %107 = select <4 x i1> %105, <4 x i32> %106, <4 x i32> %104
  %108 = shufflevector <4 x i32> %107, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %109 = add <4 x i32> %107, %108
  %110 = shufflevector <4 x i32> %109, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %111 = add <4 x i32> %109, %110
  %112 = extractelement <4 x i32> %111, i32 0
  %113 = add i32 %112, %95
  %114 = getelementptr inbounds i8, i8* %96, i64 %8
  %115 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 24
  %116 = bitcast i8* %114 to <4 x i8>*
  %117 = load <4 x i8>, <4 x i8>* %116, align 1
  %118 = zext <4 x i8> %117 to <4 x i32>
  %119 = bitcast i8* %115 to <4 x i8>*
  %120 = load <4 x i8>, <4 x i8>* %119, align 8
  %121 = zext <4 x i8> %120 to <4 x i32>
  %122 = sub nsw <4 x i32> %118, %121
  %123 = icmp slt <4 x i32> %122, zeroinitializer
  %124 = sub nsw <4 x i32> zeroinitializer, %122
  %125 = select <4 x i1> %123, <4 x i32> %124, <4 x i32> %122
  %126 = shufflevector <4 x i32> %125, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %127 = add <4 x i32> %125, %126
  %128 = shufflevector <4 x i32> %127, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %129 = add <4 x i32> %127, %128
  %130 = extractelement <4 x i32> %129, i32 0
  %131 = add i32 %130, %113
  %132 = getelementptr inbounds i8, i8* %114, i64 %8
  %133 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 28
  %134 = bitcast i8* %132 to <4 x i8>*
  %135 = load <4 x i8>, <4 x i8>* %134, align 1
  %136 = zext <4 x i8> %135 to <4 x i32>
  %137 = bitcast i8* %133 to <4 x i8>*
  %138 = load <4 x i8>, <4 x i8>* %137, align 4
  %139 = zext <4 x i8> %138 to <4 x i32>
  %140 = sub nsw <4 x i32> %136, %139
  %141 = icmp slt <4 x i32> %140, zeroinitializer
  %142 = sub nsw <4 x i32> zeroinitializer, %140
  %143 = select <4 x i1> %141, <4 x i32> %142, <4 x i32> %140
  %144 = shufflevector <4 x i32> %143, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %145 = add <4 x i32> %143, %144
  %146 = shufflevector <4 x i32> %145, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %147 = add <4 x i32> %145, %146
  %148 = extractelement <4 x i32> %147, i32 0
  %149 = add i32 %148, %131
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #5
  ret i32 %149
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad4x8x4d_c(i8* nocapture readonly, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = sext i32 %1 to i64
  %7 = sext i32 %3 to i64
  %8 = load i8*, i8** %2, align 8
  %9 = bitcast i8* %0 to <4 x i8>*
  %10 = load <4 x i8>, <4 x i8>* %9, align 1
  %11 = zext <4 x i8> %10 to <4 x i32>
  %12 = bitcast i8* %8 to <4 x i8>*
  %13 = load <4 x i8>, <4 x i8>* %12, align 1
  %14 = zext <4 x i8> %13 to <4 x i32>
  %15 = sub nsw <4 x i32> %11, %14
  %16 = icmp slt <4 x i32> %15, zeroinitializer
  %17 = sub nsw <4 x i32> zeroinitializer, %15
  %18 = select <4 x i1> %16, <4 x i32> %17, <4 x i32> %15
  %19 = shufflevector <4 x i32> %18, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %20 = add <4 x i32> %18, %19
  %21 = shufflevector <4 x i32> %20, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %22 = add <4 x i32> %20, %21
  %23 = extractelement <4 x i32> %22, i32 0
  %24 = getelementptr inbounds i8, i8* %0, i64 %6
  %25 = getelementptr inbounds i8, i8* %8, i64 %7
  %26 = bitcast i8* %24 to <4 x i8>*
  %27 = load <4 x i8>, <4 x i8>* %26, align 1
  %28 = zext <4 x i8> %27 to <4 x i32>
  %29 = bitcast i8* %25 to <4 x i8>*
  %30 = load <4 x i8>, <4 x i8>* %29, align 1
  %31 = zext <4 x i8> %30 to <4 x i32>
  %32 = sub nsw <4 x i32> %28, %31
  %33 = icmp slt <4 x i32> %32, zeroinitializer
  %34 = sub nsw <4 x i32> zeroinitializer, %32
  %35 = select <4 x i1> %33, <4 x i32> %34, <4 x i32> %32
  %36 = shufflevector <4 x i32> %35, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %37 = add <4 x i32> %35, %36
  %38 = shufflevector <4 x i32> %37, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %39 = add <4 x i32> %37, %38
  %40 = extractelement <4 x i32> %39, i32 0
  %41 = add i32 %40, %23
  %42 = getelementptr inbounds i8, i8* %24, i64 %6
  %43 = getelementptr inbounds i8, i8* %25, i64 %7
  %44 = bitcast i8* %42 to <4 x i8>*
  %45 = load <4 x i8>, <4 x i8>* %44, align 1
  %46 = zext <4 x i8> %45 to <4 x i32>
  %47 = bitcast i8* %43 to <4 x i8>*
  %48 = load <4 x i8>, <4 x i8>* %47, align 1
  %49 = zext <4 x i8> %48 to <4 x i32>
  %50 = sub nsw <4 x i32> %46, %49
  %51 = icmp slt <4 x i32> %50, zeroinitializer
  %52 = sub nsw <4 x i32> zeroinitializer, %50
  %53 = select <4 x i1> %51, <4 x i32> %52, <4 x i32> %50
  %54 = shufflevector <4 x i32> %53, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %55 = add <4 x i32> %53, %54
  %56 = shufflevector <4 x i32> %55, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %57 = add <4 x i32> %55, %56
  %58 = extractelement <4 x i32> %57, i32 0
  %59 = add i32 %58, %41
  %60 = getelementptr inbounds i8, i8* %42, i64 %6
  %61 = getelementptr inbounds i8, i8* %43, i64 %7
  %62 = bitcast i8* %60 to <4 x i8>*
  %63 = load <4 x i8>, <4 x i8>* %62, align 1
  %64 = zext <4 x i8> %63 to <4 x i32>
  %65 = bitcast i8* %61 to <4 x i8>*
  %66 = load <4 x i8>, <4 x i8>* %65, align 1
  %67 = zext <4 x i8> %66 to <4 x i32>
  %68 = sub nsw <4 x i32> %64, %67
  %69 = icmp slt <4 x i32> %68, zeroinitializer
  %70 = sub nsw <4 x i32> zeroinitializer, %68
  %71 = select <4 x i1> %69, <4 x i32> %70, <4 x i32> %68
  %72 = shufflevector <4 x i32> %71, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %73 = add <4 x i32> %71, %72
  %74 = shufflevector <4 x i32> %73, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %75 = add <4 x i32> %73, %74
  %76 = extractelement <4 x i32> %75, i32 0
  %77 = add i32 %76, %59
  %78 = getelementptr inbounds i8, i8* %60, i64 %6
  %79 = getelementptr inbounds i8, i8* %61, i64 %7
  %80 = bitcast i8* %78 to <4 x i8>*
  %81 = load <4 x i8>, <4 x i8>* %80, align 1
  %82 = zext <4 x i8> %81 to <4 x i32>
  %83 = bitcast i8* %79 to <4 x i8>*
  %84 = load <4 x i8>, <4 x i8>* %83, align 1
  %85 = zext <4 x i8> %84 to <4 x i32>
  %86 = sub nsw <4 x i32> %82, %85
  %87 = icmp slt <4 x i32> %86, zeroinitializer
  %88 = sub nsw <4 x i32> zeroinitializer, %86
  %89 = select <4 x i1> %87, <4 x i32> %88, <4 x i32> %86
  %90 = shufflevector <4 x i32> %89, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %91 = add <4 x i32> %89, %90
  %92 = shufflevector <4 x i32> %91, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %93 = add <4 x i32> %91, %92
  %94 = extractelement <4 x i32> %93, i32 0
  %95 = add i32 %94, %77
  %96 = getelementptr inbounds i8, i8* %78, i64 %6
  %97 = getelementptr inbounds i8, i8* %79, i64 %7
  %98 = bitcast i8* %96 to <4 x i8>*
  %99 = load <4 x i8>, <4 x i8>* %98, align 1
  %100 = zext <4 x i8> %99 to <4 x i32>
  %101 = bitcast i8* %97 to <4 x i8>*
  %102 = load <4 x i8>, <4 x i8>* %101, align 1
  %103 = zext <4 x i8> %102 to <4 x i32>
  %104 = sub nsw <4 x i32> %100, %103
  %105 = icmp slt <4 x i32> %104, zeroinitializer
  %106 = sub nsw <4 x i32> zeroinitializer, %104
  %107 = select <4 x i1> %105, <4 x i32> %106, <4 x i32> %104
  %108 = shufflevector <4 x i32> %107, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %109 = add <4 x i32> %107, %108
  %110 = shufflevector <4 x i32> %109, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %111 = add <4 x i32> %109, %110
  %112 = extractelement <4 x i32> %111, i32 0
  %113 = add i32 %112, %95
  %114 = getelementptr inbounds i8, i8* %96, i64 %6
  %115 = getelementptr inbounds i8, i8* %97, i64 %7
  %116 = bitcast i8* %114 to <4 x i8>*
  %117 = load <4 x i8>, <4 x i8>* %116, align 1
  %118 = zext <4 x i8> %117 to <4 x i32>
  %119 = bitcast i8* %115 to <4 x i8>*
  %120 = load <4 x i8>, <4 x i8>* %119, align 1
  %121 = zext <4 x i8> %120 to <4 x i32>
  %122 = sub nsw <4 x i32> %118, %121
  %123 = icmp slt <4 x i32> %122, zeroinitializer
  %124 = sub nsw <4 x i32> zeroinitializer, %122
  %125 = select <4 x i1> %123, <4 x i32> %124, <4 x i32> %122
  %126 = shufflevector <4 x i32> %125, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %127 = add <4 x i32> %125, %126
  %128 = shufflevector <4 x i32> %127, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %129 = add <4 x i32> %127, %128
  %130 = extractelement <4 x i32> %129, i32 0
  %131 = add i32 %130, %113
  %132 = getelementptr inbounds i8, i8* %114, i64 %6
  %133 = getelementptr inbounds i8, i8* %115, i64 %7
  %134 = bitcast i8* %132 to <4 x i8>*
  %135 = load <4 x i8>, <4 x i8>* %134, align 1
  %136 = zext <4 x i8> %135 to <4 x i32>
  %137 = bitcast i8* %133 to <4 x i8>*
  %138 = load <4 x i8>, <4 x i8>* %137, align 1
  %139 = zext <4 x i8> %138 to <4 x i32>
  %140 = sub nsw <4 x i32> %136, %139
  %141 = icmp slt <4 x i32> %140, zeroinitializer
  %142 = sub nsw <4 x i32> zeroinitializer, %140
  %143 = select <4 x i1> %141, <4 x i32> %142, <4 x i32> %140
  %144 = shufflevector <4 x i32> %143, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %145 = add <4 x i32> %143, %144
  %146 = shufflevector <4 x i32> %145, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %147 = add <4 x i32> %145, %146
  %148 = extractelement <4 x i32> %147, i32 0
  %149 = add i32 %148, %131
  store i32 %149, i32* %4, align 4
  %150 = getelementptr inbounds i8*, i8** %2, i64 1
  %151 = load i8*, i8** %150, align 8
  %152 = bitcast i8* %0 to <4 x i8>*
  %153 = load <4 x i8>, <4 x i8>* %152, align 1
  %154 = zext <4 x i8> %153 to <4 x i32>
  %155 = bitcast i8* %151 to <4 x i8>*
  %156 = load <4 x i8>, <4 x i8>* %155, align 1
  %157 = zext <4 x i8> %156 to <4 x i32>
  %158 = sub nsw <4 x i32> %154, %157
  %159 = icmp slt <4 x i32> %158, zeroinitializer
  %160 = sub nsw <4 x i32> zeroinitializer, %158
  %161 = select <4 x i1> %159, <4 x i32> %160, <4 x i32> %158
  %162 = shufflevector <4 x i32> %161, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %163 = add <4 x i32> %161, %162
  %164 = shufflevector <4 x i32> %163, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %165 = add <4 x i32> %163, %164
  %166 = extractelement <4 x i32> %165, i32 0
  %167 = getelementptr inbounds i8, i8* %0, i64 %6
  %168 = getelementptr inbounds i8, i8* %151, i64 %7
  %169 = bitcast i8* %167 to <4 x i8>*
  %170 = load <4 x i8>, <4 x i8>* %169, align 1
  %171 = zext <4 x i8> %170 to <4 x i32>
  %172 = bitcast i8* %168 to <4 x i8>*
  %173 = load <4 x i8>, <4 x i8>* %172, align 1
  %174 = zext <4 x i8> %173 to <4 x i32>
  %175 = sub nsw <4 x i32> %171, %174
  %176 = icmp slt <4 x i32> %175, zeroinitializer
  %177 = sub nsw <4 x i32> zeroinitializer, %175
  %178 = select <4 x i1> %176, <4 x i32> %177, <4 x i32> %175
  %179 = shufflevector <4 x i32> %178, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %180 = add <4 x i32> %178, %179
  %181 = shufflevector <4 x i32> %180, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %182 = add <4 x i32> %180, %181
  %183 = extractelement <4 x i32> %182, i32 0
  %184 = add i32 %183, %166
  %185 = getelementptr inbounds i8, i8* %167, i64 %6
  %186 = getelementptr inbounds i8, i8* %168, i64 %7
  %187 = bitcast i8* %185 to <4 x i8>*
  %188 = load <4 x i8>, <4 x i8>* %187, align 1
  %189 = zext <4 x i8> %188 to <4 x i32>
  %190 = bitcast i8* %186 to <4 x i8>*
  %191 = load <4 x i8>, <4 x i8>* %190, align 1
  %192 = zext <4 x i8> %191 to <4 x i32>
  %193 = sub nsw <4 x i32> %189, %192
  %194 = icmp slt <4 x i32> %193, zeroinitializer
  %195 = sub nsw <4 x i32> zeroinitializer, %193
  %196 = select <4 x i1> %194, <4 x i32> %195, <4 x i32> %193
  %197 = shufflevector <4 x i32> %196, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %198 = add <4 x i32> %196, %197
  %199 = shufflevector <4 x i32> %198, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %200 = add <4 x i32> %198, %199
  %201 = extractelement <4 x i32> %200, i32 0
  %202 = add i32 %201, %184
  %203 = getelementptr inbounds i8, i8* %185, i64 %6
  %204 = getelementptr inbounds i8, i8* %186, i64 %7
  %205 = bitcast i8* %203 to <4 x i8>*
  %206 = load <4 x i8>, <4 x i8>* %205, align 1
  %207 = zext <4 x i8> %206 to <4 x i32>
  %208 = bitcast i8* %204 to <4 x i8>*
  %209 = load <4 x i8>, <4 x i8>* %208, align 1
  %210 = zext <4 x i8> %209 to <4 x i32>
  %211 = sub nsw <4 x i32> %207, %210
  %212 = icmp slt <4 x i32> %211, zeroinitializer
  %213 = sub nsw <4 x i32> zeroinitializer, %211
  %214 = select <4 x i1> %212, <4 x i32> %213, <4 x i32> %211
  %215 = shufflevector <4 x i32> %214, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %216 = add <4 x i32> %214, %215
  %217 = shufflevector <4 x i32> %216, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %218 = add <4 x i32> %216, %217
  %219 = extractelement <4 x i32> %218, i32 0
  %220 = add i32 %219, %202
  %221 = getelementptr inbounds i8, i8* %203, i64 %6
  %222 = getelementptr inbounds i8, i8* %204, i64 %7
  %223 = bitcast i8* %221 to <4 x i8>*
  %224 = load <4 x i8>, <4 x i8>* %223, align 1
  %225 = zext <4 x i8> %224 to <4 x i32>
  %226 = bitcast i8* %222 to <4 x i8>*
  %227 = load <4 x i8>, <4 x i8>* %226, align 1
  %228 = zext <4 x i8> %227 to <4 x i32>
  %229 = sub nsw <4 x i32> %225, %228
  %230 = icmp slt <4 x i32> %229, zeroinitializer
  %231 = sub nsw <4 x i32> zeroinitializer, %229
  %232 = select <4 x i1> %230, <4 x i32> %231, <4 x i32> %229
  %233 = shufflevector <4 x i32> %232, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %234 = add <4 x i32> %232, %233
  %235 = shufflevector <4 x i32> %234, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %236 = add <4 x i32> %234, %235
  %237 = extractelement <4 x i32> %236, i32 0
  %238 = add i32 %237, %220
  %239 = getelementptr inbounds i8, i8* %221, i64 %6
  %240 = getelementptr inbounds i8, i8* %222, i64 %7
  %241 = bitcast i8* %239 to <4 x i8>*
  %242 = load <4 x i8>, <4 x i8>* %241, align 1
  %243 = zext <4 x i8> %242 to <4 x i32>
  %244 = bitcast i8* %240 to <4 x i8>*
  %245 = load <4 x i8>, <4 x i8>* %244, align 1
  %246 = zext <4 x i8> %245 to <4 x i32>
  %247 = sub nsw <4 x i32> %243, %246
  %248 = icmp slt <4 x i32> %247, zeroinitializer
  %249 = sub nsw <4 x i32> zeroinitializer, %247
  %250 = select <4 x i1> %248, <4 x i32> %249, <4 x i32> %247
  %251 = shufflevector <4 x i32> %250, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %252 = add <4 x i32> %250, %251
  %253 = shufflevector <4 x i32> %252, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %254 = add <4 x i32> %252, %253
  %255 = extractelement <4 x i32> %254, i32 0
  %256 = add i32 %255, %238
  %257 = getelementptr inbounds i8, i8* %239, i64 %6
  %258 = getelementptr inbounds i8, i8* %240, i64 %7
  %259 = bitcast i8* %257 to <4 x i8>*
  %260 = load <4 x i8>, <4 x i8>* %259, align 1
  %261 = zext <4 x i8> %260 to <4 x i32>
  %262 = bitcast i8* %258 to <4 x i8>*
  %263 = load <4 x i8>, <4 x i8>* %262, align 1
  %264 = zext <4 x i8> %263 to <4 x i32>
  %265 = sub nsw <4 x i32> %261, %264
  %266 = icmp slt <4 x i32> %265, zeroinitializer
  %267 = sub nsw <4 x i32> zeroinitializer, %265
  %268 = select <4 x i1> %266, <4 x i32> %267, <4 x i32> %265
  %269 = shufflevector <4 x i32> %268, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %270 = add <4 x i32> %268, %269
  %271 = shufflevector <4 x i32> %270, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %272 = add <4 x i32> %270, %271
  %273 = extractelement <4 x i32> %272, i32 0
  %274 = add i32 %273, %256
  %275 = getelementptr inbounds i8, i8* %257, i64 %6
  %276 = getelementptr inbounds i8, i8* %258, i64 %7
  %277 = bitcast i8* %275 to <4 x i8>*
  %278 = load <4 x i8>, <4 x i8>* %277, align 1
  %279 = zext <4 x i8> %278 to <4 x i32>
  %280 = bitcast i8* %276 to <4 x i8>*
  %281 = load <4 x i8>, <4 x i8>* %280, align 1
  %282 = zext <4 x i8> %281 to <4 x i32>
  %283 = sub nsw <4 x i32> %279, %282
  %284 = icmp slt <4 x i32> %283, zeroinitializer
  %285 = sub nsw <4 x i32> zeroinitializer, %283
  %286 = select <4 x i1> %284, <4 x i32> %285, <4 x i32> %283
  %287 = shufflevector <4 x i32> %286, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %288 = add <4 x i32> %286, %287
  %289 = shufflevector <4 x i32> %288, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %290 = add <4 x i32> %288, %289
  %291 = extractelement <4 x i32> %290, i32 0
  %292 = add i32 %291, %274
  %293 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %292, i32* %293, align 4
  %294 = getelementptr inbounds i8*, i8** %2, i64 2
  %295 = load i8*, i8** %294, align 8
  %296 = bitcast i8* %0 to <4 x i8>*
  %297 = load <4 x i8>, <4 x i8>* %296, align 1
  %298 = zext <4 x i8> %297 to <4 x i32>
  %299 = bitcast i8* %295 to <4 x i8>*
  %300 = load <4 x i8>, <4 x i8>* %299, align 1
  %301 = zext <4 x i8> %300 to <4 x i32>
  %302 = sub nsw <4 x i32> %298, %301
  %303 = icmp slt <4 x i32> %302, zeroinitializer
  %304 = sub nsw <4 x i32> zeroinitializer, %302
  %305 = select <4 x i1> %303, <4 x i32> %304, <4 x i32> %302
  %306 = shufflevector <4 x i32> %305, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %307 = add <4 x i32> %305, %306
  %308 = shufflevector <4 x i32> %307, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %309 = add <4 x i32> %307, %308
  %310 = extractelement <4 x i32> %309, i32 0
  %311 = getelementptr inbounds i8, i8* %0, i64 %6
  %312 = getelementptr inbounds i8, i8* %295, i64 %7
  %313 = bitcast i8* %311 to <4 x i8>*
  %314 = load <4 x i8>, <4 x i8>* %313, align 1
  %315 = zext <4 x i8> %314 to <4 x i32>
  %316 = bitcast i8* %312 to <4 x i8>*
  %317 = load <4 x i8>, <4 x i8>* %316, align 1
  %318 = zext <4 x i8> %317 to <4 x i32>
  %319 = sub nsw <4 x i32> %315, %318
  %320 = icmp slt <4 x i32> %319, zeroinitializer
  %321 = sub nsw <4 x i32> zeroinitializer, %319
  %322 = select <4 x i1> %320, <4 x i32> %321, <4 x i32> %319
  %323 = shufflevector <4 x i32> %322, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %324 = add <4 x i32> %322, %323
  %325 = shufflevector <4 x i32> %324, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %326 = add <4 x i32> %324, %325
  %327 = extractelement <4 x i32> %326, i32 0
  %328 = add i32 %327, %310
  %329 = getelementptr inbounds i8, i8* %311, i64 %6
  %330 = getelementptr inbounds i8, i8* %312, i64 %7
  %331 = bitcast i8* %329 to <4 x i8>*
  %332 = load <4 x i8>, <4 x i8>* %331, align 1
  %333 = zext <4 x i8> %332 to <4 x i32>
  %334 = bitcast i8* %330 to <4 x i8>*
  %335 = load <4 x i8>, <4 x i8>* %334, align 1
  %336 = zext <4 x i8> %335 to <4 x i32>
  %337 = sub nsw <4 x i32> %333, %336
  %338 = icmp slt <4 x i32> %337, zeroinitializer
  %339 = sub nsw <4 x i32> zeroinitializer, %337
  %340 = select <4 x i1> %338, <4 x i32> %339, <4 x i32> %337
  %341 = shufflevector <4 x i32> %340, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %342 = add <4 x i32> %340, %341
  %343 = shufflevector <4 x i32> %342, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %344 = add <4 x i32> %342, %343
  %345 = extractelement <4 x i32> %344, i32 0
  %346 = add i32 %345, %328
  %347 = getelementptr inbounds i8, i8* %329, i64 %6
  %348 = getelementptr inbounds i8, i8* %330, i64 %7
  %349 = bitcast i8* %347 to <4 x i8>*
  %350 = load <4 x i8>, <4 x i8>* %349, align 1
  %351 = zext <4 x i8> %350 to <4 x i32>
  %352 = bitcast i8* %348 to <4 x i8>*
  %353 = load <4 x i8>, <4 x i8>* %352, align 1
  %354 = zext <4 x i8> %353 to <4 x i32>
  %355 = sub nsw <4 x i32> %351, %354
  %356 = icmp slt <4 x i32> %355, zeroinitializer
  %357 = sub nsw <4 x i32> zeroinitializer, %355
  %358 = select <4 x i1> %356, <4 x i32> %357, <4 x i32> %355
  %359 = shufflevector <4 x i32> %358, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %360 = add <4 x i32> %358, %359
  %361 = shufflevector <4 x i32> %360, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %362 = add <4 x i32> %360, %361
  %363 = extractelement <4 x i32> %362, i32 0
  %364 = add i32 %363, %346
  %365 = getelementptr inbounds i8, i8* %347, i64 %6
  %366 = getelementptr inbounds i8, i8* %348, i64 %7
  %367 = bitcast i8* %365 to <4 x i8>*
  %368 = load <4 x i8>, <4 x i8>* %367, align 1
  %369 = zext <4 x i8> %368 to <4 x i32>
  %370 = bitcast i8* %366 to <4 x i8>*
  %371 = load <4 x i8>, <4 x i8>* %370, align 1
  %372 = zext <4 x i8> %371 to <4 x i32>
  %373 = sub nsw <4 x i32> %369, %372
  %374 = icmp slt <4 x i32> %373, zeroinitializer
  %375 = sub nsw <4 x i32> zeroinitializer, %373
  %376 = select <4 x i1> %374, <4 x i32> %375, <4 x i32> %373
  %377 = shufflevector <4 x i32> %376, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %378 = add <4 x i32> %376, %377
  %379 = shufflevector <4 x i32> %378, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %380 = add <4 x i32> %378, %379
  %381 = extractelement <4 x i32> %380, i32 0
  %382 = add i32 %381, %364
  %383 = getelementptr inbounds i8, i8* %365, i64 %6
  %384 = getelementptr inbounds i8, i8* %366, i64 %7
  %385 = bitcast i8* %383 to <4 x i8>*
  %386 = load <4 x i8>, <4 x i8>* %385, align 1
  %387 = zext <4 x i8> %386 to <4 x i32>
  %388 = bitcast i8* %384 to <4 x i8>*
  %389 = load <4 x i8>, <4 x i8>* %388, align 1
  %390 = zext <4 x i8> %389 to <4 x i32>
  %391 = sub nsw <4 x i32> %387, %390
  %392 = icmp slt <4 x i32> %391, zeroinitializer
  %393 = sub nsw <4 x i32> zeroinitializer, %391
  %394 = select <4 x i1> %392, <4 x i32> %393, <4 x i32> %391
  %395 = shufflevector <4 x i32> %394, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %396 = add <4 x i32> %394, %395
  %397 = shufflevector <4 x i32> %396, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %398 = add <4 x i32> %396, %397
  %399 = extractelement <4 x i32> %398, i32 0
  %400 = add i32 %399, %382
  %401 = getelementptr inbounds i8, i8* %383, i64 %6
  %402 = getelementptr inbounds i8, i8* %384, i64 %7
  %403 = bitcast i8* %401 to <4 x i8>*
  %404 = load <4 x i8>, <4 x i8>* %403, align 1
  %405 = zext <4 x i8> %404 to <4 x i32>
  %406 = bitcast i8* %402 to <4 x i8>*
  %407 = load <4 x i8>, <4 x i8>* %406, align 1
  %408 = zext <4 x i8> %407 to <4 x i32>
  %409 = sub nsw <4 x i32> %405, %408
  %410 = icmp slt <4 x i32> %409, zeroinitializer
  %411 = sub nsw <4 x i32> zeroinitializer, %409
  %412 = select <4 x i1> %410, <4 x i32> %411, <4 x i32> %409
  %413 = shufflevector <4 x i32> %412, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %414 = add <4 x i32> %412, %413
  %415 = shufflevector <4 x i32> %414, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %416 = add <4 x i32> %414, %415
  %417 = extractelement <4 x i32> %416, i32 0
  %418 = add i32 %417, %400
  %419 = getelementptr inbounds i8, i8* %401, i64 %6
  %420 = getelementptr inbounds i8, i8* %402, i64 %7
  %421 = bitcast i8* %419 to <4 x i8>*
  %422 = load <4 x i8>, <4 x i8>* %421, align 1
  %423 = zext <4 x i8> %422 to <4 x i32>
  %424 = bitcast i8* %420 to <4 x i8>*
  %425 = load <4 x i8>, <4 x i8>* %424, align 1
  %426 = zext <4 x i8> %425 to <4 x i32>
  %427 = sub nsw <4 x i32> %423, %426
  %428 = icmp slt <4 x i32> %427, zeroinitializer
  %429 = sub nsw <4 x i32> zeroinitializer, %427
  %430 = select <4 x i1> %428, <4 x i32> %429, <4 x i32> %427
  %431 = shufflevector <4 x i32> %430, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %432 = add <4 x i32> %430, %431
  %433 = shufflevector <4 x i32> %432, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %434 = add <4 x i32> %432, %433
  %435 = extractelement <4 x i32> %434, i32 0
  %436 = add i32 %435, %418
  %437 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %436, i32* %437, align 4
  %438 = getelementptr inbounds i8*, i8** %2, i64 3
  %439 = load i8*, i8** %438, align 8
  %440 = bitcast i8* %0 to <4 x i8>*
  %441 = load <4 x i8>, <4 x i8>* %440, align 1
  %442 = zext <4 x i8> %441 to <4 x i32>
  %443 = bitcast i8* %439 to <4 x i8>*
  %444 = load <4 x i8>, <4 x i8>* %443, align 1
  %445 = zext <4 x i8> %444 to <4 x i32>
  %446 = sub nsw <4 x i32> %442, %445
  %447 = icmp slt <4 x i32> %446, zeroinitializer
  %448 = sub nsw <4 x i32> zeroinitializer, %446
  %449 = select <4 x i1> %447, <4 x i32> %448, <4 x i32> %446
  %450 = shufflevector <4 x i32> %449, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %451 = add <4 x i32> %449, %450
  %452 = shufflevector <4 x i32> %451, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %453 = add <4 x i32> %451, %452
  %454 = extractelement <4 x i32> %453, i32 0
  %455 = getelementptr inbounds i8, i8* %0, i64 %6
  %456 = getelementptr inbounds i8, i8* %439, i64 %7
  %457 = bitcast i8* %455 to <4 x i8>*
  %458 = load <4 x i8>, <4 x i8>* %457, align 1
  %459 = zext <4 x i8> %458 to <4 x i32>
  %460 = bitcast i8* %456 to <4 x i8>*
  %461 = load <4 x i8>, <4 x i8>* %460, align 1
  %462 = zext <4 x i8> %461 to <4 x i32>
  %463 = sub nsw <4 x i32> %459, %462
  %464 = icmp slt <4 x i32> %463, zeroinitializer
  %465 = sub nsw <4 x i32> zeroinitializer, %463
  %466 = select <4 x i1> %464, <4 x i32> %465, <4 x i32> %463
  %467 = shufflevector <4 x i32> %466, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %468 = add <4 x i32> %466, %467
  %469 = shufflevector <4 x i32> %468, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %470 = add <4 x i32> %468, %469
  %471 = extractelement <4 x i32> %470, i32 0
  %472 = add i32 %471, %454
  %473 = getelementptr inbounds i8, i8* %455, i64 %6
  %474 = getelementptr inbounds i8, i8* %456, i64 %7
  %475 = bitcast i8* %473 to <4 x i8>*
  %476 = load <4 x i8>, <4 x i8>* %475, align 1
  %477 = zext <4 x i8> %476 to <4 x i32>
  %478 = bitcast i8* %474 to <4 x i8>*
  %479 = load <4 x i8>, <4 x i8>* %478, align 1
  %480 = zext <4 x i8> %479 to <4 x i32>
  %481 = sub nsw <4 x i32> %477, %480
  %482 = icmp slt <4 x i32> %481, zeroinitializer
  %483 = sub nsw <4 x i32> zeroinitializer, %481
  %484 = select <4 x i1> %482, <4 x i32> %483, <4 x i32> %481
  %485 = shufflevector <4 x i32> %484, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %486 = add <4 x i32> %484, %485
  %487 = shufflevector <4 x i32> %486, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %488 = add <4 x i32> %486, %487
  %489 = extractelement <4 x i32> %488, i32 0
  %490 = add i32 %489, %472
  %491 = getelementptr inbounds i8, i8* %473, i64 %6
  %492 = getelementptr inbounds i8, i8* %474, i64 %7
  %493 = bitcast i8* %491 to <4 x i8>*
  %494 = load <4 x i8>, <4 x i8>* %493, align 1
  %495 = zext <4 x i8> %494 to <4 x i32>
  %496 = bitcast i8* %492 to <4 x i8>*
  %497 = load <4 x i8>, <4 x i8>* %496, align 1
  %498 = zext <4 x i8> %497 to <4 x i32>
  %499 = sub nsw <4 x i32> %495, %498
  %500 = icmp slt <4 x i32> %499, zeroinitializer
  %501 = sub nsw <4 x i32> zeroinitializer, %499
  %502 = select <4 x i1> %500, <4 x i32> %501, <4 x i32> %499
  %503 = shufflevector <4 x i32> %502, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %504 = add <4 x i32> %502, %503
  %505 = shufflevector <4 x i32> %504, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %506 = add <4 x i32> %504, %505
  %507 = extractelement <4 x i32> %506, i32 0
  %508 = add i32 %507, %490
  %509 = getelementptr inbounds i8, i8* %491, i64 %6
  %510 = getelementptr inbounds i8, i8* %492, i64 %7
  %511 = bitcast i8* %509 to <4 x i8>*
  %512 = load <4 x i8>, <4 x i8>* %511, align 1
  %513 = zext <4 x i8> %512 to <4 x i32>
  %514 = bitcast i8* %510 to <4 x i8>*
  %515 = load <4 x i8>, <4 x i8>* %514, align 1
  %516 = zext <4 x i8> %515 to <4 x i32>
  %517 = sub nsw <4 x i32> %513, %516
  %518 = icmp slt <4 x i32> %517, zeroinitializer
  %519 = sub nsw <4 x i32> zeroinitializer, %517
  %520 = select <4 x i1> %518, <4 x i32> %519, <4 x i32> %517
  %521 = shufflevector <4 x i32> %520, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %522 = add <4 x i32> %520, %521
  %523 = shufflevector <4 x i32> %522, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %524 = add <4 x i32> %522, %523
  %525 = extractelement <4 x i32> %524, i32 0
  %526 = add i32 %525, %508
  %527 = getelementptr inbounds i8, i8* %509, i64 %6
  %528 = getelementptr inbounds i8, i8* %510, i64 %7
  %529 = bitcast i8* %527 to <4 x i8>*
  %530 = load <4 x i8>, <4 x i8>* %529, align 1
  %531 = zext <4 x i8> %530 to <4 x i32>
  %532 = bitcast i8* %528 to <4 x i8>*
  %533 = load <4 x i8>, <4 x i8>* %532, align 1
  %534 = zext <4 x i8> %533 to <4 x i32>
  %535 = sub nsw <4 x i32> %531, %534
  %536 = icmp slt <4 x i32> %535, zeroinitializer
  %537 = sub nsw <4 x i32> zeroinitializer, %535
  %538 = select <4 x i1> %536, <4 x i32> %537, <4 x i32> %535
  %539 = shufflevector <4 x i32> %538, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %540 = add <4 x i32> %538, %539
  %541 = shufflevector <4 x i32> %540, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %542 = add <4 x i32> %540, %541
  %543 = extractelement <4 x i32> %542, i32 0
  %544 = add i32 %543, %526
  %545 = getelementptr inbounds i8, i8* %527, i64 %6
  %546 = getelementptr inbounds i8, i8* %528, i64 %7
  %547 = bitcast i8* %545 to <4 x i8>*
  %548 = load <4 x i8>, <4 x i8>* %547, align 1
  %549 = zext <4 x i8> %548 to <4 x i32>
  %550 = bitcast i8* %546 to <4 x i8>*
  %551 = load <4 x i8>, <4 x i8>* %550, align 1
  %552 = zext <4 x i8> %551 to <4 x i32>
  %553 = sub nsw <4 x i32> %549, %552
  %554 = icmp slt <4 x i32> %553, zeroinitializer
  %555 = sub nsw <4 x i32> zeroinitializer, %553
  %556 = select <4 x i1> %554, <4 x i32> %555, <4 x i32> %553
  %557 = shufflevector <4 x i32> %556, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %558 = add <4 x i32> %556, %557
  %559 = shufflevector <4 x i32> %558, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %560 = add <4 x i32> %558, %559
  %561 = extractelement <4 x i32> %560, i32 0
  %562 = add i32 %561, %544
  %563 = getelementptr inbounds i8, i8* %545, i64 %6
  %564 = getelementptr inbounds i8, i8* %546, i64 %7
  %565 = bitcast i8* %563 to <4 x i8>*
  %566 = load <4 x i8>, <4 x i8>* %565, align 1
  %567 = zext <4 x i8> %566 to <4 x i32>
  %568 = bitcast i8* %564 to <4 x i8>*
  %569 = load <4 x i8>, <4 x i8>* %568, align 1
  %570 = zext <4 x i8> %569 to <4 x i32>
  %571 = sub nsw <4 x i32> %567, %570
  %572 = icmp slt <4 x i32> %571, zeroinitializer
  %573 = sub nsw <4 x i32> zeroinitializer, %571
  %574 = select <4 x i1> %572, <4 x i32> %573, <4 x i32> %571
  %575 = shufflevector <4 x i32> %574, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %576 = add <4 x i32> %574, %575
  %577 = shufflevector <4 x i32> %576, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %578 = add <4 x i32> %576, %577
  %579 = extractelement <4 x i32> %578, i32 0
  %580 = add i32 %579, %562
  %581 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %580, i32* %581, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_sad4x4_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %5 = sext i32 %1 to i64
  %6 = sext i32 %3 to i64
  %7 = load i8, i8* %0, align 1
  %8 = zext i8 %7 to i32
  %9 = load i8, i8* %2, align 1
  %10 = zext i8 %9 to i32
  %11 = sub nsw i32 %8, %10
  %12 = icmp slt i32 %11, 0
  %13 = sub nsw i32 0, %11
  %14 = select i1 %12, i32 %13, i32 %11
  %15 = getelementptr inbounds i8, i8* %0, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = getelementptr inbounds i8, i8* %2, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = sub nsw i32 %17, %20
  %22 = icmp slt i32 %21, 0
  %23 = sub nsw i32 0, %21
  %24 = select i1 %22, i32 %23, i32 %21
  %25 = add nuw nsw i32 %24, %14
  %26 = getelementptr inbounds i8, i8* %0, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds i8, i8* %2, i64 2
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = sub nsw i32 %28, %31
  %33 = icmp slt i32 %32, 0
  %34 = sub nsw i32 0, %32
  %35 = select i1 %33, i32 %34, i32 %32
  %36 = add nuw nsw i32 %35, %25
  %37 = getelementptr inbounds i8, i8* %0, i64 3
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = getelementptr inbounds i8, i8* %2, i64 3
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = sub nsw i32 %39, %42
  %44 = icmp slt i32 %43, 0
  %45 = sub nsw i32 0, %43
  %46 = select i1 %44, i32 %45, i32 %43
  %47 = add nuw nsw i32 %46, %36
  %48 = getelementptr inbounds i8, i8* %0, i64 %5
  %49 = getelementptr inbounds i8, i8* %2, i64 %6
  %50 = load i8, i8* %48, align 1
  %51 = zext i8 %50 to i32
  %52 = load i8, i8* %49, align 1
  %53 = zext i8 %52 to i32
  %54 = sub nsw i32 %51, %53
  %55 = icmp slt i32 %54, 0
  %56 = sub nsw i32 0, %54
  %57 = select i1 %55, i32 %56, i32 %54
  %58 = add nuw nsw i32 %57, %47
  %59 = getelementptr inbounds i8, i8* %48, i64 1
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = getelementptr inbounds i8, i8* %49, i64 1
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = sub nsw i32 %61, %64
  %66 = icmp slt i32 %65, 0
  %67 = sub nsw i32 0, %65
  %68 = select i1 %66, i32 %67, i32 %65
  %69 = add nuw nsw i32 %68, %58
  %70 = getelementptr inbounds i8, i8* %48, i64 2
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = getelementptr inbounds i8, i8* %49, i64 2
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = sub nsw i32 %72, %75
  %77 = icmp slt i32 %76, 0
  %78 = sub nsw i32 0, %76
  %79 = select i1 %77, i32 %78, i32 %76
  %80 = add nuw nsw i32 %79, %69
  %81 = getelementptr inbounds i8, i8* %48, i64 3
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = getelementptr inbounds i8, i8* %49, i64 3
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = sub nsw i32 %83, %86
  %88 = icmp slt i32 %87, 0
  %89 = sub nsw i32 0, %87
  %90 = select i1 %88, i32 %89, i32 %87
  %91 = add nuw nsw i32 %90, %80
  %92 = getelementptr inbounds i8, i8* %48, i64 %5
  %93 = getelementptr inbounds i8, i8* %49, i64 %6
  %94 = load i8, i8* %92, align 1
  %95 = zext i8 %94 to i32
  %96 = load i8, i8* %93, align 1
  %97 = zext i8 %96 to i32
  %98 = sub nsw i32 %95, %97
  %99 = icmp slt i32 %98, 0
  %100 = sub nsw i32 0, %98
  %101 = select i1 %99, i32 %100, i32 %98
  %102 = add nuw nsw i32 %101, %91
  %103 = getelementptr inbounds i8, i8* %92, i64 1
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = getelementptr inbounds i8, i8* %93, i64 1
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = sub nsw i32 %105, %108
  %110 = icmp slt i32 %109, 0
  %111 = sub nsw i32 0, %109
  %112 = select i1 %110, i32 %111, i32 %109
  %113 = add nuw nsw i32 %112, %102
  %114 = getelementptr inbounds i8, i8* %92, i64 2
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = getelementptr inbounds i8, i8* %93, i64 2
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  %120 = sub nsw i32 %116, %119
  %121 = icmp slt i32 %120, 0
  %122 = sub nsw i32 0, %120
  %123 = select i1 %121, i32 %122, i32 %120
  %124 = add nuw nsw i32 %123, %113
  %125 = getelementptr inbounds i8, i8* %92, i64 3
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = getelementptr inbounds i8, i8* %93, i64 3
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = sub nsw i32 %127, %130
  %132 = icmp slt i32 %131, 0
  %133 = sub nsw i32 0, %131
  %134 = select i1 %132, i32 %133, i32 %131
  %135 = add nuw nsw i32 %134, %124
  %136 = getelementptr inbounds i8, i8* %92, i64 %5
  %137 = getelementptr inbounds i8, i8* %93, i64 %6
  %138 = load i8, i8* %136, align 1
  %139 = zext i8 %138 to i32
  %140 = load i8, i8* %137, align 1
  %141 = zext i8 %140 to i32
  %142 = sub nsw i32 %139, %141
  %143 = icmp slt i32 %142, 0
  %144 = sub nsw i32 0, %142
  %145 = select i1 %143, i32 %144, i32 %142
  %146 = add nuw nsw i32 %145, %135
  %147 = getelementptr inbounds i8, i8* %136, i64 1
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i32
  %150 = getelementptr inbounds i8, i8* %137, i64 1
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i32
  %153 = sub nsw i32 %149, %152
  %154 = icmp slt i32 %153, 0
  %155 = sub nsw i32 0, %153
  %156 = select i1 %154, i32 %155, i32 %153
  %157 = add nuw nsw i32 %156, %146
  %158 = getelementptr inbounds i8, i8* %136, i64 2
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = getelementptr inbounds i8, i8* %137, i64 2
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = sub nsw i32 %160, %163
  %165 = icmp slt i32 %164, 0
  %166 = sub nsw i32 0, %164
  %167 = select i1 %165, i32 %166, i32 %164
  %168 = add nuw nsw i32 %167, %157
  %169 = getelementptr inbounds i8, i8* %136, i64 3
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = getelementptr inbounds i8, i8* %137, i64 3
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i32
  %175 = sub nsw i32 %171, %174
  %176 = icmp slt i32 %175, 0
  %177 = sub nsw i32 0, %175
  %178 = select i1 %176, i32 %177, i32 %175
  %179 = add nuw nsw i32 %178, %168
  ret i32 %179
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_sad4x4_avg_c(i8* nocapture readonly, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca <16 x i8>, align 16
  %7 = getelementptr inbounds <16 x i8>, <16 x i8>* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 16, i1 false)
  call void @vpx_comp_avg_pred_c(i8* nonnull %7, i8* %4, i32 4, i32 4, i8* %2, i32 %3) #5
  %8 = sext i32 %1 to i64
  %9 = bitcast i8* %0 to <4 x i8>*
  %10 = load <4 x i8>, <4 x i8>* %9, align 1
  %11 = getelementptr inbounds i8, i8* %0, i64 %8
  %12 = load i8, i8* %11, align 1
  %13 = getelementptr inbounds i8, i8* %11, i64 1
  %14 = load i8, i8* %13, align 1
  %15 = getelementptr inbounds i8, i8* %11, i64 2
  %16 = load i8, i8* %15, align 1
  %17 = getelementptr inbounds i8, i8* %11, i64 3
  %18 = load i8, i8* %17, align 1
  %19 = getelementptr inbounds i8, i8* %11, i64 %8
  %20 = load i8, i8* %19, align 1
  %21 = getelementptr inbounds i8, i8* %19, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = getelementptr inbounds i8, i8* %19, i64 2
  %24 = load i8, i8* %23, align 1
  %25 = getelementptr inbounds i8, i8* %19, i64 3
  %26 = load i8, i8* %25, align 1
  %27 = getelementptr inbounds i8, i8* %19, i64 %8
  %28 = load i8, i8* %27, align 1
  %29 = getelementptr inbounds i8, i8* %27, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = getelementptr inbounds i8, i8* %27, i64 2
  %32 = load i8, i8* %31, align 1
  %33 = getelementptr inbounds i8, i8* %27, i64 3
  %34 = load i8, i8* %33, align 1
  %35 = extractelement <4 x i8> %10, i32 0
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = extractelement <4 x i8> %10, i32 1
  %38 = insertelement <16 x i8> %36, i8 %37, i32 1
  %39 = extractelement <4 x i8> %10, i32 2
  %40 = insertelement <16 x i8> %38, i8 %39, i32 2
  %41 = extractelement <4 x i8> %10, i32 3
  %42 = insertelement <16 x i8> %40, i8 %41, i32 3
  %43 = insertelement <16 x i8> %42, i8 %12, i32 4
  %44 = insertelement <16 x i8> %43, i8 %14, i32 5
  %45 = insertelement <16 x i8> %44, i8 %16, i32 6
  %46 = insertelement <16 x i8> %45, i8 %18, i32 7
  %47 = insertelement <16 x i8> %46, i8 %20, i32 8
  %48 = insertelement <16 x i8> %47, i8 %22, i32 9
  %49 = insertelement <16 x i8> %48, i8 %24, i32 10
  %50 = insertelement <16 x i8> %49, i8 %26, i32 11
  %51 = insertelement <16 x i8> %50, i8 %28, i32 12
  %52 = insertelement <16 x i8> %51, i8 %30, i32 13
  %53 = insertelement <16 x i8> %52, i8 %32, i32 14
  %54 = insertelement <16 x i8> %53, i8 %34, i32 15
  %55 = zext <16 x i8> %54 to <16 x i32>
  %56 = load <16 x i8>, <16 x i8>* %6, align 16
  %57 = zext <16 x i8> %56 to <16 x i32>
  %58 = sub nsw <16 x i32> %55, %57
  %59 = icmp slt <16 x i32> %58, zeroinitializer
  %60 = sub nsw <16 x i32> zeroinitializer, %58
  %61 = select <16 x i1> %59, <16 x i32> %60, <16 x i32> %58
  %62 = shufflevector <16 x i32> %61, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %63 = add nuw nsw <16 x i32> %61, %62
  %64 = shufflevector <16 x i32> %63, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %65 = add nuw nsw <16 x i32> %63, %64
  %66 = shufflevector <16 x i32> %65, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %67 = add nuw nsw <16 x i32> %65, %66
  %68 = shufflevector <16 x i32> %67, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %69 = add nuw nsw <16 x i32> %67, %68
  %70 = extractelement <16 x i32> %69, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #5
  ret i32 %70
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad4x4x3_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = tail call i32 @vpx_sad4x4_c(i8* %0, i32 %1, i8* %2, i32 %3)
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds i8, i8* %2, i64 1
  %8 = tail call i32 @vpx_sad4x4_c(i8* %0, i32 %1, i8* %7, i32 %3)
  %9 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %2, i64 2
  %11 = tail call i32 @vpx_sad4x4_c(i8* %0, i32 %1, i8* %10, i32 %3)
  %12 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %11, i32* %12, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad4x4x8_c(i8* nocapture readonly, i32, i8* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = tail call i32 @vpx_sad4x4_c(i8* %0, i32 %1, i8* %2, i32 %3)
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds i8, i8* %2, i64 1
  %8 = tail call i32 @vpx_sad4x4_c(i8* %0, i32 %1, i8* %7, i32 %3)
  %9 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %2, i64 2
  %11 = tail call i32 @vpx_sad4x4_c(i8* %0, i32 %1, i8* %10, i32 %3)
  %12 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 3
  %14 = tail call i32 @vpx_sad4x4_c(i8* %0, i32 %1, i8* %13, i32 %3)
  %15 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %2, i64 4
  %17 = tail call i32 @vpx_sad4x4_c(i8* %0, i32 %1, i8* %16, i32 %3)
  %18 = getelementptr inbounds i32, i32* %4, i64 4
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %2, i64 5
  %20 = tail call i32 @vpx_sad4x4_c(i8* %0, i32 %1, i8* %19, i32 %3)
  %21 = getelementptr inbounds i32, i32* %4, i64 5
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %2, i64 6
  %23 = tail call i32 @vpx_sad4x4_c(i8* %0, i32 %1, i8* %22, i32 %3)
  %24 = getelementptr inbounds i32, i32* %4, i64 6
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %2, i64 7
  %26 = tail call i32 @vpx_sad4x4_c(i8* %0, i32 %1, i8* %25, i32 %3)
  %27 = getelementptr inbounds i32, i32* %4, i64 7
  store i32 %26, i32* %27, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_sad4x4x4d_c(i8* nocapture readonly, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = load i8*, i8** %2, align 8
  %7 = tail call i32 @vpx_sad4x4_c(i8* %0, i32 %1, i8* %6, i32 %3)
  store i32 %7, i32* %4, align 4
  %8 = getelementptr inbounds i8*, i8** %2, i64 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @vpx_sad4x4_c(i8* %0, i32 %1, i8* %9, i32 %3)
  %11 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds i8*, i8** %2, i64 2
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i32 @vpx_sad4x4_c(i8* %0, i32 %1, i8* %13, i32 %3)
  %15 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i8*, i8** %2, i64 3
  %17 = load i8*, i8** %16, align 8
  %18 = tail call i32 @vpx_sad4x4_c(i8* %0, i32 %1, i8* %17, i32 %3)
  %19 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %18, i32* %19, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_highbd_sad64x64_c(i8*, i32, i8*, i32) local_unnamed_addr #0 {
  %5 = ptrtoint i8* %2 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = ptrtoint i8* %0 to i64
  %9 = shl i64 %8, 1
  %10 = inttoptr i64 %9 to i16*
  %11 = sext i32 %1 to i64
  %12 = sext i32 %3 to i64
  br label %13

13:                                               ; preds = %4, %51
  %14 = phi i16* [ %7, %4 ], [ %58, %51 ]
  %15 = phi i16* [ %10, %4 ], [ %57, %51 ]
  %16 = phi i32 [ 0, %4 ], [ %56, %51 ]
  %17 = phi i32 [ 0, %4 ], [ %59, %51 ]
  %18 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %16, i32 0
  br label %19

19:                                               ; preds = %19, %13
  %20 = phi i64 [ 0, %13 ], [ %49, %19 ]
  %21 = phi <4 x i32> [ %18, %13 ], [ %48, %19 ]
  %22 = getelementptr inbounds i16, i16* %15, i64 %20
  %23 = bitcast i16* %22 to <4 x i16>*
  %24 = load <4 x i16>, <4 x i16>* %23, align 2
  %25 = zext <4 x i16> %24 to <4 x i32>
  %26 = getelementptr inbounds i16, i16* %14, i64 %20
  %27 = bitcast i16* %26 to <4 x i16>*
  %28 = load <4 x i16>, <4 x i16>* %27, align 2
  %29 = zext <4 x i16> %28 to <4 x i32>
  %30 = sub nsw <4 x i32> %25, %29
  %31 = icmp slt <4 x i32> %30, zeroinitializer
  %32 = sub nsw <4 x i32> zeroinitializer, %30
  %33 = select <4 x i1> %31, <4 x i32> %32, <4 x i32> %30
  %34 = add <4 x i32> %33, %21
  %35 = or i64 %20, 4
  %36 = getelementptr inbounds i16, i16* %15, i64 %35
  %37 = bitcast i16* %36 to <4 x i16>*
  %38 = load <4 x i16>, <4 x i16>* %37, align 2
  %39 = zext <4 x i16> %38 to <4 x i32>
  %40 = getelementptr inbounds i16, i16* %14, i64 %35
  %41 = bitcast i16* %40 to <4 x i16>*
  %42 = load <4 x i16>, <4 x i16>* %41, align 2
  %43 = zext <4 x i16> %42 to <4 x i32>
  %44 = sub nsw <4 x i32> %39, %43
  %45 = icmp slt <4 x i32> %44, zeroinitializer
  %46 = sub nsw <4 x i32> zeroinitializer, %44
  %47 = select <4 x i1> %45, <4 x i32> %46, <4 x i32> %44
  %48 = add <4 x i32> %47, %34
  %49 = add nuw nsw i64 %20, 8
  %50 = icmp eq i64 %49, 64
  br i1 %50, label %51, label %19, !llvm.loop !15

51:                                               ; preds = %19
  %52 = shufflevector <4 x i32> %48, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %53 = add <4 x i32> %48, %52
  %54 = shufflevector <4 x i32> %53, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %55 = add <4 x i32> %53, %54
  %56 = extractelement <4 x i32> %55, i32 0
  %57 = getelementptr inbounds i16, i16* %15, i64 %11
  %58 = getelementptr inbounds i16, i16* %14, i64 %12
  %59 = add nuw nsw i32 %17, 1
  %60 = icmp eq i32 %59, 64
  br i1 %60, label %61, label %13

61:                                               ; preds = %51
  ret i32 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_highbd_sad64x64_avg_c(i8*, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [4096 x i16], align 16
  %7 = bitcast [4096 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 8192, i1 false)
  %8 = getelementptr inbounds [4096 x i16], [4096 x i16]* %6, i64 0, i64 0
  %9 = ptrtoint i8* %4 to i64
  %10 = shl i64 %9, 1
  %11 = inttoptr i64 %10 to i16*
  %12 = ptrtoint i8* %2 to i64
  %13 = shl i64 %12, 1
  %14 = inttoptr i64 %13 to i16*
  call void @vpx_highbd_comp_avg_pred_c(i16* nonnull %8, i16* %11, i32 64, i32 64, i16* %14, i32 %3) #5
  %15 = ptrtoint i8* %0 to i64
  %16 = shl i64 %15, 1
  %17 = inttoptr i64 %16 to i16*
  %18 = sext i32 %1 to i64
  br label %19

19:                                               ; preds = %5, %57
  %20 = phi i16* [ %17, %5 ], [ %63, %57 ]
  %21 = phi i32 [ 0, %5 ], [ %62, %57 ]
  %22 = phi i32 [ 0, %5 ], [ %65, %57 ]
  %23 = phi i16* [ %8, %5 ], [ %64, %57 ]
  %24 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %21, i32 0
  br label %25

25:                                               ; preds = %25, %19
  %26 = phi i64 [ 0, %19 ], [ %55, %25 ]
  %27 = phi <4 x i32> [ %24, %19 ], [ %54, %25 ]
  %28 = getelementptr inbounds i16, i16* %20, i64 %26
  %29 = bitcast i16* %28 to <4 x i16>*
  %30 = load <4 x i16>, <4 x i16>* %29, align 2
  %31 = zext <4 x i16> %30 to <4 x i32>
  %32 = getelementptr inbounds i16, i16* %23, i64 %26
  %33 = bitcast i16* %32 to <4 x i16>*
  %34 = load <4 x i16>, <4 x i16>* %33, align 2
  %35 = zext <4 x i16> %34 to <4 x i32>
  %36 = sub nsw <4 x i32> %31, %35
  %37 = icmp slt <4 x i32> %36, zeroinitializer
  %38 = sub nsw <4 x i32> zeroinitializer, %36
  %39 = select <4 x i1> %37, <4 x i32> %38, <4 x i32> %36
  %40 = add <4 x i32> %39, %27
  %41 = or i64 %26, 4
  %42 = getelementptr inbounds i16, i16* %20, i64 %41
  %43 = bitcast i16* %42 to <4 x i16>*
  %44 = load <4 x i16>, <4 x i16>* %43, align 2
  %45 = zext <4 x i16> %44 to <4 x i32>
  %46 = getelementptr inbounds i16, i16* %23, i64 %41
  %47 = bitcast i16* %46 to <4 x i16>*
  %48 = load <4 x i16>, <4 x i16>* %47, align 2
  %49 = zext <4 x i16> %48 to <4 x i32>
  %50 = sub nsw <4 x i32> %45, %49
  %51 = icmp slt <4 x i32> %50, zeroinitializer
  %52 = sub nsw <4 x i32> zeroinitializer, %50
  %53 = select <4 x i1> %51, <4 x i32> %52, <4 x i32> %50
  %54 = add <4 x i32> %53, %40
  %55 = add nuw nsw i64 %26, 8
  %56 = icmp eq i64 %55, 64
  br i1 %56, label %57, label %25, !llvm.loop !16

57:                                               ; preds = %25
  %58 = shufflevector <4 x i32> %54, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %59 = add <4 x i32> %54, %58
  %60 = shufflevector <4 x i32> %59, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %61 = add <4 x i32> %59, %60
  %62 = extractelement <4 x i32> %61, i32 0
  %63 = getelementptr inbounds i16, i16* %20, i64 %18
  %64 = getelementptr inbounds i16, i16* %23, i64 64
  %65 = add nuw nsw i32 %22, 1
  %66 = icmp eq i32 %65, 64
  br i1 %66, label %67, label %19

67:                                               ; preds = %57
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %7) #5
  ret i32 %62
}

declare void @vpx_highbd_comp_avg_pred_c(i16*, i16*, i32, i32, i16*, i32) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_highbd_sad64x64x4d_c(i8*, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = ptrtoint i8* %0 to i64
  %7 = shl i64 %6, 1
  %8 = inttoptr i64 %7 to i16*
  %9 = sext i32 %1 to i64
  %10 = sext i32 %3 to i64
  %11 = bitcast i8** %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 1
  %14 = inttoptr i64 %13 to i16*
  br label %15

15:                                               ; preds = %5, %53
  %16 = phi i16* [ %14, %5 ], [ %60, %53 ]
  %17 = phi i16* [ %8, %5 ], [ %59, %53 ]
  %18 = phi i32 [ 0, %5 ], [ %58, %53 ]
  %19 = phi i32 [ 0, %5 ], [ %61, %53 ]
  %20 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %18, i32 0
  br label %21

21:                                               ; preds = %21, %15
  %22 = phi i64 [ 0, %15 ], [ %51, %21 ]
  %23 = phi <4 x i32> [ %20, %15 ], [ %50, %21 ]
  %24 = getelementptr inbounds i16, i16* %17, i64 %22
  %25 = bitcast i16* %24 to <4 x i16>*
  %26 = load <4 x i16>, <4 x i16>* %25, align 2
  %27 = zext <4 x i16> %26 to <4 x i32>
  %28 = getelementptr inbounds i16, i16* %16, i64 %22
  %29 = bitcast i16* %28 to <4 x i16>*
  %30 = load <4 x i16>, <4 x i16>* %29, align 2
  %31 = zext <4 x i16> %30 to <4 x i32>
  %32 = sub nsw <4 x i32> %27, %31
  %33 = icmp slt <4 x i32> %32, zeroinitializer
  %34 = sub nsw <4 x i32> zeroinitializer, %32
  %35 = select <4 x i1> %33, <4 x i32> %34, <4 x i32> %32
  %36 = add <4 x i32> %35, %23
  %37 = or i64 %22, 4
  %38 = getelementptr inbounds i16, i16* %17, i64 %37
  %39 = bitcast i16* %38 to <4 x i16>*
  %40 = load <4 x i16>, <4 x i16>* %39, align 2
  %41 = zext <4 x i16> %40 to <4 x i32>
  %42 = getelementptr inbounds i16, i16* %16, i64 %37
  %43 = bitcast i16* %42 to <4 x i16>*
  %44 = load <4 x i16>, <4 x i16>* %43, align 2
  %45 = zext <4 x i16> %44 to <4 x i32>
  %46 = sub nsw <4 x i32> %41, %45
  %47 = icmp slt <4 x i32> %46, zeroinitializer
  %48 = sub nsw <4 x i32> zeroinitializer, %46
  %49 = select <4 x i1> %47, <4 x i32> %48, <4 x i32> %46
  %50 = add <4 x i32> %49, %36
  %51 = add nuw nsw i64 %22, 8
  %52 = icmp eq i64 %51, 64
  br i1 %52, label %53, label %21, !llvm.loop !17

53:                                               ; preds = %21
  %54 = shufflevector <4 x i32> %50, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %55 = add <4 x i32> %50, %54
  %56 = shufflevector <4 x i32> %55, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %57 = add <4 x i32> %55, %56
  %58 = extractelement <4 x i32> %57, i32 0
  %59 = getelementptr inbounds i16, i16* %17, i64 %9
  %60 = getelementptr inbounds i16, i16* %16, i64 %10
  %61 = add nuw nsw i32 %19, 1
  %62 = icmp eq i32 %61, 64
  br i1 %62, label %63, label %15

63:                                               ; preds = %53
  store i32 %58, i32* %4, align 4
  %64 = getelementptr inbounds i8*, i8** %2, i64 1
  %65 = bitcast i8** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = shl i64 %66, 1
  %68 = inttoptr i64 %67 to i16*
  br label %69

69:                                               ; preds = %63, %107
  %70 = phi i16* [ %68, %63 ], [ %114, %107 ]
  %71 = phi i16* [ %8, %63 ], [ %113, %107 ]
  %72 = phi i32 [ 0, %63 ], [ %112, %107 ]
  %73 = phi i32 [ 0, %63 ], [ %115, %107 ]
  %74 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %72, i32 0
  br label %75

75:                                               ; preds = %75, %69
  %76 = phi i64 [ 0, %69 ], [ %105, %75 ]
  %77 = phi <4 x i32> [ %74, %69 ], [ %104, %75 ]
  %78 = getelementptr inbounds i16, i16* %71, i64 %76
  %79 = bitcast i16* %78 to <4 x i16>*
  %80 = load <4 x i16>, <4 x i16>* %79, align 2
  %81 = zext <4 x i16> %80 to <4 x i32>
  %82 = getelementptr inbounds i16, i16* %70, i64 %76
  %83 = bitcast i16* %82 to <4 x i16>*
  %84 = load <4 x i16>, <4 x i16>* %83, align 2
  %85 = zext <4 x i16> %84 to <4 x i32>
  %86 = sub nsw <4 x i32> %81, %85
  %87 = icmp slt <4 x i32> %86, zeroinitializer
  %88 = sub nsw <4 x i32> zeroinitializer, %86
  %89 = select <4 x i1> %87, <4 x i32> %88, <4 x i32> %86
  %90 = add <4 x i32> %89, %77
  %91 = or i64 %76, 4
  %92 = getelementptr inbounds i16, i16* %71, i64 %91
  %93 = bitcast i16* %92 to <4 x i16>*
  %94 = load <4 x i16>, <4 x i16>* %93, align 2
  %95 = zext <4 x i16> %94 to <4 x i32>
  %96 = getelementptr inbounds i16, i16* %70, i64 %91
  %97 = bitcast i16* %96 to <4 x i16>*
  %98 = load <4 x i16>, <4 x i16>* %97, align 2
  %99 = zext <4 x i16> %98 to <4 x i32>
  %100 = sub nsw <4 x i32> %95, %99
  %101 = icmp slt <4 x i32> %100, zeroinitializer
  %102 = sub nsw <4 x i32> zeroinitializer, %100
  %103 = select <4 x i1> %101, <4 x i32> %102, <4 x i32> %100
  %104 = add <4 x i32> %103, %90
  %105 = add nuw nsw i64 %76, 8
  %106 = icmp eq i64 %105, 64
  br i1 %106, label %107, label %75, !llvm.loop !18

107:                                              ; preds = %75
  %108 = shufflevector <4 x i32> %104, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %109 = add <4 x i32> %104, %108
  %110 = shufflevector <4 x i32> %109, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %111 = add <4 x i32> %109, %110
  %112 = extractelement <4 x i32> %111, i32 0
  %113 = getelementptr inbounds i16, i16* %71, i64 %9
  %114 = getelementptr inbounds i16, i16* %70, i64 %10
  %115 = add nuw nsw i32 %73, 1
  %116 = icmp eq i32 %115, 64
  br i1 %116, label %117, label %69

117:                                              ; preds = %107
  %118 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %112, i32* %118, align 4
  %119 = getelementptr inbounds i8*, i8** %2, i64 2
  %120 = bitcast i8** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = shl i64 %121, 1
  %123 = inttoptr i64 %122 to i16*
  br label %124

124:                                              ; preds = %117, %162
  %125 = phi i16* [ %123, %117 ], [ %169, %162 ]
  %126 = phi i16* [ %8, %117 ], [ %168, %162 ]
  %127 = phi i32 [ 0, %117 ], [ %167, %162 ]
  %128 = phi i32 [ 0, %117 ], [ %170, %162 ]
  %129 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %127, i32 0
  br label %130

130:                                              ; preds = %130, %124
  %131 = phi i64 [ 0, %124 ], [ %160, %130 ]
  %132 = phi <4 x i32> [ %129, %124 ], [ %159, %130 ]
  %133 = getelementptr inbounds i16, i16* %126, i64 %131
  %134 = bitcast i16* %133 to <4 x i16>*
  %135 = load <4 x i16>, <4 x i16>* %134, align 2
  %136 = zext <4 x i16> %135 to <4 x i32>
  %137 = getelementptr inbounds i16, i16* %125, i64 %131
  %138 = bitcast i16* %137 to <4 x i16>*
  %139 = load <4 x i16>, <4 x i16>* %138, align 2
  %140 = zext <4 x i16> %139 to <4 x i32>
  %141 = sub nsw <4 x i32> %136, %140
  %142 = icmp slt <4 x i32> %141, zeroinitializer
  %143 = sub nsw <4 x i32> zeroinitializer, %141
  %144 = select <4 x i1> %142, <4 x i32> %143, <4 x i32> %141
  %145 = add <4 x i32> %144, %132
  %146 = or i64 %131, 4
  %147 = getelementptr inbounds i16, i16* %126, i64 %146
  %148 = bitcast i16* %147 to <4 x i16>*
  %149 = load <4 x i16>, <4 x i16>* %148, align 2
  %150 = zext <4 x i16> %149 to <4 x i32>
  %151 = getelementptr inbounds i16, i16* %125, i64 %146
  %152 = bitcast i16* %151 to <4 x i16>*
  %153 = load <4 x i16>, <4 x i16>* %152, align 2
  %154 = zext <4 x i16> %153 to <4 x i32>
  %155 = sub nsw <4 x i32> %150, %154
  %156 = icmp slt <4 x i32> %155, zeroinitializer
  %157 = sub nsw <4 x i32> zeroinitializer, %155
  %158 = select <4 x i1> %156, <4 x i32> %157, <4 x i32> %155
  %159 = add <4 x i32> %158, %145
  %160 = add nuw nsw i64 %131, 8
  %161 = icmp eq i64 %160, 64
  br i1 %161, label %162, label %130, !llvm.loop !19

162:                                              ; preds = %130
  %163 = shufflevector <4 x i32> %159, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %164 = add <4 x i32> %159, %163
  %165 = shufflevector <4 x i32> %164, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %166 = add <4 x i32> %164, %165
  %167 = extractelement <4 x i32> %166, i32 0
  %168 = getelementptr inbounds i16, i16* %126, i64 %9
  %169 = getelementptr inbounds i16, i16* %125, i64 %10
  %170 = add nuw nsw i32 %128, 1
  %171 = icmp eq i32 %170, 64
  br i1 %171, label %172, label %124

172:                                              ; preds = %162
  %173 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %167, i32* %173, align 4
  %174 = getelementptr inbounds i8*, i8** %2, i64 3
  %175 = bitcast i8** %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = shl i64 %176, 1
  %178 = inttoptr i64 %177 to i16*
  br label %179

179:                                              ; preds = %172, %217
  %180 = phi i16* [ %178, %172 ], [ %224, %217 ]
  %181 = phi i16* [ %8, %172 ], [ %223, %217 ]
  %182 = phi i32 [ 0, %172 ], [ %222, %217 ]
  %183 = phi i32 [ 0, %172 ], [ %225, %217 ]
  %184 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %182, i32 0
  br label %185

185:                                              ; preds = %185, %179
  %186 = phi i64 [ 0, %179 ], [ %215, %185 ]
  %187 = phi <4 x i32> [ %184, %179 ], [ %214, %185 ]
  %188 = getelementptr inbounds i16, i16* %181, i64 %186
  %189 = bitcast i16* %188 to <4 x i16>*
  %190 = load <4 x i16>, <4 x i16>* %189, align 2
  %191 = zext <4 x i16> %190 to <4 x i32>
  %192 = getelementptr inbounds i16, i16* %180, i64 %186
  %193 = bitcast i16* %192 to <4 x i16>*
  %194 = load <4 x i16>, <4 x i16>* %193, align 2
  %195 = zext <4 x i16> %194 to <4 x i32>
  %196 = sub nsw <4 x i32> %191, %195
  %197 = icmp slt <4 x i32> %196, zeroinitializer
  %198 = sub nsw <4 x i32> zeroinitializer, %196
  %199 = select <4 x i1> %197, <4 x i32> %198, <4 x i32> %196
  %200 = add <4 x i32> %199, %187
  %201 = or i64 %186, 4
  %202 = getelementptr inbounds i16, i16* %181, i64 %201
  %203 = bitcast i16* %202 to <4 x i16>*
  %204 = load <4 x i16>, <4 x i16>* %203, align 2
  %205 = zext <4 x i16> %204 to <4 x i32>
  %206 = getelementptr inbounds i16, i16* %180, i64 %201
  %207 = bitcast i16* %206 to <4 x i16>*
  %208 = load <4 x i16>, <4 x i16>* %207, align 2
  %209 = zext <4 x i16> %208 to <4 x i32>
  %210 = sub nsw <4 x i32> %205, %209
  %211 = icmp slt <4 x i32> %210, zeroinitializer
  %212 = sub nsw <4 x i32> zeroinitializer, %210
  %213 = select <4 x i1> %211, <4 x i32> %212, <4 x i32> %210
  %214 = add <4 x i32> %213, %200
  %215 = add nuw nsw i64 %186, 8
  %216 = icmp eq i64 %215, 64
  br i1 %216, label %217, label %185, !llvm.loop !20

217:                                              ; preds = %185
  %218 = shufflevector <4 x i32> %214, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %219 = add <4 x i32> %214, %218
  %220 = shufflevector <4 x i32> %219, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %221 = add <4 x i32> %219, %220
  %222 = extractelement <4 x i32> %221, i32 0
  %223 = getelementptr inbounds i16, i16* %181, i64 %9
  %224 = getelementptr inbounds i16, i16* %180, i64 %10
  %225 = add nuw nsw i32 %183, 1
  %226 = icmp eq i32 %225, 64
  br i1 %226, label %227, label %179

227:                                              ; preds = %217
  %228 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %222, i32* %228, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_highbd_sad64x32_c(i8*, i32, i8*, i32) local_unnamed_addr #0 {
  %5 = ptrtoint i8* %2 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = ptrtoint i8* %0 to i64
  %9 = shl i64 %8, 1
  %10 = inttoptr i64 %9 to i16*
  %11 = sext i32 %1 to i64
  %12 = sext i32 %3 to i64
  br label %13

13:                                               ; preds = %4, %51
  %14 = phi i16* [ %7, %4 ], [ %58, %51 ]
  %15 = phi i16* [ %10, %4 ], [ %57, %51 ]
  %16 = phi i32 [ 0, %4 ], [ %56, %51 ]
  %17 = phi i32 [ 0, %4 ], [ %59, %51 ]
  %18 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %16, i32 0
  br label %19

19:                                               ; preds = %19, %13
  %20 = phi i64 [ 0, %13 ], [ %49, %19 ]
  %21 = phi <4 x i32> [ %18, %13 ], [ %48, %19 ]
  %22 = getelementptr inbounds i16, i16* %15, i64 %20
  %23 = bitcast i16* %22 to <4 x i16>*
  %24 = load <4 x i16>, <4 x i16>* %23, align 2
  %25 = zext <4 x i16> %24 to <4 x i32>
  %26 = getelementptr inbounds i16, i16* %14, i64 %20
  %27 = bitcast i16* %26 to <4 x i16>*
  %28 = load <4 x i16>, <4 x i16>* %27, align 2
  %29 = zext <4 x i16> %28 to <4 x i32>
  %30 = sub nsw <4 x i32> %25, %29
  %31 = icmp slt <4 x i32> %30, zeroinitializer
  %32 = sub nsw <4 x i32> zeroinitializer, %30
  %33 = select <4 x i1> %31, <4 x i32> %32, <4 x i32> %30
  %34 = add <4 x i32> %33, %21
  %35 = or i64 %20, 4
  %36 = getelementptr inbounds i16, i16* %15, i64 %35
  %37 = bitcast i16* %36 to <4 x i16>*
  %38 = load <4 x i16>, <4 x i16>* %37, align 2
  %39 = zext <4 x i16> %38 to <4 x i32>
  %40 = getelementptr inbounds i16, i16* %14, i64 %35
  %41 = bitcast i16* %40 to <4 x i16>*
  %42 = load <4 x i16>, <4 x i16>* %41, align 2
  %43 = zext <4 x i16> %42 to <4 x i32>
  %44 = sub nsw <4 x i32> %39, %43
  %45 = icmp slt <4 x i32> %44, zeroinitializer
  %46 = sub nsw <4 x i32> zeroinitializer, %44
  %47 = select <4 x i1> %45, <4 x i32> %46, <4 x i32> %44
  %48 = add <4 x i32> %47, %34
  %49 = add nuw nsw i64 %20, 8
  %50 = icmp eq i64 %49, 64
  br i1 %50, label %51, label %19, !llvm.loop !21

51:                                               ; preds = %19
  %52 = shufflevector <4 x i32> %48, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %53 = add <4 x i32> %48, %52
  %54 = shufflevector <4 x i32> %53, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %55 = add <4 x i32> %53, %54
  %56 = extractelement <4 x i32> %55, i32 0
  %57 = getelementptr inbounds i16, i16* %15, i64 %11
  %58 = getelementptr inbounds i16, i16* %14, i64 %12
  %59 = add nuw nsw i32 %17, 1
  %60 = icmp eq i32 %59, 32
  br i1 %60, label %61, label %13

61:                                               ; preds = %51
  ret i32 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_highbd_sad64x32_avg_c(i8*, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [2048 x i16], align 16
  %7 = bitcast [2048 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 4096, i1 false)
  %8 = getelementptr inbounds [2048 x i16], [2048 x i16]* %6, i64 0, i64 0
  %9 = ptrtoint i8* %4 to i64
  %10 = shl i64 %9, 1
  %11 = inttoptr i64 %10 to i16*
  %12 = ptrtoint i8* %2 to i64
  %13 = shl i64 %12, 1
  %14 = inttoptr i64 %13 to i16*
  call void @vpx_highbd_comp_avg_pred_c(i16* nonnull %8, i16* %11, i32 64, i32 32, i16* %14, i32 %3) #5
  %15 = ptrtoint i8* %0 to i64
  %16 = shl i64 %15, 1
  %17 = inttoptr i64 %16 to i16*
  %18 = sext i32 %1 to i64
  br label %19

19:                                               ; preds = %5, %57
  %20 = phi i16* [ %17, %5 ], [ %63, %57 ]
  %21 = phi i32 [ 0, %5 ], [ %62, %57 ]
  %22 = phi i32 [ 0, %5 ], [ %65, %57 ]
  %23 = phi i16* [ %8, %5 ], [ %64, %57 ]
  %24 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %21, i32 0
  br label %25

25:                                               ; preds = %25, %19
  %26 = phi i64 [ 0, %19 ], [ %55, %25 ]
  %27 = phi <4 x i32> [ %24, %19 ], [ %54, %25 ]
  %28 = getelementptr inbounds i16, i16* %20, i64 %26
  %29 = bitcast i16* %28 to <4 x i16>*
  %30 = load <4 x i16>, <4 x i16>* %29, align 2
  %31 = zext <4 x i16> %30 to <4 x i32>
  %32 = getelementptr inbounds i16, i16* %23, i64 %26
  %33 = bitcast i16* %32 to <4 x i16>*
  %34 = load <4 x i16>, <4 x i16>* %33, align 2
  %35 = zext <4 x i16> %34 to <4 x i32>
  %36 = sub nsw <4 x i32> %31, %35
  %37 = icmp slt <4 x i32> %36, zeroinitializer
  %38 = sub nsw <4 x i32> zeroinitializer, %36
  %39 = select <4 x i1> %37, <4 x i32> %38, <4 x i32> %36
  %40 = add <4 x i32> %39, %27
  %41 = or i64 %26, 4
  %42 = getelementptr inbounds i16, i16* %20, i64 %41
  %43 = bitcast i16* %42 to <4 x i16>*
  %44 = load <4 x i16>, <4 x i16>* %43, align 2
  %45 = zext <4 x i16> %44 to <4 x i32>
  %46 = getelementptr inbounds i16, i16* %23, i64 %41
  %47 = bitcast i16* %46 to <4 x i16>*
  %48 = load <4 x i16>, <4 x i16>* %47, align 2
  %49 = zext <4 x i16> %48 to <4 x i32>
  %50 = sub nsw <4 x i32> %45, %49
  %51 = icmp slt <4 x i32> %50, zeroinitializer
  %52 = sub nsw <4 x i32> zeroinitializer, %50
  %53 = select <4 x i1> %51, <4 x i32> %52, <4 x i32> %50
  %54 = add <4 x i32> %53, %40
  %55 = add nuw nsw i64 %26, 8
  %56 = icmp eq i64 %55, 64
  br i1 %56, label %57, label %25, !llvm.loop !22

57:                                               ; preds = %25
  %58 = shufflevector <4 x i32> %54, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %59 = add <4 x i32> %54, %58
  %60 = shufflevector <4 x i32> %59, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %61 = add <4 x i32> %59, %60
  %62 = extractelement <4 x i32> %61, i32 0
  %63 = getelementptr inbounds i16, i16* %20, i64 %18
  %64 = getelementptr inbounds i16, i16* %23, i64 64
  %65 = add nuw nsw i32 %22, 1
  %66 = icmp eq i32 %65, 32
  br i1 %66, label %67, label %19

67:                                               ; preds = %57
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %7) #5
  ret i32 %62
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_highbd_sad64x32x4d_c(i8*, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = ptrtoint i8* %0 to i64
  %7 = shl i64 %6, 1
  %8 = inttoptr i64 %7 to i16*
  %9 = sext i32 %1 to i64
  %10 = sext i32 %3 to i64
  %11 = bitcast i8** %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 1
  %14 = inttoptr i64 %13 to i16*
  br label %15

15:                                               ; preds = %5, %53
  %16 = phi i16* [ %14, %5 ], [ %60, %53 ]
  %17 = phi i16* [ %8, %5 ], [ %59, %53 ]
  %18 = phi i32 [ 0, %5 ], [ %58, %53 ]
  %19 = phi i32 [ 0, %5 ], [ %61, %53 ]
  %20 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %18, i32 0
  br label %21

21:                                               ; preds = %21, %15
  %22 = phi i64 [ 0, %15 ], [ %51, %21 ]
  %23 = phi <4 x i32> [ %20, %15 ], [ %50, %21 ]
  %24 = getelementptr inbounds i16, i16* %17, i64 %22
  %25 = bitcast i16* %24 to <4 x i16>*
  %26 = load <4 x i16>, <4 x i16>* %25, align 2
  %27 = zext <4 x i16> %26 to <4 x i32>
  %28 = getelementptr inbounds i16, i16* %16, i64 %22
  %29 = bitcast i16* %28 to <4 x i16>*
  %30 = load <4 x i16>, <4 x i16>* %29, align 2
  %31 = zext <4 x i16> %30 to <4 x i32>
  %32 = sub nsw <4 x i32> %27, %31
  %33 = icmp slt <4 x i32> %32, zeroinitializer
  %34 = sub nsw <4 x i32> zeroinitializer, %32
  %35 = select <4 x i1> %33, <4 x i32> %34, <4 x i32> %32
  %36 = add <4 x i32> %35, %23
  %37 = or i64 %22, 4
  %38 = getelementptr inbounds i16, i16* %17, i64 %37
  %39 = bitcast i16* %38 to <4 x i16>*
  %40 = load <4 x i16>, <4 x i16>* %39, align 2
  %41 = zext <4 x i16> %40 to <4 x i32>
  %42 = getelementptr inbounds i16, i16* %16, i64 %37
  %43 = bitcast i16* %42 to <4 x i16>*
  %44 = load <4 x i16>, <4 x i16>* %43, align 2
  %45 = zext <4 x i16> %44 to <4 x i32>
  %46 = sub nsw <4 x i32> %41, %45
  %47 = icmp slt <4 x i32> %46, zeroinitializer
  %48 = sub nsw <4 x i32> zeroinitializer, %46
  %49 = select <4 x i1> %47, <4 x i32> %48, <4 x i32> %46
  %50 = add <4 x i32> %49, %36
  %51 = add nuw nsw i64 %22, 8
  %52 = icmp eq i64 %51, 64
  br i1 %52, label %53, label %21, !llvm.loop !23

53:                                               ; preds = %21
  %54 = shufflevector <4 x i32> %50, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %55 = add <4 x i32> %50, %54
  %56 = shufflevector <4 x i32> %55, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %57 = add <4 x i32> %55, %56
  %58 = extractelement <4 x i32> %57, i32 0
  %59 = getelementptr inbounds i16, i16* %17, i64 %9
  %60 = getelementptr inbounds i16, i16* %16, i64 %10
  %61 = add nuw nsw i32 %19, 1
  %62 = icmp eq i32 %61, 32
  br i1 %62, label %63, label %15

63:                                               ; preds = %53
  store i32 %58, i32* %4, align 4
  %64 = getelementptr inbounds i8*, i8** %2, i64 1
  %65 = bitcast i8** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = shl i64 %66, 1
  %68 = inttoptr i64 %67 to i16*
  br label %69

69:                                               ; preds = %63, %107
  %70 = phi i16* [ %68, %63 ], [ %114, %107 ]
  %71 = phi i16* [ %8, %63 ], [ %113, %107 ]
  %72 = phi i32 [ 0, %63 ], [ %112, %107 ]
  %73 = phi i32 [ 0, %63 ], [ %115, %107 ]
  %74 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %72, i32 0
  br label %75

75:                                               ; preds = %75, %69
  %76 = phi i64 [ 0, %69 ], [ %105, %75 ]
  %77 = phi <4 x i32> [ %74, %69 ], [ %104, %75 ]
  %78 = getelementptr inbounds i16, i16* %71, i64 %76
  %79 = bitcast i16* %78 to <4 x i16>*
  %80 = load <4 x i16>, <4 x i16>* %79, align 2
  %81 = zext <4 x i16> %80 to <4 x i32>
  %82 = getelementptr inbounds i16, i16* %70, i64 %76
  %83 = bitcast i16* %82 to <4 x i16>*
  %84 = load <4 x i16>, <4 x i16>* %83, align 2
  %85 = zext <4 x i16> %84 to <4 x i32>
  %86 = sub nsw <4 x i32> %81, %85
  %87 = icmp slt <4 x i32> %86, zeroinitializer
  %88 = sub nsw <4 x i32> zeroinitializer, %86
  %89 = select <4 x i1> %87, <4 x i32> %88, <4 x i32> %86
  %90 = add <4 x i32> %89, %77
  %91 = or i64 %76, 4
  %92 = getelementptr inbounds i16, i16* %71, i64 %91
  %93 = bitcast i16* %92 to <4 x i16>*
  %94 = load <4 x i16>, <4 x i16>* %93, align 2
  %95 = zext <4 x i16> %94 to <4 x i32>
  %96 = getelementptr inbounds i16, i16* %70, i64 %91
  %97 = bitcast i16* %96 to <4 x i16>*
  %98 = load <4 x i16>, <4 x i16>* %97, align 2
  %99 = zext <4 x i16> %98 to <4 x i32>
  %100 = sub nsw <4 x i32> %95, %99
  %101 = icmp slt <4 x i32> %100, zeroinitializer
  %102 = sub nsw <4 x i32> zeroinitializer, %100
  %103 = select <4 x i1> %101, <4 x i32> %102, <4 x i32> %100
  %104 = add <4 x i32> %103, %90
  %105 = add nuw nsw i64 %76, 8
  %106 = icmp eq i64 %105, 64
  br i1 %106, label %107, label %75, !llvm.loop !24

107:                                              ; preds = %75
  %108 = shufflevector <4 x i32> %104, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %109 = add <4 x i32> %104, %108
  %110 = shufflevector <4 x i32> %109, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %111 = add <4 x i32> %109, %110
  %112 = extractelement <4 x i32> %111, i32 0
  %113 = getelementptr inbounds i16, i16* %71, i64 %9
  %114 = getelementptr inbounds i16, i16* %70, i64 %10
  %115 = add nuw nsw i32 %73, 1
  %116 = icmp eq i32 %115, 32
  br i1 %116, label %117, label %69

117:                                              ; preds = %107
  %118 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %112, i32* %118, align 4
  %119 = getelementptr inbounds i8*, i8** %2, i64 2
  %120 = bitcast i8** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = shl i64 %121, 1
  %123 = inttoptr i64 %122 to i16*
  br label %124

124:                                              ; preds = %117, %162
  %125 = phi i16* [ %123, %117 ], [ %169, %162 ]
  %126 = phi i16* [ %8, %117 ], [ %168, %162 ]
  %127 = phi i32 [ 0, %117 ], [ %167, %162 ]
  %128 = phi i32 [ 0, %117 ], [ %170, %162 ]
  %129 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %127, i32 0
  br label %130

130:                                              ; preds = %130, %124
  %131 = phi i64 [ 0, %124 ], [ %160, %130 ]
  %132 = phi <4 x i32> [ %129, %124 ], [ %159, %130 ]
  %133 = getelementptr inbounds i16, i16* %126, i64 %131
  %134 = bitcast i16* %133 to <4 x i16>*
  %135 = load <4 x i16>, <4 x i16>* %134, align 2
  %136 = zext <4 x i16> %135 to <4 x i32>
  %137 = getelementptr inbounds i16, i16* %125, i64 %131
  %138 = bitcast i16* %137 to <4 x i16>*
  %139 = load <4 x i16>, <4 x i16>* %138, align 2
  %140 = zext <4 x i16> %139 to <4 x i32>
  %141 = sub nsw <4 x i32> %136, %140
  %142 = icmp slt <4 x i32> %141, zeroinitializer
  %143 = sub nsw <4 x i32> zeroinitializer, %141
  %144 = select <4 x i1> %142, <4 x i32> %143, <4 x i32> %141
  %145 = add <4 x i32> %144, %132
  %146 = or i64 %131, 4
  %147 = getelementptr inbounds i16, i16* %126, i64 %146
  %148 = bitcast i16* %147 to <4 x i16>*
  %149 = load <4 x i16>, <4 x i16>* %148, align 2
  %150 = zext <4 x i16> %149 to <4 x i32>
  %151 = getelementptr inbounds i16, i16* %125, i64 %146
  %152 = bitcast i16* %151 to <4 x i16>*
  %153 = load <4 x i16>, <4 x i16>* %152, align 2
  %154 = zext <4 x i16> %153 to <4 x i32>
  %155 = sub nsw <4 x i32> %150, %154
  %156 = icmp slt <4 x i32> %155, zeroinitializer
  %157 = sub nsw <4 x i32> zeroinitializer, %155
  %158 = select <4 x i1> %156, <4 x i32> %157, <4 x i32> %155
  %159 = add <4 x i32> %158, %145
  %160 = add nuw nsw i64 %131, 8
  %161 = icmp eq i64 %160, 64
  br i1 %161, label %162, label %130, !llvm.loop !25

162:                                              ; preds = %130
  %163 = shufflevector <4 x i32> %159, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %164 = add <4 x i32> %159, %163
  %165 = shufflevector <4 x i32> %164, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %166 = add <4 x i32> %164, %165
  %167 = extractelement <4 x i32> %166, i32 0
  %168 = getelementptr inbounds i16, i16* %126, i64 %9
  %169 = getelementptr inbounds i16, i16* %125, i64 %10
  %170 = add nuw nsw i32 %128, 1
  %171 = icmp eq i32 %170, 32
  br i1 %171, label %172, label %124

172:                                              ; preds = %162
  %173 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %167, i32* %173, align 4
  %174 = getelementptr inbounds i8*, i8** %2, i64 3
  %175 = bitcast i8** %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = shl i64 %176, 1
  %178 = inttoptr i64 %177 to i16*
  br label %179

179:                                              ; preds = %172, %217
  %180 = phi i16* [ %178, %172 ], [ %224, %217 ]
  %181 = phi i16* [ %8, %172 ], [ %223, %217 ]
  %182 = phi i32 [ 0, %172 ], [ %222, %217 ]
  %183 = phi i32 [ 0, %172 ], [ %225, %217 ]
  %184 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %182, i32 0
  br label %185

185:                                              ; preds = %185, %179
  %186 = phi i64 [ 0, %179 ], [ %215, %185 ]
  %187 = phi <4 x i32> [ %184, %179 ], [ %214, %185 ]
  %188 = getelementptr inbounds i16, i16* %181, i64 %186
  %189 = bitcast i16* %188 to <4 x i16>*
  %190 = load <4 x i16>, <4 x i16>* %189, align 2
  %191 = zext <4 x i16> %190 to <4 x i32>
  %192 = getelementptr inbounds i16, i16* %180, i64 %186
  %193 = bitcast i16* %192 to <4 x i16>*
  %194 = load <4 x i16>, <4 x i16>* %193, align 2
  %195 = zext <4 x i16> %194 to <4 x i32>
  %196 = sub nsw <4 x i32> %191, %195
  %197 = icmp slt <4 x i32> %196, zeroinitializer
  %198 = sub nsw <4 x i32> zeroinitializer, %196
  %199 = select <4 x i1> %197, <4 x i32> %198, <4 x i32> %196
  %200 = add <4 x i32> %199, %187
  %201 = or i64 %186, 4
  %202 = getelementptr inbounds i16, i16* %181, i64 %201
  %203 = bitcast i16* %202 to <4 x i16>*
  %204 = load <4 x i16>, <4 x i16>* %203, align 2
  %205 = zext <4 x i16> %204 to <4 x i32>
  %206 = getelementptr inbounds i16, i16* %180, i64 %201
  %207 = bitcast i16* %206 to <4 x i16>*
  %208 = load <4 x i16>, <4 x i16>* %207, align 2
  %209 = zext <4 x i16> %208 to <4 x i32>
  %210 = sub nsw <4 x i32> %205, %209
  %211 = icmp slt <4 x i32> %210, zeroinitializer
  %212 = sub nsw <4 x i32> zeroinitializer, %210
  %213 = select <4 x i1> %211, <4 x i32> %212, <4 x i32> %210
  %214 = add <4 x i32> %213, %200
  %215 = add nuw nsw i64 %186, 8
  %216 = icmp eq i64 %215, 64
  br i1 %216, label %217, label %185, !llvm.loop !26

217:                                              ; preds = %185
  %218 = shufflevector <4 x i32> %214, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %219 = add <4 x i32> %214, %218
  %220 = shufflevector <4 x i32> %219, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %221 = add <4 x i32> %219, %220
  %222 = extractelement <4 x i32> %221, i32 0
  %223 = getelementptr inbounds i16, i16* %181, i64 %9
  %224 = getelementptr inbounds i16, i16* %180, i64 %10
  %225 = add nuw nsw i32 %183, 1
  %226 = icmp eq i32 %225, 32
  br i1 %226, label %227, label %179

227:                                              ; preds = %217
  %228 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %222, i32* %228, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_highbd_sad32x64_c(i8*, i32, i8*, i32) local_unnamed_addr #0 {
  %5 = ptrtoint i8* %2 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = ptrtoint i8* %0 to i64
  %9 = shl i64 %8, 1
  %10 = inttoptr i64 %9 to i16*
  %11 = sext i32 %1 to i64
  %12 = sext i32 %3 to i64
  br label %13

13:                                               ; preds = %4, %13
  %14 = phi i16* [ %7, %4 ], [ %127, %13 ]
  %15 = phi i16* [ %10, %4 ], [ %126, %13 ]
  %16 = phi i32 [ 0, %4 ], [ %125, %13 ]
  %17 = phi i32 [ 0, %4 ], [ %128, %13 ]
  %18 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %16, i32 0
  %19 = bitcast i16* %15 to <4 x i16>*
  %20 = load <4 x i16>, <4 x i16>* %19, align 2
  %21 = zext <4 x i16> %20 to <4 x i32>
  %22 = bitcast i16* %14 to <4 x i16>*
  %23 = load <4 x i16>, <4 x i16>* %22, align 2
  %24 = zext <4 x i16> %23 to <4 x i32>
  %25 = sub nsw <4 x i32> %21, %24
  %26 = icmp slt <4 x i32> %25, zeroinitializer
  %27 = sub nsw <4 x i32> zeroinitializer, %25
  %28 = select <4 x i1> %26, <4 x i32> %27, <4 x i32> %25
  %29 = add <4 x i32> %28, %18
  %30 = getelementptr inbounds i16, i16* %15, i64 4
  %31 = bitcast i16* %30 to <4 x i16>*
  %32 = load <4 x i16>, <4 x i16>* %31, align 2
  %33 = zext <4 x i16> %32 to <4 x i32>
  %34 = getelementptr inbounds i16, i16* %14, i64 4
  %35 = bitcast i16* %34 to <4 x i16>*
  %36 = load <4 x i16>, <4 x i16>* %35, align 2
  %37 = zext <4 x i16> %36 to <4 x i32>
  %38 = sub nsw <4 x i32> %33, %37
  %39 = icmp slt <4 x i32> %38, zeroinitializer
  %40 = sub nsw <4 x i32> zeroinitializer, %38
  %41 = select <4 x i1> %39, <4 x i32> %40, <4 x i32> %38
  %42 = add <4 x i32> %41, %29
  %43 = getelementptr inbounds i16, i16* %15, i64 8
  %44 = bitcast i16* %43 to <4 x i16>*
  %45 = load <4 x i16>, <4 x i16>* %44, align 2
  %46 = zext <4 x i16> %45 to <4 x i32>
  %47 = getelementptr inbounds i16, i16* %14, i64 8
  %48 = bitcast i16* %47 to <4 x i16>*
  %49 = load <4 x i16>, <4 x i16>* %48, align 2
  %50 = zext <4 x i16> %49 to <4 x i32>
  %51 = sub nsw <4 x i32> %46, %50
  %52 = icmp slt <4 x i32> %51, zeroinitializer
  %53 = sub nsw <4 x i32> zeroinitializer, %51
  %54 = select <4 x i1> %52, <4 x i32> %53, <4 x i32> %51
  %55 = add <4 x i32> %54, %42
  %56 = getelementptr inbounds i16, i16* %15, i64 12
  %57 = bitcast i16* %56 to <4 x i16>*
  %58 = load <4 x i16>, <4 x i16>* %57, align 2
  %59 = zext <4 x i16> %58 to <4 x i32>
  %60 = getelementptr inbounds i16, i16* %14, i64 12
  %61 = bitcast i16* %60 to <4 x i16>*
  %62 = load <4 x i16>, <4 x i16>* %61, align 2
  %63 = zext <4 x i16> %62 to <4 x i32>
  %64 = sub nsw <4 x i32> %59, %63
  %65 = icmp slt <4 x i32> %64, zeroinitializer
  %66 = sub nsw <4 x i32> zeroinitializer, %64
  %67 = select <4 x i1> %65, <4 x i32> %66, <4 x i32> %64
  %68 = add <4 x i32> %67, %55
  %69 = getelementptr inbounds i16, i16* %15, i64 16
  %70 = bitcast i16* %69 to <4 x i16>*
  %71 = load <4 x i16>, <4 x i16>* %70, align 2
  %72 = zext <4 x i16> %71 to <4 x i32>
  %73 = getelementptr inbounds i16, i16* %14, i64 16
  %74 = bitcast i16* %73 to <4 x i16>*
  %75 = load <4 x i16>, <4 x i16>* %74, align 2
  %76 = zext <4 x i16> %75 to <4 x i32>
  %77 = sub nsw <4 x i32> %72, %76
  %78 = icmp slt <4 x i32> %77, zeroinitializer
  %79 = sub nsw <4 x i32> zeroinitializer, %77
  %80 = select <4 x i1> %78, <4 x i32> %79, <4 x i32> %77
  %81 = add <4 x i32> %80, %68
  %82 = getelementptr inbounds i16, i16* %15, i64 20
  %83 = bitcast i16* %82 to <4 x i16>*
  %84 = load <4 x i16>, <4 x i16>* %83, align 2
  %85 = zext <4 x i16> %84 to <4 x i32>
  %86 = getelementptr inbounds i16, i16* %14, i64 20
  %87 = bitcast i16* %86 to <4 x i16>*
  %88 = load <4 x i16>, <4 x i16>* %87, align 2
  %89 = zext <4 x i16> %88 to <4 x i32>
  %90 = sub nsw <4 x i32> %85, %89
  %91 = icmp slt <4 x i32> %90, zeroinitializer
  %92 = sub nsw <4 x i32> zeroinitializer, %90
  %93 = select <4 x i1> %91, <4 x i32> %92, <4 x i32> %90
  %94 = add <4 x i32> %93, %81
  %95 = getelementptr inbounds i16, i16* %15, i64 24
  %96 = bitcast i16* %95 to <4 x i16>*
  %97 = load <4 x i16>, <4 x i16>* %96, align 2
  %98 = zext <4 x i16> %97 to <4 x i32>
  %99 = getelementptr inbounds i16, i16* %14, i64 24
  %100 = bitcast i16* %99 to <4 x i16>*
  %101 = load <4 x i16>, <4 x i16>* %100, align 2
  %102 = zext <4 x i16> %101 to <4 x i32>
  %103 = sub nsw <4 x i32> %98, %102
  %104 = icmp slt <4 x i32> %103, zeroinitializer
  %105 = sub nsw <4 x i32> zeroinitializer, %103
  %106 = select <4 x i1> %104, <4 x i32> %105, <4 x i32> %103
  %107 = add <4 x i32> %106, %94
  %108 = getelementptr inbounds i16, i16* %15, i64 28
  %109 = bitcast i16* %108 to <4 x i16>*
  %110 = load <4 x i16>, <4 x i16>* %109, align 2
  %111 = zext <4 x i16> %110 to <4 x i32>
  %112 = getelementptr inbounds i16, i16* %14, i64 28
  %113 = bitcast i16* %112 to <4 x i16>*
  %114 = load <4 x i16>, <4 x i16>* %113, align 2
  %115 = zext <4 x i16> %114 to <4 x i32>
  %116 = sub nsw <4 x i32> %111, %115
  %117 = icmp slt <4 x i32> %116, zeroinitializer
  %118 = sub nsw <4 x i32> zeroinitializer, %116
  %119 = select <4 x i1> %117, <4 x i32> %118, <4 x i32> %116
  %120 = add <4 x i32> %119, %107
  %121 = shufflevector <4 x i32> %120, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %122 = add <4 x i32> %120, %121
  %123 = shufflevector <4 x i32> %122, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %124 = add <4 x i32> %122, %123
  %125 = extractelement <4 x i32> %124, i32 0
  %126 = getelementptr inbounds i16, i16* %15, i64 %11
  %127 = getelementptr inbounds i16, i16* %14, i64 %12
  %128 = add nuw nsw i32 %17, 1
  %129 = icmp eq i32 %128, 64
  br i1 %129, label %130, label %13

130:                                              ; preds = %13
  ret i32 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_highbd_sad32x64_avg_c(i8*, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [2048 x i16], align 16
  %7 = bitcast [2048 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 4096, i1 false)
  %8 = getelementptr inbounds [2048 x i16], [2048 x i16]* %6, i64 0, i64 0
  %9 = ptrtoint i8* %4 to i64
  %10 = shl i64 %9, 1
  %11 = inttoptr i64 %10 to i16*
  %12 = ptrtoint i8* %2 to i64
  %13 = shl i64 %12, 1
  %14 = inttoptr i64 %13 to i16*
  call void @vpx_highbd_comp_avg_pred_c(i16* nonnull %8, i16* %11, i32 32, i32 64, i16* %14, i32 %3) #5
  %15 = ptrtoint i8* %0 to i64
  %16 = shl i64 %15, 1
  %17 = inttoptr i64 %16 to i16*
  %18 = sext i32 %1 to i64
  br label %19

19:                                               ; preds = %5, %19
  %20 = phi i16* [ %17, %5 ], [ %132, %19 ]
  %21 = phi i32 [ 0, %5 ], [ %131, %19 ]
  %22 = phi i32 [ 0, %5 ], [ %134, %19 ]
  %23 = phi i16* [ %8, %5 ], [ %133, %19 ]
  %24 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %21, i32 0
  %25 = bitcast i16* %20 to <4 x i16>*
  %26 = load <4 x i16>, <4 x i16>* %25, align 2
  %27 = zext <4 x i16> %26 to <4 x i32>
  %28 = bitcast i16* %23 to <4 x i16>*
  %29 = load <4 x i16>, <4 x i16>* %28, align 2
  %30 = zext <4 x i16> %29 to <4 x i32>
  %31 = sub nsw <4 x i32> %27, %30
  %32 = icmp slt <4 x i32> %31, zeroinitializer
  %33 = sub nsw <4 x i32> zeroinitializer, %31
  %34 = select <4 x i1> %32, <4 x i32> %33, <4 x i32> %31
  %35 = add <4 x i32> %34, %24
  %36 = getelementptr inbounds i16, i16* %20, i64 4
  %37 = bitcast i16* %36 to <4 x i16>*
  %38 = load <4 x i16>, <4 x i16>* %37, align 2
  %39 = zext <4 x i16> %38 to <4 x i32>
  %40 = getelementptr inbounds i16, i16* %23, i64 4
  %41 = bitcast i16* %40 to <4 x i16>*
  %42 = load <4 x i16>, <4 x i16>* %41, align 2
  %43 = zext <4 x i16> %42 to <4 x i32>
  %44 = sub nsw <4 x i32> %39, %43
  %45 = icmp slt <4 x i32> %44, zeroinitializer
  %46 = sub nsw <4 x i32> zeroinitializer, %44
  %47 = select <4 x i1> %45, <4 x i32> %46, <4 x i32> %44
  %48 = add <4 x i32> %47, %35
  %49 = getelementptr inbounds i16, i16* %20, i64 8
  %50 = bitcast i16* %49 to <4 x i16>*
  %51 = load <4 x i16>, <4 x i16>* %50, align 2
  %52 = zext <4 x i16> %51 to <4 x i32>
  %53 = getelementptr inbounds i16, i16* %23, i64 8
  %54 = bitcast i16* %53 to <4 x i16>*
  %55 = load <4 x i16>, <4 x i16>* %54, align 2
  %56 = zext <4 x i16> %55 to <4 x i32>
  %57 = sub nsw <4 x i32> %52, %56
  %58 = icmp slt <4 x i32> %57, zeroinitializer
  %59 = sub nsw <4 x i32> zeroinitializer, %57
  %60 = select <4 x i1> %58, <4 x i32> %59, <4 x i32> %57
  %61 = add <4 x i32> %60, %48
  %62 = getelementptr inbounds i16, i16* %20, i64 12
  %63 = bitcast i16* %62 to <4 x i16>*
  %64 = load <4 x i16>, <4 x i16>* %63, align 2
  %65 = zext <4 x i16> %64 to <4 x i32>
  %66 = getelementptr inbounds i16, i16* %23, i64 12
  %67 = bitcast i16* %66 to <4 x i16>*
  %68 = load <4 x i16>, <4 x i16>* %67, align 2
  %69 = zext <4 x i16> %68 to <4 x i32>
  %70 = sub nsw <4 x i32> %65, %69
  %71 = icmp slt <4 x i32> %70, zeroinitializer
  %72 = sub nsw <4 x i32> zeroinitializer, %70
  %73 = select <4 x i1> %71, <4 x i32> %72, <4 x i32> %70
  %74 = add <4 x i32> %73, %61
  %75 = getelementptr inbounds i16, i16* %20, i64 16
  %76 = bitcast i16* %75 to <4 x i16>*
  %77 = load <4 x i16>, <4 x i16>* %76, align 2
  %78 = zext <4 x i16> %77 to <4 x i32>
  %79 = getelementptr inbounds i16, i16* %23, i64 16
  %80 = bitcast i16* %79 to <4 x i16>*
  %81 = load <4 x i16>, <4 x i16>* %80, align 2
  %82 = zext <4 x i16> %81 to <4 x i32>
  %83 = sub nsw <4 x i32> %78, %82
  %84 = icmp slt <4 x i32> %83, zeroinitializer
  %85 = sub nsw <4 x i32> zeroinitializer, %83
  %86 = select <4 x i1> %84, <4 x i32> %85, <4 x i32> %83
  %87 = add <4 x i32> %86, %74
  %88 = getelementptr inbounds i16, i16* %20, i64 20
  %89 = bitcast i16* %88 to <4 x i16>*
  %90 = load <4 x i16>, <4 x i16>* %89, align 2
  %91 = zext <4 x i16> %90 to <4 x i32>
  %92 = getelementptr inbounds i16, i16* %23, i64 20
  %93 = bitcast i16* %92 to <4 x i16>*
  %94 = load <4 x i16>, <4 x i16>* %93, align 2
  %95 = zext <4 x i16> %94 to <4 x i32>
  %96 = sub nsw <4 x i32> %91, %95
  %97 = icmp slt <4 x i32> %96, zeroinitializer
  %98 = sub nsw <4 x i32> zeroinitializer, %96
  %99 = select <4 x i1> %97, <4 x i32> %98, <4 x i32> %96
  %100 = add <4 x i32> %99, %87
  %101 = getelementptr inbounds i16, i16* %20, i64 24
  %102 = bitcast i16* %101 to <4 x i16>*
  %103 = load <4 x i16>, <4 x i16>* %102, align 2
  %104 = zext <4 x i16> %103 to <4 x i32>
  %105 = getelementptr inbounds i16, i16* %23, i64 24
  %106 = bitcast i16* %105 to <4 x i16>*
  %107 = load <4 x i16>, <4 x i16>* %106, align 2
  %108 = zext <4 x i16> %107 to <4 x i32>
  %109 = sub nsw <4 x i32> %104, %108
  %110 = icmp slt <4 x i32> %109, zeroinitializer
  %111 = sub nsw <4 x i32> zeroinitializer, %109
  %112 = select <4 x i1> %110, <4 x i32> %111, <4 x i32> %109
  %113 = add <4 x i32> %112, %100
  %114 = getelementptr inbounds i16, i16* %20, i64 28
  %115 = bitcast i16* %114 to <4 x i16>*
  %116 = load <4 x i16>, <4 x i16>* %115, align 2
  %117 = zext <4 x i16> %116 to <4 x i32>
  %118 = getelementptr inbounds i16, i16* %23, i64 28
  %119 = bitcast i16* %118 to <4 x i16>*
  %120 = load <4 x i16>, <4 x i16>* %119, align 2
  %121 = zext <4 x i16> %120 to <4 x i32>
  %122 = sub nsw <4 x i32> %117, %121
  %123 = icmp slt <4 x i32> %122, zeroinitializer
  %124 = sub nsw <4 x i32> zeroinitializer, %122
  %125 = select <4 x i1> %123, <4 x i32> %124, <4 x i32> %122
  %126 = add <4 x i32> %125, %113
  %127 = shufflevector <4 x i32> %126, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %128 = add <4 x i32> %126, %127
  %129 = shufflevector <4 x i32> %128, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %130 = add <4 x i32> %128, %129
  %131 = extractelement <4 x i32> %130, i32 0
  %132 = getelementptr inbounds i16, i16* %20, i64 %18
  %133 = getelementptr inbounds i16, i16* %23, i64 32
  %134 = add nuw nsw i32 %22, 1
  %135 = icmp eq i32 %134, 64
  br i1 %135, label %136, label %19

136:                                              ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %7) #5
  ret i32 %131
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_highbd_sad32x64x4d_c(i8*, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = ptrtoint i8* %0 to i64
  %7 = shl i64 %6, 1
  %8 = inttoptr i64 %7 to i16*
  %9 = sext i32 %1 to i64
  %10 = sext i32 %3 to i64
  %11 = bitcast i8** %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 1
  %14 = inttoptr i64 %13 to i16*
  br label %15

15:                                               ; preds = %5, %15
  %16 = phi i16* [ %14, %5 ], [ %129, %15 ]
  %17 = phi i16* [ %8, %5 ], [ %128, %15 ]
  %18 = phi i32 [ 0, %5 ], [ %127, %15 ]
  %19 = phi i32 [ 0, %5 ], [ %130, %15 ]
  %20 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %18, i32 0
  %21 = bitcast i16* %17 to <4 x i16>*
  %22 = load <4 x i16>, <4 x i16>* %21, align 2
  %23 = zext <4 x i16> %22 to <4 x i32>
  %24 = bitcast i16* %16 to <4 x i16>*
  %25 = load <4 x i16>, <4 x i16>* %24, align 2
  %26 = zext <4 x i16> %25 to <4 x i32>
  %27 = sub nsw <4 x i32> %23, %26
  %28 = icmp slt <4 x i32> %27, zeroinitializer
  %29 = sub nsw <4 x i32> zeroinitializer, %27
  %30 = select <4 x i1> %28, <4 x i32> %29, <4 x i32> %27
  %31 = add <4 x i32> %30, %20
  %32 = getelementptr inbounds i16, i16* %17, i64 4
  %33 = bitcast i16* %32 to <4 x i16>*
  %34 = load <4 x i16>, <4 x i16>* %33, align 2
  %35 = zext <4 x i16> %34 to <4 x i32>
  %36 = getelementptr inbounds i16, i16* %16, i64 4
  %37 = bitcast i16* %36 to <4 x i16>*
  %38 = load <4 x i16>, <4 x i16>* %37, align 2
  %39 = zext <4 x i16> %38 to <4 x i32>
  %40 = sub nsw <4 x i32> %35, %39
  %41 = icmp slt <4 x i32> %40, zeroinitializer
  %42 = sub nsw <4 x i32> zeroinitializer, %40
  %43 = select <4 x i1> %41, <4 x i32> %42, <4 x i32> %40
  %44 = add <4 x i32> %43, %31
  %45 = getelementptr inbounds i16, i16* %17, i64 8
  %46 = bitcast i16* %45 to <4 x i16>*
  %47 = load <4 x i16>, <4 x i16>* %46, align 2
  %48 = zext <4 x i16> %47 to <4 x i32>
  %49 = getelementptr inbounds i16, i16* %16, i64 8
  %50 = bitcast i16* %49 to <4 x i16>*
  %51 = load <4 x i16>, <4 x i16>* %50, align 2
  %52 = zext <4 x i16> %51 to <4 x i32>
  %53 = sub nsw <4 x i32> %48, %52
  %54 = icmp slt <4 x i32> %53, zeroinitializer
  %55 = sub nsw <4 x i32> zeroinitializer, %53
  %56 = select <4 x i1> %54, <4 x i32> %55, <4 x i32> %53
  %57 = add <4 x i32> %56, %44
  %58 = getelementptr inbounds i16, i16* %17, i64 12
  %59 = bitcast i16* %58 to <4 x i16>*
  %60 = load <4 x i16>, <4 x i16>* %59, align 2
  %61 = zext <4 x i16> %60 to <4 x i32>
  %62 = getelementptr inbounds i16, i16* %16, i64 12
  %63 = bitcast i16* %62 to <4 x i16>*
  %64 = load <4 x i16>, <4 x i16>* %63, align 2
  %65 = zext <4 x i16> %64 to <4 x i32>
  %66 = sub nsw <4 x i32> %61, %65
  %67 = icmp slt <4 x i32> %66, zeroinitializer
  %68 = sub nsw <4 x i32> zeroinitializer, %66
  %69 = select <4 x i1> %67, <4 x i32> %68, <4 x i32> %66
  %70 = add <4 x i32> %69, %57
  %71 = getelementptr inbounds i16, i16* %17, i64 16
  %72 = bitcast i16* %71 to <4 x i16>*
  %73 = load <4 x i16>, <4 x i16>* %72, align 2
  %74 = zext <4 x i16> %73 to <4 x i32>
  %75 = getelementptr inbounds i16, i16* %16, i64 16
  %76 = bitcast i16* %75 to <4 x i16>*
  %77 = load <4 x i16>, <4 x i16>* %76, align 2
  %78 = zext <4 x i16> %77 to <4 x i32>
  %79 = sub nsw <4 x i32> %74, %78
  %80 = icmp slt <4 x i32> %79, zeroinitializer
  %81 = sub nsw <4 x i32> zeroinitializer, %79
  %82 = select <4 x i1> %80, <4 x i32> %81, <4 x i32> %79
  %83 = add <4 x i32> %82, %70
  %84 = getelementptr inbounds i16, i16* %17, i64 20
  %85 = bitcast i16* %84 to <4 x i16>*
  %86 = load <4 x i16>, <4 x i16>* %85, align 2
  %87 = zext <4 x i16> %86 to <4 x i32>
  %88 = getelementptr inbounds i16, i16* %16, i64 20
  %89 = bitcast i16* %88 to <4 x i16>*
  %90 = load <4 x i16>, <4 x i16>* %89, align 2
  %91 = zext <4 x i16> %90 to <4 x i32>
  %92 = sub nsw <4 x i32> %87, %91
  %93 = icmp slt <4 x i32> %92, zeroinitializer
  %94 = sub nsw <4 x i32> zeroinitializer, %92
  %95 = select <4 x i1> %93, <4 x i32> %94, <4 x i32> %92
  %96 = add <4 x i32> %95, %83
  %97 = getelementptr inbounds i16, i16* %17, i64 24
  %98 = bitcast i16* %97 to <4 x i16>*
  %99 = load <4 x i16>, <4 x i16>* %98, align 2
  %100 = zext <4 x i16> %99 to <4 x i32>
  %101 = getelementptr inbounds i16, i16* %16, i64 24
  %102 = bitcast i16* %101 to <4 x i16>*
  %103 = load <4 x i16>, <4 x i16>* %102, align 2
  %104 = zext <4 x i16> %103 to <4 x i32>
  %105 = sub nsw <4 x i32> %100, %104
  %106 = icmp slt <4 x i32> %105, zeroinitializer
  %107 = sub nsw <4 x i32> zeroinitializer, %105
  %108 = select <4 x i1> %106, <4 x i32> %107, <4 x i32> %105
  %109 = add <4 x i32> %108, %96
  %110 = getelementptr inbounds i16, i16* %17, i64 28
  %111 = bitcast i16* %110 to <4 x i16>*
  %112 = load <4 x i16>, <4 x i16>* %111, align 2
  %113 = zext <4 x i16> %112 to <4 x i32>
  %114 = getelementptr inbounds i16, i16* %16, i64 28
  %115 = bitcast i16* %114 to <4 x i16>*
  %116 = load <4 x i16>, <4 x i16>* %115, align 2
  %117 = zext <4 x i16> %116 to <4 x i32>
  %118 = sub nsw <4 x i32> %113, %117
  %119 = icmp slt <4 x i32> %118, zeroinitializer
  %120 = sub nsw <4 x i32> zeroinitializer, %118
  %121 = select <4 x i1> %119, <4 x i32> %120, <4 x i32> %118
  %122 = add <4 x i32> %121, %109
  %123 = shufflevector <4 x i32> %122, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %124 = add <4 x i32> %122, %123
  %125 = shufflevector <4 x i32> %124, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %126 = add <4 x i32> %124, %125
  %127 = extractelement <4 x i32> %126, i32 0
  %128 = getelementptr inbounds i16, i16* %17, i64 %9
  %129 = getelementptr inbounds i16, i16* %16, i64 %10
  %130 = add nuw nsw i32 %19, 1
  %131 = icmp eq i32 %130, 64
  br i1 %131, label %132, label %15

132:                                              ; preds = %15
  store i32 %127, i32* %4, align 4
  %133 = getelementptr inbounds i8*, i8** %2, i64 1
  %134 = bitcast i8** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = shl i64 %135, 1
  %137 = inttoptr i64 %136 to i16*
  br label %138

138:                                              ; preds = %132, %138
  %139 = phi i16* [ %137, %132 ], [ %252, %138 ]
  %140 = phi i16* [ %8, %132 ], [ %251, %138 ]
  %141 = phi i32 [ 0, %132 ], [ %250, %138 ]
  %142 = phi i32 [ 0, %132 ], [ %253, %138 ]
  %143 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %141, i32 0
  %144 = bitcast i16* %140 to <4 x i16>*
  %145 = load <4 x i16>, <4 x i16>* %144, align 2
  %146 = zext <4 x i16> %145 to <4 x i32>
  %147 = bitcast i16* %139 to <4 x i16>*
  %148 = load <4 x i16>, <4 x i16>* %147, align 2
  %149 = zext <4 x i16> %148 to <4 x i32>
  %150 = sub nsw <4 x i32> %146, %149
  %151 = icmp slt <4 x i32> %150, zeroinitializer
  %152 = sub nsw <4 x i32> zeroinitializer, %150
  %153 = select <4 x i1> %151, <4 x i32> %152, <4 x i32> %150
  %154 = add <4 x i32> %153, %143
  %155 = getelementptr inbounds i16, i16* %140, i64 4
  %156 = bitcast i16* %155 to <4 x i16>*
  %157 = load <4 x i16>, <4 x i16>* %156, align 2
  %158 = zext <4 x i16> %157 to <4 x i32>
  %159 = getelementptr inbounds i16, i16* %139, i64 4
  %160 = bitcast i16* %159 to <4 x i16>*
  %161 = load <4 x i16>, <4 x i16>* %160, align 2
  %162 = zext <4 x i16> %161 to <4 x i32>
  %163 = sub nsw <4 x i32> %158, %162
  %164 = icmp slt <4 x i32> %163, zeroinitializer
  %165 = sub nsw <4 x i32> zeroinitializer, %163
  %166 = select <4 x i1> %164, <4 x i32> %165, <4 x i32> %163
  %167 = add <4 x i32> %166, %154
  %168 = getelementptr inbounds i16, i16* %140, i64 8
  %169 = bitcast i16* %168 to <4 x i16>*
  %170 = load <4 x i16>, <4 x i16>* %169, align 2
  %171 = zext <4 x i16> %170 to <4 x i32>
  %172 = getelementptr inbounds i16, i16* %139, i64 8
  %173 = bitcast i16* %172 to <4 x i16>*
  %174 = load <4 x i16>, <4 x i16>* %173, align 2
  %175 = zext <4 x i16> %174 to <4 x i32>
  %176 = sub nsw <4 x i32> %171, %175
  %177 = icmp slt <4 x i32> %176, zeroinitializer
  %178 = sub nsw <4 x i32> zeroinitializer, %176
  %179 = select <4 x i1> %177, <4 x i32> %178, <4 x i32> %176
  %180 = add <4 x i32> %179, %167
  %181 = getelementptr inbounds i16, i16* %140, i64 12
  %182 = bitcast i16* %181 to <4 x i16>*
  %183 = load <4 x i16>, <4 x i16>* %182, align 2
  %184 = zext <4 x i16> %183 to <4 x i32>
  %185 = getelementptr inbounds i16, i16* %139, i64 12
  %186 = bitcast i16* %185 to <4 x i16>*
  %187 = load <4 x i16>, <4 x i16>* %186, align 2
  %188 = zext <4 x i16> %187 to <4 x i32>
  %189 = sub nsw <4 x i32> %184, %188
  %190 = icmp slt <4 x i32> %189, zeroinitializer
  %191 = sub nsw <4 x i32> zeroinitializer, %189
  %192 = select <4 x i1> %190, <4 x i32> %191, <4 x i32> %189
  %193 = add <4 x i32> %192, %180
  %194 = getelementptr inbounds i16, i16* %140, i64 16
  %195 = bitcast i16* %194 to <4 x i16>*
  %196 = load <4 x i16>, <4 x i16>* %195, align 2
  %197 = zext <4 x i16> %196 to <4 x i32>
  %198 = getelementptr inbounds i16, i16* %139, i64 16
  %199 = bitcast i16* %198 to <4 x i16>*
  %200 = load <4 x i16>, <4 x i16>* %199, align 2
  %201 = zext <4 x i16> %200 to <4 x i32>
  %202 = sub nsw <4 x i32> %197, %201
  %203 = icmp slt <4 x i32> %202, zeroinitializer
  %204 = sub nsw <4 x i32> zeroinitializer, %202
  %205 = select <4 x i1> %203, <4 x i32> %204, <4 x i32> %202
  %206 = add <4 x i32> %205, %193
  %207 = getelementptr inbounds i16, i16* %140, i64 20
  %208 = bitcast i16* %207 to <4 x i16>*
  %209 = load <4 x i16>, <4 x i16>* %208, align 2
  %210 = zext <4 x i16> %209 to <4 x i32>
  %211 = getelementptr inbounds i16, i16* %139, i64 20
  %212 = bitcast i16* %211 to <4 x i16>*
  %213 = load <4 x i16>, <4 x i16>* %212, align 2
  %214 = zext <4 x i16> %213 to <4 x i32>
  %215 = sub nsw <4 x i32> %210, %214
  %216 = icmp slt <4 x i32> %215, zeroinitializer
  %217 = sub nsw <4 x i32> zeroinitializer, %215
  %218 = select <4 x i1> %216, <4 x i32> %217, <4 x i32> %215
  %219 = add <4 x i32> %218, %206
  %220 = getelementptr inbounds i16, i16* %140, i64 24
  %221 = bitcast i16* %220 to <4 x i16>*
  %222 = load <4 x i16>, <4 x i16>* %221, align 2
  %223 = zext <4 x i16> %222 to <4 x i32>
  %224 = getelementptr inbounds i16, i16* %139, i64 24
  %225 = bitcast i16* %224 to <4 x i16>*
  %226 = load <4 x i16>, <4 x i16>* %225, align 2
  %227 = zext <4 x i16> %226 to <4 x i32>
  %228 = sub nsw <4 x i32> %223, %227
  %229 = icmp slt <4 x i32> %228, zeroinitializer
  %230 = sub nsw <4 x i32> zeroinitializer, %228
  %231 = select <4 x i1> %229, <4 x i32> %230, <4 x i32> %228
  %232 = add <4 x i32> %231, %219
  %233 = getelementptr inbounds i16, i16* %140, i64 28
  %234 = bitcast i16* %233 to <4 x i16>*
  %235 = load <4 x i16>, <4 x i16>* %234, align 2
  %236 = zext <4 x i16> %235 to <4 x i32>
  %237 = getelementptr inbounds i16, i16* %139, i64 28
  %238 = bitcast i16* %237 to <4 x i16>*
  %239 = load <4 x i16>, <4 x i16>* %238, align 2
  %240 = zext <4 x i16> %239 to <4 x i32>
  %241 = sub nsw <4 x i32> %236, %240
  %242 = icmp slt <4 x i32> %241, zeroinitializer
  %243 = sub nsw <4 x i32> zeroinitializer, %241
  %244 = select <4 x i1> %242, <4 x i32> %243, <4 x i32> %241
  %245 = add <4 x i32> %244, %232
  %246 = shufflevector <4 x i32> %245, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %247 = add <4 x i32> %245, %246
  %248 = shufflevector <4 x i32> %247, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %249 = add <4 x i32> %247, %248
  %250 = extractelement <4 x i32> %249, i32 0
  %251 = getelementptr inbounds i16, i16* %140, i64 %9
  %252 = getelementptr inbounds i16, i16* %139, i64 %10
  %253 = add nuw nsw i32 %142, 1
  %254 = icmp eq i32 %253, 64
  br i1 %254, label %255, label %138

255:                                              ; preds = %138
  %256 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %250, i32* %256, align 4
  %257 = getelementptr inbounds i8*, i8** %2, i64 2
  %258 = bitcast i8** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = shl i64 %259, 1
  %261 = inttoptr i64 %260 to i16*
  br label %262

262:                                              ; preds = %255, %262
  %263 = phi i16* [ %261, %255 ], [ %376, %262 ]
  %264 = phi i16* [ %8, %255 ], [ %375, %262 ]
  %265 = phi i32 [ 0, %255 ], [ %374, %262 ]
  %266 = phi i32 [ 0, %255 ], [ %377, %262 ]
  %267 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %265, i32 0
  %268 = bitcast i16* %264 to <4 x i16>*
  %269 = load <4 x i16>, <4 x i16>* %268, align 2
  %270 = zext <4 x i16> %269 to <4 x i32>
  %271 = bitcast i16* %263 to <4 x i16>*
  %272 = load <4 x i16>, <4 x i16>* %271, align 2
  %273 = zext <4 x i16> %272 to <4 x i32>
  %274 = sub nsw <4 x i32> %270, %273
  %275 = icmp slt <4 x i32> %274, zeroinitializer
  %276 = sub nsw <4 x i32> zeroinitializer, %274
  %277 = select <4 x i1> %275, <4 x i32> %276, <4 x i32> %274
  %278 = add <4 x i32> %277, %267
  %279 = getelementptr inbounds i16, i16* %264, i64 4
  %280 = bitcast i16* %279 to <4 x i16>*
  %281 = load <4 x i16>, <4 x i16>* %280, align 2
  %282 = zext <4 x i16> %281 to <4 x i32>
  %283 = getelementptr inbounds i16, i16* %263, i64 4
  %284 = bitcast i16* %283 to <4 x i16>*
  %285 = load <4 x i16>, <4 x i16>* %284, align 2
  %286 = zext <4 x i16> %285 to <4 x i32>
  %287 = sub nsw <4 x i32> %282, %286
  %288 = icmp slt <4 x i32> %287, zeroinitializer
  %289 = sub nsw <4 x i32> zeroinitializer, %287
  %290 = select <4 x i1> %288, <4 x i32> %289, <4 x i32> %287
  %291 = add <4 x i32> %290, %278
  %292 = getelementptr inbounds i16, i16* %264, i64 8
  %293 = bitcast i16* %292 to <4 x i16>*
  %294 = load <4 x i16>, <4 x i16>* %293, align 2
  %295 = zext <4 x i16> %294 to <4 x i32>
  %296 = getelementptr inbounds i16, i16* %263, i64 8
  %297 = bitcast i16* %296 to <4 x i16>*
  %298 = load <4 x i16>, <4 x i16>* %297, align 2
  %299 = zext <4 x i16> %298 to <4 x i32>
  %300 = sub nsw <4 x i32> %295, %299
  %301 = icmp slt <4 x i32> %300, zeroinitializer
  %302 = sub nsw <4 x i32> zeroinitializer, %300
  %303 = select <4 x i1> %301, <4 x i32> %302, <4 x i32> %300
  %304 = add <4 x i32> %303, %291
  %305 = getelementptr inbounds i16, i16* %264, i64 12
  %306 = bitcast i16* %305 to <4 x i16>*
  %307 = load <4 x i16>, <4 x i16>* %306, align 2
  %308 = zext <4 x i16> %307 to <4 x i32>
  %309 = getelementptr inbounds i16, i16* %263, i64 12
  %310 = bitcast i16* %309 to <4 x i16>*
  %311 = load <4 x i16>, <4 x i16>* %310, align 2
  %312 = zext <4 x i16> %311 to <4 x i32>
  %313 = sub nsw <4 x i32> %308, %312
  %314 = icmp slt <4 x i32> %313, zeroinitializer
  %315 = sub nsw <4 x i32> zeroinitializer, %313
  %316 = select <4 x i1> %314, <4 x i32> %315, <4 x i32> %313
  %317 = add <4 x i32> %316, %304
  %318 = getelementptr inbounds i16, i16* %264, i64 16
  %319 = bitcast i16* %318 to <4 x i16>*
  %320 = load <4 x i16>, <4 x i16>* %319, align 2
  %321 = zext <4 x i16> %320 to <4 x i32>
  %322 = getelementptr inbounds i16, i16* %263, i64 16
  %323 = bitcast i16* %322 to <4 x i16>*
  %324 = load <4 x i16>, <4 x i16>* %323, align 2
  %325 = zext <4 x i16> %324 to <4 x i32>
  %326 = sub nsw <4 x i32> %321, %325
  %327 = icmp slt <4 x i32> %326, zeroinitializer
  %328 = sub nsw <4 x i32> zeroinitializer, %326
  %329 = select <4 x i1> %327, <4 x i32> %328, <4 x i32> %326
  %330 = add <4 x i32> %329, %317
  %331 = getelementptr inbounds i16, i16* %264, i64 20
  %332 = bitcast i16* %331 to <4 x i16>*
  %333 = load <4 x i16>, <4 x i16>* %332, align 2
  %334 = zext <4 x i16> %333 to <4 x i32>
  %335 = getelementptr inbounds i16, i16* %263, i64 20
  %336 = bitcast i16* %335 to <4 x i16>*
  %337 = load <4 x i16>, <4 x i16>* %336, align 2
  %338 = zext <4 x i16> %337 to <4 x i32>
  %339 = sub nsw <4 x i32> %334, %338
  %340 = icmp slt <4 x i32> %339, zeroinitializer
  %341 = sub nsw <4 x i32> zeroinitializer, %339
  %342 = select <4 x i1> %340, <4 x i32> %341, <4 x i32> %339
  %343 = add <4 x i32> %342, %330
  %344 = getelementptr inbounds i16, i16* %264, i64 24
  %345 = bitcast i16* %344 to <4 x i16>*
  %346 = load <4 x i16>, <4 x i16>* %345, align 2
  %347 = zext <4 x i16> %346 to <4 x i32>
  %348 = getelementptr inbounds i16, i16* %263, i64 24
  %349 = bitcast i16* %348 to <4 x i16>*
  %350 = load <4 x i16>, <4 x i16>* %349, align 2
  %351 = zext <4 x i16> %350 to <4 x i32>
  %352 = sub nsw <4 x i32> %347, %351
  %353 = icmp slt <4 x i32> %352, zeroinitializer
  %354 = sub nsw <4 x i32> zeroinitializer, %352
  %355 = select <4 x i1> %353, <4 x i32> %354, <4 x i32> %352
  %356 = add <4 x i32> %355, %343
  %357 = getelementptr inbounds i16, i16* %264, i64 28
  %358 = bitcast i16* %357 to <4 x i16>*
  %359 = load <4 x i16>, <4 x i16>* %358, align 2
  %360 = zext <4 x i16> %359 to <4 x i32>
  %361 = getelementptr inbounds i16, i16* %263, i64 28
  %362 = bitcast i16* %361 to <4 x i16>*
  %363 = load <4 x i16>, <4 x i16>* %362, align 2
  %364 = zext <4 x i16> %363 to <4 x i32>
  %365 = sub nsw <4 x i32> %360, %364
  %366 = icmp slt <4 x i32> %365, zeroinitializer
  %367 = sub nsw <4 x i32> zeroinitializer, %365
  %368 = select <4 x i1> %366, <4 x i32> %367, <4 x i32> %365
  %369 = add <4 x i32> %368, %356
  %370 = shufflevector <4 x i32> %369, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %371 = add <4 x i32> %369, %370
  %372 = shufflevector <4 x i32> %371, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %373 = add <4 x i32> %371, %372
  %374 = extractelement <4 x i32> %373, i32 0
  %375 = getelementptr inbounds i16, i16* %264, i64 %9
  %376 = getelementptr inbounds i16, i16* %263, i64 %10
  %377 = add nuw nsw i32 %266, 1
  %378 = icmp eq i32 %377, 64
  br i1 %378, label %379, label %262

379:                                              ; preds = %262
  %380 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %374, i32* %380, align 4
  %381 = getelementptr inbounds i8*, i8** %2, i64 3
  %382 = bitcast i8** %381 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = shl i64 %383, 1
  %385 = inttoptr i64 %384 to i16*
  br label %386

386:                                              ; preds = %379, %386
  %387 = phi i16* [ %385, %379 ], [ %500, %386 ]
  %388 = phi i16* [ %8, %379 ], [ %499, %386 ]
  %389 = phi i32 [ 0, %379 ], [ %498, %386 ]
  %390 = phi i32 [ 0, %379 ], [ %501, %386 ]
  %391 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %389, i32 0
  %392 = bitcast i16* %388 to <4 x i16>*
  %393 = load <4 x i16>, <4 x i16>* %392, align 2
  %394 = zext <4 x i16> %393 to <4 x i32>
  %395 = bitcast i16* %387 to <4 x i16>*
  %396 = load <4 x i16>, <4 x i16>* %395, align 2
  %397 = zext <4 x i16> %396 to <4 x i32>
  %398 = sub nsw <4 x i32> %394, %397
  %399 = icmp slt <4 x i32> %398, zeroinitializer
  %400 = sub nsw <4 x i32> zeroinitializer, %398
  %401 = select <4 x i1> %399, <4 x i32> %400, <4 x i32> %398
  %402 = add <4 x i32> %401, %391
  %403 = getelementptr inbounds i16, i16* %388, i64 4
  %404 = bitcast i16* %403 to <4 x i16>*
  %405 = load <4 x i16>, <4 x i16>* %404, align 2
  %406 = zext <4 x i16> %405 to <4 x i32>
  %407 = getelementptr inbounds i16, i16* %387, i64 4
  %408 = bitcast i16* %407 to <4 x i16>*
  %409 = load <4 x i16>, <4 x i16>* %408, align 2
  %410 = zext <4 x i16> %409 to <4 x i32>
  %411 = sub nsw <4 x i32> %406, %410
  %412 = icmp slt <4 x i32> %411, zeroinitializer
  %413 = sub nsw <4 x i32> zeroinitializer, %411
  %414 = select <4 x i1> %412, <4 x i32> %413, <4 x i32> %411
  %415 = add <4 x i32> %414, %402
  %416 = getelementptr inbounds i16, i16* %388, i64 8
  %417 = bitcast i16* %416 to <4 x i16>*
  %418 = load <4 x i16>, <4 x i16>* %417, align 2
  %419 = zext <4 x i16> %418 to <4 x i32>
  %420 = getelementptr inbounds i16, i16* %387, i64 8
  %421 = bitcast i16* %420 to <4 x i16>*
  %422 = load <4 x i16>, <4 x i16>* %421, align 2
  %423 = zext <4 x i16> %422 to <4 x i32>
  %424 = sub nsw <4 x i32> %419, %423
  %425 = icmp slt <4 x i32> %424, zeroinitializer
  %426 = sub nsw <4 x i32> zeroinitializer, %424
  %427 = select <4 x i1> %425, <4 x i32> %426, <4 x i32> %424
  %428 = add <4 x i32> %427, %415
  %429 = getelementptr inbounds i16, i16* %388, i64 12
  %430 = bitcast i16* %429 to <4 x i16>*
  %431 = load <4 x i16>, <4 x i16>* %430, align 2
  %432 = zext <4 x i16> %431 to <4 x i32>
  %433 = getelementptr inbounds i16, i16* %387, i64 12
  %434 = bitcast i16* %433 to <4 x i16>*
  %435 = load <4 x i16>, <4 x i16>* %434, align 2
  %436 = zext <4 x i16> %435 to <4 x i32>
  %437 = sub nsw <4 x i32> %432, %436
  %438 = icmp slt <4 x i32> %437, zeroinitializer
  %439 = sub nsw <4 x i32> zeroinitializer, %437
  %440 = select <4 x i1> %438, <4 x i32> %439, <4 x i32> %437
  %441 = add <4 x i32> %440, %428
  %442 = getelementptr inbounds i16, i16* %388, i64 16
  %443 = bitcast i16* %442 to <4 x i16>*
  %444 = load <4 x i16>, <4 x i16>* %443, align 2
  %445 = zext <4 x i16> %444 to <4 x i32>
  %446 = getelementptr inbounds i16, i16* %387, i64 16
  %447 = bitcast i16* %446 to <4 x i16>*
  %448 = load <4 x i16>, <4 x i16>* %447, align 2
  %449 = zext <4 x i16> %448 to <4 x i32>
  %450 = sub nsw <4 x i32> %445, %449
  %451 = icmp slt <4 x i32> %450, zeroinitializer
  %452 = sub nsw <4 x i32> zeroinitializer, %450
  %453 = select <4 x i1> %451, <4 x i32> %452, <4 x i32> %450
  %454 = add <4 x i32> %453, %441
  %455 = getelementptr inbounds i16, i16* %388, i64 20
  %456 = bitcast i16* %455 to <4 x i16>*
  %457 = load <4 x i16>, <4 x i16>* %456, align 2
  %458 = zext <4 x i16> %457 to <4 x i32>
  %459 = getelementptr inbounds i16, i16* %387, i64 20
  %460 = bitcast i16* %459 to <4 x i16>*
  %461 = load <4 x i16>, <4 x i16>* %460, align 2
  %462 = zext <4 x i16> %461 to <4 x i32>
  %463 = sub nsw <4 x i32> %458, %462
  %464 = icmp slt <4 x i32> %463, zeroinitializer
  %465 = sub nsw <4 x i32> zeroinitializer, %463
  %466 = select <4 x i1> %464, <4 x i32> %465, <4 x i32> %463
  %467 = add <4 x i32> %466, %454
  %468 = getelementptr inbounds i16, i16* %388, i64 24
  %469 = bitcast i16* %468 to <4 x i16>*
  %470 = load <4 x i16>, <4 x i16>* %469, align 2
  %471 = zext <4 x i16> %470 to <4 x i32>
  %472 = getelementptr inbounds i16, i16* %387, i64 24
  %473 = bitcast i16* %472 to <4 x i16>*
  %474 = load <4 x i16>, <4 x i16>* %473, align 2
  %475 = zext <4 x i16> %474 to <4 x i32>
  %476 = sub nsw <4 x i32> %471, %475
  %477 = icmp slt <4 x i32> %476, zeroinitializer
  %478 = sub nsw <4 x i32> zeroinitializer, %476
  %479 = select <4 x i1> %477, <4 x i32> %478, <4 x i32> %476
  %480 = add <4 x i32> %479, %467
  %481 = getelementptr inbounds i16, i16* %388, i64 28
  %482 = bitcast i16* %481 to <4 x i16>*
  %483 = load <4 x i16>, <4 x i16>* %482, align 2
  %484 = zext <4 x i16> %483 to <4 x i32>
  %485 = getelementptr inbounds i16, i16* %387, i64 28
  %486 = bitcast i16* %485 to <4 x i16>*
  %487 = load <4 x i16>, <4 x i16>* %486, align 2
  %488 = zext <4 x i16> %487 to <4 x i32>
  %489 = sub nsw <4 x i32> %484, %488
  %490 = icmp slt <4 x i32> %489, zeroinitializer
  %491 = sub nsw <4 x i32> zeroinitializer, %489
  %492 = select <4 x i1> %490, <4 x i32> %491, <4 x i32> %489
  %493 = add <4 x i32> %492, %480
  %494 = shufflevector <4 x i32> %493, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %495 = add <4 x i32> %493, %494
  %496 = shufflevector <4 x i32> %495, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %497 = add <4 x i32> %495, %496
  %498 = extractelement <4 x i32> %497, i32 0
  %499 = getelementptr inbounds i16, i16* %388, i64 %9
  %500 = getelementptr inbounds i16, i16* %387, i64 %10
  %501 = add nuw nsw i32 %390, 1
  %502 = icmp eq i32 %501, 64
  br i1 %502, label %503, label %386

503:                                              ; preds = %386
  %504 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %498, i32* %504, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_highbd_sad32x32_c(i8*, i32, i8*, i32) local_unnamed_addr #0 {
  %5 = ptrtoint i8* %2 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = ptrtoint i8* %0 to i64
  %9 = shl i64 %8, 1
  %10 = inttoptr i64 %9 to i16*
  %11 = sext i32 %1 to i64
  %12 = sext i32 %3 to i64
  br label %13

13:                                               ; preds = %4, %13
  %14 = phi i16* [ %7, %4 ], [ %127, %13 ]
  %15 = phi i16* [ %10, %4 ], [ %126, %13 ]
  %16 = phi i32 [ 0, %4 ], [ %125, %13 ]
  %17 = phi i32 [ 0, %4 ], [ %128, %13 ]
  %18 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %16, i32 0
  %19 = bitcast i16* %15 to <4 x i16>*
  %20 = load <4 x i16>, <4 x i16>* %19, align 2
  %21 = zext <4 x i16> %20 to <4 x i32>
  %22 = bitcast i16* %14 to <4 x i16>*
  %23 = load <4 x i16>, <4 x i16>* %22, align 2
  %24 = zext <4 x i16> %23 to <4 x i32>
  %25 = sub nsw <4 x i32> %21, %24
  %26 = icmp slt <4 x i32> %25, zeroinitializer
  %27 = sub nsw <4 x i32> zeroinitializer, %25
  %28 = select <4 x i1> %26, <4 x i32> %27, <4 x i32> %25
  %29 = add <4 x i32> %28, %18
  %30 = getelementptr inbounds i16, i16* %15, i64 4
  %31 = bitcast i16* %30 to <4 x i16>*
  %32 = load <4 x i16>, <4 x i16>* %31, align 2
  %33 = zext <4 x i16> %32 to <4 x i32>
  %34 = getelementptr inbounds i16, i16* %14, i64 4
  %35 = bitcast i16* %34 to <4 x i16>*
  %36 = load <4 x i16>, <4 x i16>* %35, align 2
  %37 = zext <4 x i16> %36 to <4 x i32>
  %38 = sub nsw <4 x i32> %33, %37
  %39 = icmp slt <4 x i32> %38, zeroinitializer
  %40 = sub nsw <4 x i32> zeroinitializer, %38
  %41 = select <4 x i1> %39, <4 x i32> %40, <4 x i32> %38
  %42 = add <4 x i32> %41, %29
  %43 = getelementptr inbounds i16, i16* %15, i64 8
  %44 = bitcast i16* %43 to <4 x i16>*
  %45 = load <4 x i16>, <4 x i16>* %44, align 2
  %46 = zext <4 x i16> %45 to <4 x i32>
  %47 = getelementptr inbounds i16, i16* %14, i64 8
  %48 = bitcast i16* %47 to <4 x i16>*
  %49 = load <4 x i16>, <4 x i16>* %48, align 2
  %50 = zext <4 x i16> %49 to <4 x i32>
  %51 = sub nsw <4 x i32> %46, %50
  %52 = icmp slt <4 x i32> %51, zeroinitializer
  %53 = sub nsw <4 x i32> zeroinitializer, %51
  %54 = select <4 x i1> %52, <4 x i32> %53, <4 x i32> %51
  %55 = add <4 x i32> %54, %42
  %56 = getelementptr inbounds i16, i16* %15, i64 12
  %57 = bitcast i16* %56 to <4 x i16>*
  %58 = load <4 x i16>, <4 x i16>* %57, align 2
  %59 = zext <4 x i16> %58 to <4 x i32>
  %60 = getelementptr inbounds i16, i16* %14, i64 12
  %61 = bitcast i16* %60 to <4 x i16>*
  %62 = load <4 x i16>, <4 x i16>* %61, align 2
  %63 = zext <4 x i16> %62 to <4 x i32>
  %64 = sub nsw <4 x i32> %59, %63
  %65 = icmp slt <4 x i32> %64, zeroinitializer
  %66 = sub nsw <4 x i32> zeroinitializer, %64
  %67 = select <4 x i1> %65, <4 x i32> %66, <4 x i32> %64
  %68 = add <4 x i32> %67, %55
  %69 = getelementptr inbounds i16, i16* %15, i64 16
  %70 = bitcast i16* %69 to <4 x i16>*
  %71 = load <4 x i16>, <4 x i16>* %70, align 2
  %72 = zext <4 x i16> %71 to <4 x i32>
  %73 = getelementptr inbounds i16, i16* %14, i64 16
  %74 = bitcast i16* %73 to <4 x i16>*
  %75 = load <4 x i16>, <4 x i16>* %74, align 2
  %76 = zext <4 x i16> %75 to <4 x i32>
  %77 = sub nsw <4 x i32> %72, %76
  %78 = icmp slt <4 x i32> %77, zeroinitializer
  %79 = sub nsw <4 x i32> zeroinitializer, %77
  %80 = select <4 x i1> %78, <4 x i32> %79, <4 x i32> %77
  %81 = add <4 x i32> %80, %68
  %82 = getelementptr inbounds i16, i16* %15, i64 20
  %83 = bitcast i16* %82 to <4 x i16>*
  %84 = load <4 x i16>, <4 x i16>* %83, align 2
  %85 = zext <4 x i16> %84 to <4 x i32>
  %86 = getelementptr inbounds i16, i16* %14, i64 20
  %87 = bitcast i16* %86 to <4 x i16>*
  %88 = load <4 x i16>, <4 x i16>* %87, align 2
  %89 = zext <4 x i16> %88 to <4 x i32>
  %90 = sub nsw <4 x i32> %85, %89
  %91 = icmp slt <4 x i32> %90, zeroinitializer
  %92 = sub nsw <4 x i32> zeroinitializer, %90
  %93 = select <4 x i1> %91, <4 x i32> %92, <4 x i32> %90
  %94 = add <4 x i32> %93, %81
  %95 = getelementptr inbounds i16, i16* %15, i64 24
  %96 = bitcast i16* %95 to <4 x i16>*
  %97 = load <4 x i16>, <4 x i16>* %96, align 2
  %98 = zext <4 x i16> %97 to <4 x i32>
  %99 = getelementptr inbounds i16, i16* %14, i64 24
  %100 = bitcast i16* %99 to <4 x i16>*
  %101 = load <4 x i16>, <4 x i16>* %100, align 2
  %102 = zext <4 x i16> %101 to <4 x i32>
  %103 = sub nsw <4 x i32> %98, %102
  %104 = icmp slt <4 x i32> %103, zeroinitializer
  %105 = sub nsw <4 x i32> zeroinitializer, %103
  %106 = select <4 x i1> %104, <4 x i32> %105, <4 x i32> %103
  %107 = add <4 x i32> %106, %94
  %108 = getelementptr inbounds i16, i16* %15, i64 28
  %109 = bitcast i16* %108 to <4 x i16>*
  %110 = load <4 x i16>, <4 x i16>* %109, align 2
  %111 = zext <4 x i16> %110 to <4 x i32>
  %112 = getelementptr inbounds i16, i16* %14, i64 28
  %113 = bitcast i16* %112 to <4 x i16>*
  %114 = load <4 x i16>, <4 x i16>* %113, align 2
  %115 = zext <4 x i16> %114 to <4 x i32>
  %116 = sub nsw <4 x i32> %111, %115
  %117 = icmp slt <4 x i32> %116, zeroinitializer
  %118 = sub nsw <4 x i32> zeroinitializer, %116
  %119 = select <4 x i1> %117, <4 x i32> %118, <4 x i32> %116
  %120 = add <4 x i32> %119, %107
  %121 = shufflevector <4 x i32> %120, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %122 = add <4 x i32> %120, %121
  %123 = shufflevector <4 x i32> %122, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %124 = add <4 x i32> %122, %123
  %125 = extractelement <4 x i32> %124, i32 0
  %126 = getelementptr inbounds i16, i16* %15, i64 %11
  %127 = getelementptr inbounds i16, i16* %14, i64 %12
  %128 = add nuw nsw i32 %17, 1
  %129 = icmp eq i32 %128, 32
  br i1 %129, label %130, label %13

130:                                              ; preds = %13
  ret i32 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_highbd_sad32x32_avg_c(i8*, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [1024 x i16], align 16
  %7 = bitcast [1024 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 2048, i1 false)
  %8 = getelementptr inbounds [1024 x i16], [1024 x i16]* %6, i64 0, i64 0
  %9 = ptrtoint i8* %4 to i64
  %10 = shl i64 %9, 1
  %11 = inttoptr i64 %10 to i16*
  %12 = ptrtoint i8* %2 to i64
  %13 = shl i64 %12, 1
  %14 = inttoptr i64 %13 to i16*
  call void @vpx_highbd_comp_avg_pred_c(i16* nonnull %8, i16* %11, i32 32, i32 32, i16* %14, i32 %3) #5
  %15 = ptrtoint i8* %0 to i64
  %16 = shl i64 %15, 1
  %17 = inttoptr i64 %16 to i16*
  %18 = sext i32 %1 to i64
  br label %19

19:                                               ; preds = %5, %19
  %20 = phi i16* [ %17, %5 ], [ %132, %19 ]
  %21 = phi i32 [ 0, %5 ], [ %131, %19 ]
  %22 = phi i32 [ 0, %5 ], [ %134, %19 ]
  %23 = phi i16* [ %8, %5 ], [ %133, %19 ]
  %24 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %21, i32 0
  %25 = bitcast i16* %20 to <4 x i16>*
  %26 = load <4 x i16>, <4 x i16>* %25, align 2
  %27 = zext <4 x i16> %26 to <4 x i32>
  %28 = bitcast i16* %23 to <4 x i16>*
  %29 = load <4 x i16>, <4 x i16>* %28, align 2
  %30 = zext <4 x i16> %29 to <4 x i32>
  %31 = sub nsw <4 x i32> %27, %30
  %32 = icmp slt <4 x i32> %31, zeroinitializer
  %33 = sub nsw <4 x i32> zeroinitializer, %31
  %34 = select <4 x i1> %32, <4 x i32> %33, <4 x i32> %31
  %35 = add <4 x i32> %34, %24
  %36 = getelementptr inbounds i16, i16* %20, i64 4
  %37 = bitcast i16* %36 to <4 x i16>*
  %38 = load <4 x i16>, <4 x i16>* %37, align 2
  %39 = zext <4 x i16> %38 to <4 x i32>
  %40 = getelementptr inbounds i16, i16* %23, i64 4
  %41 = bitcast i16* %40 to <4 x i16>*
  %42 = load <4 x i16>, <4 x i16>* %41, align 2
  %43 = zext <4 x i16> %42 to <4 x i32>
  %44 = sub nsw <4 x i32> %39, %43
  %45 = icmp slt <4 x i32> %44, zeroinitializer
  %46 = sub nsw <4 x i32> zeroinitializer, %44
  %47 = select <4 x i1> %45, <4 x i32> %46, <4 x i32> %44
  %48 = add <4 x i32> %47, %35
  %49 = getelementptr inbounds i16, i16* %20, i64 8
  %50 = bitcast i16* %49 to <4 x i16>*
  %51 = load <4 x i16>, <4 x i16>* %50, align 2
  %52 = zext <4 x i16> %51 to <4 x i32>
  %53 = getelementptr inbounds i16, i16* %23, i64 8
  %54 = bitcast i16* %53 to <4 x i16>*
  %55 = load <4 x i16>, <4 x i16>* %54, align 2
  %56 = zext <4 x i16> %55 to <4 x i32>
  %57 = sub nsw <4 x i32> %52, %56
  %58 = icmp slt <4 x i32> %57, zeroinitializer
  %59 = sub nsw <4 x i32> zeroinitializer, %57
  %60 = select <4 x i1> %58, <4 x i32> %59, <4 x i32> %57
  %61 = add <4 x i32> %60, %48
  %62 = getelementptr inbounds i16, i16* %20, i64 12
  %63 = bitcast i16* %62 to <4 x i16>*
  %64 = load <4 x i16>, <4 x i16>* %63, align 2
  %65 = zext <4 x i16> %64 to <4 x i32>
  %66 = getelementptr inbounds i16, i16* %23, i64 12
  %67 = bitcast i16* %66 to <4 x i16>*
  %68 = load <4 x i16>, <4 x i16>* %67, align 2
  %69 = zext <4 x i16> %68 to <4 x i32>
  %70 = sub nsw <4 x i32> %65, %69
  %71 = icmp slt <4 x i32> %70, zeroinitializer
  %72 = sub nsw <4 x i32> zeroinitializer, %70
  %73 = select <4 x i1> %71, <4 x i32> %72, <4 x i32> %70
  %74 = add <4 x i32> %73, %61
  %75 = getelementptr inbounds i16, i16* %20, i64 16
  %76 = bitcast i16* %75 to <4 x i16>*
  %77 = load <4 x i16>, <4 x i16>* %76, align 2
  %78 = zext <4 x i16> %77 to <4 x i32>
  %79 = getelementptr inbounds i16, i16* %23, i64 16
  %80 = bitcast i16* %79 to <4 x i16>*
  %81 = load <4 x i16>, <4 x i16>* %80, align 2
  %82 = zext <4 x i16> %81 to <4 x i32>
  %83 = sub nsw <4 x i32> %78, %82
  %84 = icmp slt <4 x i32> %83, zeroinitializer
  %85 = sub nsw <4 x i32> zeroinitializer, %83
  %86 = select <4 x i1> %84, <4 x i32> %85, <4 x i32> %83
  %87 = add <4 x i32> %86, %74
  %88 = getelementptr inbounds i16, i16* %20, i64 20
  %89 = bitcast i16* %88 to <4 x i16>*
  %90 = load <4 x i16>, <4 x i16>* %89, align 2
  %91 = zext <4 x i16> %90 to <4 x i32>
  %92 = getelementptr inbounds i16, i16* %23, i64 20
  %93 = bitcast i16* %92 to <4 x i16>*
  %94 = load <4 x i16>, <4 x i16>* %93, align 2
  %95 = zext <4 x i16> %94 to <4 x i32>
  %96 = sub nsw <4 x i32> %91, %95
  %97 = icmp slt <4 x i32> %96, zeroinitializer
  %98 = sub nsw <4 x i32> zeroinitializer, %96
  %99 = select <4 x i1> %97, <4 x i32> %98, <4 x i32> %96
  %100 = add <4 x i32> %99, %87
  %101 = getelementptr inbounds i16, i16* %20, i64 24
  %102 = bitcast i16* %101 to <4 x i16>*
  %103 = load <4 x i16>, <4 x i16>* %102, align 2
  %104 = zext <4 x i16> %103 to <4 x i32>
  %105 = getelementptr inbounds i16, i16* %23, i64 24
  %106 = bitcast i16* %105 to <4 x i16>*
  %107 = load <4 x i16>, <4 x i16>* %106, align 2
  %108 = zext <4 x i16> %107 to <4 x i32>
  %109 = sub nsw <4 x i32> %104, %108
  %110 = icmp slt <4 x i32> %109, zeroinitializer
  %111 = sub nsw <4 x i32> zeroinitializer, %109
  %112 = select <4 x i1> %110, <4 x i32> %111, <4 x i32> %109
  %113 = add <4 x i32> %112, %100
  %114 = getelementptr inbounds i16, i16* %20, i64 28
  %115 = bitcast i16* %114 to <4 x i16>*
  %116 = load <4 x i16>, <4 x i16>* %115, align 2
  %117 = zext <4 x i16> %116 to <4 x i32>
  %118 = getelementptr inbounds i16, i16* %23, i64 28
  %119 = bitcast i16* %118 to <4 x i16>*
  %120 = load <4 x i16>, <4 x i16>* %119, align 2
  %121 = zext <4 x i16> %120 to <4 x i32>
  %122 = sub nsw <4 x i32> %117, %121
  %123 = icmp slt <4 x i32> %122, zeroinitializer
  %124 = sub nsw <4 x i32> zeroinitializer, %122
  %125 = select <4 x i1> %123, <4 x i32> %124, <4 x i32> %122
  %126 = add <4 x i32> %125, %113
  %127 = shufflevector <4 x i32> %126, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %128 = add <4 x i32> %126, %127
  %129 = shufflevector <4 x i32> %128, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %130 = add <4 x i32> %128, %129
  %131 = extractelement <4 x i32> %130, i32 0
  %132 = getelementptr inbounds i16, i16* %20, i64 %18
  %133 = getelementptr inbounds i16, i16* %23, i64 32
  %134 = add nuw nsw i32 %22, 1
  %135 = icmp eq i32 %134, 32
  br i1 %135, label %136, label %19

136:                                              ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %7) #5
  ret i32 %131
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_highbd_sad32x32x4d_c(i8*, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = ptrtoint i8* %0 to i64
  %7 = shl i64 %6, 1
  %8 = inttoptr i64 %7 to i16*
  %9 = sext i32 %1 to i64
  %10 = sext i32 %3 to i64
  %11 = bitcast i8** %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 1
  %14 = inttoptr i64 %13 to i16*
  br label %15

15:                                               ; preds = %5, %15
  %16 = phi i16* [ %14, %5 ], [ %129, %15 ]
  %17 = phi i16* [ %8, %5 ], [ %128, %15 ]
  %18 = phi i32 [ 0, %5 ], [ %127, %15 ]
  %19 = phi i32 [ 0, %5 ], [ %130, %15 ]
  %20 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %18, i32 0
  %21 = bitcast i16* %17 to <4 x i16>*
  %22 = load <4 x i16>, <4 x i16>* %21, align 2
  %23 = zext <4 x i16> %22 to <4 x i32>
  %24 = bitcast i16* %16 to <4 x i16>*
  %25 = load <4 x i16>, <4 x i16>* %24, align 2
  %26 = zext <4 x i16> %25 to <4 x i32>
  %27 = sub nsw <4 x i32> %23, %26
  %28 = icmp slt <4 x i32> %27, zeroinitializer
  %29 = sub nsw <4 x i32> zeroinitializer, %27
  %30 = select <4 x i1> %28, <4 x i32> %29, <4 x i32> %27
  %31 = add <4 x i32> %30, %20
  %32 = getelementptr inbounds i16, i16* %17, i64 4
  %33 = bitcast i16* %32 to <4 x i16>*
  %34 = load <4 x i16>, <4 x i16>* %33, align 2
  %35 = zext <4 x i16> %34 to <4 x i32>
  %36 = getelementptr inbounds i16, i16* %16, i64 4
  %37 = bitcast i16* %36 to <4 x i16>*
  %38 = load <4 x i16>, <4 x i16>* %37, align 2
  %39 = zext <4 x i16> %38 to <4 x i32>
  %40 = sub nsw <4 x i32> %35, %39
  %41 = icmp slt <4 x i32> %40, zeroinitializer
  %42 = sub nsw <4 x i32> zeroinitializer, %40
  %43 = select <4 x i1> %41, <4 x i32> %42, <4 x i32> %40
  %44 = add <4 x i32> %43, %31
  %45 = getelementptr inbounds i16, i16* %17, i64 8
  %46 = bitcast i16* %45 to <4 x i16>*
  %47 = load <4 x i16>, <4 x i16>* %46, align 2
  %48 = zext <4 x i16> %47 to <4 x i32>
  %49 = getelementptr inbounds i16, i16* %16, i64 8
  %50 = bitcast i16* %49 to <4 x i16>*
  %51 = load <4 x i16>, <4 x i16>* %50, align 2
  %52 = zext <4 x i16> %51 to <4 x i32>
  %53 = sub nsw <4 x i32> %48, %52
  %54 = icmp slt <4 x i32> %53, zeroinitializer
  %55 = sub nsw <4 x i32> zeroinitializer, %53
  %56 = select <4 x i1> %54, <4 x i32> %55, <4 x i32> %53
  %57 = add <4 x i32> %56, %44
  %58 = getelementptr inbounds i16, i16* %17, i64 12
  %59 = bitcast i16* %58 to <4 x i16>*
  %60 = load <4 x i16>, <4 x i16>* %59, align 2
  %61 = zext <4 x i16> %60 to <4 x i32>
  %62 = getelementptr inbounds i16, i16* %16, i64 12
  %63 = bitcast i16* %62 to <4 x i16>*
  %64 = load <4 x i16>, <4 x i16>* %63, align 2
  %65 = zext <4 x i16> %64 to <4 x i32>
  %66 = sub nsw <4 x i32> %61, %65
  %67 = icmp slt <4 x i32> %66, zeroinitializer
  %68 = sub nsw <4 x i32> zeroinitializer, %66
  %69 = select <4 x i1> %67, <4 x i32> %68, <4 x i32> %66
  %70 = add <4 x i32> %69, %57
  %71 = getelementptr inbounds i16, i16* %17, i64 16
  %72 = bitcast i16* %71 to <4 x i16>*
  %73 = load <4 x i16>, <4 x i16>* %72, align 2
  %74 = zext <4 x i16> %73 to <4 x i32>
  %75 = getelementptr inbounds i16, i16* %16, i64 16
  %76 = bitcast i16* %75 to <4 x i16>*
  %77 = load <4 x i16>, <4 x i16>* %76, align 2
  %78 = zext <4 x i16> %77 to <4 x i32>
  %79 = sub nsw <4 x i32> %74, %78
  %80 = icmp slt <4 x i32> %79, zeroinitializer
  %81 = sub nsw <4 x i32> zeroinitializer, %79
  %82 = select <4 x i1> %80, <4 x i32> %81, <4 x i32> %79
  %83 = add <4 x i32> %82, %70
  %84 = getelementptr inbounds i16, i16* %17, i64 20
  %85 = bitcast i16* %84 to <4 x i16>*
  %86 = load <4 x i16>, <4 x i16>* %85, align 2
  %87 = zext <4 x i16> %86 to <4 x i32>
  %88 = getelementptr inbounds i16, i16* %16, i64 20
  %89 = bitcast i16* %88 to <4 x i16>*
  %90 = load <4 x i16>, <4 x i16>* %89, align 2
  %91 = zext <4 x i16> %90 to <4 x i32>
  %92 = sub nsw <4 x i32> %87, %91
  %93 = icmp slt <4 x i32> %92, zeroinitializer
  %94 = sub nsw <4 x i32> zeroinitializer, %92
  %95 = select <4 x i1> %93, <4 x i32> %94, <4 x i32> %92
  %96 = add <4 x i32> %95, %83
  %97 = getelementptr inbounds i16, i16* %17, i64 24
  %98 = bitcast i16* %97 to <4 x i16>*
  %99 = load <4 x i16>, <4 x i16>* %98, align 2
  %100 = zext <4 x i16> %99 to <4 x i32>
  %101 = getelementptr inbounds i16, i16* %16, i64 24
  %102 = bitcast i16* %101 to <4 x i16>*
  %103 = load <4 x i16>, <4 x i16>* %102, align 2
  %104 = zext <4 x i16> %103 to <4 x i32>
  %105 = sub nsw <4 x i32> %100, %104
  %106 = icmp slt <4 x i32> %105, zeroinitializer
  %107 = sub nsw <4 x i32> zeroinitializer, %105
  %108 = select <4 x i1> %106, <4 x i32> %107, <4 x i32> %105
  %109 = add <4 x i32> %108, %96
  %110 = getelementptr inbounds i16, i16* %17, i64 28
  %111 = bitcast i16* %110 to <4 x i16>*
  %112 = load <4 x i16>, <4 x i16>* %111, align 2
  %113 = zext <4 x i16> %112 to <4 x i32>
  %114 = getelementptr inbounds i16, i16* %16, i64 28
  %115 = bitcast i16* %114 to <4 x i16>*
  %116 = load <4 x i16>, <4 x i16>* %115, align 2
  %117 = zext <4 x i16> %116 to <4 x i32>
  %118 = sub nsw <4 x i32> %113, %117
  %119 = icmp slt <4 x i32> %118, zeroinitializer
  %120 = sub nsw <4 x i32> zeroinitializer, %118
  %121 = select <4 x i1> %119, <4 x i32> %120, <4 x i32> %118
  %122 = add <4 x i32> %121, %109
  %123 = shufflevector <4 x i32> %122, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %124 = add <4 x i32> %122, %123
  %125 = shufflevector <4 x i32> %124, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %126 = add <4 x i32> %124, %125
  %127 = extractelement <4 x i32> %126, i32 0
  %128 = getelementptr inbounds i16, i16* %17, i64 %9
  %129 = getelementptr inbounds i16, i16* %16, i64 %10
  %130 = add nuw nsw i32 %19, 1
  %131 = icmp eq i32 %130, 32
  br i1 %131, label %132, label %15

132:                                              ; preds = %15
  store i32 %127, i32* %4, align 4
  %133 = getelementptr inbounds i8*, i8** %2, i64 1
  %134 = bitcast i8** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = shl i64 %135, 1
  %137 = inttoptr i64 %136 to i16*
  br label %138

138:                                              ; preds = %132, %138
  %139 = phi i16* [ %137, %132 ], [ %252, %138 ]
  %140 = phi i16* [ %8, %132 ], [ %251, %138 ]
  %141 = phi i32 [ 0, %132 ], [ %250, %138 ]
  %142 = phi i32 [ 0, %132 ], [ %253, %138 ]
  %143 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %141, i32 0
  %144 = bitcast i16* %140 to <4 x i16>*
  %145 = load <4 x i16>, <4 x i16>* %144, align 2
  %146 = zext <4 x i16> %145 to <4 x i32>
  %147 = bitcast i16* %139 to <4 x i16>*
  %148 = load <4 x i16>, <4 x i16>* %147, align 2
  %149 = zext <4 x i16> %148 to <4 x i32>
  %150 = sub nsw <4 x i32> %146, %149
  %151 = icmp slt <4 x i32> %150, zeroinitializer
  %152 = sub nsw <4 x i32> zeroinitializer, %150
  %153 = select <4 x i1> %151, <4 x i32> %152, <4 x i32> %150
  %154 = add <4 x i32> %153, %143
  %155 = getelementptr inbounds i16, i16* %140, i64 4
  %156 = bitcast i16* %155 to <4 x i16>*
  %157 = load <4 x i16>, <4 x i16>* %156, align 2
  %158 = zext <4 x i16> %157 to <4 x i32>
  %159 = getelementptr inbounds i16, i16* %139, i64 4
  %160 = bitcast i16* %159 to <4 x i16>*
  %161 = load <4 x i16>, <4 x i16>* %160, align 2
  %162 = zext <4 x i16> %161 to <4 x i32>
  %163 = sub nsw <4 x i32> %158, %162
  %164 = icmp slt <4 x i32> %163, zeroinitializer
  %165 = sub nsw <4 x i32> zeroinitializer, %163
  %166 = select <4 x i1> %164, <4 x i32> %165, <4 x i32> %163
  %167 = add <4 x i32> %166, %154
  %168 = getelementptr inbounds i16, i16* %140, i64 8
  %169 = bitcast i16* %168 to <4 x i16>*
  %170 = load <4 x i16>, <4 x i16>* %169, align 2
  %171 = zext <4 x i16> %170 to <4 x i32>
  %172 = getelementptr inbounds i16, i16* %139, i64 8
  %173 = bitcast i16* %172 to <4 x i16>*
  %174 = load <4 x i16>, <4 x i16>* %173, align 2
  %175 = zext <4 x i16> %174 to <4 x i32>
  %176 = sub nsw <4 x i32> %171, %175
  %177 = icmp slt <4 x i32> %176, zeroinitializer
  %178 = sub nsw <4 x i32> zeroinitializer, %176
  %179 = select <4 x i1> %177, <4 x i32> %178, <4 x i32> %176
  %180 = add <4 x i32> %179, %167
  %181 = getelementptr inbounds i16, i16* %140, i64 12
  %182 = bitcast i16* %181 to <4 x i16>*
  %183 = load <4 x i16>, <4 x i16>* %182, align 2
  %184 = zext <4 x i16> %183 to <4 x i32>
  %185 = getelementptr inbounds i16, i16* %139, i64 12
  %186 = bitcast i16* %185 to <4 x i16>*
  %187 = load <4 x i16>, <4 x i16>* %186, align 2
  %188 = zext <4 x i16> %187 to <4 x i32>
  %189 = sub nsw <4 x i32> %184, %188
  %190 = icmp slt <4 x i32> %189, zeroinitializer
  %191 = sub nsw <4 x i32> zeroinitializer, %189
  %192 = select <4 x i1> %190, <4 x i32> %191, <4 x i32> %189
  %193 = add <4 x i32> %192, %180
  %194 = getelementptr inbounds i16, i16* %140, i64 16
  %195 = bitcast i16* %194 to <4 x i16>*
  %196 = load <4 x i16>, <4 x i16>* %195, align 2
  %197 = zext <4 x i16> %196 to <4 x i32>
  %198 = getelementptr inbounds i16, i16* %139, i64 16
  %199 = bitcast i16* %198 to <4 x i16>*
  %200 = load <4 x i16>, <4 x i16>* %199, align 2
  %201 = zext <4 x i16> %200 to <4 x i32>
  %202 = sub nsw <4 x i32> %197, %201
  %203 = icmp slt <4 x i32> %202, zeroinitializer
  %204 = sub nsw <4 x i32> zeroinitializer, %202
  %205 = select <4 x i1> %203, <4 x i32> %204, <4 x i32> %202
  %206 = add <4 x i32> %205, %193
  %207 = getelementptr inbounds i16, i16* %140, i64 20
  %208 = bitcast i16* %207 to <4 x i16>*
  %209 = load <4 x i16>, <4 x i16>* %208, align 2
  %210 = zext <4 x i16> %209 to <4 x i32>
  %211 = getelementptr inbounds i16, i16* %139, i64 20
  %212 = bitcast i16* %211 to <4 x i16>*
  %213 = load <4 x i16>, <4 x i16>* %212, align 2
  %214 = zext <4 x i16> %213 to <4 x i32>
  %215 = sub nsw <4 x i32> %210, %214
  %216 = icmp slt <4 x i32> %215, zeroinitializer
  %217 = sub nsw <4 x i32> zeroinitializer, %215
  %218 = select <4 x i1> %216, <4 x i32> %217, <4 x i32> %215
  %219 = add <4 x i32> %218, %206
  %220 = getelementptr inbounds i16, i16* %140, i64 24
  %221 = bitcast i16* %220 to <4 x i16>*
  %222 = load <4 x i16>, <4 x i16>* %221, align 2
  %223 = zext <4 x i16> %222 to <4 x i32>
  %224 = getelementptr inbounds i16, i16* %139, i64 24
  %225 = bitcast i16* %224 to <4 x i16>*
  %226 = load <4 x i16>, <4 x i16>* %225, align 2
  %227 = zext <4 x i16> %226 to <4 x i32>
  %228 = sub nsw <4 x i32> %223, %227
  %229 = icmp slt <4 x i32> %228, zeroinitializer
  %230 = sub nsw <4 x i32> zeroinitializer, %228
  %231 = select <4 x i1> %229, <4 x i32> %230, <4 x i32> %228
  %232 = add <4 x i32> %231, %219
  %233 = getelementptr inbounds i16, i16* %140, i64 28
  %234 = bitcast i16* %233 to <4 x i16>*
  %235 = load <4 x i16>, <4 x i16>* %234, align 2
  %236 = zext <4 x i16> %235 to <4 x i32>
  %237 = getelementptr inbounds i16, i16* %139, i64 28
  %238 = bitcast i16* %237 to <4 x i16>*
  %239 = load <4 x i16>, <4 x i16>* %238, align 2
  %240 = zext <4 x i16> %239 to <4 x i32>
  %241 = sub nsw <4 x i32> %236, %240
  %242 = icmp slt <4 x i32> %241, zeroinitializer
  %243 = sub nsw <4 x i32> zeroinitializer, %241
  %244 = select <4 x i1> %242, <4 x i32> %243, <4 x i32> %241
  %245 = add <4 x i32> %244, %232
  %246 = shufflevector <4 x i32> %245, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %247 = add <4 x i32> %245, %246
  %248 = shufflevector <4 x i32> %247, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %249 = add <4 x i32> %247, %248
  %250 = extractelement <4 x i32> %249, i32 0
  %251 = getelementptr inbounds i16, i16* %140, i64 %9
  %252 = getelementptr inbounds i16, i16* %139, i64 %10
  %253 = add nuw nsw i32 %142, 1
  %254 = icmp eq i32 %253, 32
  br i1 %254, label %255, label %138

255:                                              ; preds = %138
  %256 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %250, i32* %256, align 4
  %257 = getelementptr inbounds i8*, i8** %2, i64 2
  %258 = bitcast i8** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = shl i64 %259, 1
  %261 = inttoptr i64 %260 to i16*
  br label %262

262:                                              ; preds = %255, %262
  %263 = phi i16* [ %261, %255 ], [ %376, %262 ]
  %264 = phi i16* [ %8, %255 ], [ %375, %262 ]
  %265 = phi i32 [ 0, %255 ], [ %374, %262 ]
  %266 = phi i32 [ 0, %255 ], [ %377, %262 ]
  %267 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %265, i32 0
  %268 = bitcast i16* %264 to <4 x i16>*
  %269 = load <4 x i16>, <4 x i16>* %268, align 2
  %270 = zext <4 x i16> %269 to <4 x i32>
  %271 = bitcast i16* %263 to <4 x i16>*
  %272 = load <4 x i16>, <4 x i16>* %271, align 2
  %273 = zext <4 x i16> %272 to <4 x i32>
  %274 = sub nsw <4 x i32> %270, %273
  %275 = icmp slt <4 x i32> %274, zeroinitializer
  %276 = sub nsw <4 x i32> zeroinitializer, %274
  %277 = select <4 x i1> %275, <4 x i32> %276, <4 x i32> %274
  %278 = add <4 x i32> %277, %267
  %279 = getelementptr inbounds i16, i16* %264, i64 4
  %280 = bitcast i16* %279 to <4 x i16>*
  %281 = load <4 x i16>, <4 x i16>* %280, align 2
  %282 = zext <4 x i16> %281 to <4 x i32>
  %283 = getelementptr inbounds i16, i16* %263, i64 4
  %284 = bitcast i16* %283 to <4 x i16>*
  %285 = load <4 x i16>, <4 x i16>* %284, align 2
  %286 = zext <4 x i16> %285 to <4 x i32>
  %287 = sub nsw <4 x i32> %282, %286
  %288 = icmp slt <4 x i32> %287, zeroinitializer
  %289 = sub nsw <4 x i32> zeroinitializer, %287
  %290 = select <4 x i1> %288, <4 x i32> %289, <4 x i32> %287
  %291 = add <4 x i32> %290, %278
  %292 = getelementptr inbounds i16, i16* %264, i64 8
  %293 = bitcast i16* %292 to <4 x i16>*
  %294 = load <4 x i16>, <4 x i16>* %293, align 2
  %295 = zext <4 x i16> %294 to <4 x i32>
  %296 = getelementptr inbounds i16, i16* %263, i64 8
  %297 = bitcast i16* %296 to <4 x i16>*
  %298 = load <4 x i16>, <4 x i16>* %297, align 2
  %299 = zext <4 x i16> %298 to <4 x i32>
  %300 = sub nsw <4 x i32> %295, %299
  %301 = icmp slt <4 x i32> %300, zeroinitializer
  %302 = sub nsw <4 x i32> zeroinitializer, %300
  %303 = select <4 x i1> %301, <4 x i32> %302, <4 x i32> %300
  %304 = add <4 x i32> %303, %291
  %305 = getelementptr inbounds i16, i16* %264, i64 12
  %306 = bitcast i16* %305 to <4 x i16>*
  %307 = load <4 x i16>, <4 x i16>* %306, align 2
  %308 = zext <4 x i16> %307 to <4 x i32>
  %309 = getelementptr inbounds i16, i16* %263, i64 12
  %310 = bitcast i16* %309 to <4 x i16>*
  %311 = load <4 x i16>, <4 x i16>* %310, align 2
  %312 = zext <4 x i16> %311 to <4 x i32>
  %313 = sub nsw <4 x i32> %308, %312
  %314 = icmp slt <4 x i32> %313, zeroinitializer
  %315 = sub nsw <4 x i32> zeroinitializer, %313
  %316 = select <4 x i1> %314, <4 x i32> %315, <4 x i32> %313
  %317 = add <4 x i32> %316, %304
  %318 = getelementptr inbounds i16, i16* %264, i64 16
  %319 = bitcast i16* %318 to <4 x i16>*
  %320 = load <4 x i16>, <4 x i16>* %319, align 2
  %321 = zext <4 x i16> %320 to <4 x i32>
  %322 = getelementptr inbounds i16, i16* %263, i64 16
  %323 = bitcast i16* %322 to <4 x i16>*
  %324 = load <4 x i16>, <4 x i16>* %323, align 2
  %325 = zext <4 x i16> %324 to <4 x i32>
  %326 = sub nsw <4 x i32> %321, %325
  %327 = icmp slt <4 x i32> %326, zeroinitializer
  %328 = sub nsw <4 x i32> zeroinitializer, %326
  %329 = select <4 x i1> %327, <4 x i32> %328, <4 x i32> %326
  %330 = add <4 x i32> %329, %317
  %331 = getelementptr inbounds i16, i16* %264, i64 20
  %332 = bitcast i16* %331 to <4 x i16>*
  %333 = load <4 x i16>, <4 x i16>* %332, align 2
  %334 = zext <4 x i16> %333 to <4 x i32>
  %335 = getelementptr inbounds i16, i16* %263, i64 20
  %336 = bitcast i16* %335 to <4 x i16>*
  %337 = load <4 x i16>, <4 x i16>* %336, align 2
  %338 = zext <4 x i16> %337 to <4 x i32>
  %339 = sub nsw <4 x i32> %334, %338
  %340 = icmp slt <4 x i32> %339, zeroinitializer
  %341 = sub nsw <4 x i32> zeroinitializer, %339
  %342 = select <4 x i1> %340, <4 x i32> %341, <4 x i32> %339
  %343 = add <4 x i32> %342, %330
  %344 = getelementptr inbounds i16, i16* %264, i64 24
  %345 = bitcast i16* %344 to <4 x i16>*
  %346 = load <4 x i16>, <4 x i16>* %345, align 2
  %347 = zext <4 x i16> %346 to <4 x i32>
  %348 = getelementptr inbounds i16, i16* %263, i64 24
  %349 = bitcast i16* %348 to <4 x i16>*
  %350 = load <4 x i16>, <4 x i16>* %349, align 2
  %351 = zext <4 x i16> %350 to <4 x i32>
  %352 = sub nsw <4 x i32> %347, %351
  %353 = icmp slt <4 x i32> %352, zeroinitializer
  %354 = sub nsw <4 x i32> zeroinitializer, %352
  %355 = select <4 x i1> %353, <4 x i32> %354, <4 x i32> %352
  %356 = add <4 x i32> %355, %343
  %357 = getelementptr inbounds i16, i16* %264, i64 28
  %358 = bitcast i16* %357 to <4 x i16>*
  %359 = load <4 x i16>, <4 x i16>* %358, align 2
  %360 = zext <4 x i16> %359 to <4 x i32>
  %361 = getelementptr inbounds i16, i16* %263, i64 28
  %362 = bitcast i16* %361 to <4 x i16>*
  %363 = load <4 x i16>, <4 x i16>* %362, align 2
  %364 = zext <4 x i16> %363 to <4 x i32>
  %365 = sub nsw <4 x i32> %360, %364
  %366 = icmp slt <4 x i32> %365, zeroinitializer
  %367 = sub nsw <4 x i32> zeroinitializer, %365
  %368 = select <4 x i1> %366, <4 x i32> %367, <4 x i32> %365
  %369 = add <4 x i32> %368, %356
  %370 = shufflevector <4 x i32> %369, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %371 = add <4 x i32> %369, %370
  %372 = shufflevector <4 x i32> %371, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %373 = add <4 x i32> %371, %372
  %374 = extractelement <4 x i32> %373, i32 0
  %375 = getelementptr inbounds i16, i16* %264, i64 %9
  %376 = getelementptr inbounds i16, i16* %263, i64 %10
  %377 = add nuw nsw i32 %266, 1
  %378 = icmp eq i32 %377, 32
  br i1 %378, label %379, label %262

379:                                              ; preds = %262
  %380 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %374, i32* %380, align 4
  %381 = getelementptr inbounds i8*, i8** %2, i64 3
  %382 = bitcast i8** %381 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = shl i64 %383, 1
  %385 = inttoptr i64 %384 to i16*
  br label %386

386:                                              ; preds = %379, %386
  %387 = phi i16* [ %385, %379 ], [ %500, %386 ]
  %388 = phi i16* [ %8, %379 ], [ %499, %386 ]
  %389 = phi i32 [ 0, %379 ], [ %498, %386 ]
  %390 = phi i32 [ 0, %379 ], [ %501, %386 ]
  %391 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %389, i32 0
  %392 = bitcast i16* %388 to <4 x i16>*
  %393 = load <4 x i16>, <4 x i16>* %392, align 2
  %394 = zext <4 x i16> %393 to <4 x i32>
  %395 = bitcast i16* %387 to <4 x i16>*
  %396 = load <4 x i16>, <4 x i16>* %395, align 2
  %397 = zext <4 x i16> %396 to <4 x i32>
  %398 = sub nsw <4 x i32> %394, %397
  %399 = icmp slt <4 x i32> %398, zeroinitializer
  %400 = sub nsw <4 x i32> zeroinitializer, %398
  %401 = select <4 x i1> %399, <4 x i32> %400, <4 x i32> %398
  %402 = add <4 x i32> %401, %391
  %403 = getelementptr inbounds i16, i16* %388, i64 4
  %404 = bitcast i16* %403 to <4 x i16>*
  %405 = load <4 x i16>, <4 x i16>* %404, align 2
  %406 = zext <4 x i16> %405 to <4 x i32>
  %407 = getelementptr inbounds i16, i16* %387, i64 4
  %408 = bitcast i16* %407 to <4 x i16>*
  %409 = load <4 x i16>, <4 x i16>* %408, align 2
  %410 = zext <4 x i16> %409 to <4 x i32>
  %411 = sub nsw <4 x i32> %406, %410
  %412 = icmp slt <4 x i32> %411, zeroinitializer
  %413 = sub nsw <4 x i32> zeroinitializer, %411
  %414 = select <4 x i1> %412, <4 x i32> %413, <4 x i32> %411
  %415 = add <4 x i32> %414, %402
  %416 = getelementptr inbounds i16, i16* %388, i64 8
  %417 = bitcast i16* %416 to <4 x i16>*
  %418 = load <4 x i16>, <4 x i16>* %417, align 2
  %419 = zext <4 x i16> %418 to <4 x i32>
  %420 = getelementptr inbounds i16, i16* %387, i64 8
  %421 = bitcast i16* %420 to <4 x i16>*
  %422 = load <4 x i16>, <4 x i16>* %421, align 2
  %423 = zext <4 x i16> %422 to <4 x i32>
  %424 = sub nsw <4 x i32> %419, %423
  %425 = icmp slt <4 x i32> %424, zeroinitializer
  %426 = sub nsw <4 x i32> zeroinitializer, %424
  %427 = select <4 x i1> %425, <4 x i32> %426, <4 x i32> %424
  %428 = add <4 x i32> %427, %415
  %429 = getelementptr inbounds i16, i16* %388, i64 12
  %430 = bitcast i16* %429 to <4 x i16>*
  %431 = load <4 x i16>, <4 x i16>* %430, align 2
  %432 = zext <4 x i16> %431 to <4 x i32>
  %433 = getelementptr inbounds i16, i16* %387, i64 12
  %434 = bitcast i16* %433 to <4 x i16>*
  %435 = load <4 x i16>, <4 x i16>* %434, align 2
  %436 = zext <4 x i16> %435 to <4 x i32>
  %437 = sub nsw <4 x i32> %432, %436
  %438 = icmp slt <4 x i32> %437, zeroinitializer
  %439 = sub nsw <4 x i32> zeroinitializer, %437
  %440 = select <4 x i1> %438, <4 x i32> %439, <4 x i32> %437
  %441 = add <4 x i32> %440, %428
  %442 = getelementptr inbounds i16, i16* %388, i64 16
  %443 = bitcast i16* %442 to <4 x i16>*
  %444 = load <4 x i16>, <4 x i16>* %443, align 2
  %445 = zext <4 x i16> %444 to <4 x i32>
  %446 = getelementptr inbounds i16, i16* %387, i64 16
  %447 = bitcast i16* %446 to <4 x i16>*
  %448 = load <4 x i16>, <4 x i16>* %447, align 2
  %449 = zext <4 x i16> %448 to <4 x i32>
  %450 = sub nsw <4 x i32> %445, %449
  %451 = icmp slt <4 x i32> %450, zeroinitializer
  %452 = sub nsw <4 x i32> zeroinitializer, %450
  %453 = select <4 x i1> %451, <4 x i32> %452, <4 x i32> %450
  %454 = add <4 x i32> %453, %441
  %455 = getelementptr inbounds i16, i16* %388, i64 20
  %456 = bitcast i16* %455 to <4 x i16>*
  %457 = load <4 x i16>, <4 x i16>* %456, align 2
  %458 = zext <4 x i16> %457 to <4 x i32>
  %459 = getelementptr inbounds i16, i16* %387, i64 20
  %460 = bitcast i16* %459 to <4 x i16>*
  %461 = load <4 x i16>, <4 x i16>* %460, align 2
  %462 = zext <4 x i16> %461 to <4 x i32>
  %463 = sub nsw <4 x i32> %458, %462
  %464 = icmp slt <4 x i32> %463, zeroinitializer
  %465 = sub nsw <4 x i32> zeroinitializer, %463
  %466 = select <4 x i1> %464, <4 x i32> %465, <4 x i32> %463
  %467 = add <4 x i32> %466, %454
  %468 = getelementptr inbounds i16, i16* %388, i64 24
  %469 = bitcast i16* %468 to <4 x i16>*
  %470 = load <4 x i16>, <4 x i16>* %469, align 2
  %471 = zext <4 x i16> %470 to <4 x i32>
  %472 = getelementptr inbounds i16, i16* %387, i64 24
  %473 = bitcast i16* %472 to <4 x i16>*
  %474 = load <4 x i16>, <4 x i16>* %473, align 2
  %475 = zext <4 x i16> %474 to <4 x i32>
  %476 = sub nsw <4 x i32> %471, %475
  %477 = icmp slt <4 x i32> %476, zeroinitializer
  %478 = sub nsw <4 x i32> zeroinitializer, %476
  %479 = select <4 x i1> %477, <4 x i32> %478, <4 x i32> %476
  %480 = add <4 x i32> %479, %467
  %481 = getelementptr inbounds i16, i16* %388, i64 28
  %482 = bitcast i16* %481 to <4 x i16>*
  %483 = load <4 x i16>, <4 x i16>* %482, align 2
  %484 = zext <4 x i16> %483 to <4 x i32>
  %485 = getelementptr inbounds i16, i16* %387, i64 28
  %486 = bitcast i16* %485 to <4 x i16>*
  %487 = load <4 x i16>, <4 x i16>* %486, align 2
  %488 = zext <4 x i16> %487 to <4 x i32>
  %489 = sub nsw <4 x i32> %484, %488
  %490 = icmp slt <4 x i32> %489, zeroinitializer
  %491 = sub nsw <4 x i32> zeroinitializer, %489
  %492 = select <4 x i1> %490, <4 x i32> %491, <4 x i32> %489
  %493 = add <4 x i32> %492, %480
  %494 = shufflevector <4 x i32> %493, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %495 = add <4 x i32> %493, %494
  %496 = shufflevector <4 x i32> %495, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %497 = add <4 x i32> %495, %496
  %498 = extractelement <4 x i32> %497, i32 0
  %499 = getelementptr inbounds i16, i16* %388, i64 %9
  %500 = getelementptr inbounds i16, i16* %387, i64 %10
  %501 = add nuw nsw i32 %390, 1
  %502 = icmp eq i32 %501, 32
  br i1 %502, label %503, label %386

503:                                              ; preds = %386
  %504 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %498, i32* %504, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_highbd_sad32x16_c(i8*, i32, i8*, i32) local_unnamed_addr #0 {
  %5 = ptrtoint i8* %2 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = ptrtoint i8* %0 to i64
  %9 = shl i64 %8, 1
  %10 = inttoptr i64 %9 to i16*
  %11 = sext i32 %1 to i64
  %12 = sext i32 %3 to i64
  br label %13

13:                                               ; preds = %4, %13
  %14 = phi i16* [ %7, %4 ], [ %127, %13 ]
  %15 = phi i16* [ %10, %4 ], [ %126, %13 ]
  %16 = phi i32 [ 0, %4 ], [ %125, %13 ]
  %17 = phi i32 [ 0, %4 ], [ %128, %13 ]
  %18 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %16, i32 0
  %19 = bitcast i16* %15 to <4 x i16>*
  %20 = load <4 x i16>, <4 x i16>* %19, align 2
  %21 = zext <4 x i16> %20 to <4 x i32>
  %22 = bitcast i16* %14 to <4 x i16>*
  %23 = load <4 x i16>, <4 x i16>* %22, align 2
  %24 = zext <4 x i16> %23 to <4 x i32>
  %25 = sub nsw <4 x i32> %21, %24
  %26 = icmp slt <4 x i32> %25, zeroinitializer
  %27 = sub nsw <4 x i32> zeroinitializer, %25
  %28 = select <4 x i1> %26, <4 x i32> %27, <4 x i32> %25
  %29 = add <4 x i32> %28, %18
  %30 = getelementptr inbounds i16, i16* %15, i64 4
  %31 = bitcast i16* %30 to <4 x i16>*
  %32 = load <4 x i16>, <4 x i16>* %31, align 2
  %33 = zext <4 x i16> %32 to <4 x i32>
  %34 = getelementptr inbounds i16, i16* %14, i64 4
  %35 = bitcast i16* %34 to <4 x i16>*
  %36 = load <4 x i16>, <4 x i16>* %35, align 2
  %37 = zext <4 x i16> %36 to <4 x i32>
  %38 = sub nsw <4 x i32> %33, %37
  %39 = icmp slt <4 x i32> %38, zeroinitializer
  %40 = sub nsw <4 x i32> zeroinitializer, %38
  %41 = select <4 x i1> %39, <4 x i32> %40, <4 x i32> %38
  %42 = add <4 x i32> %41, %29
  %43 = getelementptr inbounds i16, i16* %15, i64 8
  %44 = bitcast i16* %43 to <4 x i16>*
  %45 = load <4 x i16>, <4 x i16>* %44, align 2
  %46 = zext <4 x i16> %45 to <4 x i32>
  %47 = getelementptr inbounds i16, i16* %14, i64 8
  %48 = bitcast i16* %47 to <4 x i16>*
  %49 = load <4 x i16>, <4 x i16>* %48, align 2
  %50 = zext <4 x i16> %49 to <4 x i32>
  %51 = sub nsw <4 x i32> %46, %50
  %52 = icmp slt <4 x i32> %51, zeroinitializer
  %53 = sub nsw <4 x i32> zeroinitializer, %51
  %54 = select <4 x i1> %52, <4 x i32> %53, <4 x i32> %51
  %55 = add <4 x i32> %54, %42
  %56 = getelementptr inbounds i16, i16* %15, i64 12
  %57 = bitcast i16* %56 to <4 x i16>*
  %58 = load <4 x i16>, <4 x i16>* %57, align 2
  %59 = zext <4 x i16> %58 to <4 x i32>
  %60 = getelementptr inbounds i16, i16* %14, i64 12
  %61 = bitcast i16* %60 to <4 x i16>*
  %62 = load <4 x i16>, <4 x i16>* %61, align 2
  %63 = zext <4 x i16> %62 to <4 x i32>
  %64 = sub nsw <4 x i32> %59, %63
  %65 = icmp slt <4 x i32> %64, zeroinitializer
  %66 = sub nsw <4 x i32> zeroinitializer, %64
  %67 = select <4 x i1> %65, <4 x i32> %66, <4 x i32> %64
  %68 = add <4 x i32> %67, %55
  %69 = getelementptr inbounds i16, i16* %15, i64 16
  %70 = bitcast i16* %69 to <4 x i16>*
  %71 = load <4 x i16>, <4 x i16>* %70, align 2
  %72 = zext <4 x i16> %71 to <4 x i32>
  %73 = getelementptr inbounds i16, i16* %14, i64 16
  %74 = bitcast i16* %73 to <4 x i16>*
  %75 = load <4 x i16>, <4 x i16>* %74, align 2
  %76 = zext <4 x i16> %75 to <4 x i32>
  %77 = sub nsw <4 x i32> %72, %76
  %78 = icmp slt <4 x i32> %77, zeroinitializer
  %79 = sub nsw <4 x i32> zeroinitializer, %77
  %80 = select <4 x i1> %78, <4 x i32> %79, <4 x i32> %77
  %81 = add <4 x i32> %80, %68
  %82 = getelementptr inbounds i16, i16* %15, i64 20
  %83 = bitcast i16* %82 to <4 x i16>*
  %84 = load <4 x i16>, <4 x i16>* %83, align 2
  %85 = zext <4 x i16> %84 to <4 x i32>
  %86 = getelementptr inbounds i16, i16* %14, i64 20
  %87 = bitcast i16* %86 to <4 x i16>*
  %88 = load <4 x i16>, <4 x i16>* %87, align 2
  %89 = zext <4 x i16> %88 to <4 x i32>
  %90 = sub nsw <4 x i32> %85, %89
  %91 = icmp slt <4 x i32> %90, zeroinitializer
  %92 = sub nsw <4 x i32> zeroinitializer, %90
  %93 = select <4 x i1> %91, <4 x i32> %92, <4 x i32> %90
  %94 = add <4 x i32> %93, %81
  %95 = getelementptr inbounds i16, i16* %15, i64 24
  %96 = bitcast i16* %95 to <4 x i16>*
  %97 = load <4 x i16>, <4 x i16>* %96, align 2
  %98 = zext <4 x i16> %97 to <4 x i32>
  %99 = getelementptr inbounds i16, i16* %14, i64 24
  %100 = bitcast i16* %99 to <4 x i16>*
  %101 = load <4 x i16>, <4 x i16>* %100, align 2
  %102 = zext <4 x i16> %101 to <4 x i32>
  %103 = sub nsw <4 x i32> %98, %102
  %104 = icmp slt <4 x i32> %103, zeroinitializer
  %105 = sub nsw <4 x i32> zeroinitializer, %103
  %106 = select <4 x i1> %104, <4 x i32> %105, <4 x i32> %103
  %107 = add <4 x i32> %106, %94
  %108 = getelementptr inbounds i16, i16* %15, i64 28
  %109 = bitcast i16* %108 to <4 x i16>*
  %110 = load <4 x i16>, <4 x i16>* %109, align 2
  %111 = zext <4 x i16> %110 to <4 x i32>
  %112 = getelementptr inbounds i16, i16* %14, i64 28
  %113 = bitcast i16* %112 to <4 x i16>*
  %114 = load <4 x i16>, <4 x i16>* %113, align 2
  %115 = zext <4 x i16> %114 to <4 x i32>
  %116 = sub nsw <4 x i32> %111, %115
  %117 = icmp slt <4 x i32> %116, zeroinitializer
  %118 = sub nsw <4 x i32> zeroinitializer, %116
  %119 = select <4 x i1> %117, <4 x i32> %118, <4 x i32> %116
  %120 = add <4 x i32> %119, %107
  %121 = shufflevector <4 x i32> %120, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %122 = add <4 x i32> %120, %121
  %123 = shufflevector <4 x i32> %122, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %124 = add <4 x i32> %122, %123
  %125 = extractelement <4 x i32> %124, i32 0
  %126 = getelementptr inbounds i16, i16* %15, i64 %11
  %127 = getelementptr inbounds i16, i16* %14, i64 %12
  %128 = add nuw nsw i32 %17, 1
  %129 = icmp eq i32 %128, 16
  br i1 %129, label %130, label %13

130:                                              ; preds = %13
  ret i32 %125
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_highbd_sad32x16_avg_c(i8*, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [512 x i16], align 16
  %7 = bitcast [512 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 1024, i1 false)
  %8 = getelementptr inbounds [512 x i16], [512 x i16]* %6, i64 0, i64 0
  %9 = ptrtoint i8* %4 to i64
  %10 = shl i64 %9, 1
  %11 = inttoptr i64 %10 to i16*
  %12 = ptrtoint i8* %2 to i64
  %13 = shl i64 %12, 1
  %14 = inttoptr i64 %13 to i16*
  call void @vpx_highbd_comp_avg_pred_c(i16* nonnull %8, i16* %11, i32 32, i32 16, i16* %14, i32 %3) #5
  %15 = ptrtoint i8* %0 to i64
  %16 = shl i64 %15, 1
  %17 = inttoptr i64 %16 to i16*
  %18 = sext i32 %1 to i64
  br label %19

19:                                               ; preds = %5, %19
  %20 = phi i16* [ %17, %5 ], [ %132, %19 ]
  %21 = phi i32 [ 0, %5 ], [ %131, %19 ]
  %22 = phi i32 [ 0, %5 ], [ %134, %19 ]
  %23 = phi i16* [ %8, %5 ], [ %133, %19 ]
  %24 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %21, i32 0
  %25 = bitcast i16* %20 to <4 x i16>*
  %26 = load <4 x i16>, <4 x i16>* %25, align 2
  %27 = zext <4 x i16> %26 to <4 x i32>
  %28 = bitcast i16* %23 to <4 x i16>*
  %29 = load <4 x i16>, <4 x i16>* %28, align 2
  %30 = zext <4 x i16> %29 to <4 x i32>
  %31 = sub nsw <4 x i32> %27, %30
  %32 = icmp slt <4 x i32> %31, zeroinitializer
  %33 = sub nsw <4 x i32> zeroinitializer, %31
  %34 = select <4 x i1> %32, <4 x i32> %33, <4 x i32> %31
  %35 = add <4 x i32> %34, %24
  %36 = getelementptr inbounds i16, i16* %20, i64 4
  %37 = bitcast i16* %36 to <4 x i16>*
  %38 = load <4 x i16>, <4 x i16>* %37, align 2
  %39 = zext <4 x i16> %38 to <4 x i32>
  %40 = getelementptr inbounds i16, i16* %23, i64 4
  %41 = bitcast i16* %40 to <4 x i16>*
  %42 = load <4 x i16>, <4 x i16>* %41, align 2
  %43 = zext <4 x i16> %42 to <4 x i32>
  %44 = sub nsw <4 x i32> %39, %43
  %45 = icmp slt <4 x i32> %44, zeroinitializer
  %46 = sub nsw <4 x i32> zeroinitializer, %44
  %47 = select <4 x i1> %45, <4 x i32> %46, <4 x i32> %44
  %48 = add <4 x i32> %47, %35
  %49 = getelementptr inbounds i16, i16* %20, i64 8
  %50 = bitcast i16* %49 to <4 x i16>*
  %51 = load <4 x i16>, <4 x i16>* %50, align 2
  %52 = zext <4 x i16> %51 to <4 x i32>
  %53 = getelementptr inbounds i16, i16* %23, i64 8
  %54 = bitcast i16* %53 to <4 x i16>*
  %55 = load <4 x i16>, <4 x i16>* %54, align 2
  %56 = zext <4 x i16> %55 to <4 x i32>
  %57 = sub nsw <4 x i32> %52, %56
  %58 = icmp slt <4 x i32> %57, zeroinitializer
  %59 = sub nsw <4 x i32> zeroinitializer, %57
  %60 = select <4 x i1> %58, <4 x i32> %59, <4 x i32> %57
  %61 = add <4 x i32> %60, %48
  %62 = getelementptr inbounds i16, i16* %20, i64 12
  %63 = bitcast i16* %62 to <4 x i16>*
  %64 = load <4 x i16>, <4 x i16>* %63, align 2
  %65 = zext <4 x i16> %64 to <4 x i32>
  %66 = getelementptr inbounds i16, i16* %23, i64 12
  %67 = bitcast i16* %66 to <4 x i16>*
  %68 = load <4 x i16>, <4 x i16>* %67, align 2
  %69 = zext <4 x i16> %68 to <4 x i32>
  %70 = sub nsw <4 x i32> %65, %69
  %71 = icmp slt <4 x i32> %70, zeroinitializer
  %72 = sub nsw <4 x i32> zeroinitializer, %70
  %73 = select <4 x i1> %71, <4 x i32> %72, <4 x i32> %70
  %74 = add <4 x i32> %73, %61
  %75 = getelementptr inbounds i16, i16* %20, i64 16
  %76 = bitcast i16* %75 to <4 x i16>*
  %77 = load <4 x i16>, <4 x i16>* %76, align 2
  %78 = zext <4 x i16> %77 to <4 x i32>
  %79 = getelementptr inbounds i16, i16* %23, i64 16
  %80 = bitcast i16* %79 to <4 x i16>*
  %81 = load <4 x i16>, <4 x i16>* %80, align 2
  %82 = zext <4 x i16> %81 to <4 x i32>
  %83 = sub nsw <4 x i32> %78, %82
  %84 = icmp slt <4 x i32> %83, zeroinitializer
  %85 = sub nsw <4 x i32> zeroinitializer, %83
  %86 = select <4 x i1> %84, <4 x i32> %85, <4 x i32> %83
  %87 = add <4 x i32> %86, %74
  %88 = getelementptr inbounds i16, i16* %20, i64 20
  %89 = bitcast i16* %88 to <4 x i16>*
  %90 = load <4 x i16>, <4 x i16>* %89, align 2
  %91 = zext <4 x i16> %90 to <4 x i32>
  %92 = getelementptr inbounds i16, i16* %23, i64 20
  %93 = bitcast i16* %92 to <4 x i16>*
  %94 = load <4 x i16>, <4 x i16>* %93, align 2
  %95 = zext <4 x i16> %94 to <4 x i32>
  %96 = sub nsw <4 x i32> %91, %95
  %97 = icmp slt <4 x i32> %96, zeroinitializer
  %98 = sub nsw <4 x i32> zeroinitializer, %96
  %99 = select <4 x i1> %97, <4 x i32> %98, <4 x i32> %96
  %100 = add <4 x i32> %99, %87
  %101 = getelementptr inbounds i16, i16* %20, i64 24
  %102 = bitcast i16* %101 to <4 x i16>*
  %103 = load <4 x i16>, <4 x i16>* %102, align 2
  %104 = zext <4 x i16> %103 to <4 x i32>
  %105 = getelementptr inbounds i16, i16* %23, i64 24
  %106 = bitcast i16* %105 to <4 x i16>*
  %107 = load <4 x i16>, <4 x i16>* %106, align 2
  %108 = zext <4 x i16> %107 to <4 x i32>
  %109 = sub nsw <4 x i32> %104, %108
  %110 = icmp slt <4 x i32> %109, zeroinitializer
  %111 = sub nsw <4 x i32> zeroinitializer, %109
  %112 = select <4 x i1> %110, <4 x i32> %111, <4 x i32> %109
  %113 = add <4 x i32> %112, %100
  %114 = getelementptr inbounds i16, i16* %20, i64 28
  %115 = bitcast i16* %114 to <4 x i16>*
  %116 = load <4 x i16>, <4 x i16>* %115, align 2
  %117 = zext <4 x i16> %116 to <4 x i32>
  %118 = getelementptr inbounds i16, i16* %23, i64 28
  %119 = bitcast i16* %118 to <4 x i16>*
  %120 = load <4 x i16>, <4 x i16>* %119, align 2
  %121 = zext <4 x i16> %120 to <4 x i32>
  %122 = sub nsw <4 x i32> %117, %121
  %123 = icmp slt <4 x i32> %122, zeroinitializer
  %124 = sub nsw <4 x i32> zeroinitializer, %122
  %125 = select <4 x i1> %123, <4 x i32> %124, <4 x i32> %122
  %126 = add <4 x i32> %125, %113
  %127 = shufflevector <4 x i32> %126, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %128 = add <4 x i32> %126, %127
  %129 = shufflevector <4 x i32> %128, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %130 = add <4 x i32> %128, %129
  %131 = extractelement <4 x i32> %130, i32 0
  %132 = getelementptr inbounds i16, i16* %20, i64 %18
  %133 = getelementptr inbounds i16, i16* %23, i64 32
  %134 = add nuw nsw i32 %22, 1
  %135 = icmp eq i32 %134, 16
  br i1 %135, label %136, label %19

136:                                              ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %7) #5
  ret i32 %131
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_highbd_sad32x16x4d_c(i8*, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = ptrtoint i8* %0 to i64
  %7 = shl i64 %6, 1
  %8 = inttoptr i64 %7 to i16*
  %9 = sext i32 %1 to i64
  %10 = sext i32 %3 to i64
  %11 = bitcast i8** %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 1
  %14 = inttoptr i64 %13 to i16*
  br label %15

15:                                               ; preds = %5, %15
  %16 = phi i16* [ %14, %5 ], [ %129, %15 ]
  %17 = phi i16* [ %8, %5 ], [ %128, %15 ]
  %18 = phi i32 [ 0, %5 ], [ %127, %15 ]
  %19 = phi i32 [ 0, %5 ], [ %130, %15 ]
  %20 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %18, i32 0
  %21 = bitcast i16* %17 to <4 x i16>*
  %22 = load <4 x i16>, <4 x i16>* %21, align 2
  %23 = zext <4 x i16> %22 to <4 x i32>
  %24 = bitcast i16* %16 to <4 x i16>*
  %25 = load <4 x i16>, <4 x i16>* %24, align 2
  %26 = zext <4 x i16> %25 to <4 x i32>
  %27 = sub nsw <4 x i32> %23, %26
  %28 = icmp slt <4 x i32> %27, zeroinitializer
  %29 = sub nsw <4 x i32> zeroinitializer, %27
  %30 = select <4 x i1> %28, <4 x i32> %29, <4 x i32> %27
  %31 = add <4 x i32> %30, %20
  %32 = getelementptr inbounds i16, i16* %17, i64 4
  %33 = bitcast i16* %32 to <4 x i16>*
  %34 = load <4 x i16>, <4 x i16>* %33, align 2
  %35 = zext <4 x i16> %34 to <4 x i32>
  %36 = getelementptr inbounds i16, i16* %16, i64 4
  %37 = bitcast i16* %36 to <4 x i16>*
  %38 = load <4 x i16>, <4 x i16>* %37, align 2
  %39 = zext <4 x i16> %38 to <4 x i32>
  %40 = sub nsw <4 x i32> %35, %39
  %41 = icmp slt <4 x i32> %40, zeroinitializer
  %42 = sub nsw <4 x i32> zeroinitializer, %40
  %43 = select <4 x i1> %41, <4 x i32> %42, <4 x i32> %40
  %44 = add <4 x i32> %43, %31
  %45 = getelementptr inbounds i16, i16* %17, i64 8
  %46 = bitcast i16* %45 to <4 x i16>*
  %47 = load <4 x i16>, <4 x i16>* %46, align 2
  %48 = zext <4 x i16> %47 to <4 x i32>
  %49 = getelementptr inbounds i16, i16* %16, i64 8
  %50 = bitcast i16* %49 to <4 x i16>*
  %51 = load <4 x i16>, <4 x i16>* %50, align 2
  %52 = zext <4 x i16> %51 to <4 x i32>
  %53 = sub nsw <4 x i32> %48, %52
  %54 = icmp slt <4 x i32> %53, zeroinitializer
  %55 = sub nsw <4 x i32> zeroinitializer, %53
  %56 = select <4 x i1> %54, <4 x i32> %55, <4 x i32> %53
  %57 = add <4 x i32> %56, %44
  %58 = getelementptr inbounds i16, i16* %17, i64 12
  %59 = bitcast i16* %58 to <4 x i16>*
  %60 = load <4 x i16>, <4 x i16>* %59, align 2
  %61 = zext <4 x i16> %60 to <4 x i32>
  %62 = getelementptr inbounds i16, i16* %16, i64 12
  %63 = bitcast i16* %62 to <4 x i16>*
  %64 = load <4 x i16>, <4 x i16>* %63, align 2
  %65 = zext <4 x i16> %64 to <4 x i32>
  %66 = sub nsw <4 x i32> %61, %65
  %67 = icmp slt <4 x i32> %66, zeroinitializer
  %68 = sub nsw <4 x i32> zeroinitializer, %66
  %69 = select <4 x i1> %67, <4 x i32> %68, <4 x i32> %66
  %70 = add <4 x i32> %69, %57
  %71 = getelementptr inbounds i16, i16* %17, i64 16
  %72 = bitcast i16* %71 to <4 x i16>*
  %73 = load <4 x i16>, <4 x i16>* %72, align 2
  %74 = zext <4 x i16> %73 to <4 x i32>
  %75 = getelementptr inbounds i16, i16* %16, i64 16
  %76 = bitcast i16* %75 to <4 x i16>*
  %77 = load <4 x i16>, <4 x i16>* %76, align 2
  %78 = zext <4 x i16> %77 to <4 x i32>
  %79 = sub nsw <4 x i32> %74, %78
  %80 = icmp slt <4 x i32> %79, zeroinitializer
  %81 = sub nsw <4 x i32> zeroinitializer, %79
  %82 = select <4 x i1> %80, <4 x i32> %81, <4 x i32> %79
  %83 = add <4 x i32> %82, %70
  %84 = getelementptr inbounds i16, i16* %17, i64 20
  %85 = bitcast i16* %84 to <4 x i16>*
  %86 = load <4 x i16>, <4 x i16>* %85, align 2
  %87 = zext <4 x i16> %86 to <4 x i32>
  %88 = getelementptr inbounds i16, i16* %16, i64 20
  %89 = bitcast i16* %88 to <4 x i16>*
  %90 = load <4 x i16>, <4 x i16>* %89, align 2
  %91 = zext <4 x i16> %90 to <4 x i32>
  %92 = sub nsw <4 x i32> %87, %91
  %93 = icmp slt <4 x i32> %92, zeroinitializer
  %94 = sub nsw <4 x i32> zeroinitializer, %92
  %95 = select <4 x i1> %93, <4 x i32> %94, <4 x i32> %92
  %96 = add <4 x i32> %95, %83
  %97 = getelementptr inbounds i16, i16* %17, i64 24
  %98 = bitcast i16* %97 to <4 x i16>*
  %99 = load <4 x i16>, <4 x i16>* %98, align 2
  %100 = zext <4 x i16> %99 to <4 x i32>
  %101 = getelementptr inbounds i16, i16* %16, i64 24
  %102 = bitcast i16* %101 to <4 x i16>*
  %103 = load <4 x i16>, <4 x i16>* %102, align 2
  %104 = zext <4 x i16> %103 to <4 x i32>
  %105 = sub nsw <4 x i32> %100, %104
  %106 = icmp slt <4 x i32> %105, zeroinitializer
  %107 = sub nsw <4 x i32> zeroinitializer, %105
  %108 = select <4 x i1> %106, <4 x i32> %107, <4 x i32> %105
  %109 = add <4 x i32> %108, %96
  %110 = getelementptr inbounds i16, i16* %17, i64 28
  %111 = bitcast i16* %110 to <4 x i16>*
  %112 = load <4 x i16>, <4 x i16>* %111, align 2
  %113 = zext <4 x i16> %112 to <4 x i32>
  %114 = getelementptr inbounds i16, i16* %16, i64 28
  %115 = bitcast i16* %114 to <4 x i16>*
  %116 = load <4 x i16>, <4 x i16>* %115, align 2
  %117 = zext <4 x i16> %116 to <4 x i32>
  %118 = sub nsw <4 x i32> %113, %117
  %119 = icmp slt <4 x i32> %118, zeroinitializer
  %120 = sub nsw <4 x i32> zeroinitializer, %118
  %121 = select <4 x i1> %119, <4 x i32> %120, <4 x i32> %118
  %122 = add <4 x i32> %121, %109
  %123 = shufflevector <4 x i32> %122, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %124 = add <4 x i32> %122, %123
  %125 = shufflevector <4 x i32> %124, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %126 = add <4 x i32> %124, %125
  %127 = extractelement <4 x i32> %126, i32 0
  %128 = getelementptr inbounds i16, i16* %17, i64 %9
  %129 = getelementptr inbounds i16, i16* %16, i64 %10
  %130 = add nuw nsw i32 %19, 1
  %131 = icmp eq i32 %130, 16
  br i1 %131, label %132, label %15

132:                                              ; preds = %15
  store i32 %127, i32* %4, align 4
  %133 = getelementptr inbounds i8*, i8** %2, i64 1
  %134 = bitcast i8** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = shl i64 %135, 1
  %137 = inttoptr i64 %136 to i16*
  br label %138

138:                                              ; preds = %132, %138
  %139 = phi i16* [ %137, %132 ], [ %252, %138 ]
  %140 = phi i16* [ %8, %132 ], [ %251, %138 ]
  %141 = phi i32 [ 0, %132 ], [ %250, %138 ]
  %142 = phi i32 [ 0, %132 ], [ %253, %138 ]
  %143 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %141, i32 0
  %144 = bitcast i16* %140 to <4 x i16>*
  %145 = load <4 x i16>, <4 x i16>* %144, align 2
  %146 = zext <4 x i16> %145 to <4 x i32>
  %147 = bitcast i16* %139 to <4 x i16>*
  %148 = load <4 x i16>, <4 x i16>* %147, align 2
  %149 = zext <4 x i16> %148 to <4 x i32>
  %150 = sub nsw <4 x i32> %146, %149
  %151 = icmp slt <4 x i32> %150, zeroinitializer
  %152 = sub nsw <4 x i32> zeroinitializer, %150
  %153 = select <4 x i1> %151, <4 x i32> %152, <4 x i32> %150
  %154 = add <4 x i32> %153, %143
  %155 = getelementptr inbounds i16, i16* %140, i64 4
  %156 = bitcast i16* %155 to <4 x i16>*
  %157 = load <4 x i16>, <4 x i16>* %156, align 2
  %158 = zext <4 x i16> %157 to <4 x i32>
  %159 = getelementptr inbounds i16, i16* %139, i64 4
  %160 = bitcast i16* %159 to <4 x i16>*
  %161 = load <4 x i16>, <4 x i16>* %160, align 2
  %162 = zext <4 x i16> %161 to <4 x i32>
  %163 = sub nsw <4 x i32> %158, %162
  %164 = icmp slt <4 x i32> %163, zeroinitializer
  %165 = sub nsw <4 x i32> zeroinitializer, %163
  %166 = select <4 x i1> %164, <4 x i32> %165, <4 x i32> %163
  %167 = add <4 x i32> %166, %154
  %168 = getelementptr inbounds i16, i16* %140, i64 8
  %169 = bitcast i16* %168 to <4 x i16>*
  %170 = load <4 x i16>, <4 x i16>* %169, align 2
  %171 = zext <4 x i16> %170 to <4 x i32>
  %172 = getelementptr inbounds i16, i16* %139, i64 8
  %173 = bitcast i16* %172 to <4 x i16>*
  %174 = load <4 x i16>, <4 x i16>* %173, align 2
  %175 = zext <4 x i16> %174 to <4 x i32>
  %176 = sub nsw <4 x i32> %171, %175
  %177 = icmp slt <4 x i32> %176, zeroinitializer
  %178 = sub nsw <4 x i32> zeroinitializer, %176
  %179 = select <4 x i1> %177, <4 x i32> %178, <4 x i32> %176
  %180 = add <4 x i32> %179, %167
  %181 = getelementptr inbounds i16, i16* %140, i64 12
  %182 = bitcast i16* %181 to <4 x i16>*
  %183 = load <4 x i16>, <4 x i16>* %182, align 2
  %184 = zext <4 x i16> %183 to <4 x i32>
  %185 = getelementptr inbounds i16, i16* %139, i64 12
  %186 = bitcast i16* %185 to <4 x i16>*
  %187 = load <4 x i16>, <4 x i16>* %186, align 2
  %188 = zext <4 x i16> %187 to <4 x i32>
  %189 = sub nsw <4 x i32> %184, %188
  %190 = icmp slt <4 x i32> %189, zeroinitializer
  %191 = sub nsw <4 x i32> zeroinitializer, %189
  %192 = select <4 x i1> %190, <4 x i32> %191, <4 x i32> %189
  %193 = add <4 x i32> %192, %180
  %194 = getelementptr inbounds i16, i16* %140, i64 16
  %195 = bitcast i16* %194 to <4 x i16>*
  %196 = load <4 x i16>, <4 x i16>* %195, align 2
  %197 = zext <4 x i16> %196 to <4 x i32>
  %198 = getelementptr inbounds i16, i16* %139, i64 16
  %199 = bitcast i16* %198 to <4 x i16>*
  %200 = load <4 x i16>, <4 x i16>* %199, align 2
  %201 = zext <4 x i16> %200 to <4 x i32>
  %202 = sub nsw <4 x i32> %197, %201
  %203 = icmp slt <4 x i32> %202, zeroinitializer
  %204 = sub nsw <4 x i32> zeroinitializer, %202
  %205 = select <4 x i1> %203, <4 x i32> %204, <4 x i32> %202
  %206 = add <4 x i32> %205, %193
  %207 = getelementptr inbounds i16, i16* %140, i64 20
  %208 = bitcast i16* %207 to <4 x i16>*
  %209 = load <4 x i16>, <4 x i16>* %208, align 2
  %210 = zext <4 x i16> %209 to <4 x i32>
  %211 = getelementptr inbounds i16, i16* %139, i64 20
  %212 = bitcast i16* %211 to <4 x i16>*
  %213 = load <4 x i16>, <4 x i16>* %212, align 2
  %214 = zext <4 x i16> %213 to <4 x i32>
  %215 = sub nsw <4 x i32> %210, %214
  %216 = icmp slt <4 x i32> %215, zeroinitializer
  %217 = sub nsw <4 x i32> zeroinitializer, %215
  %218 = select <4 x i1> %216, <4 x i32> %217, <4 x i32> %215
  %219 = add <4 x i32> %218, %206
  %220 = getelementptr inbounds i16, i16* %140, i64 24
  %221 = bitcast i16* %220 to <4 x i16>*
  %222 = load <4 x i16>, <4 x i16>* %221, align 2
  %223 = zext <4 x i16> %222 to <4 x i32>
  %224 = getelementptr inbounds i16, i16* %139, i64 24
  %225 = bitcast i16* %224 to <4 x i16>*
  %226 = load <4 x i16>, <4 x i16>* %225, align 2
  %227 = zext <4 x i16> %226 to <4 x i32>
  %228 = sub nsw <4 x i32> %223, %227
  %229 = icmp slt <4 x i32> %228, zeroinitializer
  %230 = sub nsw <4 x i32> zeroinitializer, %228
  %231 = select <4 x i1> %229, <4 x i32> %230, <4 x i32> %228
  %232 = add <4 x i32> %231, %219
  %233 = getelementptr inbounds i16, i16* %140, i64 28
  %234 = bitcast i16* %233 to <4 x i16>*
  %235 = load <4 x i16>, <4 x i16>* %234, align 2
  %236 = zext <4 x i16> %235 to <4 x i32>
  %237 = getelementptr inbounds i16, i16* %139, i64 28
  %238 = bitcast i16* %237 to <4 x i16>*
  %239 = load <4 x i16>, <4 x i16>* %238, align 2
  %240 = zext <4 x i16> %239 to <4 x i32>
  %241 = sub nsw <4 x i32> %236, %240
  %242 = icmp slt <4 x i32> %241, zeroinitializer
  %243 = sub nsw <4 x i32> zeroinitializer, %241
  %244 = select <4 x i1> %242, <4 x i32> %243, <4 x i32> %241
  %245 = add <4 x i32> %244, %232
  %246 = shufflevector <4 x i32> %245, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %247 = add <4 x i32> %245, %246
  %248 = shufflevector <4 x i32> %247, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %249 = add <4 x i32> %247, %248
  %250 = extractelement <4 x i32> %249, i32 0
  %251 = getelementptr inbounds i16, i16* %140, i64 %9
  %252 = getelementptr inbounds i16, i16* %139, i64 %10
  %253 = add nuw nsw i32 %142, 1
  %254 = icmp eq i32 %253, 16
  br i1 %254, label %255, label %138

255:                                              ; preds = %138
  %256 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %250, i32* %256, align 4
  %257 = getelementptr inbounds i8*, i8** %2, i64 2
  %258 = bitcast i8** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = shl i64 %259, 1
  %261 = inttoptr i64 %260 to i16*
  br label %262

262:                                              ; preds = %255, %262
  %263 = phi i16* [ %261, %255 ], [ %376, %262 ]
  %264 = phi i16* [ %8, %255 ], [ %375, %262 ]
  %265 = phi i32 [ 0, %255 ], [ %374, %262 ]
  %266 = phi i32 [ 0, %255 ], [ %377, %262 ]
  %267 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %265, i32 0
  %268 = bitcast i16* %264 to <4 x i16>*
  %269 = load <4 x i16>, <4 x i16>* %268, align 2
  %270 = zext <4 x i16> %269 to <4 x i32>
  %271 = bitcast i16* %263 to <4 x i16>*
  %272 = load <4 x i16>, <4 x i16>* %271, align 2
  %273 = zext <4 x i16> %272 to <4 x i32>
  %274 = sub nsw <4 x i32> %270, %273
  %275 = icmp slt <4 x i32> %274, zeroinitializer
  %276 = sub nsw <4 x i32> zeroinitializer, %274
  %277 = select <4 x i1> %275, <4 x i32> %276, <4 x i32> %274
  %278 = add <4 x i32> %277, %267
  %279 = getelementptr inbounds i16, i16* %264, i64 4
  %280 = bitcast i16* %279 to <4 x i16>*
  %281 = load <4 x i16>, <4 x i16>* %280, align 2
  %282 = zext <4 x i16> %281 to <4 x i32>
  %283 = getelementptr inbounds i16, i16* %263, i64 4
  %284 = bitcast i16* %283 to <4 x i16>*
  %285 = load <4 x i16>, <4 x i16>* %284, align 2
  %286 = zext <4 x i16> %285 to <4 x i32>
  %287 = sub nsw <4 x i32> %282, %286
  %288 = icmp slt <4 x i32> %287, zeroinitializer
  %289 = sub nsw <4 x i32> zeroinitializer, %287
  %290 = select <4 x i1> %288, <4 x i32> %289, <4 x i32> %287
  %291 = add <4 x i32> %290, %278
  %292 = getelementptr inbounds i16, i16* %264, i64 8
  %293 = bitcast i16* %292 to <4 x i16>*
  %294 = load <4 x i16>, <4 x i16>* %293, align 2
  %295 = zext <4 x i16> %294 to <4 x i32>
  %296 = getelementptr inbounds i16, i16* %263, i64 8
  %297 = bitcast i16* %296 to <4 x i16>*
  %298 = load <4 x i16>, <4 x i16>* %297, align 2
  %299 = zext <4 x i16> %298 to <4 x i32>
  %300 = sub nsw <4 x i32> %295, %299
  %301 = icmp slt <4 x i32> %300, zeroinitializer
  %302 = sub nsw <4 x i32> zeroinitializer, %300
  %303 = select <4 x i1> %301, <4 x i32> %302, <4 x i32> %300
  %304 = add <4 x i32> %303, %291
  %305 = getelementptr inbounds i16, i16* %264, i64 12
  %306 = bitcast i16* %305 to <4 x i16>*
  %307 = load <4 x i16>, <4 x i16>* %306, align 2
  %308 = zext <4 x i16> %307 to <4 x i32>
  %309 = getelementptr inbounds i16, i16* %263, i64 12
  %310 = bitcast i16* %309 to <4 x i16>*
  %311 = load <4 x i16>, <4 x i16>* %310, align 2
  %312 = zext <4 x i16> %311 to <4 x i32>
  %313 = sub nsw <4 x i32> %308, %312
  %314 = icmp slt <4 x i32> %313, zeroinitializer
  %315 = sub nsw <4 x i32> zeroinitializer, %313
  %316 = select <4 x i1> %314, <4 x i32> %315, <4 x i32> %313
  %317 = add <4 x i32> %316, %304
  %318 = getelementptr inbounds i16, i16* %264, i64 16
  %319 = bitcast i16* %318 to <4 x i16>*
  %320 = load <4 x i16>, <4 x i16>* %319, align 2
  %321 = zext <4 x i16> %320 to <4 x i32>
  %322 = getelementptr inbounds i16, i16* %263, i64 16
  %323 = bitcast i16* %322 to <4 x i16>*
  %324 = load <4 x i16>, <4 x i16>* %323, align 2
  %325 = zext <4 x i16> %324 to <4 x i32>
  %326 = sub nsw <4 x i32> %321, %325
  %327 = icmp slt <4 x i32> %326, zeroinitializer
  %328 = sub nsw <4 x i32> zeroinitializer, %326
  %329 = select <4 x i1> %327, <4 x i32> %328, <4 x i32> %326
  %330 = add <4 x i32> %329, %317
  %331 = getelementptr inbounds i16, i16* %264, i64 20
  %332 = bitcast i16* %331 to <4 x i16>*
  %333 = load <4 x i16>, <4 x i16>* %332, align 2
  %334 = zext <4 x i16> %333 to <4 x i32>
  %335 = getelementptr inbounds i16, i16* %263, i64 20
  %336 = bitcast i16* %335 to <4 x i16>*
  %337 = load <4 x i16>, <4 x i16>* %336, align 2
  %338 = zext <4 x i16> %337 to <4 x i32>
  %339 = sub nsw <4 x i32> %334, %338
  %340 = icmp slt <4 x i32> %339, zeroinitializer
  %341 = sub nsw <4 x i32> zeroinitializer, %339
  %342 = select <4 x i1> %340, <4 x i32> %341, <4 x i32> %339
  %343 = add <4 x i32> %342, %330
  %344 = getelementptr inbounds i16, i16* %264, i64 24
  %345 = bitcast i16* %344 to <4 x i16>*
  %346 = load <4 x i16>, <4 x i16>* %345, align 2
  %347 = zext <4 x i16> %346 to <4 x i32>
  %348 = getelementptr inbounds i16, i16* %263, i64 24
  %349 = bitcast i16* %348 to <4 x i16>*
  %350 = load <4 x i16>, <4 x i16>* %349, align 2
  %351 = zext <4 x i16> %350 to <4 x i32>
  %352 = sub nsw <4 x i32> %347, %351
  %353 = icmp slt <4 x i32> %352, zeroinitializer
  %354 = sub nsw <4 x i32> zeroinitializer, %352
  %355 = select <4 x i1> %353, <4 x i32> %354, <4 x i32> %352
  %356 = add <4 x i32> %355, %343
  %357 = getelementptr inbounds i16, i16* %264, i64 28
  %358 = bitcast i16* %357 to <4 x i16>*
  %359 = load <4 x i16>, <4 x i16>* %358, align 2
  %360 = zext <4 x i16> %359 to <4 x i32>
  %361 = getelementptr inbounds i16, i16* %263, i64 28
  %362 = bitcast i16* %361 to <4 x i16>*
  %363 = load <4 x i16>, <4 x i16>* %362, align 2
  %364 = zext <4 x i16> %363 to <4 x i32>
  %365 = sub nsw <4 x i32> %360, %364
  %366 = icmp slt <4 x i32> %365, zeroinitializer
  %367 = sub nsw <4 x i32> zeroinitializer, %365
  %368 = select <4 x i1> %366, <4 x i32> %367, <4 x i32> %365
  %369 = add <4 x i32> %368, %356
  %370 = shufflevector <4 x i32> %369, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %371 = add <4 x i32> %369, %370
  %372 = shufflevector <4 x i32> %371, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %373 = add <4 x i32> %371, %372
  %374 = extractelement <4 x i32> %373, i32 0
  %375 = getelementptr inbounds i16, i16* %264, i64 %9
  %376 = getelementptr inbounds i16, i16* %263, i64 %10
  %377 = add nuw nsw i32 %266, 1
  %378 = icmp eq i32 %377, 16
  br i1 %378, label %379, label %262

379:                                              ; preds = %262
  %380 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %374, i32* %380, align 4
  %381 = getelementptr inbounds i8*, i8** %2, i64 3
  %382 = bitcast i8** %381 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = shl i64 %383, 1
  %385 = inttoptr i64 %384 to i16*
  br label %386

386:                                              ; preds = %379, %386
  %387 = phi i16* [ %385, %379 ], [ %500, %386 ]
  %388 = phi i16* [ %8, %379 ], [ %499, %386 ]
  %389 = phi i32 [ 0, %379 ], [ %498, %386 ]
  %390 = phi i32 [ 0, %379 ], [ %501, %386 ]
  %391 = insertelement <4 x i32> <i32 undef, i32 0, i32 0, i32 0>, i32 %389, i32 0
  %392 = bitcast i16* %388 to <4 x i16>*
  %393 = load <4 x i16>, <4 x i16>* %392, align 2
  %394 = zext <4 x i16> %393 to <4 x i32>
  %395 = bitcast i16* %387 to <4 x i16>*
  %396 = load <4 x i16>, <4 x i16>* %395, align 2
  %397 = zext <4 x i16> %396 to <4 x i32>
  %398 = sub nsw <4 x i32> %394, %397
  %399 = icmp slt <4 x i32> %398, zeroinitializer
  %400 = sub nsw <4 x i32> zeroinitializer, %398
  %401 = select <4 x i1> %399, <4 x i32> %400, <4 x i32> %398
  %402 = add <4 x i32> %401, %391
  %403 = getelementptr inbounds i16, i16* %388, i64 4
  %404 = bitcast i16* %403 to <4 x i16>*
  %405 = load <4 x i16>, <4 x i16>* %404, align 2
  %406 = zext <4 x i16> %405 to <4 x i32>
  %407 = getelementptr inbounds i16, i16* %387, i64 4
  %408 = bitcast i16* %407 to <4 x i16>*
  %409 = load <4 x i16>, <4 x i16>* %408, align 2
  %410 = zext <4 x i16> %409 to <4 x i32>
  %411 = sub nsw <4 x i32> %406, %410
  %412 = icmp slt <4 x i32> %411, zeroinitializer
  %413 = sub nsw <4 x i32> zeroinitializer, %411
  %414 = select <4 x i1> %412, <4 x i32> %413, <4 x i32> %411
  %415 = add <4 x i32> %414, %402
  %416 = getelementptr inbounds i16, i16* %388, i64 8
  %417 = bitcast i16* %416 to <4 x i16>*
  %418 = load <4 x i16>, <4 x i16>* %417, align 2
  %419 = zext <4 x i16> %418 to <4 x i32>
  %420 = getelementptr inbounds i16, i16* %387, i64 8
  %421 = bitcast i16* %420 to <4 x i16>*
  %422 = load <4 x i16>, <4 x i16>* %421, align 2
  %423 = zext <4 x i16> %422 to <4 x i32>
  %424 = sub nsw <4 x i32> %419, %423
  %425 = icmp slt <4 x i32> %424, zeroinitializer
  %426 = sub nsw <4 x i32> zeroinitializer, %424
  %427 = select <4 x i1> %425, <4 x i32> %426, <4 x i32> %424
  %428 = add <4 x i32> %427, %415
  %429 = getelementptr inbounds i16, i16* %388, i64 12
  %430 = bitcast i16* %429 to <4 x i16>*
  %431 = load <4 x i16>, <4 x i16>* %430, align 2
  %432 = zext <4 x i16> %431 to <4 x i32>
  %433 = getelementptr inbounds i16, i16* %387, i64 12
  %434 = bitcast i16* %433 to <4 x i16>*
  %435 = load <4 x i16>, <4 x i16>* %434, align 2
  %436 = zext <4 x i16> %435 to <4 x i32>
  %437 = sub nsw <4 x i32> %432, %436
  %438 = icmp slt <4 x i32> %437, zeroinitializer
  %439 = sub nsw <4 x i32> zeroinitializer, %437
  %440 = select <4 x i1> %438, <4 x i32> %439, <4 x i32> %437
  %441 = add <4 x i32> %440, %428
  %442 = getelementptr inbounds i16, i16* %388, i64 16
  %443 = bitcast i16* %442 to <4 x i16>*
  %444 = load <4 x i16>, <4 x i16>* %443, align 2
  %445 = zext <4 x i16> %444 to <4 x i32>
  %446 = getelementptr inbounds i16, i16* %387, i64 16
  %447 = bitcast i16* %446 to <4 x i16>*
  %448 = load <4 x i16>, <4 x i16>* %447, align 2
  %449 = zext <4 x i16> %448 to <4 x i32>
  %450 = sub nsw <4 x i32> %445, %449
  %451 = icmp slt <4 x i32> %450, zeroinitializer
  %452 = sub nsw <4 x i32> zeroinitializer, %450
  %453 = select <4 x i1> %451, <4 x i32> %452, <4 x i32> %450
  %454 = add <4 x i32> %453, %441
  %455 = getelementptr inbounds i16, i16* %388, i64 20
  %456 = bitcast i16* %455 to <4 x i16>*
  %457 = load <4 x i16>, <4 x i16>* %456, align 2
  %458 = zext <4 x i16> %457 to <4 x i32>
  %459 = getelementptr inbounds i16, i16* %387, i64 20
  %460 = bitcast i16* %459 to <4 x i16>*
  %461 = load <4 x i16>, <4 x i16>* %460, align 2
  %462 = zext <4 x i16> %461 to <4 x i32>
  %463 = sub nsw <4 x i32> %458, %462
  %464 = icmp slt <4 x i32> %463, zeroinitializer
  %465 = sub nsw <4 x i32> zeroinitializer, %463
  %466 = select <4 x i1> %464, <4 x i32> %465, <4 x i32> %463
  %467 = add <4 x i32> %466, %454
  %468 = getelementptr inbounds i16, i16* %388, i64 24
  %469 = bitcast i16* %468 to <4 x i16>*
  %470 = load <4 x i16>, <4 x i16>* %469, align 2
  %471 = zext <4 x i16> %470 to <4 x i32>
  %472 = getelementptr inbounds i16, i16* %387, i64 24
  %473 = bitcast i16* %472 to <4 x i16>*
  %474 = load <4 x i16>, <4 x i16>* %473, align 2
  %475 = zext <4 x i16> %474 to <4 x i32>
  %476 = sub nsw <4 x i32> %471, %475
  %477 = icmp slt <4 x i32> %476, zeroinitializer
  %478 = sub nsw <4 x i32> zeroinitializer, %476
  %479 = select <4 x i1> %477, <4 x i32> %478, <4 x i32> %476
  %480 = add <4 x i32> %479, %467
  %481 = getelementptr inbounds i16, i16* %388, i64 28
  %482 = bitcast i16* %481 to <4 x i16>*
  %483 = load <4 x i16>, <4 x i16>* %482, align 2
  %484 = zext <4 x i16> %483 to <4 x i32>
  %485 = getelementptr inbounds i16, i16* %387, i64 28
  %486 = bitcast i16* %485 to <4 x i16>*
  %487 = load <4 x i16>, <4 x i16>* %486, align 2
  %488 = zext <4 x i16> %487 to <4 x i32>
  %489 = sub nsw <4 x i32> %484, %488
  %490 = icmp slt <4 x i32> %489, zeroinitializer
  %491 = sub nsw <4 x i32> zeroinitializer, %489
  %492 = select <4 x i1> %490, <4 x i32> %491, <4 x i32> %489
  %493 = add <4 x i32> %492, %480
  %494 = shufflevector <4 x i32> %493, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %495 = add <4 x i32> %493, %494
  %496 = shufflevector <4 x i32> %495, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %497 = add <4 x i32> %495, %496
  %498 = extractelement <4 x i32> %497, i32 0
  %499 = getelementptr inbounds i16, i16* %388, i64 %9
  %500 = getelementptr inbounds i16, i16* %387, i64 %10
  %501 = add nuw nsw i32 %390, 1
  %502 = icmp eq i32 %501, 16
  br i1 %502, label %503, label %386

503:                                              ; preds = %386
  %504 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %498, i32* %504, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_highbd_sad16x32_c(i8*, i32, i8*, i32) local_unnamed_addr #0 {
  %5 = ptrtoint i8* %2 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = ptrtoint i8* %0 to i64
  %9 = shl i64 %8, 1
  %10 = inttoptr i64 %9 to i16*
  %11 = sext i32 %1 to i64
  %12 = sext i32 %3 to i64
  br label %13

13:                                               ; preds = %13, %4
  %14 = phi i16* [ %7, %4 ], [ %39, %13 ]
  %15 = phi i16* [ %10, %4 ], [ %38, %13 ]
  %16 = phi i32 [ 0, %4 ], [ %37, %13 ]
  %17 = phi i32 [ 0, %4 ], [ %40, %13 ]
  %18 = bitcast i16* %15 to <16 x i16>*
  %19 = load <16 x i16>, <16 x i16>* %18, align 2
  %20 = zext <16 x i16> %19 to <16 x i32>
  %21 = bitcast i16* %14 to <16 x i16>*
  %22 = load <16 x i16>, <16 x i16>* %21, align 2
  %23 = zext <16 x i16> %22 to <16 x i32>
  %24 = sub nsw <16 x i32> %20, %23
  %25 = icmp slt <16 x i32> %24, zeroinitializer
  %26 = sub nsw <16 x i32> zeroinitializer, %24
  %27 = select <16 x i1> %25, <16 x i32> %26, <16 x i32> %24
  %28 = shufflevector <16 x i32> %27, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %29 = add <16 x i32> %27, %28
  %30 = shufflevector <16 x i32> %29, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %31 = add <16 x i32> %29, %30
  %32 = shufflevector <16 x i32> %31, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %33 = add <16 x i32> %31, %32
  %34 = shufflevector <16 x i32> %33, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %35 = add <16 x i32> %33, %34
  %36 = extractelement <16 x i32> %35, i32 0
  %37 = add i32 %36, %16
  %38 = getelementptr inbounds i16, i16* %15, i64 %11
  %39 = getelementptr inbounds i16, i16* %14, i64 %12
  %40 = add nuw nsw i32 %17, 1
  %41 = icmp eq i32 %40, 32
  br i1 %41, label %42, label %13

42:                                               ; preds = %13
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_highbd_sad16x32_avg_c(i8*, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [512 x i16], align 16
  %7 = bitcast [512 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 1024, i1 false)
  %8 = getelementptr inbounds [512 x i16], [512 x i16]* %6, i64 0, i64 0
  %9 = ptrtoint i8* %4 to i64
  %10 = shl i64 %9, 1
  %11 = inttoptr i64 %10 to i16*
  %12 = ptrtoint i8* %2 to i64
  %13 = shl i64 %12, 1
  %14 = inttoptr i64 %13 to i16*
  call void @vpx_highbd_comp_avg_pred_c(i16* nonnull %8, i16* %11, i32 16, i32 32, i16* %14, i32 %3) #5
  %15 = ptrtoint i8* %0 to i64
  %16 = shl i64 %15, 1
  %17 = inttoptr i64 %16 to i16*
  %18 = sext i32 %1 to i64
  br label %19

19:                                               ; preds = %19, %5
  %20 = phi i16* [ %17, %5 ], [ %44, %19 ]
  %21 = phi i32 [ 0, %5 ], [ %43, %19 ]
  %22 = phi i32 [ 0, %5 ], [ %46, %19 ]
  %23 = phi i16* [ %8, %5 ], [ %45, %19 ]
  %24 = bitcast i16* %20 to <16 x i16>*
  %25 = load <16 x i16>, <16 x i16>* %24, align 2
  %26 = zext <16 x i16> %25 to <16 x i32>
  %27 = bitcast i16* %23 to <16 x i16>*
  %28 = load <16 x i16>, <16 x i16>* %27, align 2
  %29 = zext <16 x i16> %28 to <16 x i32>
  %30 = sub nsw <16 x i32> %26, %29
  %31 = icmp slt <16 x i32> %30, zeroinitializer
  %32 = sub nsw <16 x i32> zeroinitializer, %30
  %33 = select <16 x i1> %31, <16 x i32> %32, <16 x i32> %30
  %34 = shufflevector <16 x i32> %33, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %35 = add <16 x i32> %33, %34
  %36 = shufflevector <16 x i32> %35, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %37 = add <16 x i32> %35, %36
  %38 = shufflevector <16 x i32> %37, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %39 = add <16 x i32> %37, %38
  %40 = shufflevector <16 x i32> %39, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %41 = add <16 x i32> %39, %40
  %42 = extractelement <16 x i32> %41, i32 0
  %43 = add i32 %42, %21
  %44 = getelementptr inbounds i16, i16* %20, i64 %18
  %45 = getelementptr inbounds i16, i16* %23, i64 16
  %46 = add nuw nsw i32 %22, 1
  %47 = icmp eq i32 %46, 32
  br i1 %47, label %48, label %19

48:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %7) #5
  ret i32 %43
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_highbd_sad16x32x4d_c(i8*, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = load i8*, i8** %2, align 8
  %7 = tail call i32 @vpx_highbd_sad16x32_c(i8* %0, i32 %1, i8* %6, i32 %3)
  store i32 %7, i32* %4, align 4
  %8 = getelementptr inbounds i8*, i8** %2, i64 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @vpx_highbd_sad16x32_c(i8* %0, i32 %1, i8* %9, i32 %3)
  %11 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds i8*, i8** %2, i64 2
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i32 @vpx_highbd_sad16x32_c(i8* %0, i32 %1, i8* %13, i32 %3)
  %15 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i8*, i8** %2, i64 3
  %17 = load i8*, i8** %16, align 8
  %18 = tail call i32 @vpx_highbd_sad16x32_c(i8* %0, i32 %1, i8* %17, i32 %3)
  %19 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %18, i32* %19, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_highbd_sad16x16_c(i8*, i32, i8*, i32) local_unnamed_addr #0 {
  %5 = ptrtoint i8* %2 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = ptrtoint i8* %0 to i64
  %9 = shl i64 %8, 1
  %10 = inttoptr i64 %9 to i16*
  %11 = sext i32 %1 to i64
  %12 = sext i32 %3 to i64
  br label %13

13:                                               ; preds = %13, %4
  %14 = phi i16* [ %7, %4 ], [ %39, %13 ]
  %15 = phi i16* [ %10, %4 ], [ %38, %13 ]
  %16 = phi i32 [ 0, %4 ], [ %37, %13 ]
  %17 = phi i32 [ 0, %4 ], [ %40, %13 ]
  %18 = bitcast i16* %15 to <16 x i16>*
  %19 = load <16 x i16>, <16 x i16>* %18, align 2
  %20 = zext <16 x i16> %19 to <16 x i32>
  %21 = bitcast i16* %14 to <16 x i16>*
  %22 = load <16 x i16>, <16 x i16>* %21, align 2
  %23 = zext <16 x i16> %22 to <16 x i32>
  %24 = sub nsw <16 x i32> %20, %23
  %25 = icmp slt <16 x i32> %24, zeroinitializer
  %26 = sub nsw <16 x i32> zeroinitializer, %24
  %27 = select <16 x i1> %25, <16 x i32> %26, <16 x i32> %24
  %28 = shufflevector <16 x i32> %27, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %29 = add <16 x i32> %27, %28
  %30 = shufflevector <16 x i32> %29, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %31 = add <16 x i32> %29, %30
  %32 = shufflevector <16 x i32> %31, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %33 = add <16 x i32> %31, %32
  %34 = shufflevector <16 x i32> %33, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %35 = add <16 x i32> %33, %34
  %36 = extractelement <16 x i32> %35, i32 0
  %37 = add i32 %36, %16
  %38 = getelementptr inbounds i16, i16* %15, i64 %11
  %39 = getelementptr inbounds i16, i16* %14, i64 %12
  %40 = add nuw nsw i32 %17, 1
  %41 = icmp eq i32 %40, 16
  br i1 %41, label %42, label %13

42:                                               ; preds = %13
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_highbd_sad16x16_avg_c(i8*, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [256 x i16], align 16
  %7 = bitcast [256 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 512, i1 false)
  %8 = getelementptr inbounds [256 x i16], [256 x i16]* %6, i64 0, i64 0
  %9 = ptrtoint i8* %4 to i64
  %10 = shl i64 %9, 1
  %11 = inttoptr i64 %10 to i16*
  %12 = ptrtoint i8* %2 to i64
  %13 = shl i64 %12, 1
  %14 = inttoptr i64 %13 to i16*
  call void @vpx_highbd_comp_avg_pred_c(i16* nonnull %8, i16* %11, i32 16, i32 16, i16* %14, i32 %3) #5
  %15 = ptrtoint i8* %0 to i64
  %16 = shl i64 %15, 1
  %17 = inttoptr i64 %16 to i16*
  %18 = sext i32 %1 to i64
  br label %19

19:                                               ; preds = %19, %5
  %20 = phi i16* [ %17, %5 ], [ %44, %19 ]
  %21 = phi i32 [ 0, %5 ], [ %43, %19 ]
  %22 = phi i32 [ 0, %5 ], [ %46, %19 ]
  %23 = phi i16* [ %8, %5 ], [ %45, %19 ]
  %24 = bitcast i16* %20 to <16 x i16>*
  %25 = load <16 x i16>, <16 x i16>* %24, align 2
  %26 = zext <16 x i16> %25 to <16 x i32>
  %27 = bitcast i16* %23 to <16 x i16>*
  %28 = load <16 x i16>, <16 x i16>* %27, align 2
  %29 = zext <16 x i16> %28 to <16 x i32>
  %30 = sub nsw <16 x i32> %26, %29
  %31 = icmp slt <16 x i32> %30, zeroinitializer
  %32 = sub nsw <16 x i32> zeroinitializer, %30
  %33 = select <16 x i1> %31, <16 x i32> %32, <16 x i32> %30
  %34 = shufflevector <16 x i32> %33, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %35 = add <16 x i32> %33, %34
  %36 = shufflevector <16 x i32> %35, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %37 = add <16 x i32> %35, %36
  %38 = shufflevector <16 x i32> %37, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %39 = add <16 x i32> %37, %38
  %40 = shufflevector <16 x i32> %39, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %41 = add <16 x i32> %39, %40
  %42 = extractelement <16 x i32> %41, i32 0
  %43 = add i32 %42, %21
  %44 = getelementptr inbounds i16, i16* %20, i64 %18
  %45 = getelementptr inbounds i16, i16* %23, i64 16
  %46 = add nuw nsw i32 %22, 1
  %47 = icmp eq i32 %46, 16
  br i1 %47, label %48, label %19

48:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %7) #5
  ret i32 %43
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_highbd_sad16x16x4d_c(i8*, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = load i8*, i8** %2, align 8
  %7 = tail call i32 @vpx_highbd_sad16x16_c(i8* %0, i32 %1, i8* %6, i32 %3)
  store i32 %7, i32* %4, align 4
  %8 = getelementptr inbounds i8*, i8** %2, i64 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @vpx_highbd_sad16x16_c(i8* %0, i32 %1, i8* %9, i32 %3)
  %11 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds i8*, i8** %2, i64 2
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i32 @vpx_highbd_sad16x16_c(i8* %0, i32 %1, i8* %13, i32 %3)
  %15 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i8*, i8** %2, i64 3
  %17 = load i8*, i8** %16, align 8
  %18 = tail call i32 @vpx_highbd_sad16x16_c(i8* %0, i32 %1, i8* %17, i32 %3)
  %19 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %18, i32* %19, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_highbd_sad16x8_c(i8*, i32, i8*, i32) local_unnamed_addr #0 {
  %5 = ptrtoint i8* %2 to i64
  %6 = shl i64 %5, 1
  %7 = ptrtoint i8* %0 to i64
  %8 = shl i64 %7, 1
  %9 = sext i32 %1 to i64
  %10 = sext i32 %3 to i64
  %11 = inttoptr i64 %6 to i16*
  %12 = inttoptr i64 %8 to i16*
  %13 = inttoptr i64 %8 to <16 x i16>*
  %14 = load <16 x i16>, <16 x i16>* %13, align 2
  %15 = zext <16 x i16> %14 to <16 x i32>
  %16 = inttoptr i64 %6 to <16 x i16>*
  %17 = load <16 x i16>, <16 x i16>* %16, align 2
  %18 = zext <16 x i16> %17 to <16 x i32>
  %19 = sub nsw <16 x i32> %15, %18
  %20 = icmp slt <16 x i32> %19, zeroinitializer
  %21 = sub nsw <16 x i32> zeroinitializer, %19
  %22 = select <16 x i1> %20, <16 x i32> %21, <16 x i32> %19
  %23 = shufflevector <16 x i32> %22, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %24 = add <16 x i32> %22, %23
  %25 = shufflevector <16 x i32> %24, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %26 = add <16 x i32> %24, %25
  %27 = shufflevector <16 x i32> %26, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %28 = add <16 x i32> %26, %27
  %29 = shufflevector <16 x i32> %28, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %30 = add <16 x i32> %28, %29
  %31 = extractelement <16 x i32> %30, i32 0
  %32 = getelementptr inbounds i16, i16* %12, i64 %9
  %33 = getelementptr inbounds i16, i16* %11, i64 %10
  %34 = bitcast i16* %32 to <16 x i16>*
  %35 = load <16 x i16>, <16 x i16>* %34, align 2
  %36 = zext <16 x i16> %35 to <16 x i32>
  %37 = bitcast i16* %33 to <16 x i16>*
  %38 = load <16 x i16>, <16 x i16>* %37, align 2
  %39 = zext <16 x i16> %38 to <16 x i32>
  %40 = sub nsw <16 x i32> %36, %39
  %41 = icmp slt <16 x i32> %40, zeroinitializer
  %42 = sub nsw <16 x i32> zeroinitializer, %40
  %43 = select <16 x i1> %41, <16 x i32> %42, <16 x i32> %40
  %44 = shufflevector <16 x i32> %43, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %45 = add <16 x i32> %43, %44
  %46 = shufflevector <16 x i32> %45, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %47 = add <16 x i32> %45, %46
  %48 = shufflevector <16 x i32> %47, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %49 = add <16 x i32> %47, %48
  %50 = shufflevector <16 x i32> %49, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %51 = add <16 x i32> %49, %50
  %52 = extractelement <16 x i32> %51, i32 0
  %53 = add i32 %52, %31
  %54 = getelementptr inbounds i16, i16* %32, i64 %9
  %55 = getelementptr inbounds i16, i16* %33, i64 %10
  %56 = bitcast i16* %54 to <16 x i16>*
  %57 = load <16 x i16>, <16 x i16>* %56, align 2
  %58 = zext <16 x i16> %57 to <16 x i32>
  %59 = bitcast i16* %55 to <16 x i16>*
  %60 = load <16 x i16>, <16 x i16>* %59, align 2
  %61 = zext <16 x i16> %60 to <16 x i32>
  %62 = sub nsw <16 x i32> %58, %61
  %63 = icmp slt <16 x i32> %62, zeroinitializer
  %64 = sub nsw <16 x i32> zeroinitializer, %62
  %65 = select <16 x i1> %63, <16 x i32> %64, <16 x i32> %62
  %66 = shufflevector <16 x i32> %65, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %67 = add <16 x i32> %65, %66
  %68 = shufflevector <16 x i32> %67, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %69 = add <16 x i32> %67, %68
  %70 = shufflevector <16 x i32> %69, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %71 = add <16 x i32> %69, %70
  %72 = shufflevector <16 x i32> %71, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %73 = add <16 x i32> %71, %72
  %74 = extractelement <16 x i32> %73, i32 0
  %75 = add i32 %74, %53
  %76 = getelementptr inbounds i16, i16* %54, i64 %9
  %77 = getelementptr inbounds i16, i16* %55, i64 %10
  %78 = bitcast i16* %76 to <16 x i16>*
  %79 = load <16 x i16>, <16 x i16>* %78, align 2
  %80 = zext <16 x i16> %79 to <16 x i32>
  %81 = bitcast i16* %77 to <16 x i16>*
  %82 = load <16 x i16>, <16 x i16>* %81, align 2
  %83 = zext <16 x i16> %82 to <16 x i32>
  %84 = sub nsw <16 x i32> %80, %83
  %85 = icmp slt <16 x i32> %84, zeroinitializer
  %86 = sub nsw <16 x i32> zeroinitializer, %84
  %87 = select <16 x i1> %85, <16 x i32> %86, <16 x i32> %84
  %88 = shufflevector <16 x i32> %87, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %89 = add <16 x i32> %87, %88
  %90 = shufflevector <16 x i32> %89, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %91 = add <16 x i32> %89, %90
  %92 = shufflevector <16 x i32> %91, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %93 = add <16 x i32> %91, %92
  %94 = shufflevector <16 x i32> %93, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %95 = add <16 x i32> %93, %94
  %96 = extractelement <16 x i32> %95, i32 0
  %97 = add i32 %96, %75
  %98 = getelementptr inbounds i16, i16* %76, i64 %9
  %99 = getelementptr inbounds i16, i16* %77, i64 %10
  %100 = bitcast i16* %98 to <16 x i16>*
  %101 = load <16 x i16>, <16 x i16>* %100, align 2
  %102 = zext <16 x i16> %101 to <16 x i32>
  %103 = bitcast i16* %99 to <16 x i16>*
  %104 = load <16 x i16>, <16 x i16>* %103, align 2
  %105 = zext <16 x i16> %104 to <16 x i32>
  %106 = sub nsw <16 x i32> %102, %105
  %107 = icmp slt <16 x i32> %106, zeroinitializer
  %108 = sub nsw <16 x i32> zeroinitializer, %106
  %109 = select <16 x i1> %107, <16 x i32> %108, <16 x i32> %106
  %110 = shufflevector <16 x i32> %109, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %111 = add <16 x i32> %109, %110
  %112 = shufflevector <16 x i32> %111, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %113 = add <16 x i32> %111, %112
  %114 = shufflevector <16 x i32> %113, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %115 = add <16 x i32> %113, %114
  %116 = shufflevector <16 x i32> %115, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %117 = add <16 x i32> %115, %116
  %118 = extractelement <16 x i32> %117, i32 0
  %119 = add i32 %118, %97
  %120 = getelementptr inbounds i16, i16* %98, i64 %9
  %121 = getelementptr inbounds i16, i16* %99, i64 %10
  %122 = bitcast i16* %120 to <16 x i16>*
  %123 = load <16 x i16>, <16 x i16>* %122, align 2
  %124 = zext <16 x i16> %123 to <16 x i32>
  %125 = bitcast i16* %121 to <16 x i16>*
  %126 = load <16 x i16>, <16 x i16>* %125, align 2
  %127 = zext <16 x i16> %126 to <16 x i32>
  %128 = sub nsw <16 x i32> %124, %127
  %129 = icmp slt <16 x i32> %128, zeroinitializer
  %130 = sub nsw <16 x i32> zeroinitializer, %128
  %131 = select <16 x i1> %129, <16 x i32> %130, <16 x i32> %128
  %132 = shufflevector <16 x i32> %131, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %133 = add <16 x i32> %131, %132
  %134 = shufflevector <16 x i32> %133, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %135 = add <16 x i32> %133, %134
  %136 = shufflevector <16 x i32> %135, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %137 = add <16 x i32> %135, %136
  %138 = shufflevector <16 x i32> %137, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %139 = add <16 x i32> %137, %138
  %140 = extractelement <16 x i32> %139, i32 0
  %141 = add i32 %140, %119
  %142 = getelementptr inbounds i16, i16* %120, i64 %9
  %143 = getelementptr inbounds i16, i16* %121, i64 %10
  %144 = bitcast i16* %142 to <16 x i16>*
  %145 = load <16 x i16>, <16 x i16>* %144, align 2
  %146 = zext <16 x i16> %145 to <16 x i32>
  %147 = bitcast i16* %143 to <16 x i16>*
  %148 = load <16 x i16>, <16 x i16>* %147, align 2
  %149 = zext <16 x i16> %148 to <16 x i32>
  %150 = sub nsw <16 x i32> %146, %149
  %151 = icmp slt <16 x i32> %150, zeroinitializer
  %152 = sub nsw <16 x i32> zeroinitializer, %150
  %153 = select <16 x i1> %151, <16 x i32> %152, <16 x i32> %150
  %154 = shufflevector <16 x i32> %153, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %155 = add <16 x i32> %153, %154
  %156 = shufflevector <16 x i32> %155, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %157 = add <16 x i32> %155, %156
  %158 = shufflevector <16 x i32> %157, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %159 = add <16 x i32> %157, %158
  %160 = shufflevector <16 x i32> %159, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %161 = add <16 x i32> %159, %160
  %162 = extractelement <16 x i32> %161, i32 0
  %163 = add i32 %162, %141
  %164 = getelementptr inbounds i16, i16* %142, i64 %9
  %165 = getelementptr inbounds i16, i16* %143, i64 %10
  %166 = bitcast i16* %164 to <16 x i16>*
  %167 = load <16 x i16>, <16 x i16>* %166, align 2
  %168 = zext <16 x i16> %167 to <16 x i32>
  %169 = bitcast i16* %165 to <16 x i16>*
  %170 = load <16 x i16>, <16 x i16>* %169, align 2
  %171 = zext <16 x i16> %170 to <16 x i32>
  %172 = sub nsw <16 x i32> %168, %171
  %173 = icmp slt <16 x i32> %172, zeroinitializer
  %174 = sub nsw <16 x i32> zeroinitializer, %172
  %175 = select <16 x i1> %173, <16 x i32> %174, <16 x i32> %172
  %176 = shufflevector <16 x i32> %175, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %177 = add <16 x i32> %175, %176
  %178 = shufflevector <16 x i32> %177, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %179 = add <16 x i32> %177, %178
  %180 = shufflevector <16 x i32> %179, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %181 = add <16 x i32> %179, %180
  %182 = shufflevector <16 x i32> %181, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %183 = add <16 x i32> %181, %182
  %184 = extractelement <16 x i32> %183, i32 0
  %185 = add i32 %184, %163
  ret i32 %185
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_highbd_sad16x8_avg_c(i8*, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [128 x i16], align 16
  %7 = bitcast [128 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 256, i1 false)
  %8 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 0
  %9 = ptrtoint i8* %4 to i64
  %10 = shl i64 %9, 1
  %11 = inttoptr i64 %10 to i16*
  %12 = ptrtoint i8* %2 to i64
  %13 = shl i64 %12, 1
  %14 = inttoptr i64 %13 to i16*
  call void @vpx_highbd_comp_avg_pred_c(i16* nonnull %8, i16* %11, i32 16, i32 8, i16* %14, i32 %3) #5
  %15 = ptrtoint i8* %0 to i64
  %16 = shl i64 %15, 1
  %17 = sext i32 %1 to i64
  %18 = inttoptr i64 %16 to i16*
  %19 = inttoptr i64 %16 to <16 x i16>*
  %20 = load <16 x i16>, <16 x i16>* %19, align 2
  %21 = zext <16 x i16> %20 to <16 x i32>
  %22 = bitcast [128 x i16]* %6 to <16 x i16>*
  %23 = load <16 x i16>, <16 x i16>* %22, align 16
  %24 = zext <16 x i16> %23 to <16 x i32>
  %25 = sub nsw <16 x i32> %21, %24
  %26 = icmp slt <16 x i32> %25, zeroinitializer
  %27 = sub nsw <16 x i32> zeroinitializer, %25
  %28 = select <16 x i1> %26, <16 x i32> %27, <16 x i32> %25
  %29 = shufflevector <16 x i32> %28, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %30 = add <16 x i32> %28, %29
  %31 = shufflevector <16 x i32> %30, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %32 = add <16 x i32> %30, %31
  %33 = shufflevector <16 x i32> %32, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %34 = add <16 x i32> %32, %33
  %35 = shufflevector <16 x i32> %34, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %36 = add <16 x i32> %34, %35
  %37 = extractelement <16 x i32> %36, i32 0
  %38 = getelementptr inbounds i16, i16* %18, i64 %17
  %39 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 16
  %40 = bitcast i16* %38 to <16 x i16>*
  %41 = load <16 x i16>, <16 x i16>* %40, align 2
  %42 = zext <16 x i16> %41 to <16 x i32>
  %43 = bitcast i16* %39 to <16 x i16>*
  %44 = load <16 x i16>, <16 x i16>* %43, align 16
  %45 = zext <16 x i16> %44 to <16 x i32>
  %46 = sub nsw <16 x i32> %42, %45
  %47 = icmp slt <16 x i32> %46, zeroinitializer
  %48 = sub nsw <16 x i32> zeroinitializer, %46
  %49 = select <16 x i1> %47, <16 x i32> %48, <16 x i32> %46
  %50 = shufflevector <16 x i32> %49, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %51 = add <16 x i32> %49, %50
  %52 = shufflevector <16 x i32> %51, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %53 = add <16 x i32> %51, %52
  %54 = shufflevector <16 x i32> %53, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %55 = add <16 x i32> %53, %54
  %56 = shufflevector <16 x i32> %55, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %57 = add <16 x i32> %55, %56
  %58 = extractelement <16 x i32> %57, i32 0
  %59 = add i32 %58, %37
  %60 = getelementptr inbounds i16, i16* %38, i64 %17
  %61 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 32
  %62 = bitcast i16* %60 to <16 x i16>*
  %63 = load <16 x i16>, <16 x i16>* %62, align 2
  %64 = zext <16 x i16> %63 to <16 x i32>
  %65 = bitcast i16* %61 to <16 x i16>*
  %66 = load <16 x i16>, <16 x i16>* %65, align 16
  %67 = zext <16 x i16> %66 to <16 x i32>
  %68 = sub nsw <16 x i32> %64, %67
  %69 = icmp slt <16 x i32> %68, zeroinitializer
  %70 = sub nsw <16 x i32> zeroinitializer, %68
  %71 = select <16 x i1> %69, <16 x i32> %70, <16 x i32> %68
  %72 = shufflevector <16 x i32> %71, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %73 = add <16 x i32> %71, %72
  %74 = shufflevector <16 x i32> %73, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %75 = add <16 x i32> %73, %74
  %76 = shufflevector <16 x i32> %75, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %77 = add <16 x i32> %75, %76
  %78 = shufflevector <16 x i32> %77, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %79 = add <16 x i32> %77, %78
  %80 = extractelement <16 x i32> %79, i32 0
  %81 = add i32 %80, %59
  %82 = getelementptr inbounds i16, i16* %60, i64 %17
  %83 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 48
  %84 = bitcast i16* %82 to <16 x i16>*
  %85 = load <16 x i16>, <16 x i16>* %84, align 2
  %86 = zext <16 x i16> %85 to <16 x i32>
  %87 = bitcast i16* %83 to <16 x i16>*
  %88 = load <16 x i16>, <16 x i16>* %87, align 16
  %89 = zext <16 x i16> %88 to <16 x i32>
  %90 = sub nsw <16 x i32> %86, %89
  %91 = icmp slt <16 x i32> %90, zeroinitializer
  %92 = sub nsw <16 x i32> zeroinitializer, %90
  %93 = select <16 x i1> %91, <16 x i32> %92, <16 x i32> %90
  %94 = shufflevector <16 x i32> %93, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %95 = add <16 x i32> %93, %94
  %96 = shufflevector <16 x i32> %95, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %97 = add <16 x i32> %95, %96
  %98 = shufflevector <16 x i32> %97, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %99 = add <16 x i32> %97, %98
  %100 = shufflevector <16 x i32> %99, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %101 = add <16 x i32> %99, %100
  %102 = extractelement <16 x i32> %101, i32 0
  %103 = add i32 %102, %81
  %104 = getelementptr inbounds i16, i16* %82, i64 %17
  %105 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 64
  %106 = bitcast i16* %104 to <16 x i16>*
  %107 = load <16 x i16>, <16 x i16>* %106, align 2
  %108 = zext <16 x i16> %107 to <16 x i32>
  %109 = bitcast i16* %105 to <16 x i16>*
  %110 = load <16 x i16>, <16 x i16>* %109, align 16
  %111 = zext <16 x i16> %110 to <16 x i32>
  %112 = sub nsw <16 x i32> %108, %111
  %113 = icmp slt <16 x i32> %112, zeroinitializer
  %114 = sub nsw <16 x i32> zeroinitializer, %112
  %115 = select <16 x i1> %113, <16 x i32> %114, <16 x i32> %112
  %116 = shufflevector <16 x i32> %115, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %117 = add <16 x i32> %115, %116
  %118 = shufflevector <16 x i32> %117, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %119 = add <16 x i32> %117, %118
  %120 = shufflevector <16 x i32> %119, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %121 = add <16 x i32> %119, %120
  %122 = shufflevector <16 x i32> %121, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %123 = add <16 x i32> %121, %122
  %124 = extractelement <16 x i32> %123, i32 0
  %125 = add i32 %124, %103
  %126 = getelementptr inbounds i16, i16* %104, i64 %17
  %127 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 80
  %128 = bitcast i16* %126 to <16 x i16>*
  %129 = load <16 x i16>, <16 x i16>* %128, align 2
  %130 = zext <16 x i16> %129 to <16 x i32>
  %131 = bitcast i16* %127 to <16 x i16>*
  %132 = load <16 x i16>, <16 x i16>* %131, align 16
  %133 = zext <16 x i16> %132 to <16 x i32>
  %134 = sub nsw <16 x i32> %130, %133
  %135 = icmp slt <16 x i32> %134, zeroinitializer
  %136 = sub nsw <16 x i32> zeroinitializer, %134
  %137 = select <16 x i1> %135, <16 x i32> %136, <16 x i32> %134
  %138 = shufflevector <16 x i32> %137, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %139 = add <16 x i32> %137, %138
  %140 = shufflevector <16 x i32> %139, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %141 = add <16 x i32> %139, %140
  %142 = shufflevector <16 x i32> %141, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %143 = add <16 x i32> %141, %142
  %144 = shufflevector <16 x i32> %143, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %145 = add <16 x i32> %143, %144
  %146 = extractelement <16 x i32> %145, i32 0
  %147 = add i32 %146, %125
  %148 = getelementptr inbounds i16, i16* %126, i64 %17
  %149 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 96
  %150 = bitcast i16* %148 to <16 x i16>*
  %151 = load <16 x i16>, <16 x i16>* %150, align 2
  %152 = zext <16 x i16> %151 to <16 x i32>
  %153 = bitcast i16* %149 to <16 x i16>*
  %154 = load <16 x i16>, <16 x i16>* %153, align 16
  %155 = zext <16 x i16> %154 to <16 x i32>
  %156 = sub nsw <16 x i32> %152, %155
  %157 = icmp slt <16 x i32> %156, zeroinitializer
  %158 = sub nsw <16 x i32> zeroinitializer, %156
  %159 = select <16 x i1> %157, <16 x i32> %158, <16 x i32> %156
  %160 = shufflevector <16 x i32> %159, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %161 = add <16 x i32> %159, %160
  %162 = shufflevector <16 x i32> %161, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %163 = add <16 x i32> %161, %162
  %164 = shufflevector <16 x i32> %163, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %165 = add <16 x i32> %163, %164
  %166 = shufflevector <16 x i32> %165, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %167 = add <16 x i32> %165, %166
  %168 = extractelement <16 x i32> %167, i32 0
  %169 = add i32 %168, %147
  %170 = getelementptr inbounds i16, i16* %148, i64 %17
  %171 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 112
  %172 = bitcast i16* %170 to <16 x i16>*
  %173 = load <16 x i16>, <16 x i16>* %172, align 2
  %174 = zext <16 x i16> %173 to <16 x i32>
  %175 = bitcast i16* %171 to <16 x i16>*
  %176 = load <16 x i16>, <16 x i16>* %175, align 16
  %177 = zext <16 x i16> %176 to <16 x i32>
  %178 = sub nsw <16 x i32> %174, %177
  %179 = icmp slt <16 x i32> %178, zeroinitializer
  %180 = sub nsw <16 x i32> zeroinitializer, %178
  %181 = select <16 x i1> %179, <16 x i32> %180, <16 x i32> %178
  %182 = shufflevector <16 x i32> %181, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %183 = add <16 x i32> %181, %182
  %184 = shufflevector <16 x i32> %183, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %185 = add <16 x i32> %183, %184
  %186 = shufflevector <16 x i32> %185, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %187 = add <16 x i32> %185, %186
  %188 = shufflevector <16 x i32> %187, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %189 = add <16 x i32> %187, %188
  %190 = extractelement <16 x i32> %189, i32 0
  %191 = add i32 %190, %169
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %7) #5
  ret i32 %191
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_highbd_sad16x8x4d_c(i8*, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = load i8*, i8** %2, align 8
  %7 = tail call i32 @vpx_highbd_sad16x8_c(i8* %0, i32 %1, i8* %6, i32 %3)
  store i32 %7, i32* %4, align 4
  %8 = getelementptr inbounds i8*, i8** %2, i64 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @vpx_highbd_sad16x8_c(i8* %0, i32 %1, i8* %9, i32 %3)
  %11 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds i8*, i8** %2, i64 2
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i32 @vpx_highbd_sad16x8_c(i8* %0, i32 %1, i8* %13, i32 %3)
  %15 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i8*, i8** %2, i64 3
  %17 = load i8*, i8** %16, align 8
  %18 = tail call i32 @vpx_highbd_sad16x8_c(i8* %0, i32 %1, i8* %17, i32 %3)
  %19 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %18, i32* %19, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_highbd_sad8x16_c(i8*, i32, i8*, i32) local_unnamed_addr #0 {
  %5 = ptrtoint i8* %2 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = ptrtoint i8* %0 to i64
  %9 = shl i64 %8, 1
  %10 = inttoptr i64 %9 to i16*
  %11 = sext i32 %1 to i64
  %12 = sext i32 %3 to i64
  br label %13

13:                                               ; preds = %13, %4
  %14 = phi i16* [ %7, %4 ], [ %37, %13 ]
  %15 = phi i16* [ %10, %4 ], [ %36, %13 ]
  %16 = phi i32 [ 0, %4 ], [ %35, %13 ]
  %17 = phi i32 [ 0, %4 ], [ %38, %13 ]
  %18 = bitcast i16* %15 to <8 x i16>*
  %19 = load <8 x i16>, <8 x i16>* %18, align 2
  %20 = zext <8 x i16> %19 to <8 x i32>
  %21 = bitcast i16* %14 to <8 x i16>*
  %22 = load <8 x i16>, <8 x i16>* %21, align 2
  %23 = zext <8 x i16> %22 to <8 x i32>
  %24 = sub nsw <8 x i32> %20, %23
  %25 = icmp slt <8 x i32> %24, zeroinitializer
  %26 = sub nsw <8 x i32> zeroinitializer, %24
  %27 = select <8 x i1> %25, <8 x i32> %26, <8 x i32> %24
  %28 = shufflevector <8 x i32> %27, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %29 = add <8 x i32> %27, %28
  %30 = shufflevector <8 x i32> %29, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %31 = add <8 x i32> %29, %30
  %32 = shufflevector <8 x i32> %31, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %33 = add <8 x i32> %31, %32
  %34 = extractelement <8 x i32> %33, i32 0
  %35 = add i32 %34, %16
  %36 = getelementptr inbounds i16, i16* %15, i64 %11
  %37 = getelementptr inbounds i16, i16* %14, i64 %12
  %38 = add nuw nsw i32 %17, 1
  %39 = icmp eq i32 %38, 16
  br i1 %39, label %40, label %13

40:                                               ; preds = %13
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_highbd_sad8x16_avg_c(i8*, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [128 x i16], align 16
  %7 = bitcast [128 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 256, i1 false)
  %8 = getelementptr inbounds [128 x i16], [128 x i16]* %6, i64 0, i64 0
  %9 = ptrtoint i8* %4 to i64
  %10 = shl i64 %9, 1
  %11 = inttoptr i64 %10 to i16*
  %12 = ptrtoint i8* %2 to i64
  %13 = shl i64 %12, 1
  %14 = inttoptr i64 %13 to i16*
  call void @vpx_highbd_comp_avg_pred_c(i16* nonnull %8, i16* %11, i32 8, i32 16, i16* %14, i32 %3) #5
  %15 = ptrtoint i8* %0 to i64
  %16 = shl i64 %15, 1
  %17 = inttoptr i64 %16 to i16*
  %18 = sext i32 %1 to i64
  br label %19

19:                                               ; preds = %19, %5
  %20 = phi i16* [ %17, %5 ], [ %42, %19 ]
  %21 = phi i32 [ 0, %5 ], [ %41, %19 ]
  %22 = phi i32 [ 0, %5 ], [ %44, %19 ]
  %23 = phi i16* [ %8, %5 ], [ %43, %19 ]
  %24 = bitcast i16* %20 to <8 x i16>*
  %25 = load <8 x i16>, <8 x i16>* %24, align 2
  %26 = zext <8 x i16> %25 to <8 x i32>
  %27 = bitcast i16* %23 to <8 x i16>*
  %28 = load <8 x i16>, <8 x i16>* %27, align 2
  %29 = zext <8 x i16> %28 to <8 x i32>
  %30 = sub nsw <8 x i32> %26, %29
  %31 = icmp slt <8 x i32> %30, zeroinitializer
  %32 = sub nsw <8 x i32> zeroinitializer, %30
  %33 = select <8 x i1> %31, <8 x i32> %32, <8 x i32> %30
  %34 = shufflevector <8 x i32> %33, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %35 = add <8 x i32> %33, %34
  %36 = shufflevector <8 x i32> %35, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %37 = add <8 x i32> %35, %36
  %38 = shufflevector <8 x i32> %37, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %39 = add <8 x i32> %37, %38
  %40 = extractelement <8 x i32> %39, i32 0
  %41 = add i32 %40, %21
  %42 = getelementptr inbounds i16, i16* %20, i64 %18
  %43 = getelementptr inbounds i16, i16* %23, i64 8
  %44 = add nuw nsw i32 %22, 1
  %45 = icmp eq i32 %44, 16
  br i1 %45, label %46, label %19

46:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %7) #5
  ret i32 %41
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_highbd_sad8x16x4d_c(i8*, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = load i8*, i8** %2, align 8
  %7 = tail call i32 @vpx_highbd_sad8x16_c(i8* %0, i32 %1, i8* %6, i32 %3)
  store i32 %7, i32* %4, align 4
  %8 = getelementptr inbounds i8*, i8** %2, i64 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @vpx_highbd_sad8x16_c(i8* %0, i32 %1, i8* %9, i32 %3)
  %11 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds i8*, i8** %2, i64 2
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i32 @vpx_highbd_sad8x16_c(i8* %0, i32 %1, i8* %13, i32 %3)
  %15 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i8*, i8** %2, i64 3
  %17 = load i8*, i8** %16, align 8
  %18 = tail call i32 @vpx_highbd_sad8x16_c(i8* %0, i32 %1, i8* %17, i32 %3)
  %19 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %18, i32* %19, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_highbd_sad8x8_c(i8*, i32, i8*, i32) local_unnamed_addr #0 {
  %5 = ptrtoint i8* %2 to i64
  %6 = shl i64 %5, 1
  %7 = ptrtoint i8* %0 to i64
  %8 = shl i64 %7, 1
  %9 = sext i32 %1 to i64
  %10 = sext i32 %3 to i64
  %11 = inttoptr i64 %6 to i16*
  %12 = inttoptr i64 %8 to i16*
  %13 = inttoptr i64 %8 to <8 x i16>*
  %14 = load <8 x i16>, <8 x i16>* %13, align 2
  %15 = zext <8 x i16> %14 to <8 x i32>
  %16 = inttoptr i64 %6 to <8 x i16>*
  %17 = load <8 x i16>, <8 x i16>* %16, align 2
  %18 = zext <8 x i16> %17 to <8 x i32>
  %19 = sub nsw <8 x i32> %15, %18
  %20 = icmp slt <8 x i32> %19, zeroinitializer
  %21 = sub nsw <8 x i32> zeroinitializer, %19
  %22 = select <8 x i1> %20, <8 x i32> %21, <8 x i32> %19
  %23 = shufflevector <8 x i32> %22, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %24 = add <8 x i32> %22, %23
  %25 = shufflevector <8 x i32> %24, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %26 = add <8 x i32> %24, %25
  %27 = shufflevector <8 x i32> %26, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %28 = add <8 x i32> %26, %27
  %29 = extractelement <8 x i32> %28, i32 0
  %30 = getelementptr inbounds i16, i16* %12, i64 %9
  %31 = getelementptr inbounds i16, i16* %11, i64 %10
  %32 = bitcast i16* %30 to <8 x i16>*
  %33 = load <8 x i16>, <8 x i16>* %32, align 2
  %34 = zext <8 x i16> %33 to <8 x i32>
  %35 = bitcast i16* %31 to <8 x i16>*
  %36 = load <8 x i16>, <8 x i16>* %35, align 2
  %37 = zext <8 x i16> %36 to <8 x i32>
  %38 = sub nsw <8 x i32> %34, %37
  %39 = icmp slt <8 x i32> %38, zeroinitializer
  %40 = sub nsw <8 x i32> zeroinitializer, %38
  %41 = select <8 x i1> %39, <8 x i32> %40, <8 x i32> %38
  %42 = shufflevector <8 x i32> %41, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %43 = add <8 x i32> %41, %42
  %44 = shufflevector <8 x i32> %43, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %45 = add <8 x i32> %43, %44
  %46 = shufflevector <8 x i32> %45, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %47 = add <8 x i32> %45, %46
  %48 = extractelement <8 x i32> %47, i32 0
  %49 = add i32 %48, %29
  %50 = getelementptr inbounds i16, i16* %30, i64 %9
  %51 = getelementptr inbounds i16, i16* %31, i64 %10
  %52 = bitcast i16* %50 to <8 x i16>*
  %53 = load <8 x i16>, <8 x i16>* %52, align 2
  %54 = zext <8 x i16> %53 to <8 x i32>
  %55 = bitcast i16* %51 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2
  %57 = zext <8 x i16> %56 to <8 x i32>
  %58 = sub nsw <8 x i32> %54, %57
  %59 = icmp slt <8 x i32> %58, zeroinitializer
  %60 = sub nsw <8 x i32> zeroinitializer, %58
  %61 = select <8 x i1> %59, <8 x i32> %60, <8 x i32> %58
  %62 = shufflevector <8 x i32> %61, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %63 = add <8 x i32> %61, %62
  %64 = shufflevector <8 x i32> %63, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %65 = add <8 x i32> %63, %64
  %66 = shufflevector <8 x i32> %65, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %67 = add <8 x i32> %65, %66
  %68 = extractelement <8 x i32> %67, i32 0
  %69 = add i32 %68, %49
  %70 = getelementptr inbounds i16, i16* %50, i64 %9
  %71 = getelementptr inbounds i16, i16* %51, i64 %10
  %72 = bitcast i16* %70 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2
  %74 = zext <8 x i16> %73 to <8 x i32>
  %75 = bitcast i16* %71 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2
  %77 = zext <8 x i16> %76 to <8 x i32>
  %78 = sub nsw <8 x i32> %74, %77
  %79 = icmp slt <8 x i32> %78, zeroinitializer
  %80 = sub nsw <8 x i32> zeroinitializer, %78
  %81 = select <8 x i1> %79, <8 x i32> %80, <8 x i32> %78
  %82 = shufflevector <8 x i32> %81, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %83 = add <8 x i32> %81, %82
  %84 = shufflevector <8 x i32> %83, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %85 = add <8 x i32> %83, %84
  %86 = shufflevector <8 x i32> %85, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %87 = add <8 x i32> %85, %86
  %88 = extractelement <8 x i32> %87, i32 0
  %89 = add i32 %88, %69
  %90 = getelementptr inbounds i16, i16* %70, i64 %9
  %91 = getelementptr inbounds i16, i16* %71, i64 %10
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2
  %94 = zext <8 x i16> %93 to <8 x i32>
  %95 = bitcast i16* %91 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2
  %97 = zext <8 x i16> %96 to <8 x i32>
  %98 = sub nsw <8 x i32> %94, %97
  %99 = icmp slt <8 x i32> %98, zeroinitializer
  %100 = sub nsw <8 x i32> zeroinitializer, %98
  %101 = select <8 x i1> %99, <8 x i32> %100, <8 x i32> %98
  %102 = shufflevector <8 x i32> %101, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %103 = add <8 x i32> %101, %102
  %104 = shufflevector <8 x i32> %103, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %105 = add <8 x i32> %103, %104
  %106 = shufflevector <8 x i32> %105, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %107 = add <8 x i32> %105, %106
  %108 = extractelement <8 x i32> %107, i32 0
  %109 = add i32 %108, %89
  %110 = getelementptr inbounds i16, i16* %90, i64 %9
  %111 = getelementptr inbounds i16, i16* %91, i64 %10
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2
  %114 = zext <8 x i16> %113 to <8 x i32>
  %115 = bitcast i16* %111 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2
  %117 = zext <8 x i16> %116 to <8 x i32>
  %118 = sub nsw <8 x i32> %114, %117
  %119 = icmp slt <8 x i32> %118, zeroinitializer
  %120 = sub nsw <8 x i32> zeroinitializer, %118
  %121 = select <8 x i1> %119, <8 x i32> %120, <8 x i32> %118
  %122 = shufflevector <8 x i32> %121, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %123 = add <8 x i32> %121, %122
  %124 = shufflevector <8 x i32> %123, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %125 = add <8 x i32> %123, %124
  %126 = shufflevector <8 x i32> %125, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %127 = add <8 x i32> %125, %126
  %128 = extractelement <8 x i32> %127, i32 0
  %129 = add i32 %128, %109
  %130 = getelementptr inbounds i16, i16* %110, i64 %9
  %131 = getelementptr inbounds i16, i16* %111, i64 %10
  %132 = bitcast i16* %130 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2
  %134 = zext <8 x i16> %133 to <8 x i32>
  %135 = bitcast i16* %131 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2
  %137 = zext <8 x i16> %136 to <8 x i32>
  %138 = sub nsw <8 x i32> %134, %137
  %139 = icmp slt <8 x i32> %138, zeroinitializer
  %140 = sub nsw <8 x i32> zeroinitializer, %138
  %141 = select <8 x i1> %139, <8 x i32> %140, <8 x i32> %138
  %142 = shufflevector <8 x i32> %141, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %143 = add <8 x i32> %141, %142
  %144 = shufflevector <8 x i32> %143, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %145 = add <8 x i32> %143, %144
  %146 = shufflevector <8 x i32> %145, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %147 = add <8 x i32> %145, %146
  %148 = extractelement <8 x i32> %147, i32 0
  %149 = add i32 %148, %129
  %150 = getelementptr inbounds i16, i16* %130, i64 %9
  %151 = getelementptr inbounds i16, i16* %131, i64 %10
  %152 = bitcast i16* %150 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2
  %154 = zext <8 x i16> %153 to <8 x i32>
  %155 = bitcast i16* %151 to <8 x i16>*
  %156 = load <8 x i16>, <8 x i16>* %155, align 2
  %157 = zext <8 x i16> %156 to <8 x i32>
  %158 = sub nsw <8 x i32> %154, %157
  %159 = icmp slt <8 x i32> %158, zeroinitializer
  %160 = sub nsw <8 x i32> zeroinitializer, %158
  %161 = select <8 x i1> %159, <8 x i32> %160, <8 x i32> %158
  %162 = shufflevector <8 x i32> %161, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %163 = add <8 x i32> %161, %162
  %164 = shufflevector <8 x i32> %163, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %165 = add <8 x i32> %163, %164
  %166 = shufflevector <8 x i32> %165, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %167 = add <8 x i32> %165, %166
  %168 = extractelement <8 x i32> %167, i32 0
  %169 = add i32 %168, %149
  ret i32 %169
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_highbd_sad8x8_avg_c(i8*, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [64 x i16], align 16
  %7 = bitcast [64 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 128, i1 false)
  %8 = getelementptr inbounds [64 x i16], [64 x i16]* %6, i64 0, i64 0
  %9 = ptrtoint i8* %4 to i64
  %10 = shl i64 %9, 1
  %11 = inttoptr i64 %10 to i16*
  %12 = ptrtoint i8* %2 to i64
  %13 = shl i64 %12, 1
  %14 = inttoptr i64 %13 to i16*
  call void @vpx_highbd_comp_avg_pred_c(i16* nonnull %8, i16* %11, i32 8, i32 8, i16* %14, i32 %3) #5
  %15 = ptrtoint i8* %0 to i64
  %16 = shl i64 %15, 1
  %17 = sext i32 %1 to i64
  %18 = inttoptr i64 %16 to i16*
  %19 = inttoptr i64 %16 to <8 x i16>*
  %20 = load <8 x i16>, <8 x i16>* %19, align 2
  %21 = zext <8 x i16> %20 to <8 x i32>
  %22 = bitcast [64 x i16]* %6 to <8 x i16>*
  %23 = load <8 x i16>, <8 x i16>* %22, align 16
  %24 = zext <8 x i16> %23 to <8 x i32>
  %25 = sub nsw <8 x i32> %21, %24
  %26 = icmp slt <8 x i32> %25, zeroinitializer
  %27 = sub nsw <8 x i32> zeroinitializer, %25
  %28 = select <8 x i1> %26, <8 x i32> %27, <8 x i32> %25
  %29 = shufflevector <8 x i32> %28, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %30 = add <8 x i32> %28, %29
  %31 = shufflevector <8 x i32> %30, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %32 = add <8 x i32> %30, %31
  %33 = shufflevector <8 x i32> %32, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %34 = add <8 x i32> %32, %33
  %35 = extractelement <8 x i32> %34, i32 0
  %36 = getelementptr inbounds i16, i16* %18, i64 %17
  %37 = getelementptr inbounds [64 x i16], [64 x i16]* %6, i64 0, i64 8
  %38 = bitcast i16* %36 to <8 x i16>*
  %39 = load <8 x i16>, <8 x i16>* %38, align 2
  %40 = zext <8 x i16> %39 to <8 x i32>
  %41 = bitcast i16* %37 to <8 x i16>*
  %42 = load <8 x i16>, <8 x i16>* %41, align 16
  %43 = zext <8 x i16> %42 to <8 x i32>
  %44 = sub nsw <8 x i32> %40, %43
  %45 = icmp slt <8 x i32> %44, zeroinitializer
  %46 = sub nsw <8 x i32> zeroinitializer, %44
  %47 = select <8 x i1> %45, <8 x i32> %46, <8 x i32> %44
  %48 = shufflevector <8 x i32> %47, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %49 = add <8 x i32> %47, %48
  %50 = shufflevector <8 x i32> %49, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %51 = add <8 x i32> %49, %50
  %52 = shufflevector <8 x i32> %51, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %53 = add <8 x i32> %51, %52
  %54 = extractelement <8 x i32> %53, i32 0
  %55 = add i32 %54, %35
  %56 = getelementptr inbounds i16, i16* %36, i64 %17
  %57 = getelementptr inbounds [64 x i16], [64 x i16]* %6, i64 0, i64 16
  %58 = bitcast i16* %56 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2
  %60 = zext <8 x i16> %59 to <8 x i32>
  %61 = bitcast i16* %57 to <8 x i16>*
  %62 = load <8 x i16>, <8 x i16>* %61, align 16
  %63 = zext <8 x i16> %62 to <8 x i32>
  %64 = sub nsw <8 x i32> %60, %63
  %65 = icmp slt <8 x i32> %64, zeroinitializer
  %66 = sub nsw <8 x i32> zeroinitializer, %64
  %67 = select <8 x i1> %65, <8 x i32> %66, <8 x i32> %64
  %68 = shufflevector <8 x i32> %67, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %69 = add <8 x i32> %67, %68
  %70 = shufflevector <8 x i32> %69, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %71 = add <8 x i32> %69, %70
  %72 = shufflevector <8 x i32> %71, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %73 = add <8 x i32> %71, %72
  %74 = extractelement <8 x i32> %73, i32 0
  %75 = add i32 %74, %55
  %76 = getelementptr inbounds i16, i16* %56, i64 %17
  %77 = getelementptr inbounds [64 x i16], [64 x i16]* %6, i64 0, i64 24
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2
  %80 = zext <8 x i16> %79 to <8 x i32>
  %81 = bitcast i16* %77 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 16
  %83 = zext <8 x i16> %82 to <8 x i32>
  %84 = sub nsw <8 x i32> %80, %83
  %85 = icmp slt <8 x i32> %84, zeroinitializer
  %86 = sub nsw <8 x i32> zeroinitializer, %84
  %87 = select <8 x i1> %85, <8 x i32> %86, <8 x i32> %84
  %88 = shufflevector <8 x i32> %87, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %89 = add <8 x i32> %87, %88
  %90 = shufflevector <8 x i32> %89, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %91 = add <8 x i32> %89, %90
  %92 = shufflevector <8 x i32> %91, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %93 = add <8 x i32> %91, %92
  %94 = extractelement <8 x i32> %93, i32 0
  %95 = add i32 %94, %75
  %96 = getelementptr inbounds i16, i16* %76, i64 %17
  %97 = getelementptr inbounds [64 x i16], [64 x i16]* %6, i64 0, i64 32
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2
  %100 = zext <8 x i16> %99 to <8 x i32>
  %101 = bitcast i16* %97 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 16
  %103 = zext <8 x i16> %102 to <8 x i32>
  %104 = sub nsw <8 x i32> %100, %103
  %105 = icmp slt <8 x i32> %104, zeroinitializer
  %106 = sub nsw <8 x i32> zeroinitializer, %104
  %107 = select <8 x i1> %105, <8 x i32> %106, <8 x i32> %104
  %108 = shufflevector <8 x i32> %107, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %109 = add <8 x i32> %107, %108
  %110 = shufflevector <8 x i32> %109, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %111 = add <8 x i32> %109, %110
  %112 = shufflevector <8 x i32> %111, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %113 = add <8 x i32> %111, %112
  %114 = extractelement <8 x i32> %113, i32 0
  %115 = add i32 %114, %95
  %116 = getelementptr inbounds i16, i16* %96, i64 %17
  %117 = getelementptr inbounds [64 x i16], [64 x i16]* %6, i64 0, i64 40
  %118 = bitcast i16* %116 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2
  %120 = zext <8 x i16> %119 to <8 x i32>
  %121 = bitcast i16* %117 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 16
  %123 = zext <8 x i16> %122 to <8 x i32>
  %124 = sub nsw <8 x i32> %120, %123
  %125 = icmp slt <8 x i32> %124, zeroinitializer
  %126 = sub nsw <8 x i32> zeroinitializer, %124
  %127 = select <8 x i1> %125, <8 x i32> %126, <8 x i32> %124
  %128 = shufflevector <8 x i32> %127, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %129 = add <8 x i32> %127, %128
  %130 = shufflevector <8 x i32> %129, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %131 = add <8 x i32> %129, %130
  %132 = shufflevector <8 x i32> %131, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %133 = add <8 x i32> %131, %132
  %134 = extractelement <8 x i32> %133, i32 0
  %135 = add i32 %134, %115
  %136 = getelementptr inbounds i16, i16* %116, i64 %17
  %137 = getelementptr inbounds [64 x i16], [64 x i16]* %6, i64 0, i64 48
  %138 = bitcast i16* %136 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2
  %140 = zext <8 x i16> %139 to <8 x i32>
  %141 = bitcast i16* %137 to <8 x i16>*
  %142 = load <8 x i16>, <8 x i16>* %141, align 16
  %143 = zext <8 x i16> %142 to <8 x i32>
  %144 = sub nsw <8 x i32> %140, %143
  %145 = icmp slt <8 x i32> %144, zeroinitializer
  %146 = sub nsw <8 x i32> zeroinitializer, %144
  %147 = select <8 x i1> %145, <8 x i32> %146, <8 x i32> %144
  %148 = shufflevector <8 x i32> %147, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %149 = add <8 x i32> %147, %148
  %150 = shufflevector <8 x i32> %149, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %151 = add <8 x i32> %149, %150
  %152 = shufflevector <8 x i32> %151, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %153 = add <8 x i32> %151, %152
  %154 = extractelement <8 x i32> %153, i32 0
  %155 = add i32 %154, %135
  %156 = getelementptr inbounds i16, i16* %136, i64 %17
  %157 = getelementptr inbounds [64 x i16], [64 x i16]* %6, i64 0, i64 56
  %158 = bitcast i16* %156 to <8 x i16>*
  %159 = load <8 x i16>, <8 x i16>* %158, align 2
  %160 = zext <8 x i16> %159 to <8 x i32>
  %161 = bitcast i16* %157 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 16
  %163 = zext <8 x i16> %162 to <8 x i32>
  %164 = sub nsw <8 x i32> %160, %163
  %165 = icmp slt <8 x i32> %164, zeroinitializer
  %166 = sub nsw <8 x i32> zeroinitializer, %164
  %167 = select <8 x i1> %165, <8 x i32> %166, <8 x i32> %164
  %168 = shufflevector <8 x i32> %167, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %169 = add <8 x i32> %167, %168
  %170 = shufflevector <8 x i32> %169, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %171 = add <8 x i32> %169, %170
  %172 = shufflevector <8 x i32> %171, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %173 = add <8 x i32> %171, %172
  %174 = extractelement <8 x i32> %173, i32 0
  %175 = add i32 %174, %155
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #5
  ret i32 %175
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_highbd_sad8x8x4d_c(i8*, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = load i8*, i8** %2, align 8
  %7 = tail call i32 @vpx_highbd_sad8x8_c(i8* %0, i32 %1, i8* %6, i32 %3)
  store i32 %7, i32* %4, align 4
  %8 = getelementptr inbounds i8*, i8** %2, i64 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @vpx_highbd_sad8x8_c(i8* %0, i32 %1, i8* %9, i32 %3)
  %11 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds i8*, i8** %2, i64 2
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i32 @vpx_highbd_sad8x8_c(i8* %0, i32 %1, i8* %13, i32 %3)
  %15 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i8*, i8** %2, i64 3
  %17 = load i8*, i8** %16, align 8
  %18 = tail call i32 @vpx_highbd_sad8x8_c(i8* %0, i32 %1, i8* %17, i32 %3)
  %19 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %18, i32* %19, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_highbd_sad8x4_c(i8*, i32, i8*, i32) local_unnamed_addr #0 {
  %5 = ptrtoint i8* %2 to i64
  %6 = shl i64 %5, 1
  %7 = ptrtoint i8* %0 to i64
  %8 = shl i64 %7, 1
  %9 = sext i32 %1 to i64
  %10 = sext i32 %3 to i64
  %11 = inttoptr i64 %6 to i16*
  %12 = inttoptr i64 %8 to i16*
  %13 = inttoptr i64 %8 to <8 x i16>*
  %14 = load <8 x i16>, <8 x i16>* %13, align 2
  %15 = zext <8 x i16> %14 to <8 x i32>
  %16 = inttoptr i64 %6 to <8 x i16>*
  %17 = load <8 x i16>, <8 x i16>* %16, align 2
  %18 = zext <8 x i16> %17 to <8 x i32>
  %19 = sub nsw <8 x i32> %15, %18
  %20 = icmp slt <8 x i32> %19, zeroinitializer
  %21 = sub nsw <8 x i32> zeroinitializer, %19
  %22 = select <8 x i1> %20, <8 x i32> %21, <8 x i32> %19
  %23 = shufflevector <8 x i32> %22, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %24 = add <8 x i32> %22, %23
  %25 = shufflevector <8 x i32> %24, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %26 = add <8 x i32> %24, %25
  %27 = shufflevector <8 x i32> %26, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %28 = add <8 x i32> %26, %27
  %29 = extractelement <8 x i32> %28, i32 0
  %30 = getelementptr inbounds i16, i16* %12, i64 %9
  %31 = getelementptr inbounds i16, i16* %11, i64 %10
  %32 = bitcast i16* %30 to <8 x i16>*
  %33 = load <8 x i16>, <8 x i16>* %32, align 2
  %34 = zext <8 x i16> %33 to <8 x i32>
  %35 = bitcast i16* %31 to <8 x i16>*
  %36 = load <8 x i16>, <8 x i16>* %35, align 2
  %37 = zext <8 x i16> %36 to <8 x i32>
  %38 = sub nsw <8 x i32> %34, %37
  %39 = icmp slt <8 x i32> %38, zeroinitializer
  %40 = sub nsw <8 x i32> zeroinitializer, %38
  %41 = select <8 x i1> %39, <8 x i32> %40, <8 x i32> %38
  %42 = shufflevector <8 x i32> %41, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %43 = add <8 x i32> %41, %42
  %44 = shufflevector <8 x i32> %43, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %45 = add <8 x i32> %43, %44
  %46 = shufflevector <8 x i32> %45, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %47 = add <8 x i32> %45, %46
  %48 = extractelement <8 x i32> %47, i32 0
  %49 = add i32 %48, %29
  %50 = getelementptr inbounds i16, i16* %30, i64 %9
  %51 = getelementptr inbounds i16, i16* %31, i64 %10
  %52 = bitcast i16* %50 to <8 x i16>*
  %53 = load <8 x i16>, <8 x i16>* %52, align 2
  %54 = zext <8 x i16> %53 to <8 x i32>
  %55 = bitcast i16* %51 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2
  %57 = zext <8 x i16> %56 to <8 x i32>
  %58 = sub nsw <8 x i32> %54, %57
  %59 = icmp slt <8 x i32> %58, zeroinitializer
  %60 = sub nsw <8 x i32> zeroinitializer, %58
  %61 = select <8 x i1> %59, <8 x i32> %60, <8 x i32> %58
  %62 = shufflevector <8 x i32> %61, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %63 = add <8 x i32> %61, %62
  %64 = shufflevector <8 x i32> %63, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %65 = add <8 x i32> %63, %64
  %66 = shufflevector <8 x i32> %65, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %67 = add <8 x i32> %65, %66
  %68 = extractelement <8 x i32> %67, i32 0
  %69 = add i32 %68, %49
  %70 = getelementptr inbounds i16, i16* %50, i64 %9
  %71 = getelementptr inbounds i16, i16* %51, i64 %10
  %72 = bitcast i16* %70 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2
  %74 = zext <8 x i16> %73 to <8 x i32>
  %75 = bitcast i16* %71 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2
  %77 = zext <8 x i16> %76 to <8 x i32>
  %78 = sub nsw <8 x i32> %74, %77
  %79 = icmp slt <8 x i32> %78, zeroinitializer
  %80 = sub nsw <8 x i32> zeroinitializer, %78
  %81 = select <8 x i1> %79, <8 x i32> %80, <8 x i32> %78
  %82 = shufflevector <8 x i32> %81, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %83 = add <8 x i32> %81, %82
  %84 = shufflevector <8 x i32> %83, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %85 = add <8 x i32> %83, %84
  %86 = shufflevector <8 x i32> %85, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %87 = add <8 x i32> %85, %86
  %88 = extractelement <8 x i32> %87, i32 0
  %89 = add i32 %88, %69
  ret i32 %89
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_highbd_sad8x4_avg_c(i8*, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [32 x i16], align 16
  %7 = bitcast [32 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 64, i1 false)
  %8 = getelementptr inbounds [32 x i16], [32 x i16]* %6, i64 0, i64 0
  %9 = ptrtoint i8* %4 to i64
  %10 = shl i64 %9, 1
  %11 = inttoptr i64 %10 to i16*
  %12 = ptrtoint i8* %2 to i64
  %13 = shl i64 %12, 1
  %14 = inttoptr i64 %13 to i16*
  call void @vpx_highbd_comp_avg_pred_c(i16* nonnull %8, i16* %11, i32 8, i32 4, i16* %14, i32 %3) #5
  %15 = ptrtoint i8* %0 to i64
  %16 = shl i64 %15, 1
  %17 = sext i32 %1 to i64
  %18 = inttoptr i64 %16 to i16*
  %19 = inttoptr i64 %16 to <8 x i16>*
  %20 = load <8 x i16>, <8 x i16>* %19, align 2
  %21 = zext <8 x i16> %20 to <8 x i32>
  %22 = bitcast [32 x i16]* %6 to <8 x i16>*
  %23 = load <8 x i16>, <8 x i16>* %22, align 16
  %24 = zext <8 x i16> %23 to <8 x i32>
  %25 = sub nsw <8 x i32> %21, %24
  %26 = icmp slt <8 x i32> %25, zeroinitializer
  %27 = sub nsw <8 x i32> zeroinitializer, %25
  %28 = select <8 x i1> %26, <8 x i32> %27, <8 x i32> %25
  %29 = shufflevector <8 x i32> %28, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %30 = add <8 x i32> %28, %29
  %31 = shufflevector <8 x i32> %30, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %32 = add <8 x i32> %30, %31
  %33 = shufflevector <8 x i32> %32, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %34 = add <8 x i32> %32, %33
  %35 = extractelement <8 x i32> %34, i32 0
  %36 = getelementptr inbounds i16, i16* %18, i64 %17
  %37 = getelementptr inbounds [32 x i16], [32 x i16]* %6, i64 0, i64 8
  %38 = bitcast i16* %36 to <8 x i16>*
  %39 = load <8 x i16>, <8 x i16>* %38, align 2
  %40 = zext <8 x i16> %39 to <8 x i32>
  %41 = bitcast i16* %37 to <8 x i16>*
  %42 = load <8 x i16>, <8 x i16>* %41, align 16
  %43 = zext <8 x i16> %42 to <8 x i32>
  %44 = sub nsw <8 x i32> %40, %43
  %45 = icmp slt <8 x i32> %44, zeroinitializer
  %46 = sub nsw <8 x i32> zeroinitializer, %44
  %47 = select <8 x i1> %45, <8 x i32> %46, <8 x i32> %44
  %48 = shufflevector <8 x i32> %47, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %49 = add <8 x i32> %47, %48
  %50 = shufflevector <8 x i32> %49, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %51 = add <8 x i32> %49, %50
  %52 = shufflevector <8 x i32> %51, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %53 = add <8 x i32> %51, %52
  %54 = extractelement <8 x i32> %53, i32 0
  %55 = add i32 %54, %35
  %56 = getelementptr inbounds i16, i16* %36, i64 %17
  %57 = getelementptr inbounds [32 x i16], [32 x i16]* %6, i64 0, i64 16
  %58 = bitcast i16* %56 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2
  %60 = zext <8 x i16> %59 to <8 x i32>
  %61 = bitcast i16* %57 to <8 x i16>*
  %62 = load <8 x i16>, <8 x i16>* %61, align 16
  %63 = zext <8 x i16> %62 to <8 x i32>
  %64 = sub nsw <8 x i32> %60, %63
  %65 = icmp slt <8 x i32> %64, zeroinitializer
  %66 = sub nsw <8 x i32> zeroinitializer, %64
  %67 = select <8 x i1> %65, <8 x i32> %66, <8 x i32> %64
  %68 = shufflevector <8 x i32> %67, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %69 = add <8 x i32> %67, %68
  %70 = shufflevector <8 x i32> %69, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %71 = add <8 x i32> %69, %70
  %72 = shufflevector <8 x i32> %71, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %73 = add <8 x i32> %71, %72
  %74 = extractelement <8 x i32> %73, i32 0
  %75 = add i32 %74, %55
  %76 = getelementptr inbounds i16, i16* %56, i64 %17
  %77 = getelementptr inbounds [32 x i16], [32 x i16]* %6, i64 0, i64 24
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2
  %80 = zext <8 x i16> %79 to <8 x i32>
  %81 = bitcast i16* %77 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 16
  %83 = zext <8 x i16> %82 to <8 x i32>
  %84 = sub nsw <8 x i32> %80, %83
  %85 = icmp slt <8 x i32> %84, zeroinitializer
  %86 = sub nsw <8 x i32> zeroinitializer, %84
  %87 = select <8 x i1> %85, <8 x i32> %86, <8 x i32> %84
  %88 = shufflevector <8 x i32> %87, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %89 = add <8 x i32> %87, %88
  %90 = shufflevector <8 x i32> %89, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %91 = add <8 x i32> %89, %90
  %92 = shufflevector <8 x i32> %91, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %93 = add <8 x i32> %91, %92
  %94 = extractelement <8 x i32> %93, i32 0
  %95 = add i32 %94, %75
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #5
  ret i32 %95
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_highbd_sad8x4x4d_c(i8*, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = load i8*, i8** %2, align 8
  %7 = tail call i32 @vpx_highbd_sad8x4_c(i8* %0, i32 %1, i8* %6, i32 %3)
  store i32 %7, i32* %4, align 4
  %8 = getelementptr inbounds i8*, i8** %2, i64 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @vpx_highbd_sad8x4_c(i8* %0, i32 %1, i8* %9, i32 %3)
  %11 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds i8*, i8** %2, i64 2
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i32 @vpx_highbd_sad8x4_c(i8* %0, i32 %1, i8* %13, i32 %3)
  %15 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i8*, i8** %2, i64 3
  %17 = load i8*, i8** %16, align 8
  %18 = tail call i32 @vpx_highbd_sad8x4_c(i8* %0, i32 %1, i8* %17, i32 %3)
  %19 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %18, i32* %19, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_highbd_sad4x8_c(i8*, i32, i8*, i32) local_unnamed_addr #0 {
  %5 = ptrtoint i8* %2 to i64
  %6 = shl i64 %5, 1
  %7 = ptrtoint i8* %0 to i64
  %8 = shl i64 %7, 1
  %9 = sext i32 %1 to i64
  %10 = sext i32 %3 to i64
  %11 = inttoptr i64 %6 to i16*
  %12 = inttoptr i64 %8 to i16*
  %13 = inttoptr i64 %8 to <4 x i16>*
  %14 = load <4 x i16>, <4 x i16>* %13, align 2
  %15 = zext <4 x i16> %14 to <4 x i32>
  %16 = inttoptr i64 %6 to <4 x i16>*
  %17 = load <4 x i16>, <4 x i16>* %16, align 2
  %18 = zext <4 x i16> %17 to <4 x i32>
  %19 = sub nsw <4 x i32> %15, %18
  %20 = icmp slt <4 x i32> %19, zeroinitializer
  %21 = sub nsw <4 x i32> zeroinitializer, %19
  %22 = select <4 x i1> %20, <4 x i32> %21, <4 x i32> %19
  %23 = shufflevector <4 x i32> %22, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %24 = add <4 x i32> %22, %23
  %25 = shufflevector <4 x i32> %24, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %26 = add <4 x i32> %24, %25
  %27 = extractelement <4 x i32> %26, i32 0
  %28 = getelementptr inbounds i16, i16* %12, i64 %9
  %29 = getelementptr inbounds i16, i16* %11, i64 %10
  %30 = bitcast i16* %28 to <4 x i16>*
  %31 = load <4 x i16>, <4 x i16>* %30, align 2
  %32 = zext <4 x i16> %31 to <4 x i32>
  %33 = bitcast i16* %29 to <4 x i16>*
  %34 = load <4 x i16>, <4 x i16>* %33, align 2
  %35 = zext <4 x i16> %34 to <4 x i32>
  %36 = sub nsw <4 x i32> %32, %35
  %37 = icmp slt <4 x i32> %36, zeroinitializer
  %38 = sub nsw <4 x i32> zeroinitializer, %36
  %39 = select <4 x i1> %37, <4 x i32> %38, <4 x i32> %36
  %40 = shufflevector <4 x i32> %39, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %41 = add <4 x i32> %39, %40
  %42 = shufflevector <4 x i32> %41, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %43 = add <4 x i32> %41, %42
  %44 = extractelement <4 x i32> %43, i32 0
  %45 = add i32 %44, %27
  %46 = getelementptr inbounds i16, i16* %28, i64 %9
  %47 = getelementptr inbounds i16, i16* %29, i64 %10
  %48 = bitcast i16* %46 to <4 x i16>*
  %49 = load <4 x i16>, <4 x i16>* %48, align 2
  %50 = zext <4 x i16> %49 to <4 x i32>
  %51 = bitcast i16* %47 to <4 x i16>*
  %52 = load <4 x i16>, <4 x i16>* %51, align 2
  %53 = zext <4 x i16> %52 to <4 x i32>
  %54 = sub nsw <4 x i32> %50, %53
  %55 = icmp slt <4 x i32> %54, zeroinitializer
  %56 = sub nsw <4 x i32> zeroinitializer, %54
  %57 = select <4 x i1> %55, <4 x i32> %56, <4 x i32> %54
  %58 = shufflevector <4 x i32> %57, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %59 = add <4 x i32> %57, %58
  %60 = shufflevector <4 x i32> %59, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %61 = add <4 x i32> %59, %60
  %62 = extractelement <4 x i32> %61, i32 0
  %63 = add i32 %62, %45
  %64 = getelementptr inbounds i16, i16* %46, i64 %9
  %65 = getelementptr inbounds i16, i16* %47, i64 %10
  %66 = bitcast i16* %64 to <4 x i16>*
  %67 = load <4 x i16>, <4 x i16>* %66, align 2
  %68 = zext <4 x i16> %67 to <4 x i32>
  %69 = bitcast i16* %65 to <4 x i16>*
  %70 = load <4 x i16>, <4 x i16>* %69, align 2
  %71 = zext <4 x i16> %70 to <4 x i32>
  %72 = sub nsw <4 x i32> %68, %71
  %73 = icmp slt <4 x i32> %72, zeroinitializer
  %74 = sub nsw <4 x i32> zeroinitializer, %72
  %75 = select <4 x i1> %73, <4 x i32> %74, <4 x i32> %72
  %76 = shufflevector <4 x i32> %75, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %77 = add <4 x i32> %75, %76
  %78 = shufflevector <4 x i32> %77, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %79 = add <4 x i32> %77, %78
  %80 = extractelement <4 x i32> %79, i32 0
  %81 = add i32 %80, %63
  %82 = getelementptr inbounds i16, i16* %64, i64 %9
  %83 = getelementptr inbounds i16, i16* %65, i64 %10
  %84 = bitcast i16* %82 to <4 x i16>*
  %85 = load <4 x i16>, <4 x i16>* %84, align 2
  %86 = zext <4 x i16> %85 to <4 x i32>
  %87 = bitcast i16* %83 to <4 x i16>*
  %88 = load <4 x i16>, <4 x i16>* %87, align 2
  %89 = zext <4 x i16> %88 to <4 x i32>
  %90 = sub nsw <4 x i32> %86, %89
  %91 = icmp slt <4 x i32> %90, zeroinitializer
  %92 = sub nsw <4 x i32> zeroinitializer, %90
  %93 = select <4 x i1> %91, <4 x i32> %92, <4 x i32> %90
  %94 = shufflevector <4 x i32> %93, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %95 = add <4 x i32> %93, %94
  %96 = shufflevector <4 x i32> %95, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %97 = add <4 x i32> %95, %96
  %98 = extractelement <4 x i32> %97, i32 0
  %99 = add i32 %98, %81
  %100 = getelementptr inbounds i16, i16* %82, i64 %9
  %101 = getelementptr inbounds i16, i16* %83, i64 %10
  %102 = bitcast i16* %100 to <4 x i16>*
  %103 = load <4 x i16>, <4 x i16>* %102, align 2
  %104 = zext <4 x i16> %103 to <4 x i32>
  %105 = bitcast i16* %101 to <4 x i16>*
  %106 = load <4 x i16>, <4 x i16>* %105, align 2
  %107 = zext <4 x i16> %106 to <4 x i32>
  %108 = sub nsw <4 x i32> %104, %107
  %109 = icmp slt <4 x i32> %108, zeroinitializer
  %110 = sub nsw <4 x i32> zeroinitializer, %108
  %111 = select <4 x i1> %109, <4 x i32> %110, <4 x i32> %108
  %112 = shufflevector <4 x i32> %111, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %113 = add <4 x i32> %111, %112
  %114 = shufflevector <4 x i32> %113, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %115 = add <4 x i32> %113, %114
  %116 = extractelement <4 x i32> %115, i32 0
  %117 = add i32 %116, %99
  %118 = getelementptr inbounds i16, i16* %100, i64 %9
  %119 = getelementptr inbounds i16, i16* %101, i64 %10
  %120 = bitcast i16* %118 to <4 x i16>*
  %121 = load <4 x i16>, <4 x i16>* %120, align 2
  %122 = zext <4 x i16> %121 to <4 x i32>
  %123 = bitcast i16* %119 to <4 x i16>*
  %124 = load <4 x i16>, <4 x i16>* %123, align 2
  %125 = zext <4 x i16> %124 to <4 x i32>
  %126 = sub nsw <4 x i32> %122, %125
  %127 = icmp slt <4 x i32> %126, zeroinitializer
  %128 = sub nsw <4 x i32> zeroinitializer, %126
  %129 = select <4 x i1> %127, <4 x i32> %128, <4 x i32> %126
  %130 = shufflevector <4 x i32> %129, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %131 = add <4 x i32> %129, %130
  %132 = shufflevector <4 x i32> %131, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %133 = add <4 x i32> %131, %132
  %134 = extractelement <4 x i32> %133, i32 0
  %135 = add i32 %134, %117
  %136 = getelementptr inbounds i16, i16* %118, i64 %9
  %137 = getelementptr inbounds i16, i16* %119, i64 %10
  %138 = bitcast i16* %136 to <4 x i16>*
  %139 = load <4 x i16>, <4 x i16>* %138, align 2
  %140 = zext <4 x i16> %139 to <4 x i32>
  %141 = bitcast i16* %137 to <4 x i16>*
  %142 = load <4 x i16>, <4 x i16>* %141, align 2
  %143 = zext <4 x i16> %142 to <4 x i32>
  %144 = sub nsw <4 x i32> %140, %143
  %145 = icmp slt <4 x i32> %144, zeroinitializer
  %146 = sub nsw <4 x i32> zeroinitializer, %144
  %147 = select <4 x i1> %145, <4 x i32> %146, <4 x i32> %144
  %148 = shufflevector <4 x i32> %147, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %149 = add <4 x i32> %147, %148
  %150 = shufflevector <4 x i32> %149, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %151 = add <4 x i32> %149, %150
  %152 = extractelement <4 x i32> %151, i32 0
  %153 = add i32 %152, %135
  ret i32 %153
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_highbd_sad4x8_avg_c(i8*, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca [32 x i16], align 16
  %7 = bitcast [32 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 64, i1 false)
  %8 = getelementptr inbounds [32 x i16], [32 x i16]* %6, i64 0, i64 0
  %9 = ptrtoint i8* %4 to i64
  %10 = shl i64 %9, 1
  %11 = inttoptr i64 %10 to i16*
  %12 = ptrtoint i8* %2 to i64
  %13 = shl i64 %12, 1
  %14 = inttoptr i64 %13 to i16*
  call void @vpx_highbd_comp_avg_pred_c(i16* nonnull %8, i16* %11, i32 4, i32 8, i16* %14, i32 %3) #5
  %15 = ptrtoint i8* %0 to i64
  %16 = shl i64 %15, 1
  %17 = sext i32 %1 to i64
  %18 = inttoptr i64 %16 to i16*
  %19 = inttoptr i64 %16 to <4 x i16>*
  %20 = load <4 x i16>, <4 x i16>* %19, align 2
  %21 = zext <4 x i16> %20 to <4 x i32>
  %22 = bitcast [32 x i16]* %6 to <4 x i16>*
  %23 = load <4 x i16>, <4 x i16>* %22, align 16
  %24 = zext <4 x i16> %23 to <4 x i32>
  %25 = sub nsw <4 x i32> %21, %24
  %26 = icmp slt <4 x i32> %25, zeroinitializer
  %27 = sub nsw <4 x i32> zeroinitializer, %25
  %28 = select <4 x i1> %26, <4 x i32> %27, <4 x i32> %25
  %29 = shufflevector <4 x i32> %28, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %30 = add <4 x i32> %28, %29
  %31 = shufflevector <4 x i32> %30, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %32 = add <4 x i32> %30, %31
  %33 = extractelement <4 x i32> %32, i32 0
  %34 = getelementptr inbounds i16, i16* %18, i64 %17
  %35 = getelementptr inbounds [32 x i16], [32 x i16]* %6, i64 0, i64 4
  %36 = bitcast i16* %34 to <4 x i16>*
  %37 = load <4 x i16>, <4 x i16>* %36, align 2
  %38 = zext <4 x i16> %37 to <4 x i32>
  %39 = bitcast i16* %35 to <4 x i16>*
  %40 = load <4 x i16>, <4 x i16>* %39, align 8
  %41 = zext <4 x i16> %40 to <4 x i32>
  %42 = sub nsw <4 x i32> %38, %41
  %43 = icmp slt <4 x i32> %42, zeroinitializer
  %44 = sub nsw <4 x i32> zeroinitializer, %42
  %45 = select <4 x i1> %43, <4 x i32> %44, <4 x i32> %42
  %46 = shufflevector <4 x i32> %45, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %47 = add <4 x i32> %45, %46
  %48 = shufflevector <4 x i32> %47, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %49 = add <4 x i32> %47, %48
  %50 = extractelement <4 x i32> %49, i32 0
  %51 = add i32 %50, %33
  %52 = getelementptr inbounds i16, i16* %34, i64 %17
  %53 = getelementptr inbounds [32 x i16], [32 x i16]* %6, i64 0, i64 8
  %54 = bitcast i16* %52 to <4 x i16>*
  %55 = load <4 x i16>, <4 x i16>* %54, align 2
  %56 = zext <4 x i16> %55 to <4 x i32>
  %57 = bitcast i16* %53 to <4 x i16>*
  %58 = load <4 x i16>, <4 x i16>* %57, align 16
  %59 = zext <4 x i16> %58 to <4 x i32>
  %60 = sub nsw <4 x i32> %56, %59
  %61 = icmp slt <4 x i32> %60, zeroinitializer
  %62 = sub nsw <4 x i32> zeroinitializer, %60
  %63 = select <4 x i1> %61, <4 x i32> %62, <4 x i32> %60
  %64 = shufflevector <4 x i32> %63, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %65 = add <4 x i32> %63, %64
  %66 = shufflevector <4 x i32> %65, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %67 = add <4 x i32> %65, %66
  %68 = extractelement <4 x i32> %67, i32 0
  %69 = add i32 %68, %51
  %70 = getelementptr inbounds i16, i16* %52, i64 %17
  %71 = getelementptr inbounds [32 x i16], [32 x i16]* %6, i64 0, i64 12
  %72 = bitcast i16* %70 to <4 x i16>*
  %73 = load <4 x i16>, <4 x i16>* %72, align 2
  %74 = zext <4 x i16> %73 to <4 x i32>
  %75 = bitcast i16* %71 to <4 x i16>*
  %76 = load <4 x i16>, <4 x i16>* %75, align 8
  %77 = zext <4 x i16> %76 to <4 x i32>
  %78 = sub nsw <4 x i32> %74, %77
  %79 = icmp slt <4 x i32> %78, zeroinitializer
  %80 = sub nsw <4 x i32> zeroinitializer, %78
  %81 = select <4 x i1> %79, <4 x i32> %80, <4 x i32> %78
  %82 = shufflevector <4 x i32> %81, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %83 = add <4 x i32> %81, %82
  %84 = shufflevector <4 x i32> %83, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %85 = add <4 x i32> %83, %84
  %86 = extractelement <4 x i32> %85, i32 0
  %87 = add i32 %86, %69
  %88 = getelementptr inbounds i16, i16* %70, i64 %17
  %89 = getelementptr inbounds [32 x i16], [32 x i16]* %6, i64 0, i64 16
  %90 = bitcast i16* %88 to <4 x i16>*
  %91 = load <4 x i16>, <4 x i16>* %90, align 2
  %92 = zext <4 x i16> %91 to <4 x i32>
  %93 = bitcast i16* %89 to <4 x i16>*
  %94 = load <4 x i16>, <4 x i16>* %93, align 16
  %95 = zext <4 x i16> %94 to <4 x i32>
  %96 = sub nsw <4 x i32> %92, %95
  %97 = icmp slt <4 x i32> %96, zeroinitializer
  %98 = sub nsw <4 x i32> zeroinitializer, %96
  %99 = select <4 x i1> %97, <4 x i32> %98, <4 x i32> %96
  %100 = shufflevector <4 x i32> %99, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %101 = add <4 x i32> %99, %100
  %102 = shufflevector <4 x i32> %101, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %103 = add <4 x i32> %101, %102
  %104 = extractelement <4 x i32> %103, i32 0
  %105 = add i32 %104, %87
  %106 = getelementptr inbounds i16, i16* %88, i64 %17
  %107 = getelementptr inbounds [32 x i16], [32 x i16]* %6, i64 0, i64 20
  %108 = bitcast i16* %106 to <4 x i16>*
  %109 = load <4 x i16>, <4 x i16>* %108, align 2
  %110 = zext <4 x i16> %109 to <4 x i32>
  %111 = bitcast i16* %107 to <4 x i16>*
  %112 = load <4 x i16>, <4 x i16>* %111, align 8
  %113 = zext <4 x i16> %112 to <4 x i32>
  %114 = sub nsw <4 x i32> %110, %113
  %115 = icmp slt <4 x i32> %114, zeroinitializer
  %116 = sub nsw <4 x i32> zeroinitializer, %114
  %117 = select <4 x i1> %115, <4 x i32> %116, <4 x i32> %114
  %118 = shufflevector <4 x i32> %117, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %119 = add <4 x i32> %117, %118
  %120 = shufflevector <4 x i32> %119, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %121 = add <4 x i32> %119, %120
  %122 = extractelement <4 x i32> %121, i32 0
  %123 = add i32 %122, %105
  %124 = getelementptr inbounds i16, i16* %106, i64 %17
  %125 = getelementptr inbounds [32 x i16], [32 x i16]* %6, i64 0, i64 24
  %126 = bitcast i16* %124 to <4 x i16>*
  %127 = load <4 x i16>, <4 x i16>* %126, align 2
  %128 = zext <4 x i16> %127 to <4 x i32>
  %129 = bitcast i16* %125 to <4 x i16>*
  %130 = load <4 x i16>, <4 x i16>* %129, align 16
  %131 = zext <4 x i16> %130 to <4 x i32>
  %132 = sub nsw <4 x i32> %128, %131
  %133 = icmp slt <4 x i32> %132, zeroinitializer
  %134 = sub nsw <4 x i32> zeroinitializer, %132
  %135 = select <4 x i1> %133, <4 x i32> %134, <4 x i32> %132
  %136 = shufflevector <4 x i32> %135, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %137 = add <4 x i32> %135, %136
  %138 = shufflevector <4 x i32> %137, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %139 = add <4 x i32> %137, %138
  %140 = extractelement <4 x i32> %139, i32 0
  %141 = add i32 %140, %123
  %142 = getelementptr inbounds i16, i16* %124, i64 %17
  %143 = getelementptr inbounds [32 x i16], [32 x i16]* %6, i64 0, i64 28
  %144 = bitcast i16* %142 to <4 x i16>*
  %145 = load <4 x i16>, <4 x i16>* %144, align 2
  %146 = zext <4 x i16> %145 to <4 x i32>
  %147 = bitcast i16* %143 to <4 x i16>*
  %148 = load <4 x i16>, <4 x i16>* %147, align 8
  %149 = zext <4 x i16> %148 to <4 x i32>
  %150 = sub nsw <4 x i32> %146, %149
  %151 = icmp slt <4 x i32> %150, zeroinitializer
  %152 = sub nsw <4 x i32> zeroinitializer, %150
  %153 = select <4 x i1> %151, <4 x i32> %152, <4 x i32> %150
  %154 = shufflevector <4 x i32> %153, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %155 = add <4 x i32> %153, %154
  %156 = shufflevector <4 x i32> %155, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %157 = add <4 x i32> %155, %156
  %158 = extractelement <4 x i32> %157, i32 0
  %159 = add i32 %158, %141
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #5
  ret i32 %159
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_highbd_sad4x8x4d_c(i8*, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = ptrtoint i8* %0 to i64
  %7 = shl i64 %6, 1
  %8 = inttoptr i64 %7 to i16*
  %9 = sext i32 %1 to i64
  %10 = sext i32 %3 to i64
  %11 = inttoptr i64 %7 to <4 x i16>*
  %12 = getelementptr inbounds i16, i16* %8, i64 %9
  %13 = bitcast i16* %12 to <4 x i16>*
  %14 = getelementptr inbounds i16, i16* %12, i64 %9
  %15 = bitcast i16* %14 to <4 x i16>*
  %16 = getelementptr inbounds i16, i16* %14, i64 %9
  %17 = bitcast i16* %16 to <4 x i16>*
  %18 = getelementptr inbounds i16, i16* %16, i64 %9
  %19 = bitcast i16* %18 to <4 x i16>*
  %20 = getelementptr inbounds i16, i16* %18, i64 %9
  %21 = bitcast i16* %20 to <4 x i16>*
  %22 = getelementptr inbounds i16, i16* %20, i64 %9
  %23 = bitcast i16* %22 to <4 x i16>*
  %24 = getelementptr inbounds i16, i16* %22, i64 %9
  %25 = bitcast i16* %24 to <4 x i16>*
  br label %26

26:                                               ; preds = %26, %5
  %27 = phi i64 [ 0, %5 ], [ %160, %26 ]
  %28 = getelementptr inbounds i8*, i8** %2, i64 %27
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = shl i64 %30, 1
  %32 = inttoptr i64 %31 to i16*
  %33 = load <4 x i16>, <4 x i16>* %11, align 2
  %34 = zext <4 x i16> %33 to <4 x i32>
  %35 = inttoptr i64 %31 to <4 x i16>*
  %36 = load <4 x i16>, <4 x i16>* %35, align 2
  %37 = zext <4 x i16> %36 to <4 x i32>
  %38 = sub nsw <4 x i32> %34, %37
  %39 = icmp slt <4 x i32> %38, zeroinitializer
  %40 = sub nsw <4 x i32> zeroinitializer, %38
  %41 = select <4 x i1> %39, <4 x i32> %40, <4 x i32> %38
  %42 = shufflevector <4 x i32> %41, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %43 = add <4 x i32> %41, %42
  %44 = shufflevector <4 x i32> %43, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %45 = add <4 x i32> %43, %44
  %46 = extractelement <4 x i32> %45, i32 0
  %47 = getelementptr inbounds i16, i16* %32, i64 %10
  %48 = load <4 x i16>, <4 x i16>* %13, align 2
  %49 = zext <4 x i16> %48 to <4 x i32>
  %50 = bitcast i16* %47 to <4 x i16>*
  %51 = load <4 x i16>, <4 x i16>* %50, align 2
  %52 = zext <4 x i16> %51 to <4 x i32>
  %53 = sub nsw <4 x i32> %49, %52
  %54 = icmp slt <4 x i32> %53, zeroinitializer
  %55 = sub nsw <4 x i32> zeroinitializer, %53
  %56 = select <4 x i1> %54, <4 x i32> %55, <4 x i32> %53
  %57 = shufflevector <4 x i32> %56, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %58 = add <4 x i32> %56, %57
  %59 = shufflevector <4 x i32> %58, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %60 = add <4 x i32> %58, %59
  %61 = extractelement <4 x i32> %60, i32 0
  %62 = add i32 %61, %46
  %63 = getelementptr inbounds i16, i16* %47, i64 %10
  %64 = load <4 x i16>, <4 x i16>* %15, align 2
  %65 = zext <4 x i16> %64 to <4 x i32>
  %66 = bitcast i16* %63 to <4 x i16>*
  %67 = load <4 x i16>, <4 x i16>* %66, align 2
  %68 = zext <4 x i16> %67 to <4 x i32>
  %69 = sub nsw <4 x i32> %65, %68
  %70 = icmp slt <4 x i32> %69, zeroinitializer
  %71 = sub nsw <4 x i32> zeroinitializer, %69
  %72 = select <4 x i1> %70, <4 x i32> %71, <4 x i32> %69
  %73 = shufflevector <4 x i32> %72, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %74 = add <4 x i32> %72, %73
  %75 = shufflevector <4 x i32> %74, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %76 = add <4 x i32> %74, %75
  %77 = extractelement <4 x i32> %76, i32 0
  %78 = add i32 %77, %62
  %79 = getelementptr inbounds i16, i16* %63, i64 %10
  %80 = load <4 x i16>, <4 x i16>* %17, align 2
  %81 = zext <4 x i16> %80 to <4 x i32>
  %82 = bitcast i16* %79 to <4 x i16>*
  %83 = load <4 x i16>, <4 x i16>* %82, align 2
  %84 = zext <4 x i16> %83 to <4 x i32>
  %85 = sub nsw <4 x i32> %81, %84
  %86 = icmp slt <4 x i32> %85, zeroinitializer
  %87 = sub nsw <4 x i32> zeroinitializer, %85
  %88 = select <4 x i1> %86, <4 x i32> %87, <4 x i32> %85
  %89 = shufflevector <4 x i32> %88, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %90 = add <4 x i32> %88, %89
  %91 = shufflevector <4 x i32> %90, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %92 = add <4 x i32> %90, %91
  %93 = extractelement <4 x i32> %92, i32 0
  %94 = add i32 %93, %78
  %95 = getelementptr inbounds i16, i16* %79, i64 %10
  %96 = load <4 x i16>, <4 x i16>* %19, align 2
  %97 = zext <4 x i16> %96 to <4 x i32>
  %98 = bitcast i16* %95 to <4 x i16>*
  %99 = load <4 x i16>, <4 x i16>* %98, align 2
  %100 = zext <4 x i16> %99 to <4 x i32>
  %101 = sub nsw <4 x i32> %97, %100
  %102 = icmp slt <4 x i32> %101, zeroinitializer
  %103 = sub nsw <4 x i32> zeroinitializer, %101
  %104 = select <4 x i1> %102, <4 x i32> %103, <4 x i32> %101
  %105 = shufflevector <4 x i32> %104, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %106 = add <4 x i32> %104, %105
  %107 = shufflevector <4 x i32> %106, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %108 = add <4 x i32> %106, %107
  %109 = extractelement <4 x i32> %108, i32 0
  %110 = add i32 %109, %94
  %111 = getelementptr inbounds i16, i16* %95, i64 %10
  %112 = load <4 x i16>, <4 x i16>* %21, align 2
  %113 = zext <4 x i16> %112 to <4 x i32>
  %114 = bitcast i16* %111 to <4 x i16>*
  %115 = load <4 x i16>, <4 x i16>* %114, align 2
  %116 = zext <4 x i16> %115 to <4 x i32>
  %117 = sub nsw <4 x i32> %113, %116
  %118 = icmp slt <4 x i32> %117, zeroinitializer
  %119 = sub nsw <4 x i32> zeroinitializer, %117
  %120 = select <4 x i1> %118, <4 x i32> %119, <4 x i32> %117
  %121 = shufflevector <4 x i32> %120, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %122 = add <4 x i32> %120, %121
  %123 = shufflevector <4 x i32> %122, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %124 = add <4 x i32> %122, %123
  %125 = extractelement <4 x i32> %124, i32 0
  %126 = add i32 %125, %110
  %127 = getelementptr inbounds i16, i16* %111, i64 %10
  %128 = load <4 x i16>, <4 x i16>* %23, align 2
  %129 = zext <4 x i16> %128 to <4 x i32>
  %130 = bitcast i16* %127 to <4 x i16>*
  %131 = load <4 x i16>, <4 x i16>* %130, align 2
  %132 = zext <4 x i16> %131 to <4 x i32>
  %133 = sub nsw <4 x i32> %129, %132
  %134 = icmp slt <4 x i32> %133, zeroinitializer
  %135 = sub nsw <4 x i32> zeroinitializer, %133
  %136 = select <4 x i1> %134, <4 x i32> %135, <4 x i32> %133
  %137 = shufflevector <4 x i32> %136, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %138 = add <4 x i32> %136, %137
  %139 = shufflevector <4 x i32> %138, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %140 = add <4 x i32> %138, %139
  %141 = extractelement <4 x i32> %140, i32 0
  %142 = add i32 %141, %126
  %143 = getelementptr inbounds i16, i16* %127, i64 %10
  %144 = load <4 x i16>, <4 x i16>* %25, align 2
  %145 = zext <4 x i16> %144 to <4 x i32>
  %146 = bitcast i16* %143 to <4 x i16>*
  %147 = load <4 x i16>, <4 x i16>* %146, align 2
  %148 = zext <4 x i16> %147 to <4 x i32>
  %149 = sub nsw <4 x i32> %145, %148
  %150 = icmp slt <4 x i32> %149, zeroinitializer
  %151 = sub nsw <4 x i32> zeroinitializer, %149
  %152 = select <4 x i1> %150, <4 x i32> %151, <4 x i32> %149
  %153 = shufflevector <4 x i32> %152, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %154 = add <4 x i32> %152, %153
  %155 = shufflevector <4 x i32> %154, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %156 = add <4 x i32> %154, %155
  %157 = extractelement <4 x i32> %156, i32 0
  %158 = add i32 %157, %142
  %159 = getelementptr inbounds i32, i32* %4, i64 %27
  store i32 %158, i32* %159, align 4
  %160 = add nuw nsw i64 %27, 1
  %161 = icmp eq i64 %160, 4
  br i1 %161, label %162, label %26

162:                                              ; preds = %26
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @vpx_highbd_sad4x4_c(i8*, i32, i8*, i32) local_unnamed_addr #0 {
  %5 = ptrtoint i8* %2 to i64
  %6 = shl i64 %5, 1
  %7 = inttoptr i64 %6 to i16*
  %8 = ptrtoint i8* %0 to i64
  %9 = shl i64 %8, 1
  %10 = inttoptr i64 %9 to i16*
  %11 = sext i32 %1 to i64
  %12 = sext i32 %3 to i64
  %13 = load i16, i16* %10, align 2
  %14 = load i16, i16* %7, align 2
  %15 = getelementptr inbounds i16, i16* %10, i64 1
  %16 = load i16, i16* %15, align 2
  %17 = getelementptr inbounds i16, i16* %7, i64 1
  %18 = load i16, i16* %17, align 2
  %19 = getelementptr inbounds i16, i16* %10, i64 2
  %20 = load i16, i16* %19, align 2
  %21 = getelementptr inbounds i16, i16* %7, i64 2
  %22 = load i16, i16* %21, align 2
  %23 = getelementptr inbounds i16, i16* %10, i64 3
  %24 = load i16, i16* %23, align 2
  %25 = getelementptr inbounds i16, i16* %7, i64 3
  %26 = load i16, i16* %25, align 2
  %27 = getelementptr inbounds i16, i16* %10, i64 %11
  %28 = getelementptr inbounds i16, i16* %7, i64 %12
  %29 = load i16, i16* %27, align 2
  %30 = load i16, i16* %28, align 2
  %31 = getelementptr inbounds i16, i16* %27, i64 1
  %32 = load i16, i16* %31, align 2
  %33 = getelementptr inbounds i16, i16* %28, i64 1
  %34 = load i16, i16* %33, align 2
  %35 = getelementptr inbounds i16, i16* %27, i64 2
  %36 = load i16, i16* %35, align 2
  %37 = getelementptr inbounds i16, i16* %28, i64 2
  %38 = load i16, i16* %37, align 2
  %39 = getelementptr inbounds i16, i16* %27, i64 3
  %40 = load i16, i16* %39, align 2
  %41 = getelementptr inbounds i16, i16* %28, i64 3
  %42 = load i16, i16* %41, align 2
  %43 = getelementptr inbounds i16, i16* %27, i64 %11
  %44 = getelementptr inbounds i16, i16* %28, i64 %12
  %45 = load i16, i16* %43, align 2
  %46 = load i16, i16* %44, align 2
  %47 = getelementptr inbounds i16, i16* %43, i64 1
  %48 = load i16, i16* %47, align 2
  %49 = getelementptr inbounds i16, i16* %44, i64 1
  %50 = load i16, i16* %49, align 2
  %51 = getelementptr inbounds i16, i16* %43, i64 2
  %52 = load i16, i16* %51, align 2
  %53 = getelementptr inbounds i16, i16* %44, i64 2
  %54 = load i16, i16* %53, align 2
  %55 = getelementptr inbounds i16, i16* %43, i64 3
  %56 = load i16, i16* %55, align 2
  %57 = getelementptr inbounds i16, i16* %44, i64 3
  %58 = load i16, i16* %57, align 2
  %59 = getelementptr inbounds i16, i16* %43, i64 %11
  %60 = getelementptr inbounds i16, i16* %44, i64 %12
  %61 = bitcast i16* %59 to <4 x i16>*
  %62 = load <4 x i16>, <4 x i16>* %61, align 2
  %63 = extractelement <4 x i16> %62, i32 3
  %64 = insertelement <16 x i16> undef, i16 %63, i32 0
  %65 = extractelement <4 x i16> %62, i32 2
  %66 = insertelement <16 x i16> %64, i16 %65, i32 1
  %67 = extractelement <4 x i16> %62, i32 1
  %68 = insertelement <16 x i16> %66, i16 %67, i32 2
  %69 = extractelement <4 x i16> %62, i32 0
  %70 = insertelement <16 x i16> %68, i16 %69, i32 3
  %71 = insertelement <16 x i16> %70, i16 %56, i32 4
  %72 = insertelement <16 x i16> %71, i16 %52, i32 5
  %73 = insertelement <16 x i16> %72, i16 %48, i32 6
  %74 = insertelement <16 x i16> %73, i16 %45, i32 7
  %75 = insertelement <16 x i16> %74, i16 %40, i32 8
  %76 = insertelement <16 x i16> %75, i16 %36, i32 9
  %77 = insertelement <16 x i16> %76, i16 %32, i32 10
  %78 = insertelement <16 x i16> %77, i16 %29, i32 11
  %79 = insertelement <16 x i16> %78, i16 %24, i32 12
  %80 = insertelement <16 x i16> %79, i16 %20, i32 13
  %81 = insertelement <16 x i16> %80, i16 %16, i32 14
  %82 = insertelement <16 x i16> %81, i16 %13, i32 15
  %83 = zext <16 x i16> %82 to <16 x i32>
  %84 = bitcast i16* %60 to <4 x i16>*
  %85 = load <4 x i16>, <4 x i16>* %84, align 2
  %86 = extractelement <4 x i16> %85, i32 3
  %87 = insertelement <16 x i16> undef, i16 %86, i32 0
  %88 = extractelement <4 x i16> %85, i32 2
  %89 = insertelement <16 x i16> %87, i16 %88, i32 1
  %90 = extractelement <4 x i16> %85, i32 1
  %91 = insertelement <16 x i16> %89, i16 %90, i32 2
  %92 = extractelement <4 x i16> %85, i32 0
  %93 = insertelement <16 x i16> %91, i16 %92, i32 3
  %94 = insertelement <16 x i16> %93, i16 %58, i32 4
  %95 = insertelement <16 x i16> %94, i16 %54, i32 5
  %96 = insertelement <16 x i16> %95, i16 %50, i32 6
  %97 = insertelement <16 x i16> %96, i16 %46, i32 7
  %98 = insertelement <16 x i16> %97, i16 %42, i32 8
  %99 = insertelement <16 x i16> %98, i16 %38, i32 9
  %100 = insertelement <16 x i16> %99, i16 %34, i32 10
  %101 = insertelement <16 x i16> %100, i16 %30, i32 11
  %102 = insertelement <16 x i16> %101, i16 %26, i32 12
  %103 = insertelement <16 x i16> %102, i16 %22, i32 13
  %104 = insertelement <16 x i16> %103, i16 %18, i32 14
  %105 = insertelement <16 x i16> %104, i16 %14, i32 15
  %106 = zext <16 x i16> %105 to <16 x i32>
  %107 = sub nsw <16 x i32> %83, %106
  %108 = icmp slt <16 x i32> %107, zeroinitializer
  %109 = sub nsw <16 x i32> zeroinitializer, %107
  %110 = select <16 x i1> %108, <16 x i32> %109, <16 x i32> %107
  %111 = shufflevector <16 x i32> %110, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %112 = add nuw nsw <16 x i32> %110, %111
  %113 = shufflevector <16 x i32> %112, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %114 = add nuw nsw <16 x i32> %112, %113
  %115 = shufflevector <16 x i32> %114, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %116 = add nuw nsw <16 x i32> %114, %115
  %117 = shufflevector <16 x i32> %116, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %118 = add nuw nsw <16 x i32> %116, %117
  %119 = extractelement <16 x i32> %118, i32 0
  ret i32 %119
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_highbd_sad4x4_avg_c(i8*, i32, i8*, i32, i8*) local_unnamed_addr #1 {
  %6 = alloca <16 x i16>, align 16
  %7 = bitcast <16 x i16>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #5
  %8 = getelementptr inbounds <16 x i16>, <16 x i16>* %6, i64 0, i64 0
  %9 = ptrtoint i8* %4 to i64
  %10 = shl i64 %9, 1
  %11 = inttoptr i64 %10 to i16*
  %12 = ptrtoint i8* %2 to i64
  %13 = shl i64 %12, 1
  %14 = inttoptr i64 %13 to i16*
  %15 = bitcast <16 x i16>* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -86, i64 32, i1 false)
  call void @vpx_highbd_comp_avg_pred_c(i16* nonnull %8, i16* %11, i32 4, i32 4, i16* %14, i32 %3) #5
  %16 = ptrtoint i8* %0 to i64
  %17 = shl i64 %16, 1
  %18 = inttoptr i64 %17 to i16*
  %19 = sext i32 %1 to i64
  %20 = inttoptr i64 %17 to <4 x i16>*
  %21 = load <4 x i16>, <4 x i16>* %20, align 2
  %22 = getelementptr inbounds i16, i16* %18, i64 %19
  %23 = load i16, i16* %22, align 2
  %24 = getelementptr inbounds i16, i16* %22, i64 1
  %25 = load i16, i16* %24, align 2
  %26 = getelementptr inbounds i16, i16* %22, i64 2
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i16, i16* %22, i64 3
  %29 = load i16, i16* %28, align 2
  %30 = getelementptr inbounds i16, i16* %22, i64 %19
  %31 = load i16, i16* %30, align 2
  %32 = getelementptr inbounds i16, i16* %30, i64 1
  %33 = load i16, i16* %32, align 2
  %34 = getelementptr inbounds i16, i16* %30, i64 2
  %35 = load i16, i16* %34, align 2
  %36 = getelementptr inbounds i16, i16* %30, i64 3
  %37 = load i16, i16* %36, align 2
  %38 = getelementptr inbounds i16, i16* %30, i64 %19
  %39 = load i16, i16* %38, align 2
  %40 = getelementptr inbounds i16, i16* %38, i64 1
  %41 = load i16, i16* %40, align 2
  %42 = getelementptr inbounds i16, i16* %38, i64 2
  %43 = load i16, i16* %42, align 2
  %44 = getelementptr inbounds i16, i16* %38, i64 3
  %45 = load i16, i16* %44, align 2
  %46 = extractelement <4 x i16> %21, i32 0
  %47 = insertelement <16 x i16> undef, i16 %46, i32 0
  %48 = extractelement <4 x i16> %21, i32 1
  %49 = insertelement <16 x i16> %47, i16 %48, i32 1
  %50 = extractelement <4 x i16> %21, i32 2
  %51 = insertelement <16 x i16> %49, i16 %50, i32 2
  %52 = extractelement <4 x i16> %21, i32 3
  %53 = insertelement <16 x i16> %51, i16 %52, i32 3
  %54 = insertelement <16 x i16> %53, i16 %23, i32 4
  %55 = insertelement <16 x i16> %54, i16 %25, i32 5
  %56 = insertelement <16 x i16> %55, i16 %27, i32 6
  %57 = insertelement <16 x i16> %56, i16 %29, i32 7
  %58 = insertelement <16 x i16> %57, i16 %31, i32 8
  %59 = insertelement <16 x i16> %58, i16 %33, i32 9
  %60 = insertelement <16 x i16> %59, i16 %35, i32 10
  %61 = insertelement <16 x i16> %60, i16 %37, i32 11
  %62 = insertelement <16 x i16> %61, i16 %39, i32 12
  %63 = insertelement <16 x i16> %62, i16 %41, i32 13
  %64 = insertelement <16 x i16> %63, i16 %43, i32 14
  %65 = insertelement <16 x i16> %64, i16 %45, i32 15
  %66 = zext <16 x i16> %65 to <16 x i32>
  %67 = load <16 x i16>, <16 x i16>* %6, align 16
  %68 = zext <16 x i16> %67 to <16 x i32>
  %69 = sub nsw <16 x i32> %66, %68
  %70 = icmp slt <16 x i32> %69, zeroinitializer
  %71 = sub nsw <16 x i32> zeroinitializer, %69
  %72 = select <16 x i1> %70, <16 x i32> %71, <16 x i32> %69
  %73 = shufflevector <16 x i32> %72, <16 x i32> undef, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %74 = add nuw nsw <16 x i32> %72, %73
  %75 = shufflevector <16 x i32> %74, <16 x i32> undef, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %76 = add nuw nsw <16 x i32> %74, %75
  %77 = shufflevector <16 x i32> %76, <16 x i32> undef, <16 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %78 = add nuw nsw <16 x i32> %76, %77
  %79 = shufflevector <16 x i32> %78, <16 x i32> undef, <16 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %80 = add nuw nsw <16 x i32> %78, %79
  %81 = extractelement <16 x i32> %80, i32 0
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #5
  ret i32 %81
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @vpx_highbd_sad4x4x4d_c(i8*, i32, i8** nocapture readonly, i32, i32* nocapture) local_unnamed_addr #4 {
  %6 = load i8*, i8** %2, align 8
  %7 = tail call i32 @vpx_highbd_sad4x4_c(i8* %0, i32 %1, i8* %6, i32 %3)
  store i32 %7, i32* %4, align 4
  %8 = getelementptr inbounds i8*, i8** %2, i64 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @vpx_highbd_sad4x4_c(i8* %0, i32 %1, i8* %9, i32 %3)
  %11 = getelementptr inbounds i32, i32* %4, i64 1
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds i8*, i8** %2, i64 2
  %13 = load i8*, i8** %12, align 8
  %14 = tail call i32 @vpx_highbd_sad4x4_c(i8* %0, i32 %1, i8* %13, i32 %3)
  %15 = getelementptr inbounds i32, i32* %4, i64 2
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds i8*, i8** %2, i64 3
  %17 = load i8*, i8** %16, align 8
  %18 = tail call i32 @vpx_highbd_sad4x4_c(i8* %0, i32 %1, i8* %17, i32 %3)
  %19 = getelementptr inbounds i32, i32* %4, i64 3
  store i32 %18, i32* %19, align 4
  ret void
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !3}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !3}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !3}
!16 = distinct !{!16, !3}
!17 = distinct !{!17, !3}
!18 = distinct !{!18, !3}
!19 = distinct !{!19, !3}
!20 = distinct !{!20, !3}
!21 = distinct !{!21, !3}
!22 = distinct !{!22, !3}
!23 = distinct !{!23, !3}
!24 = distinct !{!24, !3}
!25 = distinct !{!25, !3}
!26 = distinct !{!26, !3}
