; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/v8_selection.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/v8_selection.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.blink::CEReactionsScope" = type <{ %"class.blink::CEReactionsScope"*, i8, [7 x i8] }>
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::AttributeConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i16, [6 x i8] }>
%"class.base::span.181" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.224", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.233", %"class.blink::Member.235", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.244", %"class.blink::Member.250", %"class.blink::Member.252", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.182" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.182" = type { %"class.WTF::HashMap.185" }
%"class.WTF::HashMap.185" = type { %"class.WTF::HashTable.186" }
%"class.WTF::HashTable.186" = type <{ %"struct.WTF::KeyValuePair.188"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.188" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.194" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.191" }
%"class.WTF::HashTable.191" = type <{ %"class.blink::WeakMember.193"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.193" = type opaque
%"class.blink::Supplementable.194" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.195" }
%"class.blink::HeapHashMap.195" = type { %"class.WTF::HashMap.198" }
%"class.WTF::HashMap.198" = type { %"class.WTF::HashTable.199" }
%"class.WTF::HashTable.199" = type <{ %"struct.WTF::KeyValuePair.201"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.201" = type { i8*, %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.203" }
%"class.blink::Member.203" = type { %"class.blink::MemberBase.204" }
%"class.blink::MemberBase.204" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.205, %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.212", %"class.blink::Member.218", i32, [4 x i8], %"class.WTF::HashSet.220", i32, i32 }
%class.scoped_refptr.205 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.218" = type { %"class.blink::MemberBase.219" }
%"class.blink::MemberBase.219" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.220" = type { %"class.WTF::HashTable.221" }
%"class.WTF::HashTable.221" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.224" = type { %"class.blink::MemberBase.225" }
%"class.blink::MemberBase.225" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.228" }
%"class.WTF::Vector.228" = type { %"class.WTF::VectorBuffer.229" }
%"class.WTF::VectorBuffer.229" = type { %"class.WTF::VectorBufferBase.230" }
%"class.WTF::VectorBufferBase.230" = type { %"class.blink::Member.231"*, i32, i32 }
%"class.blink::Member.231" = type opaque
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.235" = type { %"class.blink::MemberBase.236" }
%"class.blink::MemberBase.236" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.237", i32, i32 }
%"class.blink::HeapHashMap.237" = type { %"class.WTF::HashMap.240" }
%"class.WTF::HashMap.240" = type { %"class.WTF::HashTable.241" }
%"class.WTF::HashTable.241" = type <{ %"struct.WTF::KeyValuePair.243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.243" = type opaque
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.250" = type { %"class.blink::MemberBase.251" }
%"class.blink::MemberBase.251" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.252" = type { %"class.blink::MemberBase.253" }
%"class.blink::MemberBase.253" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::DOMSelection" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient", %"class.blink::Member.255" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.254" }
%"class.blink::WeakMember.254" = type { %"class.blink::MemberBase.219" }
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.257", %"class.blink::Member.267", %"class.blink::Member.261", %"class.blink::Member.269", %"class.blink::Member.269", %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.322", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.327", %"class.blink::HeapVector.329" }
%"class.blink::Member.257" = type { %"class.blink::MemberBase.258" }
%"class.blink::MemberBase.258" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.259", %"class.blink::Member.259" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.259", %"class.blink::Member.261", %"class.blink::Member.259", %"class.blink::Member.259", %"class.blink::Member.263" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.263" = type { %"class.blink::MemberBase.264" }
%"class.blink::MemberBase.264" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.259" = type { %"class.blink::MemberBase.260" }
%"class.blink::MemberBase.260" = type { %"class.blink::Node"* }
%"class.blink::Member.267" = type { %"class.blink::MemberBase.268" }
%"class.blink::MemberBase.268" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.372", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.380", %"class.WTF::Vector.380", i8, i32, %"class.blink::Member.391", %"class.blink::Member.218", %"class.blink::Member.393", %"class.blink::Member.395", %"class.blink::Member.397", %"class.blink::Member.399", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.407", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.413", %"class.blink::Member.415", %"class.blink::Member.335", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.418", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.311", %"class.blink::Member.290", %"class.blink::Member.434", %"class.blink::Member.290", %"class.blink::Member.290", %"class.blink::Member.290", %"class.blink::UserActionElementSet", %"class.blink::Member.443", double, double, i64, i64, %"class.blink::HeapHashSet.445", %"class.blink::HeapHashSet.452", i16, i8, %"class.blink::Member.459", %"class.blink::Member.461", %"class.blink::Member.463", %"class.blink::Member.465", %"class.blink::TextLinkColors", %"class.blink::Member.467", i8, [7 x i8], %"class.blink::HeapHashMap.469", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.290", %"class.WTF::Vector.476", %"class.blink::Member.481", %"class.blink::Member.483", i8, %"class.blink::Member.290", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.485", %"class.blink::HeapVector.487", %"class.std::__1::unique_ptr.495", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.501", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.514", %"class.WTF::Vector.516", i8, i8, %"class.std::__1::unique_ptr.521", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.311", %"class.blink::HeapVector.527", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.535", i8, i32, %"class.blink::Member.537", %"class.blink::Member.539", %"class.blink::Member.541", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.543", %"class.WTF::HashMap.545", %"class.blink::Member.550", %"class.blink::Member.552", %"class.blink::Member.554", %"class.blink::Member.556", %"class.blink::Member.267", %"class.blink::Member.267", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.558", i8, i32, %"class.blink::Member.565", %"class.blink::Member.567", i32, %"class.blink::Member.569", %"class.blink::Member.571", %"class.blink::Member.573", %"class.std::__1::unique_ptr.575", i64, %"class.std::__1::unique_ptr.581", i32, i32, %"class.blink::Member.587", %"class.blink::Member.589", %"class.blink::Member.591", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.593", %"class.WTF::Vector.595", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.600", %"class.blink::Member.607", %"class.std::__1::unique_ptr.609", %"class.blink::Member.615", i8, i8, %"class.WTF::String", %"class.blink::Member.617", i8, [7 x i8], %"class.blink::HeapHashMap.619", %"class.blink::HeapObserverSet.626", %"class.blink::Member.634", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.636", i32, i8, i8, %"class.blink::WeakMember.638", %"class.blink::Member.639" }
%"class.blink::Supplementable.372" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.373" }
%"class.blink::HeapHashMap.373" = type { %"class.WTF::HashMap.376" }
%"class.WTF::HashMap.376" = type { %"class.WTF::HashTable.377" }
%"class.WTF::HashTable.377" = type <{ %"struct.WTF::KeyValuePair.379"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.379" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.380" = type { %"class.WTF::VectorBuffer.381" }
%"class.WTF::VectorBuffer.381" = type { %"class.WTF::VectorBufferBase.382" }
%"class.WTF::VectorBufferBase.382" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.383 }
%class.scoped_refptr.383 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.384" }
%"struct.std::__1::atomic.384" = type { %"struct.std::__1::__atomic_base.385" }
%"struct.std::__1::__atomic_base.385" = type { %"struct.std::__1::__atomic_base.386" }
%"struct.std::__1::__atomic_base.386" = type { %"struct.std::__1::__cxx_atomic_impl.387" }
%"struct.std::__1::__cxx_atomic_impl.387" = type { %"struct.std::__1::__cxx_atomic_base_impl.388" }
%"struct.std::__1::__cxx_atomic_base_impl.388" = type { i32 }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.395" = type { %"class.blink::MemberBase.396" }
%"class.blink::MemberBase.396" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.397" = type { %"class.blink::MemberBase.398" }
%"class.blink::MemberBase.398" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.401" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.blink::KURL"* }
%"class.blink::Member.413" = type { %"class.blink::MemberBase.414" }
%"class.blink::MemberBase.414" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.415" = type { %"class.blink::MemberBase.416" }
%"class.blink::MemberBase.416" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.335" = type { %"class.blink::MemberBase.336" }
%"class.blink::MemberBase.336" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.337", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.339, %"class.WTF::Vector.340", %"class.WTF::Vector.340", %"class.blink::Member.259", %"class.blink::Member.345", %"class.blink::HeapHashSet.349", %"class.blink::Member.267", %"class.WTF::HashSet.356", %"class.WTF::TextPosition", %"class.blink::Member.360", %"class.blink::HeapVector.362", %"class.blink::Member.369" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.337" = type { %"class.blink::MemberBase.338" }
%"class.blink::MemberBase.338" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.339 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.340" = type { %"class.WTF::VectorBuffer.341" }
%"class.WTF::VectorBuffer.341" = type { %"class.WTF::VectorBufferBase.342" }
%"class.WTF::VectorBufferBase.342" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.345" = type { %"class.blink::MemberBase.346" }
%"class.blink::MemberBase.346" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.347" }
%"class.blink::Member.347" = type { %"class.blink::MemberBase.348" }
%"class.blink::MemberBase.348" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.349" = type { %"class.WTF::HashSet.352" }
%"class.WTF::HashSet.352" = type { %"class.WTF::HashTable.353" }
%"class.WTF::HashTable.353" = type <{ %"class.blink::WeakMember.355"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.355" = type { %"class.blink::MemberBase.262" }
%"class.blink::MemberBase.262" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.356" = type { %"class.WTF::HashTable.357" }
%"class.WTF::HashTable.357" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.360" = type { %"class.blink::MemberBase.361" }
%"class.blink::MemberBase.361" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.362" = type { %"class.WTF::Vector.365" }
%"class.WTF::Vector.365" = type { %"class.WTF::VectorBuffer.366" }
%"class.WTF::VectorBuffer.366" = type { %"class.WTF::VectorBufferBase.367" }
%"class.WTF::VectorBufferBase.367" = type { %"class.blink::Member.345"*, i32, i32 }
%"class.blink::Member.369" = type { %"class.blink::MemberBase.370" }
%"class.blink::MemberBase.370" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.417 }
%class.scoped_refptr.417 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.418" = type { %"class.WTF::VectorBuffer.419" }
%"class.WTF::VectorBuffer.419" = type { %"class.WTF::VectorBufferBase.420" }
%"class.WTF::VectorBufferBase.420" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.421 }
%class.scoped_refptr.421 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.267", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.259", %"class.blink::Member.259", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.436" }
%"class.blink::HeapHashMap.436" = type { %"class.WTF::HashMap.439" }
%"class.WTF::HashMap.439" = type { %"class.WTF::HashTable.440" }
%"class.WTF::HashTable.440" = type <{ %"struct.WTF::KeyValuePair.442"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.442" = type opaque
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.445" = type { %"class.WTF::HashSet.448" }
%"class.WTF::HashSet.448" = type { %"class.WTF::HashTable.449" }
%"class.WTF::HashTable.449" = type <{ %"class.blink::WeakMember.451"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.451" = type opaque
%"class.blink::HeapHashSet.452" = type { %"class.WTF::HashSet.455" }
%"class.WTF::HashSet.455" = type { %"class.WTF::HashTable.456" }
%"class.WTF::HashTable.456" = type <{ %"class.blink::WeakMember.458"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.458" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.261", %"class.blink::HeapVector.329" }
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.469" = type { %"class.WTF::HashMap.472" }
%"class.WTF::HashMap.472" = type { %"class.WTF::HashTable.473" }
%"class.WTF::HashTable.473" = type <{ %"struct.WTF::KeyValuePair.475"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.475" = type opaque
%"class.WTF::Vector.476" = type { %"class.WTF::VectorBuffer.477" }
%"class.WTF::VectorBuffer.477" = type { %"class.WTF::VectorBufferBase.478" }
%"class.WTF::VectorBufferBase.478" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.290" = type { %"class.blink::MemberBase.291" }
%"class.blink::MemberBase.291" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.295" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.292 }
%class.scoped_refptr.292 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.293", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.293" = type { %"class.base::RefCounted.294" }
%"class.base::RefCounted.294" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.295" = type { %"class.blink::MemberBase.296" }
%"class.blink::MemberBase.296" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.299", %"class.blink::Member.301", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.299" = type { %"class.WTF::SingleThreadedBitField.300" }
%"class.WTF::SingleThreadedBitField.300" = type { i32 }
%"class.blink::Member.301" = type { %"class.blink::MemberBase.302" }
%"class.blink::MemberBase.302" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.303 }
%class.scoped_refptr.303 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.304", %"class.WTF::AtomicString", %"class.WTF::Vector.306" }
%"class.WTF::RefCounted.304" = type { %"class.base::RefCounted.305" }
%"class.base::RefCounted.305" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.306" = type { %"class.WTF::VectorBuffer.307" }
%"class.WTF::VectorBuffer.307" = type { %"class.WTF::VectorBufferBase.308", [32 x i8] }
%"class.WTF::VectorBufferBase.308" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.487" = type { %"class.WTF::Vector.490" }
%"class.WTF::Vector.490" = type { %"class.WTF::VectorBuffer.491" }
%"class.WTF::VectorBuffer.491" = type { %"class.WTF::VectorBufferBase.492" }
%"class.WTF::VectorBufferBase.492" = type { %"class.blink::Member.493"*, i32, i32 }
%"class.blink::Member.493" = type opaque
%"class.std::__1::unique_ptr.495" = type { %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.501" = type { %"class.WTF::HashSet.504" }
%"class.WTF::HashSet.504" = type { %"class.WTF::HashTable.505" }
%"class.WTF::HashTable.505" = type <{ %"class.blink::WeakMember.507"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.507" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.508", i32, [4 x i8] }>
%"class.WTF::Vector.508" = type { %"class.WTF::VectorBuffer.509" }
%"class.WTF::VectorBuffer.509" = type { %"class.WTF::VectorBufferBase.510" }
%"class.WTF::VectorBufferBase.510" = type { %"struct.std::__1::pair.511"*, i32, i32 }
%"struct.std::__1::pair.511" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.516" = type { %"class.WTF::VectorBuffer.517" }
%"class.WTF::VectorBuffer.517" = type { %"class.WTF::VectorBufferBase.518" }
%"class.WTF::VectorBufferBase.518" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.521" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.311" = type { %"class.WTF::Vector.314" }
%"class.WTF::Vector.314" = type { %"class.WTF::VectorBuffer.315" }
%"class.WTF::VectorBuffer.315" = type { %"class.WTF::VectorBufferBase.316" }
%"class.WTF::VectorBufferBase.316" = type { %"class.blink::Member.290"*, i32, i32 }
%"class.blink::HeapVector.527" = type { %"class.WTF::Vector.530" }
%"class.WTF::Vector.530" = type { %"class.WTF::VectorBuffer.531" }
%"class.WTF::VectorBuffer.531" = type { %"class.WTF::VectorBufferBase.532" }
%"class.WTF::VectorBufferBase.532" = type { %"class.blink::Member.533"*, i32, i32 }
%"class.blink::Member.533" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.267" }
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.537" = type { %"class.blink::MemberBase.538" }
%"class.blink::MemberBase.538" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.539" = type { %"class.blink::MemberBase.540" }
%"class.blink::MemberBase.540" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.545" = type { %"class.WTF::HashTable.546" }
%"class.WTF::HashTable.546" = type <{ %"struct.WTF::KeyValuePair.549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.549" = type opaque
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.433", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.424, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.424 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.425" }>
%"class.base::RefCountedThreadSafe.425" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.426 }
%class.scoped_refptr.426 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.427", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.427" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.428" }
%"struct.std::__1::atomic.428" = type { %"struct.std::__1::__atomic_base.429" }
%"struct.std::__1::__atomic_base.429" = type { %"struct.std::__1::__atomic_base.430" }
%"struct.std::__1::__atomic_base.430" = type { %"struct.std::__1::__cxx_atomic_impl.431" }
%"struct.std::__1::__cxx_atomic_impl.431" = type { %"struct.std::__1::__cxx_atomic_base_impl.432" }
%"struct.std::__1::__cxx_atomic_base_impl.432" = type { i8 }
%"class.blink::WeakMember.433" = type { %"class.blink::MemberBase.268" }
%"class.blink::HeapHashSet.558" = type { %"class.WTF::HashSet.561" }
%"class.WTF::HashSet.561" = type { %"class.WTF::HashTable.562" }
%"class.WTF::HashTable.562" = type <{ %"class.blink::Member.564"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.564" = type opaque
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.569" = type { %"class.blink::MemberBase.570" }
%"class.blink::MemberBase.570" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.575" = type { %"class.std::__1::__compressed_pair.576" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.577" }
%"struct.std::__1::__compressed_pair_elem.577" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.581" = type { %"class.std::__1::__compressed_pair.582" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.589" = type { %"class.blink::MemberBase.590" }
%"class.blink::MemberBase.590" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.593" = type { %"class.blink::MemberBase.594" }
%"class.blink::MemberBase.594" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.595" = type { %"class.WTF::VectorBuffer.596" }
%"class.WTF::VectorBuffer.596" = type { %"class.WTF::VectorBufferBase.597" }
%"class.WTF::VectorBufferBase.597" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.600" = type { %"class.WTF::HashMap.603" }
%"class.WTF::HashMap.603" = type { %"class.WTF::HashTable.604" }
%"class.WTF::HashTable.604" = type <{ %"struct.WTF::KeyValuePair.606"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.606" = type opaque
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.615" = type { %"class.blink::MemberBase.616" }
%"class.blink::MemberBase.616" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.280 }
%class.scoped_refptr.280 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.281" }
%"struct.std::__1::atomic.281" = type { %"struct.std::__1::__atomic_base.282" }
%"struct.std::__1::__atomic_base.282" = type { %"struct.std::__1::__atomic_base.283" }
%"struct.std::__1::__atomic_base.283" = type { %"struct.std::__1::__cxx_atomic_impl.284" }
%"struct.std::__1::__cxx_atomic_impl.284" = type { %"struct.std::__1::__cxx_atomic_base_impl.285" }
%"struct.std::__1::__cxx_atomic_base_impl.285" = type { i32 }
%"class.blink::Member.617" = type { %"class.blink::MemberBase.618" }
%"class.blink::MemberBase.618" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.619" = type { %"class.WTF::HashMap.622" }
%"class.WTF::HashMap.622" = type { %"class.WTF::HashTable.623" }
%"class.WTF::HashTable.623" = type <{ %"struct.WTF::KeyValuePair.625"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.625" = type opaque
%"class.blink::HeapObserverSet.626" = type { i32, [4 x i8], %"class.blink::HeapHashSet.627" }
%"class.blink::HeapHashSet.627" = type { %"class.WTF::HashSet.630" }
%"class.WTF::HashSet.630" = type { %"class.WTF::HashTable.631" }
%"class.WTF::HashTable.631" = type <{ %"class.blink::WeakMember.633"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.633" = type opaque
%"class.blink::Member.634" = type { %"class.blink::MemberBase.635" }
%"class.blink::MemberBase.635" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.267", %"class.blink::HeapHashSet.643", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.650", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.643" = type { %"class.WTF::HashSet.646" }
%"class.WTF::HashSet.646" = type { %"class.WTF::HashTable.647" }
%"class.WTF::HashTable.647" = type <{ %"class.blink::Member.649"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.649" = type opaque
%"class.blink::HeapTaskRunnerTimer.650" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.651", { i64, i64 } }
%"class.blink::WeakMember.651" = type { %"class.blink::MemberBase.637" }
%"class.blink::WeakMember.638" = type { %"class.blink::MemberBase.260" }
%"class.blink::Member.639" = type { %"class.blink::MemberBase.640" }
%"class.blink::MemberBase.640" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.261" = type { %"class.blink::MemberBase.262" }
%"class.blink::Member.269" = type { %"class.blink::MemberBase.270" }
%"class.blink::MemberBase.270" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.273" }
%"class.blink::HeapHashMap.273" = type { %"class.WTF::HashMap.276" }
%"class.WTF::HashMap.276" = type { %"class.WTF::HashTable.277" }
%"class.WTF::HashTable.277" = type <{ %"struct.WTF::KeyValuePair.279"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.279" = type { %"class.WTF::AtomicString", %"class.blink::Member.286" }
%"class.blink::Member.286" = type { %"class.blink::MemberBase.287" }
%"class.blink::MemberBase.287" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.290", i32, %"class.blink::HeapVector.311" }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::DOMSelection"* }
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.324" }
%"class.blink::Member.324" = type { %"class.blink::MemberBase.325" }
%"class.blink::MemberBase.325" = type { %"class.blink::HeapHashMap.326"* }
%"class.blink::HeapHashMap.326" = type opaque
%"class.blink::Member.327" = type { %"class.blink::MemberBase.328" }
%"class.blink::MemberBase.328" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.329" = type { %"class.WTF::Vector.332" }
%"class.WTF::Vector.332" = type { %"class.WTF::VectorBuffer.333" }
%"class.WTF::VectorBuffer.333" = type { %"class.WTF::VectorBufferBase.334" }
%"class.WTF::VectorBufferBase.334" = type { %"class.blink::Member.335"*, i32, i32 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.654, %"class.blink::Member.655", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.654 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.657" }
%"class.blink::Persistent.657" = type { %"class.blink::PersistentBase.658" }
%"class.blink::PersistentBase.658" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.v8::Value" = type { i8 }
%"class.v8::Integer" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.685", %"class.WTF::HashMap.685", %"class.WTF::HashMap.690", %"class.std::__1::unique_ptr.695", %"class.std::__1::unique_ptr.742", %"class.blink::Persistent.657", i8, i8, i8, %"class.WTF::Vector.380", %"class.std::__1::unique_ptr.756", %"class.blink::Persistent.762", %"class.blink::Persistent.766", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.667", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.673", %"class.std::__1::unique_ptr.679", i32, i32 }
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.673" = type { %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.679" = type { %"class.std::__1::__compressed_pair.680" }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.681" }
%"struct.std::__1::__compressed_pair_elem.681" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.685" = type { %"class.WTF::HashTable.686" }
%"class.WTF::HashTable.686" = type <{ %"struct.WTF::KeyValuePair.689"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.689" = type opaque
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.694"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.694" = type opaque
%"class.std::__1::unique_ptr.695" = type { %"class.std::__1::__compressed_pair.696" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.703", %class.scoped_refptr.280 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.698", i8* }
%"class.WTF::HashMap.698" = type { %"class.WTF::HashTable.699" }
%"class.WTF::HashTable.699" = type <{ %"struct.WTF::KeyValuePair.702"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.702" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.703" = type { %"class.v8::PersistentValueMapBase.704" }
%"class.v8::PersistentValueMapBase.704" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.705", i8* }
%"class.WTF::HashMap.705" = type { %"class.WTF::HashTable.706" }
%"class.WTF::HashTable.706" = type <{ %"struct.WTF::KeyValuePair.709"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.709" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.710", %"class.WTF::String", %"class.std::__1::unique_ptr.712" }
%"class.WTF::RefCounted.710" = type { %"class.base::RefCounted.711" }
%"class.base::RefCounted.711" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.712" = type { %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.715", %"class.std::__1::unique_ptr.726", %"class.WTF::Vector.732", i8, i32 }
%"class.std::__1::unique_ptr.715" = type { %"class.std::__1::__compressed_pair.716" }
%"class.std::__1::__compressed_pair.716" = type { %"struct.std::__1::__compressed_pair_elem.717" }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"class.WTF::Vector.718"* }
%"class.WTF::Vector.718" = type { %"class.WTF::VectorBuffer.719" }
%"class.WTF::VectorBuffer.719" = type { %"class.WTF::VectorBufferBase.720" }
%"class.WTF::VectorBufferBase.720" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.726" = type { %"class.std::__1::__compressed_pair.727" }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.732" = type { %"class.WTF::VectorBuffer.733" }
%"class.WTF::VectorBuffer.733" = type { %"class.WTF::VectorBufferBase.720", [32 x i8] }
%"class.std::__1::unique_ptr.742" = type { %"class.std::__1::__compressed_pair.743" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent.745", %"class.WTF::HashMap.748" }
%"class.blink::ScopedPersistent.745" = type { %"class.v8::Persistent.746" }
%"class.v8::Persistent.746" = type { %"class.v8::PersistentBase.747" }
%"class.v8::PersistentBase.747" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.748" = type { %"class.WTF::HashTable.749" }
%"class.WTF::HashTable.749" = type <{ %"struct.WTF::KeyValuePair.752"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.752" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.762" = type { %"class.blink::PersistentBase.763" }
%"class.blink::PersistentBase.763" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.766" = type { %"class.blink::PersistentBase.767" }
%"class.blink::PersistentBase.767" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.770", i64 }
%"class.blink::HeapVector.770" = type { %"class.WTF::Vector.773" }
%"class.WTF::Vector.773" = type { %"class.WTF::VectorBuffer.774" }
%"class.WTF::VectorBuffer.774" = type { %"class.WTF::VectorBufferBase.775" }
%"class.WTF::VectorBufferBase.775" = type { %"struct.std::__1::pair.776"*, i32, i32 }
%"struct.std::__1::pair.776" = type { %"class.blink::UntracedMember", %"class.blink::Member.778" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.777" }
%"class.blink::MemberBase.777" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.778" = type { %"class.blink::MemberBase.779" }
%"class.blink::MemberBase.779" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TickClock" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.781" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.781" = type { %"class.v8::TracedReference.782" }
%"class.v8::TracedReference.782" = type { %"class.v8::BasicTracedReference.783" }
%"class.v8::BasicTracedReference.783" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Uint32" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.v8::Boolean" = type { i8 }
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.788", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.788" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.789" }
%"class.std::__1::unique_ptr.789" = type { %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>

$_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_ = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

@.str = private unnamed_addr constant [10 x i8] c"Selection\00", align 1
@_ZN5blink11V8Selection18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink11V8Selection24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* null, i8 8 }, align 8
@_ZN5blink12DOMSelection18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink11V8Selection18wrapper_type_info_E, align 8
@_ZZN5blink11V8Selection30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable = internal constant [11 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection30AnchorNodeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection32AnchorOffsetAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection29FocusNodeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection31FocusOffsetAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection31IsCollapsedAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection30RangeCountAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection24TypeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection28BaseNodeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection30BaseOffsetAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection30ExtentNodeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection32ExtentOffsetAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }], align 16
@.str.1 = private unnamed_addr constant [11 x i8] c"anchorNode\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"anchorOffset\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"focusNode\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"focusOffset\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"isCollapsed\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"rangeCount\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"baseNode\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"baseOffset\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"extentNode\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"extentOffset\00", align 1
@_ZZN5blink11V8Selection30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [16 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection25AddRangeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection25CollapseOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection30CollapseToEndOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection32CollapseToStartOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection29ContainsNodeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection35DeleteFromDocumentOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection22EmptyOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection23ExtendOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection27GetRangeAtOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection23ModifyOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection32RemoveAllRangesOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection28RemoveRangeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection34SelectAllChildrenOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection33SetBaseAndExtentOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 4, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection28SetPositionOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_112v8_selection25ToStringOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }], align 16
@.str.12 = private unnamed_addr constant [9 x i8] c"addRange\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"collapse\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c"collapseToEnd\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"collapseToStart\00", align 1
@.str.16 = private unnamed_addr constant [13 x i8] c"containsNode\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"deleteFromDocument\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"empty\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"extend\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"getRangeAt\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"modify\00", align 1
@.str.22 = private unnamed_addr constant [16 x i8] c"removeAllRanges\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"removeRange\00", align 1
@.str.24 = private unnamed_addr constant [18 x i8] c"selectAllChildren\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"setBaseAndExtent\00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"setPosition\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"toString\00", align 1
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.28 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.30 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink5Range18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink4Node18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink16CEReactionsScope13top_of_stack_E = external local_unnamed_addr global %"class.blink::CEReactionsScope"*, align 8
@.str.31 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11V8Selection24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = alloca %"class.base::span.181", align 8
  %6 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %7 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %6) #6
  %8 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %6) #6
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink11V8Selection18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %7, %"class.v8::ObjectTemplate"* %8, %"class.v8::FunctionTemplate"* %6, %"class.v8::FunctionTemplate"* null) #6
  %9 = bitcast %"class.v8::ObjectTemplate"* %7 to %"class.v8::Template"*
  %10 = bitcast %"class.v8::ObjectTemplate"* %8 to %"class.v8::Template"*
  %11 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11)
  %12 = bitcast %"class.base::span.181"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12)
  %13 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %6) #6
  %14 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 11, i64* %14, align 8
  %15 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([11 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink11V8Selection30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %15, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %9, %"class.v8::Template"* %10, %"class.v8::Template"* %2, %"class.v8::Signature"* %13, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #6
  %16 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %5, i64 0, i32 0, i32 0
  store i64 16, i64* %16, align 8
  %17 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %5, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([16 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink11V8Selection30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %17, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %9, %"class.v8::Template"* %10, %"class.v8::Template"* %2, %"class.v8::Signature"* %13, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %5) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11V8Selection30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = alloca %"class.base::span.181", align 8
  %8 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %9 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %8) #6
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 11, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([11 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink11V8Selection30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %11, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #6
  %12 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %7, i64 0, i32 0, i32 0
  store i64 16, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %7, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([16 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink11V8Selection30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %7) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection30AnchorNodeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #6
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #6
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 997) #6
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #6
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = bitcast i8* %40 to %"class.blink::DOMSelection"*
  %42 = tail call %"class.blink::Node"* @_ZNK5blink12DOMSelection10anchorNodeEv(%"class.blink::DOMSelection"* %41) #6
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 0, i32 0, i32 0
  %44 = icmp eq %"class.blink::Node"* %42, null
  %45 = load i64*, i64** %2, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 3
  br i1 %44, label %47, label %53, !prof !2

47:                                               ; preds = %39
  %48 = getelementptr inbounds i64, i64* %45, i64 1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 176
  %51 = inttoptr i64 %50 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %46, align 8
  br label %76

53:                                               ; preds = %39
  %54 = bitcast i8* %40 to %"class.blink::ScriptWrappable"*
  %55 = load i64*, i64** %19, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 -1
  %57 = bitcast i64* %56 to %"class.v8::Object"*
  %58 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %46, %"class.blink::ScriptWrappable"* nonnull %43, %"class.v8::Object"* %57, %"class.blink::ScriptWrappable"* %54) #6
  br i1 %58, label %76, label %59

59:                                               ; preds = %53
  %60 = load i64*, i64** %19, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 -1
  %62 = bitcast i64* %61 to %"class.v8::Object"*
  %63 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %62) #6
  %64 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %63) #6
  %65 = bitcast %"class.blink::Node"* %42 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %66 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %65, align 8
  %67 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %66, i64 7
  %68 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %67, align 8
  %69 = tail call %"class.v8::Value"* %68(%"class.blink::ScriptWrappable"* nonnull %43, %"class.blink::ScriptState"* %64) #6
  %70 = icmp eq %"class.v8::Value"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %59
  %72 = load i64*, i64** %2, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 3
  %74 = bitcast %"class.v8::Value"* %69 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %73, align 8
  br label %76

76:                                               ; preds = %47, %53, %59, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection32AnchorOffsetAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #6
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #6
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 998) #6
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #6
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = bitcast i8* %40 to %"class.blink::DOMSelection"*
  %42 = tail call i32 @_ZNK5blink12DOMSelection12anchorOffsetEv(%"class.blink::DOMSelection"* %41) #6
  %43 = load i64*, i64** %2, align 8
  %44 = getelementptr inbounds i64, i64* %43, i64 3
  %45 = icmp sgt i32 %42, -1
  br i1 %45, label %46, label %63, !prof !3

46:                                               ; preds = %39
  %47 = icmp ult i32 %42, 1073741824
  br i1 %47, label %48, label %51, !prof !3

48:                                               ; preds = %46
  %49 = sext i32 %42 to i64
  %50 = shl nsw i64 %49, 1
  br label %75

51:                                               ; preds = %46
  %52 = getelementptr inbounds i64, i64* %43, i64 1
  %53 = bitcast i64* %52 to %"class.v8::Isolate"**
  %54 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %53, align 8
  %55 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %54, i32 %42) #6
  %56 = icmp eq %"class.v8::Integer"* %55, null
  br i1 %56, label %57, label %60, !prof !2

57:                                               ; preds = %51
  %58 = getelementptr inbounds i64, i64* %43, i64 2
  %59 = load i64, i64* %58, align 8
  br label %75

60:                                               ; preds = %51
  %61 = bitcast %"class.v8::Integer"* %55 to i64*
  %62 = load i64, i64* %61, align 8
  br label %75

63:                                               ; preds = %39
  %64 = getelementptr inbounds i64, i64* %43, i64 1
  %65 = bitcast i64* %64 to %"class.v8::Isolate"**
  %66 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %65, align 8
  %67 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %66, i32 %42) #6
  %68 = icmp eq %"class.v8::Integer"* %67, null
  br i1 %68, label %69, label %72, !prof !2

69:                                               ; preds = %63
  %70 = getelementptr inbounds i64, i64* %43, i64 2
  %71 = load i64, i64* %70, align 8
  br label %75

72:                                               ; preds = %63
  %73 = bitcast %"class.v8::Integer"* %67 to i64*
  %74 = load i64, i64* %73, align 8
  br label %75

75:                                               ; preds = %48, %57, %60, %69, %72
  %76 = phi i64 [ %50, %48 ], [ %59, %57 ], [ %62, %60 ], [ %71, %69 ], [ %74, %72 ]
  store i64 %76, i64* %44, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection29FocusNodeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #6
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #6
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 999) #6
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #6
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = bitcast i8* %40 to %"class.blink::DOMSelection"*
  %42 = tail call %"class.blink::Node"* @_ZNK5blink12DOMSelection9focusNodeEv(%"class.blink::DOMSelection"* %41) #6
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 0, i32 0, i32 0
  %44 = icmp eq %"class.blink::Node"* %42, null
  %45 = load i64*, i64** %2, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 3
  br i1 %44, label %47, label %53, !prof !2

47:                                               ; preds = %39
  %48 = getelementptr inbounds i64, i64* %45, i64 1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 176
  %51 = inttoptr i64 %50 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %46, align 8
  br label %76

53:                                               ; preds = %39
  %54 = bitcast i8* %40 to %"class.blink::ScriptWrappable"*
  %55 = load i64*, i64** %19, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 -1
  %57 = bitcast i64* %56 to %"class.v8::Object"*
  %58 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %46, %"class.blink::ScriptWrappable"* nonnull %43, %"class.v8::Object"* %57, %"class.blink::ScriptWrappable"* %54) #6
  br i1 %58, label %76, label %59

59:                                               ; preds = %53
  %60 = load i64*, i64** %19, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 -1
  %62 = bitcast i64* %61 to %"class.v8::Object"*
  %63 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %62) #6
  %64 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %63) #6
  %65 = bitcast %"class.blink::Node"* %42 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %66 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %65, align 8
  %67 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %66, i64 7
  %68 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %67, align 8
  %69 = tail call %"class.v8::Value"* %68(%"class.blink::ScriptWrappable"* nonnull %43, %"class.blink::ScriptState"* %64) #6
  %70 = icmp eq %"class.v8::Value"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %59
  %72 = load i64*, i64** %2, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 3
  %74 = bitcast %"class.v8::Value"* %69 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %73, align 8
  br label %76

76:                                               ; preds = %47, %53, %59, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection31FocusOffsetAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #6
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #6
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 1000) #6
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #6
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = bitcast i8* %40 to %"class.blink::DOMSelection"*
  %42 = tail call i32 @_ZNK5blink12DOMSelection11focusOffsetEv(%"class.blink::DOMSelection"* %41) #6
  %43 = load i64*, i64** %2, align 8
  %44 = getelementptr inbounds i64, i64* %43, i64 3
  %45 = icmp sgt i32 %42, -1
  br i1 %45, label %46, label %63, !prof !3

46:                                               ; preds = %39
  %47 = icmp ult i32 %42, 1073741824
  br i1 %47, label %48, label %51, !prof !3

48:                                               ; preds = %46
  %49 = sext i32 %42 to i64
  %50 = shl nsw i64 %49, 1
  br label %75

51:                                               ; preds = %46
  %52 = getelementptr inbounds i64, i64* %43, i64 1
  %53 = bitcast i64* %52 to %"class.v8::Isolate"**
  %54 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %53, align 8
  %55 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %54, i32 %42) #6
  %56 = icmp eq %"class.v8::Integer"* %55, null
  br i1 %56, label %57, label %60, !prof !2

57:                                               ; preds = %51
  %58 = getelementptr inbounds i64, i64* %43, i64 2
  %59 = load i64, i64* %58, align 8
  br label %75

60:                                               ; preds = %51
  %61 = bitcast %"class.v8::Integer"* %55 to i64*
  %62 = load i64, i64* %61, align 8
  br label %75

63:                                               ; preds = %39
  %64 = getelementptr inbounds i64, i64* %43, i64 1
  %65 = bitcast i64* %64 to %"class.v8::Isolate"**
  %66 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %65, align 8
  %67 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %66, i32 %42) #6
  %68 = icmp eq %"class.v8::Integer"* %67, null
  br i1 %68, label %69, label %72, !prof !2

69:                                               ; preds = %63
  %70 = getelementptr inbounds i64, i64* %43, i64 2
  %71 = load i64, i64* %70, align 8
  br label %75

72:                                               ; preds = %63
  %73 = bitcast %"class.v8::Integer"* %67 to i64*
  %74 = load i64, i64* %73, align 8
  br label %75

75:                                               ; preds = %48, %57, %60, %69, %72
  %76 = phi i64 [ %50, %48 ], [ %59, %57 ], [ %62, %60 ], [ %71, %69 ], [ %74, %72 ]
  store i64 %76, i64* %44, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection31IsCollapsedAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #6
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #6
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 1001) #6
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #6
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = bitcast i8* %40 to %"class.blink::DOMSelection"*
  %42 = tail call zeroext i1 @_ZNK5blink12DOMSelection11isCollapsedEv(%"class.blink::DOMSelection"* %41) #6
  %43 = load i64*, i64** %2, align 8
  %44 = getelementptr inbounds i64, i64* %43, i64 3
  %45 = getelementptr inbounds i64, i64* %43, i64 1
  %46 = load i64, i64* %45, align 8
  %47 = select i1 %42, i64 184, i64 192
  %48 = add i64 %46, %47
  %49 = inttoptr i64 %48 to i64*
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %44, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection30RangeCountAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #6
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #6
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 1002) #6
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #6
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = bitcast i8* %40 to %"class.blink::DOMSelection"*
  %42 = tail call i32 @_ZNK5blink12DOMSelection10rangeCountEv(%"class.blink::DOMSelection"* %41) #6
  %43 = load i64*, i64** %2, align 8
  %44 = getelementptr inbounds i64, i64* %43, i64 3
  %45 = icmp sgt i32 %42, -1
  br i1 %45, label %46, label %63, !prof !3

46:                                               ; preds = %39
  %47 = icmp ult i32 %42, 1073741824
  br i1 %47, label %48, label %51, !prof !3

48:                                               ; preds = %46
  %49 = sext i32 %42 to i64
  %50 = shl nsw i64 %49, 1
  br label %75

51:                                               ; preds = %46
  %52 = getelementptr inbounds i64, i64* %43, i64 1
  %53 = bitcast i64* %52 to %"class.v8::Isolate"**
  %54 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %53, align 8
  %55 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %54, i32 %42) #6
  %56 = icmp eq %"class.v8::Integer"* %55, null
  br i1 %56, label %57, label %60, !prof !2

57:                                               ; preds = %51
  %58 = getelementptr inbounds i64, i64* %43, i64 2
  %59 = load i64, i64* %58, align 8
  br label %75

60:                                               ; preds = %51
  %61 = bitcast %"class.v8::Integer"* %55 to i64*
  %62 = load i64, i64* %61, align 8
  br label %75

63:                                               ; preds = %39
  %64 = getelementptr inbounds i64, i64* %43, i64 1
  %65 = bitcast i64* %64 to %"class.v8::Isolate"**
  %66 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %65, align 8
  %67 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %66, i32 %42) #6
  %68 = icmp eq %"class.v8::Integer"* %67, null
  br i1 %68, label %69, label %72, !prof !2

69:                                               ; preds = %63
  %70 = getelementptr inbounds i64, i64* %43, i64 2
  %71 = load i64, i64* %70, align 8
  br label %75

72:                                               ; preds = %63
  %73 = bitcast %"class.v8::Integer"* %67 to i64*
  %74 = load i64, i64* %73, align 8
  br label %75

75:                                               ; preds = %48, %57, %60, %69, %72
  %76 = phi i64 [ %50, %48 ], [ %59, %57 ], [ %62, %60 ], [ %71, %69 ], [ %74, %72 ]
  store i64 %76, i64* %44, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection24TypeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #6
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #6
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 404) #6
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #6
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = bitcast i8* %40 to %"class.blink::DOMSelection"*
  %42 = tail call %"class.WTF::StringImpl"* @_ZNK5blink12DOMSelection4typeEv(%"class.blink::DOMSelection"* %41) #6
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %64, label %44

44:                                               ; preds = %39
  %45 = ptrtoint %"class.v8::Isolate"* %6 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to %"class.blink::V8PerIsolateData"**
  %48 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %48, i64 0, i32 5, i32 0, i32 0, i32 0
  %50 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %49, align 8
  %51 = load i64*, i64** %2, align 8
  %52 = getelementptr inbounds i64, i64* %51, i64 3
  %53 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %50, i64 0, i32 3, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, %42
  br i1 %55, label %56, label %63

56:                                               ; preds = %44
  %57 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %50, i64 0, i32 1, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %72, label %60

60:                                               ; preds = %56
  %61 = inttoptr i64 %58 to i64*
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %52, align 8
  br label %72

63:                                               ; preds = %44
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %50, i64* %52, %"class.WTF::StringImpl"* nonnull %42) #6
  br label %72

64:                                               ; preds = %39
  %65 = load i64*, i64** %2, align 8
  %66 = getelementptr inbounds i64, i64* %65, i64 3
  %67 = getelementptr inbounds i64, i64* %65, i64 1
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 200
  %70 = inttoptr i64 %69 to i64*
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %66, align 8
  br label %85

72:                                               ; preds = %56, %60, %63
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #6
  br label %85

85:                                               ; preds = %64, %81, %84
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection28BaseNodeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #6
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #6
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 400) #6
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #6
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = bitcast i8* %40 to %"class.blink::DOMSelection"*
  %42 = tail call %"class.blink::Node"* @_ZNK5blink12DOMSelection8baseNodeEv(%"class.blink::DOMSelection"* %41) #6
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 0, i32 0, i32 0
  %44 = icmp eq %"class.blink::Node"* %42, null
  %45 = load i64*, i64** %2, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 3
  br i1 %44, label %47, label %53, !prof !2

47:                                               ; preds = %39
  %48 = getelementptr inbounds i64, i64* %45, i64 1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 176
  %51 = inttoptr i64 %50 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %46, align 8
  br label %76

53:                                               ; preds = %39
  %54 = bitcast i8* %40 to %"class.blink::ScriptWrappable"*
  %55 = load i64*, i64** %19, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 -1
  %57 = bitcast i64* %56 to %"class.v8::Object"*
  %58 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %46, %"class.blink::ScriptWrappable"* nonnull %43, %"class.v8::Object"* %57, %"class.blink::ScriptWrappable"* %54) #6
  br i1 %58, label %76, label %59

59:                                               ; preds = %53
  %60 = load i64*, i64** %19, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 -1
  %62 = bitcast i64* %61 to %"class.v8::Object"*
  %63 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %62) #6
  %64 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %63) #6
  %65 = bitcast %"class.blink::Node"* %42 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %66 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %65, align 8
  %67 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %66, i64 7
  %68 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %67, align 8
  %69 = tail call %"class.v8::Value"* %68(%"class.blink::ScriptWrappable"* nonnull %43, %"class.blink::ScriptState"* %64) #6
  %70 = icmp eq %"class.v8::Value"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %59
  %72 = load i64*, i64** %2, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 3
  %74 = bitcast %"class.v8::Value"* %69 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %73, align 8
  br label %76

76:                                               ; preds = %47, %53, %59, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection30BaseOffsetAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #6
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #6
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 401) #6
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #6
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = bitcast i8* %40 to %"class.blink::DOMSelection"*
  %42 = tail call i32 @_ZNK5blink12DOMSelection10baseOffsetEv(%"class.blink::DOMSelection"* %41) #6
  %43 = load i64*, i64** %2, align 8
  %44 = getelementptr inbounds i64, i64* %43, i64 3
  %45 = icmp sgt i32 %42, -1
  br i1 %45, label %46, label %63, !prof !3

46:                                               ; preds = %39
  %47 = icmp ult i32 %42, 1073741824
  br i1 %47, label %48, label %51, !prof !3

48:                                               ; preds = %46
  %49 = sext i32 %42 to i64
  %50 = shl nsw i64 %49, 1
  br label %75

51:                                               ; preds = %46
  %52 = getelementptr inbounds i64, i64* %43, i64 1
  %53 = bitcast i64* %52 to %"class.v8::Isolate"**
  %54 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %53, align 8
  %55 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %54, i32 %42) #6
  %56 = icmp eq %"class.v8::Integer"* %55, null
  br i1 %56, label %57, label %60, !prof !2

57:                                               ; preds = %51
  %58 = getelementptr inbounds i64, i64* %43, i64 2
  %59 = load i64, i64* %58, align 8
  br label %75

60:                                               ; preds = %51
  %61 = bitcast %"class.v8::Integer"* %55 to i64*
  %62 = load i64, i64* %61, align 8
  br label %75

63:                                               ; preds = %39
  %64 = getelementptr inbounds i64, i64* %43, i64 1
  %65 = bitcast i64* %64 to %"class.v8::Isolate"**
  %66 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %65, align 8
  %67 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %66, i32 %42) #6
  %68 = icmp eq %"class.v8::Integer"* %67, null
  br i1 %68, label %69, label %72, !prof !2

69:                                               ; preds = %63
  %70 = getelementptr inbounds i64, i64* %43, i64 2
  %71 = load i64, i64* %70, align 8
  br label %75

72:                                               ; preds = %63
  %73 = bitcast %"class.v8::Integer"* %67 to i64*
  %74 = load i64, i64* %73, align 8
  br label %75

75:                                               ; preds = %48, %57, %60, %69, %72
  %76 = phi i64 [ %50, %48 ], [ %59, %57 ], [ %62, %60 ], [ %71, %69 ], [ %74, %72 ]
  store i64 %76, i64* %44, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection30ExtentNodeAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #6
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #6
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 402) #6
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #6
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = bitcast i8* %40 to %"class.blink::DOMSelection"*
  %42 = tail call %"class.blink::Node"* @_ZNK5blink12DOMSelection10extentNodeEv(%"class.blink::DOMSelection"* %41) #6
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 0, i32 0, i32 0
  %44 = icmp eq %"class.blink::Node"* %42, null
  %45 = load i64*, i64** %2, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 3
  br i1 %44, label %47, label %53, !prof !2

47:                                               ; preds = %39
  %48 = getelementptr inbounds i64, i64* %45, i64 1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 176
  %51 = inttoptr i64 %50 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %46, align 8
  br label %76

53:                                               ; preds = %39
  %54 = bitcast i8* %40 to %"class.blink::ScriptWrappable"*
  %55 = load i64*, i64** %19, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 -1
  %57 = bitcast i64* %56 to %"class.v8::Object"*
  %58 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %46, %"class.blink::ScriptWrappable"* nonnull %43, %"class.v8::Object"* %57, %"class.blink::ScriptWrappable"* %54) #6
  br i1 %58, label %76, label %59

59:                                               ; preds = %53
  %60 = load i64*, i64** %19, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 -1
  %62 = bitcast i64* %61 to %"class.v8::Object"*
  %63 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %62) #6
  %64 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %63) #6
  %65 = bitcast %"class.blink::Node"* %42 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %66 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %65, align 8
  %67 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %66, i64 7
  %68 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %67, align 8
  %69 = tail call %"class.v8::Value"* %68(%"class.blink::ScriptWrappable"* nonnull %43, %"class.blink::ScriptState"* %64) #6
  %70 = icmp eq %"class.v8::Value"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %59
  %72 = load i64*, i64** %2, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 3
  %74 = bitcast %"class.v8::Value"* %69 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %73, align 8
  br label %76

76:                                               ; preds = %47, %53, %59, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection32ExtentOffsetAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #6
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #6
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 403) #6
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #6
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = bitcast i8* %40 to %"class.blink::DOMSelection"*
  %42 = tail call i32 @_ZNK5blink12DOMSelection12extentOffsetEv(%"class.blink::DOMSelection"* %41) #6
  %43 = load i64*, i64** %2, align 8
  %44 = getelementptr inbounds i64, i64* %43, i64 3
  %45 = icmp sgt i32 %42, -1
  br i1 %45, label %46, label %63, !prof !3

46:                                               ; preds = %39
  %47 = icmp ult i32 %42, 1073741824
  br i1 %47, label %48, label %51, !prof !3

48:                                               ; preds = %46
  %49 = sext i32 %42 to i64
  %50 = shl nsw i64 %49, 1
  br label %75

51:                                               ; preds = %46
  %52 = getelementptr inbounds i64, i64* %43, i64 1
  %53 = bitcast i64* %52 to %"class.v8::Isolate"**
  %54 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %53, align 8
  %55 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %54, i32 %42) #6
  %56 = icmp eq %"class.v8::Integer"* %55, null
  br i1 %56, label %57, label %60, !prof !2

57:                                               ; preds = %51
  %58 = getelementptr inbounds i64, i64* %43, i64 2
  %59 = load i64, i64* %58, align 8
  br label %75

60:                                               ; preds = %51
  %61 = bitcast %"class.v8::Integer"* %55 to i64*
  %62 = load i64, i64* %61, align 8
  br label %75

63:                                               ; preds = %39
  %64 = getelementptr inbounds i64, i64* %43, i64 1
  %65 = bitcast i64* %64 to %"class.v8::Isolate"**
  %66 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %65, align 8
  %67 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %66, i32 %42) #6
  %68 = icmp eq %"class.v8::Integer"* %67, null
  br i1 %68, label %69, label %72, !prof !2

69:                                               ; preds = %63
  %70 = getelementptr inbounds i64, i64* %43, i64 2
  %71 = load i64, i64* %70, align 8
  br label %75

72:                                               ; preds = %63
  %73 = bitcast %"class.v8::Integer"* %67 to i64*
  %74 = load i64, i64* %73, align 8
  br label %75

75:                                               ; preds = %48, %57, %60, %69, %72
  %76 = phi i64 [ %50, %48 ], [ %59, %57 ], [ %62, %60 ], [ %71, %69 ], [ %74, %72 ]
  store i64 %76, i64* %44, align 8
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection25AddRangeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %8) #6
  %10 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %9) #6
  %11 = icmp eq %"class.blink::ExecutionContext"* %10, null
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %10, i64 0, i32 3
  %13 = icmp eq %"class.blink::UseCounter"* %12, null
  %14 = or i1 %11, %13
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::UseCounter"* %12 to void (%"class.blink::UseCounter"*, i32)***
  %17 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, i64 3
  %19 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, align 8
  tail call void %19(%"class.blink::UseCounter"* nonnull %12, i32 1004) #6
  br label %20

20:                                               ; preds = %1, %15
  %21 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 56, i1 false)
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %24, align 2
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %26 = bitcast i8** %25 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0)>, <2 x i8*>* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %31 = bitcast %"class.WTF::StringImpl"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #6
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp slt i32 %33, 1
  br i1 %34, label %35, label %55, !prof !2

35:                                               ; preds = %20
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  %37 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %33) #6
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #6
  br label %54

54:                                               ; preds = %35, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  br label %125

55:                                               ; preds = %20
  %56 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 -1
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = and i64 %59, -4294967296
  %64 = zext i32 %62 to i64
  %65 = or i64 %63, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load i16, i16* %67, align 2
  switch i16 %68, label %73 [
    i16 1057, label %69
    i16 1056, label %69
    i16 1040, label %69
  ]

69:                                               ; preds = %55, %55, %55
  %70 = add i64 %59, 19
  %71 = inttoptr i64 %70 to %"class.blink::DOMSelection"**
  %72 = load %"class.blink::DOMSelection"*, %"class.blink::DOMSelection"** %71, align 1
  br label %85

73:                                               ; preds = %55
  %74 = bitcast i64* %58 to %"class.v8::Object"*
  %75 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %74, i32 1) #6
  %76 = load i32, i32* %32, align 8
  %77 = bitcast i8* %75 to %"class.blink::DOMSelection"*
  %78 = icmp sgt i32 %76, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %73
  %80 = load i64*, i64** %4, align 8
  %81 = getelementptr inbounds i64, i64* %80, i64 1
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 160
  %84 = inttoptr i64 %83 to %"class.v8::Value"*
  br label %89

85:                                               ; preds = %69, %73
  %86 = phi %"class.blink::DOMSelection"* [ %72, %69 ], [ %77, %73 ]
  %87 = bitcast i64** %56 to %"class.v8::Value"**
  %88 = load %"class.v8::Value"*, %"class.v8::Value"** %87, align 8
  br label %89

89:                                               ; preds = %79, %85
  %90 = phi %"class.blink::DOMSelection"* [ %77, %79 ], [ %86, %85 ]
  %91 = phi %"class.v8::Value"* [ %84, %79 ], [ %88, %85 ]
  %92 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink5Range18wrapper_type_info_E, align 8
  %93 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %94 = add i64 %93, 8
  %95 = inttoptr i64 %94 to %"class.blink::V8PerIsolateData"**
  %96 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %95, align 8
  %97 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %96, %"struct.blink::WrapperTypeInfo"* %92, %"class.v8::Value"* %91) #6
  br i1 %97, label %98, label %120

98:                                               ; preds = %89
  %99 = bitcast %"class.v8::Value"* %91 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, -1
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = and i64 %100, -4294967296
  %105 = zext i32 %103 to i64
  %106 = or i64 %104, %105
  %107 = add i64 %106, 7
  %108 = inttoptr i64 %107 to i16*
  %109 = load i16, i16* %108, align 2
  switch i16 %109, label %114 [
    i16 1057, label %110
    i16 1056, label %110
    i16 1040, label %110
  ]

110:                                              ; preds = %98, %98, %98
  %111 = add i64 %100, 19
  %112 = inttoptr i64 %111 to i8**
  %113 = load i8*, i8** %112, align 1
  br label %117

114:                                              ; preds = %98
  %115 = bitcast %"class.v8::Value"* %91 to %"class.v8::Object"*
  %116 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %115, i32 1) #6
  br label %117

117:                                              ; preds = %110, %114
  %118 = phi i8* [ %113, %110 ], [ %116, %114 ]
  %119 = bitcast i8* %118 to %"class.blink::Range"*
  br label %123

120:                                              ; preds = %89
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %92, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %121 = load i32, i32* %29, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %117, %120
  %124 = phi %"class.blink::Range"* [ %119, %117 ], [ null, %120 ]
  call void @_ZN5blink12DOMSelection8addRangeEPNS_5RangeE(%"class.blink::DOMSelection"* %90, %"class.blink::Range"* %124) #6
  br label %125

125:                                              ; preds = %120, %123, %54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %126 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %127 = load i64*, i64** %126, align 8
  %128 = icmp eq i64* %127, null
  br i1 %128, label %138, label %129

129:                                              ; preds = %125
  %130 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %131 = bitcast %"class.v8::Isolate"* %130 to %"class.v8::internal::Isolate"*
  %132 = load i64, i64* %127, align 8
  %133 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %131, i64 %132) #6
  %134 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %130) #6
  br i1 %134, label %138, label %135

135:                                              ; preds = %129
  %136 = bitcast i64* %133 to %"class.v8::Value"*
  %137 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %130, %"class.v8::Value"* %136) #6
  br label %138

138:                                              ; preds = %135, %129, %125
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #6
  br label %154

154:                                              ; preds = %138, %150, %153
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection25CollapseOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %8) #6
  %10 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %9) #6
  %11 = icmp eq %"class.blink::ExecutionContext"* %10, null
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %10, i64 0, i32 3
  %13 = icmp eq %"class.blink::UseCounter"* %12, null
  %14 = or i1 %11, %13
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::UseCounter"* %12 to void (%"class.blink::UseCounter"*, i32)***
  %17 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, i64 3
  %19 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, align 8
  tail call void %19(%"class.blink::UseCounter"* nonnull %12, i32 1006) #6
  br label %20

20:                                               ; preds = %1, %15
  %21 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 56, i1 false)
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %24, align 2
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %26 = bitcast i8** %25 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0)>, <2 x i8*>* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %31 = bitcast %"class.WTF::StringImpl"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #6
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp slt i32 %33, 1
  br i1 %34, label %35, label %55, !prof !2

35:                                               ; preds = %20
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  %37 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %33) #6
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #6
  br label %54

54:                                               ; preds = %35, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  br label %209

55:                                               ; preds = %20
  %56 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 -1
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = and i64 %59, -4294967296
  %64 = zext i32 %62 to i64
  %65 = or i64 %63, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load i16, i16* %67, align 2
  switch i16 %68, label %73 [
    i16 1057, label %69
    i16 1056, label %69
    i16 1040, label %69
  ]

69:                                               ; preds = %55, %55, %55
  %70 = add i64 %59, 19
  %71 = inttoptr i64 %70 to %"class.blink::DOMSelection"**
  %72 = load %"class.blink::DOMSelection"*, %"class.blink::DOMSelection"** %71, align 1
  br label %85

73:                                               ; preds = %55
  %74 = bitcast i64* %58 to %"class.v8::Object"*
  %75 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %74, i32 1) #6
  %76 = load i32, i32* %32, align 8
  %77 = bitcast i8* %75 to %"class.blink::DOMSelection"*
  %78 = icmp sgt i32 %76, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %73
  %80 = load i64*, i64** %4, align 8
  %81 = getelementptr inbounds i64, i64* %80, i64 1
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 160
  %84 = inttoptr i64 %83 to %"class.v8::Value"*
  br label %89

85:                                               ; preds = %69, %73
  %86 = phi %"class.blink::DOMSelection"* [ %72, %69 ], [ %77, %73 ]
  %87 = bitcast i64** %56 to %"class.v8::Value"**
  %88 = load %"class.v8::Value"*, %"class.v8::Value"** %87, align 8
  br label %89

89:                                               ; preds = %79, %85
  %90 = phi %"class.blink::DOMSelection"* [ %77, %79 ], [ %86, %85 ]
  %91 = phi %"class.v8::Value"* [ %84, %79 ], [ %88, %85 ]
  %92 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink4Node18wrapper_type_info_E, align 8
  %93 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %94 = add i64 %93, 8
  %95 = inttoptr i64 %94 to %"class.blink::V8PerIsolateData"**
  %96 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %95, align 8
  %97 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %96, %"struct.blink::WrapperTypeInfo"* %92, %"class.v8::Value"* %91) #6
  %98 = bitcast %"class.v8::Value"* %91 to i64*
  %99 = load i64, i64* %98, align 8
  br i1 %97, label %100, label %120

100:                                              ; preds = %89
  %101 = add i64 %99, -1
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = and i64 %99, -4294967296
  %105 = zext i32 %103 to i64
  %106 = or i64 %104, %105
  %107 = add i64 %106, 7
  %108 = inttoptr i64 %107 to i16*
  %109 = load i16, i16* %108, align 2
  switch i16 %109, label %114 [
    i16 1057, label %110
    i16 1056, label %110
    i16 1040, label %110
  ]

110:                                              ; preds = %100, %100, %100
  %111 = add i64 %99, 19
  %112 = inttoptr i64 %111 to i8**
  %113 = load i8*, i8** %112, align 1
  br label %117

114:                                              ; preds = %100
  %115 = bitcast %"class.v8::Value"* %91 to %"class.v8::Object"*
  %116 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %115, i32 1) #6
  br label %117

117:                                              ; preds = %114, %110
  %118 = phi i8* [ %113, %110 ], [ %116, %114 ]
  %119 = bitcast i8* %118 to %"class.blink::Node"*
  br label %142

120:                                              ; preds = %89
  %121 = and i64 %99, 3
  %122 = icmp eq i64 %121, 1
  br i1 %122, label %123, label %139

123:                                              ; preds = %120
  %124 = add i64 %99, -1
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = and i64 %99, -4294967296
  %128 = zext i32 %126 to i64
  %129 = or i64 %127, %128
  %130 = add i64 %129, 7
  %131 = inttoptr i64 %130 to i16*
  %132 = load i16, i16* %131, align 2
  %133 = icmp eq i16 %132, 67
  br i1 %133, label %134, label %139

134:                                              ; preds = %123
  %135 = add i64 %99, 23
  %136 = inttoptr i64 %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = ashr i32 %137, 1
  switch i32 %138, label %139 [
    i32 5, label %142
    i32 3, label %142
  ]

139:                                              ; preds = %120, %123, %134
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %92, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %140 = load i32, i32* %29, align 8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %209

142:                                              ; preds = %134, %134, %117, %139
  %143 = phi %"class.blink::Node"* [ null, %139 ], [ null, %134 ], [ null, %134 ], [ %119, %117 ]
  %144 = load i32, i32* %32, align 8
  %145 = icmp sgt i32 %144, 1
  br i1 %145, label %152, label %146

146:                                              ; preds = %142
  %147 = load i64*, i64** %4, align 8
  %148 = getelementptr inbounds i64, i64* %147, i64 1
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, 160
  %151 = inttoptr i64 %150 to %"class.v8::Value"*
  br label %156

152:                                              ; preds = %142
  %153 = load i64*, i64** %56, align 8
  %154 = getelementptr inbounds i64, i64* %153, i64 1
  %155 = bitcast i64* %154 to %"class.v8::Value"*
  br label %156

156:                                              ; preds = %146, %152
  %157 = phi %"class.v8::Value"* [ %151, %146 ], [ %155, %152 ]
  %158 = bitcast %"class.v8::Value"* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = and i64 %159, 3
  %161 = icmp eq i64 %160, 1
  br i1 %161, label %162, label %179

162:                                              ; preds = %156
  %163 = add i64 %159, -1
  %164 = inttoptr i64 %163 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = and i64 %159, -4294967296
  %167 = zext i32 %165 to i64
  %168 = or i64 %166, %167
  %169 = add i64 %168, 7
  %170 = inttoptr i64 %169 to i16*
  %171 = load i16, i16* %170, align 2
  %172 = icmp eq i16 %171, 67
  br i1 %172, label %173, label %179

173:                                              ; preds = %162
  %174 = add i64 %159, 23
  %175 = inttoptr i64 %174 to i32*
  %176 = load i32, i32* %175, align 4
  %177 = and i32 %176, -2
  %178 = icmp eq i32 %177, 10
  br i1 %178, label %207, label %179

179:                                              ; preds = %162, %156, %173
  br i1 %145, label %186, label %180

180:                                              ; preds = %179
  %181 = load i64*, i64** %4, align 8
  %182 = getelementptr inbounds i64, i64* %181, i64 1
  %183 = load i64, i64* %182, align 8
  %184 = add i64 %183, 160
  %185 = inttoptr i64 %184 to %"class.v8::Value"*
  br label %190

186:                                              ; preds = %179
  %187 = load i64*, i64** %56, align 8
  %188 = getelementptr inbounds i64, i64* %187, i64 1
  %189 = bitcast i64* %188 to %"class.v8::Value"*
  br label %190

190:                                              ; preds = %180, %186
  %191 = phi %"class.v8::Value"* [ %185, %180 ], [ %189, %186 ]
  %192 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %191) #6
  br i1 %192, label %193, label %196, !prof !3

193:                                              ; preds = %190
  %194 = bitcast %"class.v8::Value"* %191 to %"class.v8::Uint32"*
  %195 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %194) #6
  br label %203

196:                                              ; preds = %190
  %197 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %191) #6
  br i1 %197, label %198, label %201, !prof !3

198:                                              ; preds = %196
  %199 = bitcast %"class.v8::Value"* %191 to %"class.v8::Int32"*
  %200 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %199) #6
  br label %203

201:                                              ; preds = %196
  %202 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %191, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %203

203:                                              ; preds = %193, %198, %201
  %204 = phi i32 [ %195, %193 ], [ %200, %198 ], [ %202, %201 ]
  %205 = load i32, i32* %29, align 8
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %203, %173
  %208 = phi i32 [ %204, %203 ], [ 0, %173 ]
  call void @_ZN5blink12DOMSelection8collapseEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::DOMSelection"* %90, %"class.blink::Node"* %143, i32 %208, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %209

209:                                              ; preds = %203, %139, %207, %54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %210 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %211 = load i64*, i64** %210, align 8
  %212 = icmp eq i64* %211, null
  br i1 %212, label %222, label %213

213:                                              ; preds = %209
  %214 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %215 = bitcast %"class.v8::Isolate"* %214 to %"class.v8::internal::Isolate"*
  %216 = load i64, i64* %211, align 8
  %217 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %215, i64 %216) #6
  %218 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %214) #6
  br i1 %218, label %222, label %219

219:                                              ; preds = %213
  %220 = bitcast i64* %217 to %"class.v8::Value"*
  %221 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %214, %"class.v8::Value"* %220) #6
  br label %222

222:                                              ; preds = %219, %213, %209
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %224, label %238, label %225

225:                                              ; preds = %222
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  br i1 %229, label %232, label %234

232:                                              ; preds = %225
  %233 = add i32 %231, -1
  store i32 %233, i32* %230, align 4
  br label %234

234:                                              ; preds = %232, %225
  %235 = phi i32 [ %233, %232 ], [ %231, %225 ]
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %234
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %223) #6
  br label %238

238:                                              ; preds = %222, %234, %237
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection30CollapseToEndOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 1008) #6
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %19, %19, %19
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %19
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::DOMSelection"*
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #6
  call void @_ZN5blink12DOMSelection13collapseToEndERNS_14ExceptionStateE(%"class.blink::DOMSelection"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %54 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = icmp eq i64* %55, null
  br i1 %56, label %66, label %57

57:                                               ; preds = %40
  %58 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %59 = bitcast %"class.v8::Isolate"* %58 to %"class.v8::internal::Isolate"*
  %60 = load i64, i64* %55, align 8
  %61 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %59, i64 %60) #6
  %62 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %58) #6
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = bitcast i64* %61 to %"class.v8::Value"*
  %65 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %58, %"class.v8::Value"* %64) #6
  br label %66

66:                                               ; preds = %63, %57, %40
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #6
  br label %82

82:                                               ; preds = %66, %78, %81
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection32CollapseToStartOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 1007) #6
  br label %19

19:                                               ; preds = %1, %14
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %23, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  switch i16 %32, label %37 [
    i16 1057, label %33
    i16 1056, label %33
    i16 1040, label %33
  ]

33:                                               ; preds = %19, %19, %19
  %34 = add i64 %23, 19
  %35 = inttoptr i64 %34 to i8**
  %36 = load i8*, i8** %35, align 1
  br label %40

37:                                               ; preds = %19
  %38 = bitcast i64* %22 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %38, i32 1) #6
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi i8* [ %36, %33 ], [ %39, %37 ]
  %42 = bitcast i8* %41 to %"class.blink::DOMSelection"*
  %43 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %43) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %45, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %46, align 2
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %48 = bitcast i8** %47 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)>, <2 x i8*>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %7, %"class.v8::Isolate"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %53 = bitcast %"class.WTF::StringImpl"** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #6
  call void @_ZN5blink12DOMSelection15collapseToStartERNS_14ExceptionStateE(%"class.blink::DOMSelection"* %42, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %54 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = icmp eq i64* %55, null
  br i1 %56, label %66, label %57

57:                                               ; preds = %40
  %58 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %50, align 8
  %59 = bitcast %"class.v8::Isolate"* %58 to %"class.v8::internal::Isolate"*
  %60 = load i64, i64* %55, align 8
  %61 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %59, i64 %60) #6
  %62 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %58) #6
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = bitcast i64* %61 to %"class.v8::Value"*
  %65 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %58, %"class.v8::Value"* %64) #6
  br label %66

66:                                               ; preds = %63, %57, %40
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #6
  br label %82

82:                                               ; preds = %66, %78, %81
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %43) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection29ContainsNodeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %8) #6
  %10 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %9) #6
  %11 = icmp eq %"class.blink::ExecutionContext"* %10, null
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %10, i64 0, i32 3
  %13 = icmp eq %"class.blink::UseCounter"* %12, null
  %14 = or i1 %11, %13
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::UseCounter"* %12 to void (%"class.blink::UseCounter"*, i32)***
  %17 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, i64 3
  %19 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, align 8
  tail call void %19(%"class.blink::UseCounter"* nonnull %12, i32 525) #6
  br label %20

20:                                               ; preds = %1, %15
  %21 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 56, i1 false)
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %24, align 2
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %26 = bitcast i8** %25 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0)>, <2 x i8*>* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %31 = bitcast %"class.WTF::StringImpl"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #6
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp slt i32 %33, 1
  br i1 %34, label %35, label %55, !prof !2

35:                                               ; preds = %20
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  %37 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %33) #6
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #6
  br label %54

54:                                               ; preds = %35, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  br label %194

55:                                               ; preds = %20
  %56 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 -1
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = and i64 %59, -4294967296
  %64 = zext i32 %62 to i64
  %65 = or i64 %63, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load i16, i16* %67, align 2
  switch i16 %68, label %73 [
    i16 1057, label %69
    i16 1056, label %69
    i16 1040, label %69
  ]

69:                                               ; preds = %55, %55, %55
  %70 = add i64 %59, 19
  %71 = inttoptr i64 %70 to %"class.blink::DOMSelection"**
  %72 = load %"class.blink::DOMSelection"*, %"class.blink::DOMSelection"** %71, align 1
  br label %85

73:                                               ; preds = %55
  %74 = bitcast i64* %58 to %"class.v8::Object"*
  %75 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %74, i32 1) #6
  %76 = load i32, i32* %32, align 8
  %77 = bitcast i8* %75 to %"class.blink::DOMSelection"*
  %78 = icmp sgt i32 %76, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %73
  %80 = load i64*, i64** %4, align 8
  %81 = getelementptr inbounds i64, i64* %80, i64 1
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 160
  %84 = inttoptr i64 %83 to %"class.v8::Value"*
  br label %89

85:                                               ; preds = %69, %73
  %86 = phi %"class.blink::DOMSelection"* [ %72, %69 ], [ %77, %73 ]
  %87 = bitcast i64** %56 to %"class.v8::Value"**
  %88 = load %"class.v8::Value"*, %"class.v8::Value"** %87, align 8
  br label %89

89:                                               ; preds = %79, %85
  %90 = phi %"class.blink::DOMSelection"* [ %77, %79 ], [ %86, %85 ]
  %91 = phi %"class.v8::Value"* [ %84, %79 ], [ %88, %85 ]
  %92 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink4Node18wrapper_type_info_E, align 8
  %93 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %94 = add i64 %93, 8
  %95 = inttoptr i64 %94 to %"class.blink::V8PerIsolateData"**
  %96 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %95, align 8
  %97 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %96, %"struct.blink::WrapperTypeInfo"* %92, %"class.v8::Value"* %91) #6
  br i1 %97, label %98, label %120

98:                                               ; preds = %89
  %99 = bitcast %"class.v8::Value"* %91 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, -1
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = and i64 %100, -4294967296
  %105 = zext i32 %103 to i64
  %106 = or i64 %104, %105
  %107 = add i64 %106, 7
  %108 = inttoptr i64 %107 to i16*
  %109 = load i16, i16* %108, align 2
  switch i16 %109, label %114 [
    i16 1057, label %110
    i16 1056, label %110
    i16 1040, label %110
  ]

110:                                              ; preds = %98, %98, %98
  %111 = add i64 %100, 19
  %112 = inttoptr i64 %111 to i8**
  %113 = load i8*, i8** %112, align 1
  br label %117

114:                                              ; preds = %98
  %115 = bitcast %"class.v8::Value"* %91 to %"class.v8::Object"*
  %116 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %115, i32 1) #6
  br label %117

117:                                              ; preds = %110, %114
  %118 = phi i8* [ %113, %110 ], [ %116, %114 ]
  %119 = bitcast i8* %118 to %"class.blink::Node"*
  br label %123

120:                                              ; preds = %89
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %92, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %121 = load i32, i32* %29, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %194

123:                                              ; preds = %117, %120
  %124 = phi %"class.blink::Node"* [ %119, %117 ], [ null, %120 ]
  %125 = load i32, i32* %32, align 8
  %126 = icmp sgt i32 %125, 1
  br i1 %126, label %133, label %127

127:                                              ; preds = %123
  %128 = load i64*, i64** %4, align 8
  %129 = getelementptr inbounds i64, i64* %128, i64 1
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, 160
  %132 = inttoptr i64 %131 to %"class.v8::Value"*
  br label %137

133:                                              ; preds = %123
  %134 = load i64*, i64** %56, align 8
  %135 = getelementptr inbounds i64, i64* %134, i64 1
  %136 = bitcast i64* %135 to %"class.v8::Value"*
  br label %137

137:                                              ; preds = %127, %133
  %138 = phi %"class.v8::Value"* [ %132, %127 ], [ %136, %133 ]
  %139 = bitcast %"class.v8::Value"* %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = and i64 %140, 3
  %142 = icmp eq i64 %141, 1
  br i1 %142, label %143, label %160

143:                                              ; preds = %137
  %144 = add i64 %140, -1
  %145 = inttoptr i64 %144 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = and i64 %140, -4294967296
  %148 = zext i32 %146 to i64
  %149 = or i64 %147, %148
  %150 = add i64 %149, 7
  %151 = inttoptr i64 %150 to i16*
  %152 = load i16, i16* %151, align 2
  %153 = icmp eq i16 %152, 67
  br i1 %153, label %154, label %160

154:                                              ; preds = %143
  %155 = add i64 %140, 23
  %156 = inttoptr i64 %155 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = and i32 %157, -2
  %159 = icmp eq i32 %158, 10
  br i1 %159, label %183, label %160

160:                                              ; preds = %143, %137, %154
  br i1 %126, label %167, label %161

161:                                              ; preds = %160
  %162 = load i64*, i64** %4, align 8
  %163 = getelementptr inbounds i64, i64* %162, i64 1
  %164 = load i64, i64* %163, align 8
  %165 = add i64 %164, 160
  %166 = inttoptr i64 %165 to %"class.v8::Value"*
  br label %171

167:                                              ; preds = %160
  %168 = load i64*, i64** %56, align 8
  %169 = getelementptr inbounds i64, i64* %168, i64 1
  %170 = bitcast i64* %169 to %"class.v8::Value"*
  br label %171

171:                                              ; preds = %161, %167
  %172 = phi %"class.v8::Value"* [ %166, %161 ], [ %170, %167 ]
  %173 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %172) #6
  br i1 %173, label %174, label %177, !prof !3

174:                                              ; preds = %171
  %175 = bitcast %"class.v8::Value"* %172 to %"class.v8::Boolean"*
  %176 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %175) #6
  br label %179

177:                                              ; preds = %171
  %178 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %172, %"class.v8::Isolate"* %8) #6
  br label %179

179:                                              ; preds = %174, %177
  %180 = phi i1 [ %176, %174 ], [ %178, %177 ]
  %181 = load i32, i32* %29, align 8
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %194

183:                                              ; preds = %179, %154
  %184 = phi i1 [ %180, %179 ], [ false, %154 ]
  %185 = call zeroext i1 @_ZNK5blink12DOMSelection12containsNodeEPKNS_4NodeEb(%"class.blink::DOMSelection"* %90, %"class.blink::Node"* %124, i1 zeroext %184) #6
  %186 = load i64*, i64** %4, align 8
  %187 = getelementptr inbounds i64, i64* %186, i64 3
  %188 = getelementptr inbounds i64, i64* %186, i64 1
  %189 = load i64, i64* %188, align 8
  %190 = select i1 %185, i64 184, i64 192
  %191 = add i64 %189, %190
  %192 = inttoptr i64 %191 to i64*
  %193 = load i64, i64* %192, align 8
  store i64 %193, i64* %187, align 8
  br label %194

194:                                              ; preds = %179, %120, %183, %54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %195 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %196 = load i64*, i64** %195, align 8
  %197 = icmp eq i64* %196, null
  br i1 %197, label %207, label %198

198:                                              ; preds = %194
  %199 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %200 = bitcast %"class.v8::Isolate"* %199 to %"class.v8::internal::Isolate"*
  %201 = load i64, i64* %196, align 8
  %202 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %200, i64 %201) #6
  %203 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %199) #6
  br i1 %203, label %207, label %204

204:                                              ; preds = %198
  %205 = bitcast i64* %202 to %"class.v8::Value"*
  %206 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %199, %"class.v8::Value"* %205) #6
  br label %207

207:                                              ; preds = %204, %198, %194
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %207
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #6
  br label %223

223:                                              ; preds = %207, %219, %222
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection35DeleteFromDocumentOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::CEReactionsScope", align 8
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = bitcast i64* %5 to %"class.v8::Isolate"**
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %7) #6
  %9 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %8) #6
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  %11 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %9, i64 0, i32 3
  %12 = icmp eq %"class.blink::UseCounter"* %11, null
  %13 = or i1 %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::UseCounter"* %11 to void (%"class.blink::UseCounter"*, i32)***
  %16 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, i64 3
  %18 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, align 8
  tail call void %18(%"class.blink::UseCounter"* nonnull %11, i32 1011) #6
  br label %19

19:                                               ; preds = %1, %14
  %20 = bitcast %"class.blink::CEReactionsScope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #6
  %21 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %2, i64 0, i32 1
  %22 = bitcast %"class.blink::CEReactionsScope"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %24 = bitcast %"class.blink::CEReactionsScope"* %2 to i64*
  store i64 %23, i64* %24, align 8
  store i8 0, i8* %21, align 8
  store %"class.blink::CEReactionsScope"* %2, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 -1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = and i64 %28, -4294967296
  %33 = zext i32 %31 to i64
  %34 = or i64 %32, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load i16, i16* %36, align 2
  switch i16 %37, label %42 [
    i16 1057, label %38
    i16 1056, label %38
    i16 1040, label %38
  ]

38:                                               ; preds = %19, %19, %19
  %39 = add i64 %28, 19
  %40 = inttoptr i64 %39 to i8**
  %41 = load i8*, i8** %40, align 1
  br label %45

42:                                               ; preds = %19
  %43 = bitcast i64* %27 to %"class.v8::Object"*
  %44 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %43, i32 1) #6
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi i8* [ %41, %38 ], [ %44, %42 ]
  %47 = bitcast i8* %46 to %"class.blink::DOMSelection"*
  call void @_ZN5blink12DOMSelection18deleteFromDocumentEv(%"class.blink::DOMSelection"* %47) #6
  %48 = load i8, i8* %21, align 8, !range !4
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %45
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %2) #6
  br label %51

51:                                               ; preds = %45, %50
  %52 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection22EmptyOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #6
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #6
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 407) #6
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #6
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = bitcast i8* %40 to %"class.blink::DOMSelection"*
  tail call void @_ZN5blink12DOMSelection5emptyEv(%"class.blink::DOMSelection"* %41) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection23ExtendOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %8) #6
  %10 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %9) #6
  %11 = icmp eq %"class.blink::ExecutionContext"* %10, null
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %10, i64 0, i32 3
  %13 = icmp eq %"class.blink::UseCounter"* %12, null
  %14 = or i1 %11, %13
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::UseCounter"* %12 to void (%"class.blink::UseCounter"*, i32)***
  %17 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, i64 3
  %19 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, align 8
  tail call void %19(%"class.blink::UseCounter"* nonnull %12, i32 1009) #6
  br label %20

20:                                               ; preds = %1, %15
  %21 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 56, i1 false)
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %24, align 2
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %26 = bitcast i8** %25 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0)>, <2 x i8*>* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %31 = bitcast %"class.WTF::StringImpl"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #6
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp slt i32 %33, 1
  br i1 %34, label %35, label %55, !prof !2

35:                                               ; preds = %20
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  %37 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %33) #6
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #6
  br label %54

54:                                               ; preds = %35, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  br label %190

55:                                               ; preds = %20
  %56 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 -1
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = and i64 %59, -4294967296
  %64 = zext i32 %62 to i64
  %65 = or i64 %63, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load i16, i16* %67, align 2
  switch i16 %68, label %73 [
    i16 1057, label %69
    i16 1056, label %69
    i16 1040, label %69
  ]

69:                                               ; preds = %55, %55, %55
  %70 = add i64 %59, 19
  %71 = inttoptr i64 %70 to %"class.blink::DOMSelection"**
  %72 = load %"class.blink::DOMSelection"*, %"class.blink::DOMSelection"** %71, align 1
  br label %85

73:                                               ; preds = %55
  %74 = bitcast i64* %58 to %"class.v8::Object"*
  %75 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %74, i32 1) #6
  %76 = load i32, i32* %32, align 8
  %77 = bitcast i8* %75 to %"class.blink::DOMSelection"*
  %78 = icmp sgt i32 %76, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %73
  %80 = load i64*, i64** %4, align 8
  %81 = getelementptr inbounds i64, i64* %80, i64 1
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 160
  %84 = inttoptr i64 %83 to %"class.v8::Value"*
  br label %89

85:                                               ; preds = %69, %73
  %86 = phi %"class.blink::DOMSelection"* [ %72, %69 ], [ %77, %73 ]
  %87 = bitcast i64** %56 to %"class.v8::Value"**
  %88 = load %"class.v8::Value"*, %"class.v8::Value"** %87, align 8
  br label %89

89:                                               ; preds = %79, %85
  %90 = phi %"class.blink::DOMSelection"* [ %77, %79 ], [ %86, %85 ]
  %91 = phi %"class.v8::Value"* [ %84, %79 ], [ %88, %85 ]
  %92 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink4Node18wrapper_type_info_E, align 8
  %93 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %94 = add i64 %93, 8
  %95 = inttoptr i64 %94 to %"class.blink::V8PerIsolateData"**
  %96 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %95, align 8
  %97 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %96, %"struct.blink::WrapperTypeInfo"* %92, %"class.v8::Value"* %91) #6
  br i1 %97, label %98, label %120

98:                                               ; preds = %89
  %99 = bitcast %"class.v8::Value"* %91 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, -1
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = and i64 %100, -4294967296
  %105 = zext i32 %103 to i64
  %106 = or i64 %104, %105
  %107 = add i64 %106, 7
  %108 = inttoptr i64 %107 to i16*
  %109 = load i16, i16* %108, align 2
  switch i16 %109, label %114 [
    i16 1057, label %110
    i16 1056, label %110
    i16 1040, label %110
  ]

110:                                              ; preds = %98, %98, %98
  %111 = add i64 %100, 19
  %112 = inttoptr i64 %111 to i8**
  %113 = load i8*, i8** %112, align 1
  br label %117

114:                                              ; preds = %98
  %115 = bitcast %"class.v8::Value"* %91 to %"class.v8::Object"*
  %116 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %115, i32 1) #6
  br label %117

117:                                              ; preds = %110, %114
  %118 = phi i8* [ %113, %110 ], [ %116, %114 ]
  %119 = bitcast i8* %118 to %"class.blink::Node"*
  br label %123

120:                                              ; preds = %89
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %92, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %121 = load i32, i32* %29, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %190

123:                                              ; preds = %117, %120
  %124 = phi %"class.blink::Node"* [ %119, %117 ], [ null, %120 ]
  %125 = load i32, i32* %32, align 8
  %126 = icmp sgt i32 %125, 1
  br i1 %126, label %133, label %127

127:                                              ; preds = %123
  %128 = load i64*, i64** %4, align 8
  %129 = getelementptr inbounds i64, i64* %128, i64 1
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, 160
  %132 = inttoptr i64 %131 to %"class.v8::Value"*
  br label %137

133:                                              ; preds = %123
  %134 = load i64*, i64** %56, align 8
  %135 = getelementptr inbounds i64, i64* %134, i64 1
  %136 = bitcast i64* %135 to %"class.v8::Value"*
  br label %137

137:                                              ; preds = %127, %133
  %138 = phi %"class.v8::Value"* [ %132, %127 ], [ %136, %133 ]
  %139 = bitcast %"class.v8::Value"* %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = and i64 %140, 3
  %142 = icmp eq i64 %141, 1
  br i1 %142, label %143, label %160

143:                                              ; preds = %137
  %144 = add i64 %140, -1
  %145 = inttoptr i64 %144 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = and i64 %140, -4294967296
  %148 = zext i32 %146 to i64
  %149 = or i64 %147, %148
  %150 = add i64 %149, 7
  %151 = inttoptr i64 %150 to i16*
  %152 = load i16, i16* %151, align 2
  %153 = icmp eq i16 %152, 67
  br i1 %153, label %154, label %160

154:                                              ; preds = %143
  %155 = add i64 %140, 23
  %156 = inttoptr i64 %155 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = and i32 %157, -2
  %159 = icmp eq i32 %158, 10
  br i1 %159, label %188, label %160

160:                                              ; preds = %143, %137, %154
  br i1 %126, label %167, label %161

161:                                              ; preds = %160
  %162 = load i64*, i64** %4, align 8
  %163 = getelementptr inbounds i64, i64* %162, i64 1
  %164 = load i64, i64* %163, align 8
  %165 = add i64 %164, 160
  %166 = inttoptr i64 %165 to %"class.v8::Value"*
  br label %171

167:                                              ; preds = %160
  %168 = load i64*, i64** %56, align 8
  %169 = getelementptr inbounds i64, i64* %168, i64 1
  %170 = bitcast i64* %169 to %"class.v8::Value"*
  br label %171

171:                                              ; preds = %161, %167
  %172 = phi %"class.v8::Value"* [ %166, %161 ], [ %170, %167 ]
  %173 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %172) #6
  br i1 %173, label %174, label %177, !prof !3

174:                                              ; preds = %171
  %175 = bitcast %"class.v8::Value"* %172 to %"class.v8::Uint32"*
  %176 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %175) #6
  br label %184

177:                                              ; preds = %171
  %178 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %172) #6
  br i1 %178, label %179, label %182, !prof !3

179:                                              ; preds = %177
  %180 = bitcast %"class.v8::Value"* %172 to %"class.v8::Int32"*
  %181 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %180) #6
  br label %184

182:                                              ; preds = %177
  %183 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %172, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %184

184:                                              ; preds = %174, %179, %182
  %185 = phi i32 [ %176, %174 ], [ %181, %179 ], [ %183, %182 ]
  %186 = load i32, i32* %29, align 8
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %190

188:                                              ; preds = %184, %154
  %189 = phi i32 [ %185, %184 ], [ 0, %154 ]
  call void @_ZN5blink12DOMSelection6extendEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::DOMSelection"* %90, %"class.blink::Node"* %124, i32 %189, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %190

190:                                              ; preds = %184, %120, %188, %54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %191 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %192 = load i64*, i64** %191, align 8
  %193 = icmp eq i64* %192, null
  br i1 %193, label %203, label %194

194:                                              ; preds = %190
  %195 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %196 = bitcast %"class.v8::Isolate"* %195 to %"class.v8::internal::Isolate"*
  %197 = load i64, i64* %192, align 8
  %198 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %196, i64 %197) #6
  %199 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %195) #6
  br i1 %199, label %203, label %200

200:                                              ; preds = %194
  %201 = bitcast i64* %198 to %"class.v8::Value"*
  %202 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %195, %"class.v8::Value"* %201) #6
  br label %203

203:                                              ; preds = %200, %194, %190
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #6
  br label %219

219:                                              ; preds = %203, %215, %218
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection27GetRangeAtOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %8) #6
  %10 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %9) #6
  %11 = icmp eq %"class.blink::ExecutionContext"* %10, null
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %10, i64 0, i32 3
  %13 = icmp eq %"class.blink::UseCounter"* %12, null
  %14 = or i1 %11, %13
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::UseCounter"* %12 to void (%"class.blink::UseCounter"*, i32)***
  %17 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, i64 3
  %19 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, align 8
  tail call void %19(%"class.blink::UseCounter"* nonnull %12, i32 1003) #6
  br label %20

20:                                               ; preds = %1, %15
  %21 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 56, i1 false)
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %24, align 2
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %26 = bitcast i8** %25 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0)>, <2 x i8*>* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %31 = bitcast %"class.WTF::StringImpl"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #6
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp slt i32 %33, 1
  br i1 %34, label %35, label %55, !prof !2

35:                                               ; preds = %20
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  %37 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %33) #6
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #6
  br label %54

54:                                               ; preds = %35, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  br label %147

55:                                               ; preds = %20
  %56 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 -1
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = and i64 %59, -4294967296
  %64 = zext i32 %62 to i64
  %65 = or i64 %63, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load i16, i16* %67, align 2
  switch i16 %68, label %74 [
    i16 1057, label %69
    i16 1056, label %69
    i16 1040, label %69
  ]

69:                                               ; preds = %55, %55, %55
  %70 = add i64 %59, 19
  %71 = inttoptr i64 %70 to i8**
  %72 = load i8*, i8** %71, align 1
  %73 = bitcast i8* %72 to %"class.blink::DOMSelection"*
  br label %86

74:                                               ; preds = %55
  %75 = bitcast i64* %58 to %"class.v8::Object"*
  %76 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %75, i32 1) #6
  %77 = load i32, i32* %32, align 8
  %78 = bitcast i8* %76 to %"class.blink::DOMSelection"*
  %79 = icmp sgt i32 %77, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %74
  %81 = load i64*, i64** %4, align 8
  %82 = getelementptr inbounds i64, i64* %81, i64 1
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 160
  %85 = inttoptr i64 %84 to %"class.v8::Value"*
  br label %91

86:                                               ; preds = %69, %74
  %87 = phi %"class.blink::DOMSelection"* [ %73, %69 ], [ %78, %74 ]
  %88 = phi i8* [ %72, %69 ], [ %76, %74 ]
  %89 = bitcast i64** %56 to %"class.v8::Value"**
  %90 = load %"class.v8::Value"*, %"class.v8::Value"** %89, align 8
  br label %91

91:                                               ; preds = %80, %86
  %92 = phi %"class.blink::DOMSelection"* [ %78, %80 ], [ %87, %86 ]
  %93 = phi i8* [ %76, %80 ], [ %88, %86 ]
  %94 = phi %"class.v8::Value"* [ %85, %80 ], [ %90, %86 ]
  %95 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %94) #6
  br i1 %95, label %96, label %99, !prof !3

96:                                               ; preds = %91
  %97 = bitcast %"class.v8::Value"* %94 to %"class.v8::Uint32"*
  %98 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %97) #6
  br label %108

99:                                               ; preds = %91
  %100 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %94) #6
  br i1 %100, label %101, label %104, !prof !3

101:                                              ; preds = %99
  %102 = bitcast %"class.v8::Value"* %94 to %"class.v8::Int32"*
  %103 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %102) #6
  br label %108

104:                                              ; preds = %99
  %105 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %94, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %106 = load i32, i32* %29, align 8
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %147

108:                                              ; preds = %101, %96, %104
  %109 = phi i32 [ %105, %104 ], [ %103, %101 ], [ %98, %96 ]
  %110 = call %"class.blink::Range"* @_ZNK5blink12DOMSelection10getRangeAtEjRNS_14ExceptionStateE(%"class.blink::DOMSelection"* %92, i32 %109, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %111 = load i32, i32* %29, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %147

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.blink::Range", %"class.blink::Range"* %110, i64 0, i32 0, i32 0
  %115 = icmp eq %"class.blink::Range"* %110, null
  %116 = load i64*, i64** %4, align 8
  %117 = getelementptr inbounds i64, i64* %116, i64 3
  br i1 %115, label %118, label %124, !prof !2

118:                                              ; preds = %113
  %119 = getelementptr inbounds i64, i64* %116, i64 1
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %120, 176
  %122 = inttoptr i64 %121 to i64*
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  br label %147

124:                                              ; preds = %113
  %125 = bitcast i8* %93 to %"class.blink::ScriptWrappable"*
  %126 = load i64*, i64** %56, align 8
  %127 = getelementptr inbounds i64, i64* %126, i64 -1
  %128 = bitcast i64* %127 to %"class.v8::Object"*
  %129 = call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %117, %"class.blink::ScriptWrappable"* nonnull %114, %"class.v8::Object"* %128, %"class.blink::ScriptWrappable"* %125) #6
  br i1 %129, label %147, label %130

130:                                              ; preds = %124
  %131 = load i64*, i64** %56, align 8
  %132 = getelementptr inbounds i64, i64* %131, i64 -1
  %133 = bitcast i64* %132 to %"class.v8::Object"*
  %134 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %133) #6
  %135 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %134) #6
  %136 = bitcast %"class.blink::Range"* %110 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %137 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %136, align 8
  %138 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %137, i64 7
  %139 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %138, align 8
  %140 = call %"class.v8::Value"* %139(%"class.blink::ScriptWrappable"* nonnull %114, %"class.blink::ScriptState"* %135) #6
  %141 = icmp eq %"class.v8::Value"* %140, null
  br i1 %141, label %147, label %142

142:                                              ; preds = %130
  %143 = load i64*, i64** %4, align 8
  %144 = getelementptr inbounds i64, i64* %143, i64 3
  %145 = bitcast %"class.v8::Value"* %140 to i64*
  %146 = load i64, i64* %145, align 8
  store i64 %146, i64* %144, align 8
  br label %147

147:                                              ; preds = %108, %104, %142, %130, %124, %118, %54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %148 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %149 = load i64*, i64** %148, align 8
  %150 = icmp eq i64* %149, null
  br i1 %150, label %160, label %151

151:                                              ; preds = %147
  %152 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %153 = bitcast %"class.v8::Isolate"* %152 to %"class.v8::internal::Isolate"*
  %154 = load i64, i64* %149, align 8
  %155 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %153, i64 %154) #6
  %156 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %152) #6
  br i1 %156, label %160, label %157

157:                                              ; preds = %151
  %158 = bitcast i64* %155 to %"class.v8::Value"*
  %159 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %152, %"class.v8::Value"* %158) #6
  br label %160

160:                                              ; preds = %157, %151, %147
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #6
  br label %176

176:                                              ; preds = %160, %172, %175
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection23ModifyOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.blink::ExceptionState", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::ExceptionState", align 8
  %7 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::ExceptionState", align 8
  %10 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds i64, i64* %15, i64 1
  %17 = bitcast i64* %16 to %"class.v8::Isolate"**
  %18 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %19 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %18) #6
  %20 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %19) #6
  %21 = icmp eq %"class.blink::ExecutionContext"* %20, null
  %22 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %20, i64 0, i32 3
  %23 = icmp eq %"class.blink::UseCounter"* %22, null
  %24 = or i1 %21, %23
  br i1 %24, label %30, label %25

25:                                               ; preds = %1
  %26 = bitcast %"class.blink::UseCounter"* %22 to void (%"class.blink::UseCounter"*, i32)***
  %27 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %27, i64 3
  %29 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %28, align 8
  tail call void %29(%"class.blink::UseCounter"* nonnull %22, i32 405) #6
  br label %30

30:                                               ; preds = %1, %25
  %31 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds i64, i64* %32, i64 -1
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, -1
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = and i64 %34, -4294967296
  %39 = zext i32 %37 to i64
  %40 = or i64 %38, %39
  %41 = add i64 %40, 7
  %42 = inttoptr i64 %41 to i16*
  %43 = load i16, i16* %42, align 2
  switch i16 %43, label %48 [
    i16 1057, label %44
    i16 1056, label %44
    i16 1040, label %44
  ]

44:                                               ; preds = %30, %30, %30
  %45 = add i64 %34, 19
  %46 = inttoptr i64 %45 to i8**
  %47 = load i8*, i8** %46, align 1
  br label %51

48:                                               ; preds = %30
  %49 = bitcast i64* %33 to %"class.v8::Object"*
  %50 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %49, i32 1) #6
  br label %51

51:                                               ; preds = %44, %48
  %52 = phi i8* [ %47, %44 ], [ %50, %48 ]
  %53 = bitcast i8* %52 to %"class.blink::DOMSelection"*
  %54 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %51
  %58 = load i64*, i64** %14, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 1
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 160
  %62 = inttoptr i64 %61 to %"class.v8::Value"*
  br label %66

63:                                               ; preds = %51
  %64 = bitcast i64** %31 to %"class.v8::Value"**
  %65 = load %"class.v8::Value"*, %"class.v8::Value"** %64, align 8
  br label %66

66:                                               ; preds = %57, %63
  %67 = phi %"class.v8::Value"* [ %62, %57 ], [ %65, %63 ]
  %68 = bitcast %"class.v8::Value"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = and i64 %69, 3
  %71 = icmp eq i64 %70, 1
  br i1 %71, label %72, label %96, !prof !5

72:                                               ; preds = %66
  %73 = add i64 %69, -1
  %74 = inttoptr i64 %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = and i64 %69, -4294967296
  %77 = zext i32 %75 to i64
  %78 = or i64 %76, %77
  %79 = add i64 %78, 7
  %80 = inttoptr i64 %79 to i16*
  %81 = load i16, i16* %80, align 2
  %82 = icmp ult i16 %81, 64
  br i1 %82, label %83, label %96, !prof !3

83:                                               ; preds = %72
  br i1 %56, label %90, label %84

84:                                               ; preds = %83
  %85 = load i64*, i64** %14, align 8
  %86 = getelementptr inbounds i64, i64* %85, i64 1
  %87 = load i64, i64* %86, align 8
  %88 = add i64 %87, 160
  %89 = inttoptr i64 %88 to %"class.v8::Value"*
  br label %93

90:                                               ; preds = %83
  %91 = bitcast i64** %31 to %"class.v8::Value"**
  %92 = load %"class.v8::Value"*, %"class.v8::Value"** %91, align 8
  br label %93

93:                                               ; preds = %84, %90
  %94 = phi %"class.v8::Value"* [ %89, %84 ], [ %92, %90 ]
  %95 = ptrtoint %"class.v8::Value"* %94 to i64
  br label %237

96:                                               ; preds = %66, %72
  br i1 %56, label %103, label %97

97:                                               ; preds = %96
  %98 = load i64*, i64** %14, align 8
  %99 = getelementptr inbounds i64, i64* %98, i64 1
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, 160
  %102 = inttoptr i64 %101 to %"class.v8::Value"*
  br label %106

103:                                              ; preds = %96
  %104 = bitcast i64** %31 to %"class.v8::Value"**
  %105 = load %"class.v8::Value"*, %"class.v8::Value"** %104, align 8
  br label %106

106:                                              ; preds = %97, %103
  %107 = phi %"class.v8::Value"* [ %102, %97 ], [ %105, %103 ]
  %108 = bitcast %"class.v8::Value"* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = and i64 %109, 3
  %111 = icmp eq i64 %110, 1
  br i1 %111, label %112, label %173

112:                                              ; preds = %106
  %113 = add i64 %109, -1
  %114 = inttoptr i64 %113 to i32*
  %115 = load i32, i32* %114, align 4
  %116 = and i64 %109, -4294967296
  %117 = zext i32 %115 to i64
  %118 = or i64 %116, %117
  %119 = add i64 %118, 7
  %120 = inttoptr i64 %119 to i16*
  %121 = load i16, i16* %120, align 2
  %122 = icmp eq i16 %121, 67
  br i1 %122, label %123, label %173

123:                                              ; preds = %112
  %124 = add i64 %109, 23
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = and i32 %126, -2
  %128 = icmp eq i32 %127, 10
  br i1 %128, label %129, label %173

129:                                              ; preds = %123
  %130 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #6
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.31, i64 0, i64 0), i64 0) #6
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %171, label %134

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %141, label %139

139:                                              ; preds = %134
  %140 = ptrtoint %"class.WTF::StringImpl"* %132 to i64
  br label %156

141:                                              ; preds = %134
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i33
  %145 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %144, i33 1) #6
  %146 = extractvalue { i33, i1 } %145, 1
  %147 = extractvalue { i33, i1 } %145, 0
  %148 = icmp slt i33 %147, 0
  %149 = or i1 %146, %148
  br i1 %149, label %150, label %151, !prof !2

150:                                              ; preds = %141
  call void @llvm.trap() #6
  unreachable

151:                                              ; preds = %141
  %152 = trunc i33 %147 to i32
  store i32 %152, i32* %142, align 4
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %154 = ptrtoint %"class.WTF::StringImpl"* %132 to i64
  %155 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %155, label %171, label %156

156:                                              ; preds = %139, %151
  %157 = phi i64 [ %140, %139 ], [ %154, %151 ]
  %158 = phi %"class.WTF::StringImpl"* [ %132, %139 ], [ %153, %151 ]
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %156
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %156
  %168 = phi i32 [ %166, %165 ], [ %164, %156 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #6
  br label %171

171:                                              ; preds = %129, %151, %167, %170
  %172 = phi i64 [ %154, %151 ], [ %157, %167 ], [ %157, %170 ], [ 0, %129 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #6
  br label %237

173:                                              ; preds = %112, %106, %123
  %174 = bitcast %"class.blink::ExceptionState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %174) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 -86, i64 56, i1 false)
  %175 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %175, align 8
  %176 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 0
  store i16 6, i16* %176, align 8
  %177 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 1
  store i16 0, i16* %177, align 2
  %178 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 1, i32 2
  %179 = bitcast i8** %178 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)>, <2 x i8*>* %179, align 8
  %180 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %180, align 8
  %181 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 3
  store %"class.v8::Isolate"* %18, %"class.v8::Isolate"** %181, align 8
  %182 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  store i32 0, i32* %182, align 8
  %183 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 5, i32 0, i32 0
  %184 = bitcast %"class.WTF::StringImpl"** %183 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %184, i8 0, i64 16, i1 false) #6
  %185 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %185) #6
  br i1 %56, label %192, label %186

186:                                              ; preds = %173
  %187 = load i64*, i64** %14, align 8
  %188 = getelementptr inbounds i64, i64* %187, i64 1
  %189 = load i64, i64* %188, align 8
  %190 = add i64 %189, 160
  %191 = inttoptr i64 %190 to %"class.v8::Value"*
  br label %195

192:                                              ; preds = %173
  %193 = bitcast i64** %31 to %"class.v8::Value"**
  %194 = load %"class.v8::Value"*, %"class.v8::Value"** %193, align 8
  br label %195

195:                                              ; preds = %186, %192
  %196 = phi %"class.v8::Value"* [ %191, %186 ], [ %194, %192 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %18, %"class.v8::Value"* %196, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %3) #6
  %197 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1
  %200 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %199, i64 0, i32 0, i32 0
  %201 = bitcast %"class.WTF::String"* %199 to i64*
  %202 = load i64, i64* %201, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %200, align 8
  %203 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1
  %204 = bitcast %"class.std::__1::unique_ptr.789"* %203 to i64*
  %205 = load i64, i64* %204, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %185) #6
  %206 = load i32, i32* %182, align 8
  %207 = icmp eq i32 %206, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %175, align 8
  %208 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %209 = load i64*, i64** %208, align 8
  %210 = icmp eq i64* %209, null
  br i1 %210, label %220, label %211

211:                                              ; preds = %195
  %212 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %181, align 8
  %213 = bitcast %"class.v8::Isolate"* %212 to %"class.v8::internal::Isolate"*
  %214 = load i64, i64* %209, align 8
  %215 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %213, i64 %214) #6
  %216 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %212) #6
  br i1 %216, label %220, label %217

217:                                              ; preds = %211
  %218 = bitcast i64* %215 to %"class.v8::Value"*
  %219 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %212, %"class.v8::Value"* %218) #6
  br label %220

220:                                              ; preds = %217, %211, %195
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %220
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #6
  br label %236

236:                                              ; preds = %220, %232, %235
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %174) #6
  br i1 %207, label %237, label %797

237:                                              ; preds = %171, %236, %93
  %238 = phi i64 [ 0, %93 ], [ 0, %171 ], [ %205, %236 ]
  %239 = phi i64 [ 0, %93 ], [ %172, %171 ], [ %202, %236 ]
  %240 = phi i64 [ %95, %93 ], [ 0, %171 ], [ %198, %236 ]
  %241 = load i32, i32* %54, align 8
  %242 = icmp sgt i32 %241, 1
  br i1 %242, label %249, label %243

243:                                              ; preds = %237
  %244 = load i64*, i64** %14, align 8
  %245 = getelementptr inbounds i64, i64* %244, i64 1
  %246 = load i64, i64* %245, align 8
  %247 = add i64 %246, 160
  %248 = inttoptr i64 %247 to %"class.v8::Value"*
  br label %253

249:                                              ; preds = %237
  %250 = load i64*, i64** %31, align 8
  %251 = getelementptr inbounds i64, i64* %250, i64 1
  %252 = bitcast i64* %251 to %"class.v8::Value"*
  br label %253

253:                                              ; preds = %243, %249
  %254 = phi %"class.v8::Value"* [ %248, %243 ], [ %252, %249 ]
  %255 = bitcast %"class.v8::Value"* %254 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = and i64 %256, 3
  %258 = icmp eq i64 %257, 1
  br i1 %258, label %259, label %284, !prof !5

259:                                              ; preds = %253
  %260 = add i64 %256, -1
  %261 = inttoptr i64 %260 to i32*
  %262 = load i32, i32* %261, align 4
  %263 = and i64 %256, -4294967296
  %264 = zext i32 %262 to i64
  %265 = or i64 %263, %264
  %266 = add i64 %265, 7
  %267 = inttoptr i64 %266 to i16*
  %268 = load i16, i16* %267, align 2
  %269 = icmp ult i16 %268, 64
  br i1 %269, label %270, label %284, !prof !3

270:                                              ; preds = %259
  br i1 %242, label %277, label %271

271:                                              ; preds = %270
  %272 = load i64*, i64** %14, align 8
  %273 = getelementptr inbounds i64, i64* %272, i64 1
  %274 = load i64, i64* %273, align 8
  %275 = add i64 %274, 160
  %276 = inttoptr i64 %275 to %"class.v8::Value"*
  br label %281

277:                                              ; preds = %270
  %278 = load i64*, i64** %31, align 8
  %279 = getelementptr inbounds i64, i64* %278, i64 1
  %280 = bitcast i64* %279 to %"class.v8::Value"*
  br label %281

281:                                              ; preds = %271, %277
  %282 = phi %"class.v8::Value"* [ %276, %271 ], [ %280, %277 ]
  %283 = ptrtoint %"class.v8::Value"* %282 to i64
  br label %427

284:                                              ; preds = %253, %259
  br i1 %242, label %291, label %285

285:                                              ; preds = %284
  %286 = load i64*, i64** %14, align 8
  %287 = getelementptr inbounds i64, i64* %286, i64 1
  %288 = load i64, i64* %287, align 8
  %289 = add i64 %288, 160
  %290 = inttoptr i64 %289 to %"class.v8::Value"*
  br label %295

291:                                              ; preds = %284
  %292 = load i64*, i64** %31, align 8
  %293 = getelementptr inbounds i64, i64* %292, i64 1
  %294 = bitcast i64* %293 to %"class.v8::Value"*
  br label %295

295:                                              ; preds = %285, %291
  %296 = phi %"class.v8::Value"* [ %290, %285 ], [ %294, %291 ]
  %297 = bitcast %"class.v8::Value"* %296 to i64*
  %298 = load i64, i64* %297, align 8
  %299 = and i64 %298, 3
  %300 = icmp eq i64 %299, 1
  br i1 %300, label %301, label %362

301:                                              ; preds = %295
  %302 = add i64 %298, -1
  %303 = inttoptr i64 %302 to i32*
  %304 = load i32, i32* %303, align 4
  %305 = and i64 %298, -4294967296
  %306 = zext i32 %304 to i64
  %307 = or i64 %305, %306
  %308 = add i64 %307, 7
  %309 = inttoptr i64 %308 to i16*
  %310 = load i16, i16* %309, align 2
  %311 = icmp eq i16 %310, 67
  br i1 %311, label %312, label %362

312:                                              ; preds = %301
  %313 = add i64 %298, 23
  %314 = inttoptr i64 %313 to i32*
  %315 = load i32, i32* %314, align 4
  %316 = and i32 %315, -2
  %317 = icmp eq i32 %316, 10
  br i1 %317, label %318, label %362

318:                                              ; preds = %312
  %319 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %319) #6
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.31, i64 0, i64 0), i64 0) #6
  %320 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %321 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %320, align 8
  %322 = icmp eq %"class.WTF::StringImpl"* %321, null
  br i1 %322, label %360, label %323

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load atomic i32, i32* %324 monotonic, align 4
  %326 = and i32 %325, 2
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %330, label %328

328:                                              ; preds = %323
  %329 = ptrtoint %"class.WTF::StringImpl"* %321 to i64
  br label %345

330:                                              ; preds = %323
  %331 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %321, i64 0, i32 0
  %332 = load i32, i32* %331, align 4
  %333 = zext i32 %332 to i33
  %334 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %333, i33 1) #6
  %335 = extractvalue { i33, i1 } %334, 1
  %336 = extractvalue { i33, i1 } %334, 0
  %337 = icmp slt i33 %336, 0
  %338 = or i1 %335, %337
  br i1 %338, label %339, label %340, !prof !2

339:                                              ; preds = %330
  call void @llvm.trap() #6
  unreachable

340:                                              ; preds = %330
  %341 = trunc i33 %336 to i32
  store i32 %341, i32* %331, align 4
  %342 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %320, align 8
  %343 = ptrtoint %"class.WTF::StringImpl"* %321 to i64
  %344 = icmp eq %"class.WTF::StringImpl"* %342, null
  br i1 %344, label %360, label %345

345:                                              ; preds = %328, %340
  %346 = phi i64 [ %329, %328 ], [ %343, %340 ]
  %347 = phi %"class.WTF::StringImpl"* [ %321, %328 ], [ %342, %340 ]
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %347, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = load atomic i32, i32* %348 monotonic, align 4
  %350 = and i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %347, i64 0, i32 0
  %353 = load i32, i32* %352, align 4
  br i1 %351, label %354, label %356

354:                                              ; preds = %345
  %355 = add i32 %353, -1
  store i32 %355, i32* %352, align 4
  br label %356

356:                                              ; preds = %354, %345
  %357 = phi i32 [ %355, %354 ], [ %353, %345 ]
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %360

359:                                              ; preds = %356
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %347) #6
  br label %360

360:                                              ; preds = %318, %340, %356, %359
  %361 = phi i64 [ %343, %340 ], [ %346, %356 ], [ %346, %359 ], [ 0, %318 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %319) #6
  br label %427

362:                                              ; preds = %301, %295, %312
  %363 = bitcast %"class.blink::ExceptionState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %363) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %363, i8 -86, i64 56, i1 false)
  %364 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %364, align 8
  %365 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 0
  store i16 6, i16* %365, align 8
  %366 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 1
  store i16 0, i16* %366, align 2
  %367 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 2
  %368 = bitcast i8** %367 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)>, <2 x i8*>* %368, align 8
  %369 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %369, align 8
  %370 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 3
  store %"class.v8::Isolate"* %18, %"class.v8::Isolate"** %370, align 8
  %371 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 4
  store i32 0, i32* %371, align 8
  %372 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 5, i32 0, i32 0
  %373 = bitcast %"class.WTF::StringImpl"** %372 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %373, i8 0, i64 16, i1 false) #6
  %374 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %374) #6
  br i1 %242, label %381, label %375

375:                                              ; preds = %362
  %376 = load i64*, i64** %14, align 8
  %377 = getelementptr inbounds i64, i64* %376, i64 1
  %378 = load i64, i64* %377, align 8
  %379 = add i64 %378, 160
  %380 = inttoptr i64 %379 to %"class.v8::Value"*
  br label %385

381:                                              ; preds = %362
  %382 = load i64*, i64** %31, align 8
  %383 = getelementptr inbounds i64, i64* %382, i64 1
  %384 = bitcast i64* %383 to %"class.v8::Value"*
  br label %385

385:                                              ; preds = %375, %381
  %386 = phi %"class.v8::Value"* [ %380, %375 ], [ %384, %381 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %7, %"class.v8::Isolate"* %18, %"class.v8::Value"* %386, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #6
  %387 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7 to i64*
  %388 = load i64, i64* %387, align 8
  %389 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7, i64 0, i32 1
  %390 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %389, i64 0, i32 0, i32 0
  %391 = bitcast %"class.WTF::String"* %389 to i64*
  %392 = load i64, i64* %391, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %390, align 8
  %393 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %7, i64 0, i32 2, i32 1
  %394 = bitcast %"class.std::__1::unique_ptr.789"* %393 to i64*
  %395 = load i64, i64* %394, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %374) #6
  %396 = load i32, i32* %371, align 8
  %397 = icmp eq i32 %396, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %364, align 8
  %398 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %399 = load i64*, i64** %398, align 8
  %400 = icmp eq i64* %399, null
  br i1 %400, label %410, label %401

401:                                              ; preds = %385
  %402 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %370, align 8
  %403 = bitcast %"class.v8::Isolate"* %402 to %"class.v8::internal::Isolate"*
  %404 = load i64, i64* %399, align 8
  %405 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %403, i64 %404) #6
  %406 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %402) #6
  br i1 %406, label %410, label %407

407:                                              ; preds = %401
  %408 = bitcast i64* %405 to %"class.v8::Value"*
  %409 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %402, %"class.v8::Value"* %408) #6
  br label %410

410:                                              ; preds = %407, %401, %385
  %411 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %372, align 8
  %412 = icmp eq %"class.WTF::StringImpl"* %411, null
  br i1 %412, label %426, label %413

413:                                              ; preds = %410
  %414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %411, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = load atomic i32, i32* %414 monotonic, align 4
  %416 = and i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %411, i64 0, i32 0
  %419 = load i32, i32* %418, align 4
  br i1 %417, label %420, label %422

420:                                              ; preds = %413
  %421 = add i32 %419, -1
  store i32 %421, i32* %418, align 4
  br label %422

422:                                              ; preds = %420, %413
  %423 = phi i32 [ %421, %420 ], [ %419, %413 ]
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %426

425:                                              ; preds = %422
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %411) #6
  br label %426

426:                                              ; preds = %410, %422, %425
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %363) #6
  br i1 %397, label %427, label %775

427:                                              ; preds = %360, %426, %281
  %428 = phi i64 [ 0, %281 ], [ 0, %360 ], [ %395, %426 ]
  %429 = phi i64 [ 0, %281 ], [ %361, %360 ], [ %392, %426 ]
  %430 = phi i64 [ %283, %281 ], [ 0, %360 ], [ %388, %426 ]
  %431 = load i32, i32* %54, align 8
  %432 = icmp sgt i32 %431, 2
  br i1 %432, label %439, label %433

433:                                              ; preds = %427
  %434 = load i64*, i64** %14, align 8
  %435 = getelementptr inbounds i64, i64* %434, i64 1
  %436 = load i64, i64* %435, align 8
  %437 = add i64 %436, 160
  %438 = inttoptr i64 %437 to %"class.v8::Value"*
  br label %443

439:                                              ; preds = %427
  %440 = load i64*, i64** %31, align 8
  %441 = getelementptr inbounds i64, i64* %440, i64 2
  %442 = bitcast i64* %441 to %"class.v8::Value"*
  br label %443

443:                                              ; preds = %433, %439
  %444 = phi %"class.v8::Value"* [ %438, %433 ], [ %442, %439 ]
  %445 = bitcast %"class.v8::Value"* %444 to i64*
  %446 = load i64, i64* %445, align 8
  %447 = and i64 %446, 3
  %448 = icmp eq i64 %447, 1
  br i1 %448, label %449, label %474, !prof !5

449:                                              ; preds = %443
  %450 = add i64 %446, -1
  %451 = inttoptr i64 %450 to i32*
  %452 = load i32, i32* %451, align 4
  %453 = and i64 %446, -4294967296
  %454 = zext i32 %452 to i64
  %455 = or i64 %453, %454
  %456 = add i64 %455, 7
  %457 = inttoptr i64 %456 to i16*
  %458 = load i16, i16* %457, align 2
  %459 = icmp ult i16 %458, 64
  br i1 %459, label %460, label %474, !prof !3

460:                                              ; preds = %449
  br i1 %432, label %467, label %461

461:                                              ; preds = %460
  %462 = load i64*, i64** %14, align 8
  %463 = getelementptr inbounds i64, i64* %462, i64 1
  %464 = load i64, i64* %463, align 8
  %465 = add i64 %464, 160
  %466 = inttoptr i64 %465 to %"class.v8::Value"*
  br label %471

467:                                              ; preds = %460
  %468 = load i64*, i64** %31, align 8
  %469 = getelementptr inbounds i64, i64* %468, i64 2
  %470 = bitcast i64* %469 to %"class.v8::Value"*
  br label %471

471:                                              ; preds = %461, %467
  %472 = phi %"class.v8::Value"* [ %466, %461 ], [ %470, %467 ]
  %473 = ptrtoint %"class.v8::Value"* %472 to i64
  br label %617

474:                                              ; preds = %443, %449
  br i1 %432, label %481, label %475

475:                                              ; preds = %474
  %476 = load i64*, i64** %14, align 8
  %477 = getelementptr inbounds i64, i64* %476, i64 1
  %478 = load i64, i64* %477, align 8
  %479 = add i64 %478, 160
  %480 = inttoptr i64 %479 to %"class.v8::Value"*
  br label %485

481:                                              ; preds = %474
  %482 = load i64*, i64** %31, align 8
  %483 = getelementptr inbounds i64, i64* %482, i64 2
  %484 = bitcast i64* %483 to %"class.v8::Value"*
  br label %485

485:                                              ; preds = %475, %481
  %486 = phi %"class.v8::Value"* [ %480, %475 ], [ %484, %481 ]
  %487 = bitcast %"class.v8::Value"* %486 to i64*
  %488 = load i64, i64* %487, align 8
  %489 = and i64 %488, 3
  %490 = icmp eq i64 %489, 1
  br i1 %490, label %491, label %552

491:                                              ; preds = %485
  %492 = add i64 %488, -1
  %493 = inttoptr i64 %492 to i32*
  %494 = load i32, i32* %493, align 4
  %495 = and i64 %488, -4294967296
  %496 = zext i32 %494 to i64
  %497 = or i64 %495, %496
  %498 = add i64 %497, 7
  %499 = inttoptr i64 %498 to i16*
  %500 = load i16, i16* %499, align 2
  %501 = icmp eq i16 %500, 67
  br i1 %501, label %502, label %552

502:                                              ; preds = %491
  %503 = add i64 %488, 23
  %504 = inttoptr i64 %503 to i32*
  %505 = load i32, i32* %504, align 4
  %506 = and i32 %505, -2
  %507 = icmp eq i32 %506, 10
  br i1 %507, label %508, label %552

508:                                              ; preds = %502
  %509 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %509) #6
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.31, i64 0, i64 0), i64 0) #6
  %510 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %511 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %510, align 8
  %512 = icmp eq %"class.WTF::StringImpl"* %511, null
  br i1 %512, label %550, label %513

513:                                              ; preds = %508
  %514 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %511, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %515 = load atomic i32, i32* %514 monotonic, align 4
  %516 = and i32 %515, 2
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %520, label %518

518:                                              ; preds = %513
  %519 = ptrtoint %"class.WTF::StringImpl"* %511 to i64
  br label %535

520:                                              ; preds = %513
  %521 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %511, i64 0, i32 0
  %522 = load i32, i32* %521, align 4
  %523 = zext i32 %522 to i33
  %524 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %523, i33 1) #6
  %525 = extractvalue { i33, i1 } %524, 1
  %526 = extractvalue { i33, i1 } %524, 0
  %527 = icmp slt i33 %526, 0
  %528 = or i1 %525, %527
  br i1 %528, label %529, label %530, !prof !2

529:                                              ; preds = %520
  call void @llvm.trap() #6
  unreachable

530:                                              ; preds = %520
  %531 = trunc i33 %526 to i32
  store i32 %531, i32* %521, align 4
  %532 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %510, align 8
  %533 = ptrtoint %"class.WTF::StringImpl"* %511 to i64
  %534 = icmp eq %"class.WTF::StringImpl"* %532, null
  br i1 %534, label %550, label %535

535:                                              ; preds = %518, %530
  %536 = phi i64 [ %519, %518 ], [ %533, %530 ]
  %537 = phi %"class.WTF::StringImpl"* [ %511, %518 ], [ %532, %530 ]
  %538 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %537, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %539 = load atomic i32, i32* %538 monotonic, align 4
  %540 = and i32 %539, 2
  %541 = icmp eq i32 %540, 0
  %542 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %537, i64 0, i32 0
  %543 = load i32, i32* %542, align 4
  br i1 %541, label %544, label %546

544:                                              ; preds = %535
  %545 = add i32 %543, -1
  store i32 %545, i32* %542, align 4
  br label %546

546:                                              ; preds = %544, %535
  %547 = phi i32 [ %545, %544 ], [ %543, %535 ]
  %548 = icmp eq i32 %547, 0
  br i1 %548, label %549, label %550

549:                                              ; preds = %546
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %537) #6
  br label %550

550:                                              ; preds = %508, %530, %546, %549
  %551 = phi i64 [ %533, %530 ], [ %536, %546 ], [ %536, %549 ], [ 0, %508 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %509) #6
  br label %617

552:                                              ; preds = %491, %485, %502
  %553 = bitcast %"class.blink::ExceptionState"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %553) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %553, i8 -86, i64 56, i1 false)
  %554 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %554, align 8
  %555 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 0
  store i16 6, i16* %555, align 8
  %556 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 1
  store i16 0, i16* %556, align 2
  %557 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 1, i32 2
  %558 = bitcast i8** %557 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)>, <2 x i8*>* %558, align 8
  %559 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %559, align 8
  %560 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 3
  store %"class.v8::Isolate"* %18, %"class.v8::Isolate"** %560, align 8
  %561 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 4
  store i32 0, i32* %561, align 8
  %562 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 5, i32 0, i32 0
  %563 = bitcast %"class.WTF::StringImpl"** %562 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %563, i8 0, i64 16, i1 false) #6
  %564 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %564) #6
  br i1 %432, label %571, label %565

565:                                              ; preds = %552
  %566 = load i64*, i64** %14, align 8
  %567 = getelementptr inbounds i64, i64* %566, i64 1
  %568 = load i64, i64* %567, align 8
  %569 = add i64 %568, 160
  %570 = inttoptr i64 %569 to %"class.v8::Value"*
  br label %575

571:                                              ; preds = %552
  %572 = load i64*, i64** %31, align 8
  %573 = getelementptr inbounds i64, i64* %572, i64 2
  %574 = bitcast i64* %573 to %"class.v8::Value"*
  br label %575

575:                                              ; preds = %565, %571
  %576 = phi %"class.v8::Value"* [ %570, %565 ], [ %574, %571 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %10, %"class.v8::Isolate"* %18, %"class.v8::Value"* %576, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %9) #6
  %577 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %10 to i64*
  %578 = load i64, i64* %577, align 8
  %579 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %10, i64 0, i32 1
  %580 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %579, i64 0, i32 0, i32 0
  %581 = bitcast %"class.WTF::String"* %579 to i64*
  %582 = load i64, i64* %581, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %580, align 8
  %583 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %10, i64 0, i32 2, i32 1
  %584 = bitcast %"class.std::__1::unique_ptr.789"* %583 to i64*
  %585 = load i64, i64* %584, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %564) #6
  %586 = load i32, i32* %561, align 8
  %587 = icmp eq i32 %586, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %554, align 8
  %588 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %9, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %589 = load i64*, i64** %588, align 8
  %590 = icmp eq i64* %589, null
  br i1 %590, label %600, label %591

591:                                              ; preds = %575
  %592 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %560, align 8
  %593 = bitcast %"class.v8::Isolate"* %592 to %"class.v8::internal::Isolate"*
  %594 = load i64, i64* %589, align 8
  %595 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %593, i64 %594) #6
  %596 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %592) #6
  br i1 %596, label %600, label %597

597:                                              ; preds = %591
  %598 = bitcast i64* %595 to %"class.v8::Value"*
  %599 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %592, %"class.v8::Value"* %598) #6
  br label %600

600:                                              ; preds = %597, %591, %575
  %601 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %562, align 8
  %602 = icmp eq %"class.WTF::StringImpl"* %601, null
  br i1 %602, label %616, label %603

603:                                              ; preds = %600
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %601, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %605 = load atomic i32, i32* %604 monotonic, align 4
  %606 = and i32 %605, 2
  %607 = icmp eq i32 %606, 0
  %608 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %601, i64 0, i32 0
  %609 = load i32, i32* %608, align 4
  br i1 %607, label %610, label %612

610:                                              ; preds = %603
  %611 = add i32 %609, -1
  store i32 %611, i32* %608, align 4
  br label %612

612:                                              ; preds = %610, %603
  %613 = phi i32 [ %611, %610 ], [ %609, %603 ]
  %614 = icmp eq i32 %613, 0
  br i1 %614, label %615, label %616

615:                                              ; preds = %612
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %601) #6
  br label %616

616:                                              ; preds = %600, %612, %615
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %553) #6
  br i1 %587, label %617, label %753

617:                                              ; preds = %550, %616, %471
  %618 = phi i64 [ %473, %471 ], [ 0, %550 ], [ %578, %616 ]
  %619 = phi i64 [ 0, %471 ], [ %551, %550 ], [ %582, %616 ]
  %620 = phi i64 [ 0, %471 ], [ 0, %550 ], [ %585, %616 ]
  %621 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %621) #6
  %622 = icmp eq i64 %240, 0
  br i1 %622, label %626, label %623, !prof !2

623:                                              ; preds = %617
  %624 = inttoptr i64 %240 to %"class.v8::String"*
  %625 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %624, i32 0) #6
  br label %646

626:                                              ; preds = %617
  %627 = inttoptr i64 %239 to %"class.WTF::StringImpl"*
  %628 = icmp eq i64 %239, 0
  br i1 %628, label %646, label %629

629:                                              ; preds = %626
  %630 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %627, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %631 = load atomic i32, i32* %630 monotonic, align 4
  %632 = and i32 %631, 2
  %633 = icmp eq i32 %632, 0
  br i1 %633, label %634, label %646

634:                                              ; preds = %629
  %635 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %627, i64 0, i32 0
  %636 = load i32, i32* %635, align 4
  %637 = zext i32 %636 to i33
  %638 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %637, i33 1) #6
  %639 = extractvalue { i33, i1 } %638, 1
  %640 = extractvalue { i33, i1 } %638, 0
  %641 = icmp slt i33 %640, 0
  %642 = or i1 %639, %641
  br i1 %642, label %643, label %644, !prof !2

643:                                              ; preds = %634
  call void @llvm.trap() #6
  unreachable

644:                                              ; preds = %634
  %645 = trunc i33 %640 to i32
  store i32 %645, i32* %635, align 4
  br label %646

646:                                              ; preds = %623, %626, %629, %644
  %647 = phi %"class.WTF::StringImpl"* [ %625, %623 ], [ null, %626 ], [ %627, %629 ], [ %627, %644 ]
  %648 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %647, %"class.WTF::StringImpl"** %648, align 8
  %649 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %649) #6
  %650 = icmp eq i64 %430, 0
  br i1 %650, label %654, label %651, !prof !2

651:                                              ; preds = %646
  %652 = inttoptr i64 %430 to %"class.v8::String"*
  %653 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %652, i32 0) #6
  br label %674

654:                                              ; preds = %646
  %655 = inttoptr i64 %429 to %"class.WTF::StringImpl"*
  %656 = icmp eq i64 %429, 0
  br i1 %656, label %674, label %657

657:                                              ; preds = %654
  %658 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %655, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %659 = load atomic i32, i32* %658 monotonic, align 4
  %660 = and i32 %659, 2
  %661 = icmp eq i32 %660, 0
  br i1 %661, label %662, label %674

662:                                              ; preds = %657
  %663 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %655, i64 0, i32 0
  %664 = load i32, i32* %663, align 4
  %665 = zext i32 %664 to i33
  %666 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %665, i33 1) #6
  %667 = extractvalue { i33, i1 } %666, 1
  %668 = extractvalue { i33, i1 } %666, 0
  %669 = icmp slt i33 %668, 0
  %670 = or i1 %667, %669
  br i1 %670, label %671, label %672, !prof !2

671:                                              ; preds = %662
  call void @llvm.trap() #6
  unreachable

672:                                              ; preds = %662
  %673 = trunc i33 %668 to i32
  store i32 %673, i32* %663, align 4
  br label %674

674:                                              ; preds = %651, %654, %657, %672
  %675 = phi %"class.WTF::StringImpl"* [ %653, %651 ], [ null, %654 ], [ %655, %657 ], [ %655, %672 ]
  %676 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %675, %"class.WTF::StringImpl"** %676, align 8
  %677 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %677) #6
  %678 = icmp eq i64 %618, 0
  br i1 %678, label %682, label %679, !prof !2

679:                                              ; preds = %674
  %680 = inttoptr i64 %618 to %"class.v8::String"*
  %681 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %680, i32 0) #6
  br label %702

682:                                              ; preds = %674
  %683 = inttoptr i64 %619 to %"class.WTF::StringImpl"*
  %684 = icmp eq i64 %619, 0
  br i1 %684, label %702, label %685

685:                                              ; preds = %682
  %686 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %683, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %687 = load atomic i32, i32* %686 monotonic, align 4
  %688 = and i32 %687, 2
  %689 = icmp eq i32 %688, 0
  br i1 %689, label %690, label %702

690:                                              ; preds = %685
  %691 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %683, i64 0, i32 0
  %692 = load i32, i32* %691, align 4
  %693 = zext i32 %692 to i33
  %694 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %693, i33 1) #6
  %695 = extractvalue { i33, i1 } %694, 1
  %696 = extractvalue { i33, i1 } %694, 0
  %697 = icmp slt i33 %696, 0
  %698 = or i1 %695, %697
  br i1 %698, label %699, label %700, !prof !2

699:                                              ; preds = %690
  call void @llvm.trap() #6
  unreachable

700:                                              ; preds = %690
  %701 = trunc i33 %696 to i32
  store i32 %701, i32* %691, align 4
  br label %702

702:                                              ; preds = %679, %682, %685, %700
  %703 = phi %"class.WTF::StringImpl"* [ %681, %679 ], [ null, %682 ], [ %683, %685 ], [ %683, %700 ]
  %704 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %703, %"class.WTF::StringImpl"** %704, align 8
  call void @_ZN5blink12DOMSelection6modifyERKN3WTF6StringES4_S4_(%"class.blink::DOMSelection"* %53, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.WTF::String"* nonnull dereferenceable(8) %13) #6
  %705 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %704, align 8
  %706 = icmp eq %"class.WTF::StringImpl"* %705, null
  br i1 %706, label %720, label %707

707:                                              ; preds = %702
  %708 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %705, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %709 = load atomic i32, i32* %708 monotonic, align 4
  %710 = and i32 %709, 2
  %711 = icmp eq i32 %710, 0
  %712 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %705, i64 0, i32 0
  %713 = load i32, i32* %712, align 4
  br i1 %711, label %714, label %716

714:                                              ; preds = %707
  %715 = add i32 %713, -1
  store i32 %715, i32* %712, align 4
  br label %716

716:                                              ; preds = %714, %707
  %717 = phi i32 [ %715, %714 ], [ %713, %707 ]
  %718 = icmp eq i32 %717, 0
  br i1 %718, label %719, label %720

719:                                              ; preds = %716
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %705) #6
  br label %720

720:                                              ; preds = %702, %716, %719
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %677) #6
  %721 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %676, align 8
  %722 = icmp eq %"class.WTF::StringImpl"* %721, null
  br i1 %722, label %736, label %723

723:                                              ; preds = %720
  %724 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %721, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %725 = load atomic i32, i32* %724 monotonic, align 4
  %726 = and i32 %725, 2
  %727 = icmp eq i32 %726, 0
  %728 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %721, i64 0, i32 0
  %729 = load i32, i32* %728, align 4
  br i1 %727, label %730, label %732

730:                                              ; preds = %723
  %731 = add i32 %729, -1
  store i32 %731, i32* %728, align 4
  br label %732

732:                                              ; preds = %730, %723
  %733 = phi i32 [ %731, %730 ], [ %729, %723 ]
  %734 = icmp eq i32 %733, 0
  br i1 %734, label %735, label %736

735:                                              ; preds = %732
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %721) #6
  br label %736

736:                                              ; preds = %720, %732, %735
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %649) #6
  %737 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %648, align 8
  %738 = icmp eq %"class.WTF::StringImpl"* %737, null
  br i1 %738, label %752, label %739

739:                                              ; preds = %736
  %740 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %737, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %741 = load atomic i32, i32* %740 monotonic, align 4
  %742 = and i32 %741, 2
  %743 = icmp eq i32 %742, 0
  %744 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %737, i64 0, i32 0
  %745 = load i32, i32* %744, align 4
  br i1 %743, label %746, label %748

746:                                              ; preds = %739
  %747 = add i32 %745, -1
  store i32 %747, i32* %744, align 4
  br label %748

748:                                              ; preds = %746, %739
  %749 = phi i32 [ %747, %746 ], [ %745, %739 ]
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %751, label %752

751:                                              ; preds = %748
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %737) #6
  br label %752

752:                                              ; preds = %736, %748, %751
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %621) #6
  br label %753

753:                                              ; preds = %616, %752
  %754 = phi i64 [ %619, %752 ], [ %582, %616 ]
  %755 = phi i64 [ %620, %752 ], [ %585, %616 ]
  %756 = icmp eq i64 %755, 0
  br i1 %756, label %759, label %757

757:                                              ; preds = %753
  %758 = inttoptr i64 %755 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %758) #6
  br label %759

759:                                              ; preds = %757, %753
  %760 = inttoptr i64 %754 to %"class.WTF::StringImpl"*
  %761 = icmp eq i64 %754, 0
  br i1 %761, label %775, label %762

762:                                              ; preds = %759
  %763 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %760, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %764 = load atomic i32, i32* %763 monotonic, align 4
  %765 = and i32 %764, 2
  %766 = icmp eq i32 %765, 0
  %767 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %760, i64 0, i32 0
  %768 = load i32, i32* %767, align 4
  br i1 %766, label %769, label %771

769:                                              ; preds = %762
  %770 = add i32 %768, -1
  store i32 %770, i32* %767, align 4
  br label %771

771:                                              ; preds = %769, %762
  %772 = phi i32 [ %770, %769 ], [ %768, %762 ]
  %773 = icmp eq i32 %772, 0
  br i1 %773, label %774, label %775

774:                                              ; preds = %771
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %760) #6
  br label %775

775:                                              ; preds = %774, %771, %759, %426
  %776 = phi i64 [ %395, %426 ], [ %428, %759 ], [ %428, %771 ], [ %428, %774 ]
  %777 = phi i64 [ %392, %426 ], [ %429, %759 ], [ %429, %771 ], [ %429, %774 ]
  %778 = icmp eq i64 %776, 0
  br i1 %778, label %781, label %779

779:                                              ; preds = %775
  %780 = inttoptr i64 %776 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %780) #6
  br label %781

781:                                              ; preds = %779, %775
  %782 = inttoptr i64 %777 to %"class.WTF::StringImpl"*
  %783 = icmp eq i64 %777, 0
  br i1 %783, label %797, label %784

784:                                              ; preds = %781
  %785 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %782, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %786 = load atomic i32, i32* %785 monotonic, align 4
  %787 = and i32 %786, 2
  %788 = icmp eq i32 %787, 0
  %789 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %782, i64 0, i32 0
  %790 = load i32, i32* %789, align 4
  br i1 %788, label %791, label %793

791:                                              ; preds = %784
  %792 = add i32 %790, -1
  store i32 %792, i32* %789, align 4
  br label %793

793:                                              ; preds = %791, %784
  %794 = phi i32 [ %792, %791 ], [ %790, %784 ]
  %795 = icmp eq i32 %794, 0
  br i1 %795, label %796, label %797

796:                                              ; preds = %793
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %782) #6
  br label %797

797:                                              ; preds = %796, %793, %781, %236
  %798 = phi i64 [ %205, %236 ], [ %238, %781 ], [ %238, %793 ], [ %238, %796 ]
  %799 = phi i64 [ %202, %236 ], [ %239, %781 ], [ %239, %793 ], [ %239, %796 ]
  %800 = icmp eq i64 %798, 0
  br i1 %800, label %803, label %801

801:                                              ; preds = %797
  %802 = inttoptr i64 %798 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %802) #6
  br label %803

803:                                              ; preds = %801, %797
  %804 = inttoptr i64 %799 to %"class.WTF::StringImpl"*
  %805 = icmp eq i64 %799, 0
  br i1 %805, label %819, label %806

806:                                              ; preds = %803
  %807 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %804, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %808 = load atomic i32, i32* %807 monotonic, align 4
  %809 = and i32 %808, 2
  %810 = icmp eq i32 %809, 0
  %811 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %804, i64 0, i32 0
  %812 = load i32, i32* %811, align 4
  br i1 %810, label %813, label %815

813:                                              ; preds = %806
  %814 = add i32 %812, -1
  store i32 %814, i32* %811, align 4
  br label %815

815:                                              ; preds = %813, %806
  %816 = phi i32 [ %814, %813 ], [ %812, %806 ]
  %817 = icmp eq i32 %816, 0
  br i1 %817, label %818, label %819

818:                                              ; preds = %815
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %804) #6
  br label %819

819:                                              ; preds = %803, %815, %818
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection32RemoveAllRangesOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #6
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #6
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 1005) #6
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #6
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = bitcast i8* %40 to %"class.blink::DOMSelection"*
  tail call void @_ZN5blink12DOMSelection15removeAllRangesEv(%"class.blink::DOMSelection"* %41) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection28RemoveRangeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #6
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %43, !prof !2

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #6
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %21) #6
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #6
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #6
  br label %113

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to %"class.blink::DOMSelection"**
  %60 = load %"class.blink::DOMSelection"*, %"class.blink::DOMSelection"** %59, align 1
  br label %73

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #6
  %64 = load i32, i32* %20, align 8
  %65 = bitcast i8* %63 to %"class.blink::DOMSelection"*
  %66 = icmp sgt i32 %64, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %61
  %68 = load i64*, i64** %4, align 8
  %69 = getelementptr inbounds i64, i64* %68, i64 1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 160
  %72 = inttoptr i64 %71 to %"class.v8::Value"*
  br label %77

73:                                               ; preds = %57, %61
  %74 = phi %"class.blink::DOMSelection"* [ %60, %57 ], [ %65, %61 ]
  %75 = bitcast i64** %44 to %"class.v8::Value"**
  %76 = load %"class.v8::Value"*, %"class.v8::Value"** %75, align 8
  br label %77

77:                                               ; preds = %67, %73
  %78 = phi %"class.blink::DOMSelection"* [ %65, %67 ], [ %74, %73 ]
  %79 = phi %"class.v8::Value"* [ %72, %67 ], [ %76, %73 ]
  %80 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink5Range18wrapper_type_info_E, align 8
  %81 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %82 = add i64 %81, 8
  %83 = inttoptr i64 %82 to %"class.blink::V8PerIsolateData"**
  %84 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %83, align 8
  %85 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %84, %"struct.blink::WrapperTypeInfo"* %80, %"class.v8::Value"* %79) #6
  br i1 %85, label %86, label %108

86:                                               ; preds = %77
  %87 = bitcast %"class.v8::Value"* %79 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, -1
  %90 = inttoptr i64 %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = and i64 %88, -4294967296
  %93 = zext i32 %91 to i64
  %94 = or i64 %92, %93
  %95 = add i64 %94, 7
  %96 = inttoptr i64 %95 to i16*
  %97 = load i16, i16* %96, align 2
  switch i16 %97, label %102 [
    i16 1057, label %98
    i16 1056, label %98
    i16 1040, label %98
  ]

98:                                               ; preds = %86, %86, %86
  %99 = add i64 %88, 19
  %100 = inttoptr i64 %99 to i8**
  %101 = load i8*, i8** %100, align 1
  br label %105

102:                                              ; preds = %86
  %103 = bitcast %"class.v8::Value"* %79 to %"class.v8::Object"*
  %104 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %103, i32 1) #6
  br label %105

105:                                              ; preds = %98, %102
  %106 = phi i8* [ %101, %98 ], [ %104, %102 ]
  %107 = bitcast i8* %106 to %"class.blink::Range"*
  br label %111

108:                                              ; preds = %77
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %80, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %109 = load i32, i32* %17, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %105, %108
  %112 = phi %"class.blink::Range"* [ %107, %105 ], [ null, %108 ]
  call void @_ZN5blink12DOMSelection11removeRangeEPNS_5RangeE(%"class.blink::DOMSelection"* %78, %"class.blink::Range"* %112) #6
  br label %113

113:                                              ; preds = %108, %111, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %114 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %115 = load i64*, i64** %114, align 8
  %116 = icmp eq i64* %115, null
  br i1 %116, label %126, label %117

117:                                              ; preds = %113
  %118 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %119 = bitcast %"class.v8::Isolate"* %118 to %"class.v8::internal::Isolate"*
  %120 = load i64, i64* %115, align 8
  %121 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %119, i64 %120) #6
  %122 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %118) #6
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = bitcast i64* %121 to %"class.v8::Value"*
  %125 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %118, %"class.v8::Value"* %124) #6
  br label %126

126:                                              ; preds = %123, %117, %113
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #6
  br label %142

142:                                              ; preds = %126, %138, %141
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection34SelectAllChildrenOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %8) #6
  %10 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %9) #6
  %11 = icmp eq %"class.blink::ExecutionContext"* %10, null
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %10, i64 0, i32 3
  %13 = icmp eq %"class.blink::UseCounter"* %12, null
  %14 = or i1 %11, %13
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::UseCounter"* %12 to void (%"class.blink::UseCounter"*, i32)***
  %17 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, i64 3
  %19 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, align 8
  tail call void %19(%"class.blink::UseCounter"* nonnull %12, i32 1010) #6
  br label %20

20:                                               ; preds = %1, %15
  %21 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 56, i1 false)
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %24, align 2
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %26 = bitcast i8** %25 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i64 0, i64 0)>, <2 x i8*>* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %31 = bitcast %"class.WTF::StringImpl"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #6
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp slt i32 %33, 1
  br i1 %34, label %35, label %55, !prof !2

35:                                               ; preds = %20
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  %37 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %33) #6
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #6
  br label %54

54:                                               ; preds = %35, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  br label %125

55:                                               ; preds = %20
  %56 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 -1
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = and i64 %59, -4294967296
  %64 = zext i32 %62 to i64
  %65 = or i64 %63, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load i16, i16* %67, align 2
  switch i16 %68, label %73 [
    i16 1057, label %69
    i16 1056, label %69
    i16 1040, label %69
  ]

69:                                               ; preds = %55, %55, %55
  %70 = add i64 %59, 19
  %71 = inttoptr i64 %70 to %"class.blink::DOMSelection"**
  %72 = load %"class.blink::DOMSelection"*, %"class.blink::DOMSelection"** %71, align 1
  br label %85

73:                                               ; preds = %55
  %74 = bitcast i64* %58 to %"class.v8::Object"*
  %75 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %74, i32 1) #6
  %76 = load i32, i32* %32, align 8
  %77 = bitcast i8* %75 to %"class.blink::DOMSelection"*
  %78 = icmp sgt i32 %76, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %73
  %80 = load i64*, i64** %4, align 8
  %81 = getelementptr inbounds i64, i64* %80, i64 1
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 160
  %84 = inttoptr i64 %83 to %"class.v8::Value"*
  br label %89

85:                                               ; preds = %69, %73
  %86 = phi %"class.blink::DOMSelection"* [ %72, %69 ], [ %77, %73 ]
  %87 = bitcast i64** %56 to %"class.v8::Value"**
  %88 = load %"class.v8::Value"*, %"class.v8::Value"** %87, align 8
  br label %89

89:                                               ; preds = %79, %85
  %90 = phi %"class.blink::DOMSelection"* [ %77, %79 ], [ %86, %85 ]
  %91 = phi %"class.v8::Value"* [ %84, %79 ], [ %88, %85 ]
  %92 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink4Node18wrapper_type_info_E, align 8
  %93 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %94 = add i64 %93, 8
  %95 = inttoptr i64 %94 to %"class.blink::V8PerIsolateData"**
  %96 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %95, align 8
  %97 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %96, %"struct.blink::WrapperTypeInfo"* %92, %"class.v8::Value"* %91) #6
  br i1 %97, label %98, label %120

98:                                               ; preds = %89
  %99 = bitcast %"class.v8::Value"* %91 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, -1
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = and i64 %100, -4294967296
  %105 = zext i32 %103 to i64
  %106 = or i64 %104, %105
  %107 = add i64 %106, 7
  %108 = inttoptr i64 %107 to i16*
  %109 = load i16, i16* %108, align 2
  switch i16 %109, label %114 [
    i16 1057, label %110
    i16 1056, label %110
    i16 1040, label %110
  ]

110:                                              ; preds = %98, %98, %98
  %111 = add i64 %100, 19
  %112 = inttoptr i64 %111 to i8**
  %113 = load i8*, i8** %112, align 1
  br label %117

114:                                              ; preds = %98
  %115 = bitcast %"class.v8::Value"* %91 to %"class.v8::Object"*
  %116 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %115, i32 1) #6
  br label %117

117:                                              ; preds = %110, %114
  %118 = phi i8* [ %113, %110 ], [ %116, %114 ]
  %119 = bitcast i8* %118 to %"class.blink::Node"*
  br label %123

120:                                              ; preds = %89
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %92, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %121 = load i32, i32* %29, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %117, %120
  %124 = phi %"class.blink::Node"* [ %119, %117 ], [ null, %120 ]
  call void @_ZN5blink12DOMSelection17selectAllChildrenEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::DOMSelection"* %90, %"class.blink::Node"* %124, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %125

125:                                              ; preds = %120, %123, %54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %126 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %127 = load i64*, i64** %126, align 8
  %128 = icmp eq i64* %127, null
  br i1 %128, label %138, label %129

129:                                              ; preds = %125
  %130 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %131 = bitcast %"class.v8::Isolate"* %130 to %"class.v8::internal::Isolate"*
  %132 = load i64, i64* %127, align 8
  %133 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %131, i64 %132) #6
  %134 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %130) #6
  br i1 %134, label %138, label %135

135:                                              ; preds = %129
  %136 = bitcast i64* %133 to %"class.v8::Value"*
  %137 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %130, %"class.v8::Value"* %136) #6
  br label %138

138:                                              ; preds = %135, %129, %125
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #6
  br label %154

154:                                              ; preds = %138, %150, %153
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection33SetBaseAndExtentOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %8) #6
  %10 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %9) #6
  %11 = icmp eq %"class.blink::ExecutionContext"* %10, null
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %10, i64 0, i32 3
  %13 = icmp eq %"class.blink::UseCounter"* %12, null
  %14 = or i1 %11, %13
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::UseCounter"* %12 to void (%"class.blink::UseCounter"*, i32)***
  %17 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, i64 3
  %19 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, align 8
  tail call void %19(%"class.blink::UseCounter"* nonnull %12, i32 406) #6
  br label %20

20:                                               ; preds = %1, %15
  %21 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 56, i1 false)
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %24, align 2
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %26 = bitcast i8** %25 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)>, <2 x i8*>* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %31 = bitcast %"class.WTF::StringImpl"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #6
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp slt i32 %33, 4
  br i1 %34, label %35, label %55, !prof !2

35:                                               ; preds = %20
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  %37 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 4, i32 %33) #6
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #6
  br label %54

54:                                               ; preds = %35, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  br label %267

55:                                               ; preds = %20
  %56 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 -1
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = and i64 %59, -4294967296
  %64 = zext i32 %62 to i64
  %65 = or i64 %63, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load i16, i16* %67, align 2
  switch i16 %68, label %73 [
    i16 1057, label %69
    i16 1056, label %69
    i16 1040, label %69
  ]

69:                                               ; preds = %55, %55, %55
  %70 = add i64 %59, 19
  %71 = inttoptr i64 %70 to %"class.blink::DOMSelection"**
  %72 = load %"class.blink::DOMSelection"*, %"class.blink::DOMSelection"** %71, align 1
  br label %85

73:                                               ; preds = %55
  %74 = bitcast i64* %58 to %"class.v8::Object"*
  %75 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %74, i32 1) #6
  %76 = load i32, i32* %32, align 8
  %77 = bitcast i8* %75 to %"class.blink::DOMSelection"*
  %78 = icmp sgt i32 %76, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %73
  %80 = load i64*, i64** %4, align 8
  %81 = getelementptr inbounds i64, i64* %80, i64 1
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 160
  %84 = inttoptr i64 %83 to %"class.v8::Value"*
  br label %89

85:                                               ; preds = %69, %73
  %86 = phi %"class.blink::DOMSelection"* [ %72, %69 ], [ %77, %73 ]
  %87 = bitcast i64** %56 to %"class.v8::Value"**
  %88 = load %"class.v8::Value"*, %"class.v8::Value"** %87, align 8
  br label %89

89:                                               ; preds = %79, %85
  %90 = phi %"class.blink::DOMSelection"* [ %77, %79 ], [ %86, %85 ]
  %91 = phi %"class.v8::Value"* [ %84, %79 ], [ %88, %85 ]
  %92 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink4Node18wrapper_type_info_E, align 8
  %93 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %94 = add i64 %93, 8
  %95 = inttoptr i64 %94 to %"class.blink::V8PerIsolateData"**
  %96 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %95, align 8
  %97 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %96, %"struct.blink::WrapperTypeInfo"* %92, %"class.v8::Value"* %91) #6
  %98 = bitcast %"class.v8::Value"* %91 to i64*
  %99 = load i64, i64* %98, align 8
  br i1 %97, label %100, label %120

100:                                              ; preds = %89
  %101 = add i64 %99, -1
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = and i64 %99, -4294967296
  %105 = zext i32 %103 to i64
  %106 = or i64 %104, %105
  %107 = add i64 %106, 7
  %108 = inttoptr i64 %107 to i16*
  %109 = load i16, i16* %108, align 2
  switch i16 %109, label %114 [
    i16 1057, label %110
    i16 1056, label %110
    i16 1040, label %110
  ]

110:                                              ; preds = %100, %100, %100
  %111 = add i64 %99, 19
  %112 = inttoptr i64 %111 to i8**
  %113 = load i8*, i8** %112, align 1
  br label %117

114:                                              ; preds = %100
  %115 = bitcast %"class.v8::Value"* %91 to %"class.v8::Object"*
  %116 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %115, i32 1) #6
  br label %117

117:                                              ; preds = %114, %110
  %118 = phi i8* [ %113, %110 ], [ %116, %114 ]
  %119 = bitcast i8* %118 to %"class.blink::Node"*
  br label %142

120:                                              ; preds = %89
  %121 = and i64 %99, 3
  %122 = icmp eq i64 %121, 1
  br i1 %122, label %123, label %139

123:                                              ; preds = %120
  %124 = add i64 %99, -1
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = and i64 %99, -4294967296
  %128 = zext i32 %126 to i64
  %129 = or i64 %127, %128
  %130 = add i64 %129, 7
  %131 = inttoptr i64 %130 to i16*
  %132 = load i16, i16* %131, align 2
  %133 = icmp eq i16 %132, 67
  br i1 %133, label %134, label %139

134:                                              ; preds = %123
  %135 = add i64 %99, 23
  %136 = inttoptr i64 %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = ashr i32 %137, 1
  switch i32 %138, label %139 [
    i32 5, label %142
    i32 3, label %142
  ]

139:                                              ; preds = %120, %123, %134
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %92, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %140 = load i32, i32* %29, align 8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %267

142:                                              ; preds = %134, %134, %117, %139
  %143 = phi %"class.blink::Node"* [ null, %139 ], [ null, %134 ], [ null, %134 ], [ %119, %117 ]
  %144 = load i32, i32* %32, align 8
  %145 = icmp sgt i32 %144, 1
  br i1 %145, label %152, label %146

146:                                              ; preds = %142
  %147 = load i64*, i64** %4, align 8
  %148 = getelementptr inbounds i64, i64* %147, i64 1
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, 160
  %151 = inttoptr i64 %150 to %"class.v8::Value"*
  br label %156

152:                                              ; preds = %142
  %153 = load i64*, i64** %56, align 8
  %154 = getelementptr inbounds i64, i64* %153, i64 1
  %155 = bitcast i64* %154 to %"class.v8::Value"*
  br label %156

156:                                              ; preds = %146, %152
  %157 = phi %"class.v8::Value"* [ %151, %146 ], [ %155, %152 ]
  %158 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %157) #6
  br i1 %158, label %159, label %162, !prof !3

159:                                              ; preds = %156
  %160 = bitcast %"class.v8::Value"* %157 to %"class.v8::Uint32"*
  %161 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %160) #6
  br label %169

162:                                              ; preds = %156
  %163 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %157) #6
  br i1 %163, label %164, label %167, !prof !3

164:                                              ; preds = %162
  %165 = bitcast %"class.v8::Value"* %157 to %"class.v8::Int32"*
  %166 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %165) #6
  br label %169

167:                                              ; preds = %162
  %168 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %157, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %169

169:                                              ; preds = %159, %164, %167
  %170 = phi i32 [ %161, %159 ], [ %166, %164 ], [ %168, %167 ]
  %171 = load i32, i32* %29, align 8
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %267

173:                                              ; preds = %169
  %174 = load i32, i32* %32, align 8
  %175 = icmp sgt i32 %174, 2
  br i1 %175, label %182, label %176

176:                                              ; preds = %173
  %177 = load i64*, i64** %4, align 8
  %178 = getelementptr inbounds i64, i64* %177, i64 1
  %179 = load i64, i64* %178, align 8
  %180 = add i64 %179, 160
  %181 = inttoptr i64 %180 to %"class.v8::Value"*
  br label %186

182:                                              ; preds = %173
  %183 = load i64*, i64** %56, align 8
  %184 = getelementptr inbounds i64, i64* %183, i64 2
  %185 = bitcast i64* %184 to %"class.v8::Value"*
  br label %186

186:                                              ; preds = %176, %182
  %187 = phi %"class.v8::Value"* [ %181, %176 ], [ %185, %182 ]
  %188 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %95, align 8
  %189 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %188, %"struct.blink::WrapperTypeInfo"* %92, %"class.v8::Value"* %187) #6
  %190 = bitcast %"class.v8::Value"* %187 to i64*
  %191 = load i64, i64* %190, align 8
  br i1 %189, label %192, label %212

192:                                              ; preds = %186
  %193 = add i64 %191, -1
  %194 = inttoptr i64 %193 to i32*
  %195 = load i32, i32* %194, align 4
  %196 = and i64 %191, -4294967296
  %197 = zext i32 %195 to i64
  %198 = or i64 %196, %197
  %199 = add i64 %198, 7
  %200 = inttoptr i64 %199 to i16*
  %201 = load i16, i16* %200, align 2
  switch i16 %201, label %206 [
    i16 1057, label %202
    i16 1056, label %202
    i16 1040, label %202
  ]

202:                                              ; preds = %192, %192, %192
  %203 = add i64 %191, 19
  %204 = inttoptr i64 %203 to i8**
  %205 = load i8*, i8** %204, align 1
  br label %209

206:                                              ; preds = %192
  %207 = bitcast %"class.v8::Value"* %187 to %"class.v8::Object"*
  %208 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %207, i32 1) #6
  br label %209

209:                                              ; preds = %206, %202
  %210 = phi i8* [ %205, %202 ], [ %208, %206 ]
  %211 = bitcast i8* %210 to %"class.blink::Node"*
  br label %232

212:                                              ; preds = %186
  %213 = and i64 %191, 3
  %214 = icmp eq i64 %213, 1
  br i1 %214, label %215, label %231

215:                                              ; preds = %212
  %216 = add i64 %191, -1
  %217 = inttoptr i64 %216 to i32*
  %218 = load i32, i32* %217, align 4
  %219 = and i64 %191, -4294967296
  %220 = zext i32 %218 to i64
  %221 = or i64 %219, %220
  %222 = add i64 %221, 7
  %223 = inttoptr i64 %222 to i16*
  %224 = load i16, i16* %223, align 2
  %225 = icmp eq i16 %224, 67
  br i1 %225, label %226, label %231

226:                                              ; preds = %215
  %227 = add i64 %191, 23
  %228 = inttoptr i64 %227 to i32*
  %229 = load i32, i32* %228, align 4
  %230 = ashr i32 %229, 1
  switch i32 %230, label %231 [
    i32 5, label %232
    i32 3, label %232
  ]

231:                                              ; preds = %226, %215, %212
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %92, i32 2, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %232

232:                                              ; preds = %209, %226, %226, %231
  %233 = phi %"class.blink::Node"* [ %211, %209 ], [ null, %231 ], [ null, %226 ], [ null, %226 ]
  %234 = load i32, i32* %29, align 8
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %267

236:                                              ; preds = %232
  %237 = load i32, i32* %32, align 8
  %238 = icmp sgt i32 %237, 3
  br i1 %238, label %245, label %239

239:                                              ; preds = %236
  %240 = load i64*, i64** %4, align 8
  %241 = getelementptr inbounds i64, i64* %240, i64 1
  %242 = load i64, i64* %241, align 8
  %243 = add i64 %242, 160
  %244 = inttoptr i64 %243 to %"class.v8::Value"*
  br label %249

245:                                              ; preds = %236
  %246 = load i64*, i64** %56, align 8
  %247 = getelementptr inbounds i64, i64* %246, i64 3
  %248 = bitcast i64* %247 to %"class.v8::Value"*
  br label %249

249:                                              ; preds = %239, %245
  %250 = phi %"class.v8::Value"* [ %244, %239 ], [ %248, %245 ]
  %251 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %250) #6
  br i1 %251, label %252, label %255, !prof !3

252:                                              ; preds = %249
  %253 = bitcast %"class.v8::Value"* %250 to %"class.v8::Uint32"*
  %254 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %253) #6
  br label %262

255:                                              ; preds = %249
  %256 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %250) #6
  br i1 %256, label %257, label %260, !prof !3

257:                                              ; preds = %255
  %258 = bitcast %"class.v8::Value"* %250 to %"class.v8::Int32"*
  %259 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %258) #6
  br label %262

260:                                              ; preds = %255
  %261 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %250, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %262

262:                                              ; preds = %252, %257, %260
  %263 = phi i32 [ %254, %252 ], [ %259, %257 ], [ %261, %260 ]
  %264 = load i32, i32* %29, align 8
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %267

266:                                              ; preds = %262
  call void @_ZN5blink12DOMSelection16setBaseAndExtentEPNS_4NodeEjS2_jRNS_14ExceptionStateE(%"class.blink::DOMSelection"* %90, %"class.blink::Node"* %143, i32 %170, %"class.blink::Node"* %233, i32 %263, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %267

267:                                              ; preds = %262, %232, %169, %139, %266, %54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %268 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %269 = load i64*, i64** %268, align 8
  %270 = icmp eq i64* %269, null
  br i1 %270, label %280, label %271

271:                                              ; preds = %267
  %272 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %273 = bitcast %"class.v8::Isolate"* %272 to %"class.v8::internal::Isolate"*
  %274 = load i64, i64* %269, align 8
  %275 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %273, i64 %274) #6
  %276 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %272) #6
  br i1 %276, label %280, label %277

277:                                              ; preds = %271
  %278 = bitcast i64* %275 to %"class.v8::Value"*
  %279 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %272, %"class.v8::Value"* %278) #6
  br label %280

280:                                              ; preds = %277, %271, %267
  %281 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %282 = icmp eq %"class.WTF::StringImpl"* %281, null
  br i1 %282, label %296, label %283

283:                                              ; preds = %280
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %281, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %292

290:                                              ; preds = %283
  %291 = add i32 %289, -1
  store i32 %291, i32* %288, align 4
  br label %292

292:                                              ; preds = %290, %283
  %293 = phi i32 [ %291, %290 ], [ %289, %283 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %281) #6
  br label %296

296:                                              ; preds = %280, %292, %295
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection28SetPositionOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %8) #6
  %10 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %9) #6
  %11 = icmp eq %"class.blink::ExecutionContext"* %10, null
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %10, i64 0, i32 3
  %13 = icmp eq %"class.blink::UseCounter"* %12, null
  %14 = or i1 %11, %13
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::UseCounter"* %12 to void (%"class.blink::UseCounter"*, i32)***
  %17 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, i64 3
  %19 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, align 8
  tail call void %19(%"class.blink::UseCounter"* nonnull %12, i32 327) #6
  br label %20

20:                                               ; preds = %1, %15
  %21 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 56, i1 false)
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %24, align 2
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %26 = bitcast i8** %25 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0)>, <2 x i8*>* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %31 = bitcast %"class.WTF::StringImpl"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #6
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp slt i32 %33, 1
  br i1 %34, label %35, label %55, !prof !2

35:                                               ; preds = %20
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  %37 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %33) #6
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #6
  br label %54

54:                                               ; preds = %35, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  br label %209

55:                                               ; preds = %20
  %56 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 -1
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = and i64 %59, -4294967296
  %64 = zext i32 %62 to i64
  %65 = or i64 %63, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load i16, i16* %67, align 2
  switch i16 %68, label %73 [
    i16 1057, label %69
    i16 1056, label %69
    i16 1040, label %69
  ]

69:                                               ; preds = %55, %55, %55
  %70 = add i64 %59, 19
  %71 = inttoptr i64 %70 to %"class.blink::DOMSelection"**
  %72 = load %"class.blink::DOMSelection"*, %"class.blink::DOMSelection"** %71, align 1
  br label %85

73:                                               ; preds = %55
  %74 = bitcast i64* %58 to %"class.v8::Object"*
  %75 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %74, i32 1) #6
  %76 = load i32, i32* %32, align 8
  %77 = bitcast i8* %75 to %"class.blink::DOMSelection"*
  %78 = icmp sgt i32 %76, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %73
  %80 = load i64*, i64** %4, align 8
  %81 = getelementptr inbounds i64, i64* %80, i64 1
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 160
  %84 = inttoptr i64 %83 to %"class.v8::Value"*
  br label %89

85:                                               ; preds = %69, %73
  %86 = phi %"class.blink::DOMSelection"* [ %72, %69 ], [ %77, %73 ]
  %87 = bitcast i64** %56 to %"class.v8::Value"**
  %88 = load %"class.v8::Value"*, %"class.v8::Value"** %87, align 8
  br label %89

89:                                               ; preds = %79, %85
  %90 = phi %"class.blink::DOMSelection"* [ %77, %79 ], [ %86, %85 ]
  %91 = phi %"class.v8::Value"* [ %84, %79 ], [ %88, %85 ]
  %92 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink4Node18wrapper_type_info_E, align 8
  %93 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %94 = add i64 %93, 8
  %95 = inttoptr i64 %94 to %"class.blink::V8PerIsolateData"**
  %96 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %95, align 8
  %97 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %96, %"struct.blink::WrapperTypeInfo"* %92, %"class.v8::Value"* %91) #6
  %98 = bitcast %"class.v8::Value"* %91 to i64*
  %99 = load i64, i64* %98, align 8
  br i1 %97, label %100, label %120

100:                                              ; preds = %89
  %101 = add i64 %99, -1
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = and i64 %99, -4294967296
  %105 = zext i32 %103 to i64
  %106 = or i64 %104, %105
  %107 = add i64 %106, 7
  %108 = inttoptr i64 %107 to i16*
  %109 = load i16, i16* %108, align 2
  switch i16 %109, label %114 [
    i16 1057, label %110
    i16 1056, label %110
    i16 1040, label %110
  ]

110:                                              ; preds = %100, %100, %100
  %111 = add i64 %99, 19
  %112 = inttoptr i64 %111 to i8**
  %113 = load i8*, i8** %112, align 1
  br label %117

114:                                              ; preds = %100
  %115 = bitcast %"class.v8::Value"* %91 to %"class.v8::Object"*
  %116 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %115, i32 1) #6
  br label %117

117:                                              ; preds = %114, %110
  %118 = phi i8* [ %113, %110 ], [ %116, %114 ]
  %119 = bitcast i8* %118 to %"class.blink::Node"*
  br label %142

120:                                              ; preds = %89
  %121 = and i64 %99, 3
  %122 = icmp eq i64 %121, 1
  br i1 %122, label %123, label %139

123:                                              ; preds = %120
  %124 = add i64 %99, -1
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = and i64 %99, -4294967296
  %128 = zext i32 %126 to i64
  %129 = or i64 %127, %128
  %130 = add i64 %129, 7
  %131 = inttoptr i64 %130 to i16*
  %132 = load i16, i16* %131, align 2
  %133 = icmp eq i16 %132, 67
  br i1 %133, label %134, label %139

134:                                              ; preds = %123
  %135 = add i64 %99, 23
  %136 = inttoptr i64 %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = ashr i32 %137, 1
  switch i32 %138, label %139 [
    i32 5, label %142
    i32 3, label %142
  ]

139:                                              ; preds = %120, %123, %134
  call void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* %92, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %140 = load i32, i32* %29, align 8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %209

142:                                              ; preds = %134, %134, %117, %139
  %143 = phi %"class.blink::Node"* [ null, %139 ], [ null, %134 ], [ null, %134 ], [ %119, %117 ]
  %144 = load i32, i32* %32, align 8
  %145 = icmp sgt i32 %144, 1
  br i1 %145, label %152, label %146

146:                                              ; preds = %142
  %147 = load i64*, i64** %4, align 8
  %148 = getelementptr inbounds i64, i64* %147, i64 1
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, 160
  %151 = inttoptr i64 %150 to %"class.v8::Value"*
  br label %156

152:                                              ; preds = %142
  %153 = load i64*, i64** %56, align 8
  %154 = getelementptr inbounds i64, i64* %153, i64 1
  %155 = bitcast i64* %154 to %"class.v8::Value"*
  br label %156

156:                                              ; preds = %146, %152
  %157 = phi %"class.v8::Value"* [ %151, %146 ], [ %155, %152 ]
  %158 = bitcast %"class.v8::Value"* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = and i64 %159, 3
  %161 = icmp eq i64 %160, 1
  br i1 %161, label %162, label %179

162:                                              ; preds = %156
  %163 = add i64 %159, -1
  %164 = inttoptr i64 %163 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = and i64 %159, -4294967296
  %167 = zext i32 %165 to i64
  %168 = or i64 %166, %167
  %169 = add i64 %168, 7
  %170 = inttoptr i64 %169 to i16*
  %171 = load i16, i16* %170, align 2
  %172 = icmp eq i16 %171, 67
  br i1 %172, label %173, label %179

173:                                              ; preds = %162
  %174 = add i64 %159, 23
  %175 = inttoptr i64 %174 to i32*
  %176 = load i32, i32* %175, align 4
  %177 = and i32 %176, -2
  %178 = icmp eq i32 %177, 10
  br i1 %178, label %207, label %179

179:                                              ; preds = %162, %156, %173
  br i1 %145, label %186, label %180

180:                                              ; preds = %179
  %181 = load i64*, i64** %4, align 8
  %182 = getelementptr inbounds i64, i64* %181, i64 1
  %183 = load i64, i64* %182, align 8
  %184 = add i64 %183, 160
  %185 = inttoptr i64 %184 to %"class.v8::Value"*
  br label %190

186:                                              ; preds = %179
  %187 = load i64*, i64** %56, align 8
  %188 = getelementptr inbounds i64, i64* %187, i64 1
  %189 = bitcast i64* %188 to %"class.v8::Value"*
  br label %190

190:                                              ; preds = %180, %186
  %191 = phi %"class.v8::Value"* [ %185, %180 ], [ %189, %186 ]
  %192 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %191) #6
  br i1 %192, label %193, label %196, !prof !3

193:                                              ; preds = %190
  %194 = bitcast %"class.v8::Value"* %191 to %"class.v8::Uint32"*
  %195 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %194) #6
  br label %203

196:                                              ; preds = %190
  %197 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %191) #6
  br i1 %197, label %198, label %201, !prof !3

198:                                              ; preds = %196
  %199 = bitcast %"class.v8::Value"* %191 to %"class.v8::Int32"*
  %200 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %199) #6
  br label %203

201:                                              ; preds = %196
  %202 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %191, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %203

203:                                              ; preds = %193, %198, %201
  %204 = phi i32 [ %195, %193 ], [ %200, %198 ], [ %202, %201 ]
  %205 = load i32, i32* %29, align 8
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %203, %173
  %208 = phi i32 [ %204, %203 ], [ 0, %173 ]
  call void @_ZN5blink12DOMSelection8collapseEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::DOMSelection"* %90, %"class.blink::Node"* %143, i32 %208, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %209

209:                                              ; preds = %203, %139, %207, %54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %210 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %211 = load i64*, i64** %210, align 8
  %212 = icmp eq i64* %211, null
  br i1 %212, label %222, label %213

213:                                              ; preds = %209
  %214 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %215 = bitcast %"class.v8::Isolate"* %214 to %"class.v8::internal::Isolate"*
  %216 = load i64, i64* %211, align 8
  %217 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %215, i64 %216) #6
  %218 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %214) #6
  br i1 %218, label %222, label %219

219:                                              ; preds = %213
  %220 = bitcast i64* %217 to %"class.v8::Value"*
  %221 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %214, %"class.v8::Value"* %220) #6
  br label %222

222:                                              ; preds = %219, %213, %209
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %224, label %238, label %225

225:                                              ; preds = %222
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  br i1 %229, label %232, label %234

232:                                              ; preds = %225
  %233 = add i32 %231, -1
  store i32 %233, i32* %230, align 4
  br label %234

234:                                              ; preds = %232, %225
  %235 = phi i32 [ %233, %232 ], [ %231, %225 ]
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %234
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %223) #6
  br label %238

238:                                              ; preds = %222, %234, %237
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_112v8_selection25ToStringOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 1
  %5 = bitcast i64* %4 to %"class.v8::Isolate"**
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #6
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %7) #6
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  %10 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %8, i64 0, i32 3
  %11 = icmp eq %"class.blink::UseCounter"* %10, null
  %12 = or i1 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::UseCounter"* %10 to void (%"class.blink::UseCounter"*, i32)***
  %15 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, i64 3
  %17 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %16, align 8
  tail call void %17(%"class.blink::UseCounter"* nonnull %10, i32 1012) #6
  br label %18

18:                                               ; preds = %1, %13
  %19 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 -1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %22, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  switch i16 %31, label %36 [
    i16 1057, label %32
    i16 1056, label %32
    i16 1040, label %32
  ]

32:                                               ; preds = %18, %18, %18
  %33 = add i64 %22, 19
  %34 = inttoptr i64 %33 to i8**
  %35 = load i8*, i8** %34, align 1
  br label %39

36:                                               ; preds = %18
  %37 = bitcast i64* %21 to %"class.v8::Object"*
  %38 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %37, i32 1) #6
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i8* [ %35, %32 ], [ %38, %36 ]
  %41 = bitcast i8* %40 to %"class.blink::DOMSelection"*
  %42 = tail call %"class.WTF::StringImpl"* @_ZN5blink12DOMSelection8toStringEv(%"class.blink::DOMSelection"* %41) #6
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %64, label %44

44:                                               ; preds = %39
  %45 = ptrtoint %"class.v8::Isolate"* %6 to i64
  %46 = add i64 %45, 8
  %47 = inttoptr i64 %46 to %"class.blink::V8PerIsolateData"**
  %48 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %48, i64 0, i32 5, i32 0, i32 0, i32 0
  %50 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %49, align 8
  %51 = load i64*, i64** %2, align 8
  %52 = getelementptr inbounds i64, i64* %51, i64 3
  %53 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %50, i64 0, i32 3, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, %42
  br i1 %55, label %56, label %63

56:                                               ; preds = %44
  %57 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %50, i64 0, i32 1, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %72, label %60

60:                                               ; preds = %56
  %61 = inttoptr i64 %58 to i64*
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %52, align 8
  br label %72

63:                                               ; preds = %44
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %50, i64* %52, %"class.WTF::StringImpl"* nonnull %42) #6
  br label %72

64:                                               ; preds = %39
  %65 = load i64*, i64** %2, align 8
  %66 = getelementptr inbounds i64, i64* %65, i64 3
  %67 = getelementptr inbounds i64, i64* %65, i64 1
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 200
  %70 = inttoptr i64 %69 to i64*
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %66, align 8
  br label %85

72:                                               ; preds = %56, %60, %63
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #6
  br label %85

85:                                               ; preds = %64, %81, %84
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span.181"* byval(%"class.base::span.181") align 8) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink12DOMSelection10anchorNodeEv(%"class.blink::DOMSelection"*) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64*, %"class.blink::ScriptWrappable"*, %"class.v8::Object"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %8 = ptrtoint i64* %5 to i64
  %9 = sub i64 %7, %8
  %10 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %11 = icmp ult i64 %9, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %12 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %28, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %17, null
  %19 = icmp eq %"class.v8::Object"* %2, null
  %20 = or i1 %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.v8::Object"* %2 to i64*
  %23 = load i64, i64* %17, align 8
  %24 = load i64, i64* %22, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %28, label %37

26:                                               ; preds = %15
  %27 = and i1 %19, %18
  br i1 %27, label %28, label %37

28:                                               ; preds = %21, %26, %4
  %29 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %30, null
  %32 = getelementptr inbounds i64, i64* %0, i64 -1
  %33 = select i1 %31, i64* %32, i64* %30, !prof !2
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %0, align 8
  %35 = load i64*, i64** %29, align 8
  %36 = icmp ne i64* %35, null
  br label %80

37:                                               ; preds = %21, %26
  %38 = getelementptr inbounds i64, i64* %0, i64 -2
  %39 = bitcast i64* %38 to %"class.v8::Isolate"**
  %40 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %39, align 8
  %41 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %40) #6
  %42 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %41) #6
  %43 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %42, i64 0, i32 2, i32 0
  %44 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 8, !range !4
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %52, null
  %54 = getelementptr inbounds i64, i64* %0, i64 -1
  %55 = select i1 %53, i64* %54, i64* %52, !prof !2
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %0, align 8
  %57 = load i64*, i64** %51, align 8
  %58 = icmp ne i64* %57, null
  br label %80

59:                                               ; preds = %37
  %60 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0
  %61 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0
  %62 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %61, %"class.blink::ScriptWrappable"* %1) #6
  %63 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %62, 0
  %64 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0, i32 0
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %63, %69
  br i1 %70, label %80, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %75, label %78, !prof !2

75:                                               ; preds = %71
  %76 = getelementptr inbounds i64, i64* %0, i64 -1
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %0, align 8
  br label %80

78:                                               ; preds = %71
  %79 = load i64, i64* %73, align 8
  store i64 %79, i64* %0, align 8
  br label %80

80:                                               ; preds = %78, %75, %59, %50, %28
  %81 = phi i1 [ %36, %28 ], [ %58, %50 ], [ false, %59 ], [ true, %75 ], [ true, %78 ]
  ret i1 %81
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0)) #6
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.30, i64 0, i64 0)) #6
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #6
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare i32 @_ZNK5blink12DOMSelection12anchorOffsetEv(%"class.blink::DOMSelection"*) local_unnamed_addr #2

declare %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink12DOMSelection9focusNodeEv(%"class.blink::DOMSelection"*) local_unnamed_addr #2

declare i32 @_ZNK5blink12DOMSelection11focusOffsetEv(%"class.blink::DOMSelection"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink12DOMSelection11isCollapsedEv(%"class.blink::DOMSelection"*) local_unnamed_addr #2

declare i32 @_ZNK5blink12DOMSelection10rangeCountEv(%"class.blink::DOMSelection"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink12DOMSelection4typeEv(%"class.blink::DOMSelection"*) local_unnamed_addr #2

declare void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"*, i64*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink12DOMSelection8baseNodeEv(%"class.blink::DOMSelection"*) local_unnamed_addr #2

declare i32 @_ZNK5blink12DOMSelection10baseOffsetEv(%"class.blink::DOMSelection"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink12DOMSelection10extentNodeEv(%"class.blink::DOMSelection"*) local_unnamed_addr #2

declare i32 @_ZNK5blink12DOMSelection12extentOffsetEv(%"class.blink::DOMSelection"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #2

declare void @_ZN5blink12DOMSelection8addRangeEPNS_5RangeE(%"class.blink::DOMSelection"*, %"class.blink::Range"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN5blink12DOMSelection8collapseEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::DOMSelection"*, %"class.blink::Node"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink12DOMSelection13collapseToEndERNS_14ExceptionStateE(%"class.blink::DOMSelection"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink12DOMSelection15collapseToStartERNS_14ExceptionStateE(%"class.blink::DOMSelection"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink12DOMSelection12containsNodeEPKNS_4NodeEb(%"class.blink::DOMSelection"*, %"class.blink::Node"*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN5blink12DOMSelection18deleteFromDocumentEv(%"class.blink::DOMSelection"*) local_unnamed_addr #2

declare void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"*) local_unnamed_addr #2

declare void @_ZN5blink12DOMSelection5emptyEv(%"class.blink::DOMSelection"*) local_unnamed_addr #2

declare void @_ZN5blink12DOMSelection6extendEPNS_4NodeEjRNS_14ExceptionStateE(%"class.blink::DOMSelection"*, %"class.blink::Node"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::Range"* @_ZNK5blink12DOMSelection10getRangeAtEjRNS_14ExceptionStateE(%"class.blink::DOMSelection"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink12DOMSelection6modifyERKN3WTF6StringES4_S4_(%"class.blink::DOMSelection"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.789"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %54

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #6
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #6
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #6
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.789"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %54

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #6
  %38 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #6
  %39 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %38) #6
  %40 = icmp eq %"class.v8::String"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #6
  %43 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, i64 5
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %45, align 8
  call void %46(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %42) #6
  %47 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 152, i1 false)
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %39, %"class.v8::String"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr.789"* %51 to i64*
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %48, %41
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #6
  br label %54

54:                                               ; preds = %53, %28, %21
  ret void
}

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

declare void @_ZN5blink12DOMSelection15removeAllRangesEv(%"class.blink::DOMSelection"*) local_unnamed_addr #2

declare void @_ZN5blink12DOMSelection11removeRangeEPNS_5RangeE(%"class.blink::DOMSelection"*, %"class.blink::Range"*) local_unnamed_addr #2

declare void @_ZN5blink12DOMSelection17selectAllChildrenEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::DOMSelection"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink12DOMSelection16setBaseAndExtentEPNS_4NodeEjS2_jRNS_14ExceptionStateE(%"class.blink::DOMSelection"*, %"class.blink::Node"*, i32, %"class.blink::Node"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink12DOMSelection8toStringEv(%"class.blink::DOMSelection"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
