; ModuleID = '../../extensions/browser/api/declarative_net_request/request_params.cc'
source_filename = "../../extensions/browser/api/declarative_net_request/request_params.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::NoDestructor" = type { [24 x i8] }
%"struct.std::nothrow_t" = type { i8 }
%"struct.extensions::declarative_net_request::RequestParams" = type { %class.GURL*, %"class.url::Origin", i32, i8, i32, %"struct.content::GlobalFrameRoutingId", %"class.base::RepeatingCallback", %"class.base::flat_map", %"class.absl::optional.11", %"class.base::flat_map.16" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.content::GlobalFrameRoutingId" = type { i32, i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.6" }
%"struct.std::__1::pair" = type { %"class.extensions::declarative_net_request::CompositeMatcher"*, %"class.absl::optional.130" }
%"class.extensions::declarative_net_request::CompositeMatcher" = type opaque
%"class.absl::optional.130" = type { %"class.absl::optional_internal::optional_data.131" }
%"class.absl::optional_internal::optional_data.131" = type { %"class.absl::optional_internal::optional_data_base.132" }
%"class.absl::optional_internal::optional_data_base.132" = type { %"class.absl::optional_internal::optional_data_dtor_base.133" }
%"class.absl::optional_internal::optional_data_dtor_base.133" = type { i8, %union.anon.134 }
%union.anon.134 = type { i64 }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::pair"* }
%"class.absl::optional.11" = type { %"class.absl::optional_internal::optional_data.12" }
%"class.absl::optional_internal::optional_data.12" = type { %"class.absl::optional_internal::optional_data_base.13" }
%"class.absl::optional_internal::optional_data_base.13" = type { %"class.absl::optional_internal::optional_data_dtor_base.14" }
%"class.absl::optional_internal::optional_data_dtor_base.14" = type { i8, %union.anon.15 }
%union.anon.15 = type { %"class.std::__1::basic_string" }
%"class.base::flat_map.16" = type { %"class.base::internal::flat_tree.17" }
%"class.base::internal::flat_tree.17" = type { %"class.std::__1::vector.18" }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"struct.std::__1::pair.20"*, %"struct.std::__1::pair.20"*, %"class.std::__1::__compressed_pair.21" }
%"struct.std::__1::pair.20" = type { %"class.extensions::declarative_net_request::RegexRulesMatcher"*, %"class.std::__1::vector.197" }
%"class.extensions::declarative_net_request::RegexRulesMatcher" = type { %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.flatbuffers::Vector.146"*, %"class.flatbuffers::Vector.147"*, i8, %"class.re2::FilteredRE2", %"class.std::__1::map.163", %"class.std::__1::unique_ptr.174" }
%"class.extensions::declarative_net_request::RulesetMatcherBase" = type { i32 (...)**, %"class.std::__1::basic_string", %"class.util::IdType", %"class.std::__1::map.135" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.std::__1::map.135" = type { %"class.std::__1::__tree.136" }
%"class.std::__1::__tree.136" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { i64 }
%"class.flatbuffers::Vector.146" = type { i32 }
%"class.flatbuffers::Vector.147" = type { i32 }
%"class.re2::FilteredRE2" = type { %"class.std::__1::vector.148", i8, %"class.std::__1::unique_ptr.157" }
%"class.std::__1::vector.148" = type { %"class.std::__1::__vector_base.149" }
%"class.std::__1::__vector_base.149" = type { %"class.re2::RE2"**, %"class.re2::RE2"**, %"class.std::__1::__compressed_pair.152" }
%"class.re2::RE2" = type { %"class.std::__1::basic_string", %"class.re2::RE2::Options", %"class.re2::Regexp"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.re2::Regexp"*, %"class.re2::Prog"*, i32, i8, %"class.re2::Prog"*, %"class.std::__1::map.150"*, %"class.std::__1::map.151"*, %"struct.std::__1::once_flag", %"struct.std::__1::once_flag", %"struct.std::__1::once_flag" }
%"class.re2::RE2::Options" = type { i32, i8, i8, i8, i64, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.re2::Regexp" = type opaque
%"class.re2::Prog" = type opaque
%"class.std::__1::map.150" = type opaque
%"class.std::__1::map.151" = type opaque
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.re2::RE2"** }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.re2::PrefilterTree"* }
%"class.re2::PrefilterTree" = type opaque
%"class.std::__1::map.163" = type { %"class.std::__1::__tree.164" }
%"class.std::__1::__tree.164" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.165", %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.url_matcher::SubstringSetMatcher"* }
%"class.url_matcher::SubstringSetMatcher" = type <{ %"class.std::__1::vector.177", i8, [7 x i8] }>
%"class.std::__1::vector.177" = type { %"class.std::__1::__vector_base.178" }
%"class.std::__1::__vector_base.178" = type { %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.std::__1::__compressed_pair.189" }
%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode" = type <{ %"class.base::flat_map.179", i32, i32, i32, [4 x i8] }>
%"class.base::flat_map.179" = type { %"class.base::internal::flat_tree.180" }
%"class.base::internal::flat_tree.180" = type { %"class.std::__1::vector.181" }
%"class.std::__1::vector.181" = type { %"class.std::__1::__vector_base.182" }
%"class.std::__1::__vector_base.182" = type { %"struct.std::__1::pair.183"*, %"struct.std::__1::pair.183"*, %"class.std::__1::__compressed_pair.184" }
%"struct.std::__1::pair.183" = type { i8, i32 }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.std::__1::pair.183"* }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* }
%"class.std::__1::vector.197" = type { %"class.std::__1::__vector_base.198" }
%"class.std::__1::__vector_base.198" = type { %"struct.extensions::declarative_net_request::RegexRuleInfo"*, %"struct.extensions::declarative_net_request::RegexRuleInfo"*, %"class.std::__1::__compressed_pair.199" }
%"struct.extensions::declarative_net_request::RegexRuleInfo" = type { %"struct.extensions::declarative_net_request::flat::RegexRule"*, %"class.re2::RE2"* }
%"struct.extensions::declarative_net_request::flat::RegexRule" = type { %"class.flatbuffers::Table" }
%"class.flatbuffers::Table" = type { [1 x i8] }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"struct.extensions::declarative_net_request::RegexRuleInfo"* }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::pair.20"* }
%"struct.extensions::WebRequestInfo" = type { i64, %class.GURL, i32, i32, i32, %"class.std::__1::basic_string", i8, %"class.absl::optional.26", %"struct.extensions::ExtensionApiFrameIdMap::FrameData", i8, i8, %"class.net::HttpRequestHeaders", i32, %class.scoped_refptr.38, %"class.std::__1::basic_string", i8, %"class.std::__1::unique_ptr.47", i8, i32, i32, i32, %"class.absl::optional.85", i8, %"class.absl::optional.109", %"class.ukm::SourceIdObj", %"struct.content::GlobalFrameRoutingId" }
%"class.absl::optional.26" = type { %"class.absl::optional_internal::optional_data.27" }
%"class.absl::optional_internal::optional_data.27" = type { %"class.absl::optional_internal::optional_data_base.28" }
%"class.absl::optional_internal::optional_data_base.28" = type { %"class.absl::optional_internal::optional_data_dtor_base.29" }
%"class.absl::optional_internal::optional_data_dtor_base.29" = type { i8, %union.anon.30 }
%union.anon.30 = type { %"class.url::Origin" }
%"struct.extensions::ExtensionApiFrameIdMap::FrameData" = type { i32, i32, i32, i32 }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector.31" }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%class.scoped_refptr.38 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.39", %"class.std::__1::vector.40", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.39" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.42" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.50" }
%"union.absl::variant_internal::DestructibleUnionImpl.50" = type { %"union.absl::variant_internal::DestructibleUnionImpl.51" }
%"union.absl::variant_internal::DestructibleUnionImpl.51" = type { %"union.absl::variant_internal::DestructibleUnionImpl.52" }
%"union.absl::variant_internal::DestructibleUnionImpl.52" = type { %"union.absl::variant_internal::DestructibleUnionImpl.53" }
%"union.absl::variant_internal::DestructibleUnionImpl.53" = type { %"class.std::__1::basic_string" }
%"class.absl::optional.85" = type { %"class.absl::optional_internal::optional_data.86" }
%"class.absl::optional_internal::optional_data.86" = type { %"class.absl::optional_internal::optional_data_base.87" }
%"class.absl::optional_internal::optional_data_base.87" = type { %"class.absl::optional_internal::optional_data_dtor_base.88" }
%"class.absl::optional_internal::optional_data_dtor_base.88" = type { i8, %union.anon.89 }
%union.anon.89 = type { %"class.std::__1::vector.90" }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"*, %"class.std::__1::__compressed_pair.104" }
%"struct.extensions::declarative_net_request::RequestAction" = type <{ i32, [4 x i8], %"class.absl::optional.92", i32, [4 x i8], i64, %"class.util::IdType", [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::vector.97", %"class.std::__1::vector.97", i8, [7 x i8] }>
%"class.absl::optional.92" = type { %"class.absl::optional_internal::optional_data.93" }
%"class.absl::optional_internal::optional_data.93" = type { %"class.absl::optional_internal::optional_data_base.94" }
%"class.absl::optional_internal::optional_data_base.94" = type { %"class.absl::optional_internal::optional_data_dtor_base.95" }
%"class.absl::optional_internal::optional_data_dtor_base.95" = type { i8, %union.anon.96 }
%union.anon.96 = type { %class.GURL }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"class.std::__1::__compressed_pair.99" }
%"struct.extensions::declarative_net_request::RequestAction::HeaderInfo" = type { %"class.std::__1::basic_string", i32, %"class.absl::optional.11" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.extensions::declarative_net_request::RequestAction"* }
%"class.absl::optional.109" = type { %"class.absl::optional_internal::optional_data.110" }
%"class.absl::optional_internal::optional_data.110" = type { %"class.absl::optional_internal::optional_data_base.111" }
%"class.absl::optional_internal::optional_data_base.111" = type { %"class.absl::optional_internal::optional_data_dtor_base.112" }
%"class.absl::optional_internal::optional_data_dtor_base.112" = type { i8, %union.anon.113 }
%union.anon.113 = type { i64 }
%"class.ukm::SourceIdObj" = type { i64 }
%"class.content::RenderFrameHost" = type { %"class.IPC::Listener", %"class.IPC::Sender" }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.base::flat_map.204" = type { %"class.base::internal::flat_tree.205" }
%"class.base::internal::flat_tree.205" = type { %"class.std::__1::vector.206" }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"*, %"class.std::__1::__compressed_pair.209" }
%"struct.std::__1::pair.208" = type <{ %"class.base::BasicStringPiece", i32, [4 x i8] }>
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.std::__1::pair.208"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.flatbuffers::Vector" = type { i32 }
%"struct.extensions::declarative_net_request::flat::EmbedderConditions" = type { %"class.flatbuffers::Table" }
%"class.extensions::ExtensionsBrowserClient" = type { i32 (...)**, %"class.std::__1::vector.114" }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"class.std::__1::unique_ptr.116"*, %"class.std::__1::unique_ptr.116"*, %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::unique_ptr.116" = type opaque
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::unique_ptr.116"* }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare" = type { i8 }

$_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8GetFirstENS3_4lessIvEENS3_6vectorINS3_4pairIS6_N17url_pattern_index4flat13RequestMethodEEENS3_9allocatorISF_EEEEE15sort_and_uniqueENS3_11__wrap_iterIPSF_EESM_ = comdat any

$_ZNSt3__16uniqueINS_11__wrap_iterIPNS_4pairIN4base16BasicStringPieceIcNS_11char_traitsIcEEEEN17url_pattern_index4flat13RequestMethodEEEEENS3_8internal9NotFnImplINSE_9flat_treeIS7_NSE_8GetFirstENS_4lessIvEENS_6vectorISB_NS_9allocatorISB_EEEEE13value_compareEEEEET_SR_SR_T0_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_SQ_T_NS_15iterator_traitsISQ_E15difference_typeESU_PNST_10value_typeEl = comdat any

$_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_PNS_15iterator_traitsISQ_E10value_typeET_ = comdat any

$_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_SQ_T_NS_15iterator_traitsISQ_E15difference_typeESU_PNST_10value_typeE = comdat any

$_ZNK4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8GetFirstENS3_4lessIvEENS3_6vectorINS3_4pairIS6_N17url_pattern_index4flat13RequestMethodEEENS3_9allocatorISF_EEEEE11equal_rangeINS3_12basic_stringIcS5_NSG_IcEEEEEENSB_INS3_11__wrap_iterIPKSF_EESR_EERKT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFbiRKN11flatbuffers6VectorIhEEEJiEEEFbS7_EE3RunEPNS0_13BindStateBaseES7_ = comdat any

$_ZN4base8internal9BindStateIPFbiRKN11flatbuffers6VectorIhEEEJiEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [19 x i8] c"FlatBuffers 1.12.0\00", align 1
@_ZN11flatbuffers25flatbuffer_version_stringE = weak hidden local_unnamed_addr global i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), align 8
@_ZZN10extensions23declarative_net_request12_GLOBAL__N_116GetRequestMethodERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE15kRequestMethods = internal global %"class.base::NoDestructor" zeroinitializer, align 16
@_ZGVZN10extensions23declarative_net_request12_GLOBAL__N_116GetRequestMethodERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE15kRequestMethods = internal global i64 0, align 8
@_ZN3net18HttpRequestHeaders13kDeleteMethodE = external constant [0 x i8], align 1
@_ZN3net18HttpRequestHeaders10kGetMethodE = external constant [0 x i8], align 1
@_ZN3net18HttpRequestHeaders11kHeadMethodE = external constant [0 x i8], align 1
@_ZN3net18HttpRequestHeaders14kOptionsMethodE = external constant [0 x i8], align 1
@_ZN3net18HttpRequestHeaders12kPatchMethodE = external constant [0 x i8], align 1
@_ZN3net18HttpRequestHeaders11kPostMethodE = external constant [0 x i8], align 1
@_ZN3net18HttpRequestHeaders10kPutMethodE = external constant [0 x i8], align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@switch.table._ZN10extensions23declarative_net_request13RequestParamsC2ERKNS_14WebRequestInfoE = private unnamed_addr constant [12 x i32] [i32 8192, i32 128, i32 8, i32 2, i32 4, i32 1024, i32 16, i32 32, i32 256, i32 4096, i32 512, i32 2048], align 4

@_ZN10extensions23declarative_net_request13RequestParamsC1ERKNS_14WebRequestInfoE = hidden unnamed_addr alias void (%"struct.extensions::declarative_net_request::RequestParams"*, %"struct.extensions::WebRequestInfo"*), void (%"struct.extensions::declarative_net_request::RequestParams"*, %"struct.extensions::WebRequestInfo"*)* @_ZN10extensions23declarative_net_request13RequestParamsC2ERKNS_14WebRequestInfoE
@_ZN10extensions23declarative_net_request13RequestParamsC1EPN7content15RenderFrameHostEb = hidden unnamed_addr alias void (%"struct.extensions::declarative_net_request::RequestParams"*, %"class.content::RenderFrameHost"*, i1), void (%"struct.extensions::declarative_net_request::RequestParams"*, %"class.content::RenderFrameHost"*, i1)* @_ZN10extensions23declarative_net_request13RequestParamsC2EPN7content15RenderFrameHostEb
@_ZN10extensions23declarative_net_request13RequestParamsC1Ev = hidden unnamed_addr alias void (%"struct.extensions::declarative_net_request::RequestParams"*), void (%"struct.extensions::declarative_net_request::RequestParams"*)* @_ZN10extensions23declarative_net_request13RequestParamsC2Ev
@_ZN10extensions23declarative_net_request13RequestParamsD1Ev = hidden unnamed_addr alias void (%"struct.extensions::declarative_net_request::RequestParams"*), void (%"struct.extensions::declarative_net_request::RequestParams"*)* @_ZN10extensions23declarative_net_request13RequestParamsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request13RequestParamsC2ERKNS_14WebRequestInfoE(%"struct.extensions::declarative_net_request::RequestParams"*, %"struct.extensions::WebRequestInfo"* dereferenceable(456)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::flat_map.204", align 16
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.url::Origin", align 8
  %6 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.extensions::WebRequestInfo", %"struct.extensions::WebRequestInfo"* %1, i64 0, i32 1
  store %class.GURL* %7, %class.GURL** %6, align 8
  %8 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 1
  %9 = bitcast %"class.url::Origin"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %9) #11
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* nonnull %5) #11
  %10 = getelementptr inbounds %"struct.extensions::WebRequestInfo", %"struct.extensions::WebRequestInfo"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !2, !noalias !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.extensions::WebRequestInfo", %"struct.extensions::WebRequestInfo"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %8, %"class.url::Origin"* dereferenceable(80) %14) #11
  br label %16

15:                                               ; preds = %2
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %8, %"class.url::Origin"* nonnull dereferenceable(80) %5) #11
  br label %16

16:                                               ; preds = %13, %15
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %9) #11
  %17 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 2
  %18 = getelementptr inbounds %"struct.extensions::WebRequestInfo", %"struct.extensions::WebRequestInfo"* %1, i64 0, i32 9
  %19 = load i8, i8* %18, align 8
  %20 = icmp ult i8 %19, 12
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = sext i8 %19 to i64
  %23 = getelementptr inbounds [12 x i32], [12 x i32]* @switch.table._ZN10extensions23declarative_net_request13RequestParamsC2ERKNS_14WebRequestInfoE, i64 0, i64 %22
  %24 = load i32, i32* %23, align 4
  br label %25

25:                                               ; preds = %21, %16
  %26 = phi i32 [ 1, %16 ], [ %24, %21 ]
  store i32 %26, i32* %17, align 8
  %27 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 3
  store i8 0, i8* %27, align 4
  %28 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 4
  %29 = getelementptr inbounds %"struct.extensions::WebRequestInfo", %"struct.extensions::WebRequestInfo"* %1, i64 0, i32 5
  %30 = load atomic i8, i8* bitcast (i64* @_ZGVZN10extensions23declarative_net_request12_GLOBAL__N_116GetRequestMethodERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE15kRequestMethods to i8*) acquire, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %101, !prof !6

32:                                               ; preds = %25
  %33 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN10extensions23declarative_net_request12_GLOBAL__N_116GetRequestMethodERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE15kRequestMethods) #11
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %101, label %35

35:                                               ; preds = %32
  %36 = bitcast %"class.base::flat_map.204"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #11
  %37 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders13kDeleteMethodE, i64 0, i64 0)) #11
  %38 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders10kGetMethodE, i64 0, i64 0)) #11
  %39 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders11kHeadMethodE, i64 0, i64 0)) #11
  %40 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders14kOptionsMethodE, i64 0, i64 0)) #11
  %41 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders12kPatchMethodE, i64 0, i64 0)) #11
  %42 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders11kPostMethodE, i64 0, i64 0)) #11
  %43 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders10kPutMethodE, i64 0, i64 0)) #11
  %44 = getelementptr inbounds %"class.base::flat_map.204", %"class.base::flat_map.204"* %3, i64 0, i32 0
  %45 = call i8* @_Znwm(i64 168) #12
  %46 = bitcast i8* %45 to %"struct.std::__1::pair.208"*
  %47 = getelementptr inbounds %"class.base::flat_map.204", %"class.base::flat_map.204"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %48 = bitcast %"class.base::flat_map.204"* %3 to i8**
  store i8* %45, i8** %48, align 16
  %49 = getelementptr inbounds i8, i8* %45, i64 168
  %50 = bitcast i8* %49 to %"struct.std::__1::pair.208"*
  %51 = getelementptr inbounds %"class.base::flat_map.204", %"class.base::flat_map.204"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast %"struct.std::__1::pair.208"** %51 to i8**
  store i8* %49, i8** %52, align 16
  %53 = bitcast %"struct.std::__1::pair.208"** %47 to i64*
  %54 = bitcast i8* %45 to i8**
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders13kDeleteMethodE, i64 0, i64 0), i8** %54, align 8
  %55 = getelementptr inbounds i8, i8* %45, i64 8
  %56 = bitcast i8* %55 to i64*
  store i64 %37, i64* %56, align 8
  %57 = getelementptr inbounds i8, i8* %45, i64 16
  %58 = bitcast i8* %57 to i32*
  store i32 1, i32* %58, align 8
  %59 = getelementptr inbounds i8, i8* %45, i64 24
  %60 = bitcast i8* %59 to i8**
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders10kGetMethodE, i64 0, i64 0), i8** %60, align 8
  %61 = getelementptr inbounds i8, i8* %45, i64 32
  %62 = bitcast i8* %61 to i64*
  store i64 %38, i64* %62, align 8
  %63 = getelementptr inbounds i8, i8* %45, i64 40
  %64 = bitcast i8* %63 to i32*
  store i32 2, i32* %64, align 8
  %65 = getelementptr inbounds i8, i8* %45, i64 48
  %66 = bitcast i8* %65 to i8**
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders11kHeadMethodE, i64 0, i64 0), i8** %66, align 8
  %67 = getelementptr inbounds i8, i8* %45, i64 56
  %68 = bitcast i8* %67 to i64*
  store i64 %39, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %45, i64 64
  %70 = bitcast i8* %69 to i32*
  store i32 4, i32* %70, align 8
  %71 = getelementptr inbounds i8, i8* %45, i64 72
  %72 = bitcast i8* %71 to i8**
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders14kOptionsMethodE, i64 0, i64 0), i8** %72, align 8
  %73 = getelementptr inbounds i8, i8* %45, i64 80
  %74 = bitcast i8* %73 to i64*
  store i64 %40, i64* %74, align 8
  %75 = getelementptr inbounds i8, i8* %45, i64 88
  %76 = bitcast i8* %75 to i32*
  store i32 8, i32* %76, align 8
  %77 = getelementptr inbounds i8, i8* %45, i64 96
  %78 = bitcast i8* %77 to i8**
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders12kPatchMethodE, i64 0, i64 0), i8** %78, align 8
  %79 = getelementptr inbounds i8, i8* %45, i64 104
  %80 = bitcast i8* %79 to i64*
  store i64 %41, i64* %80, align 8
  %81 = getelementptr inbounds i8, i8* %45, i64 112
  %82 = bitcast i8* %81 to i32*
  store i32 16, i32* %82, align 8
  %83 = getelementptr inbounds i8, i8* %45, i64 120
  %84 = bitcast i8* %83 to i8**
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders11kPostMethodE, i64 0, i64 0), i8** %84, align 8
  %85 = getelementptr inbounds i8, i8* %45, i64 128
  %86 = bitcast i8* %85 to i64*
  store i64 %42, i64* %86, align 8
  %87 = getelementptr inbounds i8, i8* %45, i64 136
  %88 = bitcast i8* %87 to i32*
  store i32 32, i32* %88, align 8
  %89 = getelementptr inbounds i8, i8* %45, i64 144
  %90 = bitcast i8* %89 to i8**
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders10kPutMethodE, i64 0, i64 0), i8** %90, align 8
  %91 = getelementptr inbounds i8, i8* %45, i64 152
  %92 = bitcast i8* %91 to i64*
  store i64 %43, i64* %92, align 8
  %93 = getelementptr inbounds i8, i8* %45, i64 160
  %94 = bitcast i8* %93 to i32*
  store i32 64, i32* %94, align 8
  %95 = ptrtoint i8* %49 to i64
  store i64 %95, i64* %53, align 8
  call void @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8GetFirstENS3_4lessIvEENS3_6vectorINS3_4pairIS6_N17url_pattern_index4flat13RequestMethodEEENS3_9allocatorISF_EEEEE15sort_and_uniqueENS3_11__wrap_iterIPSF_EESM_(%"class.base::internal::flat_tree.205"* nonnull %44, %"struct.std::__1::pair.208"* nonnull %46, %"struct.std::__1::pair.208"* %50) #11
  %96 = bitcast %"class.base::flat_map.204"* %3 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 16
  store <2 x i64> %97, <2 x i64>* bitcast (%"class.base::NoDestructor"* @_ZZN10extensions23declarative_net_request12_GLOBAL__N_116GetRequestMethodERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE15kRequestMethods to <2 x i64>*), align 16
  %98 = bitcast %"struct.std::__1::pair.208"** %51 to i64*
  %99 = load i64, i64* %98, align 16
  store i64 %99, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN10extensions23declarative_net_request12_GLOBAL__N_116GetRequestMethodERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE15kRequestMethods, i64 0, i32 0, i64 16) to i64*), align 16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #11
  %100 = call {}* @llvm.invariant.start.p0i8(i64 24, i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN10extensions23declarative_net_request12_GLOBAL__N_116GetRequestMethodERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE15kRequestMethods, i64 0, i32 0, i64 0)) #11
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN10extensions23declarative_net_request12_GLOBAL__N_116GetRequestMethodERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE15kRequestMethods) #11
  br label %101

101:                                              ; preds = %35, %32, %25
  %102 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #11
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 -86, i64 24, i1 false) #11
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %111 = select i1 %107, i8* %109, i8* %110
  %112 = getelementptr inbounds %"struct.extensions::WebRequestInfo", %"struct.extensions::WebRequestInfo"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = zext i8 %106 to i64
  %115 = select i1 %107, i64 %113, i64 %114
  call void @_ZN4base12ToUpperASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %4, i8* %111, i64 %115) #11
  %116 = call { %"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"* } @_ZNK4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8GetFirstENS3_4lessIvEENS3_6vectorINS3_4pairIS6_N17url_pattern_index4flat13RequestMethodEEENS3_9allocatorISF_EEEEE11equal_rangeINS3_12basic_stringIcS5_NSG_IcEEEEEENSB_INS3_11__wrap_iterIPKSF_EESR_EERKT_(%"class.base::internal::flat_tree.205"* bitcast (%"class.base::NoDestructor"* @_ZZN10extensions23declarative_net_request12_GLOBAL__N_116GetRequestMethodERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE15kRequestMethods to %"class.base::internal::flat_tree.205"*), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #11
  %117 = extractvalue { %"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"* } %116, 0
  %118 = extractvalue { %"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"* } %116, 1
  %119 = icmp eq %"struct.std::__1::pair.208"* %117, %118
  %120 = load %"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN10extensions23declarative_net_request12_GLOBAL__N_116GetRequestMethodERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE15kRequestMethods, i64 0, i32 0, i64 8) to %"struct.std::__1::pair.208"**), align 8
  %121 = select i1 %119, %"struct.std::__1::pair.208"* %120, %"struct.std::__1::pair.208"* %117
  %122 = icmp eq %"struct.std::__1::pair.208"* %121, %120
  br i1 %122, label %126, label %123

123:                                              ; preds = %101
  %124 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %121, i64 0, i32 1
  %125 = load i32, i32* %124, align 8
  br label %126

126:                                              ; preds = %123, %101
  %127 = phi i32 [ %125, %123 ], [ 2, %101 ]
  %128 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %126
  %133 = load i8*, i8** %103, align 8
  call void @_ZdlPv(i8* %133) #12
  br label %134

134:                                              ; preds = %126, %132
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #11
  store i32 %127, i32* %28, align 8
  %135 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 5
  %136 = getelementptr inbounds %"struct.extensions::WebRequestInfo", %"struct.extensions::WebRequestInfo"* %1, i64 0, i32 25
  %137 = bitcast %"struct.content::GlobalFrameRoutingId"* %136 to i64*
  %138 = bitcast %"struct.content::GlobalFrameRoutingId"* %135 to i64*
  %139 = load i64, i64* %137, align 8
  store i64 %139, i64* %138, align 4
  %140 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 6
  %141 = getelementptr inbounds %"struct.extensions::WebRequestInfo", %"struct.extensions::WebRequestInfo"* %1, i64 0, i32 8, i32 2
  %142 = call i8* @_Znwm(i64 48) #12, !noalias !7
  %143 = bitcast i8* %142 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %143, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.flatbuffers::Vector"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbiRKN11flatbuffers6VectorIhEEEJiEEEFbS7_EE3RunEPNS0_13BindStateBaseES7_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbiRKN11flatbuffers6VectorIhEEEJiEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !7
  %144 = getelementptr inbounds i8, i8* %142, i64 32
  %145 = bitcast i8* %144 to i1 (i32, %"class.flatbuffers::Vector"*)**
  store i1 (i32, %"class.flatbuffers::Vector"*)* @_ZN10extensions23declarative_net_request12_GLOBAL__N_125DoEmbedderConditionsMatchEiRKN11flatbuffers6VectorIhEE, i1 (i32, %"class.flatbuffers::Vector"*)** %145, align 8, !noalias !7
  %146 = getelementptr inbounds i8, i8* %142, i64 40
  %147 = bitcast i8* %146 to i32*
  %148 = load i32, i32* %141, align 4, !noalias !7
  store i32 %148, i32* %147, align 4, !noalias !7
  %149 = bitcast %"class.base::RepeatingCallback"* %140 to i8**
  store i8* %142, i8** %149, align 8, !alias.scope !7
  %150 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 7
  %151 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %152 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %153 = bitcast %"class.base::flat_map"* %150 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 25, i1 false)
  %154 = bitcast %union.anon.15* %151 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 48, i1 false)
  %155 = load i8, i8* %152, align 8, !range !2
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %157, label %162

157:                                              ; preds = %134
  %158 = load %class.GURL*, %class.GURL** %6, align 8
  %159 = call zeroext i1 @_ZN3net27registry_controlled_domains16SameDomainOrHostERK4GURLRKN3url6OriginENS0_21PrivateRegistryFilterE(%class.GURL* dereferenceable(120) %158, %"class.url::Origin"* dereferenceable(80) %8, i32 1) #11
  %160 = xor i1 %159, true
  %161 = zext i1 %160 to i8
  br label %162

162:                                              ; preds = %134, %157
  %163 = phi i8 [ %161, %157 ], [ 1, %134 ]
  store i8 %163, i8* %27, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3url6OriginC1Ev(%"class.url::Origin"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN10extensions23declarative_net_request12_GLOBAL__N_125DoEmbedderConditionsMatchEiRKN11flatbuffers6VectorIhEE(i32, %"class.flatbuffers::Vector"* dereferenceable(4)) #4 {
  %3 = getelementptr inbounds %"class.flatbuffers::Vector", %"class.flatbuffers::Vector"* %1, i64 1, i32 0
  %4 = bitcast i32* %3 to i8*
  %5 = load i32, i32* %3, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %4, i64 %6
  %8 = bitcast i8* %7 to %"struct.extensions::declarative_net_request::flat::EmbedderConditions"*
  %9 = bitcast i8* %7 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = sub nsw i64 0, %11
  %13 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::EmbedderConditions", %"struct.extensions::declarative_net_request::flat::EmbedderConditions"* %8, i64 0, i32 0, i32 0, i64 %12
  %14 = bitcast i8* %13 to i16*
  %15 = load i16, i16* %14, align 2
  %16 = icmp ugt i16 %15, 4
  br i1 %16, label %17, label %119

17:                                               ; preds = %2
  %18 = getelementptr inbounds i8, i8* %13, i64 4
  %19 = bitcast i8* %18 to i16*
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i64
  %22 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::EmbedderConditions", %"struct.extensions::declarative_net_request::flat::EmbedderConditions"* %8, i64 0, i32 0, i32 0, i64 %21
  %23 = icmp eq i16 %20, 0
  br i1 %23, label %67, label %24

24:                                               ; preds = %17
  %25 = bitcast i8* %22 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %22, i64 %27
  %29 = icmp eq i8* %28, null
  br i1 %29, label %67, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds i8, i8* %28, i64 4
  %32 = bitcast i8* %31 to i32*
  %33 = ptrtoint i8* %31 to i64
  %34 = bitcast i8* %28 to i32*
  %35 = load i32, i32* %34, align 4, !noalias !12
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i32, i32* %32, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %58, label %39

39:                                               ; preds = %30, %39
  %40 = phi i64 [ %54, %39 ], [ %33, %30 ]
  %41 = phi i8* [ %55, %39 ], [ %31, %30 ]
  %42 = phi i64 [ %56, %39 ], [ %36, %30 ]
  %43 = lshr i64 %42, 1
  %44 = shl i64 %43, 2
  %45 = and i64 %44, 17179869180
  %46 = getelementptr inbounds i8, i8* %41, i64 %45
  %47 = bitcast i8* %46 to i32*
  %48 = load i32, i32* %47, align 4, !noalias !15
  %49 = icmp slt i32 %48, %0
  %50 = getelementptr inbounds i8, i8* %46, i64 4
  %51 = ptrtoint i8* %50 to i64
  %52 = xor i64 %43, -1
  %53 = add i64 %42, %52
  %54 = select i1 %49, i64 %51, i64 %40
  %55 = select i1 %49, i8* %50, i8* %41
  %56 = select i1 %49, i64 %53, i64 %43
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %39

58:                                               ; preds = %39, %30
  %59 = phi i64 [ %33, %30 ], [ %54, %39 ]
  %60 = inttoptr i64 %59 to i8*
  %61 = bitcast i32* %37 to i8*
  %62 = icmp eq i8* %61, %60
  br i1 %62, label %120, label %63

63:                                               ; preds = %58
  %64 = inttoptr i64 %59 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = icmp sgt i32 %65, %0
  br i1 %66, label %120, label %67

67:                                               ; preds = %63, %17, %24
  %68 = icmp ugt i16 %15, 6
  br i1 %68, label %69, label %119

69:                                               ; preds = %67
  %70 = getelementptr inbounds i8, i8* %13, i64 6
  %71 = bitcast i8* %70 to i16*
  %72 = load i16, i16* %71, align 2
  %73 = zext i16 %72 to i64
  %74 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::EmbedderConditions", %"struct.extensions::declarative_net_request::flat::EmbedderConditions"* %8, i64 0, i32 0, i32 0, i64 %73
  %75 = icmp eq i16 %72, 0
  br i1 %75, label %119, label %76

76:                                               ; preds = %69
  %77 = bitcast i8* %74 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %74, i64 %79
  %81 = icmp eq i8* %80, null
  br i1 %81, label %119, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds i8, i8* %80, i64 4
  %84 = bitcast i8* %83 to i32*
  %85 = ptrtoint i8* %83 to i64
  %86 = bitcast i8* %80 to i32*
  %87 = load i32, i32* %86, align 4, !noalias !18
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i32, i32* %84, i64 %88
  %90 = icmp eq i32 %87, 0
  br i1 %90, label %110, label %91

91:                                               ; preds = %82, %91
  %92 = phi i64 [ %106, %91 ], [ %85, %82 ]
  %93 = phi i8* [ %107, %91 ], [ %83, %82 ]
  %94 = phi i64 [ %108, %91 ], [ %88, %82 ]
  %95 = lshr i64 %94, 1
  %96 = shl i64 %95, 2
  %97 = and i64 %96, 17179869180
  %98 = getelementptr inbounds i8, i8* %93, i64 %97
  %99 = bitcast i8* %98 to i32*
  %100 = load i32, i32* %99, align 4, !noalias !21
  %101 = icmp slt i32 %100, %0
  %102 = getelementptr inbounds i8, i8* %98, i64 4
  %103 = ptrtoint i8* %102 to i64
  %104 = xor i64 %95, -1
  %105 = add i64 %94, %104
  %106 = select i1 %101, i64 %103, i64 %92
  %107 = select i1 %101, i8* %102, i8* %93
  %108 = select i1 %101, i64 %105, i64 %95
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %91

110:                                              ; preds = %91, %82
  %111 = phi i64 [ %85, %82 ], [ %106, %91 ]
  %112 = inttoptr i64 %111 to i8*
  %113 = bitcast i32* %89 to i8*
  %114 = icmp eq i8* %113, %112
  br i1 %114, label %119, label %115

115:                                              ; preds = %110
  %116 = inttoptr i64 %111 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = icmp sgt i32 %117, %0
  br i1 %118, label %119, label %120

119:                                              ; preds = %115, %2, %110, %67, %69, %76
  br label %120

120:                                              ; preds = %115, %63, %58, %119
  %121 = phi i1 [ true, %119 ], [ false, %63 ], [ false, %115 ], [ false, %58 ]
  ret i1 %121
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request13RequestParamsC2EPN7content15RenderFrameHostEb(%"struct.extensions::declarative_net_request::RequestParams"*, %"class.content::RenderFrameHost"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.url::Origin", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.base::RepeatingCallback", align 8
  %8 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 0
  %9 = bitcast %"class.content::RenderFrameHost"* %1 to %class.GURL* (%"class.content::RenderFrameHost"*)***
  %10 = load %class.GURL* (%"class.content::RenderFrameHost"*)**, %class.GURL* (%"class.content::RenderFrameHost"*)*** %9, align 8
  %11 = getelementptr inbounds %class.GURL* (%"class.content::RenderFrameHost"*)*, %class.GURL* (%"class.content::RenderFrameHost"*)** %10, i64 35
  %12 = load %class.GURL* (%"class.content::RenderFrameHost"*)*, %class.GURL* (%"class.content::RenderFrameHost"*)** %11, align 8
  %13 = tail call dereferenceable(120) %class.GURL* %12(%"class.content::RenderFrameHost"* %1) #11
  store %class.GURL* %13, %class.GURL** %8, align 8
  %14 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 1
  tail call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %14) #11
  %15 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 2
  store i32 1, i32* %15, align 8
  %16 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 3
  store i8 0, i8* %16, align 4
  %17 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 4
  %18 = select i1 %2, i32 32, i32 2
  store i32 %18, i32* %17, align 8
  %19 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 5
  %20 = bitcast %"class.content::RenderFrameHost"* %1 to %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)***
  %21 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)**, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %21, i64 20
  %23 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %22, align 8
  %24 = tail call %"class.content::RenderFrameHost"* %23(%"class.content::RenderFrameHost"* %1) #11
  %25 = icmp eq %"class.content::RenderFrameHost"* %24, null
  br i1 %25, label %34, label %26

26:                                               ; preds = %3
  %27 = bitcast %"class.content::RenderFrameHost"* %24 to i64 (%"class.content::RenderFrameHost"*)***
  %28 = load i64 (%"class.content::RenderFrameHost"*)**, i64 (%"class.content::RenderFrameHost"*)*** %27, align 8
  %29 = getelementptr inbounds i64 (%"class.content::RenderFrameHost"*)*, i64 (%"class.content::RenderFrameHost"*)** %28, i64 15
  %30 = load i64 (%"class.content::RenderFrameHost"*)*, i64 (%"class.content::RenderFrameHost"*)** %29, align 8
  %31 = tail call i64 %30(%"class.content::RenderFrameHost"* nonnull %24) #11
  %32 = and i64 %31, -4294967296
  %33 = and i64 %31, 4294967295
  br label %34

34:                                               ; preds = %3, %26
  %35 = phi i64 [ %32, %26 ], [ -8589934592, %3 ]
  %36 = phi i64 [ %33, %26 ], [ 0, %3 ]
  %37 = or i64 %36, %35
  %38 = bitcast %"struct.content::GlobalFrameRoutingId"* %19 to i64*
  store i64 %37, i64* %38, align 4
  %39 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 6
  %40 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast %"class.base::RepeatingCallback"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 33, i1 false)
  %42 = bitcast %union.anon.15* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 48, i1 false)
  %43 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)**, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*** %20, align 8
  %44 = getelementptr inbounds %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %43, i64 20
  %45 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %44, align 8
  %46 = tail call %"class.content::RenderFrameHost"* %45(%"class.content::RenderFrameHost"* %1) #11
  %47 = icmp eq %"class.content::RenderFrameHost"* %46, null
  br i1 %47, label %59, label %48

48:                                               ; preds = %34
  %49 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)**, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*** %20, align 8
  %50 = getelementptr inbounds %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %49, i64 20
  %51 = load %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderFrameHost"* (%"class.content::RenderFrameHost"*)** %50, align 8
  %52 = tail call %"class.content::RenderFrameHost"* %51(%"class.content::RenderFrameHost"* %1) #11
  %53 = bitcast %"class.content::RenderFrameHost"* %52 to %"class.url::Origin"* (%"class.content::RenderFrameHost"*)***
  %54 = load %"class.url::Origin"* (%"class.content::RenderFrameHost"*)**, %"class.url::Origin"* (%"class.content::RenderFrameHost"*)*** %53, align 8
  %55 = getelementptr inbounds %"class.url::Origin"* (%"class.content::RenderFrameHost"*)*, %"class.url::Origin"* (%"class.content::RenderFrameHost"*)** %54, i64 36
  %56 = load %"class.url::Origin"* (%"class.content::RenderFrameHost"*)*, %"class.url::Origin"* (%"class.content::RenderFrameHost"*)** %55, align 8
  %57 = tail call dereferenceable(80) %"class.url::Origin"* %56(%"class.content::RenderFrameHost"* %52) #11
  %58 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %14, %"class.url::Origin"* dereferenceable(80) %57) #11
  br label %62

59:                                               ; preds = %34
  %60 = bitcast %"class.url::Origin"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %60) #11
  call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* nonnull %4) #11
  %61 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %14, %"class.url::Origin"* nonnull dereferenceable(80) %4) #11
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %60) #11
  br label %62

62:                                               ; preds = %59, %48
  %63 = phi i32 [ 8192, %59 ], [ 128, %48 ]
  store i32 %63, i32* %15, align 8
  %64 = bitcast %"class.content::RenderFrameHost"* %1 to %"class.url::Origin"* (%"class.content::RenderFrameHost"*)***
  %65 = load %"class.url::Origin"* (%"class.content::RenderFrameHost"*)**, %"class.url::Origin"* (%"class.content::RenderFrameHost"*)*** %64, align 8
  %66 = getelementptr inbounds %"class.url::Origin"* (%"class.content::RenderFrameHost"*)*, %"class.url::Origin"* (%"class.content::RenderFrameHost"*)** %65, i64 36
  %67 = load %"class.url::Origin"* (%"class.content::RenderFrameHost"*)*, %"class.url::Origin"* (%"class.content::RenderFrameHost"*)** %66, align 8
  %68 = call dereferenceable(80) %"class.url::Origin"* %67(%"class.content::RenderFrameHost"* %1) #11
  %69 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %70 = load i8, i8* %69, align 8, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %62
  %73 = call zeroext i1 @_ZN3net27registry_controlled_domains16SameDomainOrHostERKN3url6OriginES4_NS0_21PrivateRegistryFilterE(%"class.url::Origin"* dereferenceable(80) %68, %"class.url::Origin"* dereferenceable(80) %14, i32 1) #11
  %74 = xor i1 %73, true
  %75 = zext i1 %74 to i8
  br label %76

76:                                               ; preds = %62, %72
  %77 = phi i8 [ %75, %72 ], [ 1, %62 ]
  store i8 %77, i8* %16, align 4
  %78 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %78) #11
  store i32 -1, i32* %5, align 4
  %79 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #11
  store i32 -1, i32* %6, align 4
  %80 = call %"class.extensions::ExtensionsBrowserClient"* @_ZN10extensions23ExtensionsBrowserClient3GetEv() #11
  %81 = call %"class.content::WebContents"* @_ZN7content11WebContents19FromRenderFrameHostEPNS_15RenderFrameHostE(%"class.content::RenderFrameHost"* %1) #11
  %82 = bitcast %"class.extensions::ExtensionsBrowserClient"* %80 to void (%"class.extensions::ExtensionsBrowserClient"*, %"class.content::WebContents"*, i32*, i32*)***
  %83 = load void (%"class.extensions::ExtensionsBrowserClient"*, %"class.content::WebContents"*, i32*, i32*)**, void (%"class.extensions::ExtensionsBrowserClient"*, %"class.content::WebContents"*, i32*, i32*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.extensions::ExtensionsBrowserClient"*, %"class.content::WebContents"*, i32*, i32*)*, void (%"class.extensions::ExtensionsBrowserClient"*, %"class.content::WebContents"*, i32*, i32*)** %83, i64 42
  %85 = load void (%"class.extensions::ExtensionsBrowserClient"*, %"class.content::WebContents"*, i32*, i32*)*, void (%"class.extensions::ExtensionsBrowserClient"*, %"class.content::WebContents"*, i32*, i32*)** %84, align 8
  call void %85(%"class.extensions::ExtensionsBrowserClient"* %80, %"class.content::WebContents"* %81, i32* nonnull %6, i32* nonnull %5) #11
  %86 = bitcast %"class.base::RepeatingCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #11
  %87 = call i8* @_Znwm(i64 48) #12, !noalias !24
  %88 = bitcast i8* %87 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %88, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.flatbuffers::Vector"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbiRKN11flatbuffers6VectorIhEEEJiEEEFbS7_EE3RunEPNS0_13BindStateBaseES7_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbiRKN11flatbuffers6VectorIhEEEJiEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !24
  %89 = getelementptr inbounds i8, i8* %87, i64 32
  %90 = bitcast i8* %89 to i1 (i32, %"class.flatbuffers::Vector"*)**
  store i1 (i32, %"class.flatbuffers::Vector"*)* @_ZN10extensions23declarative_net_request12_GLOBAL__N_125DoEmbedderConditionsMatchEiRKN11flatbuffers6VectorIhEE, i1 (i32, %"class.flatbuffers::Vector"*)** %90, align 8, !noalias !24
  %91 = getelementptr inbounds i8, i8* %87, i64 40
  %92 = bitcast i8* %91 to i32*
  %93 = load i32, i32* %6, align 4, !noalias !24
  store i32 %93, i32* %92, align 4, !noalias !24
  %94 = bitcast %"class.base::RepeatingCallback"* %7 to i8**
  store i8* %87, i8** %94, align 8, !alias.scope !24
  %95 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %39, i64 0, i32 0
  %96 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0
  %97 = call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %95, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %96) #11
  %98 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %98) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %78) #11
  ret void
}

declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #3

declare %"class.extensions::ExtensionsBrowserClient"* @_ZN10extensions23ExtensionsBrowserClient3GetEv() local_unnamed_addr #2

declare %"class.content::WebContents"* @_ZN7content11WebContents19FromRenderFrameHostEPNS_15RenderFrameHostE(%"class.content::RenderFrameHost"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request13RequestParamsC2Ev(%"struct.extensions::declarative_net_request::RequestParams"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 0
  store %class.GURL* null, %class.GURL** %2, align 8
  %3 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 1
  tail call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %3) #11
  %4 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 2
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 3
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 4
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 5, i32 0
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 5, i32 1
  store i32 -2, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.base::internal::BindStateBase"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 33, i1 false)
  %12 = bitcast %union.anon.15* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request13RequestParamsD2Ev(%"struct.extensions::declarative_net_request::RequestParams"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 9, i32 0
  %3 = getelementptr inbounds %"class.base::internal::flat_tree.17", %"class.base::internal::flat_tree.17"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.20"*, %"struct.std::__1::pair.20"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair.20"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.std::__1::pair.20"* %4 to i8*
  %8 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.20"*, %"struct.std::__1::pair.20"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair.20"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"struct.std::__1::pair.20"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.std::__1::pair.20", %"struct.std::__1::pair.20"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.std::__1::pair.20", %"struct.std::__1::pair.20"* %12, i64 -1, i32 1, i32 0, i32 0
  %15 = load %"struct.extensions::declarative_net_request::RegexRuleInfo"*, %"struct.extensions::declarative_net_request::RegexRuleInfo"** %14, align 8
  %16 = icmp eq %"struct.extensions::declarative_net_request::RegexRuleInfo"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = ptrtoint %"struct.extensions::declarative_net_request::RegexRuleInfo"* %15 to i64
  %19 = getelementptr inbounds %"struct.std::__1::pair.20", %"struct.std::__1::pair.20"* %12, i64 -1, i32 1, i32 0, i32 1
  %20 = bitcast %"struct.extensions::declarative_net_request::RegexRuleInfo"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"struct.extensions::declarative_net_request::RegexRuleInfo"* %15 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"struct.std::__1::pair.20"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.base::internal::flat_tree.17"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"struct.std::__1::pair.20"* %4, %"struct.std::__1::pair.20"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %43, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  tail call void @_ZdlPv(i8* %41) #12
  br label %42

42:                                               ; preds = %39, %33
  store i8 0, i8* %30, align 8
  br label %43

43:                                               ; preds = %29, %42
  %44 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %45 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %44, align 8
  %46 = icmp eq %"struct.std::__1::pair"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = ptrtoint %"struct.std::__1::pair"* %45 to i64
  %49 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %"struct.std::__1::pair"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = bitcast %"struct.std::__1::pair"* %45 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %43, %47
  %53 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 6, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %53) #11
  %54 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestParams", %"struct.extensions::declarative_net_request::RequestParams"* %0, i64 0, i32 1
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %54) #11
  ret void
}

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

declare void @_ZN4base12ToUpperASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8GetFirstENS3_4lessIvEENS3_6vectorINS3_4pairIS6_N17url_pattern_index4flat13RequestMethodEEENS3_9allocatorISF_EEEEE15sort_and_uniqueENS3_11__wrap_iterIPSF_EESM_(%"class.base::internal::flat_tree.205"*, %"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare", align 1
  %5 = ptrtoint %"struct.std::__1::pair.208"* %2 to i64
  %6 = getelementptr inbounds %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare", %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  %7 = ptrtoint %"struct.std::__1::pair.208"* %1 to i64
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp sgt i64 %8, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %3
  %12 = icmp slt i64 %9, 384307168202282325
  %13 = select i1 %12, i64 %9, i64 384307168202282325
  br label %14

14:                                               ; preds = %19, %11
  %15 = phi i64 [ %20, %19 ], [ %13, %11 ]
  %16 = mul i64 %15, 24
  %17 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %16, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #11
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = lshr i64 %15, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %14

22:                                               ; preds = %19, %3
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeEl(%"struct.std::__1::pair.208"* %1, %"struct.std::__1::pair.208"* %2, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"struct.std::__1::pair.208"* null, i64 0) #11
  br label %25

23:                                               ; preds = %14
  %24 = bitcast i8* %17 to %"struct.std::__1::pair.208"*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeEl(%"struct.std::__1::pair.208"* %1, %"struct.std::__1::pair.208"* %2, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"struct.std::__1::pair.208"* nonnull %24, i64 %15) #11
  call void @_ZdlPv(i8* nonnull %17) #12
  br label %25

25:                                               ; preds = %22, %23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  %26 = call %"struct.std::__1::pair.208"* @_ZNSt3__16uniqueINS_11__wrap_iterIPNS_4pairIN4base16BasicStringPieceIcNS_11char_traitsIcEEEEN17url_pattern_index4flat13RequestMethodEEEEENS3_8internal9NotFnImplINSE_9flat_treeIS7_NSE_8GetFirstENS_4lessIvEENS_6vectorISB_NS_9allocatorISB_EEEEE13value_compareEEEEET_SR_SR_T0_(%"struct.std::__1::pair.208"* %1, %"struct.std::__1::pair.208"* %2)
  %27 = icmp eq %"struct.std::__1::pair.208"* %26, %2
  br i1 %27, label %45, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.base::internal::flat_tree.205", %"class.base::internal::flat_tree.205"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load %"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"** %29, align 8
  %31 = icmp eq %"struct.std::__1::pair.208"* %30, %2
  br i1 %31, label %43, label %32

32:                                               ; preds = %28, %32
  %33 = phi %"struct.std::__1::pair.208"* [ %41, %32 ], [ %26, %28 ]
  %34 = phi %"struct.std::__1::pair.208"* [ %40, %32 ], [ %2, %28 ]
  %35 = bitcast %"struct.std::__1::pair.208"* %33 to i8*
  %36 = bitcast %"struct.std::__1::pair.208"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false) #11
  %37 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %34, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %33, i64 0, i32 1
  store i32 %38, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %34, i64 1
  %41 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %33, i64 1
  %42 = icmp eq %"struct.std::__1::pair.208"* %40, %30
  br i1 %42, label %43, label %32

43:                                               ; preds = %32, %28
  %44 = phi %"struct.std::__1::pair.208"* [ %26, %28 ], [ %41, %32 ]
  store %"struct.std::__1::pair.208"* %44, %"struct.std::__1::pair.208"** %29, align 8
  br label %45

45:                                               ; preds = %25, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.208"* @_ZNSt3__16uniqueINS_11__wrap_iterIPNS_4pairIN4base16BasicStringPieceIcNS_11char_traitsIcEEEEN17url_pattern_index4flat13RequestMethodEEEEENS3_8internal9NotFnImplINSE_9flat_treeIS7_NSE_8GetFirstENS_4lessIvEENS_6vectorISB_NS_9allocatorISB_EEEEE13value_compareEEEEET_SR_SR_T0_(%"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"struct.std::__1::pair.208"* %0, %1
  br i1 %3, label %33, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %0, i64 1
  %6 = icmp eq %"struct.std::__1::pair.208"* %5, %1
  br i1 %6, label %31, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %0, i64 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %10

10:                                               ; preds = %28, %7
  %11 = phi i8* [ %17, %28 ], [ %9, %7 ]
  %12 = phi %"struct.std::__1::pair.208"* [ %29, %28 ], [ %5, %7 ]
  %13 = phi %"struct.std::__1::pair.208"* [ %12, %28 ], [ %0, %7 ]
  %14 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %13, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %12, i64 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %13, i64 1, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ugt i64 %15, %19
  %21 = select i1 %20, i64 %19, i64 %15
  %22 = tail call i32 @memcmp(i8* %11, i8* %17, i64 %21) #11
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %10
  %25 = icmp ult i64 %15, %19
  br i1 %25, label %28, label %33

26:                                               ; preds = %10
  %27 = icmp sgt i32 %22, -1
  br i1 %27, label %33, label %28

28:                                               ; preds = %26, %24
  %29 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %12, i64 1
  %30 = icmp eq %"struct.std::__1::pair.208"* %29, %1
  br i1 %30, label %31, label %10

31:                                               ; preds = %28, %4
  %32 = ptrtoint %"struct.std::__1::pair.208"* %1 to i64
  br label %82

33:                                               ; preds = %24, %26, %2
  %34 = phi %"struct.std::__1::pair.208"* [ %0, %2 ], [ %13, %26 ], [ %13, %24 ]
  %35 = ptrtoint %"struct.std::__1::pair.208"* %34 to i64
  %36 = icmp eq %"struct.std::__1::pair.208"* %34, %1
  br i1 %36, label %82, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %34, i64 2
  %39 = icmp eq %"struct.std::__1::pair.208"* %38, %1
  br i1 %39, label %78, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %34, i64 1
  br label %42

42:                                               ; preds = %40, %71
  %43 = phi %"struct.std::__1::pair.208"* [ %75, %71 ], [ %34, %40 ]
  %44 = phi %"struct.std::__1::pair.208"* [ %73, %71 ], [ %38, %40 ]
  %45 = phi %"struct.std::__1::pair.208"* [ %44, %71 ], [ %41, %40 ]
  %46 = phi i64 [ %72, %71 ], [ %35, %40 ]
  %47 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %43, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %43, i64 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %44, i64 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %45, i64 1, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp ugt i64 %50, %54
  %56 = select i1 %55, i64 %54, i64 %50
  %57 = tail call i32 @memcmp(i8* %48, i8* %52, i64 %56) #11
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %42
  %60 = icmp ult i64 %50, %54
  br i1 %60, label %63, label %71

61:                                               ; preds = %42
  %62 = icmp sgt i32 %57, -1
  br i1 %62, label %71, label %63

63:                                               ; preds = %59, %61
  %64 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %43, i64 1
  %65 = ptrtoint %"struct.std::__1::pair.208"* %64 to i64
  %66 = bitcast %"struct.std::__1::pair.208"* %64 to i8*
  %67 = bitcast %"struct.std::__1::pair.208"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 16, i1 false) #11
  %68 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %45, i64 1, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %43, i64 1, i32 1
  store i32 %69, i32* %70, align 8
  br label %71

71:                                               ; preds = %59, %63, %61
  %72 = phi i64 [ %46, %61 ], [ %65, %63 ], [ %46, %59 ]
  %73 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %44, i64 1
  %74 = icmp eq %"struct.std::__1::pair.208"* %73, %1
  %75 = inttoptr i64 %72 to %"struct.std::__1::pair.208"*
  br i1 %74, label %76, label %42

76:                                               ; preds = %71
  %77 = inttoptr i64 %72 to %"struct.std::__1::pair.208"*
  br label %78

78:                                               ; preds = %76, %37
  %79 = phi %"struct.std::__1::pair.208"* [ %34, %37 ], [ %77, %76 ]
  %80 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %79, i64 1
  %81 = ptrtoint %"struct.std::__1::pair.208"* %80 to i64
  br label %82

82:                                               ; preds = %33, %31, %78
  %83 = phi i64 [ %81, %78 ], [ %35, %33 ], [ %32, %31 ]
  %84 = inttoptr i64 %83 to %"struct.std::__1::pair.208"*
  ret %"struct.std::__1::pair.208"* %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeEl(%"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"*, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare"* dereferenceable(1), i64, %"struct.std::__1::pair.208"*, i64) local_unnamed_addr #0 comdat {
  switch i64 %3, label %34 [
    i64 0, label %157
    i64 1, label %157
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %1, i64 -1
  %9 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %8, i64 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %1, i64 -1, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %0, i64 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %12, %16
  %18 = select i1 %17, i64 %16, i64 %12
  %19 = tail call i32 @memcmp(i8* %10, i8* %14, i64 %18) #11
  %20 = icmp eq i32 %19, 0
  %21 = ptrtoint i8* %14 to i64
  br i1 %20, label %22, label %24

22:                                               ; preds = %7
  %23 = icmp ult i64 %12, %16
  br i1 %23, label %26, label %157

24:                                               ; preds = %7
  %25 = icmp slt i32 %19, 0
  br i1 %25, label %26, label %157

26:                                               ; preds = %22, %24
  %27 = bitcast %"struct.std::__1::pair.208"* %0 to i8*
  %28 = bitcast %"struct.std::__1::pair.208"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 16, i1 false) #11
  %29 = bitcast %"struct.std::__1::pair.208"* %8 to i64*
  store i64 %21, i64* %29, align 8
  store i64 %16, i64* %11, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %0, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %1, i64 -1, i32 1
  %32 = load i32, i32* %30, align 4
  %33 = load i32, i32* %31, align 4
  store i32 %33, i32* %30, align 4
  store i32 %32, i32* %31, align 4
  br label %157

34:                                               ; preds = %6
  %35 = icmp slt i64 %3, 1
  br i1 %35, label %36, label %80

36:                                               ; preds = %34
  %37 = icmp eq %"struct.std::__1::pair.208"* %0, %1
  br i1 %37, label %157, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %0, i64 1
  %40 = icmp eq %"struct.std::__1::pair.208"* %39, %1
  br i1 %40, label %157, label %41

41:                                               ; preds = %38, %66
  %42 = phi %"struct.std::__1::pair.208"* [ %71, %66 ], [ %39, %38 ]
  %43 = phi %"struct.std::__1::pair.208"* [ %42, %66 ], [ %0, %38 ]
  %44 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %42, i64 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %43, i64 1, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %43, i64 1, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq %"struct.std::__1::pair.208"* %42, %0
  br i1 %50, label %66, label %51

51:                                               ; preds = %41, %73
  %52 = phi %"struct.std::__1::pair.208"* [ %53, %73 ], [ %42, %41 ]
  %53 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %52, i64 -1
  %54 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %53, i64 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %52, i64 -1, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = icmp ugt i64 %47, %57
  %59 = select i1 %58, i64 %57, i64 %47
  %60 = tail call i32 @memcmp(i8* %45, i8* %55, i64 %59) #11
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %51
  %63 = icmp ult i64 %47, %57
  br i1 %63, label %73, label %66

64:                                               ; preds = %51
  %65 = icmp slt i32 %60, 0
  br i1 %65, label %73, label %66

66:                                               ; preds = %73, %64, %62, %41
  %67 = phi %"struct.std::__1::pair.208"* [ %0, %41 ], [ %52, %64 ], [ %52, %62 ], [ %0, %73 ]
  %68 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %67, i64 0, i32 0, i32 0
  store i8* %45, i8** %68, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %67, i64 0, i32 0, i32 1
  store i64 %47, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %67, i64 0, i32 1
  store i32 %49, i32* %70, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %42, i64 1
  %72 = icmp eq %"struct.std::__1::pair.208"* %71, %1
  br i1 %72, label %157, label %41

73:                                               ; preds = %64, %62
  %74 = bitcast %"struct.std::__1::pair.208"* %52 to i8*
  %75 = bitcast %"struct.std::__1::pair.208"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 16, i1 false) #11
  %76 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %52, i64 -1, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %52, i64 0, i32 1
  store i32 %77, i32* %78, align 8
  %79 = icmp eq %"struct.std::__1::pair.208"* %53, %0
  br i1 %79, label %66, label %51

80:                                               ; preds = %34
  %81 = lshr i64 %3, 1
  %82 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %0, i64 %81
  %83 = icmp sgt i64 %3, %5
  br i1 %83, label %155, label %84

84:                                               ; preds = %80
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeE(%"struct.std::__1::pair.208"* %0, %"struct.std::__1::pair.208"* %82, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare"* dereferenceable(1) %2, i64 %81, %"struct.std::__1::pair.208"* %4)
  %85 = sub nsw i64 %3, %81
  %86 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %4, i64 %81
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeE(%"struct.std::__1::pair.208"* %82, %"struct.std::__1::pair.208"* %1, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare"* dereferenceable(1) %2, i64 %85, %"struct.std::__1::pair.208"* %86)
  %87 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %4, i64 %3
  br label %90

88:                                               ; preds = %139
  %89 = icmp eq %"struct.std::__1::pair.208"* %140, %87
  br i1 %89, label %157, label %144

90:                                               ; preds = %84, %139
  %91 = phi %"struct.std::__1::pair.208"* [ %141, %139 ], [ %4, %84 ]
  %92 = phi %"struct.std::__1::pair.208"* [ %140, %139 ], [ %86, %84 ]
  %93 = phi %"struct.std::__1::pair.208"* [ %142, %139 ], [ %0, %84 ]
  %94 = icmp eq %"struct.std::__1::pair.208"* %92, %87
  br i1 %94, label %95, label %108

95:                                               ; preds = %90
  %96 = icmp eq %"struct.std::__1::pair.208"* %91, %86
  br i1 %96, label %157, label %97

97:                                               ; preds = %95, %97
  %98 = phi %"struct.std::__1::pair.208"* [ %105, %97 ], [ %91, %95 ]
  %99 = phi %"struct.std::__1::pair.208"* [ %106, %97 ], [ %93, %95 ]
  %100 = bitcast %"struct.std::__1::pair.208"* %99 to i8*
  %101 = bitcast %"struct.std::__1::pair.208"* %98 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 16, i1 false) #11
  %102 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %98, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %99, i64 0, i32 1
  store i32 %103, i32* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %98, i64 1
  %106 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %99, i64 1
  %107 = icmp eq %"struct.std::__1::pair.208"* %105, %86
  br i1 %107, label %157, label %97

108:                                              ; preds = %90
  %109 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %92, i64 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %92, i64 0, i32 0, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %91, i64 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %91, i64 0, i32 0, i32 1
  %116 = load i64, i64* %115, align 8
  %117 = icmp ugt i64 %112, %116
  %118 = select i1 %117, i64 %116, i64 %112
  %119 = tail call i32 @memcmp(i8* %110, i8* %114, i64 %118) #11
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %108
  %122 = icmp ult i64 %112, %116
  br i1 %122, label %125, label %132

123:                                              ; preds = %108
  %124 = icmp slt i32 %119, 0
  br i1 %124, label %125, label %132

125:                                              ; preds = %123, %121
  %126 = bitcast %"struct.std::__1::pair.208"* %93 to i8*
  %127 = bitcast %"struct.std::__1::pair.208"* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 16, i1 false) #11
  %128 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %92, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %93, i64 0, i32 1
  store i32 %129, i32* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %92, i64 1
  br label %139

132:                                              ; preds = %123, %121
  %133 = bitcast %"struct.std::__1::pair.208"* %93 to i8*
  %134 = bitcast %"struct.std::__1::pair.208"* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %134, i64 16, i1 false) #11
  %135 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %91, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %93, i64 0, i32 1
  store i32 %136, i32* %137, align 8
  %138 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %91, i64 1
  br label %139

139:                                              ; preds = %132, %125
  %140 = phi %"struct.std::__1::pair.208"* [ %131, %125 ], [ %92, %132 ]
  %141 = phi %"struct.std::__1::pair.208"* [ %91, %125 ], [ %138, %132 ]
  %142 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %93, i64 1
  %143 = icmp eq %"struct.std::__1::pair.208"* %141, %86
  br i1 %143, label %88, label %90

144:                                              ; preds = %88, %144
  %145 = phi %"struct.std::__1::pair.208"* [ %152, %144 ], [ %140, %88 ]
  %146 = phi %"struct.std::__1::pair.208"* [ %153, %144 ], [ %142, %88 ]
  %147 = bitcast %"struct.std::__1::pair.208"* %146 to i8*
  %148 = bitcast %"struct.std::__1::pair.208"* %145 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %148, i64 16, i1 false) #11
  %149 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %145, i64 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %146, i64 0, i32 1
  store i32 %150, i32* %151, align 8
  %152 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %145, i64 1
  %153 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %146, i64 1
  %154 = icmp eq %"struct.std::__1::pair.208"* %152, %87
  br i1 %154, label %157, label %144

155:                                              ; preds = %80
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeEl(%"struct.std::__1::pair.208"* %0, %"struct.std::__1::pair.208"* %82, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare"* dereferenceable(1) %2, i64 %81, %"struct.std::__1::pair.208"* %4, i64 %5)
  %156 = sub nsw i64 %3, %81
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeEl(%"struct.std::__1::pair.208"* %82, %"struct.std::__1::pair.208"* %1, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare"* dereferenceable(1) %2, i64 %156, %"struct.std::__1::pair.208"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_SQ_T_NS_15iterator_traitsISQ_E15difference_typeESU_PNST_10value_typeEl(%"struct.std::__1::pair.208"* %0, %"struct.std::__1::pair.208"* %82, %"struct.std::__1::pair.208"* %1, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare"* dereferenceable(1) %2, i64 %81, i64 %156, %"struct.std::__1::pair.208"* %4, i64 %5)
  ret void

157:                                              ; preds = %144, %97, %66, %22, %95, %88, %38, %36, %24, %26, %6, %6
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeE(%"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"*, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare"* dereferenceable(1), i64, %"struct.std::__1::pair.208"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %41 [
    i64 0, label %109
    i64 1, label %6
    i64 2, label %9
  ]

6:                                                ; preds = %5
  %7 = bitcast %"struct.std::__1::pair.208"* %4 to i8*
  %8 = bitcast %"struct.std::__1::pair.208"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  br label %109

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %1, i64 -1
  %11 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %10, i64 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %1, i64 -1, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %0, i64 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %0, i64 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp ugt i64 %14, %18
  %20 = select i1 %19, i64 %18, i64 %14
  %21 = tail call i32 @memcmp(i8* %12, i8* %16, i64 %20) #11
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %9
  %24 = icmp ult i64 %14, %18
  %25 = bitcast %"struct.std::__1::pair.208"* %4 to i8*
  br i1 %24, label %29, label %35

26:                                               ; preds = %9
  %27 = icmp slt i32 %21, 0
  %28 = bitcast %"struct.std::__1::pair.208"* %4 to i8*
  br i1 %27, label %29, label %35

29:                                               ; preds = %23, %26
  %30 = phi i8* [ %28, %26 ], [ %25, %23 ]
  %31 = bitcast %"struct.std::__1::pair.208"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false)
  %32 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %4, i64 1
  %33 = bitcast %"struct.std::__1::pair.208"* %32 to i8*
  %34 = bitcast %"struct.std::__1::pair.208"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false)
  br label %109

35:                                               ; preds = %23, %26
  %36 = phi i8* [ %28, %26 ], [ %25, %23 ]
  %37 = bitcast %"struct.std::__1::pair.208"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false)
  %38 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %4, i64 1
  %39 = bitcast %"struct.std::__1::pair.208"* %38 to i8*
  %40 = bitcast %"struct.std::__1::pair.208"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false)
  br label %109

41:                                               ; preds = %5
  %42 = icmp slt i64 %3, 9
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  tail call void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_PNS_15iterator_traitsISQ_E10value_typeET_(%"struct.std::__1::pair.208"* %0, %"struct.std::__1::pair.208"* %1, %"struct.std::__1::pair.208"* %4, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare"* dereferenceable(1) %2)
  br label %109

44:                                               ; preds = %41
  %45 = lshr i64 %3, 1
  %46 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %0, i64 %45
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeEl(%"struct.std::__1::pair.208"* %0, %"struct.std::__1::pair.208"* %46, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare"* dereferenceable(1) %2, i64 %45, %"struct.std::__1::pair.208"* %4, i64 %45)
  %47 = sub nsw i64 %3, %45
  %48 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %4, i64 %45
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_T_NS_15iterator_traitsISQ_E15difference_typeEPNST_10value_typeEl(%"struct.std::__1::pair.208"* %46, %"struct.std::__1::pair.208"* %1, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare"* dereferenceable(1) %2, i64 %47, %"struct.std::__1::pair.208"* %48, i64 %47)
  %49 = icmp eq i64 %45, 0
  br i1 %49, label %50, label %62

50:                                               ; preds = %104, %44
  %51 = phi %"struct.std::__1::pair.208"* [ %46, %44 ], [ %105, %104 ]
  %52 = phi %"struct.std::__1::pair.208"* [ %4, %44 ], [ %107, %104 ]
  %53 = icmp eq %"struct.std::__1::pair.208"* %51, %1
  br i1 %53, label %109, label %54

54:                                               ; preds = %50, %54
  %55 = phi %"struct.std::__1::pair.208"* [ %60, %54 ], [ %52, %50 ]
  %56 = phi %"struct.std::__1::pair.208"* [ %59, %54 ], [ %51, %50 ]
  %57 = bitcast %"struct.std::__1::pair.208"* %55 to i8*
  %58 = bitcast %"struct.std::__1::pair.208"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 24, i1 false) #11
  %59 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %56, i64 1
  %60 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %55, i64 1
  %61 = icmp eq %"struct.std::__1::pair.208"* %59, %1
  br i1 %61, label %109, label %54

62:                                               ; preds = %44, %104
  %63 = phi %"struct.std::__1::pair.208"* [ %107, %104 ], [ %4, %44 ]
  %64 = phi %"struct.std::__1::pair.208"* [ %106, %104 ], [ %0, %44 ]
  %65 = phi %"struct.std::__1::pair.208"* [ %105, %104 ], [ %46, %44 ]
  %66 = icmp eq %"struct.std::__1::pair.208"* %65, %1
  br i1 %66, label %67, label %77

67:                                               ; preds = %62
  %68 = icmp eq %"struct.std::__1::pair.208"* %64, %46
  br i1 %68, label %109, label %69

69:                                               ; preds = %67, %69
  %70 = phi %"struct.std::__1::pair.208"* [ %75, %69 ], [ %63, %67 ]
  %71 = phi %"struct.std::__1::pair.208"* [ %74, %69 ], [ %64, %67 ]
  %72 = bitcast %"struct.std::__1::pair.208"* %70 to i8*
  %73 = bitcast %"struct.std::__1::pair.208"* %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 24, i1 false) #11
  %74 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %71, i64 1
  %75 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %70, i64 1
  %76 = icmp eq %"struct.std::__1::pair.208"* %74, %46
  br i1 %76, label %109, label %69

77:                                               ; preds = %62
  %78 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %65, i64 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %65, i64 0, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %64, i64 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %64, i64 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = icmp ugt i64 %81, %85
  %87 = select i1 %86, i64 %85, i64 %81
  %88 = tail call i32 @memcmp(i8* %79, i8* %83, i64 %87) #11
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %77
  %91 = icmp ult i64 %81, %85
  %92 = bitcast %"struct.std::__1::pair.208"* %63 to i8*
  br i1 %91, label %96, label %100

93:                                               ; preds = %77
  %94 = icmp slt i32 %88, 0
  %95 = bitcast %"struct.std::__1::pair.208"* %63 to i8*
  br i1 %94, label %96, label %100

96:                                               ; preds = %93, %90
  %97 = phi i8* [ %95, %93 ], [ %92, %90 ]
  %98 = bitcast %"struct.std::__1::pair.208"* %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 24, i1 false) #11
  %99 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %65, i64 1
  br label %104

100:                                              ; preds = %93, %90
  %101 = phi i8* [ %95, %93 ], [ %92, %90 ]
  %102 = bitcast %"struct.std::__1::pair.208"* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 24, i1 false) #11
  %103 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %64, i64 1
  br label %104

104:                                              ; preds = %100, %96
  %105 = phi %"struct.std::__1::pair.208"* [ %99, %96 ], [ %65, %100 ]
  %106 = phi %"struct.std::__1::pair.208"* [ %64, %96 ], [ %103, %100 ]
  %107 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %63, i64 1
  %108 = icmp eq %"struct.std::__1::pair.208"* %106, %46
  br i1 %108, label %50, label %62

109:                                              ; preds = %69, %54, %67, %50, %29, %35, %5, %43, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_SQ_T_NS_15iterator_traitsISQ_E15difference_typeESU_PNST_10value_typeEl(%"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"*, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare"* dereferenceable(1), i64, i64, %"struct.std::__1::pair.208"*, i64) local_unnamed_addr #0 comdat {
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %257, label %10

10:                                               ; preds = %8
  %11 = ptrtoint %"struct.std::__1::pair.208"* %1 to i64
  %12 = ptrtoint %"struct.std::__1::pair.208"* %0 to i64
  br label %13

13:                                               ; preds = %10, %250
  %14 = phi %"struct.std::__1::pair.208"* [ %255, %250 ], [ %2, %10 ]
  %15 = phi i64 [ %254, %250 ], [ %4, %10 ]
  %16 = phi i64 [ %253, %250 ], [ %5, %10 ]
  %17 = phi i64 [ %252, %250 ], [ %11, %10 ]
  %18 = phi i64 [ %251, %250 ], [ %12, %10 ]
  %19 = icmp sgt i64 %15, %7
  %20 = icmp sgt i64 %16, %7
  %21 = and i1 %20, %19
  br i1 %21, label %22, label %30

22:                                               ; preds = %13
  %23 = icmp eq i64 %15, 0
  br i1 %23, label %257, label %24

24:                                               ; preds = %22
  %25 = inttoptr i64 %17 to %"struct.std::__1::pair.208"*
  %26 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %25, i64 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %25, i64 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  br label %33

30:                                               ; preds = %13
  %31 = inttoptr i64 %18 to %"struct.std::__1::pair.208"*
  %32 = inttoptr i64 %17 to %"struct.std::__1::pair.208"*
  tail call void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_SQ_T_NS_15iterator_traitsISQ_E15difference_typeESU_PNST_10value_typeE(%"struct.std::__1::pair.208"* %31, %"struct.std::__1::pair.208"* %32, %"struct.std::__1::pair.208"* %14, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare"* dereferenceable(1) %3, i64 %15, i64 %16, %"struct.std::__1::pair.208"* %6)
  br label %257

33:                                               ; preds = %24, %49
  %34 = phi i64 [ %15, %24 ], [ %52, %49 ]
  %35 = phi i64 [ %18, %24 ], [ %51, %49 ]
  %36 = inttoptr i64 %35 to %"struct.std::__1::pair.208"*
  %37 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %36, i64 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %36, i64 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp ugt i64 %29, %40
  %42 = select i1 %41, i64 %40, i64 %29
  %43 = tail call i32 @memcmp(i8* %27, i8* %38, i64 %42) #11
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %33
  %46 = icmp ult i64 %29, %40
  br i1 %46, label %54, label %49

47:                                               ; preds = %33
  %48 = icmp slt i32 %43, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %45, %47
  %50 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %36, i64 1
  %51 = ptrtoint %"struct.std::__1::pair.208"* %50 to i64
  %52 = add nsw i64 %34, -1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %257, label %33

54:                                               ; preds = %45, %47
  %55 = inttoptr i64 %35 to %"struct.std::__1::pair.208"*
  %56 = icmp slt i64 %34, %16
  br i1 %56, label %57, label %97

57:                                               ; preds = %54
  %58 = sdiv i64 %16, 2
  %59 = sub i64 %17, %35
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %92, label %61

61:                                               ; preds = %57
  %62 = sdiv exact i64 %59, 24
  %63 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %25, i64 %58, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %25, i64 %58, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  br label %67

67:                                               ; preds = %88, %61
  %68 = phi %"struct.std::__1::pair.208"* [ %55, %61 ], [ %90, %88 ]
  %69 = phi i64 [ %62, %61 ], [ %89, %88 ]
  %70 = lshr i64 %69, 1
  %71 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %68, i64 %70
  %72 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %71, i64 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %68, i64 %70, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = icmp ugt i64 %66, %75
  %77 = select i1 %76, i64 %75, i64 %66
  %78 = tail call i32 @memcmp(i8* %64, i8* %73, i64 %77) #11
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %67
  %81 = icmp ult i64 %66, %75
  br i1 %81, label %88, label %84

82:                                               ; preds = %67
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %88, label %84

84:                                               ; preds = %82, %80
  %85 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %71, i64 1
  %86 = xor i64 %70, -1
  %87 = add i64 %69, %86
  br label %88

88:                                               ; preds = %84, %82, %80
  %89 = phi i64 [ %87, %84 ], [ %70, %82 ], [ %70, %80 ]
  %90 = phi %"struct.std::__1::pair.208"* [ %85, %84 ], [ %68, %82 ], [ %68, %80 ]
  %91 = icmp eq i64 %89, 0
  br i1 %91, label %92, label %67

92:                                               ; preds = %88, %57
  %93 = phi %"struct.std::__1::pair.208"* [ %55, %57 ], [ %90, %88 ]
  %94 = ptrtoint %"struct.std::__1::pair.208"* %93 to i64
  %95 = sub i64 %94, %35
  %96 = sdiv exact i64 %95, 24
  br label %156

97:                                               ; preds = %54
  %98 = icmp eq i64 %34, 1
  br i1 %98, label %99, label %111

99:                                               ; preds = %97
  %100 = inttoptr i64 %17 to %"struct.std::__1::pair.208"*
  %101 = inttoptr i64 %35 to %"struct.std::__1::pair.208"*
  %102 = inttoptr i64 %35 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %35 to i8*
  %105 = inttoptr i64 %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 16, i1 false) #11
  %106 = inttoptr i64 %17 to i64*
  store i64 %103, i64* %106, align 8
  store i64 %40, i64* %28, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %101, i64 0, i32 1
  %108 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %100, i64 0, i32 1
  %109 = load i32, i32* %107, align 4
  %110 = load i32, i32* %108, align 4
  store i32 %110, i32* %107, align 4
  store i32 %109, i32* %108, align 4
  br label %257

111:                                              ; preds = %97
  %112 = sdiv i64 %34, 2
  %113 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %55, i64 %112
  %114 = ptrtoint %"struct.std::__1::pair.208"* %113 to i64
  %115 = ptrtoint %"struct.std::__1::pair.208"* %14 to i64
  %116 = sub i64 %115, %17
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %150, label %118

118:                                              ; preds = %111
  %119 = sdiv exact i64 %116, 24
  %120 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %113, i64 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %55, i64 %112, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  br label %124

124:                                              ; preds = %146, %118
  %125 = phi i64 [ 0, %118 ], [ %148, %146 ]
  %126 = phi i64 [ %119, %118 ], [ %147, %146 ]
  %127 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %25, i64 %125
  %128 = lshr i64 %126, 1
  %129 = add nsw i64 %128, %125
  %130 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %25, i64 %129, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %127, i64 %128, i32 0, i32 1
  %133 = load i64, i64* %132, align 8
  %134 = icmp ugt i64 %133, %123
  %135 = select i1 %134, i64 %123, i64 %133
  %136 = tail call i32 @memcmp(i8* %131, i8* %121, i64 %135) #11
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %124
  %139 = icmp ult i64 %133, %123
  br i1 %139, label %142, label %146

140:                                              ; preds = %124
  %141 = icmp slt i32 %136, 0
  br i1 %141, label %142, label %146

142:                                              ; preds = %140, %138
  %143 = add nsw i64 %129, 1
  %144 = xor i64 %128, -1
  %145 = add i64 %126, %144
  br label %146

146:                                              ; preds = %142, %140, %138
  %147 = phi i64 [ %145, %142 ], [ %128, %140 ], [ %128, %138 ]
  %148 = phi i64 [ %143, %142 ], [ %125, %140 ], [ %125, %138 ]
  %149 = icmp eq i64 %147, 0
  br i1 %149, label %150, label %124

150:                                              ; preds = %146, %111
  %151 = phi i64 [ 0, %111 ], [ %148, %146 ]
  %152 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %25, i64 %151
  %153 = ptrtoint %"struct.std::__1::pair.208"* %152 to i64
  %154 = sub i64 %153, %17
  %155 = sdiv exact i64 %154, 24
  br label %156

156:                                              ; preds = %150, %92
  %157 = phi i64 [ %94, %92 ], [ %114, %150 ]
  %158 = phi i64 [ %58, %92 ], [ %151, %150 ]
  %159 = phi i64 [ %58, %92 ], [ %155, %150 ]
  %160 = phi i64 [ %96, %92 ], [ %112, %150 ]
  %161 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %25, i64 %158
  %162 = ptrtoint %"struct.std::__1::pair.208"* %161 to i64
  %163 = sub nsw i64 %34, %160
  %164 = sub nsw i64 %16, %159
  %165 = inttoptr i64 %157 to %"struct.std::__1::pair.208"*
  %166 = icmp eq %"struct.std::__1::pair.208"* %165, %25
  br i1 %166, label %242, label %167

167:                                              ; preds = %156
  %168 = icmp eq i64 %158, 0
  br i1 %168, label %242, label %169

169:                                              ; preds = %167
  %170 = inttoptr i64 %157 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %165, i64 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  %174 = inttoptr i64 %157 to i8*
  %175 = inttoptr i64 %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %174, i8* align 8 %175, i64 16, i1 false) #11
  %176 = inttoptr i64 %17 to i64*
  store i64 %171, i64* %176, align 8
  store i64 %173, i64* %28, align 8
  %177 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %165, i64 0, i32 1
  %178 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %25, i64 0, i32 1
  %179 = load i32, i32* %177, align 4
  %180 = load i32, i32* %178, align 4
  store i32 %180, i32* %177, align 4
  store i32 %179, i32* %178, align 4
  %181 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %165, i64 1
  %182 = icmp eq i64 %158, 1
  br i1 %182, label %208, label %183

183:                                              ; preds = %169
  %184 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %25, i64 1
  br label %185

185:                                              ; preds = %183, %185
  %186 = phi %"struct.std::__1::pair.208"* [ %205, %185 ], [ %25, %183 ]
  %187 = phi %"struct.std::__1::pair.208"* [ %203, %185 ], [ %184, %183 ]
  %188 = phi %"struct.std::__1::pair.208"* [ %202, %185 ], [ %181, %183 ]
  %189 = phi i64 [ %192, %185 ], [ %17, %183 ]
  %190 = ptrtoint %"struct.std::__1::pair.208"* %187 to i64
  %191 = icmp eq %"struct.std::__1::pair.208"* %188, %186
  %192 = select i1 %191, i64 %190, i64 %189
  %193 = bitcast %"struct.std::__1::pair.208"* %188 to <2 x i64>*
  %194 = load <2 x i64>, <2 x i64>* %193, align 8
  %195 = bitcast %"struct.std::__1::pair.208"* %188 to i8*
  %196 = bitcast %"struct.std::__1::pair.208"* %187 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %195, i8* align 8 %196, i64 16, i1 false) #11
  %197 = bitcast %"struct.std::__1::pair.208"* %187 to <2 x i64>*
  store <2 x i64> %194, <2 x i64>* %197, align 8
  %198 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %188, i64 0, i32 1
  %199 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %187, i64 0, i32 1
  %200 = load i32, i32* %198, align 4
  %201 = load i32, i32* %199, align 4
  store i32 %201, i32* %198, align 4
  store i32 %200, i32* %199, align 4
  %202 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %188, i64 1
  %203 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %187, i64 1
  %204 = icmp eq %"struct.std::__1::pair.208"* %203, %161
  %205 = inttoptr i64 %192 to %"struct.std::__1::pair.208"*
  br i1 %204, label %206, label %185

206:                                              ; preds = %185
  %207 = inttoptr i64 %192 to %"struct.std::__1::pair.208"*
  br label %208

208:                                              ; preds = %206, %169
  %209 = phi i64 [ %17, %169 ], [ %192, %206 ]
  %210 = phi %"struct.std::__1::pair.208"* [ %181, %169 ], [ %202, %206 ]
  %211 = phi %"struct.std::__1::pair.208"* [ %25, %169 ], [ %207, %206 ]
  %212 = icmp eq %"struct.std::__1::pair.208"* %210, %211
  br i1 %212, label %242, label %213

213:                                              ; preds = %208, %239
  %214 = phi i64 [ %241, %239 ], [ %209, %208 ]
  %215 = phi %"struct.std::__1::pair.208"* [ %234, %239 ], [ %210, %208 ]
  %216 = phi i64 [ %240, %239 ], [ %209, %208 ]
  %217 = inttoptr i64 %214 to %"struct.std::__1::pair.208"*
  br label %218

218:                                              ; preds = %213, %238
  %219 = phi %"struct.std::__1::pair.208"* [ %234, %238 ], [ %215, %213 ]
  %220 = phi i64 [ %214, %238 ], [ %216, %213 ]
  %221 = inttoptr i64 %220 to %"struct.std::__1::pair.208"*
  %222 = bitcast %"struct.std::__1::pair.208"* %219 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %219, i64 0, i32 0, i32 1
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"struct.std::__1::pair.208"* %219 to i8*
  %227 = inttoptr i64 %220 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %226, i8* align 8 %227, i64 16, i1 false) #11
  %228 = inttoptr i64 %220 to i64*
  store i64 %223, i64* %228, align 8
  %229 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %221, i64 0, i32 0, i32 1
  store i64 %225, i64* %229, align 8
  %230 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %219, i64 0, i32 1
  %231 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %221, i64 0, i32 1
  %232 = load i32, i32* %230, align 4
  %233 = load i32, i32* %231, align 4
  store i32 %233, i32* %230, align 4
  store i32 %232, i32* %231, align 4
  %234 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %219, i64 1
  %235 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %221, i64 1
  %236 = icmp eq %"struct.std::__1::pair.208"* %235, %161
  %237 = icmp eq %"struct.std::__1::pair.208"* %234, %217
  br i1 %236, label %238, label %239

238:                                              ; preds = %218
  br i1 %237, label %242, label %218

239:                                              ; preds = %218
  %240 = ptrtoint %"struct.std::__1::pair.208"* %235 to i64
  %241 = select i1 %237, i64 %240, i64 %214
  br label %213

242:                                              ; preds = %238, %156, %167, %208
  %243 = phi %"struct.std::__1::pair.208"* [ %165, %167 ], [ %161, %156 ], [ %210, %208 ], [ %210, %238 ]
  %244 = add nsw i64 %160, %159
  %245 = add nsw i64 %163, %164
  %246 = icmp slt i64 %244, %245
  br i1 %246, label %247, label %249

247:                                              ; preds = %242
  %248 = ptrtoint %"struct.std::__1::pair.208"* %243 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_SQ_T_NS_15iterator_traitsISQ_E15difference_typeESU_PNST_10value_typeEl(%"struct.std::__1::pair.208"* %55, %"struct.std::__1::pair.208"* %165, %"struct.std::__1::pair.208"* %243, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare"* dereferenceable(1) %3, i64 %160, i64 %159, %"struct.std::__1::pair.208"* %6, i64 %7)
  br label %250

249:                                              ; preds = %242
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_SQ_T_NS_15iterator_traitsISQ_E15difference_typeESU_PNST_10value_typeEl(%"struct.std::__1::pair.208"* %243, %"struct.std::__1::pair.208"* %161, %"struct.std::__1::pair.208"* %14, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare"* dereferenceable(1) %3, i64 %163, i64 %164, %"struct.std::__1::pair.208"* %6, i64 %7)
  br label %250

250:                                              ; preds = %247, %249
  %251 = phi i64 [ %248, %247 ], [ %35, %249 ]
  %252 = phi i64 [ %162, %247 ], [ %157, %249 ]
  %253 = phi i64 [ %164, %247 ], [ %159, %249 ]
  %254 = phi i64 [ %163, %247 ], [ %160, %249 ]
  %255 = phi %"struct.std::__1::pair.208"* [ %14, %247 ], [ %243, %249 ]
  %256 = icmp eq i64 %253, 0
  br i1 %256, label %257, label %13

257:                                              ; preds = %250, %22, %49, %8, %99, %30
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_PNS_15iterator_traitsISQ_E10value_typeET_(%"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"*, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"struct.std::__1::pair.208"* %0, %1
  br i1 %5, label %78, label %6

6:                                                ; preds = %4
  %7 = bitcast %"struct.std::__1::pair.208"* %2 to i8*
  %8 = bitcast %"struct.std::__1::pair.208"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %0, i64 1
  %10 = icmp eq %"struct.std::__1::pair.208"* %9, %1
  br i1 %10, label %78, label %11

11:                                               ; preds = %6, %75
  %12 = phi %"struct.std::__1::pair.208"* [ %76, %75 ], [ %9, %6 ]
  %13 = phi %"struct.std::__1::pair.208"* [ %15, %75 ], [ %2, %6 ]
  %14 = phi %"struct.std::__1::pair.208"* [ %12, %75 ], [ %0, %6 ]
  %15 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %13, i64 1
  %16 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %12, i64 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %14, i64 1, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %13, i64 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %13, i64 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp ugt i64 %19, %23
  %25 = select i1 %24, i64 %23, i64 %19
  %26 = tail call i32 @memcmp(i8* %17, i8* %21, i64 %25) #11
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %11
  %29 = icmp ult i64 %19, %23
  %30 = bitcast %"struct.std::__1::pair.208"* %15 to i8*
  br i1 %29, label %34, label %72

31:                                               ; preds = %11
  %32 = icmp slt i32 %26, 0
  %33 = bitcast %"struct.std::__1::pair.208"* %15 to i8*
  br i1 %32, label %34, label %72

34:                                               ; preds = %28, %31
  %35 = phi i8* [ %33, %31 ], [ %30, %28 ]
  %36 = bitcast %"struct.std::__1::pair.208"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false)
  %37 = icmp eq %"struct.std::__1::pair.208"* %13, %2
  br i1 %37, label %65, label %38

38:                                               ; preds = %34, %55
  %39 = phi %"struct.std::__1::pair.208"* [ %40, %55 ], [ %13, %34 ]
  %40 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %39, i64 -1
  %41 = load i8*, i8** %16, align 8
  %42 = load i64, i64* %18, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %40, i64 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %39, i64 -1, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = icmp ugt i64 %42, %46
  %48 = select i1 %47, i64 %46, i64 %42
  %49 = tail call i32 @memcmp(i8* %41, i8* %44, i64 %48) #11
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %38
  %52 = icmp ult i64 %42, %46
  br i1 %52, label %55, label %62

53:                                               ; preds = %38
  %54 = icmp slt i32 %49, 0
  br i1 %54, label %55, label %62

55:                                               ; preds = %51, %53
  %56 = bitcast %"struct.std::__1::pair.208"* %39 to i8*
  %57 = bitcast %"struct.std::__1::pair.208"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #11
  %58 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %39, i64 -1, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %39, i64 0, i32 1
  store i32 %59, i32* %60, align 8
  %61 = icmp eq %"struct.std::__1::pair.208"* %40, %2
  br i1 %61, label %62, label %38

62:                                               ; preds = %51, %55, %53
  %63 = phi %"struct.std::__1::pair.208"* [ %39, %53 ], [ %2, %55 ], [ %39, %51 ]
  %64 = bitcast %"struct.std::__1::pair.208"* %63 to i8*
  br label %65

65:                                               ; preds = %62, %34
  %66 = phi i8* [ %64, %62 ], [ %7, %34 ]
  %67 = phi %"struct.std::__1::pair.208"* [ %63, %62 ], [ %2, %34 ]
  %68 = bitcast %"struct.std::__1::pair.208"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %68, i64 16, i1 false) #11
  %69 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %14, i64 1, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %67, i64 0, i32 1
  store i32 %70, i32* %71, align 8
  br label %75

72:                                               ; preds = %28, %31
  %73 = phi i8* [ %33, %31 ], [ %30, %28 ]
  %74 = bitcast %"struct.std::__1::pair.208"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 24, i1 false)
  br label %75

75:                                               ; preds = %72, %65
  %76 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %12, i64 1
  %77 = icmp eq %"struct.std::__1::pair.208"* %76, %1
  br i1 %77, label %78, label %11

78:                                               ; preds = %75, %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS1_16BasicStringPieceIcNS_11char_traitsIcEEEENS2_8GetFirstENS_4lessIvEENS_6vectorINS_4pairIS7_N17url_pattern_index4flat13RequestMethodEEENS_9allocatorISG_EEEEE13value_compareENS_11__wrap_iterIPSG_EEEEvT0_SQ_SQ_T_NS_15iterator_traitsISQ_E15difference_typeESU_PNST_10value_typeE(%"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"*, %"struct.base::internal::flat_tree<base::BasicStringPiece<char>, base::internal::GetFirst, std::__1::less<void>, std::__1::vector<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod>, std::__1::allocator<std::__1::pair<base::BasicStringPiece<char>, url_pattern_index::flat::RequestMethod> > > >::value_compare"* dereferenceable(1), i64, i64, %"struct.std::__1::pair.208"*) local_unnamed_addr #0 comdat {
  %8 = icmp sgt i64 %4, %5
  br i1 %8, label %11, label %9

9:                                                ; preds = %7
  %10 = icmp eq %"struct.std::__1::pair.208"* %0, %1
  br i1 %10, label %134, label %67

11:                                               ; preds = %7
  %12 = icmp eq %"struct.std::__1::pair.208"* %1, %2
  br i1 %12, label %134, label %126

13:                                               ; preds = %67
  %14 = icmp eq %"struct.std::__1::pair.208"* %73, %6
  br i1 %14, label %134, label %15

15:                                               ; preds = %13, %62
  %16 = phi %"struct.std::__1::pair.208"* [ %64, %62 ], [ %6, %13 ]
  %17 = phi %"struct.std::__1::pair.208"* [ %65, %62 ], [ %0, %13 ]
  %18 = phi %"struct.std::__1::pair.208"* [ %63, %62 ], [ %1, %13 ]
  %19 = icmp eq %"struct.std::__1::pair.208"* %18, %2
  br i1 %19, label %20, label %31

20:                                               ; preds = %15, %20
  %21 = phi %"struct.std::__1::pair.208"* [ %29, %20 ], [ %17, %15 ]
  %22 = phi %"struct.std::__1::pair.208"* [ %28, %20 ], [ %16, %15 ]
  %23 = bitcast %"struct.std::__1::pair.208"* %21 to i8*
  %24 = bitcast %"struct.std::__1::pair.208"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false) #11
  %25 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %22, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %21, i64 0, i32 1
  store i32 %26, i32* %27, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %22, i64 1
  %29 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %21, i64 1
  %30 = icmp eq %"struct.std::__1::pair.208"* %22, %68
  br i1 %30, label %134, label %20

31:                                               ; preds = %15
  %32 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %18, i64 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %18, i64 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %16, i64 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %16, i64 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = icmp ugt i64 %35, %39
  %41 = select i1 %40, i64 %39, i64 %35
  %42 = tail call i32 @memcmp(i8* %33, i8* %37, i64 %41) #11
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %31
  %45 = icmp ult i64 %35, %39
  br i1 %45, label %48, label %55

46:                                               ; preds = %31
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %46, %44
  %49 = bitcast %"struct.std::__1::pair.208"* %17 to i8*
  %50 = bitcast %"struct.std::__1::pair.208"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 16, i1 false) #11
  %51 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %18, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %17, i64 0, i32 1
  store i32 %52, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %18, i64 1
  br label %62

55:                                               ; preds = %46, %44
  %56 = bitcast %"struct.std::__1::pair.208"* %17 to i8*
  %57 = bitcast %"struct.std::__1::pair.208"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #11
  %58 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %16, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %17, i64 0, i32 1
  store i32 %59, i32* %60, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %16, i64 1
  br label %62

62:                                               ; preds = %55, %48
  %63 = phi %"struct.std::__1::pair.208"* [ %54, %48 ], [ %18, %55 ]
  %64 = phi %"struct.std::__1::pair.208"* [ %16, %48 ], [ %61, %55 ]
  %65 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %17, i64 1
  %66 = icmp eq %"struct.std::__1::pair.208"* %64, %73
  br i1 %66, label %134, label %15

67:                                               ; preds = %9, %67
  %68 = phi %"struct.std::__1::pair.208"* [ %73, %67 ], [ %6, %9 ]
  %69 = phi %"struct.std::__1::pair.208"* [ %72, %67 ], [ %0, %9 ]
  %70 = bitcast %"struct.std::__1::pair.208"* %68 to i8*
  %71 = bitcast %"struct.std::__1::pair.208"* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 24, i1 false)
  %72 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %69, i64 1
  %73 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %68, i64 1
  %74 = icmp eq %"struct.std::__1::pair.208"* %72, %1
  br i1 %74, label %13, label %67

75:                                               ; preds = %126
  %76 = icmp eq %"struct.std::__1::pair.208"* %132, %6
  br i1 %76, label %134, label %77

77:                                               ; preds = %75, %113
  %78 = phi %"struct.std::__1::pair.208"* [ %124, %113 ], [ %2, %75 ]
  %79 = phi %"struct.std::__1::pair.208"* [ %117, %113 ], [ %132, %75 ]
  %80 = phi %"struct.std::__1::pair.208"* [ %116, %113 ], [ %1, %75 ]
  %81 = icmp eq %"struct.std::__1::pair.208"* %80, %0
  br i1 %81, label %82, label %93

82:                                               ; preds = %77, %82
  %83 = phi %"struct.std::__1::pair.208"* [ %85, %82 ], [ %79, %77 ]
  %84 = phi %"struct.std::__1::pair.208"* [ %86, %82 ], [ %78, %77 ]
  %85 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %83, i64 -1
  %86 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %84, i64 -1
  %87 = bitcast %"struct.std::__1::pair.208"* %86 to i8*
  %88 = bitcast %"struct.std::__1::pair.208"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 16, i1 false) #11
  %89 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %83, i64 -1, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %84, i64 -1, i32 1
  store i32 %90, i32* %91, align 8
  %92 = icmp eq %"struct.std::__1::pair.208"* %85, %6
  br i1 %92, label %134, label %82

93:                                               ; preds = %77
  %94 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %80, i64 -1
  %95 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %79, i64 -1
  %96 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %95, i64 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %79, i64 -1, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %94, i64 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %80, i64 -1, i32 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = icmp ugt i64 %99, %103
  %105 = select i1 %104, i64 %103, i64 %99
  %106 = tail call i32 @memcmp(i8* %97, i8* %101, i64 %105) #11
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %93
  %109 = icmp ult i64 %99, %103
  br i1 %109, label %113, label %112

110:                                              ; preds = %93
  %111 = icmp slt i32 %106, 0
  br i1 %111, label %113, label %112

112:                                              ; preds = %110, %108
  br label %113

113:                                              ; preds = %108, %110, %112
  %114 = phi %"struct.std::__1::pair.208"* [ %95, %112 ], [ %94, %110 ], [ %94, %108 ]
  %115 = phi %"struct.std::__1::pair.208"* [ %79, %112 ], [ %80, %110 ], [ %80, %108 ]
  %116 = phi %"struct.std::__1::pair.208"* [ %80, %112 ], [ %94, %110 ], [ %94, %108 ]
  %117 = phi %"struct.std::__1::pair.208"* [ %95, %112 ], [ %79, %110 ], [ %79, %108 ]
  %118 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %78, i64 -1
  %119 = bitcast %"struct.std::__1::pair.208"* %118 to i8*
  %120 = bitcast %"struct.std::__1::pair.208"* %114 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 16, i1 false) #11
  %121 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %115, i64 -1, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %78, i64 -1, i32 1
  store i32 %122, i32* %123, align 8
  %124 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %78, i64 -1
  %125 = icmp eq %"struct.std::__1::pair.208"* %117, %6
  br i1 %125, label %134, label %77

126:                                              ; preds = %11, %126
  %127 = phi %"struct.std::__1::pair.208"* [ %132, %126 ], [ %6, %11 ]
  %128 = phi %"struct.std::__1::pair.208"* [ %131, %126 ], [ %1, %11 ]
  %129 = bitcast %"struct.std::__1::pair.208"* %127 to i8*
  %130 = bitcast %"struct.std::__1::pair.208"* %128 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 24, i1 false)
  %131 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %128, i64 1
  %132 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %127, i64 1
  %133 = icmp eq %"struct.std::__1::pair.208"* %131, %2
  br i1 %133, label %75, label %126

134:                                              ; preds = %62, %20, %113, %82, %11, %9, %75, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"* } @_ZNK4base8internal9flat_treeINS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_8GetFirstENS3_4lessIvEENS3_6vectorINS3_4pairIS6_N17url_pattern_index4flat13RequestMethodEEENS3_9allocatorISF_EEEEE11equal_rangeINS3_12basic_stringIcS5_NSG_IcEEEEEENSB_INS3_11__wrap_iterIPKSF_EESR_EERKT_(%"class.base::internal::flat_tree.205"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::flat_tree.205", %"class.base::internal::flat_tree.205"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.205", %"class.base::internal::flat_tree.205"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair.208"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair.208"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair.208"*
  br i1 %10, label %53, label %12

12:                                               ; preds = %2
  %13 = sdiv exact i64 %9, 24
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %21 = select i1 %17, i8* %19, i8* %20
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %16 to i64
  %25 = select i1 %17, i64 %23, i64 %24
  br label %26

26:                                               ; preds = %47, %12
  %27 = phi %"struct.std::__1::pair.208"* [ %4, %12 ], [ %49, %47 ]
  %28 = phi i64 [ %13, %12 ], [ %48, %47 ]
  %29 = lshr i64 %28, 1
  %30 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %27, i64 %29
  %31 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %30, i64 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %27, i64 %29, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp ugt i64 %34, %25
  %36 = select i1 %35, i64 %25, i64 %34
  %37 = tail call i32 @memcmp(i8* %32, i8* %21, i64 %36) #11
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %26
  %40 = icmp ult i64 %34, %25
  br i1 %40, label %43, label %47

41:                                               ; preds = %26
  %42 = icmp slt i32 %37, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %41, %39
  %44 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %30, i64 1
  %45 = xor i64 %29, -1
  %46 = add i64 %28, %45
  br label %47

47:                                               ; preds = %43, %41, %39
  %48 = phi i64 [ %46, %43 ], [ %29, %41 ], [ %29, %39 ]
  %49 = phi %"struct.std::__1::pair.208"* [ %44, %43 ], [ %27, %41 ], [ %27, %39 ]
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %51, label %26

51:                                               ; preds = %47
  %52 = ptrtoint %"struct.std::__1::pair.208"* %49 to i64
  br label %53

53:                                               ; preds = %51, %2
  %54 = phi i64 [ %52, %51 ], [ %8, %2 ]
  %55 = phi %"struct.std::__1::pair.208"* [ %49, %51 ], [ %4, %2 ]
  %56 = icmp eq %"struct.std::__1::pair.208"* %55, %11
  br i1 %56, label %85, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %65 = select i1 %61, i8* %63, i8* %64
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %60 to i64
  %69 = select i1 %61, i64 %67, i64 %68
  %70 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %55, i64 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %55, i64 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = icmp ugt i64 %69, %73
  %75 = select i1 %74, i64 %73, i64 %69
  %76 = tail call i32 @memcmp(i8* %65, i8* %71, i64 %75) #11
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %57
  %79 = icmp ult i64 %69, %73
  br i1 %79, label %85, label %82

80:                                               ; preds = %57
  %81 = icmp slt i32 %76, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %78, %80
  %83 = getelementptr inbounds %"struct.std::__1::pair.208", %"struct.std::__1::pair.208"* %55, i64 1
  %84 = ptrtoint %"struct.std::__1::pair.208"* %83 to i64
  br label %85

85:                                               ; preds = %78, %80, %53, %82
  %86 = phi i64 [ %84, %82 ], [ %54, %53 ], [ %54, %80 ], [ %54, %78 ]
  %87 = insertvalue { %"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"* } undef, %"struct.std::__1::pair.208"* %55, 0
  %88 = inttoptr i64 %86 to %"struct.std::__1::pair.208"*
  %89 = insertvalue { %"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"* } %87, %"struct.std::__1::pair.208"* %88, 1
  ret { %"struct.std::__1::pair.208"*, %"struct.std::__1::pair.208"* } %89
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN3net27registry_controlled_domains16SameDomainOrHostERK4GURLRKN3url6OriginENS0_21PrivateRegistryFilterE(%class.GURL* dereferenceable(120), %"class.url::Origin"* dereferenceable(80), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN3net27registry_controlled_domains16SameDomainOrHostERKN3url6OriginES4_NS0_21PrivateRegistryFilterE(%"class.url::Origin"* dereferenceable(80), %"class.url::Origin"* dereferenceable(80), i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbiRKN11flatbuffers6VectorIhEEEJiEEEFbS7_EE3RunEPNS0_13BindStateBaseES7_(%"class.base::internal::BindStateBase"*, %"class.flatbuffers::Vector"* dereferenceable(4)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to i1 (i32, %"class.flatbuffers::Vector"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to i32*
  %7 = load i1 (i32, %"class.flatbuffers::Vector"*)*, i1 (i32, %"class.flatbuffers::Vector"*)** %4, align 8
  %8 = load i32, i32* %6, align 4
  %9 = tail call zeroext i1 %7(i32 %8, %"class.flatbuffers::Vector"* dereferenceable(4) %1) #11
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbiRKN11flatbuffers6VectorIhEEEJiEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNKR4absl8optionalIN3url6OriginEE8value_orIS2_EES2_OT_: argument 0"}
!5 = distinct !{!5, !"_ZNKR4absl8optionalIN3url6OriginEE8value_orIS2_EES2_OT_"}
!6 = !{!"branch_weights", i32 1, i32 1048575}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERFbiRKN11flatbuffers6VectorIhEEEJRKiEEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERFbiRKN11flatbuffers6VectorIhEEEJRKiEEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base13BindRepeatingIRFbiRKN11flatbuffers6VectorIhEEEJRKiEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!11 = distinct !{!11, !"_ZN4base13BindRepeatingIRFbiRKN11flatbuffers6VectorIhEEEJRKiEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK11flatbuffers6VectorIiE3endEv: argument 0"}
!14 = distinct !{!14, !"_ZNK11flatbuffers6VectorIiE3endEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__113__lower_boundIRNS_6__lessIiiEEN11flatbuffers14VectorIteratorIiiEEiEET0_S7_S7_RKT1_T_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__113__lower_boundIRNS_6__lessIiiEEN11flatbuffers14VectorIteratorIiiEEiEET0_S7_S7_RKT1_T_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK11flatbuffers6VectorIiE3endEv: argument 0"}
!20 = distinct !{!20, !"_ZNK11flatbuffers6VectorIiE3endEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__113__lower_boundIRNS_6__lessIiiEEN11flatbuffers14VectorIteratorIiiEEiEET0_S7_S7_RKT1_T_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__113__lower_boundIRNS_6__lessIiiEEN11flatbuffers14VectorIteratorIiiEEiEET0_S7_S7_RKT1_T_"}
!24 = !{!25, !27}
!25 = distinct !{!25, !26, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERFbiRKN11flatbuffers6VectorIhEEEJRiEEEDcOT0_DpOT1_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERFbiRKN11flatbuffers6VectorIhEEEJRiEEEDcOT0_DpOT1_"}
!27 = distinct !{!27, !28, !"_ZN4base13BindRepeatingIRFbiRKN11flatbuffers6VectorIhEEEJRiEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!28 = distinct !{!28, !"_ZN4base13BindRepeatingIRFbiRKN11flatbuffers6VectorIhEEEJRiEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
