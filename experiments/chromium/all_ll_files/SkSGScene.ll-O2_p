; ModuleID = '../../third_party/skia/modules/sksg/src/SkSGScene.cpp'
source_filename = "../../third_party/skia/modules/sksg/src/SkSGScene.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sksg::Scene" = type { %class.sk_sp }
%class.sk_sp = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.2, [384 x i64], %class.sk_sp.3, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.4", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.10" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.2 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.3 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkMatrix = type { [9 x float], i32 }
%"class.sksg::InvalidationController" = type { %"class.std::__1::vector.16", %struct.SkRect }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.SkRect*, %struct.SkRect*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %struct.SkRect* }
%"struct.sksg::RenderNode::RenderContext" = type { %class.sk_sp.20, %class.sk_sp.21, %class.sk_sp.21, %class.SkMatrix, %class.SkMatrix, float, i32 }
%class.sk_sp.20 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.21 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkPoint = type { float, float }

@_ZN4sksg5SceneC1E5sk_spINS_10RenderNodeEE = hidden unnamed_addr alias void (%"class.sksg::Scene"*, %class.sk_sp*), void (%"class.sksg::Scene"*, %class.sk_sp*)* @_ZN4sksg5SceneC2E5sk_spINS_10RenderNodeEE
@_ZN4sksg5SceneD1Ev = hidden unnamed_addr alias void (%"class.sksg::Scene"*), void (%"class.sksg::Scene"*)* @_ZN4sksg5SceneD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sksg::Scene"* @_ZN4sksg5Scene4MakeE5sk_spINS_10RenderNodeEE(%class.sk_sp* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %3 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %2, align 8
  %4 = icmp eq %"class.sksg::RenderNode"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.sksg::RenderNode"* %3 to i64
  %7 = tail call i8* @_Znwm(i64 8) #4
  %8 = bitcast i8* %7 to %"class.sksg::Scene"*
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %2, align 8
  %9 = bitcast i8* %7 to i64*
  store i64 %6, i64* %9, align 8
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %"class.sksg::Scene"* [ %8, %5 ], [ null, %1 ]
  ret %"class.sksg::Scene"* %11
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4sksg5SceneC2E5sk_spINS_10RenderNodeEE(%"class.sksg::Scene"* nocapture, %class.sk_sp* nocapture) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %4 = bitcast %class.sk_sp* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %3, align 8
  %6 = bitcast %"class.sksg::Scene"* %0 to i64*
  store i64 %5, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg5SceneD2Ev(%"class.sksg::Scene"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sksg::Scene", %"class.sksg::Scene"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %2, align 8
  %4 = icmp eq %"class.sksg::RenderNode"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = bitcast %"class.sksg::RenderNode"* %3 to %class.SkRefCntBase*
  %11 = bitcast %"class.sksg::RenderNode"* %3 to void (%class.SkRefCntBase*)***
  %12 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, i64 2
  %14 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, align 8
  tail call void %14(%class.SkRefCntBase* nonnull %10) #5
  br label %15

15:                                               ; preds = %1, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg5Scene6renderEP8SkCanvas(%"class.sksg::Scene"* nocapture readonly, %class.SkCanvas*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sksg::Scene", %"class.sksg::Scene"* %0, i64 0, i32 0, i32 0
  %4 = bitcast %"class.sksg::Scene"* %0 to %"class.sksg::Node"**
  %5 = load %"class.sksg::Node"*, %"class.sksg::Node"** %4, align 8
  %6 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #5
  %7 = tail call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* %5, %"class.sksg::InvalidationController"* null, %class.SkMatrix* dereferenceable(40) %6) #5
  %8 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %3, align 8
  tail call void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"* %8, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* null) #5
  ret void
}

declare dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #3

declare void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg5Scene10revalidateEPNS_22InvalidationControllerE(%"class.sksg::Scene"* nocapture readonly, %"class.sksg::InvalidationController"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.sksg::Scene"* %0 to %"class.sksg::Node"**
  %4 = load %"class.sksg::Node"*, %"class.sksg::Node"** %3, align 8
  %5 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #5
  %6 = tail call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* %4, %"class.sksg::InvalidationController"* %1, %class.SkMatrix* dereferenceable(40) %5) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sksg::RenderNode"* @_ZNK4sksg5Scene6nodeAtERK7SkPoint(%"class.sksg::Scene"* nocapture readonly, %struct.SkPoint* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sksg::Scene", %"class.sksg::Scene"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %3, align 8
  %5 = tail call %"class.sksg::RenderNode"* @_ZNK4sksg10RenderNode6nodeAtERK7SkPoint(%"class.sksg::RenderNode"* %4, %struct.SkPoint* dereferenceable(8) %1) #5
  ret %"class.sksg::RenderNode"* %5
}

declare %"class.sksg::RenderNode"* @_ZNK4sksg10RenderNode6nodeAtERK7SkPoint(%"class.sksg::RenderNode"*, %struct.SkPoint* dereferenceable(8)) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { builtin nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
