; ModuleID = '../../third_party/libgav1/src/src/internal_frame_buffer_list.cc'
source_filename = "../../third_party/libgav1/src/src/internal_frame_buffer_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::nothrow_t" = type { i8 }
%"class.libgav1::InternalFrameBufferList" = type { %"class.libgav1::Vector" }
%"class.libgav1::Vector" = type { %"class.libgav1::internal::VectorBase" }
%"class.libgav1::internal::VectorBase" = type { %"class.std::__1::unique_ptr"*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.libgav1::InternalFrameBufferList::Buffer"* }
%"struct.libgav1::InternalFrameBufferList::Buffer" = type <{ %"class.std::__1::unique_ptr.0", i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }
%struct.Libgav1FrameBuffer = type { [3 x i8*], [3 x i32], i8* }
%struct.Libgav1FrameBufferInfo = type { i64, i64, i32, i32, i64, i64, i32 }

$_ZN7libgav18internal10VectorBaseINSt3__110unique_ptrINS_23InternalFrameBufferList6BufferENS2_14default_deleteIS5_EEEEE7reserveEm = comdat any

@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @OnInternalFrameBufferSizeChanged(i8* nocapture readnone, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN7libgav123InternalFrameBufferList24OnFrameBufferSizeChangedEi18Libgav1ImageFormatiiiiiii(%"class.libgav1::InternalFrameBufferList"* nocapture readnone, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GetInternalFrameBuffer(i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*) local_unnamed_addr #2 {
  %12 = bitcast i8* %0 to %"class.libgav1::InternalFrameBufferList"*
  %13 = tail call i32 @_ZN7libgav123InternalFrameBufferList14GetFrameBufferEi18Libgav1ImageFormatiiiiiiiP18Libgav1FrameBuffer(%"class.libgav1::InternalFrameBufferList"* %12, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, %struct.Libgav1FrameBuffer* %10)
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7libgav123InternalFrameBufferList14GetFrameBufferEi18Libgav1ImageFormatiiiiiiiP18Libgav1FrameBuffer(%"class.libgav1::InternalFrameBufferList"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*) local_unnamed_addr #2 align 2 {
  %12 = alloca %struct.Libgav1FrameBufferInfo, align 8
  %13 = bitcast %struct.Libgav1FrameBufferInfo* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 48, i1 false)
  %14 = call i32 @Libgav1ComputeFrameBufferInfo(i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, %struct.Libgav1FrameBufferInfo* nonnull %12) #9
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %127

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.Libgav1FrameBufferInfo, %struct.Libgav1FrameBufferInfo* %12, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp slt i64 %18, 0
  br i1 %19, label %127, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.Libgav1FrameBufferInfo, %struct.Libgav1FrameBufferInfo* %12, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = shl i64 %18, 1
  %24 = xor i64 %23, -1
  %25 = icmp ugt i64 %22, %24
  br i1 %25, label %127, label %26

26:                                               ; preds = %20
  %27 = add i64 %22, %23
  %28 = getelementptr inbounds %"class.libgav1::InternalFrameBufferList", %"class.libgav1::InternalFrameBufferList"* %0, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.libgav1::InternalFrameBufferList", %"class.libgav1::InternalFrameBufferList"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %29, align 8
  %31 = getelementptr inbounds %"class.libgav1::InternalFrameBufferList", %"class.libgav1::InternalFrameBufferList"* %0, i64 0, i32 0, i32 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 %32
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %47, label %37

35:                                               ; preds = %37
  %36 = icmp eq %"class.std::__1::unique_ptr"* %44, %33
  br i1 %36, label %47, label %37

37:                                               ; preds = %26, %35
  %38 = phi %"class.std::__1::unique_ptr"* [ %44, %35 ], [ %30, %26 ]
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"struct.libgav1::InternalFrameBufferList::Buffer"*, %"struct.libgav1::InternalFrameBufferList::Buffer"** %39, align 8
  %41 = getelementptr inbounds %"struct.libgav1::InternalFrameBufferList::Buffer", %"struct.libgav1::InternalFrameBufferList::Buffer"* %40, i64 0, i32 2
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 1
  br i1 %43, label %45, label %35

45:                                               ; preds = %37
  %46 = icmp eq %"struct.libgav1::InternalFrameBufferList::Buffer"* %40, null
  br i1 %46, label %47, label %96

47:                                               ; preds = %35, %26, %45
  %48 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 24, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #9
  %49 = icmp eq i8* %48, null
  br i1 %49, label %127, label %50

50:                                               ; preds = %47
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 17, i1 false) #9
  %51 = ptrtoint i8* %48 to i64
  %52 = load i64, i64* %31, align 8
  %53 = getelementptr inbounds %"class.libgav1::InternalFrameBufferList", %"class.libgav1::InternalFrameBufferList"* %0, i64 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp ult i64 %52, %54
  br i1 %55, label %80, label %56

56:                                               ; preds = %50
  %57 = add i64 %52, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %75, label %59

59:                                               ; preds = %56
  %60 = icmp ult i64 %57, 17
  br i1 %60, label %75, label %61

61:                                               ; preds = %59
  %62 = lshr i64 %52, 1
  %63 = or i64 %62, %52
  %64 = lshr i64 %63, 2
  %65 = or i64 %64, %63
  %66 = lshr i64 %65, 4
  %67 = or i64 %66, %65
  %68 = lshr i64 %67, 8
  %69 = or i64 %68, %67
  %70 = lshr i64 %69, 16
  %71 = or i64 %70, %69
  %72 = lshr i64 %71, 32
  %73 = or i64 %72, %71
  %74 = add i64 %73, 1
  br label %75

75:                                               ; preds = %61, %59, %56
  %76 = phi i64 [ %74, %61 ], [ 0, %56 ], [ 16, %59 ]
  %77 = call zeroext i1 @_ZN7libgav18internal10VectorBaseINSt3__110unique_ptrINS_23InternalFrameBufferList6BufferENS2_14default_deleteIS5_EEEEE7reserveEm(%"class.libgav1::internal::VectorBase"* %28, i64 %76) #9
  br i1 %77, label %78, label %90

78:                                               ; preds = %75
  %79 = load i64, i64* %31, align 8
  br label %80

80:                                               ; preds = %78, %50
  %81 = phi i64 [ %79, %78 ], [ %52, %50 ]
  %82 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %29, align 8
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 %81
  %84 = bitcast %"class.std::__1::unique_ptr"* %83 to i64*
  store i64 %51, i64* %84, align 8
  %85 = load i64, i64* %31, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %31, align 8
  %87 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %29, align 8
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %87, i64 %85, i32 0, i32 0, i32 0
  %89 = load %"struct.libgav1::InternalFrameBufferList::Buffer"*, %"struct.libgav1::InternalFrameBufferList::Buffer"** %88, align 8
  br label %96

90:                                               ; preds = %75
  %91 = bitcast i8* %48 to i8**
  %92 = load i8*, i8** %91, align 8
  store i8* null, i8** %91, align 8
  %93 = icmp eq i8* %92, null
  br i1 %93, label %95, label %94

94:                                               ; preds = %90
  call void @free(i8* nonnull %92) #9
  br label %95

95:                                               ; preds = %94, %90
  call void @_ZdlPv(i8* nonnull %48) #9
  br label %127

96:                                               ; preds = %80, %45
  %97 = phi %"struct.libgav1::InternalFrameBufferList::Buffer"* [ %40, %45 ], [ %89, %80 ]
  %98 = getelementptr inbounds %"struct.libgav1::InternalFrameBufferList::Buffer", %"struct.libgav1::InternalFrameBufferList::Buffer"* %97, i64 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = icmp ult i64 %99, %27
  br i1 %100, label %101, label %112

101:                                              ; preds = %96
  %102 = call noalias i8* @malloc(i64 %27) #9
  %103 = icmp eq i8* %102, null
  br i1 %103, label %127, label %104

104:                                              ; preds = %101
  %105 = ptrtoint i8* %102 to i64
  %106 = getelementptr inbounds %"struct.libgav1::InternalFrameBufferList::Buffer", %"struct.libgav1::InternalFrameBufferList::Buffer"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = bitcast %"struct.libgav1::InternalFrameBufferList::Buffer"* %97 to i64*
  store i64 %105, i64* %108, align 8
  %109 = icmp eq i8* %107, null
  br i1 %109, label %111, label %110

110:                                              ; preds = %104
  call void @free(i8* nonnull %107) #9
  br label %111

111:                                              ; preds = %110, %104
  store i64 %27, i64* %98, align 8
  br label %112

112:                                              ; preds = %111, %96
  %113 = getelementptr inbounds %"struct.libgav1::InternalFrameBufferList::Buffer", %"struct.libgav1::InternalFrameBufferList::Buffer"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = load i64, i64* %17, align 8
  %116 = icmp eq i64 %115, 0
  %117 = load i64, i64* %21, align 8
  %118 = getelementptr inbounds i8, i8* %114, i64 %117
  %119 = select i1 %116, i8* null, i8* %118
  %120 = getelementptr inbounds i8, i8* %119, i64 %115
  %121 = select i1 %116, i8* null, i8* %120
  %122 = bitcast %"struct.libgav1::InternalFrameBufferList::Buffer"* %97 to i8*
  %123 = call i32 @Libgav1SetFrameBuffer(%struct.Libgav1FrameBufferInfo* nonnull %12, i8* %114, i8* %119, i8* %121, i8* %122, %struct.Libgav1FrameBuffer* %10) #9
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %112
  %126 = getelementptr inbounds %"struct.libgav1::InternalFrameBufferList::Buffer", %"struct.libgav1::InternalFrameBufferList::Buffer"* %97, i64 0, i32 2
  store i8 1, i8* %126, align 8
  br label %127

127:                                              ; preds = %95, %101, %47, %112, %125, %16, %20, %11
  %128 = phi i32 [ %14, %11 ], [ -2, %20 ], [ -2, %16 ], [ 0, %125 ], [ %123, %112 ], [ -3, %47 ], [ -3, %101 ], [ -3, %95 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #9
  ret i32 %128
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @ReleaseInternalFrameBuffer(i8* nocapture readnone, i8* nocapture) local_unnamed_addr #3 {
  %3 = getelementptr inbounds i8, i8* %1, i64 16
  store i8 0, i8* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7libgav123InternalFrameBufferList18ReleaseFrameBufferEPv(%"class.libgav1::InternalFrameBufferList"* nocapture readnone, i8* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 16
  store i8 0, i8* %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

declare i32 @Libgav1SetFrameBuffer(%struct.Libgav1FrameBufferInfo*, i8*, i8*, i8*, i8*, %struct.Libgav1FrameBuffer*) local_unnamed_addr #5

declare i32 @Libgav1ComputeFrameBufferInfo(i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBufferInfo*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN7libgav18internal10VectorBaseINSt3__110unique_ptrINS_23InternalFrameBufferList6BufferENS2_14default_deleteIS5_EEEEE7reserveEm(%"class.libgav1::internal::VectorBase"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.libgav1::internal::VectorBase", %"class.libgav1::internal::VectorBase"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = icmp ult i64 %4, %1
  br i1 %5, label %6, label %44

6:                                                ; preds = %2
  %7 = shl i64 %1, 3
  %8 = tail call noalias i8* @malloc(i64 %7) #9
  %9 = bitcast i8* %8 to %"class.std::__1::unique_ptr"*
  %10 = icmp eq i8* %8, null
  br i1 %10, label %44, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.libgav1::internal::VectorBase", %"class.libgav1::internal::VectorBase"* %0, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %41, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.libgav1::internal::VectorBase", %"class.libgav1::internal::VectorBase"* %0, i64 0, i32 0
  br label %17

17:                                               ; preds = %15, %37
  %18 = phi i64 [ 0, %15 ], [ %38, %37 ]
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 %18
  %20 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 %18
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr"* %21 to i64*
  %24 = load i64, i64* %23, align 8
  store %"struct.libgav1::InternalFrameBufferList::Buffer"* null, %"struct.libgav1::InternalFrameBufferList::Buffer"** %22, align 8
  %25 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  store i64 %24, i64* %25, align 8
  %26 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 %18, i32 0, i32 0, i32 0
  %28 = load %"struct.libgav1::InternalFrameBufferList::Buffer"*, %"struct.libgav1::InternalFrameBufferList::Buffer"** %27, align 8
  store %"struct.libgav1::InternalFrameBufferList::Buffer"* null, %"struct.libgav1::InternalFrameBufferList::Buffer"** %27, align 8
  %29 = icmp eq %"struct.libgav1::InternalFrameBufferList::Buffer"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %17
  %31 = getelementptr inbounds %"struct.libgav1::InternalFrameBufferList::Buffer", %"struct.libgav1::InternalFrameBufferList::Buffer"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  store i8* null, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %35, label %34

34:                                               ; preds = %30
  tail call void @free(i8* nonnull %32) #9
  br label %35

35:                                               ; preds = %34, %30
  %36 = bitcast %"struct.libgav1::InternalFrameBufferList::Buffer"* %28 to i8*
  tail call void @_ZdlPv(i8* nonnull %36) #9
  br label %37

37:                                               ; preds = %17, %35
  %38 = add nuw i64 %18, 1
  %39 = load i64, i64* %12, align 8
  %40 = icmp ult i64 %38, %39
  br i1 %40, label %17, label %41

41:                                               ; preds = %37, %11
  %42 = bitcast %"class.libgav1::internal::VectorBase"* %0 to i8**
  %43 = load i8*, i8** %42, align 8
  tail call void @free(i8* %43) #9
  store i8* %8, i8** %42, align 8
  store i64 %1, i64* %3, align 8
  br label %44

44:                                               ; preds = %2, %41, %6
  %45 = phi i1 [ false, %6 ], [ true, %41 ], [ true, %2 ]
  ret i1 %45
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
