; ModuleID = '../../third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_auth.c'
source_filename = "../../third_party/usrsctp/usrsctplib/usrsctplib/netinet/sctp_auth.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sctp_base_info = type { %struct.sctp_epinfo, %struct.sctpstat, %struct.sctp_sysctl, i8, i8, %union.pthread_mutex_t, i64, i32, i32, i32, %union.pthread_mutexattr_t, i32 (i8*, i8*, i64, i8, i8)*, void (i8*, ...)*, i32 }
%struct.sctp_epinfo = type { %struct.sctpasochead*, i64, %struct.sctppcbhead*, i64, %struct.sctppcbhead*, i64, i32, %struct.sctp_vrflist*, i64, %struct.sctp_ifnlist*, i64, %struct.sctppcbhead, %struct.sctpladdr, i64, i64, i64, i64, i64, i64, i64, i64, i64, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [32 x %struct.sctpvtaghead], %struct.sctp_timer, %struct.calloutlist }
%struct.sctpasochead = type { %struct.sctp_tcb* }
%struct.sctp_tcb = type { %struct.socket*, %struct.sctp_inpcb*, %struct.anon.10, %struct.anon.11, %struct.anon.12, %struct.anon.13, %struct.sctp_block_entry*, %struct.sctp_association, i32, i32, i32, i32, i16, i16, %union.pthread_mutex_t, %union.pthread_mutex_t }
%struct.socket = type { i32, i16, i16, i16, i16, i32, i8*, i32, %struct.socket*, %struct.anon, %struct.anon.0, %struct.anon.1, i16, i16, i16, i16, %union.pthread_cond_t, i16, %struct.sigio*, i64, %struct.anon.5, %struct.sockbuf, %struct.sockbuf, void (%struct.socket*, i8*, i32)*, i8*, %struct.ucred*, %struct.label*, %struct.label*, i32, i8*, %struct.so_accf* }
%struct.anon = type { %struct.socket*, %struct.socket** }
%struct.anon.0 = type { %struct.socket*, %struct.socket** }
%struct.anon.1 = type { %struct.socket*, %struct.socket** }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.3, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.3 = type { i64 }
%struct.sigio = type opaque
%struct.anon.5 = type { %struct.aiocblist*, %struct.aiocblist** }
%struct.aiocblist = type opaque
%struct.sockbuf = type { %union.pthread_cond_t, %union.pthread_mutex_t, i16, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.mbuf = type { %struct.m_hdr, %union.anon.6 }
%struct.m_hdr = type { %struct.mbuf*, %struct.mbuf*, i8*, i32, i32, i16, [6 x i8] }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { %struct.pkthdr, %union.anon.9 }
%struct.pkthdr = type { %struct.ifnet*, i8*, i32, i32, i32, i16, i16, %struct.packet_tags }
%struct.ifnet = type opaque
%struct.packet_tags = type { %struct.m_tag* }
%struct.m_tag = type { %struct.anon.8, i16, i16, i32, void (%struct.m_tag*)* }
%struct.anon.8 = type { %struct.m_tag* }
%union.anon.9 = type { %struct.m_ext, [128 x i8] }
%struct.m_ext = type { i8*, void (i8*, i8*)*, i8*, i32, i32*, i32 }
%struct.ucred = type { i32, i32, i32 }
%struct.label = type opaque
%struct.so_accf = type { %struct.accept_filter*, i8*, i8* }
%struct.accept_filter = type opaque
%struct.sctp_inpcb = type { %union.anon.40, %struct.sctp_readhead, %struct.anon.49, %struct.anon.50, i32, %struct.sctpladdr, %struct.sctp_laddr*, %struct.socket*, i64, i32, i32, %struct.sctp_pcb, %struct.sctpasochead*, i64, %struct.sctpasochead, %struct.sctp_iterator*, i32, i32, i32, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %struct.sctp_nonpad_sndrcvinfo, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %union.pthread_mutex_t, %union.pthread_mutex_t, %union.pthread_mutex_t, i32, i32, i16, i32, i32, i32, i32, %struct.sctpasochead*, i64, i32, i8*, i32 (%struct.socket*, %union.sctp_sockstore*, i8*, i64, %struct.sctp_rcvinfo*, i32, i8*)*, i32, i32 (%struct.socket*, i32, i8*)* }
%union.anon.40 = type { %struct.inpcb, [24 x i8] }
%struct.inpcb = type { %struct.anon.41, %struct.anon.42, i8*, %struct.inpcbinfo*, %struct.socket*, i32, i32, i8, i8, i8, i8, i32, [2 x i8*], %struct.in_conninfo, %struct.label*, %struct.inpcbpolicy*, %struct.anon.46, %struct.anon.47, %struct.anon.48, %struct.inpcbport*, %struct.mtx }
%struct.anon.41 = type { %struct.inpcb*, %struct.inpcb** }
%struct.anon.42 = type { %struct.inpcb*, %struct.inpcb** }
%struct.inpcbinfo = type { %struct.inpcbhead*, i32, %struct.inpcbhead*, i64, %struct.inpcbporthead*, i64, i16, i16, i16, %struct.uma_zone*, %struct.mtx, [2 x i8*] }
%struct.inpcbhead = type { %struct.inpcb* }
%struct.inpcbporthead = type { %struct.inpcbport* }
%struct.uma_zone = type opaque
%struct.in_conninfo = type { i8, i8, i16, %struct.in_endpoints }
%struct.in_endpoints = type { i16, i16, %union.anon.44, %union.anon.45 }
%union.anon.44 = type { %struct.in_addr_4in6 }
%struct.in_addr_4in6 = type { [3 x i32], %struct.in_addr }
%struct.in_addr = type { i32 }
%union.anon.45 = type { %struct.in_addr_4in6 }
%struct.inpcbpolicy = type opaque
%struct.anon.46 = type { i8, %struct.mbuf*, %struct.ip_moptions* }
%struct.ip_moptions = type opaque
%struct.anon.47 = type { %struct.mbuf*, %struct.ip6_pktopts*, %struct.icmp6_filter*, i32, i16 }
%struct.ip6_pktopts = type opaque
%struct.icmp6_filter = type opaque
%struct.anon.48 = type { %struct.inpcb*, %struct.inpcb** }
%struct.inpcbport = type { %struct.anon.43, %struct.inpcbhead, i16 }
%struct.anon.43 = type { %struct.inpcbport*, %struct.inpcbport** }
%struct.mtx = type { i32 }
%struct.sctp_readhead = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.sctp_queued_to_read = type { i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.sctp_nets*, %struct.mbuf*, %struct.mbuf*, %struct.mbuf*, %struct.sctp_tcb*, %struct.anon.35, %struct.anon.36, %struct.sctpchunk_listhead, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.sctp_nets = type { %struct.anon.23, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_net_route, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, %struct.sctp_timer, %struct.timeval, %union.cc_control_data, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, %struct.timeval, i32, i32, i32, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.anon.23 = type { %struct.sctp_nets*, %struct.sctp_nets** }
%struct.sctp_net_route = type { %struct.sctp_rtentry*, %union.sctp_sockstore, %struct.sctp_ifa* }
%struct.sctp_rtentry = type { %struct.ifnet*, %struct.ifaddr*, %struct.sctp_rt_metrics_lite, i64, %struct.mtx }
%struct.ifaddr = type { %struct.sockaddr, %union.anon.24, %struct.iface*, %struct.ifaddr* }
%struct.sockaddr = type { i16, [14 x i8] }
%union.anon.24 = type { %struct.sockaddr }
%struct.iface = type opaque
%struct.sctp_rt_metrics_lite = type { i32 }
%union.sctp_sockstore = type { %struct.sockaddr_conn, [16 x i8] }
%struct.sockaddr_conn = type { i16, i16, i8* }
%struct.sctp_ifa = type { %struct.anon.15, %struct.anon.16, %struct.sctp_ifn*, i8*, %union.sctp_sockstore, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.anon.15 = type { %struct.sctp_ifa*, %struct.sctp_ifa** }
%struct.anon.16 = type { %struct.sctp_ifa*, %struct.sctp_ifa** }
%struct.sctp_ifn = type { %struct.sctp_ifalist, %struct.sctp_vrf*, %struct.anon.18, %struct.anon.19, i8*, i32, i32, i32, i32, i32, i32, i32, i32, [16 x i8] }
%struct.sctp_ifalist = type { %struct.sctp_ifa* }
%struct.sctp_vrf = type { %struct.anon.17, %struct.sctp_ifalist*, %struct.sctp_ifnlist, i32, i32, i32, i32, i64, i32 }
%struct.anon.17 = type { %struct.sctp_vrf*, %struct.sctp_vrf** }
%struct.sctp_ifnlist = type { %struct.sctp_ifn* }
%struct.anon.18 = type { %struct.sctp_ifn*, %struct.sctp_ifn** }
%struct.anon.19 = type { %struct.sctp_ifn*, %struct.sctp_ifn** }
%union.cc_control_data = type { %struct.rtcc_cc }
%struct.rtcc_cc = type { %struct.timeval, i64, i64, i64, i64, i64, i64, i32, i32, i16, i16, i8, i8, i8, i8, i8, i8 }
%struct.timeval = type { i64, i64 }
%struct.anon.35 = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.anon.36 = type { %struct.sctp_queued_to_read*, %struct.sctp_queued_to_read** }
%struct.sctpchunk_listhead = type { %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** }
%struct.sctp_tmit_chunk = type { %union.anon.25, %struct.sctp_association*, %struct.timeval, %struct.mbuf*, %struct.mbuf*, %struct.sctp_nets*, %struct.anon.26, i32, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8 }
%union.anon.25 = type { %struct.sctp_data_chunkrec }
%struct.sctp_data_chunkrec = type { i32, i32, i16, i32, i32, i32, i32, %struct.timeval, i32, i8, i8, i8, i8, i8 }
%struct.anon.26 = type { %struct.sctp_tmit_chunk*, %struct.sctp_tmit_chunk** }
%struct.anon.49 = type { %struct.sctp_inpcb*, %struct.sctp_inpcb** }
%struct.anon.50 = type { %struct.sctp_inpcb*, %struct.sctp_inpcb** }
%struct.sctp_laddr = type { %struct.anon.22, %struct.sctp_ifa*, i32, %struct.timeval }
%struct.anon.22 = type { %struct.sctp_laddr*, %struct.sctp_laddr** }
%struct.sctp_pcb = type { i32, [2 x [8 x i32]], i32, [7 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.sctp_keyhead, %struct.sctp_auth_chklist*, %struct.sctp_hmaclist*, i16, i32, i16, i16, i16, i16, i16, i16, i32, [20 x i8], [20 x i8], %struct.sctp_timer, i32, i32, i32, i32, i8, i32, i32, i32, i8, i8, i8, i16 }
%struct.sctp_keyhead = type { %struct.sctp_shared_key* }
%struct.sctp_shared_key = type { %struct.anon.38, %struct.sctp_key*, i32, i16, i8 }
%struct.anon.38 = type { %struct.sctp_shared_key*, %struct.sctp_shared_key** }
%struct.sctp_key = type { i32, [0 x i8] }
%struct.sctp_auth_chklist = type { [256 x i8], i8 }
%struct.sctp_hmaclist = type { i16, i16, [0 x i16] }
%struct.sctp_iterator = type { %struct.anon.33, %struct.sctp_timer, %struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_inpcb*, void (%struct.sctp_inpcb*, %struct.sctp_tcb*, i8*, i32)*, i32 (%struct.sctp_inpcb*, i8*, i32)*, i32 (%struct.sctp_inpcb*, i8*, i32)*, void (i8*, i32)*, i8*, i32, i32, i32, i32, i32, i8, i8 }
%struct.anon.33 = type { %struct.sctp_iterator*, %struct.sctp_iterator** }
%struct.sctp_nonpad_sndrcvinfo = type { i16, i16, i16, i32, i32, i32, i32, i32, i32, i16, i16 }
%struct.sctp_rcvinfo = type { i16, i16, i16, i32, i32, i32, i32, i32 }
%struct.anon.10 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.11 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.12 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.anon.13 = type { %struct.sctp_tcb*, %struct.sctp_tcb** }
%struct.sctp_block_entry = type { i32 }
%struct.sctp_association = type { i32, %struct.sctp_asconf_addrhead, %struct.timeval, %struct.timeval, %struct.timeval, %struct.timeval, %struct.sctp_nonpad_sndrcvinfo, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctp_timer, %struct.sctpladdr, %struct.sctp_ifa*, %struct.sctp_nets*, %struct.sctpnetlisthead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.sctpchunk_listhead, %struct.scheduling_data, %struct.sctp_iterator*, %struct.sctp_asconf_ackhead, %struct.sctp_tmit_chunk*, %struct.sctp_laddr*, %struct.sctp_stream_in*, %struct.sctp_stream_out*, i8*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_nets*, %struct.sctp_resethead, %struct.sctp_readhead, %struct.sctp_cc_functions, i32, %struct.sctp_ss_functions, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, %struct.sctp_queued_to_read*, i32, i32, i32, [2 x i32], [2 x i32], [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [20 x i32], i32, i32, i32, i32, %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist*, %struct.sctp_hmaclist*, %struct.sctp_hmaclist*, %struct.sctp_keyhead, %struct.sctp_authinformation, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i32, i32, i8, i8, i8, [4 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.sctp_scoping, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], i8, i8, i64, i32, i16, i32, i32, i32, i32, i32, i32, i32, i32, %struct.timeval, %struct.timeval, [4 x i64], [4 x i64] }
%struct.sctp_asconf_addrhead = type { %struct.sctp_asconf_addr*, %struct.sctp_asconf_addr** }
%struct.sctp_asconf_addr = type { %struct.anon.14, %struct.sctp_asconf_addr_param, %struct.sctp_ifa*, i8, i8 }
%struct.anon.14 = type { %struct.sctp_asconf_addr*, %struct.sctp_asconf_addr** }
%struct.sctp_asconf_addr_param = type { %struct.sctp_asconf_paramhdr, %struct.sctp_ipv6addr_param }
%struct.sctp_asconf_paramhdr = type { %struct.sctp_paramhdr, i32 }
%struct.sctp_paramhdr = type { i16, i16 }
%struct.sctp_ipv6addr_param = type { %struct.sctp_paramhdr, [16 x i8] }
%struct.sctpnetlisthead = type { %struct.sctp_nets*, %struct.sctp_nets** }
%struct.scheduling_data = type { %struct.sctp_stream_out*, %struct.sctp_stream_out*, %union.anon.32 }
%union.anon.32 = type { %struct.sctpwheel_listhead }
%struct.sctpwheel_listhead = type { %struct.sctp_stream_out*, %struct.sctp_stream_out** }
%struct.sctp_asconf_ackhead = type { %struct.sctp_asconf_ack*, %struct.sctp_asconf_ack** }
%struct.sctp_asconf_ack = type { %struct.anon.34, i32, %struct.sctp_nets*, %struct.mbuf*, i16 }
%struct.anon.34 = type { %struct.sctp_asconf_ack*, %struct.sctp_asconf_ack** }
%struct.sctp_stream_in = type { %struct.sctp_readhead, %struct.sctp_readhead, i32, i16, i8, i8 }
%struct.sctp_stream_out = type { %struct.sctp_streamhead, %union.scheduling_parameters, i32, [1 x i32], [1 x i32], i32, i32, i16, i8, i8 }
%struct.sctp_streamhead = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%struct.sctp_stream_queue_pending = type { %struct.mbuf*, %struct.mbuf*, %struct.timeval, %struct.sctp_nets*, %struct.anon.27, %struct.anon.28, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8 }
%struct.anon.27 = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%struct.anon.28 = type { %struct.sctp_stream_queue_pending*, %struct.sctp_stream_queue_pending** }
%union.scheduling_parameters = type { %struct.ss_prio }
%struct.ss_prio = type { %struct.anon.30, i16 }
%struct.anon.30 = type { %struct.sctp_stream_out*, %struct.sctp_stream_out** }
%struct.sctp_resethead = type { %struct.sctp_stream_reset_list*, %struct.sctp_stream_reset_list** }
%struct.sctp_stream_reset_list = type { %struct.anon.37, i32, i32, i32, [0 x i16] }
%struct.anon.37 = type { %struct.sctp_stream_reset_list*, %struct.sctp_stream_reset_list** }
%struct.sctp_cc_functions = type { void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_pktdrop_chunk*, i32*, i32*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_nets*, %struct.sctp_tmit_chunk*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*)*, i32 (%struct.sctp_tcb*, i32, %struct.sctp_cc_option*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.timeval*)* }
%struct.sctp_pktdrop_chunk = type { %struct.sctp_chunkhdr, i32, i32, i16, i16, [0 x i8] }
%struct.sctp_chunkhdr = type { i8, i8, i16 }
%struct.sctp_cc_option = type { i32, %struct.sctp_assoc_value }
%struct.sctp_assoc_value = type { i32, i32 }
%struct.sctp_ss_functions = type { void (%struct.sctp_tcb*, %struct.sctp_association*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_association*, i32, i32)*, void (%struct.sctp_tcb*, %struct.sctp_stream_out*, %struct.sctp_stream_out*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, %struct.sctp_stream_queue_pending*, i32)*, %struct.sctp_stream_out* (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*, %struct.sctp_stream_out*, i32)*, void (%struct.sctp_tcb*, %struct.sctp_nets*, %struct.sctp_association*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16*)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*, %struct.sctp_stream_out*, i16)*, i32 (%struct.sctp_tcb*, %struct.sctp_association*)* }
%struct.sctp_authinformation = type { %struct.sctp_key*, i32, %struct.sctp_key*, %struct.sctp_key*, %struct.sctp_key*, i16, i16, i16 }
%struct.sctp_scoping = type { i8, i8, i8, i8, i8, i8, i8 }
%struct.sctp_vrflist = type { %struct.sctp_vrf* }
%struct.sctppcbhead = type { %struct.sctp_inpcb* }
%struct.sctpladdr = type { %struct.sctp_laddr* }
%struct.sctpvtaghead = type { %struct.sctp_tagblock* }
%struct.sctp_tagblock = type { %struct.anon.39, [15 x %struct.sctp_timewait] }
%struct.anon.39 = type { %struct.sctp_tagblock*, %struct.sctp_tagblock** }
%struct.sctp_timewait = type { i32, i32, i16, i16 }
%struct.sctp_timer = type { %struct.sctp_callout, i32, i8*, i8*, i8*, i8*, i32, i32 }
%struct.sctp_callout = type { %struct.anon.21, i32, i8*, void (i8*)*, i32 }
%struct.anon.21 = type { %struct.sctp_callout*, %struct.sctp_callout** }
%struct.calloutlist = type { %struct.sctp_callout*, %struct.sctp_callout** }
%struct.sctpstat = type { %struct.sctp_timeval, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [11 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [31 x i32] }
%struct.sctp_timeval = type { i32, i32 }
%struct.sctp_sysctl = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.pthread_mutexattr_t = type { i32 }
%struct.sctp_auth_hmac_algo = type { %struct.sctp_paramhdr, [0 x i16] }
%union.sctp_hash_context = type { %struct.sctp_sha1_context }
%struct.sctp_sha1_context = type { %struct.sha_state_st }
%struct.sha_state_st = type { %union.anon.51, i32, i32, [64 x i8], i32 }
%union.anon.51 = type { [5 x i32] }
%struct.sctp_auth_chunk_list = type { %struct.sctp_paramhdr, [0 x i8] }
%struct.sctp_auth_random = type { %struct.sctp_paramhdr, [0 x i8] }
%struct.sctp_auth_chunk = type { %struct.sctp_chunkhdr, i16, i16, [0 x i8] }

@system_base_info = external global %struct.sctp_base_info, align 8
@.str = private unnamed_addr constant [16 x i8] c"%s: [Null key]\0A\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"%s: len %u, \00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"%02x\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"[Null key]\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_clear_chunklist(%struct.sctp_auth_chklist* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %0, i64 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 257, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.sctp_auth_chklist* @sctp_alloc_chunklist() local_unnamed_addr #0 {
  %1 = tail call noalias i8* @malloc(i64 257) #11
  %2 = bitcast i8* %1 to %struct.sctp_auth_chklist*
  %3 = icmp eq i8* %1, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %0
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %1, i8 0, i64 257, i1 false) #11
  br label %5

5:                                                ; preds = %0, %4
  ret %struct.sctp_auth_chklist* %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_free_chunklist(%struct.sctp_auth_chklist*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.sctp_auth_chklist* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %0, i64 0, i32 0, i64 0
  tail call void @free(i8* %4) #11
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.sctp_auth_chklist* @sctp_copy_chunklist(%struct.sctp_auth_chklist* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.sctp_auth_chklist* %0, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %1
  %4 = tail call noalias i8* @malloc(i64 257) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = bitcast i8* %4 to %struct.sctp_auth_chklist*
  %8 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %0, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %4, i8* align 1 %8, i64 257, i1 false)
  br label %9

9:                                                ; preds = %3, %1, %6
  %10 = phi %struct.sctp_auth_chklist* [ %7, %6 ], [ null, %1 ], [ null, %3 ]
  ret %struct.sctp_auth_chklist* %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @sctp_auth_add_chunk(i8 zeroext, %struct.sctp_auth_chklist*) local_unnamed_addr #4 {
  %3 = icmp eq %struct.sctp_auth_chklist* %1, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  switch i8 %0, label %5 [
    i8 1, label %14
    i8 2, label %14
    i8 14, label %14
    i8 15, label %14
  ]

5:                                                ; preds = %4
  %6 = zext i8 %0 to i64
  %7 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %1, i64 0, i32 0, i64 %6
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %5
  store i8 1, i8* %7, align 1
  %11 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %1, i64 0, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = add i8 %12, 1
  store i8 %13, i8* %11, align 1
  br label %14

14:                                               ; preds = %5, %10, %4, %4, %4, %4, %2
  %15 = phi i32 [ -1, %2 ], [ -1, %4 ], [ -1, %4 ], [ -1, %4 ], [ -1, %4 ], [ 0, %10 ], [ 0, %5 ]
  ret i32 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @sctp_auth_delete_chunk(i8 zeroext, %struct.sctp_auth_chklist*) local_unnamed_addr #4 {
  %3 = icmp eq %struct.sctp_auth_chklist* %1, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = zext i8 %0 to i64
  %6 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %1, i64 0, i32 0, i64 %5
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 1
  br i1 %8, label %9, label %13

9:                                                ; preds = %4
  store i8 0, i8* %6, align 1
  %10 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %1, i64 0, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = add i8 %11, -1
  store i8 %12, i8* %10, align 1
  br label %13

13:                                               ; preds = %4, %9, %2
  %14 = phi i32 [ -1, %2 ], [ 0, %9 ], [ 0, %4 ]
  ret i32 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @sctp_auth_get_chklist_size(%struct.sctp_auth_chklist* readonly) local_unnamed_addr #5 {
  %2 = icmp eq %struct.sctp_auth_chklist* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i64
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi i64 [ %6, %3 ], [ 0, %1 ]
  ret i64 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @sctp_serialize_auth_chunks(%struct.sctp_auth_chklist* readonly, i8* nocapture) local_unnamed_addr #4 {
  %3 = icmp eq %struct.sctp_auth_chklist* %0, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2, %30
  %5 = phi i64 [ %33, %30 ], [ 0, %2 ]
  %6 = phi i32 [ %32, %30 ], [ 0, %2 ]
  %7 = phi i32 [ %34, %30 ], [ 0, %2 ]
  %8 = phi i8* [ %31, %30 ], [ %1, %2 ]
  %9 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %0, i64 0, i32 0, i64 %5
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = trunc i32 %7 to i8
  %14 = getelementptr inbounds i8, i8* %8, i64 1
  store i8 %13, i8* %8, align 1
  %15 = add nsw i32 %6, 1
  br label %16

16:                                               ; preds = %4, %12
  %17 = phi i8* [ %14, %12 ], [ %8, %4 ]
  %18 = phi i32 [ %15, %12 ], [ %6, %4 ]
  %19 = or i64 %5, 1
  %20 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %0, i64 0, i32 0, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %30, label %25

23:                                               ; preds = %30, %2
  %24 = phi i32 [ 0, %2 ], [ %32, %30 ]
  ret i32 %24

25:                                               ; preds = %16
  %26 = trunc i32 %7 to i8
  %27 = or i8 %26, 1
  %28 = getelementptr inbounds i8, i8* %17, i64 1
  store i8 %27, i8* %17, align 1
  %29 = add nsw i32 %18, 1
  br label %30

30:                                               ; preds = %25, %16
  %31 = phi i8* [ %28, %25 ], [ %17, %16 ]
  %32 = phi i32 [ %29, %25 ], [ %18, %16 ]
  %33 = add nuw nsw i64 %5, 2
  %34 = add nuw nsw i32 %7, 2
  %35 = icmp eq i64 %33, 256
  br i1 %35, label %23, label %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @sctp_pack_auth_chunks(%struct.sctp_auth_chklist* readonly, i8* nocapture) local_unnamed_addr #4 {
  %3 = icmp eq %struct.sctp_auth_chklist* %0, null
  br i1 %3, label %47, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp ult i8 %6, 33
  br i1 %7, label %8, label %27

8:                                                ; preds = %4, %54
  %9 = phi i64 [ %57, %54 ], [ 0, %4 ]
  %10 = phi i32 [ %56, %54 ], [ 0, %4 ]
  %11 = phi i32 [ %58, %54 ], [ 0, %4 ]
  %12 = phi i8* [ %55, %54 ], [ %1, %4 ]
  %13 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %0, i64 0, i32 0, i64 %9
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %8
  %17 = trunc i32 %11 to i8
  %18 = getelementptr inbounds i8, i8* %12, i64 1
  store i8 %17, i8* %12, align 1
  %19 = add nsw i32 %10, 1
  br label %20

20:                                               ; preds = %8, %16
  %21 = phi i8* [ %18, %16 ], [ %12, %8 ]
  %22 = phi i32 [ %19, %16 ], [ %10, %8 ]
  %23 = or i64 %9, 1
  %24 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %0, i64 0, i32 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %54, label %49

27:                                               ; preds = %4, %70
  %28 = phi i64 [ %71, %70 ], [ 0, %4 ]
  %29 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %0, i64 0, i32 0, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %42, label %32

32:                                               ; preds = %27
  %33 = trunc i64 %28 to i32
  %34 = lshr i64 %28, 3
  %35 = and i32 %33, 6
  %36 = shl i32 1, %35
  %37 = and i64 %34, 536870911
  %38 = getelementptr inbounds i8, i8* %1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i32 %36 to i8
  %41 = or i8 %39, %40
  store i8 %41, i8* %38, align 1
  br label %42

42:                                               ; preds = %27, %32
  %43 = or i64 %28, 1
  %44 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %0, i64 0, i32 0, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %70, label %60

47:                                               ; preds = %70, %54, %2
  %48 = phi i32 [ 0, %2 ], [ %56, %54 ], [ 32, %70 ]
  ret i32 %48

49:                                               ; preds = %20
  %50 = trunc i32 %11 to i8
  %51 = or i8 %50, 1
  %52 = getelementptr inbounds i8, i8* %21, i64 1
  store i8 %51, i8* %21, align 1
  %53 = add nsw i32 %22, 1
  br label %54

54:                                               ; preds = %49, %20
  %55 = phi i8* [ %52, %49 ], [ %21, %20 ]
  %56 = phi i32 [ %53, %49 ], [ %22, %20 ]
  %57 = add nuw nsw i64 %9, 2
  %58 = add nuw nsw i32 %11, 2
  %59 = icmp eq i64 %57, 256
  br i1 %59, label %47, label %8

60:                                               ; preds = %42
  %61 = trunc i64 %43 to i32
  %62 = lshr i64 %28, 3
  %63 = and i32 %61, 7
  %64 = shl i32 1, %63
  %65 = and i64 %62, 536870911
  %66 = getelementptr inbounds i8, i8* %1, i64 %65
  %67 = load i8, i8* %66, align 1
  %68 = trunc i32 %64 to i8
  %69 = or i8 %67, %68
  store i8 %69, i8* %66, align 1
  br label %70

70:                                               ; preds = %60, %42
  %71 = add nuw nsw i64 %28, 2
  %72 = icmp eq i64 %71, 256
  br i1 %72, label %47, label %27
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @sctp_unpack_auth_chunks(i8* nocapture readonly, i8 zeroext, %struct.sctp_auth_chklist*) local_unnamed_addr #4 {
  %4 = icmp eq %struct.sctp_auth_chklist* %2, null
  br i1 %4, label %73, label %5

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32
  %7 = icmp ult i8 %1, 33
  br i1 %7, label %10, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %2, i64 0, i32 1
  br label %34

10:                                               ; preds = %5
  %11 = icmp eq i8 %1, 0
  br i1 %11, label %73, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %2, i64 0, i32 1
  %14 = and i32 %6, 1
  %15 = icmp eq i8 %1, 1
  br i1 %15, label %60, label %16

16:                                               ; preds = %12
  %17 = sub nsw i32 %6, %14
  br label %18

18:                                               ; preds = %190, %16
  %19 = phi i8* [ %0, %16 ], [ %32, %190 ]
  %20 = phi i32 [ %17, %16 ], [ %191, %190 ]
  %21 = getelementptr inbounds i8, i8* %19, i64 1
  %22 = load i8, i8* %19, align 1
  switch i8 %22, label %23 [
    i8 1, label %31
    i8 2, label %31
    i8 14, label %31
    i8 15, label %31
  ]

23:                                               ; preds = %18
  %24 = zext i8 %22 to i64
  %25 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %2, i64 0, i32 0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  store i8 1, i8* %25, align 1
  %29 = load i8, i8* %13, align 1
  %30 = add i8 %29, 1
  store i8 %30, i8* %13, align 1
  br label %31

31:                                               ; preds = %18, %18, %18, %18, %23, %28
  %32 = getelementptr inbounds i8, i8* %19, i64 2
  %33 = load i8, i8* %21, align 1
  switch i8 %33, label %182 [
    i8 1, label %190
    i8 2, label %190
    i8 14, label %190
    i8 15, label %190
  ]

34:                                               ; preds = %178, %8
  %35 = phi i64 [ 0, %8 ], [ %179, %178 ]
  %36 = phi i32 [ 0, %8 ], [ %180, %178 ]
  %37 = getelementptr inbounds i8, i8* %0, i64 %35
  %38 = shl nsw i64 %35, 3
  %39 = shl nsw i32 %36, 3
  %40 = load i8, i8* %37, align 1
  %41 = zext i8 %40 to i32
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %53, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %2, i64 0, i32 0, i64 %38
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %44
  store i8 1, i8* %45, align 1
  %49 = load i8, i8* %9, align 1
  %50 = add i8 %49, 1
  store i8 %50, i8* %9, align 1
  %51 = load i8, i8* %37, align 1
  %52 = zext i8 %51 to i32
  br label %53

53:                                               ; preds = %48, %44, %34
  %54 = phi i32 [ %52, %48 ], [ %41, %44 ], [ %41, %34 ]
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = trunc i32 %39 to i8
  %58 = icmp eq i8 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %85, label %75

60:                                               ; preds = %190, %12
  %61 = phi i8* [ %0, %12 ], [ %32, %190 ]
  %62 = icmp eq i32 %14, 0
  br i1 %62, label %73, label %63

63:                                               ; preds = %60
  %64 = load i8, i8* %61, align 1
  switch i8 %64, label %65 [
    i8 1, label %73
    i8 2, label %73
    i8 14, label %73
    i8 15, label %73
  ]

65:                                               ; preds = %63
  %66 = zext i8 %64 to i64
  %67 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %2, i64 0, i32 0, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %65
  store i8 1, i8* %67, align 1
  %71 = load i8, i8* %13, align 1
  %72 = add i8 %71, 1
  store i8 %72, i8* %13, align 1
  br label %73

73:                                               ; preds = %178, %60, %63, %63, %63, %63, %65, %70, %10, %3
  %74 = phi i32 [ 0, %3 ], [ 0, %10 ], [ %6, %70 ], [ %6, %65 ], [ %6, %63 ], [ %6, %63 ], [ %6, %63 ], [ %6, %63 ], [ %6, %60 ], [ 32, %178 ]
  ret i32 %74

75:                                               ; preds = %53
  %76 = or i64 %38, 1
  %77 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %2, i64 0, i32 0, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %85

80:                                               ; preds = %75
  store i8 1, i8* %77, align 1
  %81 = load i8, i8* %9, align 1
  %82 = add i8 %81, 1
  store i8 %82, i8* %9, align 1
  %83 = load i8, i8* %37, align 1
  %84 = zext i8 %83 to i32
  br label %85

85:                                               ; preds = %80, %75, %53
  %86 = phi i32 [ %84, %80 ], [ %54, %75 ], [ %54, %53 ]
  %87 = and i32 %86, 4
  %88 = icmp eq i32 %87, 0
  %89 = trunc i32 %39 to i8
  %90 = icmp eq i8 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %102, label %92

92:                                               ; preds = %85
  %93 = or i64 %38, 2
  %94 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %2, i64 0, i32 0, i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %102

97:                                               ; preds = %92
  store i8 1, i8* %94, align 1
  %98 = load i8, i8* %9, align 1
  %99 = add i8 %98, 1
  store i8 %99, i8* %9, align 1
  %100 = load i8, i8* %37, align 1
  %101 = zext i8 %100 to i32
  br label %102

102:                                              ; preds = %97, %92, %85
  %103 = phi i32 [ %101, %97 ], [ %86, %92 ], [ %86, %85 ]
  %104 = and i32 %103, 8
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %116, label %106

106:                                              ; preds = %102
  %107 = or i64 %38, 3
  %108 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %2, i64 0, i32 0, i64 %107
  %109 = load i8, i8* %108, align 1
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %106
  store i8 1, i8* %108, align 1
  %112 = load i8, i8* %9, align 1
  %113 = add i8 %112, 1
  store i8 %113, i8* %9, align 1
  %114 = load i8, i8* %37, align 1
  %115 = zext i8 %114 to i32
  br label %116

116:                                              ; preds = %111, %106, %102
  %117 = phi i32 [ %115, %111 ], [ %103, %106 ], [ %103, %102 ]
  %118 = and i32 %117, 16
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %130, label %120

120:                                              ; preds = %116
  %121 = or i64 %38, 4
  %122 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %2, i64 0, i32 0, i64 %121
  %123 = load i8, i8* %122, align 1
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %130

125:                                              ; preds = %120
  store i8 1, i8* %122, align 1
  %126 = load i8, i8* %9, align 1
  %127 = add i8 %126, 1
  store i8 %127, i8* %9, align 1
  %128 = load i8, i8* %37, align 1
  %129 = zext i8 %128 to i32
  br label %130

130:                                              ; preds = %125, %120, %116
  %131 = phi i32 [ %129, %125 ], [ %117, %120 ], [ %117, %116 ]
  %132 = and i32 %131, 32
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %144, label %134

134:                                              ; preds = %130
  %135 = or i64 %38, 5
  %136 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %2, i64 0, i32 0, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %139, label %144

139:                                              ; preds = %134
  store i8 1, i8* %136, align 1
  %140 = load i8, i8* %9, align 1
  %141 = add i8 %140, 1
  store i8 %141, i8* %9, align 1
  %142 = load i8, i8* %37, align 1
  %143 = zext i8 %142 to i32
  br label %144

144:                                              ; preds = %139, %134, %130
  %145 = phi i32 [ %143, %139 ], [ %131, %134 ], [ %131, %130 ]
  %146 = and i32 %145, 64
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %162, label %148

148:                                              ; preds = %144
  %149 = trunc i32 %39 to i8
  %150 = or i8 %149, 6
  %151 = icmp eq i8 %150, 14
  br i1 %151, label %162, label %152

152:                                              ; preds = %148
  %153 = or i64 %38, 6
  %154 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %2, i64 0, i32 0, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %157, label %162

157:                                              ; preds = %152
  store i8 1, i8* %154, align 1
  %158 = load i8, i8* %9, align 1
  %159 = add i8 %158, 1
  store i8 %159, i8* %9, align 1
  %160 = load i8, i8* %37, align 1
  %161 = zext i8 %160 to i32
  br label %162

162:                                              ; preds = %148, %157, %152, %144
  %163 = phi i32 [ %161, %157 ], [ %145, %152 ], [ %145, %148 ], [ %145, %144 ]
  %164 = trunc i32 %163 to i8
  %165 = icmp sgt i8 %164, -1
  br i1 %165, label %178, label %166

166:                                              ; preds = %162
  %167 = trunc i32 %39 to i8
  %168 = or i8 %167, 7
  %169 = icmp eq i8 %168, 15
  br i1 %169, label %178, label %170

170:                                              ; preds = %166
  %171 = or i64 %38, 7
  %172 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %2, i64 0, i32 0, i64 %171
  %173 = load i8, i8* %172, align 1
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %175, label %178

175:                                              ; preds = %170
  store i8 1, i8* %172, align 1
  %176 = load i8, i8* %9, align 1
  %177 = add i8 %176, 1
  store i8 %177, i8* %9, align 1
  br label %178

178:                                              ; preds = %166, %175, %170, %162
  %179 = add nuw nsw i64 %35, 1
  %180 = add nuw nsw i32 %36, 1
  %181 = icmp eq i64 %179, 32
  br i1 %181, label %73, label %34

182:                                              ; preds = %31
  %183 = zext i8 %33 to i64
  %184 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %2, i64 0, i32 0, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %187, label %190

187:                                              ; preds = %182
  store i8 1, i8* %184, align 1
  %188 = load i8, i8* %13, align 1
  %189 = add i8 %188, 1
  store i8 %189, i8* %13, align 1
  br label %190

190:                                              ; preds = %187, %182, %31, %31, %31, %31
  %191 = add i32 %20, -2
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %60, label %18
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %struct.sctp_key* @sctp_alloc_key(i32) local_unnamed_addr #6 {
  %2 = zext i32 %0 to i64
  %3 = add nuw nsw i64 %2, 4
  %4 = tail call noalias i8* @malloc(i64 %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = bitcast i8* %4 to %struct.sctp_key*
  %8 = bitcast i8* %4 to i32*
  store i32 %0, i32* %8, align 4
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi %struct.sctp_key* [ %7, %6 ], [ null, %1 ]
  ret %struct.sctp_key* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_free_key(%struct.sctp_key*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.sctp_key* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sctp_key* %0 to i8*
  tail call void @free(i8* %4) #11
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_print_key(%struct.sctp_key* readonly, i8*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.sctp_key* %0, null
  %4 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %5 = icmp ne void (i8*, ...)* %4, null
  br i1 %3, label %6, label %8

6:                                                ; preds = %2
  br i1 %5, label %7, label %42

7:                                                ; preds = %6
  tail call void (i8*, ...) %4(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* %1) #11
  br label %42

8:                                                ; preds = %2
  br i1 %5, label %9, label %12

9:                                                ; preds = %8
  %10 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  tail call void (i8*, ...) %4(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i8* %1, i32 %11) #11
  br label %12

12:                                               ; preds = %9, %8
  %13 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  br i1 %15, label %39, label %17

17:                                               ; preds = %12
  %18 = icmp ne void (i8*, ...)* %16, null
  br label %19

19:                                               ; preds = %17, %30
  %20 = phi void (i8*, ...)* [ %16, %17 ], [ %31, %30 ]
  %21 = phi i32 [ %14, %17 ], [ %32, %30 ]
  %22 = phi i64 [ 0, %17 ], [ %33, %30 ]
  %23 = phi i1 [ %18, %17 ], [ %36, %30 ]
  br i1 %23, label %24, label %30

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %0, i64 0, i32 1, i64 %22
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  tail call void (i8*, ...) %20(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i32 %27) #11
  %28 = load i32, i32* %13, align 4
  %29 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  br label %30

30:                                               ; preds = %19, %24
  %31 = phi void (i8*, ...)* [ %20, %19 ], [ %29, %24 ]
  %32 = phi i32 [ %21, %19 ], [ %28, %24 ]
  %33 = add nuw nsw i64 %22, 1
  %34 = zext i32 %32 to i64
  %35 = icmp ult i64 %33, %34
  %36 = icmp ne void (i8*, ...)* %31, null
  br i1 %35, label %19, label %37

37:                                               ; preds = %30
  br i1 %36, label %38, label %42

38:                                               ; preds = %37
  tail call void (i8*, ...) %31(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #11
  br label %42

39:                                               ; preds = %12
  %40 = icmp eq void (i8*, ...)* %16, null
  br i1 %40, label %42, label %41

41:                                               ; preds = %39
  tail call void (i8*, ...) %16(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)) #11
  br label %42

42:                                               ; preds = %38, %37, %41, %39, %6, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_show_key(%struct.sctp_key* readonly, i8*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.sctp_key* %0, null
  %4 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  %5 = icmp ne void (i8*, ...)* %4, null
  br i1 %3, label %6, label %8

6:                                                ; preds = %2
  br i1 %5, label %7, label %42

7:                                                ; preds = %6
  tail call void (i8*, ...) %4(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* %1) #11
  br label %42

8:                                                ; preds = %2
  br i1 %5, label %9, label %12

9:                                                ; preds = %8
  %10 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  tail call void (i8*, ...) %4(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i8* %1, i32 %11) #11
  br label %12

12:                                               ; preds = %9, %8
  %13 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  br i1 %15, label %39, label %17

17:                                               ; preds = %12
  %18 = icmp ne void (i8*, ...)* %16, null
  br label %19

19:                                               ; preds = %17, %30
  %20 = phi void (i8*, ...)* [ %16, %17 ], [ %31, %30 ]
  %21 = phi i32 [ %14, %17 ], [ %32, %30 ]
  %22 = phi i64 [ 0, %17 ], [ %33, %30 ]
  %23 = phi i1 [ %18, %17 ], [ %36, %30 ]
  br i1 %23, label %24, label %30

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %0, i64 0, i32 1, i64 %22
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  tail call void (i8*, ...) %20(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i32 %27) #11
  %28 = load i32, i32* %13, align 4
  %29 = load void (i8*, ...)*, void (i8*, ...)** getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 12), align 8
  br label %30

30:                                               ; preds = %19, %24
  %31 = phi void (i8*, ...)* [ %20, %19 ], [ %29, %24 ]
  %32 = phi i32 [ %21, %19 ], [ %28, %24 ]
  %33 = add nuw nsw i64 %22, 1
  %34 = zext i32 %32 to i64
  %35 = icmp ult i64 %33, %34
  %36 = icmp ne void (i8*, ...)* %31, null
  br i1 %35, label %19, label %37

37:                                               ; preds = %30
  br i1 %36, label %38, label %42

38:                                               ; preds = %37
  tail call void (i8*, ...) %31(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #11
  br label %42

39:                                               ; preds = %12
  %40 = icmp eq void (i8*, ...)* %16, null
  br i1 %40, label %42, label %41

41:                                               ; preds = %39
  tail call void (i8*, ...) %16(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)) #11
  br label %42

42:                                               ; preds = %38, %37, %41, %39, %6, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sctp_key* @sctp_generate_random_key(i32) local_unnamed_addr #0 {
  %2 = zext i32 %0 to i64
  %3 = add nuw nsw i64 %2, 4
  %4 = tail call noalias i8* @malloc(i64 %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = bitcast i8* %4 to i32*
  store i32 %0, i32* %7, align 4
  %8 = bitcast i8* %4 to %struct.sctp_key*
  %9 = getelementptr inbounds i8, i8* %4, i64 4
  tail call void @read_random(i8* %9, i64 %2) #11
  store i32 %0, i32* %7, align 4
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi %struct.sctp_key* [ %8, %6 ], [ null, %1 ]
  ret %struct.sctp_key* %11
}

declare void @read_random(i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sctp_key* @sctp_set_key(i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = zext i32 %1 to i64
  %4 = add nuw nsw i64 %3, 4
  %5 = tail call noalias i8* @malloc(i64 %4) #11
  %6 = icmp eq i8* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = bitcast i8* %5 to i32*
  store i32 %1, i32* %8, align 4
  %9 = bitcast i8* %5 to %struct.sctp_key*
  %10 = getelementptr inbounds i8, i8* %5, i64 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 1 %0, i64 %3, i1 false)
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi %struct.sctp_key* [ %9, %7 ], [ null, %2 ]
  ret %struct.sctp_key* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.sctp_key* @sctp_compute_hashkey(%struct.sctp_key* readonly, %struct.sctp_key* readonly, %struct.sctp_key* readonly) local_unnamed_addr #0 {
  %4 = icmp eq %struct.sctp_key* %0, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  br label %8

8:                                                ; preds = %3, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %3 ]
  %10 = icmp eq %struct.sctp_key* %1, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %8, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %8 ]
  %16 = add i32 %15, %9
  %17 = icmp eq %struct.sctp_key* %2, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %2, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br label %21

21:                                               ; preds = %14, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %14 ]
  %23 = add i32 %16, %22
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %149, label %25

25:                                               ; preds = %21
  %26 = zext i32 %23 to i64
  %27 = add nuw nsw i64 %26, 4
  %28 = tail call noalias i8* @malloc(i64 %27) #11
  %29 = icmp eq i8* %28, null
  br i1 %29, label %149, label %30

30:                                               ; preds = %25
  %31 = bitcast i8* %28 to %struct.sctp_key*
  %32 = bitcast i8* %28 to i32*
  store i32 %23, i32* %32, align 4
  %33 = getelementptr inbounds i8, i8* %28, i64 4
  br i1 %4, label %37, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %0, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br label %37

37:                                               ; preds = %34, %30
  %38 = phi i32 [ %36, %34 ], [ 0, %30 ]
  br i1 %10, label %42, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %1, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br label %42

42:                                               ; preds = %39, %37
  %43 = phi i32 [ %41, %39 ], [ 0, %37 ]
  %44 = or i32 %43, %38
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %88, label %46

46:                                               ; preds = %42
  %47 = icmp eq i32 %43, 0
  %48 = icmp eq i32 %38, 0
  %49 = or i1 %48, %47
  %50 = select i1 %48, i32 -1, i32 1
  br i1 %49, label %88, label %51

51:                                               ; preds = %46
  %52 = icmp ult i32 %38, %43
  %53 = select i1 %52, i32 %43, i32 %38
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %84, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %1, i64 0, i32 1, i64 0
  %57 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %0, i64 0, i32 1, i64 0
  %58 = sub i32 %53, %38
  %59 = sub i32 %53, %43
  br label %62

60:                                               ; preds = %81
  %61 = icmp ult i32 %83, %53
  br i1 %61, label %62, label %84

62:                                               ; preds = %60, %55
  %63 = phi i8* [ %56, %55 ], [ %78, %60 ]
  %64 = phi i8* [ %57, %55 ], [ %71, %60 ]
  %65 = phi i32 [ 0, %55 ], [ %83, %60 ]
  %66 = icmp ult i32 %65, %58
  br i1 %66, label %70, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds i8, i8* %64, i64 1
  %69 = load i8, i8* %64, align 1
  br label %70

70:                                               ; preds = %67, %62
  %71 = phi i8* [ %64, %62 ], [ %68, %67 ]
  %72 = phi i8 [ 0, %62 ], [ %69, %67 ]
  %73 = icmp ult i32 %65, %59
  br i1 %73, label %77, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds i8, i8* %63, i64 1
  %76 = load i8, i8* %63, align 1
  br label %77

77:                                               ; preds = %74, %70
  %78 = phi i8* [ %63, %70 ], [ %75, %74 ]
  %79 = phi i8 [ 0, %70 ], [ %76, %74 ]
  %80 = icmp ugt i8 %72, %79
  br i1 %80, label %88, label %81

81:                                               ; preds = %77
  %82 = icmp ult i8 %72, %79
  %83 = add nuw i32 %65, 1
  br i1 %82, label %88, label %60

84:                                               ; preds = %60, %51
  %85 = icmp eq i32 %38, %43
  %86 = select i1 %52, i32 -1, i32 1
  %87 = select i1 %85, i32 0, i32 %86
  br label %88

88:                                               ; preds = %77, %81, %42, %46, %84
  %89 = phi i32 [ %87, %84 ], [ 0, %42 ], [ %50, %46 ], [ 1, %77 ], [ -1, %81 ]
  %90 = icmp slt i32 %89, 1
  br i1 %17, label %95, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %2, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp ne i32 %93, 0
  br label %95

95:                                               ; preds = %88, %91
  %96 = phi i1 [ %94, %91 ], [ false, %88 ]
  br i1 %90, label %97, label %123

97:                                               ; preds = %95
  br i1 %96, label %98, label %104

98:                                               ; preds = %97
  %99 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %2, i64 0, i32 1, i64 0
  %100 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %2, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = zext i32 %101 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 4 %99, i64 %102, i1 false)
  %103 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %31, i64 0, i32 1, i64 %102
  br label %104

104:                                              ; preds = %98, %97
  %105 = phi i8* [ %103, %98 ], [ %33, %97 ]
  br i1 %4, label %114, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %0, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %0, i64 0, i32 1, i64 0
  %112 = zext i32 %108 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %105, i8* align 4 %111, i64 %112, i1 false)
  %113 = getelementptr inbounds i8, i8* %105, i64 %112
  br label %114

114:                                              ; preds = %104, %106, %110
  %115 = phi i8* [ %113, %110 ], [ %105, %106 ], [ %105, %104 ]
  br i1 %10, label %149, label %116

116:                                              ; preds = %114
  %117 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %1, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %149, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %1, i64 0, i32 1, i64 0
  %122 = zext i32 %118 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %115, i8* align 4 %121, i64 %122, i1 false)
  br label %149

123:                                              ; preds = %95
  br i1 %96, label %124, label %130

124:                                              ; preds = %123
  %125 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %2, i64 0, i32 1, i64 0
  %126 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %2, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = zext i32 %127 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 4 %125, i64 %128, i1 false)
  %129 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %31, i64 0, i32 1, i64 %128
  br label %130

130:                                              ; preds = %124, %123
  %131 = phi i8* [ %129, %124 ], [ %33, %123 ]
  br i1 %10, label %140, label %132

132:                                              ; preds = %130
  %133 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %1, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %140, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %1, i64 0, i32 1, i64 0
  %138 = zext i32 %134 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %131, i8* align 4 %137, i64 %138, i1 false)
  %139 = getelementptr inbounds i8, i8* %131, i64 %138
  br label %140

140:                                              ; preds = %130, %132, %136
  %141 = phi i8* [ %139, %136 ], [ %131, %132 ], [ %131, %130 ]
  br i1 %4, label %149, label %142

142:                                              ; preds = %140
  %143 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %0, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %149, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %0, i64 0, i32 1, i64 0
  %148 = zext i32 %144 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %141, i8* align 4 %147, i64 %148, i1 false)
  br label %149

149:                                              ; preds = %140, %114, %25, %120, %146, %142, %116, %21
  %150 = phi %struct.sctp_key* [ null, %21 ], [ %31, %116 ], [ %31, %142 ], [ %31, %146 ], [ %31, %120 ], [ null, %25 ], [ %31, %114 ], [ %31, %140 ]
  ret %struct.sctp_key* %150
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %struct.sctp_shared_key* @sctp_alloc_sharedkey() local_unnamed_addr #6 {
  %1 = tail call noalias i8* @malloc(i64 32) #11
  %2 = icmp eq i8* %1, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %0
  %4 = bitcast i8* %1 to %struct.sctp_shared_key*
  %5 = getelementptr inbounds i8, i8* %1, i64 28
  %6 = bitcast i8* %5 to i16*
  store i16 0, i16* %6, align 4
  %7 = getelementptr inbounds i8, i8* %1, i64 16
  %8 = bitcast i8* %7 to %struct.sctp_key**
  store %struct.sctp_key* null, %struct.sctp_key** %8, align 8
  %9 = getelementptr inbounds i8, i8* %1, i64 24
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %1, i64 30
  store i8 0, i8* %11, align 2
  br label %12

12:                                               ; preds = %0, %3
  %13 = phi %struct.sctp_shared_key* [ %4, %3 ], [ null, %0 ]
  ret %struct.sctp_shared_key* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_free_sharedkey(%struct.sctp_shared_key*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.sctp_shared_key* %0, null
  br i1 %2, label %15, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %0, i64 0, i32 2
  %5 = atomicrmw add i32* %4, i32 -1 seq_cst
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %0, i64 0, i32 1
  %9 = load %struct.sctp_key*, %struct.sctp_key** %8, align 8
  %10 = icmp eq %struct.sctp_key* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = bitcast %struct.sctp_key* %9 to i8*
  tail call void @free(i8* %12) #11
  br label %13

13:                                               ; preds = %7, %11
  %14 = bitcast %struct.sctp_shared_key* %0 to i8*
  tail call void @free(i8* %14) #11
  br label %15

15:                                               ; preds = %1, %13, %3
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.sctp_shared_key* @sctp_find_sharedkey(%struct.sctp_keyhead* nocapture readonly, i16 zeroext) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %struct.sctp_keyhead, %struct.sctp_keyhead* %0, i64 0, i32 0
  %4 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %3, align 8
  %5 = icmp eq %struct.sctp_shared_key* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2, %11
  %7 = phi %struct.sctp_shared_key* [ %13, %11 ], [ %4, %2 ]
  %8 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %7, i64 0, i32 3
  %9 = load i16, i16* %8, align 4
  %10 = icmp eq i16 %9, %1
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %7, i64 0, i32 0, i32 0
  %13 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %12, align 8
  %14 = icmp eq %struct.sctp_shared_key* %13, null
  br i1 %14, label %15, label %6

15:                                               ; preds = %6, %11, %2
  %16 = phi %struct.sctp_shared_key* [ null, %2 ], [ null, %11 ], [ %7, %6 ]
  ret %struct.sctp_shared_key* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_insert_sharedkey(%struct.sctp_keyhead*, %struct.sctp_shared_key*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.sctp_keyhead* %0, null
  %4 = icmp eq %struct.sctp_shared_key* %1, null
  %5 = or i1 %3, %4
  br i1 %5, label %80, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sctp_keyhead, %struct.sctp_keyhead* %0, i64 0, i32 0
  %8 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %7, align 8
  %9 = icmp eq %struct.sctp_shared_key* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %1, i64 0, i32 3
  %12 = load i16, i16* %11, align 4
  br label %16

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %1, i64 0, i32 0, i32 0
  store %struct.sctp_shared_key* null, %struct.sctp_shared_key** %14, align 8
  store %struct.sctp_shared_key* %1, %struct.sctp_shared_key** %7, align 8
  %15 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %1, i64 0, i32 0, i32 1
  store %struct.sctp_shared_key** %7, %struct.sctp_shared_key*** %15, align 8
  br label %80

16:                                               ; preds = %10, %72
  %17 = phi %struct.sctp_shared_key* [ %74, %72 ], [ %8, %10 ]
  %18 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %17, i64 0, i32 3
  %19 = load i16, i16* %18, align 4
  %20 = icmp ult i16 %12, %19
  br i1 %20, label %21, label %29

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %17, i64 0, i32 0, i32 1
  %23 = bitcast %struct.sctp_shared_key*** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %1, i64 0, i32 0, i32 1
  %26 = bitcast %struct.sctp_shared_key*** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %1, i64 0, i32 0, i32 0
  store %struct.sctp_shared_key* %17, %struct.sctp_shared_key** %27, align 8
  %28 = load %struct.sctp_shared_key**, %struct.sctp_shared_key*** %22, align 8
  store %struct.sctp_shared_key* %1, %struct.sctp_shared_key** %28, align 8
  store %struct.sctp_shared_key** %27, %struct.sctp_shared_key*** %22, align 8
  br label %80

29:                                               ; preds = %16
  %30 = icmp eq i16 %12, %19
  br i1 %30, label %31, label %72

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %17, i64 0, i32 4
  %33 = load i8, i8* %32, align 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %80

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %17, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = icmp ugt i32 %37, 1
  br i1 %38, label %80, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %17, i64 0, i32 0, i32 1
  %41 = bitcast %struct.sctp_shared_key*** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %1, i64 0, i32 0, i32 1
  %44 = bitcast %struct.sctp_shared_key*** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %1, i64 0, i32 0, i32 0
  store %struct.sctp_shared_key* %17, %struct.sctp_shared_key** %45, align 8
  %46 = load %struct.sctp_shared_key**, %struct.sctp_shared_key*** %40, align 8
  store %struct.sctp_shared_key* %1, %struct.sctp_shared_key** %46, align 8
  store %struct.sctp_shared_key** %45, %struct.sctp_shared_key*** %40, align 8
  %47 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %17, i64 0, i32 0, i32 0
  %48 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %47, align 8
  %49 = icmp eq %struct.sctp_shared_key* %48, null
  br i1 %49, label %50, label %53

50:                                               ; preds = %39
  %51 = bitcast %struct.sctp_shared_key* %1 to i64*
  %52 = ptrtoint %struct.sctp_shared_key* %48 to i64
  br label %59

53:                                               ; preds = %39
  %54 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %48, i64 0, i32 0, i32 1
  store %struct.sctp_shared_key** %45, %struct.sctp_shared_key*** %54, align 8
  %55 = bitcast %struct.sctp_shared_key* %17 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %struct.sctp_shared_key*** %40 to i64**
  %58 = load i64*, i64** %57, align 8
  br label %59

59:                                               ; preds = %50, %53
  %60 = phi i64* [ %58, %53 ], [ %51, %50 ]
  %61 = phi i64 [ %56, %53 ], [ %52, %50 ]
  store i64 %61, i64* %60, align 8
  %62 = atomicrmw add i32* %36, i32 -1 seq_cst
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %80

64:                                               ; preds = %59
  %65 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %17, i64 0, i32 1
  %66 = load %struct.sctp_key*, %struct.sctp_key** %65, align 8
  %67 = icmp eq %struct.sctp_key* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = bitcast %struct.sctp_key* %66 to i8*
  tail call void @free(i8* %69) #11
  br label %70

70:                                               ; preds = %68, %64
  %71 = bitcast %struct.sctp_shared_key* %17 to i8*
  tail call void @free(i8* %71) #11
  br label %80

72:                                               ; preds = %29
  %73 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %17, i64 0, i32 0, i32 0
  %74 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %73, align 8
  %75 = icmp eq %struct.sctp_shared_key* %74, null
  br i1 %75, label %76, label %16

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %17, i64 0, i32 0, i32 0
  %78 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %1, i64 0, i32 0, i32 0
  store %struct.sctp_shared_key* null, %struct.sctp_shared_key** %78, align 8
  store %struct.sctp_shared_key* %1, %struct.sctp_shared_key** %77, align 8
  %79 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %1, i64 0, i32 0, i32 1
  store %struct.sctp_shared_key** %77, %struct.sctp_shared_key*** %79, align 8
  br label %80

80:                                               ; preds = %70, %59, %35, %31, %2, %76, %21, %13
  %81 = phi i32 [ 0, %13 ], [ 0, %21 ], [ 0, %76 ], [ 22, %2 ], [ 16, %31 ], [ 16, %35 ], [ 0, %59 ], [ 0, %70 ]
  ret i32 %81
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @sctp_auth_key_acquire(%struct.sctp_tcb* nocapture readonly, i16 zeroext) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 118, i32 0
  %4 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %3, align 8
  %5 = icmp eq %struct.sctp_shared_key* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %2, %11
  %7 = phi %struct.sctp_shared_key* [ %13, %11 ], [ %4, %2 ]
  %8 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %7, i64 0, i32 3
  %9 = load i16, i16* %8, align 4
  %10 = icmp eq i16 %9, %1
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %7, i64 0, i32 0, i32 0
  %13 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %12, align 8
  %14 = icmp eq %struct.sctp_shared_key* %13, null
  br i1 %14, label %18, label %6

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %7, i64 0, i32 2
  %17 = atomicrmw add i32* %16, i32 1 seq_cst
  br label %18

18:                                               ; preds = %11, %2, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_auth_key_release(%struct.sctp_tcb*, i16 zeroext, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 118, i32 0
  %5 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %4, align 8
  %6 = icmp eq %struct.sctp_shared_key* %5, null
  br i1 %6, label %37, label %7

7:                                                ; preds = %3, %12
  %8 = phi %struct.sctp_shared_key* [ %14, %12 ], [ %5, %3 ]
  %9 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %8, i64 0, i32 3
  %10 = load i16, i16* %9, align 4
  %11 = icmp eq i16 %10, %1
  br i1 %11, label %16, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %8, i64 0, i32 0, i32 0
  %14 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %13, align 8
  %15 = icmp eq %struct.sctp_shared_key* %14, null
  br i1 %15, label %37, label %7

16:                                               ; preds = %7
  %17 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %8, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp ult i32 %18, 3
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %8, i64 0, i32 4
  %22 = load i8, i8* %21, align 2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = zext i16 %1 to i32
  tail call void @sctp_ulp_notify(i32 24, %struct.sctp_tcb* %0, i32 %25, i8* null, i32 %2) #11
  br label %26

26:                                               ; preds = %16, %24, %20
  %27 = atomicrmw add i32* %17, i32 -1 seq_cst
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %37

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %8, i64 0, i32 1
  %31 = load %struct.sctp_key*, %struct.sctp_key** %30, align 8
  %32 = icmp eq %struct.sctp_key* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %struct.sctp_key* %31 to i8*
  tail call void @free(i8* %34) #11
  br label %35

35:                                               ; preds = %33, %29
  %36 = bitcast %struct.sctp_shared_key* %8 to i8*
  tail call void @free(i8* %36) #11
  br label %37

37:                                               ; preds = %12, %3, %35, %26
  ret void
}

declare void @sctp_ulp_notify(i32, %struct.sctp_tcb*, i32, i8*, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_copy_skeylist(%struct.sctp_keyhead* readonly, %struct.sctp_keyhead*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.sctp_keyhead* %0, null
  %4 = icmp eq %struct.sctp_keyhead* %1, null
  %5 = or i1 %3, %4
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sctp_keyhead, %struct.sctp_keyhead* %0, i64 0, i32 0
  %8 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %7, align 8
  %9 = icmp eq %struct.sctp_shared_key* %8, null
  br i1 %9, label %61, label %10

10:                                               ; preds = %6, %56
  %11 = phi %struct.sctp_shared_key* [ %59, %56 ], [ %8, %6 ]
  %12 = phi i32 [ %57, %56 ], [ 0, %6 ]
  %13 = tail call noalias i8* @malloc(i64 32) #11
  %14 = icmp eq i8* %13, null
  br i1 %14, label %56, label %15

15:                                               ; preds = %10
  %16 = bitcast i8* %13 to %struct.sctp_shared_key*
  %17 = getelementptr inbounds i8, i8* %13, i64 28
  %18 = bitcast i8* %17 to i16*
  store i16 0, i16* %18, align 4
  %19 = getelementptr inbounds i8, i8* %13, i64 16
  %20 = bitcast i8* %19 to %struct.sctp_key**
  store %struct.sctp_key* null, %struct.sctp_key** %20, align 8
  %21 = getelementptr inbounds i8, i8* %13, i64 24
  %22 = bitcast i8* %21 to i32*
  store i32 1, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %13, i64 30
  store i8 0, i8* %23, align 2
  %24 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %11, i64 0, i32 1
  %25 = load %struct.sctp_key*, %struct.sctp_key** %24, align 8
  %26 = icmp eq %struct.sctp_key* %25, null
  br i1 %26, label %39, label %27

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %25, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = add nuw nsw i64 %30, 4
  %32 = tail call noalias i8* @malloc(i64 %31) #11
  %33 = icmp eq i8* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %25, i64 0, i32 1, i64 0
  %36 = bitcast i8* %32 to i32*
  store i32 %29, i32* %36, align 4
  %37 = bitcast i8* %32 to %struct.sctp_key*
  %38 = getelementptr inbounds i8, i8* %32, i64 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 1 %35, i64 %30, i1 false) #11
  br label %39

39:                                               ; preds = %15, %27, %34
  %40 = phi %struct.sctp_key* [ %37, %34 ], [ null, %27 ], [ null, %15 ]
  store %struct.sctp_key* %40, %struct.sctp_key** %20, align 8
  %41 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %11, i64 0, i32 3
  %42 = load i16, i16* %41, align 4
  store i16 %42, i16* %18, align 4
  %43 = tail call i32 @sctp_insert_sharedkey(%struct.sctp_keyhead* %1, %struct.sctp_shared_key* nonnull %16)
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %54, label %45

45:                                               ; preds = %39
  %46 = atomicrmw add i32* %22, i32 -1 seq_cst
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %56

48:                                               ; preds = %45
  %49 = load %struct.sctp_key*, %struct.sctp_key** %20, align 8
  %50 = icmp eq %struct.sctp_key* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %48
  %52 = bitcast %struct.sctp_key* %49 to i8*
  tail call void @free(i8* %52) #11
  br label %53

53:                                               ; preds = %51, %48
  tail call void @free(i8* nonnull %13) #11
  br label %56

54:                                               ; preds = %39
  %55 = add nsw i32 %12, 1
  br label %56

56:                                               ; preds = %10, %53, %45, %54
  %57 = phi i32 [ %55, %54 ], [ %12, %45 ], [ %12, %53 ], [ %12, %10 ]
  %58 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %11, i64 0, i32 0, i32 0
  %59 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %58, align 8
  %60 = icmp eq %struct.sctp_shared_key* %59, null
  br i1 %60, label %61, label %10

61:                                               ; preds = %56, %6, %2
  %62 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %57, %56 ]
  ret i32 %62
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias %struct.sctp_hmaclist* @sctp_alloc_hmaclist(i16 zeroext) local_unnamed_addr #6 {
  %2 = zext i16 %0 to i64
  %3 = shl nuw nsw i64 %2, 1
  %4 = add nuw nsw i64 %3, 4
  %5 = tail call noalias i8* @malloc(i64 %4) #11
  %6 = icmp eq i8* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast i8* %5 to %struct.sctp_hmaclist*
  %9 = bitcast i8* %5 to i16*
  store i16 %0, i16* %9, align 2
  %10 = getelementptr inbounds i8, i8* %5, i64 2
  %11 = bitcast i8* %10 to i16*
  store i16 0, i16* %11, align 2
  br label %12

12:                                               ; preds = %1, %7
  %13 = phi %struct.sctp_hmaclist* [ %8, %7 ], [ null, %1 ]
  ret %struct.sctp_hmaclist* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_free_hmaclist(%struct.sctp_hmaclist*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.sctp_hmaclist* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.sctp_hmaclist* %0 to i8*
  tail call void @free(i8* %4) #11
  br label %5

5:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @sctp_auth_add_hmacid(%struct.sctp_hmaclist*, i16 zeroext) local_unnamed_addr #4 {
  %3 = icmp eq %struct.sctp_hmaclist* %0, null
  br i1 %3, label %28, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %0, i64 0, i32 1
  %6 = load i16, i16* %5, align 2
  %7 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %0, i64 0, i32 0
  %8 = load i16, i16* %7, align 2
  %9 = icmp ne i16 %6, %8
  %10 = icmp eq i16 %1, 1
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %28

12:                                               ; preds = %4
  %13 = icmp eq i16 %6, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %12
  %15 = zext i16 %6 to i64
  br label %18

16:                                               ; preds = %18
  %17 = icmp eq i64 %23, %15
  br i1 %17, label %24, label %18

18:                                               ; preds = %16, %14
  %19 = phi i64 [ 0, %14 ], [ %23, %16 ]
  %20 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %0, i64 0, i32 2, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 1
  %23 = add nuw nsw i64 %19, 1
  br i1 %22, label %28, label %16

24:                                               ; preds = %16, %12
  %25 = add i16 %6, 1
  store i16 %25, i16* %5, align 2
  %26 = zext i16 %6 to i64
  %27 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %0, i64 0, i32 2, i64 %26
  store i16 1, i16* %27, align 2
  br label %28

28:                                               ; preds = %18, %4, %2, %24
  %29 = phi i32 [ 0, %24 ], [ -1, %2 ], [ -1, %4 ], [ -1, %18 ]
  ret i32 %29
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden %struct.sctp_hmaclist* @sctp_copy_hmaclist(%struct.sctp_hmaclist* readonly) local_unnamed_addr #6 {
  %2 = icmp eq %struct.sctp_hmaclist* %0, null
  br i1 %2, label %28, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %0, i64 0, i32 0
  %5 = load i16, i16* %4, align 2
  %6 = zext i16 %5 to i64
  %7 = shl nuw nsw i64 %6, 1
  %8 = add nuw nsw i64 %7, 4
  %9 = tail call noalias i8* @malloc(i64 %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = bitcast i8* %9 to %struct.sctp_hmaclist*
  %13 = bitcast i8* %9 to i16*
  %14 = getelementptr inbounds i8, i8* %9, i64 2
  %15 = bitcast i8* %14 to i16*
  store i16 %5, i16* %13, align 2
  %16 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %0, i64 0, i32 1
  %17 = load i16, i16* %16, align 2
  store i16 %17, i16* %15, align 2
  %18 = icmp eq i16 %17, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %11
  %20 = zext i16 %17 to i32
  %21 = getelementptr i8, i8* %9, i64 4
  %22 = getelementptr %struct.sctp_hmaclist, %struct.sctp_hmaclist* %0, i64 1
  %23 = bitcast %struct.sctp_hmaclist* %22 to i8*
  %24 = icmp ugt i32 %20, 1
  %25 = select i1 %24, i32 %20, i32 1
  %26 = shl nuw nsw i32 %25, 1
  %27 = zext i32 %26 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %21, i8* align 2 %23, i64 %27, i1 false)
  br label %28

28:                                               ; preds = %19, %11, %3, %1
  %29 = phi %struct.sctp_hmaclist* [ null, %1 ], [ null, %3 ], [ %12, %11 ], [ %12, %19 ]
  ret %struct.sctp_hmaclist* %29
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden %struct.sctp_hmaclist* @sctp_default_supported_hmaclist() local_unnamed_addr #6 {
  %1 = tail call noalias i8* @malloc(i64 6) #11
  %2 = icmp eq i8* %1, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %0
  %4 = bitcast i8* %1 to %struct.sctp_hmaclist*
  %5 = bitcast i8* %1 to i16*
  store i16 1, i16* %5, align 2
  %6 = getelementptr inbounds i8, i8* %1, i64 2
  %7 = bitcast i8* %6 to i16*
  store i16 1, i16* %7, align 2
  %8 = getelementptr inbounds i8, i8* %1, i64 4
  %9 = bitcast i8* %8 to i16*
  store i16 1, i16* %9, align 2
  br label %10

10:                                               ; preds = %0, %3
  %11 = phi %struct.sctp_hmaclist* [ %4, %3 ], [ null, %0 ]
  ret %struct.sctp_hmaclist* %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @sctp_negotiate_hmacid(%struct.sctp_hmaclist* readonly, %struct.sctp_hmaclist* readonly) local_unnamed_addr #5 {
  %3 = icmp eq %struct.sctp_hmaclist* %1, null
  %4 = icmp eq %struct.sctp_hmaclist* %0, null
  %5 = or i1 %4, %3
  br i1 %5, label %32, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %0, i64 0, i32 1
  %8 = load i16, i16* %7, align 2
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %32, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %1, i64 0, i32 1
  %12 = load i16, i16* %11, align 2
  %13 = icmp eq i16 %12, 0
  %14 = zext i16 %12 to i64
  %15 = zext i16 %8 to i64
  br label %16

16:                                               ; preds = %10, %29
  %17 = phi i64 [ 0, %10 ], [ %30, %29 ]
  br i1 %13, label %29, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %0, i64 0, i32 2, i64 %17
  %20 = load i16, i16* %19, align 2
  br label %23

21:                                               ; preds = %23
  %22 = icmp ult i64 %28, %14
  br i1 %22, label %23, label %29

23:                                               ; preds = %18, %21
  %24 = phi i64 [ 0, %18 ], [ %28, %21 ]
  %25 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %1, i64 0, i32 2, i64 %24
  %26 = load i16, i16* %25, align 2
  %27 = icmp eq i16 %20, %26
  %28 = add nuw nsw i64 %24, 1
  br i1 %27, label %32, label %21

29:                                               ; preds = %21, %16
  %30 = add nuw nsw i64 %17, 1
  %31 = icmp ult i64 %30, %15
  br i1 %31, label %16, label %32

32:                                               ; preds = %29, %23, %6, %2
  %33 = phi i16 [ 0, %2 ], [ 0, %6 ], [ %20, %23 ], [ 0, %29 ]
  ret i16 %33
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @sctp_serialize_hmaclist(%struct.sctp_hmaclist* readonly, i8* nocapture) local_unnamed_addr #6 {
  %3 = icmp eq %struct.sctp_hmaclist* %0, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %0, i64 0, i32 1
  %6 = load i16, i16* %5, align 2
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %4, %8
  %9 = phi i64 [ %16, %8 ], [ 0, %4 ]
  %10 = phi i8* [ %15, %8 ], [ %1, %4 ]
  %11 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %0, i64 0, i32 2, i64 %9
  %12 = load i16, i16* %11, align 2
  %13 = tail call i16 @llvm.bswap.i16(i16 %12) #11
  %14 = bitcast i8* %10 to i16*
  store i16 %13, i16* %14, align 1
  %15 = getelementptr inbounds i8, i8* %10, i64 2
  %16 = add nuw nsw i64 %9, 1
  %17 = load i16, i16* %5, align 2
  %18 = zext i16 %17 to i64
  %19 = icmp ult i64 %16, %18
  br i1 %19, label %8, label %20

20:                                               ; preds = %8
  %21 = zext i16 %17 to i32
  %22 = shl nuw nsw i32 %21, 1
  br label %23

23:                                               ; preds = %20, %4, %2
  %24 = phi i32 [ 0, %2 ], [ %22, %20 ], [ 0, %4 ]
  ret i32 %24
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @sctp_verify_hmac_param(%struct.sctp_auth_hmac_algo* nocapture readonly, i32) local_unnamed_addr #8 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %8
  %7 = icmp eq i64 %13, %5
  br i1 %7, label %14, label %8

8:                                                ; preds = %6, %4
  %9 = phi i64 [ 0, %4 ], [ %13, %6 ]
  %10 = getelementptr inbounds %struct.sctp_auth_hmac_algo, %struct.sctp_auth_hmac_algo* %0, i64 0, i32 1, i64 %9
  %11 = load i16, i16* %10, align 1
  %12 = icmp eq i16 %11, 256
  %13 = add nuw nsw i64 %9, 1
  br i1 %12, label %14, label %6

14:                                               ; preds = %8, %6, %2
  %15 = phi i32 [ -1, %2 ], [ -1, %6 ], [ 0, %8 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.sctp_authinformation* @sctp_alloc_authinfo() local_unnamed_addr #0 {
  %1 = tail call noalias i8* @malloc(i64 48) #11
  %2 = icmp eq i8* %1, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %0
  %4 = bitcast i8* %1 to %struct.sctp_authinformation*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1, i8 0, i64 48, i1 false)
  br label %5

5:                                                ; preds = %0, %3
  %6 = phi %struct.sctp_authinformation* [ %4, %3 ], [ null, %0 ]
  ret %struct.sctp_authinformation* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_free_authinfo(%struct.sctp_authinformation* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.sctp_authinformation* %0, null
  br i1 %2, label %27, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.sctp_authinformation, %struct.sctp_authinformation* %0, i64 0, i32 0
  %5 = load %struct.sctp_key*, %struct.sctp_key** %4, align 8
  %6 = icmp eq %struct.sctp_key* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = bitcast %struct.sctp_key* %5 to i8*
  tail call void @free(i8* %8) #11
  br label %9

9:                                                ; preds = %3, %7
  %10 = getelementptr inbounds %struct.sctp_authinformation, %struct.sctp_authinformation* %0, i64 0, i32 2
  %11 = load %struct.sctp_key*, %struct.sctp_key** %10, align 8
  %12 = icmp eq %struct.sctp_key* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = bitcast %struct.sctp_key* %11 to i8*
  tail call void @free(i8* %14) #11
  br label %15

15:                                               ; preds = %9, %13
  %16 = getelementptr inbounds %struct.sctp_authinformation, %struct.sctp_authinformation* %0, i64 0, i32 3
  %17 = load %struct.sctp_key*, %struct.sctp_key** %16, align 8
  %18 = icmp eq %struct.sctp_key* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = bitcast %struct.sctp_key* %17 to i8*
  tail call void @free(i8* %20) #11
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %struct.sctp_authinformation, %struct.sctp_authinformation* %0, i64 0, i32 4
  %23 = load %struct.sctp_key*, %struct.sctp_key** %22, align 8
  %24 = icmp eq %struct.sctp_key* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %struct.sctp_key* %23 to i8*
  tail call void @free(i8* %26) #11
  br label %27

27:                                               ; preds = %21, %1, %25
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @sctp_get_auth_chunk_len(i16 zeroext) local_unnamed_addr #9 {
  %2 = icmp eq i16 %0, 1
  %3 = select i1 %2, i32 28, i32 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @sctp_get_hmac_digest_len(i16 zeroext) local_unnamed_addr #9 {
  %2 = icmp eq i16 %0, 1
  %3 = select i1 %2, i32 20, i32 0
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_hmac(i16 zeroext, i8*, i32, i8*, i32, i8*) local_unnamed_addr #0 {
  %7 = alloca %union.sctp_hash_context, align 4
  %8 = alloca [128 x i8], align 16
  %9 = alloca [128 x i8], align 16
  %10 = alloca [32 x i8], align 16
  %11 = bitcast %union.sctp_hash_context* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 -86, i64 96, i1 false)
  %12 = getelementptr inbounds [128 x i8], [128 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 128, i1 false)
  %13 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 128, i1 false)
  %14 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #11
  %15 = icmp eq i8* %1, null
  %16 = icmp eq i32 %2, 0
  %17 = or i1 %15, %16
  %18 = icmp eq i8* %3, null
  %19 = or i1 %17, %18
  %20 = icmp eq i32 %4, 0
  %21 = or i1 %19, %20
  %22 = icmp eq i8* %5, null
  %23 = or i1 %21, %22
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 32, i1 false)
  br i1 %23, label %84, label %24

24:                                               ; preds = %6
  %25 = icmp eq i16 %0, 1
  %26 = select i1 %25, i32 20, i32 0
  br i1 %25, label %27, label %84

27:                                               ; preds = %24
  %28 = icmp ult i32 %2, 65
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %union.sctp_hash_context, %union.sctp_hash_context* %7, i64 0, i32 0
  call void @sctp_sha1_init(%struct.sctp_sha1_context* nonnull %30) #11
  call void @sctp_sha1_update(%struct.sctp_sha1_context* nonnull %30, i8* nonnull %1, i32 %2) #11
  call void @sctp_sha1_final(i8* nonnull %14, %struct.sctp_sha1_context* nonnull %30) #11
  br label %36

31:                                               ; preds = %27
  %32 = zext i32 %2 to i64
  %33 = icmp eq i32 %2, 64
  %34 = sub nuw nsw i64 64, %32
  %35 = select i1 %33, i64 0, i64 %34
  br label %36

36:                                               ; preds = %31, %29
  %37 = phi i64 [ 20, %29 ], [ %32, %31 ]
  %38 = phi i8* [ %14, %29 ], [ %1, %31 ]
  %39 = phi i1 [ false, %29 ], [ %33, %31 ]
  %40 = phi i64 [ 44, %29 ], [ %35, %31 ]
  %41 = getelementptr [128 x i8], [128 x i8]* %8, i64 0, i64 %37
  call void @llvm.memset.p0i8.i64(i8* align 1 %41, i8 0, i64 %40, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %12, i8* align 1 %38, i64 %37, i1 false)
  %42 = sub nuw nsw i64 64, %37
  %43 = select i1 %39, i64 0, i64 %42
  %44 = getelementptr [128 x i8], [128 x i8]* %9, i64 0, i64 %37
  call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %43, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %13, i8* align 1 %38, i64 %37, i1 false)
  %45 = bitcast [128 x i8]* %8 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 16
  %47 = xor <16 x i8> %46, <i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54>
  %48 = bitcast [128 x i8]* %8 to <16 x i8>*
  store <16 x i8> %47, <16 x i8>* %48, align 16
  %49 = bitcast [128 x i8]* %9 to <16 x i8>*
  %50 = load <16 x i8>, <16 x i8>* %49, align 16
  %51 = xor <16 x i8> %50, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %52 = bitcast [128 x i8]* %9 to <16 x i8>*
  store <16 x i8> %51, <16 x i8>* %52, align 16
  %53 = getelementptr inbounds [128 x i8], [128 x i8]* %8, i64 0, i64 16
  %54 = bitcast i8* %53 to <16 x i8>*
  %55 = load <16 x i8>, <16 x i8>* %54, align 16
  %56 = xor <16 x i8> %55, <i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54>
  %57 = bitcast i8* %53 to <16 x i8>*
  store <16 x i8> %56, <16 x i8>* %57, align 16
  %58 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 16
  %59 = bitcast i8* %58 to <16 x i8>*
  %60 = load <16 x i8>, <16 x i8>* %59, align 16
  %61 = xor <16 x i8> %60, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %62 = bitcast i8* %58 to <16 x i8>*
  store <16 x i8> %61, <16 x i8>* %62, align 16
  %63 = getelementptr inbounds [128 x i8], [128 x i8]* %8, i64 0, i64 32
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 16
  %66 = xor <16 x i8> %65, <i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54>
  %67 = bitcast i8* %63 to <16 x i8>*
  store <16 x i8> %66, <16 x i8>* %67, align 16
  %68 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 32
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 16
  %71 = xor <16 x i8> %70, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %72 = bitcast i8* %68 to <16 x i8>*
  store <16 x i8> %71, <16 x i8>* %72, align 16
  %73 = getelementptr inbounds [128 x i8], [128 x i8]* %8, i64 0, i64 48
  %74 = bitcast i8* %73 to <16 x i8>*
  %75 = load <16 x i8>, <16 x i8>* %74, align 16
  %76 = xor <16 x i8> %75, <i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54>
  %77 = bitcast i8* %73 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %77, align 16
  %78 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 48
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 16
  %81 = xor <16 x i8> %80, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %82 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %82, align 16
  %83 = getelementptr inbounds %union.sctp_hash_context, %union.sctp_hash_context* %7, i64 0, i32 0
  call void @sctp_sha1_init(%struct.sctp_sha1_context* nonnull %83) #11
  call void @sctp_sha1_update(%struct.sctp_sha1_context* nonnull %83, i8* nonnull %12, i32 64) #11
  call void @sctp_sha1_update(%struct.sctp_sha1_context* nonnull %83, i8* %3, i32 %4) #11
  call void @sctp_sha1_final(i8* nonnull %14, %struct.sctp_sha1_context* nonnull %83) #11
  call void @sctp_sha1_init(%struct.sctp_sha1_context* nonnull %83) #11
  call void @sctp_sha1_update(%struct.sctp_sha1_context* nonnull %83, i8* nonnull %13, i32 64) #11
  call void @sctp_sha1_update(%struct.sctp_sha1_context* nonnull %83, i8* nonnull %14, i32 %26) #11
  call void @sctp_sha1_final(i8* %5, %struct.sctp_sha1_context* nonnull %83) #11
  br label %84

84:                                               ; preds = %24, %36, %6
  %85 = phi i32 [ 0, %6 ], [ 0, %24 ], [ 20, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #11
  ret i32 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_hmac_m(i16 zeroext, i8*, i32, %struct.mbuf* readonly, i32, i8*, i32) local_unnamed_addr #0 {
  %8 = alloca %union.sctp_hash_context, align 4
  %9 = alloca [128 x i8], align 16
  %10 = alloca [128 x i8], align 16
  %11 = alloca [32 x i8], align 16
  %12 = bitcast %union.sctp_hash_context* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 -86, i64 96, i1 false)
  %13 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 128, i1 false)
  %14 = getelementptr inbounds [128 x i8], [128 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 128, i1 false)
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  %16 = icmp eq i8* %1, null
  %17 = icmp eq i32 %2, 0
  %18 = or i1 %16, %17
  %19 = icmp eq %struct.mbuf* %3, null
  %20 = or i1 %18, %19
  %21 = icmp eq i8* %5, null
  %22 = or i1 %20, %21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -86, i64 32, i1 false)
  br i1 %22, label %130, label %23

23:                                               ; preds = %7
  %24 = icmp eq i16 %0, 1
  %25 = select i1 %24, i32 20, i32 0
  br i1 %24, label %26, label %130

26:                                               ; preds = %23
  %27 = icmp ult i32 %2, 65
  br i1 %27, label %30, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %union.sctp_hash_context, %union.sctp_hash_context* %8, i64 0, i32 0
  call void @sctp_sha1_init(%struct.sctp_sha1_context* nonnull %29) #11
  call void @sctp_sha1_update(%struct.sctp_sha1_context* nonnull %29, i8* nonnull %1, i32 %2) #11
  call void @sctp_sha1_final(i8* nonnull %15, %struct.sctp_sha1_context* nonnull %29) #11
  br label %35

30:                                               ; preds = %26
  %31 = zext i32 %2 to i64
  %32 = icmp eq i32 %2, 64
  %33 = sub nuw nsw i64 64, %31
  %34 = select i1 %32, i64 0, i64 %33
  br label %35

35:                                               ; preds = %30, %28
  %36 = phi i64 [ 20, %28 ], [ %31, %30 ]
  %37 = phi i8* [ %15, %28 ], [ %1, %30 ]
  %38 = phi i1 [ false, %28 ], [ %32, %30 ]
  %39 = phi i64 [ 44, %28 ], [ %34, %30 ]
  %40 = getelementptr [128 x i8], [128 x i8]* %9, i64 0, i64 %36
  call void @llvm.memset.p0i8.i64(i8* align 1 %40, i8 0, i64 %39, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %13, i8* align 1 %37, i64 %36, i1 false)
  %41 = sub nuw nsw i64 64, %36
  %42 = select i1 %38, i64 0, i64 %41
  %43 = getelementptr [128 x i8], [128 x i8]* %10, i64 0, i64 %36
  call void @llvm.memset.p0i8.i64(i8* align 1 %43, i8 0, i64 %42, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %14, i8* align 1 %37, i64 %36, i1 false)
  %44 = bitcast [128 x i8]* %9 to <16 x i8>*
  %45 = load <16 x i8>, <16 x i8>* %44, align 16
  %46 = xor <16 x i8> %45, <i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54>
  %47 = bitcast [128 x i8]* %9 to <16 x i8>*
  store <16 x i8> %46, <16 x i8>* %47, align 16
  %48 = bitcast [128 x i8]* %10 to <16 x i8>*
  %49 = load <16 x i8>, <16 x i8>* %48, align 16
  %50 = xor <16 x i8> %49, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %51 = bitcast [128 x i8]* %10 to <16 x i8>*
  store <16 x i8> %50, <16 x i8>* %51, align 16
  %52 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 16
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 16
  %55 = xor <16 x i8> %54, <i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54>
  %56 = bitcast i8* %52 to <16 x i8>*
  store <16 x i8> %55, <16 x i8>* %56, align 16
  %57 = getelementptr inbounds [128 x i8], [128 x i8]* %10, i64 0, i64 16
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 16
  %60 = xor <16 x i8> %59, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %61 = bitcast i8* %57 to <16 x i8>*
  store <16 x i8> %60, <16 x i8>* %61, align 16
  %62 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 32
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 16
  %65 = xor <16 x i8> %64, <i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54>
  %66 = bitcast i8* %62 to <16 x i8>*
  store <16 x i8> %65, <16 x i8>* %66, align 16
  %67 = getelementptr inbounds [128 x i8], [128 x i8]* %10, i64 0, i64 32
  %68 = bitcast i8* %67 to <16 x i8>*
  %69 = load <16 x i8>, <16 x i8>* %68, align 16
  %70 = xor <16 x i8> %69, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %71 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %71, align 16
  %72 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 48
  %73 = bitcast i8* %72 to <16 x i8>*
  %74 = load <16 x i8>, <16 x i8>* %73, align 16
  %75 = xor <16 x i8> %74, <i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54, i8 54>
  %76 = bitcast i8* %72 to <16 x i8>*
  store <16 x i8> %75, <16 x i8>* %76, align 16
  %77 = getelementptr inbounds [128 x i8], [128 x i8]* %10, i64 0, i64 48
  %78 = bitcast i8* %77 to <16 x i8>*
  %79 = load <16 x i8>, <16 x i8>* %78, align 16
  %80 = xor <16 x i8> %79, <i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92, i8 92>
  %81 = bitcast i8* %77 to <16 x i8>*
  store <16 x i8> %80, <16 x i8>* %81, align 16
  %82 = getelementptr inbounds %union.sctp_hash_context, %union.sctp_hash_context* %8, i64 0, i32 0
  call void @sctp_sha1_init(%struct.sctp_sha1_context* nonnull %82) #11
  call void @sctp_sha1_update(%struct.sctp_sha1_context* nonnull %82, i8* nonnull %13, i32 64) #11
  br label %83

83:                                               ; preds = %35, %89
  %84 = phi %struct.mbuf* [ %92, %89 ], [ %3, %35 ]
  %85 = phi i32 [ %90, %89 ], [ %4, %35 ]
  %86 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %84, i64 0, i32 0, i32 3
  %87 = load i32, i32* %86, align 8
  %88 = icmp ult i32 %85, %87
  br i1 %88, label %94, label %89

89:                                               ; preds = %83
  %90 = sub i32 %85, %87
  %91 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %84, i64 0, i32 0, i32 0
  %92 = load %struct.mbuf*, %struct.mbuf** %91, align 8
  %93 = icmp eq %struct.mbuf* %92, null
  br i1 %93, label %128, label %83

94:                                               ; preds = %83
  %95 = icmp eq %struct.mbuf* %84, null
  br i1 %95, label %128, label %96

96:                                               ; preds = %94
  %97 = icmp ne i32 %6, 0
  %98 = getelementptr inbounds %union.sctp_hash_context, %union.sctp_hash_context* %8, i64 0, i32 0
  %99 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %84, i64 0, i32 0, i32 0
  %100 = load %struct.mbuf*, %struct.mbuf** %99, align 8
  %101 = icmp eq %struct.mbuf* %100, null
  %102 = and i1 %97, %101
  %103 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %84, i64 0, i32 0, i32 2
  %104 = load i8*, i8** %103, align 8
  %105 = zext i32 %85 to i64
  %106 = getelementptr inbounds i8, i8* %104, i64 %105
  %107 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %84, i64 0, i32 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = select i1 %102, i32 %6, i32 0
  %110 = add i32 %85, %109
  %111 = sub i32 %108, %110
  call void @sctp_sha1_update(%struct.sctp_sha1_context* nonnull %98, i8* %106, i32 %111) #11
  %112 = load %struct.mbuf*, %struct.mbuf** %99, align 8
  %113 = icmp eq %struct.mbuf* %112, null
  br i1 %113, label %128, label %114

114:                                              ; preds = %96, %114
  %115 = phi %struct.mbuf* [ %126, %114 ], [ %112, %96 ]
  %116 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %115, i64 0, i32 0, i32 0
  %117 = load %struct.mbuf*, %struct.mbuf** %116, align 8
  %118 = icmp eq %struct.mbuf* %117, null
  %119 = and i1 %97, %118
  %120 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %115, i64 0, i32 0, i32 2
  %121 = load i8*, i8** %120, align 8
  %122 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %115, i64 0, i32 0, i32 3
  %123 = load i32, i32* %122, align 8
  %124 = select i1 %119, i32 %6, i32 0
  %125 = sub i32 %123, %124
  call void @sctp_sha1_update(%struct.sctp_sha1_context* nonnull %98, i8* %121, i32 %125) #11
  %126 = load %struct.mbuf*, %struct.mbuf** %116, align 8
  %127 = icmp eq %struct.mbuf* %126, null
  br i1 %127, label %128, label %114, !llvm.loop !2

128:                                              ; preds = %89, %96, %114, %94
  %129 = getelementptr inbounds %union.sctp_hash_context, %union.sctp_hash_context* %8, i64 0, i32 0
  call void @sctp_sha1_final(i8* nonnull %15, %struct.sctp_sha1_context* nonnull %129) #11
  call void @sctp_sha1_init(%struct.sctp_sha1_context* nonnull %129) #11
  call void @sctp_sha1_update(%struct.sctp_sha1_context* nonnull %129, i8* nonnull %14, i32 64) #11
  call void @sctp_sha1_update(%struct.sctp_sha1_context* nonnull %129, i8* nonnull %15, i32 %25) #11
  call void @sctp_sha1_final(i8* %5, %struct.sctp_sha1_context* nonnull %129) #11
  br label %130

130:                                              ; preds = %23, %128, %7
  %131 = phi i32 [ 0, %7 ], [ 0, %23 ], [ 20, %128 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %12) #11
  ret i32 %131
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_compute_hmac(i16 zeroext, %struct.sctp_key*, i8*, i32, i8*) local_unnamed_addr #0 {
  %6 = alloca %union.sctp_hash_context, align 4
  %7 = alloca [32 x i8], align 16
  %8 = bitcast %union.sctp_hash_context* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 -86, i64 96, i1 false)
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #11
  %10 = icmp eq %struct.sctp_key* %1, null
  %11 = icmp eq i8* %2, null
  %12 = or i1 %10, %11
  %13 = icmp eq i32 %3, 0
  %14 = or i1 %12, %13
  %15 = icmp eq i8* %4, null
  %16 = or i1 %14, %15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 32, i1 false)
  br i1 %16, label %33, label %17

17:                                               ; preds = %5
  %18 = icmp eq i16 %0, 1
  %19 = select i1 %18, i32 20, i32 0
  br i1 %18, label %20, label %33

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %1, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %22, 64
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = getelementptr inbounds %union.sctp_hash_context, %union.sctp_hash_context* %6, i64 0, i32 0
  call void @sctp_sha1_init(%struct.sctp_sha1_context* nonnull %25) #11
  %26 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %1, i64 0, i32 1, i64 0
  %27 = load i32, i32* %21, align 4
  call void @sctp_sha1_update(%struct.sctp_sha1_context* nonnull %25, i8* %26, i32 %27) #11
  call void @sctp_sha1_final(i8* nonnull %9, %struct.sctp_sha1_context* nonnull %25) #11
  store i32 %19, i32* %21, align 4
  %28 = zext i32 %19 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* nonnull align 16 %9, i64 %28, i1 false)
  br label %29

29:                                               ; preds = %24, %20
  %30 = phi i32 [ 20, %24 ], [ %22, %20 ]
  %31 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %1, i64 0, i32 1, i64 0
  %32 = call i32 @sctp_hmac(i16 zeroext 1, i8* %31, i32 %30, i8* nonnull %2, i32 %3, i8* nonnull %4)
  br label %33

33:                                               ; preds = %17, %5, %29
  %34 = phi i32 [ %32, %29 ], [ 0, %5 ], [ 0, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %8) #11
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_compute_hmac_m(i16 zeroext, %struct.sctp_key*, %struct.mbuf* readonly, i32, i8*) local_unnamed_addr #0 {
  %6 = alloca %union.sctp_hash_context, align 4
  %7 = alloca [32 x i8], align 16
  %8 = bitcast %union.sctp_hash_context* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %8) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 -86, i64 96, i1 false)
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #11
  %10 = icmp eq %struct.sctp_key* %1, null
  %11 = icmp eq %struct.mbuf* %2, null
  %12 = or i1 %10, %11
  %13 = icmp eq i8* %4, null
  %14 = or i1 %12, %13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 32, i1 false)
  br i1 %14, label %31, label %15

15:                                               ; preds = %5
  %16 = icmp eq i16 %0, 1
  %17 = select i1 %16, i32 20, i32 0
  br i1 %16, label %18, label %31

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %1, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp ugt i32 %20, 64
  br i1 %21, label %22, label %27

22:                                               ; preds = %18
  %23 = getelementptr inbounds %union.sctp_hash_context, %union.sctp_hash_context* %6, i64 0, i32 0
  call void @sctp_sha1_init(%struct.sctp_sha1_context* nonnull %23) #11
  %24 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %1, i64 0, i32 1, i64 0
  %25 = load i32, i32* %19, align 4
  call void @sctp_sha1_update(%struct.sctp_sha1_context* nonnull %23, i8* %24, i32 %25) #11
  call void @sctp_sha1_final(i8* nonnull %9, %struct.sctp_sha1_context* nonnull %23) #11
  store i32 %17, i32* %19, align 4
  %26 = zext i32 %17 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* nonnull align 16 %9, i64 %26, i1 false)
  br label %27

27:                                               ; preds = %22, %18
  %28 = phi i32 [ 20, %22 ], [ %20, %18 ]
  %29 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %1, i64 0, i32 1, i64 0
  %30 = call i32 @sctp_hmac_m(i16 zeroext 1, i8* %29, i32 %28, %struct.mbuf* nonnull %2, i32 %3, i8* nonnull %4, i32 0)
  br label %31

31:                                               ; preds = %15, %5, %27
  %32 = phi i32 [ %30, %27 ], [ 0, %5 ], [ 0, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %8) #11
  ret i32 %32
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @sctp_auth_is_supported_hmac(%struct.sctp_hmaclist* readonly, i16 zeroext) local_unnamed_addr #5 {
  %3 = icmp eq %struct.sctp_hmaclist* %0, null
  %4 = icmp eq i16 %1, 0
  %5 = or i1 %3, %4
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %0, i64 0, i32 1
  %8 = load i16, i16* %7, align 2
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = zext i16 %8 to i64
  br label %14

12:                                               ; preds = %14
  %13 = icmp ult i64 %19, %11
  br i1 %13, label %14, label %20

14:                                               ; preds = %10, %12
  %15 = phi i64 [ 0, %10 ], [ %19, %12 ]
  %16 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %0, i64 0, i32 2, i64 %15
  %17 = load i16, i16* %16, align 2
  %18 = icmp eq i16 %17, %1
  %19 = add nuw nsw i64 %15, 1
  br i1 %18, label %20, label %12

20:                                               ; preds = %14, %12, %6, %2
  %21 = phi i32 [ 0, %2 ], [ 0, %6 ], [ 1, %14 ], [ 0, %12 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_clear_cachedkeys(%struct.sctp_tcb*, i16 zeroext) local_unnamed_addr #0 {
  %3 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 6
  %6 = load i16, i16* %5, align 2
  %7 = icmp eq i16 %6, %1
  br i1 %7, label %8, label %15

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 3
  %10 = load %struct.sctp_key*, %struct.sctp_key** %9, align 8
  %11 = icmp eq %struct.sctp_key* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = bitcast %struct.sctp_key* %10 to i8*
  tail call void @free(i8* %13) #11
  br label %14

14:                                               ; preds = %8, %12
  store %struct.sctp_key* null, %struct.sctp_key** %9, align 8
  br label %15

15:                                               ; preds = %14, %4
  %16 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 7
  %17 = load i16, i16* %16, align 4
  %18 = icmp eq i16 %17, %1
  br i1 %18, label %19, label %26

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 4
  %21 = load %struct.sctp_key*, %struct.sctp_key** %20, align 8
  %22 = icmp eq %struct.sctp_key* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast %struct.sctp_key* %21 to i8*
  tail call void @free(i8* %24) #11
  br label %25

25:                                               ; preds = %19, %23
  store %struct.sctp_key* null, %struct.sctp_key** %20, align 8
  br label %26

26:                                               ; preds = %2, %25, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_clear_cachedkeys_ep(%struct.sctp_inpcb* readonly, i16 zeroext) local_unnamed_addr #0 {
  %3 = icmp eq %struct.sctp_inpcb* %0, null
  br i1 %3, label %38, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 14, i32 0
  %6 = load %struct.sctp_tcb*, %struct.sctp_tcb** %5, align 8
  %7 = icmp eq %struct.sctp_tcb* %6, null
  br i1 %7, label %38, label %8

8:                                                ; preds = %4, %33
  %9 = phi %struct.sctp_tcb* [ %36, %33 ], [ %6, %4 ]
  %10 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %9, i64 0, i32 14
  %11 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %10) #11
  %12 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %9, i64 0, i32 7, i32 119, i32 6
  %13 = load i16, i16* %12, align 2
  %14 = icmp eq i16 %13, %1
  br i1 %14, label %15, label %22

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %9, i64 0, i32 7, i32 119, i32 3
  %17 = load %struct.sctp_key*, %struct.sctp_key** %16, align 8
  %18 = icmp eq %struct.sctp_key* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = bitcast %struct.sctp_key* %17 to i8*
  tail call void @free(i8* %20) #11
  br label %21

21:                                               ; preds = %19, %15
  store %struct.sctp_key* null, %struct.sctp_key** %16, align 8
  br label %22

22:                                               ; preds = %21, %8
  %23 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %9, i64 0, i32 7, i32 119, i32 7
  %24 = load i16, i16* %23, align 4
  %25 = icmp eq i16 %24, %1
  br i1 %25, label %26, label %33

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %9, i64 0, i32 7, i32 119, i32 4
  %28 = load %struct.sctp_key*, %struct.sctp_key** %27, align 8
  %29 = icmp eq %struct.sctp_key* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = bitcast %struct.sctp_key* %28 to i8*
  tail call void @free(i8* %31) #11
  br label %32

32:                                               ; preds = %30, %26
  store %struct.sctp_key* null, %struct.sctp_key** %27, align 8
  br label %33

33:                                               ; preds = %22, %32
  %34 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %10) #11
  %35 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %9, i64 0, i32 3, i32 0
  %36 = load %struct.sctp_tcb*, %struct.sctp_tcb** %35, align 8
  %37 = icmp eq %struct.sctp_tcb* %36, null
  br i1 %37, label %38, label %8

38:                                               ; preds = %33, %4, %2
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_delete_sharedkey(%struct.sctp_tcb*, i16 zeroext) local_unnamed_addr #0 {
  %3 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 5
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, %1
  br i1 %7, label %76, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 118, i32 0
  %10 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %9, align 8
  %11 = icmp eq %struct.sctp_shared_key* %10, null
  br i1 %11, label %76, label %12

12:                                               ; preds = %8, %17
  %13 = phi %struct.sctp_shared_key* [ %19, %17 ], [ %10, %8 ]
  %14 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %13, i64 0, i32 3
  %15 = load i16, i16* %14, align 4
  %16 = icmp eq i16 %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %13, i64 0, i32 0, i32 0
  %19 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %18, align 8
  %20 = icmp eq %struct.sctp_shared_key* %19, null
  br i1 %20, label %76, label %12

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %13, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp ugt i32 %23, 1
  br i1 %24, label %76, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %13, i64 0, i32 0, i32 0
  %27 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %26, align 8
  %28 = icmp eq %struct.sctp_shared_key* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = ptrtoint %struct.sctp_shared_key* %27 to i64
  br label %39

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %13, i64 0, i32 0, i32 1
  %33 = bitcast %struct.sctp_shared_key*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %27, i64 0, i32 0, i32 1
  %36 = bitcast %struct.sctp_shared_key*** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %struct.sctp_shared_key* %13 to i64*
  %38 = load i64, i64* %37, align 8
  br label %39

39:                                               ; preds = %29, %31
  %40 = phi i64 [ %38, %31 ], [ %30, %29 ]
  %41 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %13, i64 0, i32 0, i32 1
  %42 = bitcast %struct.sctp_shared_key*** %41 to i64**
  %43 = load i64*, i64** %42, align 8
  store i64 %40, i64* %43, align 8
  %44 = atomicrmw add i32* %22, i32 -1 seq_cst
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %54

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %13, i64 0, i32 1
  %48 = load %struct.sctp_key*, %struct.sctp_key** %47, align 8
  %49 = icmp eq %struct.sctp_key* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = bitcast %struct.sctp_key* %48 to i8*
  tail call void @free(i8* %51) #11
  br label %52

52:                                               ; preds = %50, %46
  %53 = bitcast %struct.sctp_shared_key* %13 to i8*
  tail call void @free(i8* %53) #11
  br label %54

54:                                               ; preds = %52, %39
  %55 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 6
  %56 = load i16, i16* %55, align 2
  %57 = icmp eq i16 %56, %1
  br i1 %57, label %58, label %65

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 3
  %60 = load %struct.sctp_key*, %struct.sctp_key** %59, align 8
  %61 = icmp eq %struct.sctp_key* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = bitcast %struct.sctp_key* %60 to i8*
  tail call void @free(i8* %63) #11
  br label %64

64:                                               ; preds = %62, %58
  store %struct.sctp_key* null, %struct.sctp_key** %59, align 8
  br label %65

65:                                               ; preds = %64, %54
  %66 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 7
  %67 = load i16, i16* %66, align 4
  %68 = icmp eq i16 %67, %1
  br i1 %68, label %69, label %76

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 4
  %71 = load %struct.sctp_key*, %struct.sctp_key** %70, align 8
  %72 = icmp eq %struct.sctp_key* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  %74 = bitcast %struct.sctp_key* %71 to i8*
  tail call void @free(i8* %74) #11
  br label %75

75:                                               ; preds = %73, %69
  store %struct.sctp_key* null, %struct.sctp_key** %70, align 8
  br label %76

76:                                               ; preds = %17, %8, %75, %65, %21, %4, %2
  %77 = phi i32 [ -1, %2 ], [ -1, %4 ], [ -1, %21 ], [ 0, %65 ], [ 0, %75 ], [ -1, %8 ], [ -1, %17 ]
  ret i32 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_delete_sharedkey_ep(%struct.sctp_inpcb* readonly, i16 zeroext) local_unnamed_addr #0 {
  %3 = icmp eq %struct.sctp_inpcb* %0, null
  br i1 %3, label %81, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 16
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, %1
  br i1 %7, label %81, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 13, i32 0
  %10 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %9, align 8
  %11 = icmp eq %struct.sctp_shared_key* %10, null
  br i1 %11, label %81, label %12

12:                                               ; preds = %8, %20
  %13 = phi %struct.sctp_shared_key* [ %18, %20 ], [ %10, %8 ]
  %14 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %13, i64 0, i32 3
  %15 = load i16, i16* %14, align 4
  %16 = icmp eq i16 %15, %1
  %17 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %13, i64 0, i32 0, i32 0
  %18 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %17, align 8
  %19 = icmp eq %struct.sctp_shared_key* %18, null
  br i1 %16, label %21, label %20

20:                                               ; preds = %12
  br i1 %19, label %81, label %12

21:                                               ; preds = %12
  %22 = ptrtoint %struct.sctp_shared_key* %18 to i64
  br i1 %19, label %31, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %13, i64 0, i32 0, i32 1
  %25 = bitcast %struct.sctp_shared_key*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %18, i64 0, i32 0, i32 1
  %28 = bitcast %struct.sctp_shared_key*** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = bitcast %struct.sctp_shared_key* %13 to i64*
  %30 = load i64, i64* %29, align 8
  br label %31

31:                                               ; preds = %21, %23
  %32 = phi i64 [ %30, %23 ], [ %22, %21 ]
  %33 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %13, i64 0, i32 0, i32 1
  %34 = bitcast %struct.sctp_shared_key*** %33 to i64**
  %35 = load i64*, i64** %34, align 8
  store i64 %32, i64* %35, align 8
  %36 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %13, i64 0, i32 2
  %37 = atomicrmw add i32* %36, i32 -1 seq_cst
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %47

39:                                               ; preds = %31
  %40 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %13, i64 0, i32 1
  %41 = load %struct.sctp_key*, %struct.sctp_key** %40, align 8
  %42 = icmp eq %struct.sctp_key* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %struct.sctp_key* %41 to i8*
  tail call void @free(i8* %44) #11
  br label %45

45:                                               ; preds = %43, %39
  %46 = bitcast %struct.sctp_shared_key* %13 to i8*
  tail call void @free(i8* %46) #11
  br label %47

47:                                               ; preds = %45, %31
  %48 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 14, i32 0
  %49 = load %struct.sctp_tcb*, %struct.sctp_tcb** %48, align 8
  %50 = icmp eq %struct.sctp_tcb* %49, null
  br i1 %50, label %81, label %51

51:                                               ; preds = %47, %76
  %52 = phi %struct.sctp_tcb* [ %79, %76 ], [ %49, %47 ]
  %53 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %52, i64 0, i32 14
  %54 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %53) #11
  %55 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %52, i64 0, i32 7, i32 119, i32 6
  %56 = load i16, i16* %55, align 2
  %57 = icmp eq i16 %56, %1
  br i1 %57, label %58, label %65

58:                                               ; preds = %51
  %59 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %52, i64 0, i32 7, i32 119, i32 3
  %60 = load %struct.sctp_key*, %struct.sctp_key** %59, align 8
  %61 = icmp eq %struct.sctp_key* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = bitcast %struct.sctp_key* %60 to i8*
  tail call void @free(i8* %63) #11
  br label %64

64:                                               ; preds = %62, %58
  store %struct.sctp_key* null, %struct.sctp_key** %59, align 8
  br label %65

65:                                               ; preds = %64, %51
  %66 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %52, i64 0, i32 7, i32 119, i32 7
  %67 = load i16, i16* %66, align 4
  %68 = icmp eq i16 %67, %1
  br i1 %68, label %69, label %76

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %52, i64 0, i32 7, i32 119, i32 4
  %71 = load %struct.sctp_key*, %struct.sctp_key** %70, align 8
  %72 = icmp eq %struct.sctp_key* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  %74 = bitcast %struct.sctp_key* %71 to i8*
  tail call void @free(i8* %74) #11
  br label %75

75:                                               ; preds = %73, %69
  store %struct.sctp_key* null, %struct.sctp_key** %70, align 8
  br label %76

76:                                               ; preds = %75, %65
  %77 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %53) #11
  %78 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %52, i64 0, i32 3, i32 0
  %79 = load %struct.sctp_tcb*, %struct.sctp_tcb** %78, align 8
  %80 = icmp eq %struct.sctp_tcb* %79, null
  br i1 %80, label %81, label %51

81:                                               ; preds = %20, %76, %8, %47, %4, %2
  %82 = phi i32 [ -1, %2 ], [ -1, %4 ], [ 0, %47 ], [ -1, %8 ], [ 0, %76 ], [ -1, %20 ]
  ret i32 %82
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @sctp_auth_setactivekey(%struct.sctp_tcb* nocapture, i16 zeroext) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 118, i32 0
  %4 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %3, align 8
  %5 = icmp eq %struct.sctp_shared_key* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %2, %11
  %7 = phi %struct.sctp_shared_key* [ %13, %11 ], [ %4, %2 ]
  %8 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %7, i64 0, i32 3
  %9 = load i16, i16* %8, align 4
  %10 = icmp eq i16 %9, %1
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %7, i64 0, i32 0, i32 0
  %13 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %12, align 8
  %14 = icmp eq %struct.sctp_shared_key* %13, null
  br i1 %14, label %25, label %6

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %7, i64 0, i32 4
  %17 = load i8, i8* %16, align 2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %7, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp ugt i32 %21, 1
  br i1 %22, label %25, label %23

23:                                               ; preds = %15, %19
  %24 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 5
  store i16 %1, i16* %24, align 8
  store i8 0, i8* %16, align 2
  br label %25

25:                                               ; preds = %11, %2, %19, %23
  %26 = phi i32 [ 0, %23 ], [ -1, %19 ], [ -1, %2 ], [ -1, %11 ]
  ret i32 %26
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @sctp_auth_setactivekey_ep(%struct.sctp_inpcb* nocapture, i16 zeroext) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 13, i32 0
  %4 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %3, align 8
  %5 = icmp eq %struct.sctp_shared_key* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2, %11
  %7 = phi %struct.sctp_shared_key* [ %13, %11 ], [ %4, %2 ]
  %8 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %7, i64 0, i32 3
  %9 = load i16, i16* %8, align 4
  %10 = icmp eq i16 %9, %1
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %7, i64 0, i32 0, i32 0
  %13 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %12, align 8
  %14 = icmp eq %struct.sctp_shared_key* %13, null
  br i1 %14, label %17, label %6

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 16
  store i16 %1, i16* %16, align 8
  br label %17

17:                                               ; preds = %11, %2, %15
  %18 = phi i32 [ 0, %15 ], [ -1, %2 ], [ -1, %11 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_deact_sharedkey(%struct.sctp_tcb*, i16 zeroext) local_unnamed_addr #0 {
  %3 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = zext i16 %1 to i32
  %6 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 5
  %7 = load i16, i16* %6, align 8
  %8 = icmp eq i16 %7, %1
  br i1 %8, label %29, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 118, i32 0
  %11 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %10, align 8
  %12 = icmp eq %struct.sctp_shared_key* %11, null
  br i1 %12, label %29, label %13

13:                                               ; preds = %9, %18
  %14 = phi %struct.sctp_shared_key* [ %20, %18 ], [ %11, %9 ]
  %15 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %14, i64 0, i32 3
  %16 = load i16, i16* %15, align 4
  %17 = icmp eq i16 %16, %1
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %14, i64 0, i32 0, i32 0
  %20 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %19, align 8
  %21 = icmp eq %struct.sctp_shared_key* %20, null
  br i1 %21, label %29, label %13

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %14, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  tail call void @sctp_ulp_notify(i32 24, %struct.sctp_tcb* nonnull %0, i32 %5, i8* null, i32 1) #11
  br label %27

27:                                               ; preds = %26, %22
  %28 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %14, i64 0, i32 4
  store i8 1, i8* %28, align 2
  br label %29

29:                                               ; preds = %18, %9, %4, %2, %27
  %30 = phi i32 [ 0, %27 ], [ -1, %2 ], [ -1, %4 ], [ -1, %9 ], [ -1, %18 ]
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_deact_sharedkey_ep(%struct.sctp_inpcb* readonly, i16 zeroext) local_unnamed_addr #0 {
  %3 = icmp eq %struct.sctp_inpcb* %0, null
  br i1 %3, label %47, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 16
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, %1
  br i1 %7, label %47, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 13, i32 0
  %10 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %9, align 8
  %11 = icmp eq %struct.sctp_shared_key* %10, null
  br i1 %11, label %47, label %12

12:                                               ; preds = %8, %20
  %13 = phi %struct.sctp_shared_key* [ %18, %20 ], [ %10, %8 ]
  %14 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %13, i64 0, i32 3
  %15 = load i16, i16* %14, align 4
  %16 = icmp eq i16 %15, %1
  %17 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %13, i64 0, i32 0, i32 0
  %18 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %17, align 8
  %19 = icmp eq %struct.sctp_shared_key* %18, null
  br i1 %16, label %21, label %20

20:                                               ; preds = %12
  br i1 %19, label %47, label %12

21:                                               ; preds = %12
  %22 = ptrtoint %struct.sctp_shared_key* %18 to i64
  br i1 %19, label %31, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %13, i64 0, i32 0, i32 1
  %25 = bitcast %struct.sctp_shared_key*** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %18, i64 0, i32 0, i32 1
  %28 = bitcast %struct.sctp_shared_key*** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = bitcast %struct.sctp_shared_key* %13 to i64*
  %30 = load i64, i64* %29, align 8
  br label %31

31:                                               ; preds = %21, %23
  %32 = phi i64 [ %30, %23 ], [ %22, %21 ]
  %33 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %13, i64 0, i32 0, i32 1
  %34 = bitcast %struct.sctp_shared_key*** %33 to i64**
  %35 = load i64*, i64** %34, align 8
  store i64 %32, i64* %35, align 8
  %36 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %13, i64 0, i32 2
  %37 = atomicrmw add i32* %36, i32 -1 seq_cst
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %47

39:                                               ; preds = %31
  %40 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %13, i64 0, i32 1
  %41 = load %struct.sctp_key*, %struct.sctp_key** %40, align 8
  %42 = icmp eq %struct.sctp_key* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %struct.sctp_key* %41 to i8*
  tail call void @free(i8* %44) #11
  br label %45

45:                                               ; preds = %43, %39
  %46 = bitcast %struct.sctp_shared_key* %13 to i8*
  tail call void @free(i8* %46) #11
  br label %47

47:                                               ; preds = %20, %8, %45, %31, %4, %2
  %48 = phi i32 [ -1, %2 ], [ -1, %4 ], [ 0, %31 ], [ 0, %45 ], [ -1, %8 ], [ -1, %20 ]
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_auth_get_cookie_params(%struct.sctp_tcb*, %struct.mbuf*, i32, i32) local_unnamed_addr #0 {
  %5 = alloca %struct.sctp_paramhdr, align 2
  %6 = alloca [512 x i8], align 16
  %7 = alloca [512 x i8], align 16
  %8 = alloca [512 x i8], align 16
  %9 = bitcast %struct.sctp_paramhdr* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  %10 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %5, i64 0, i32 0
  store i16 -21846, i16* %10, align 2
  %11 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %5, i64 0, i32 1
  store i16 -21846, i16* %11, align 2
  %12 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 512, i1 false)
  %13 = getelementptr inbounds [512 x i8], [512 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 512, i1 false)
  %14 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 512, i1 false)
  %15 = add i32 %3, %2
  %16 = call i8* @sctp_m_getptr(%struct.mbuf* %1, i32 %2, i32 4, i8* nonnull %9) #11
  %17 = icmp eq i8* %16, null
  br i1 %17, label %196, label %18

18:                                               ; preds = %4
  %19 = bitcast [512 x i8]* %8 to %struct.sctp_paramhdr*
  %20 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 114
  %21 = bitcast %struct.sctp_auth_chklist** %20 to i8**
  %22 = bitcast [512 x i8]* %7 to %struct.sctp_paramhdr*
  %23 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 116
  %24 = bitcast %struct.sctp_hmaclist** %23 to i8**
  %25 = bitcast [512 x i8]* %6 to %struct.sctp_paramhdr*
  %26 = zext i32 %15 to i64
  br label %27

27:                                               ; preds = %18, %177
  %28 = phi i16 [ 0, %18 ], [ %170, %177 ]
  %29 = phi %struct.sctp_auth_chunk_list* [ null, %18 ], [ %169, %177 ]
  %30 = phi i16 [ 0, %18 ], [ %168, %177 ]
  %31 = phi %struct.sctp_auth_hmac_algo* [ null, %18 ], [ %167, %177 ]
  %32 = phi i16 [ 0, %18 ], [ %166, %177 ]
  %33 = phi %struct.sctp_auth_random* [ null, %18 ], [ %165, %177 ]
  %34 = phi i8* [ %16, %18 ], [ %178, %177 ]
  %35 = phi i32 [ %2, %18 ], [ %173, %177 ]
  %36 = bitcast i8* %34 to i16*
  %37 = load i16, i16* %36, align 1
  %38 = call i16 @llvm.bswap.i16(i16 %37) #11
  %39 = getelementptr inbounds i8, i8* %34, i64 2
  %40 = bitcast i8* %39 to i16*
  %41 = load i16, i16* %40, align 1
  %42 = call i16 @llvm.bswap.i16(i16 %41) #11
  %43 = icmp ult i16 %42, 4
  br i1 %43, label %180, label %44

44:                                               ; preds = %27
  %45 = zext i16 %42 to i32
  %46 = add i32 %35, %45
  %47 = icmp ugt i32 %46, %15
  br i1 %47, label %180, label %48

48:                                               ; preds = %44
  switch i16 %38, label %164 [
    i16 -32766, label %49
    i16 -32764, label %57
    i16 -32765, label %122
  ]

49:                                               ; preds = %48
  %50 = icmp ugt i16 %42, 512
  br i1 %50, label %180, label %51

51:                                               ; preds = %49
  %52 = call %struct.sctp_paramhdr* @sctp_get_next_param(%struct.mbuf* %1, i32 %35, %struct.sctp_paramhdr* nonnull %25, i32 %45) #11
  %53 = icmp eq %struct.sctp_paramhdr* %52, null
  br i1 %53, label %334, label %54

54:                                               ; preds = %51
  %55 = bitcast %struct.sctp_paramhdr* %52 to %struct.sctp_auth_random*
  %56 = add nsw i16 %42, -4
  br label %164

57:                                               ; preds = %48
  %58 = icmp ugt i16 %42, 512
  br i1 %58, label %180, label %59

59:                                               ; preds = %57
  %60 = call %struct.sctp_paramhdr* @sctp_get_next_param(%struct.mbuf* %1, i32 %35, %struct.sctp_paramhdr* nonnull %22, i32 %45) #11
  %61 = icmp eq %struct.sctp_paramhdr* %60, null
  br i1 %61, label %334, label %62

62:                                               ; preds = %59
  %63 = bitcast %struct.sctp_paramhdr* %60 to %struct.sctp_auth_hmac_algo*
  %64 = add nsw i16 %42, -4
  %65 = lshr i16 %64, 1
  %66 = load %struct.sctp_hmaclist*, %struct.sctp_hmaclist** %23, align 8
  %67 = icmp eq %struct.sctp_hmaclist* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %62
  %69 = bitcast %struct.sctp_hmaclist* %66 to i8*
  call void @free(i8* %69) #11
  br label %70

70:                                               ; preds = %62, %68
  %71 = and i16 %64, -2
  %72 = zext i16 %71 to i64
  %73 = add nuw nsw i64 %72, 4
  %74 = call noalias i8* @malloc(i64 %73) #11
  %75 = icmp eq i8* %74, null
  br i1 %75, label %76, label %77

76:                                               ; preds = %70
  store %struct.sctp_hmaclist* null, %struct.sctp_hmaclist** %23, align 8
  br label %164

77:                                               ; preds = %70
  %78 = bitcast i8* %74 to i16*
  store i16 %65, i16* %78, align 2
  %79 = getelementptr inbounds i8, i8* %74, i64 2
  %80 = bitcast i8* %79 to i16*
  store i16 0, i16* %80, align 2
  store i8* %74, i8** %24, align 8
  %81 = icmp eq i16 %65, 0
  br i1 %81, label %164, label %82

82:                                               ; preds = %77
  %83 = bitcast i8* %74 to %struct.sctp_hmaclist*
  %84 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %60, i64 1
  %85 = bitcast %struct.sctp_paramhdr* %84 to [0 x i16]*
  %86 = zext i16 %65 to i64
  br label %87

87:                                               ; preds = %120, %82
  %88 = phi %struct.sctp_hmaclist* [ %83, %82 ], [ %121, %120 ]
  %89 = phi i64 [ 0, %82 ], [ %118, %120 ]
  %90 = icmp eq %struct.sctp_hmaclist* %88, null
  br i1 %90, label %117, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds [0 x i16], [0 x i16]* %85, i64 0, i64 %89
  %93 = load i16, i16* %92, align 1
  %94 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %88, i64 0, i32 1
  %95 = load i16, i16* %94, align 2
  %96 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %88, i64 0, i32 0
  %97 = load i16, i16* %96, align 2
  %98 = icmp ne i16 %95, %97
  %99 = icmp eq i16 %93, 256
  %100 = and i1 %99, %98
  br i1 %100, label %101, label %117

101:                                              ; preds = %91
  %102 = icmp eq i16 %95, 0
  br i1 %102, label %113, label %103

103:                                              ; preds = %101
  %104 = zext i16 %95 to i64
  br label %107

105:                                              ; preds = %107
  %106 = icmp eq i64 %112, %104
  br i1 %106, label %113, label %107

107:                                              ; preds = %105, %103
  %108 = phi i64 [ 0, %103 ], [ %112, %105 ]
  %109 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %88, i64 0, i32 2, i64 %108
  %110 = load i16, i16* %109, align 2
  %111 = icmp eq i16 %110, 1
  %112 = add nuw nsw i64 %108, 1
  br i1 %111, label %117, label %105

113:                                              ; preds = %105, %101
  %114 = phi i64 [ 0, %101 ], [ %104, %105 ]
  %115 = add i16 %95, 1
  store i16 %115, i16* %94, align 2
  %116 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %88, i64 0, i32 2, i64 %114
  store i16 1, i16* %116, align 2
  br label %117

117:                                              ; preds = %107, %87, %91, %113
  %118 = add nuw nsw i64 %89, 1
  %119 = icmp eq i64 %118, %86
  br i1 %119, label %164, label %120

120:                                              ; preds = %117
  %121 = load %struct.sctp_hmaclist*, %struct.sctp_hmaclist** %23, align 8
  br label %87

122:                                              ; preds = %48
  %123 = icmp ugt i16 %42, 512
  br i1 %123, label %180, label %124

124:                                              ; preds = %122
  %125 = call %struct.sctp_paramhdr* @sctp_get_next_param(%struct.mbuf* %1, i32 %35, %struct.sctp_paramhdr* nonnull %19, i32 %45) #11
  %126 = icmp eq %struct.sctp_paramhdr* %125, null
  br i1 %126, label %334, label %127

127:                                              ; preds = %124
  %128 = bitcast %struct.sctp_paramhdr* %125 to %struct.sctp_auth_chunk_list*
  %129 = add nsw i16 %42, -4
  %130 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %20, align 8
  %131 = icmp eq %struct.sctp_auth_chklist* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %130, i64 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %133, i8 0, i64 257, i1 false) #11
  br label %139

134:                                              ; preds = %127
  %135 = call noalias i8* @malloc(i64 257) #11
  %136 = icmp eq i8* %135, null
  br i1 %136, label %138, label %137

137:                                              ; preds = %134
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %135, i8 0, i64 257, i1 false) #11
  br label %138

138:                                              ; preds = %134, %137
  store i8* %135, i8** %21, align 8
  br label %139

139:                                              ; preds = %138, %132
  %140 = icmp eq i16 %129, 0
  br i1 %140, label %164, label %141

141:                                              ; preds = %139
  %142 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %125, i64 1
  %143 = bitcast %struct.sctp_paramhdr* %142 to [0 x i8]*
  %144 = zext i16 %129 to i64
  br label %145

145:                                              ; preds = %161, %141
  %146 = phi i64 [ 0, %141 ], [ %162, %161 ]
  %147 = getelementptr inbounds [0 x i8], [0 x i8]* %143, i64 0, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %20, align 8
  %150 = icmp eq %struct.sctp_auth_chklist* %149, null
  br i1 %150, label %161, label %151

151:                                              ; preds = %145
  switch i8 %148, label %152 [
    i8 1, label %161
    i8 2, label %161
    i8 14, label %161
    i8 15, label %161
  ]

152:                                              ; preds = %151
  %153 = zext i8 %148 to i64
  %154 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %149, i64 0, i32 0, i64 %153
  %155 = load i8, i8* %154, align 1
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %157, label %161

157:                                              ; preds = %152
  store i8 1, i8* %154, align 1
  %158 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %149, i64 0, i32 1
  %159 = load i8, i8* %158, align 1
  %160 = add i8 %159, 1
  store i8 %160, i8* %158, align 1
  br label %161

161:                                              ; preds = %145, %151, %151, %151, %151, %152, %157
  %162 = add nuw nsw i64 %146, 1
  %163 = icmp eq i64 %162, %144
  br i1 %163, label %164, label %145

164:                                              ; preds = %161, %117, %77, %139, %76, %48, %54
  %165 = phi %struct.sctp_auth_random* [ %55, %54 ], [ %33, %48 ], [ %33, %76 ], [ %33, %77 ], [ %33, %139 ], [ %33, %117 ], [ %33, %161 ]
  %166 = phi i16 [ %56, %54 ], [ %32, %48 ], [ %32, %76 ], [ %32, %77 ], [ %32, %139 ], [ %32, %117 ], [ %32, %161 ]
  %167 = phi %struct.sctp_auth_hmac_algo* [ %31, %54 ], [ %31, %48 ], [ %63, %76 ], [ %63, %77 ], [ %31, %139 ], [ %63, %117 ], [ %31, %161 ]
  %168 = phi i16 [ %30, %54 ], [ %30, %48 ], [ %64, %76 ], [ %64, %77 ], [ %30, %139 ], [ %64, %117 ], [ %30, %161 ]
  %169 = phi %struct.sctp_auth_chunk_list* [ %29, %54 ], [ %29, %48 ], [ %29, %76 ], [ %29, %77 ], [ %128, %139 ], [ %29, %117 ], [ %128, %161 ]
  %170 = phi i16 [ %28, %54 ], [ %28, %48 ], [ %28, %76 ], [ %28, %77 ], [ 0, %139 ], [ %28, %117 ], [ %129, %161 ]
  %171 = add nuw nsw i32 %45, 3
  %172 = and i32 %171, 131068
  %173 = add i32 %172, %35
  %174 = zext i32 %173 to i64
  %175 = add nuw nsw i64 %174, 4
  %176 = icmp ugt i64 %175, %26
  br i1 %176, label %180, label %177

177:                                              ; preds = %164
  %178 = call i8* @sctp_m_getptr(%struct.mbuf* %1, i32 %173, i32 4, i8* nonnull %9) #11
  %179 = icmp eq i8* %178, null
  br i1 %179, label %180, label %27

180:                                              ; preds = %44, %27, %49, %164, %177, %57, %122
  %181 = phi %struct.sctp_auth_random* [ %33, %44 ], [ %33, %27 ], [ %33, %49 ], [ %165, %164 ], [ %165, %177 ], [ %33, %57 ], [ %33, %122 ]
  %182 = phi i16 [ %32, %44 ], [ %32, %27 ], [ %32, %49 ], [ %166, %164 ], [ %166, %177 ], [ %32, %57 ], [ %32, %122 ]
  %183 = phi %struct.sctp_auth_hmac_algo* [ %31, %44 ], [ %31, %27 ], [ %31, %49 ], [ %167, %164 ], [ %167, %177 ], [ %31, %57 ], [ %31, %122 ]
  %184 = phi i16 [ %30, %44 ], [ %30, %27 ], [ %30, %49 ], [ %168, %164 ], [ %168, %177 ], [ %30, %57 ], [ %30, %122 ]
  %185 = phi %struct.sctp_auth_chunk_list* [ %29, %44 ], [ %29, %27 ], [ %29, %49 ], [ %169, %164 ], [ %169, %177 ], [ %29, %57 ], [ %29, %122 ]
  %186 = phi i16 [ %28, %44 ], [ %28, %27 ], [ %28, %49 ], [ %170, %164 ], [ %170, %177 ], [ %28, %57 ], [ %28, %122 ]
  %187 = zext i16 %182 to i64
  %188 = add nuw nsw i64 %187, 8
  %189 = zext i16 %184 to i64
  %190 = add nuw nsw i64 %188, %189
  %191 = icmp eq %struct.sctp_auth_chunk_list* %185, null
  br i1 %191, label %196, label %192

192:                                              ; preds = %180
  %193 = zext i16 %186 to i64
  %194 = add nuw nsw i64 %190, 4
  %195 = add nuw nsw i64 %194, %193
  br label %196

196:                                              ; preds = %180, %4, %192
  %197 = phi i1 [ true, %192 ], [ false, %180 ], [ false, %4 ]
  %198 = phi i64 [ %189, %192 ], [ %189, %180 ], [ 0, %4 ]
  %199 = phi i16 [ %186, %192 ], [ %186, %180 ], [ 0, %4 ]
  %200 = phi %struct.sctp_auth_chunk_list* [ %185, %192 ], [ null, %180 ], [ null, %4 ]
  %201 = phi %struct.sctp_auth_hmac_algo* [ %183, %192 ], [ %183, %180 ], [ null, %4 ]
  %202 = phi i16 [ %182, %192 ], [ %182, %180 ], [ 0, %4 ]
  %203 = phi %struct.sctp_auth_random* [ %181, %192 ], [ %181, %180 ], [ null, %4 ]
  %204 = phi i64 [ %195, %192 ], [ %190, %180 ], [ 8, %4 ]
  %205 = and i64 %204, 4294967295
  %206 = add nuw nsw i64 %205, 4
  %207 = call noalias i8* @malloc(i64 %206) #11
  %208 = icmp eq i8* %207, null
  br i1 %208, label %238, label %209

209:                                              ; preds = %196
  %210 = trunc i64 %204 to i32
  %211 = bitcast i8* %207 to %struct.sctp_key*
  %212 = bitcast i8* %207 to i32*
  store i32 %210, i32* %212, align 4
  %213 = icmp eq %struct.sctp_auth_random* %203, null
  br i1 %213, label %220, label %214

214:                                              ; preds = %209
  %215 = zext i16 %202 to i32
  %216 = add nuw nsw i32 %215, 4
  %217 = getelementptr inbounds i8, i8* %207, i64 4
  %218 = bitcast %struct.sctp_auth_random* %203 to i8*
  %219 = zext i32 %216 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* nonnull align 1 %218, i64 %219, i1 false)
  br label %220

220:                                              ; preds = %209, %214
  %221 = phi i32 [ %216, %214 ], [ 0, %209 ]
  br i1 %197, label %222, label %230

222:                                              ; preds = %220
  %223 = zext i32 %221 to i64
  %224 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %211, i64 0, i32 1, i64 %223
  %225 = bitcast %struct.sctp_auth_chunk_list* %200 to i8*
  %226 = zext i16 %199 to i64
  %227 = add nuw nsw i64 %226, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %224, i8* nonnull align 1 %225, i64 %227, i1 false)
  %228 = trunc i64 %227 to i32
  %229 = add nuw nsw i32 %221, %228
  br label %230

230:                                              ; preds = %222, %220
  %231 = phi i32 [ %229, %222 ], [ %221, %220 ]
  %232 = icmp eq %struct.sctp_auth_hmac_algo* %201, null
  br i1 %232, label %238, label %233

233:                                              ; preds = %230
  %234 = zext i32 %231 to i64
  %235 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %211, i64 0, i32 1, i64 %234
  %236 = bitcast %struct.sctp_auth_hmac_algo* %201 to i8*
  %237 = add nuw nsw i64 %198, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %235, i8* nonnull align 1 %236, i64 %237, i1 false)
  br label %238

238:                                              ; preds = %196, %230, %233
  %239 = phi %struct.sctp_key* [ %211, %230 ], [ %211, %233 ], [ null, %196 ]
  %240 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 0
  %241 = load %struct.sctp_key*, %struct.sctp_key** %240, align 8
  %242 = icmp eq %struct.sctp_key* %241, null
  br i1 %242, label %245, label %243

243:                                              ; preds = %238
  %244 = bitcast %struct.sctp_key* %241 to i8*
  call void @free(i8* %244) #11
  br label %245

245:                                              ; preds = %238, %243
  store %struct.sctp_key* %239, %struct.sctp_key** %240, align 8
  %246 = zext i16 %202 to i32
  %247 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 1
  store i32 %246, i32* %247, align 8
  %248 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 6
  %249 = load i16, i16* %248, align 2
  %250 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %250, label %289, label %251

251:                                              ; preds = %245
  %252 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 3
  %253 = load %struct.sctp_key*, %struct.sctp_key** %252, align 8
  %254 = icmp eq %struct.sctp_key* %253, null
  br i1 %254, label %257, label %255

255:                                              ; preds = %251
  %256 = bitcast %struct.sctp_key* %253 to i8*
  call void @free(i8* %256) #11
  br label %257

257:                                              ; preds = %251, %255
  store %struct.sctp_key* null, %struct.sctp_key** %252, align 8
  %258 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 7
  %259 = load i16, i16* %258, align 4
  %260 = icmp eq i16 %259, %249
  br i1 %260, label %261, label %270

261:                                              ; preds = %257
  %262 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 4
  %263 = load %struct.sctp_key*, %struct.sctp_key** %262, align 8
  %264 = icmp eq %struct.sctp_key* %263, null
  br i1 %264, label %268, label %265

265:                                              ; preds = %261
  %266 = bitcast %struct.sctp_key* %263 to i8*
  call void @free(i8* %266) #11
  %267 = load i16, i16* %258, align 4
  br label %268

268:                                              ; preds = %265, %261
  %269 = phi i16 [ %267, %265 ], [ %249, %261 ]
  store %struct.sctp_key* null, %struct.sctp_key** %262, align 8
  br label %270

270:                                              ; preds = %257, %268
  %271 = phi i16 [ %259, %257 ], [ %269, %268 ]
  %272 = load i16, i16* %248, align 2
  %273 = icmp eq i16 %272, %271
  br i1 %273, label %274, label %282

274:                                              ; preds = %270
  %275 = load %struct.sctp_key*, %struct.sctp_key** %252, align 8
  %276 = icmp eq %struct.sctp_key* %275, null
  br i1 %276, label %277, label %278

277:                                              ; preds = %274
  store %struct.sctp_key* null, %struct.sctp_key** %252, align 8
  br label %282

278:                                              ; preds = %274
  %279 = bitcast %struct.sctp_key* %275 to i8*
  call void @free(i8* %279) #11
  %280 = load i16, i16* %258, align 4
  store %struct.sctp_key* null, %struct.sctp_key** %252, align 8
  %281 = icmp eq i16 %280, %271
  br i1 %281, label %282, label %289

282:                                              ; preds = %270, %277, %278
  %283 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 4
  %284 = load %struct.sctp_key*, %struct.sctp_key** %283, align 8
  %285 = icmp eq %struct.sctp_key* %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %282
  %287 = bitcast %struct.sctp_key* %284 to i8*
  call void @free(i8* %287) #11
  br label %288

288:                                              ; preds = %286, %282
  store %struct.sctp_key* null, %struct.sctp_key** %283, align 8
  br label %289

289:                                              ; preds = %245, %278, %288
  %290 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 117
  %291 = load %struct.sctp_hmaclist*, %struct.sctp_hmaclist** %290, align 8
  %292 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 116
  %293 = load %struct.sctp_hmaclist*, %struct.sctp_hmaclist** %292, align 8
  %294 = icmp eq %struct.sctp_hmaclist* %293, null
  %295 = icmp eq %struct.sctp_hmaclist* %291, null
  %296 = or i1 %295, %294
  br i1 %296, label %323, label %297

297:                                              ; preds = %289
  %298 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %291, i64 0, i32 1
  %299 = load i16, i16* %298, align 2
  %300 = icmp eq i16 %299, 0
  br i1 %300, label %323, label %301

301:                                              ; preds = %297
  %302 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %293, i64 0, i32 1
  %303 = load i16, i16* %302, align 2
  %304 = icmp eq i16 %303, 0
  %305 = zext i16 %303 to i64
  %306 = zext i16 %299 to i64
  br label %307

307:                                              ; preds = %320, %301
  %308 = phi i64 [ 0, %301 ], [ %321, %320 ]
  br i1 %304, label %320, label %309

309:                                              ; preds = %307
  %310 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %291, i64 0, i32 2, i64 %308
  %311 = load i16, i16* %310, align 2
  br label %314

312:                                              ; preds = %314
  %313 = icmp eq i64 %319, %305
  br i1 %313, label %320, label %314

314:                                              ; preds = %312, %309
  %315 = phi i64 [ 0, %309 ], [ %319, %312 ]
  %316 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %293, i64 0, i32 2, i64 %315
  %317 = load i16, i16* %316, align 2
  %318 = icmp eq i16 %311, %317
  %319 = add nuw nsw i64 %315, 1
  br i1 %318, label %323, label %312

320:                                              ; preds = %312, %307
  %321 = add nuw nsw i64 %308, 1
  %322 = icmp eq i64 %321, %306
  br i1 %322, label %323, label %307

323:                                              ; preds = %320, %314, %289, %297
  %324 = phi i16 [ 0, %289 ], [ 0, %297 ], [ %311, %314 ], [ 0, %320 ]
  %325 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 124
  store i16 %324, i16* %325, align 8
  %326 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %327 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %326, align 8
  %328 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %327, i64 0, i32 11, i32 16
  %329 = load i16, i16* %328, align 8
  %330 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 5
  store i16 %329, i16* %330, align 8
  %331 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %327, i64 0, i32 11, i32 13
  %332 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 118
  %333 = call i32 @sctp_copy_skeylist(%struct.sctp_keyhead* %331, %struct.sctp_keyhead* %332)
  br label %334

334:                                              ; preds = %124, %59, %51, %323
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  ret void
}

declare i8* @sctp_m_getptr(%struct.mbuf*, i32, i32, i8*) local_unnamed_addr #7

declare %struct.sctp_paramhdr* @sctp_get_next_param(%struct.mbuf*, i32, %struct.sctp_paramhdr*, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_fill_hmac_digest_m(%struct.mbuf* readonly, i32, %struct.sctp_auth_chunk*, %struct.sctp_tcb*, i16 zeroext) local_unnamed_addr #0 {
  %6 = icmp eq %struct.sctp_tcb* %3, null
  %7 = icmp eq %struct.sctp_auth_chunk* %2, null
  %8 = or i1 %7, %6
  br i1 %8, label %59, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %3, i64 0, i32 7, i32 124
  %11 = load i16, i16* %10, align 8
  %12 = icmp eq i16 %11, 1
  %13 = getelementptr inbounds %struct.sctp_auth_chunk, %struct.sctp_auth_chunk* %2, i64 0, i32 3, i64 0
  %14 = select i1 %12, i64 20, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %13, i8 0, i64 %14, i1 false)
  %15 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %3, i64 0, i32 7, i32 119, i32 6
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, %4
  %18 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %3, i64 0, i32 7, i32 119, i32 3
  %19 = load %struct.sctp_key*, %struct.sctp_key** %18, align 8
  %20 = icmp eq %struct.sctp_key* %19, null
  br i1 %17, label %21, label %24

21:                                               ; preds = %9
  br i1 %20, label %22, label %52

22:                                               ; preds = %21
  %23 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %3, i64 0, i32 7, i32 119, i32 3
  br label %28

24:                                               ; preds = %9
  %25 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %3, i64 0, i32 7, i32 119, i32 3
  br i1 %20, label %28, label %26

26:                                               ; preds = %24
  %27 = bitcast %struct.sctp_key* %19 to i8*
  tail call void @free(i8* %27) #11
  br label %28

28:                                               ; preds = %22, %24, %26
  %29 = phi %struct.sctp_key** [ %23, %22 ], [ %25, %24 ], [ %25, %26 ]
  %30 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %3, i64 0, i32 7, i32 118, i32 0
  %31 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %30, align 8
  %32 = icmp eq %struct.sctp_shared_key* %31, null
  br i1 %32, label %45, label %33

33:                                               ; preds = %28, %38
  %34 = phi %struct.sctp_shared_key* [ %40, %38 ], [ %31, %28 ]
  %35 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %34, i64 0, i32 3
  %36 = load i16, i16* %35, align 4
  %37 = icmp eq i16 %36, %4
  br i1 %37, label %42, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %34, i64 0, i32 0, i32 0
  %40 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %39, align 8
  %41 = icmp eq %struct.sctp_shared_key* %40, null
  br i1 %41, label %45, label %33

42:                                               ; preds = %33
  %43 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %34, i64 0, i32 1
  %44 = load %struct.sctp_key*, %struct.sctp_key** %43, align 8
  br label %45

45:                                               ; preds = %38, %28, %42
  %46 = phi %struct.sctp_key* [ %44, %42 ], [ null, %28 ], [ null, %38 ]
  %47 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %3, i64 0, i32 7, i32 119, i32 0
  %48 = load %struct.sctp_key*, %struct.sctp_key** %47, align 8
  %49 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %3, i64 0, i32 7, i32 119, i32 2
  %50 = load %struct.sctp_key*, %struct.sctp_key** %49, align 8
  %51 = tail call %struct.sctp_key* @sctp_compute_hashkey(%struct.sctp_key* %48, %struct.sctp_key* %50, %struct.sctp_key* %46)
  store %struct.sctp_key* %51, %struct.sctp_key** %29, align 8
  store i16 %4, i16* %15, align 2
  br label %52

52:                                               ; preds = %45, %21
  %53 = tail call i16 @llvm.bswap.i16(i16 %4) #11
  %54 = getelementptr inbounds %struct.sctp_auth_chunk, %struct.sctp_auth_chunk* %2, i64 0, i32 1
  store i16 %53, i16* %54, align 1
  %55 = load i16, i16* %10, align 8
  %56 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %3, i64 0, i32 7, i32 119, i32 3
  %57 = load %struct.sctp_key*, %struct.sctp_key** %56, align 8
  %58 = tail call i32 @sctp_compute_hmac_m(i16 zeroext %55, %struct.sctp_key* %57, %struct.mbuf* %0, i32 %1, i8* %13)
  br label %59

59:                                               ; preds = %5, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_handle_auth(%struct.sctp_tcb*, %struct.sctp_auth_chunk* nocapture readonly, %struct.mbuf* readonly, i32) local_unnamed_addr #0 {
  %5 = alloca %union.sctp_hash_context, align 4
  %6 = alloca [32 x i8], align 16
  %7 = alloca [32 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #11
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  %11 = getelementptr inbounds %struct.sctp_auth_chunk, %struct.sctp_auth_chunk* %1, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 32, i1 false)
  %12 = load i16, i16* %11, align 1
  %13 = tail call i16 @llvm.bswap.i16(i16 %12) #11
  %14 = zext i16 %13 to i64
  %15 = icmp ult i16 %13, 8
  br i1 %15, label %16, label %18

16:                                               ; preds = %4
  %17 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 33), i32 1 seq_cst
  br label %185

18:                                               ; preds = %4
  %19 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 29), i32 1 seq_cst
  %20 = getelementptr inbounds %struct.sctp_auth_chunk, %struct.sctp_auth_chunk* %1, i64 0, i32 1
  %21 = load i16, i16* %20, align 1
  %22 = tail call i16 @llvm.bswap.i16(i16 %21) #11
  %23 = getelementptr inbounds %struct.sctp_auth_chunk, %struct.sctp_auth_chunk* %1, i64 0, i32 2
  %24 = load i16, i16* %23, align 1
  %25 = tail call i16 @llvm.bswap.i16(i16 %24) #11
  %26 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 116
  %27 = load %struct.sctp_hmaclist*, %struct.sctp_hmaclist** %26, align 8
  %28 = icmp eq %struct.sctp_hmaclist* %27, null
  %29 = icmp eq i16 %24, 0
  %30 = or i1 %29, %28
  br i1 %30, label %45, label %31

31:                                               ; preds = %18
  %32 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %27, i64 0, i32 1
  %33 = load i16, i16* %32, align 2
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %45, label %35

35:                                               ; preds = %31
  %36 = zext i16 %33 to i64
  br label %39

37:                                               ; preds = %39
  %38 = icmp eq i64 %44, %36
  br i1 %38, label %45, label %39

39:                                               ; preds = %37, %35
  %40 = phi i64 [ 0, %35 ], [ %44, %37 ]
  %41 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %27, i64 0, i32 2, i64 %40
  %42 = load i16, i16* %41, align 2
  %43 = icmp eq i16 %42, %25
  %44 = add nuw nsw i64 %40, 1
  br i1 %43, label %59, label %37

45:                                               ; preds = %37, %18, %31
  %46 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 31), i32 1 seq_cst
  %47 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 6, i32 0, i32 1, i32 1, i32 1) #11
  %48 = icmp eq %struct.mbuf* %47, null
  br i1 %48, label %185, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %47, i64 0, i32 0, i32 2
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 4
  store i8* %52, i8** %50, align 8
  %53 = bitcast i8* %52 to i16*
  store i16 1281, i16* %53, align 1
  %54 = getelementptr inbounds i8, i8* %51, i64 6
  %55 = bitcast i8* %54 to i16*
  store i16 1536, i16* %55, align 1
  %56 = getelementptr inbounds i8, i8* %51, i64 8
  %57 = bitcast i8* %56 to i16*
  store i16 %24, i16* %57, align 1
  %58 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %47, i64 0, i32 0, i32 3
  store i32 6, i32* %58, align 8
  tail call void @sctp_queue_op_err(%struct.sctp_tcb* %0, %struct.mbuf* nonnull %47) #11
  br label %185

59:                                               ; preds = %39
  %60 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 4
  %61 = load %struct.sctp_key*, %struct.sctp_key** %60, align 8
  %62 = icmp eq %struct.sctp_key* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 7
  %65 = load i16, i16* %64, align 4
  %66 = icmp eq i16 %65, %22
  br i1 %66, label %101, label %67

67:                                               ; preds = %63, %59
  %68 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 118, i32 0
  %69 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %68, align 8
  %70 = icmp eq %struct.sctp_shared_key* %69, null
  br i1 %70, label %80, label %71

71:                                               ; preds = %67, %76
  %72 = phi %struct.sctp_shared_key* [ %78, %76 ], [ %69, %67 ]
  %73 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %72, i64 0, i32 3
  %74 = load i16, i16* %73, align 4
  %75 = icmp eq i16 %74, %22
  br i1 %75, label %82, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %72, i64 0, i32 0, i32 0
  %78 = load %struct.sctp_shared_key*, %struct.sctp_shared_key** %77, align 8
  %79 = icmp eq %struct.sctp_shared_key* %78, null
  br i1 %79, label %80, label %71

80:                                               ; preds = %76, %67
  %81 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 32), i32 1 seq_cst
  br label %185

82:                                               ; preds = %71
  %83 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 7
  %84 = load i16, i16* %83, align 4
  %85 = icmp eq i16 %84, %22
  br i1 %85, label %88, label %86

86:                                               ; preds = %82
  tail call void @sctp_notify_authentication(%struct.sctp_tcb* %0, i32 1, i16 zeroext %22, i16 zeroext %84, i32 0)
  %87 = load %struct.sctp_key*, %struct.sctp_key** %60, align 8
  br label %88

88:                                               ; preds = %82, %86
  %89 = phi %struct.sctp_key* [ %61, %82 ], [ %87, %86 ]
  %90 = icmp eq %struct.sctp_key* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %88
  %92 = bitcast %struct.sctp_key* %89 to i8*
  tail call void @free(i8* %92) #11
  br label %93

93:                                               ; preds = %88, %91
  %94 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 0
  %95 = load %struct.sctp_key*, %struct.sctp_key** %94, align 8
  %96 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 119, i32 2
  %97 = load %struct.sctp_key*, %struct.sctp_key** %96, align 8
  %98 = getelementptr inbounds %struct.sctp_shared_key, %struct.sctp_shared_key* %72, i64 0, i32 1
  %99 = load %struct.sctp_key*, %struct.sctp_key** %98, align 8
  %100 = tail call %struct.sctp_key* @sctp_compute_hashkey(%struct.sctp_key* %95, %struct.sctp_key* %97, %struct.sctp_key* %99)
  store %struct.sctp_key* %100, %struct.sctp_key** %60, align 8
  store i16 %22, i16* %83, align 4
  br label %101

101:                                              ; preds = %63, %93
  %102 = icmp eq i16 %24, 256
  %103 = select i1 %102, i32 20, i32 0
  %104 = zext i32 %103 to i64
  %105 = or i64 %104, 8
  %106 = icmp ugt i64 %105, %14
  br i1 %106, label %107, label %109

107:                                              ; preds = %101
  %108 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 33), i32 1 seq_cst
  br label %185

109:                                              ; preds = %101
  %110 = getelementptr inbounds %struct.sctp_auth_chunk, %struct.sctp_auth_chunk* %1, i64 0, i32 3, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %9, i8* align 1 %110, i64 %104, i1 false)
  %111 = icmp eq %struct.mbuf* %2, null
  br i1 %111, label %160, label %112

112:                                              ; preds = %109
  %113 = add i32 %3, 8
  br label %114

114:                                              ; preds = %112, %120
  %115 = phi %struct.mbuf* [ %123, %120 ], [ %2, %112 ]
  %116 = phi i32 [ %121, %120 ], [ %113, %112 ]
  %117 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %115, i64 0, i32 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = icmp ult i32 %116, %118
  br i1 %119, label %125, label %120

120:                                              ; preds = %114
  %121 = sub i32 %116, %118
  %122 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %115, i64 0, i32 0, i32 0
  %123 = load %struct.mbuf*, %struct.mbuf** %122, align 8
  %124 = icmp eq %struct.mbuf* %123, null
  br i1 %124, label %160, label %114

125:                                              ; preds = %114
  br i1 %102, label %126, label %160

126:                                              ; preds = %125
  %127 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %115, i64 0, i32 0, i32 2
  %128 = load i8*, i8** %127, align 8
  %129 = zext i32 %116 to i64
  %130 = getelementptr inbounds i8, i8* %128, i64 %129
  %131 = sub i32 %118, %116
  %132 = icmp ult i32 %131, 20
  br i1 %132, label %138, label %135

133:                                              ; preds = %154
  %134 = zext i32 %148 to i64
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i64 [ %134, %133 ], [ 20, %126 ]
  %137 = phi i8* [ %158, %133 ], [ %130, %126 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %137, i8 0, i64 %136, i1 false) #11
  br label %160

138:                                              ; preds = %126, %154
  %139 = phi i32 [ %156, %154 ], [ %131, %126 ]
  %140 = phi i8* [ %158, %154 ], [ %130, %126 ]
  %141 = phi i32 [ 0, %154 ], [ %116, %126 ]
  %142 = phi i32 [ %148, %154 ], [ 20, %126 ]
  %143 = phi %struct.mbuf* [ %150, %154 ], [ %115, %126 ]
  %144 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %143, i64 0, i32 0, i32 3
  %145 = zext i32 %139 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %140, i8 0, i64 %145, i1 false) #11
  %146 = load i32, i32* %144, align 8
  %147 = add i32 %141, %142
  %148 = sub i32 %147, %146
  %149 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %143, i64 0, i32 0, i32 0
  %150 = load %struct.mbuf*, %struct.mbuf** %149, align 8
  %151 = icmp ne %struct.mbuf* %150, null
  %152 = icmp ne i32 %148, 0
  %153 = and i1 %152, %151
  br i1 %153, label %154, label %160

154:                                              ; preds = %138
  %155 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %150, i64 0, i32 0, i32 3
  %156 = load i32, i32* %155, align 8
  %157 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %150, i64 0, i32 0, i32 2
  %158 = load i8*, i8** %157, align 8
  %159 = icmp ugt i32 %148, %156
  br i1 %159, label %138, label %133

160:                                              ; preds = %120, %138, %125, %109, %135
  %161 = load %struct.sctp_key*, %struct.sctp_key** %60, align 8
  %162 = bitcast %union.sctp_hash_context* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %162) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %162, i8 -86, i64 96, i1 false) #11
  %163 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %163) #11
  %164 = icmp eq %struct.sctp_key* %161, null
  %165 = or i1 %111, %164
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %163, i8 -86, i64 32, i1 false) #11
  %166 = xor i1 %102, true
  %167 = or i1 %165, %166
  br i1 %167, label %180, label %168

168:                                              ; preds = %160
  %169 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %161, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = icmp ugt i32 %170, 64
  br i1 %171, label %172, label %176

172:                                              ; preds = %168
  %173 = getelementptr inbounds %union.sctp_hash_context, %union.sctp_hash_context* %5, i64 0, i32 0
  call void @sctp_sha1_init(%struct.sctp_sha1_context* nonnull %173) #11
  %174 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %161, i64 0, i32 1, i64 0
  %175 = load i32, i32* %169, align 4
  call void @sctp_sha1_update(%struct.sctp_sha1_context* nonnull %173, i8* %174, i32 %175) #11
  call void @sctp_sha1_final(i8* nonnull %163, %struct.sctp_sha1_context* nonnull %173) #11
  store i32 %103, i32* %169, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* nonnull align 16 %163, i64 %104, i1 false) #11
  br label %176

176:                                              ; preds = %172, %168
  %177 = phi i32 [ 20, %172 ], [ %170, %168 ]
  %178 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %161, i64 0, i32 1, i64 0
  %179 = call i32 @sctp_hmac_m(i16 zeroext 1, i8* %178, i32 %177, %struct.mbuf* nonnull %2, i32 %3, i8* nonnull %10, i32 0) #11
  br label %180

180:                                              ; preds = %160, %176
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %163) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %162) #11
  %181 = call i32 @timingsafe_bcmp(i8* nonnull %9, i8* nonnull %10, i64 %104) #11
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %185, label %183

183:                                              ; preds = %180
  %184 = atomicrmw add i32* getelementptr inbounds (%struct.sctp_base_info, %struct.sctp_base_info* @system_base_info, i64 0, i32 1, i32 33), i32 1 seq_cst
  br label %185

185:                                              ; preds = %180, %49, %45, %183, %107, %80, %16
  %186 = phi i32 [ -1, %16 ], [ -1, %80 ], [ -1, %107 ], [ -1, %183 ], [ -1, %45 ], [ -1, %49 ], [ 0, %180 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #11
  ret i32 %186
}

declare %struct.mbuf* @sctp_get_mbuf_for_msg(i32, i32, i32, i32, i32) local_unnamed_addr #7

declare void @sctp_queue_op_err(%struct.sctp_tcb*, %struct.mbuf*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_notify_authentication(%struct.sctp_tcb*, i32, i16 zeroext, i16 zeroext, i32) local_unnamed_addr #0 {
  %6 = icmp eq %struct.sctp_tcb* %0, null
  br i1 %6, label %65, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 1
  %9 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %8, align 8
  %10 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %9, i64 0, i32 9
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 805306368
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %65

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 256
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %65

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 194
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 262144
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %65, label %24

24:                                               ; preds = %19
  %25 = tail call %struct.mbuf* @sctp_get_mbuf_for_msg(i32 20, i32 0, i32 1, i32 1, i32 1) #11
  %26 = icmp eq %struct.mbuf* %25, null
  br i1 %26, label %65, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %25, i64 0, i32 0, i32 3
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %25, i64 0, i32 0, i32 2
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 16
  %32 = bitcast i8* %31 to i32*
  store i32 0, i32* %32, align 4
  %33 = bitcast i8* %30 to i16*
  store i16 8, i16* %33, align 4
  %34 = getelementptr inbounds i8, i8* %30, i64 2
  %35 = bitcast i8* %34 to i16*
  store i16 0, i16* %35, align 2
  %36 = getelementptr inbounds i8, i8* %30, i64 4
  %37 = bitcast i8* %36 to i32*
  store i32 20, i32* %37, align 4
  %38 = getelementptr inbounds i8, i8* %30, i64 8
  %39 = bitcast i8* %38 to i16*
  store i16 %2, i16* %39, align 4
  %40 = getelementptr inbounds i8, i8* %30, i64 10
  %41 = bitcast i8* %40 to i16*
  store i16 %3, i16* %41, align 2
  %42 = getelementptr inbounds i8, i8* %30, i64 12
  %43 = bitcast i8* %42 to i32*
  store i32 %1, i32* %43, align 4
  %44 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 52
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds i8, i8* %30, i64 16
  %47 = bitcast i8* %46 to i32*
  store i32 %45, i32* %47, align 4
  store i32 20, i32* %28, align 8
  %48 = getelementptr inbounds %struct.mbuf, %struct.mbuf* %25, i64 0, i32 0, i32 0
  store %struct.mbuf* null, %struct.mbuf** %48, align 8
  %49 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 30
  %50 = load %struct.sctp_nets*, %struct.sctp_nets** %49, align 8
  %51 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 7, i32 70
  %52 = load i32, i32* %51, align 8
  %53 = tail call %struct.sctp_queued_to_read* @sctp_build_readq_entry(%struct.sctp_tcb* nonnull %0, %struct.sctp_nets* %50, i32 0, i32 0, i32 %52, i16 zeroext 0, i32 0, i8 zeroext 0, %struct.mbuf* nonnull %25) #11
  %54 = icmp eq %struct.sctp_queued_to_read* %53, null
  br i1 %54, label %55, label %56

55:                                               ; preds = %27
  tail call void @m_freem(%struct.mbuf* nonnull %25) #11
  br label %65

56:                                               ; preds = %27
  %57 = load i32, i32* %28, align 8
  %58 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %53, i64 0, i32 9
  store i32 %57, i32* %58, align 8
  %59 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %53, i64 0, i32 22
  store i16 256, i16* %59, align 2
  %60 = getelementptr inbounds %struct.sctp_queued_to_read, %struct.sctp_queued_to_read* %53, i64 0, i32 15
  store %struct.mbuf* %25, %struct.mbuf** %60, align 8
  %61 = load %struct.sctp_inpcb*, %struct.sctp_inpcb** %8, align 8
  %62 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %0, i64 0, i32 0
  %63 = load %struct.socket*, %struct.socket** %62, align 8
  %64 = getelementptr inbounds %struct.socket, %struct.socket* %63, i64 0, i32 21
  tail call void @sctp_add_to_readq(%struct.sctp_inpcb* %61, %struct.sctp_tcb* nonnull %0, %struct.sctp_queued_to_read* nonnull %53, %struct.sockbuf* %64, i32 1, i32 0, i32 %4) #11
  br label %65

65:                                               ; preds = %24, %19, %5, %7, %14, %56, %55
  ret void
}

declare i32 @timingsafe_bcmp(i8*, i8*, i64) local_unnamed_addr #7

declare %struct.sctp_queued_to_read* @sctp_build_readq_entry(%struct.sctp_tcb*, %struct.sctp_nets*, i32, i32, i32, i16 zeroext, i32, i8 zeroext, %struct.mbuf*) local_unnamed_addr #7

declare void @m_freem(%struct.mbuf*) local_unnamed_addr #7

declare void @sctp_add_to_readq(%struct.sctp_inpcb*, %struct.sctp_tcb*, %struct.sctp_queued_to_read*, %struct.sockbuf*, i32, i32, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @sctp_validate_init_auth_params(%struct.mbuf*, i32, i32) local_unnamed_addr #0 {
  %4 = alloca %struct.sctp_paramhdr, align 2
  %5 = alloca [260 x i8], align 16
  %6 = alloca [512 x i8], align 16
  %7 = alloca [260 x i8], align 16
  %8 = bitcast %struct.sctp_paramhdr* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  %9 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %4, i64 0, i32 0
  store i16 -21846, i16* %9, align 2
  %10 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %4, i64 0, i32 1
  store i16 -21846, i16* %10, align 2
  %11 = call %struct.sctp_paramhdr* @sctp_get_next_param(%struct.mbuf* %0, i32 %1, %struct.sctp_paramhdr* nonnull %4, i32 4) #11
  %12 = icmp eq %struct.sctp_paramhdr* %11, null
  br i1 %12, label %212, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds [260 x i8], [260 x i8]* %7, i64 0, i64 0
  %15 = bitcast [260 x i8]* %7 to %struct.sctp_paramhdr*
  %16 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %17 = bitcast [512 x i8]* %6 to %struct.sctp_paramhdr*
  %18 = getelementptr inbounds [260 x i8], [260 x i8]* %5, i64 0, i64 0
  %19 = bitcast [260 x i8]* %5 to %struct.sctp_paramhdr*
  br label %20

20:                                               ; preds = %13, %209
  %21 = phi i8 [ 0, %13 ], [ %204, %209 ]
  %22 = phi i8 [ 0, %13 ], [ %203, %209 ]
  %23 = phi i32 [ 0, %13 ], [ %202, %209 ]
  %24 = phi i32 [ 0, %13 ], [ %201, %209 ]
  %25 = phi i32 [ 0, %13 ], [ %200, %209 ]
  %26 = phi i32 [ 0, %13 ], [ %199, %209 ]
  %27 = phi %struct.sctp_paramhdr* [ %11, %13 ], [ %210, %209 ]
  %28 = phi i32 [ %1, %13 ], [ %207, %209 ]
  %29 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %27, i64 0, i32 0
  %30 = load i16, i16* %29, align 1
  %31 = call i16 @llvm.bswap.i16(i16 %30) #11
  %32 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %27, i64 0, i32 1
  %33 = load i16, i16* %32, align 1
  %34 = call i16 @llvm.bswap.i16(i16 %33) #11
  %35 = zext i16 %34 to i32
  %36 = add nsw i32 %28, %35
  %37 = icmp sgt i32 %36, %2
  br i1 %37, label %212, label %38

38:                                               ; preds = %20
  %39 = zext i16 %34 to i64
  %40 = icmp ult i16 %34, 4
  br i1 %40, label %212, label %41

41:                                               ; preds = %38
  switch i16 %31, label %198 [
    i16 -32760, label %42
    i16 -32766, label %92
    i16 -32764, label %94
    i16 -32765, label %118
  ]

42:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %18) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 260, i1 false)
  %43 = icmp ugt i16 %34, 260
  br i1 %43, label %91, label %44

44:                                               ; preds = %42
  %45 = call %struct.sctp_paramhdr* @sctp_get_next_param(%struct.mbuf* %0, i32 %28, %struct.sctp_paramhdr* nonnull %19, i32 %35) #11
  %46 = icmp eq %struct.sctp_paramhdr* %45, null
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %18) #11
  br label %233

48:                                               ; preds = %44
  %49 = add nsw i32 %35, -4
  %50 = icmp sgt i32 %49, 0
  br i1 %50, label %51, label %77

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %45, i64 1
  %53 = bitcast %struct.sctp_paramhdr* %52 to [0 x i8]*
  %54 = zext i32 %49 to i64
  %55 = add nsw i64 %54, -1
  %56 = and i64 %54, 3
  %57 = icmp ult i64 %55, 3
  br i1 %57, label %60, label %58

58:                                               ; preds = %51
  %59 = sub nsw i64 %54, %56
  br label %79

60:                                               ; preds = %248, %51
  %61 = phi i32 [ undef, %51 ], [ %249, %248 ]
  %62 = phi i64 [ 0, %51 ], [ %250, %248 ]
  %63 = phi i32 [ %26, %51 ], [ %249, %248 ]
  %64 = icmp eq i64 %56, 0
  br i1 %64, label %77, label %65

65:                                               ; preds = %60, %72
  %66 = phi i64 [ %74, %72 ], [ %62, %60 ]
  %67 = phi i32 [ %73, %72 ], [ %63, %60 ]
  %68 = phi i64 [ %75, %72 ], [ %56, %60 ]
  %69 = getelementptr inbounds [0 x i8], [0 x i8]* %53, i64 0, i64 %66
  %70 = load i8, i8* %69, align 1
  switch i8 %70, label %72 [
    i8 -63, label %71
    i8 -128, label %71
  ]

71:                                               ; preds = %65, %65
  br label %72

72:                                               ; preds = %71, %65
  %73 = phi i32 [ %67, %65 ], [ 1, %71 ]
  %74 = add nuw nsw i64 %66, 1
  %75 = add i64 %68, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %65, !llvm.loop !4

77:                                               ; preds = %60, %72, %48
  %78 = phi i32 [ %26, %48 ], [ %61, %60 ], [ %73, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %18) #11
  br label %198

79:                                               ; preds = %248, %58
  %80 = phi i64 [ 0, %58 ], [ %250, %248 ]
  %81 = phi i32 [ %26, %58 ], [ %249, %248 ]
  %82 = phi i64 [ %59, %58 ], [ %251, %248 ]
  %83 = getelementptr inbounds [0 x i8], [0 x i8]* %53, i64 0, i64 %80
  %84 = load i8, i8* %83, align 1
  switch i8 %84, label %86 [
    i8 -63, label %85
    i8 -128, label %85
  ]

85:                                               ; preds = %79, %79
  br label %86

86:                                               ; preds = %85, %79
  %87 = phi i32 [ %81, %79 ], [ 1, %85 ]
  %88 = or i64 %80, 1
  %89 = getelementptr inbounds [0 x i8], [0 x i8]* %53, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  switch i8 %90, label %236 [
    i8 -63, label %235
    i8 -128, label %235
  ]

91:                                               ; preds = %42
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %18) #11
  br label %212

92:                                               ; preds = %41
  %93 = icmp eq i16 %33, 9216
  br i1 %93, label %198, label %233

94:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 512, i1 false)
  %95 = icmp ugt i16 %34, 512
  br i1 %95, label %117, label %96

96:                                               ; preds = %94
  %97 = call %struct.sctp_paramhdr* @sctp_get_next_param(%struct.mbuf* %0, i32 %28, %struct.sctp_paramhdr* nonnull %17, i32 %35) #11
  %98 = icmp eq %struct.sctp_paramhdr* %97, null
  br i1 %98, label %116, label %99

99:                                               ; preds = %96
  %100 = bitcast %struct.sctp_paramhdr* %97 to %struct.sctp_auth_hmac_algo*
  %101 = add nuw nsw i64 %39, 8589934588
  %102 = lshr i64 %101, 1
  %103 = trunc i64 %102 to i32
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %116, label %105

105:                                              ; preds = %99
  %106 = and i64 %102, 4294967295
  br label %109

107:                                              ; preds = %109
  %108 = icmp eq i64 %114, %106
  br i1 %108, label %116, label %109

109:                                              ; preds = %107, %105
  %110 = phi i64 [ 0, %105 ], [ %114, %107 ]
  %111 = getelementptr inbounds %struct.sctp_auth_hmac_algo, %struct.sctp_auth_hmac_algo* %100, i64 0, i32 1, i64 %110
  %112 = load i16, i16* %111, align 1
  %113 = icmp eq i16 %112, 256
  %114 = add nuw nsw i64 %110, 1
  br i1 %113, label %115, label %107

115:                                              ; preds = %109
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %16) #11
  br label %198

116:                                              ; preds = %99, %96, %107
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %16) #11
  br label %233

117:                                              ; preds = %94
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %16) #11
  br label %212

118:                                              ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 260, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 260, i1 false)
  %119 = icmp ugt i16 %34, 260
  br i1 %119, label %197, label %120

120:                                              ; preds = %118
  %121 = call %struct.sctp_paramhdr* @sctp_get_next_param(%struct.mbuf* %0, i32 %28, %struct.sctp_paramhdr* nonnull %15, i32 %35) #11
  %122 = icmp eq %struct.sctp_paramhdr* %121, null
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %14) #11
  br label %233

124:                                              ; preds = %120
  %125 = add nsw i32 %35, -4
  %126 = icmp sgt i32 %125, 0
  br i1 %126, label %127, label %192

127:                                              ; preds = %124
  %128 = getelementptr inbounds %struct.sctp_paramhdr, %struct.sctp_paramhdr* %121, i64 1
  %129 = bitcast %struct.sctp_paramhdr* %128 to [0 x i8]*
  %130 = zext i32 %125 to i64
  %131 = add nsw i64 %130, -1
  %132 = and i64 %130, 3
  %133 = icmp ult i64 %131, 3
  br i1 %133, label %171, label %134

134:                                              ; preds = %127
  %135 = sub nsw i64 %130, %132
  br label %136

136:                                              ; preds = %136, %134
  %137 = phi i64 [ 0, %134 ], [ %168, %136 ]
  %138 = phi i8 [ %21, %134 ], [ %167, %136 ]
  %139 = phi i8 [ %22, %134 ], [ %164, %136 ]
  %140 = phi i64 [ %135, %134 ], [ %169, %136 ]
  %141 = getelementptr inbounds [0 x i8], [0 x i8]* %129, i64 0, i64 %137
  %142 = load i8, i8* %141, align 1
  %143 = icmp eq i8 %142, -63
  %144 = icmp eq i8 %142, -128
  %145 = or i64 %137, 1
  %146 = getelementptr inbounds [0 x i8], [0 x i8]* %129, i64 0, i64 %145
  %147 = load i8, i8* %146, align 1
  %148 = icmp eq i8 %147, -63
  %149 = or i1 %148, %143
  %150 = icmp eq i8 %147, -128
  %151 = or i1 %150, %144
  %152 = or i64 %137, 2
  %153 = getelementptr inbounds [0 x i8], [0 x i8]* %129, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = icmp eq i8 %154, -63
  %156 = or i1 %155, %149
  %157 = icmp eq i8 %154, -128
  %158 = or i1 %157, %151
  %159 = or i64 %137, 3
  %160 = getelementptr inbounds [0 x i8], [0 x i8]* %129, i64 0, i64 %159
  %161 = load i8, i8* %160, align 1
  %162 = icmp eq i8 %161, -63
  %163 = or i1 %162, %156
  %164 = select i1 %163, i8 1, i8 %139
  %165 = icmp eq i8 %161, -128
  %166 = or i1 %165, %158
  %167 = select i1 %166, i8 1, i8 %138
  %168 = add nuw nsw i64 %137, 4
  %169 = add i64 %140, -4
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %136

171:                                              ; preds = %136, %127
  %172 = phi i8 [ undef, %127 ], [ %164, %136 ]
  %173 = phi i8 [ undef, %127 ], [ %167, %136 ]
  %174 = phi i64 [ 0, %127 ], [ %168, %136 ]
  %175 = phi i8 [ %21, %127 ], [ %167, %136 ]
  %176 = phi i8 [ %22, %127 ], [ %164, %136 ]
  %177 = icmp eq i64 %132, 0
  br i1 %177, label %192, label %178

178:                                              ; preds = %171, %178
  %179 = phi i64 [ %189, %178 ], [ %174, %171 ]
  %180 = phi i8 [ %188, %178 ], [ %175, %171 ]
  %181 = phi i8 [ %186, %178 ], [ %176, %171 ]
  %182 = phi i64 [ %190, %178 ], [ %132, %171 ]
  %183 = getelementptr inbounds [0 x i8], [0 x i8]* %129, i64 0, i64 %179
  %184 = load i8, i8* %183, align 1
  %185 = icmp eq i8 %184, -63
  %186 = select i1 %185, i8 1, i8 %181
  %187 = icmp eq i8 %184, -128
  %188 = select i1 %187, i8 1, i8 %180
  %189 = add nuw nsw i64 %179, 1
  %190 = add i64 %182, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %178, !llvm.loop !5

192:                                              ; preds = %171, %178, %124
  %193 = phi i8 [ %22, %124 ], [ %172, %171 ], [ %186, %178 ]
  %194 = phi i8 [ %21, %124 ], [ %173, %171 ], [ %188, %178 ]
  %195 = icmp eq i32 %125, 0
  %196 = select i1 %195, i32 %23, i32 1
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %14) #11
  br label %198

197:                                              ; preds = %118
  call void @llvm.lifetime.end.p0i8(i64 260, i8* nonnull %14) #11
  br label %212

198:                                              ; preds = %192, %115, %77, %41, %92
  %199 = phi i32 [ %26, %92 ], [ %26, %41 ], [ %78, %77 ], [ %26, %115 ], [ %26, %192 ]
  %200 = phi i32 [ 1, %92 ], [ %25, %41 ], [ %25, %77 ], [ %25, %115 ], [ %25, %192 ]
  %201 = phi i32 [ %24, %92 ], [ %24, %41 ], [ %24, %77 ], [ 1, %115 ], [ %24, %192 ]
  %202 = phi i32 [ %23, %92 ], [ %23, %41 ], [ %23, %77 ], [ %23, %115 ], [ %196, %192 ]
  %203 = phi i8 [ %22, %92 ], [ %22, %41 ], [ %22, %77 ], [ %22, %115 ], [ %193, %192 ]
  %204 = phi i8 [ %21, %92 ], [ %21, %41 ], [ %21, %77 ], [ %21, %115 ], [ %194, %192 ]
  %205 = add nuw nsw i32 %35, 3
  %206 = and i32 %205, 131068
  %207 = add nsw i32 %206, %28
  %208 = icmp slt i32 %207, %2
  br i1 %208, label %209, label %212

209:                                              ; preds = %198
  %210 = call %struct.sctp_paramhdr* @sctp_get_next_param(%struct.mbuf* %0, i32 %207, %struct.sctp_paramhdr* nonnull %4, i32 4) #11
  %211 = icmp eq %struct.sctp_paramhdr* %210, null
  br i1 %211, label %212, label %20

212:                                              ; preds = %20, %38, %209, %198, %3, %197, %117, %91
  %213 = phi i32 [ %26, %91 ], [ %26, %117 ], [ %26, %197 ], [ 0, %3 ], [ %26, %20 ], [ %26, %38 ], [ %199, %209 ], [ %199, %198 ]
  %214 = phi i32 [ %25, %91 ], [ %25, %117 ], [ %25, %197 ], [ 0, %3 ], [ %25, %20 ], [ %25, %38 ], [ %200, %209 ], [ %200, %198 ]
  %215 = phi i32 [ %24, %91 ], [ %24, %117 ], [ %24, %197 ], [ 0, %3 ], [ %24, %20 ], [ %24, %38 ], [ %201, %209 ], [ %201, %198 ]
  %216 = phi i32 [ %23, %91 ], [ %23, %117 ], [ %23, %197 ], [ 0, %3 ], [ %23, %20 ], [ %23, %38 ], [ %202, %209 ], [ %202, %198 ]
  %217 = phi i8 [ %22, %91 ], [ %22, %117 ], [ %22, %197 ], [ 0, %3 ], [ %22, %20 ], [ %22, %38 ], [ %203, %209 ], [ %203, %198 ]
  %218 = phi i8 [ %21, %91 ], [ %21, %117 ], [ %21, %197 ], [ 0, %3 ], [ %21, %20 ], [ %21, %38 ], [ %204, %209 ], [ %204, %198 ]
  %219 = icmp ne i32 %214, 0
  %220 = icmp ne i32 %215, 0
  %221 = and i1 %219, %220
  %222 = or i32 %216, %213
  %223 = icmp eq i32 %222, 0
  %224 = or i1 %221, %223
  br i1 %224, label %225, label %233

225:                                              ; preds = %212
  %226 = icmp ne i32 %213, 0
  %227 = and i1 %226, %221
  br i1 %227, label %228, label %232

228:                                              ; preds = %225
  %229 = icmp eq i8 %217, 0
  %230 = icmp eq i8 %218, 0
  %231 = or i1 %229, %230
  br i1 %231, label %233, label %232

232:                                              ; preds = %228, %225
  br label %233

233:                                              ; preds = %92, %212, %123, %116, %47, %228, %232
  %234 = phi i32 [ 0, %232 ], [ -1, %212 ], [ -2, %228 ], [ -1, %47 ], [ -1, %116 ], [ -1, %123 ], [ -1, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  ret i32 %234

235:                                              ; preds = %86, %86
  br label %236

236:                                              ; preds = %235, %86
  %237 = phi i32 [ %87, %86 ], [ 1, %235 ]
  %238 = or i64 %80, 2
  %239 = getelementptr inbounds [0 x i8], [0 x i8]* %53, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  switch i8 %240, label %242 [
    i8 -63, label %241
    i8 -128, label %241
  ]

241:                                              ; preds = %236, %236
  br label %242

242:                                              ; preds = %241, %236
  %243 = phi i32 [ %237, %236 ], [ 1, %241 ]
  %244 = or i64 %80, 3
  %245 = getelementptr inbounds [0 x i8], [0 x i8]* %53, i64 0, i64 %244
  %246 = load i8, i8* %245, align 1
  switch i8 %246, label %248 [
    i8 -63, label %247
    i8 -128, label %247
  ]

247:                                              ; preds = %242, %242
  br label %248

248:                                              ; preds = %247, %242
  %249 = phi i32 [ %243, %242 ], [ 1, %247 ]
  %250 = add nuw nsw i64 %80, 4
  %251 = add i64 %82, -4
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %60, label %79
}

; Function Attrs: nounwind ssp uwtable
define hidden void @sctp_initialize_auth_params(%struct.sctp_inpcb* readonly, %struct.sctp_tcb*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 15
  %4 = load %struct.sctp_hmaclist*, %struct.sctp_hmaclist** %3, align 8
  %5 = icmp eq %struct.sctp_hmaclist* %4, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %4, i64 0, i32 0
  %8 = load i16, i16* %7, align 2
  %9 = zext i16 %8 to i64
  %10 = shl nuw nsw i64 %9, 1
  %11 = add nuw nsw i64 %10, 4
  %12 = tail call noalias i8* @malloc(i64 %11) #11
  %13 = icmp eq i8* %12, null
  br i1 %13, label %30, label %14

14:                                               ; preds = %6
  %15 = bitcast i8* %12 to i16*
  %16 = getelementptr inbounds i8, i8* %12, i64 2
  %17 = bitcast i8* %16 to i16*
  store i16 %8, i16* %15, align 2
  %18 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %4, i64 0, i32 1
  %19 = load i16, i16* %18, align 2
  store i16 %19, i16* %17, align 2
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %32, label %21

21:                                               ; preds = %14
  %22 = zext i16 %19 to i32
  %23 = getelementptr i8, i8* %12, i64 4
  %24 = getelementptr %struct.sctp_hmaclist, %struct.sctp_hmaclist* %4, i64 1
  %25 = bitcast %struct.sctp_hmaclist* %24 to i8*
  %26 = icmp ugt i32 %22, 1
  %27 = select i1 %26, i32 %22, i32 1
  %28 = shl nuw nsw i32 %27, 1
  %29 = zext i32 %28 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %23, i8* align 2 %25, i64 %29, i1 false) #11
  br label %32

30:                                               ; preds = %2, %6
  %31 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 116
  store %struct.sctp_hmaclist* null, %struct.sctp_hmaclist** %31, align 8
  br label %38

32:                                               ; preds = %14, %21
  %33 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 116
  %34 = bitcast %struct.sctp_hmaclist** %33 to i8**
  store i8* %12, i8** %34, align 8
  %35 = zext i16 %19 to i64
  %36 = shl nuw nsw i64 %35, 1
  %37 = and i64 %36, 65534
  br label %38

38:                                               ; preds = %30, %32
  %39 = phi %struct.sctp_hmaclist** [ %33, %32 ], [ %31, %30 ]
  %40 = phi i64 [ %37, %32 ], [ 0, %30 ]
  %41 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 14
  %42 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %41, align 8
  %43 = icmp eq %struct.sctp_auth_chklist* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %38
  %45 = tail call noalias i8* @malloc(i64 257) #11
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %38, %44
  %48 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 114
  store %struct.sctp_auth_chklist* null, %struct.sctp_auth_chklist** %48, align 8
  br label %250

49:                                               ; preds = %44
  %50 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %42, i64 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %45, i8* align 1 %50, i64 257, i1 false) #11
  %51 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 114
  %52 = bitcast %struct.sctp_auth_chklist** %51 to i8**
  store i8* %45, i8** %52, align 8
  %53 = bitcast i8* %45 to <8 x i8>*
  %54 = load <8 x i8>, <8 x i8>* %53, align 1
  %55 = getelementptr inbounds i8, i8* %45, i64 8
  %56 = bitcast i8* %55 to <8 x i8>*
  %57 = load <8 x i8>, <8 x i8>* %56, align 1
  %58 = icmp ne <8 x i8> %54, zeroinitializer
  %59 = icmp ne <8 x i8> %57, zeroinitializer
  %60 = zext <8 x i1> %58 to <8 x i16>
  %61 = zext <8 x i1> %59 to <8 x i16>
  %62 = getelementptr inbounds i8, i8* %45, i64 16
  %63 = bitcast i8* %62 to <8 x i8>*
  %64 = load <8 x i8>, <8 x i8>* %63, align 1
  %65 = getelementptr inbounds i8, i8* %45, i64 24
  %66 = bitcast i8* %65 to <8 x i8>*
  %67 = load <8 x i8>, <8 x i8>* %66, align 1
  %68 = icmp ne <8 x i8> %64, zeroinitializer
  %69 = icmp ne <8 x i8> %67, zeroinitializer
  %70 = zext <8 x i1> %68 to <8 x i16>
  %71 = zext <8 x i1> %69 to <8 x i16>
  %72 = add nuw nsw <8 x i16> %60, %70
  %73 = add nuw nsw <8 x i16> %61, %71
  %74 = getelementptr inbounds i8, i8* %45, i64 32
  %75 = bitcast i8* %74 to <8 x i8>*
  %76 = load <8 x i8>, <8 x i8>* %75, align 1
  %77 = getelementptr inbounds i8, i8* %45, i64 40
  %78 = bitcast i8* %77 to <8 x i8>*
  %79 = load <8 x i8>, <8 x i8>* %78, align 1
  %80 = icmp ne <8 x i8> %76, zeroinitializer
  %81 = icmp ne <8 x i8> %79, zeroinitializer
  %82 = zext <8 x i1> %80 to <8 x i16>
  %83 = zext <8 x i1> %81 to <8 x i16>
  %84 = add nuw nsw <8 x i16> %72, %82
  %85 = add nuw nsw <8 x i16> %73, %83
  %86 = getelementptr inbounds i8, i8* %45, i64 48
  %87 = bitcast i8* %86 to <8 x i8>*
  %88 = load <8 x i8>, <8 x i8>* %87, align 1
  %89 = getelementptr inbounds i8, i8* %45, i64 56
  %90 = bitcast i8* %89 to <8 x i8>*
  %91 = load <8 x i8>, <8 x i8>* %90, align 1
  %92 = icmp ne <8 x i8> %88, zeroinitializer
  %93 = icmp ne <8 x i8> %91, zeroinitializer
  %94 = zext <8 x i1> %92 to <8 x i16>
  %95 = zext <8 x i1> %93 to <8 x i16>
  %96 = add nuw nsw <8 x i16> %84, %94
  %97 = add nuw nsw <8 x i16> %85, %95
  %98 = getelementptr inbounds i8, i8* %45, i64 64
  %99 = bitcast i8* %98 to <8 x i8>*
  %100 = load <8 x i8>, <8 x i8>* %99, align 1
  %101 = getelementptr inbounds i8, i8* %45, i64 72
  %102 = bitcast i8* %101 to <8 x i8>*
  %103 = load <8 x i8>, <8 x i8>* %102, align 1
  %104 = icmp ne <8 x i8> %100, zeroinitializer
  %105 = icmp ne <8 x i8> %103, zeroinitializer
  %106 = zext <8 x i1> %104 to <8 x i16>
  %107 = zext <8 x i1> %105 to <8 x i16>
  %108 = add nuw nsw <8 x i16> %96, %106
  %109 = add nuw nsw <8 x i16> %97, %107
  %110 = getelementptr inbounds i8, i8* %45, i64 80
  %111 = bitcast i8* %110 to <8 x i8>*
  %112 = load <8 x i8>, <8 x i8>* %111, align 1
  %113 = getelementptr inbounds i8, i8* %45, i64 88
  %114 = bitcast i8* %113 to <8 x i8>*
  %115 = load <8 x i8>, <8 x i8>* %114, align 1
  %116 = icmp ne <8 x i8> %112, zeroinitializer
  %117 = icmp ne <8 x i8> %115, zeroinitializer
  %118 = zext <8 x i1> %116 to <8 x i16>
  %119 = zext <8 x i1> %117 to <8 x i16>
  %120 = add nuw nsw <8 x i16> %108, %118
  %121 = add nuw nsw <8 x i16> %109, %119
  %122 = getelementptr inbounds i8, i8* %45, i64 96
  %123 = bitcast i8* %122 to <8 x i8>*
  %124 = load <8 x i8>, <8 x i8>* %123, align 1
  %125 = getelementptr inbounds i8, i8* %45, i64 104
  %126 = bitcast i8* %125 to <8 x i8>*
  %127 = load <8 x i8>, <8 x i8>* %126, align 1
  %128 = icmp ne <8 x i8> %124, zeroinitializer
  %129 = icmp ne <8 x i8> %127, zeroinitializer
  %130 = zext <8 x i1> %128 to <8 x i16>
  %131 = zext <8 x i1> %129 to <8 x i16>
  %132 = add nuw nsw <8 x i16> %120, %130
  %133 = add nuw nsw <8 x i16> %121, %131
  %134 = getelementptr inbounds i8, i8* %45, i64 112
  %135 = bitcast i8* %134 to <8 x i8>*
  %136 = load <8 x i8>, <8 x i8>* %135, align 1
  %137 = getelementptr inbounds i8, i8* %45, i64 120
  %138 = bitcast i8* %137 to <8 x i8>*
  %139 = load <8 x i8>, <8 x i8>* %138, align 1
  %140 = icmp ne <8 x i8> %136, zeroinitializer
  %141 = icmp ne <8 x i8> %139, zeroinitializer
  %142 = zext <8 x i1> %140 to <8 x i16>
  %143 = zext <8 x i1> %141 to <8 x i16>
  %144 = add <8 x i16> %132, %142
  %145 = add <8 x i16> %133, %143
  %146 = getelementptr inbounds i8, i8* %45, i64 128
  %147 = bitcast i8* %146 to <8 x i8>*
  %148 = load <8 x i8>, <8 x i8>* %147, align 1
  %149 = getelementptr inbounds i8, i8* %45, i64 136
  %150 = bitcast i8* %149 to <8 x i8>*
  %151 = load <8 x i8>, <8 x i8>* %150, align 1
  %152 = icmp ne <8 x i8> %148, zeroinitializer
  %153 = icmp ne <8 x i8> %151, zeroinitializer
  %154 = zext <8 x i1> %152 to <8 x i16>
  %155 = zext <8 x i1> %153 to <8 x i16>
  %156 = add <8 x i16> %144, %154
  %157 = add <8 x i16> %145, %155
  %158 = getelementptr inbounds i8, i8* %45, i64 144
  %159 = bitcast i8* %158 to <8 x i8>*
  %160 = load <8 x i8>, <8 x i8>* %159, align 1
  %161 = getelementptr inbounds i8, i8* %45, i64 152
  %162 = bitcast i8* %161 to <8 x i8>*
  %163 = load <8 x i8>, <8 x i8>* %162, align 1
  %164 = icmp ne <8 x i8> %160, zeroinitializer
  %165 = icmp ne <8 x i8> %163, zeroinitializer
  %166 = zext <8 x i1> %164 to <8 x i16>
  %167 = zext <8 x i1> %165 to <8 x i16>
  %168 = add <8 x i16> %156, %166
  %169 = add <8 x i16> %157, %167
  %170 = getelementptr inbounds i8, i8* %45, i64 160
  %171 = bitcast i8* %170 to <8 x i8>*
  %172 = load <8 x i8>, <8 x i8>* %171, align 1
  %173 = getelementptr inbounds i8, i8* %45, i64 168
  %174 = bitcast i8* %173 to <8 x i8>*
  %175 = load <8 x i8>, <8 x i8>* %174, align 1
  %176 = icmp ne <8 x i8> %172, zeroinitializer
  %177 = icmp ne <8 x i8> %175, zeroinitializer
  %178 = zext <8 x i1> %176 to <8 x i16>
  %179 = zext <8 x i1> %177 to <8 x i16>
  %180 = add <8 x i16> %168, %178
  %181 = add <8 x i16> %169, %179
  %182 = getelementptr inbounds i8, i8* %45, i64 176
  %183 = bitcast i8* %182 to <8 x i8>*
  %184 = load <8 x i8>, <8 x i8>* %183, align 1
  %185 = getelementptr inbounds i8, i8* %45, i64 184
  %186 = bitcast i8* %185 to <8 x i8>*
  %187 = load <8 x i8>, <8 x i8>* %186, align 1
  %188 = icmp ne <8 x i8> %184, zeroinitializer
  %189 = icmp ne <8 x i8> %187, zeroinitializer
  %190 = zext <8 x i1> %188 to <8 x i16>
  %191 = zext <8 x i1> %189 to <8 x i16>
  %192 = add <8 x i16> %180, %190
  %193 = add <8 x i16> %181, %191
  %194 = getelementptr inbounds i8, i8* %45, i64 192
  %195 = bitcast i8* %194 to <8 x i8>*
  %196 = load <8 x i8>, <8 x i8>* %195, align 1
  %197 = getelementptr inbounds i8, i8* %45, i64 200
  %198 = bitcast i8* %197 to <8 x i8>*
  %199 = load <8 x i8>, <8 x i8>* %198, align 1
  %200 = icmp ne <8 x i8> %196, zeroinitializer
  %201 = icmp ne <8 x i8> %199, zeroinitializer
  %202 = zext <8 x i1> %200 to <8 x i16>
  %203 = zext <8 x i1> %201 to <8 x i16>
  %204 = add <8 x i16> %192, %202
  %205 = add <8 x i16> %193, %203
  %206 = getelementptr inbounds i8, i8* %45, i64 208
  %207 = bitcast i8* %206 to <8 x i8>*
  %208 = load <8 x i8>, <8 x i8>* %207, align 1
  %209 = getelementptr inbounds i8, i8* %45, i64 216
  %210 = bitcast i8* %209 to <8 x i8>*
  %211 = load <8 x i8>, <8 x i8>* %210, align 1
  %212 = icmp ne <8 x i8> %208, zeroinitializer
  %213 = icmp ne <8 x i8> %211, zeroinitializer
  %214 = zext <8 x i1> %212 to <8 x i16>
  %215 = zext <8 x i1> %213 to <8 x i16>
  %216 = add <8 x i16> %204, %214
  %217 = add <8 x i16> %205, %215
  %218 = getelementptr inbounds i8, i8* %45, i64 224
  %219 = bitcast i8* %218 to <8 x i8>*
  %220 = load <8 x i8>, <8 x i8>* %219, align 1
  %221 = getelementptr inbounds i8, i8* %45, i64 232
  %222 = bitcast i8* %221 to <8 x i8>*
  %223 = load <8 x i8>, <8 x i8>* %222, align 1
  %224 = icmp ne <8 x i8> %220, zeroinitializer
  %225 = icmp ne <8 x i8> %223, zeroinitializer
  %226 = zext <8 x i1> %224 to <8 x i16>
  %227 = zext <8 x i1> %225 to <8 x i16>
  %228 = add <8 x i16> %216, %226
  %229 = add <8 x i16> %217, %227
  %230 = getelementptr inbounds i8, i8* %45, i64 240
  %231 = bitcast i8* %230 to <8 x i8>*
  %232 = load <8 x i8>, <8 x i8>* %231, align 1
  %233 = getelementptr inbounds i8, i8* %45, i64 248
  %234 = bitcast i8* %233 to <8 x i8>*
  %235 = load <8 x i8>, <8 x i8>* %234, align 1
  %236 = icmp ne <8 x i8> %232, zeroinitializer
  %237 = icmp ne <8 x i8> %235, zeroinitializer
  %238 = zext <8 x i1> %236 to <8 x i16>
  %239 = zext <8 x i1> %237 to <8 x i16>
  %240 = add <8 x i16> %228, %238
  %241 = add <8 x i16> %229, %239
  %242 = add <8 x i16> %241, %240
  %243 = shufflevector <8 x i16> %242, <8 x i16> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %244 = add <8 x i16> %242, %243
  %245 = shufflevector <8 x i16> %244, <8 x i16> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %246 = add <8 x i16> %244, %245
  %247 = shufflevector <8 x i16> %246, <8 x i16> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %248 = add <8 x i16> %246, %247
  %249 = extractelement <8 x i16> %248, i32 0
  br label %250

250:                                              ; preds = %49, %47
  %251 = phi %struct.sctp_auth_chklist** [ %48, %47 ], [ %51, %49 ]
  %252 = phi i16 [ 0, %47 ], [ %249, %49 ]
  %253 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 16
  %254 = load i16, i16* %253, align 8
  %255 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 119, i32 5
  store i16 %254, i16* %255, align 8
  %256 = getelementptr inbounds %struct.sctp_inpcb, %struct.sctp_inpcb* %0, i64 0, i32 11, i32 13
  %257 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 118
  %258 = tail call i32 @sctp_copy_skeylist(%struct.sctp_keyhead* %256, %struct.sctp_keyhead* %257)
  %259 = zext i16 %252 to i64
  %260 = add nuw nsw i64 %40, 44
  %261 = add nuw nsw i64 %260, %259
  %262 = trunc i64 %261 to i32
  %263 = and i32 %262, 65535
  %264 = add nuw nsw i32 %263, 4
  %265 = zext i32 %264 to i64
  %266 = tail call noalias i8* @malloc(i64 %265) #11
  %267 = icmp eq i8* %266, null
  br i1 %267, label %334, label %268

268:                                              ; preds = %250
  %269 = bitcast i8* %266 to %struct.sctp_key*
  %270 = bitcast i8* %266 to i32*
  store i32 %263, i32* %270, align 4
  %271 = getelementptr inbounds i8, i8* %266, i64 4
  %272 = bitcast i8* %271 to i16*
  store i16 640, i16* %272, align 1
  %273 = getelementptr inbounds i8, i8* %266, i64 6
  %274 = bitcast i8* %273 to i16*
  store i16 9216, i16* %274, align 1
  %275 = getelementptr inbounds i8, i8* %266, i64 8
  tail call void @read_random(i8* %275, i64 32) #11
  %276 = getelementptr inbounds i8, i8* %266, i64 40
  %277 = bitcast i8* %276 to i16*
  store i16 896, i16* %277, align 1
  %278 = add i16 %252, 4
  %279 = tail call i16 @llvm.bswap.i16(i16 %278) #11
  %280 = getelementptr inbounds i8, i8* %266, i64 42
  %281 = bitcast i8* %280 to i16*
  store i16 %279, i16* %281, align 1
  %282 = load %struct.sctp_auth_chklist*, %struct.sctp_auth_chklist** %251, align 8
  %283 = icmp eq %struct.sctp_auth_chklist* %282, null
  br i1 %283, label %302, label %284

284:                                              ; preds = %268, %349
  %285 = phi i64 [ %351, %349 ], [ 0, %268 ]
  %286 = phi i32 [ %352, %349 ], [ 0, %268 ]
  %287 = phi i16 [ %350, %349 ], [ 40, %268 ]
  %288 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %282, i64 0, i32 0, i64 %285
  %289 = load i8, i8* %288, align 1
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %296, label %291

291:                                              ; preds = %284
  %292 = trunc i32 %286 to i8
  %293 = add i16 %287, 1
  %294 = zext i16 %287 to i64
  %295 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %269, i64 0, i32 1, i64 %294
  store i8 %292, i8* %295, align 1
  br label %296

296:                                              ; preds = %284, %291
  %297 = phi i16 [ %293, %291 ], [ %287, %284 ]
  %298 = or i64 %285, 1
  %299 = getelementptr inbounds %struct.sctp_auth_chklist, %struct.sctp_auth_chklist* %282, i64 0, i32 0, i64 %298
  %300 = load i8, i8* %299, align 1
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %349, label %343

302:                                              ; preds = %349, %268
  %303 = phi i16 [ 40, %268 ], [ %350, %349 ]
  %304 = zext i16 %303 to i64
  %305 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %269, i64 0, i32 1, i64 %304
  %306 = bitcast i8* %305 to i16*
  store i16 1152, i16* %306, align 1
  %307 = trunc i64 %40 to i16
  %308 = add i16 %307, 4
  %309 = tail call i16 @llvm.bswap.i16(i16 %308) #11
  %310 = getelementptr inbounds i8, i8* %305, i64 2
  %311 = bitcast i8* %310 to i16*
  store i16 %309, i16* %311, align 1
  %312 = load %struct.sctp_hmaclist*, %struct.sctp_hmaclist** %39, align 8
  %313 = icmp eq %struct.sctp_hmaclist* %312, null
  br i1 %313, label %334, label %314

314:                                              ; preds = %302
  %315 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %312, i64 0, i32 1
  %316 = load i16, i16* %315, align 2
  %317 = icmp eq i16 %316, 0
  br i1 %317, label %334, label %318

318:                                              ; preds = %314
  %319 = add i16 %303, 4
  %320 = zext i16 %319 to i64
  %321 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %269, i64 0, i32 1, i64 %320
  br label %322

322:                                              ; preds = %318, %322
  %323 = phi i64 [ %330, %322 ], [ 0, %318 ]
  %324 = phi i8* [ %329, %322 ], [ %321, %318 ]
  %325 = getelementptr inbounds %struct.sctp_hmaclist, %struct.sctp_hmaclist* %312, i64 0, i32 2, i64 %323
  %326 = load i16, i16* %325, align 2
  %327 = tail call i16 @llvm.bswap.i16(i16 %326) #11
  %328 = bitcast i8* %324 to i16*
  store i16 %327, i16* %328, align 1
  %329 = getelementptr inbounds i8, i8* %324, i64 2
  %330 = add nuw nsw i64 %323, 1
  %331 = load i16, i16* %315, align 2
  %332 = zext i16 %331 to i64
  %333 = icmp ult i64 %330, %332
  br i1 %333, label %322, label %334

334:                                              ; preds = %322, %250, %314, %302
  %335 = phi %struct.sctp_key* [ %269, %302 ], [ %269, %314 ], [ null, %250 ], [ %269, %322 ]
  %336 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 119, i32 0
  %337 = load %struct.sctp_key*, %struct.sctp_key** %336, align 8
  %338 = icmp eq %struct.sctp_key* %337, null
  br i1 %338, label %341, label %339

339:                                              ; preds = %334
  %340 = bitcast %struct.sctp_key* %337 to i8*
  tail call void @free(i8* %340) #11
  br label %341

341:                                              ; preds = %334, %339
  store %struct.sctp_key* %335, %struct.sctp_key** %336, align 8
  %342 = getelementptr inbounds %struct.sctp_tcb, %struct.sctp_tcb* %1, i64 0, i32 7, i32 119, i32 1
  store i32 32, i32* %342, align 8
  ret void

343:                                              ; preds = %296
  %344 = trunc i32 %286 to i8
  %345 = or i8 %344, 1
  %346 = add i16 %297, 1
  %347 = zext i16 %297 to i64
  %348 = getelementptr inbounds %struct.sctp_key, %struct.sctp_key* %269, i64 0, i32 1, i64 %347
  store i8 %345, i8* %348, align 1
  br label %349

349:                                              ; preds = %343, %296
  %350 = phi i16 [ %346, %343 ], [ %297, %296 ]
  %351 = add nuw nsw i64 %285, 2
  %352 = add nuw nsw i32 %286, 2
  %353 = icmp eq i64 %351, 256
  br i1 %353, label %302, label %284
}

declare void @sctp_sha1_init(%struct.sctp_sha1_context*) local_unnamed_addr #7

declare void @sctp_sha1_update(%struct.sctp_sha1_context*, i8*, i32) local_unnamed_addr #7

declare void @sctp_sha1_final(i8*, %struct.sctp_sha1_context*) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
