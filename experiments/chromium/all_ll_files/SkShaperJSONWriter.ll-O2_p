; ModuleID = '../../third_party/skia/src/utils/SkShaperJSONWriter.cpp'
source_filename = "../../third_party/skia/src/utils/SkShaperJSONWriter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.SkShaperJSONWriter = type { %"class.SkShaper::RunHandler", %class.SkJSONWriter*, %"class.std::__1::vector", %"class.std::__1::vector.4", %"class.std::__1::vector.11", %"class.std::__1::basic_string" }
%"class.SkShaper::RunHandler" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i16*, i16*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i16* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %struct.SkPoint*, %struct.SkPoint*, %"class.std::__1::__compressed_pair.6" }
%struct.SkPoint = type { float, float }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %struct.SkPoint* }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { i32*, i32*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkJSONWriter = type { i8*, i8*, i8*, %class.SkWStream*, i32, i32, %class.SkSTArray, %class.SkSTArray.0 }
%class.SkWStream = type { i32 (...)** }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray = type { i32*, i64 }
%class.SkSTArray.0 = type { %class.SkAlignedSTStorage.1, %class.SkTArray.2 }
%class.SkAlignedSTStorage.1 = type { [16 x i8] }
%class.SkTArray.2 = type { i8*, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.SkShaper::RunHandler::RunInfo" = type { %class.SkFont*, i8, %struct.SkPoint, i64, %"struct.SkShaper::RunHandler::Range" }
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i8 }
%"struct.SkShaper::RunHandler::Range" = type { i64, i64 }
%"struct.SkShaper::RunHandler::Buffer" = type { i16*, %struct.SkPoint*, %struct.SkPoint*, i32*, %struct.SkPoint }
%class.SkString = type { %class.sk_sp.29 }
%class.sk_sp.29 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkSpan.31 = type { i32*, i64 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i64, %class.SkSpan.32*, %class.SkSpan*)* }
%class.SkSpan.32 = type { i8*, i64 }
%class.SkSpan = type { i16*, i64 }
%class.anon.41 = type { i64*, i64*, i32*, i32* }
%class.anon.42 = type { i64*, i64*, i8**, i32*, i32*, %class.SkSpan*, %"class.std::__1::function"*, %class.anon.41* }
%"class.std::__1::function.36" = type { %"class.std::__1::__function::__policy_func.39" }
%"class.std::__1::__function::__policy_func.39" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.40", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.40" = type { void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__function::__default_alloc_func.57" = type { %class.anon.43 }
%class.anon.43 = type { i8**, i64*, i64*, i32*, i32*, %class.anon.42*, %class.SkSpan*, %"class.std::__1::function"* }

$_ZN12SkJSONWriter11beginObjectEPKcb = comdat any

$_ZN12SkJSONWriter10beginArrayEPKcb = comdat any

$_ZN12SkJSONWriter8endArrayEv = comdat any

$_ZN12SkJSONWriter9endObjectEv = comdat any

$_ZN18SkShaperJSONWriterD2Ev = comdat any

$_ZN18SkShaperJSONWriterD0Ev = comdat any

$_ZN18SkShaperJSONWriter10commitLineEv = comdat any

$_ZN12SkJSONWriter10appendNameEPKc = comdat any

$_ZN12SkJSONWriter10beginValueEb = comdat any

$_ZN12SkJSONWriter9separatorEb = comdat any

$_ZN8SkTArrayIN12SkJSONWriter5ScopeELb1EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_ZN8SkTArrayIbLb1EE12checkReallocEiNS0_11ReallocTypeE = comdat any

$_ZN12SkJSONWriter12appendStringEPKc = comdat any

$_ZNSt3__16vectorItNS_9allocatorItEEE8__appendEm = comdat any

$_ZNSt3__16vectorI7SkPointNS_9allocatorIS1_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm = comdat any

@_ZTV18SkShaperJSONWriter = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkShaperJSONWriter*)* @_ZN18SkShaperJSONWriterD2Ev to i8*), i8* bitcast (void (%class.SkShaperJSONWriter*)* @_ZN18SkShaperJSONWriterD0Ev to i8*), i8* bitcast (void (%class.SkShaperJSONWriter*)* @_ZN18SkShaperJSONWriter9beginLineEv to i8*), i8* bitcast (void (%class.SkShaperJSONWriter*, %"struct.SkShaper::RunHandler::RunInfo"*)* @_ZN18SkShaperJSONWriter7runInfoERKN8SkShaper10RunHandler7RunInfoE to i8*), i8* bitcast (void (%class.SkShaperJSONWriter*)* @_ZN18SkShaperJSONWriter13commitRunInfoEv to i8*), i8* bitcast (void (%"struct.SkShaper::RunHandler::Buffer"*, %class.SkShaperJSONWriter*, %"struct.SkShaper::RunHandler::RunInfo"*)* @_ZN18SkShaperJSONWriter9runBufferERKN8SkShaper10RunHandler7RunInfoE to i8*), i8* bitcast (void (%class.SkShaperJSONWriter*, %"struct.SkShaper::RunHandler::RunInfo"*)* @_ZN18SkShaperJSONWriter15commitRunBufferERKN8SkShaper10RunHandler7RunInfoE to i8*), i8* bitcast (void (%class.SkShaperJSONWriter*)* @_ZN18SkShaperJSONWriter10commitLineEv to i8*)] }, align 8
@.str = private unnamed_addr constant [4 x i8] c"run\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"font name\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"font size\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"left-to-right\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"right-to-left\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c" lvl \00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"BiDi\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"UTF8\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"glyphs\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"clusters\00", align 1
@.str.10 = private unnamed_addr constant [21 x i8] c"horizontal positions\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"advances\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"cluster \00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c" to \00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"UTF\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"glyphsIDs\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c"%g\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN18SkShaperJSONWriter15commitRunBufferERKN8SkShaper10RunHandler7RunInfoEE3$_0Fvm6SkSpanIKcESB_IKtEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN18SkShaperJSONWriter17VisualizeClustersEPKcmm6SkSpanIKtES7_IKjERKNS_8functionIFvmS7_IS5_ES9_EEEE3$_2FvmmjjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN18SkShaperJSONWriter17VisualizeClustersEPKcmm6SkSpanIKtES7_IKjERKNS_8functionIFvmS7_IS5_ES9_EEEE3$_2FvmmjjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN18SkShaperJSONWriter17VisualizeClustersEPKcmm6SkSpanIKtES7_IKjERKNS_8functionIFvmS7_IS5_ES9_EEEE3$_2FvmmjjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@switch.table._ZN12SkJSONWriter9endObjectEv = private unnamed_addr constant [3 x i32] [i32 1, i32 4, i32 6], align 4

@_ZN18SkShaperJSONWriterC1EP12SkJSONWriterPKcm = hidden unnamed_addr alias void (%class.SkShaperJSONWriter*, %class.SkJSONWriter*, i8*, i64), void (%class.SkShaperJSONWriter*, %class.SkJSONWriter*, i8*, i64)* @_ZN18SkShaperJSONWriterC2EP12SkJSONWriterPKcm

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkShaperJSONWriterC2EP12SkJSONWriterPKcm(%class.SkShaperJSONWriter*, %class.SkJSONWriter*, i8* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV18SkShaperJSONWriter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 1
  store %class.SkJSONWriter* %1, %class.SkJSONWriter** %6, align 8
  %7 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 2
  %8 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 5
  %9 = icmp ugt i64 %3, -17
  %10 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 72, i1 false)
  br i1 %9, label %11, label %13

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #12
  unreachable

13:                                               ; preds = %4
  %14 = icmp ult i64 %3, 23
  br i1 %14, label %23, label %15

15:                                               ; preds = %13
  %16 = add nuw i64 %3, 16
  %17 = and i64 %16, -16
  %18 = tail call i8* @_Znwm(i64 %17) #13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8
  %20 = or i64 %17, -9223372036854775808
  %21 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %22, align 8
  br label %29

23:                                               ; preds = %13
  %24 = trunc i64 %3 to i8
  %25 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 %24, i8* %26, align 1
  %27 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %28 = icmp eq i64 %3, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %23, %15
  %30 = phi i8* [ %18, %15 ], [ %27, %23 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %2, i64 %3, i1 false) #14
  br label %31

31:                                               ; preds = %23, %29
  %32 = phi i8* [ %27, %23 ], [ %30, %29 ]
  %33 = getelementptr inbounds i8, i8* %32, i64 %3
  store i8 0, i8* %33, align 1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN18SkShaperJSONWriter9beginLineEv(%class.SkShaperJSONWriter* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN18SkShaperJSONWriter7runInfoERKN8SkShaper10RunHandler7RunInfoE(%class.SkShaperJSONWriter* nocapture, %"struct.SkShaper::RunHandler::RunInfo"* nocapture dereferenceable(48)) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN18SkShaperJSONWriter13commitRunInfoEv(%class.SkShaperJSONWriter* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkShaperJSONWriter9runBufferERKN8SkShaper10RunHandler7RunInfoE(%"struct.SkShaper::RunHandler::Buffer"* noalias nocapture sret, %class.SkShaperJSONWriter*, %"struct.SkShaper::RunHandler::RunInfo"* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %1, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %2, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %1, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast i16** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %4 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 1
  %14 = icmp ugt i64 %6, %13
  %15 = inttoptr i64 %11 to i16*
  br i1 %14, label %16, label %18

16:                                               ; preds = %3
  %17 = sub i64 %6, %13
  tail call void @_ZNSt3__16vectorItNS_9allocatorItEEE8__appendEm(%"class.std::__1::vector"* %4, i64 %17) #14
  br label %22

18:                                               ; preds = %3
  %19 = icmp ult i64 %6, %13
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = getelementptr inbounds i16, i16* %15, i64 %6
  store i16* %21, i16** %7, align 8
  br label %22

22:                                               ; preds = %16, %18, %20
  %23 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %1, i64 0, i32 3
  %24 = load i64, i64* %5, align 8
  %25 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %1, i64 0, i32 3, i32 0, i32 1
  %26 = bitcast %struct.SkPoint** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector.4"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = ashr exact i64 %30, 3
  %32 = icmp ugt i64 %24, %31
  %33 = inttoptr i64 %29 to %struct.SkPoint*
  br i1 %32, label %34, label %36

34:                                               ; preds = %22
  %35 = sub i64 %24, %31
  tail call void @_ZNSt3__16vectorI7SkPointNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.4"* %23, i64 %35) #14
  br label %40

36:                                               ; preds = %22
  %37 = icmp ult i64 %24, %31
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %33, i64 %24
  store %struct.SkPoint* %39, %struct.SkPoint** %25, align 8
  br label %40

40:                                               ; preds = %34, %36, %38
  %41 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %1, i64 0, i32 4
  %42 = load i64, i64* %5, align 8
  %43 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %1, i64 0, i32 4, i32 0, i32 1
  %44 = bitcast i32** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector.11"* %41 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = ashr exact i64 %48, 2
  %50 = icmp ugt i64 %42, %49
  %51 = inttoptr i64 %47 to i32*
  br i1 %50, label %52, label %55

52:                                               ; preds = %40
  %53 = sub i64 %42, %49
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.11"* %41, i64 %53) #14
  %54 = load i64, i64* %46, align 8
  br label %59

55:                                               ; preds = %40
  %56 = icmp ult i64 %42, %49
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = getelementptr inbounds i32, i32* %51, i64 %42
  store i32* %58, i32** %43, align 8
  br label %59

59:                                               ; preds = %52, %55, %57
  %60 = phi i64 [ %54, %52 ], [ %47, %55 ], [ %47, %57 ]
  %61 = load i64, i64* %10, align 8
  %62 = bitcast %"struct.SkShaper::RunHandler::Buffer"* %0 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"struct.SkShaper::RunHandler::Buffer", %"struct.SkShaper::RunHandler::Buffer"* %0, i64 0, i32 1
  %64 = load i64, i64* %28, align 8
  %65 = bitcast %struct.SkPoint** %63 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.SkShaper::RunHandler::Buffer", %"struct.SkShaper::RunHandler::Buffer"* %0, i64 0, i32 2
  store %struct.SkPoint* null, %struct.SkPoint** %66, align 8
  %67 = getelementptr inbounds %"struct.SkShaper::RunHandler::Buffer", %"struct.SkShaper::RunHandler::Buffer"* %0, i64 0, i32 3
  %68 = bitcast i32** %67 to i64*
  store i64 %60, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.SkShaper::RunHandler::Buffer", %"struct.SkShaper::RunHandler::Buffer"* %0, i64 0, i32 4, i32 0
  store float 0.000000e+00, float* %69, align 8
  %70 = getelementptr inbounds %"struct.SkShaper::RunHandler::Buffer", %"struct.SkShaper::RunHandler::Buffer"* %0, i64 0, i32 4, i32 1
  store float 0.000000e+00, float* %70, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkShaperJSONWriter15commitRunBufferERKN8SkShaper10RunHandler7RunInfoE(%class.SkShaperJSONWriter*, %"struct.SkShaper::RunHandler::RunInfo"* nocapture readonly dereferenceable(48)) unnamed_addr #2 align 2 {
  %3 = alloca %class.SkString, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %class.SkSpan.31, align 8
  %10 = alloca %"class.std::__1::function", align 8
  %11 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 1
  %12 = load %class.SkJSONWriter*, %class.SkJSONWriter** %11, align 8
  tail call void @_ZN12SkJSONWriter11beginObjectEPKcb(%class.SkJSONWriter* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i1 zeroext true)
  %13 = bitcast %class.SkString* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  %14 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %14, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %3) #14
  %15 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %1, i64 0, i32 0
  %16 = load %class.SkFont*, %class.SkFont** %15, align 8
  %17 = getelementptr inbounds %class.SkFont, %class.SkFont* %16, i64 0, i32 0, i32 0
  %18 = load %class.SkTypeface*, %class.SkTypeface** %17, align 8
  call void @_ZNK10SkTypeface13getFamilyNameEP8SkString(%class.SkTypeface* %18, %class.SkString* nonnull %3) #14
  %19 = load %class.SkJSONWriter*, %class.SkJSONWriter** %11, align 8
  %20 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %14, align 8
  %21 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %20, i64 0, i32 2
  call void @_ZN12SkJSONWriter10appendNameEPKc(%class.SkJSONWriter* %19, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0)) #14
  call void @_ZN12SkJSONWriter12appendStringEPKc(%class.SkJSONWriter* %19, i8* %21) #14
  %22 = load %class.SkJSONWriter*, %class.SkJSONWriter** %11, align 8
  %23 = load %class.SkFont*, %class.SkFont** %15, align 8
  %24 = getelementptr inbounds %class.SkFont, %class.SkFont* %23, i64 0, i32 1
  %25 = load float, float* %24, align 8
  call void @_ZN12SkJSONWriter10appendNameEPKc(%class.SkJSONWriter* %22, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)) #14
  call void @_ZN12SkJSONWriter10beginValueEb(%class.SkJSONWriter* %22, i1 zeroext false) #14
  %26 = fpext float %25 to double
  call void (%class.SkJSONWriter*, i8*, ...) @_ZN12SkJSONWriter7appendfEPKcz(%class.SkJSONWriter* %22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), double %26) #14
  %27 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %1, i64 0, i32 1
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %89, label %30

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = and i8 %28, 1
  %33 = icmp eq i8 %32, 0
  %34 = select i1 %33, [14 x i8]* @.str.3, [14 x i8]* @.str.4
  %35 = getelementptr inbounds [14 x i8], [14 x i8]* %34, i64 0, i64 0
  %36 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  store i8 13, i8* %37, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* nonnull align 1 %35, i64 13, i1 false) #14
  %39 = getelementptr inbounds i8, i8* %31, i64 13
  store i8 0, i8* %39, align 1
  %40 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #14
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #14
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 0, i64 24, i1 false) #14, !alias.scope !2
  %45 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 13, i8* %46, align 1, !alias.scope !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* nonnull align 8 %31, i64 13, i1 false) #14
  %47 = getelementptr inbounds i8, i8* %42, i64 13
  store i8 0, i8* %47, align 1
  %48 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 5) #14
  %49 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #14
  %50 = load i8, i8* %27, align 8
  %51 = zext i8 %50 to i32
  call void @_ZNSt3__19to_stringEi(%"class.std::__1::basic_string"* nonnull sret %7, i32 %51) #14
  %52 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1, !noalias !5
  %55 = icmp slt i8 %54, 0
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8, !noalias !5
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8, !noalias !5
  %60 = zext i8 %54 to i64
  %61 = select i1 %55, i8* %57, i8* %49
  %62 = select i1 %55, i64 %59, i64 %60
  %63 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %61, i64 %62) #14, !noalias !5
  %64 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 8 %64, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #14, !noalias !5
  %65 = load i8, i8* %53, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %30
  %68 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %30, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #14
  %70 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %69
  %75 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %75) #13
  br label %76

76:                                               ; preds = %69, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #14
  %77 = load %class.SkJSONWriter*, %class.SkJSONWriter** %11, align 8
  %78 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  %82 = load i8*, i8** %41, align 8
  %83 = select i1 %81, i8* %82, i8* %40
  call void @_ZN12SkJSONWriter10appendNameEPKc(%class.SkJSONWriter* %77, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)) #14
  call void @_ZN12SkJSONWriter12appendStringEPKc(%class.SkJSONWriter* %77, i8* %83) #14
  %84 = load i8, i8* %79, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %76
  %87 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %87) #13
  br label %88

88:                                               ; preds = %86, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br label %89

89:                                               ; preds = %2, %88
  %90 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 5
  %91 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  br label %100

98:                                               ; preds = %89
  %99 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  br label %100

100:                                              ; preds = %95, %98
  %101 = phi i8* [ %97, %95 ], [ %99, %98 ]
  %102 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %1, i64 0, i32 4, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %1, i64 0, i32 4, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = add i64 %105, %103
  %107 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 4, i32 0, i32 0
  %108 = load i32*, i32** %107, align 8
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 4, i32 0, i32 1
  %111 = load i32*, i32** %110, align 8
  %112 = getelementptr inbounds i32, i32* %111, i64 -1
  %113 = load i32, i32* %112, align 4
  %114 = icmp ugt i32 %109, %113
  %115 = bitcast i32** %110 to i64*
  %116 = ptrtoint i32* %111 to i64
  %117 = ptrtoint i32* %108 to i64
  %118 = sub i64 %116, %117
  %119 = icmp eq i64 %118, 0
  br i1 %114, label %120, label %124

120:                                              ; preds = %100
  br i1 %119, label %172, label %121

121:                                              ; preds = %120
  %122 = zext i32 %109 to i64
  %123 = icmp ugt i64 %106, %122
  br i1 %123, label %147, label %251

124:                                              ; preds = %100
  br i1 %119, label %172, label %125

125:                                              ; preds = %124
  %126 = ashr exact i64 %118, 2
  br label %127

127:                                              ; preds = %141, %125
  %128 = phi i32* [ %142, %141 ], [ %108, %125 ]
  %129 = phi i64 [ %131, %141 ], [ %126, %125 ]
  %130 = phi i64 [ %145, %141 ], [ %106, %125 ]
  %131 = add i64 %129, -1
  %132 = getelementptr inbounds i32, i32* %128, i64 %131
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i64
  %135 = icmp ugt i64 %130, %134
  br i1 %135, label %136, label %251

136:                                              ; preds = %127
  %137 = sub i64 %130, %134
  %138 = getelementptr inbounds i8, i8* %101, i64 %134
  %139 = call i32 @_ZN5SkUTF9CountUTF8EPKcm(i8* %138, i64 %137) #14
  %140 = icmp eq i32 %139, 1
  br i1 %140, label %141, label %251

141:                                              ; preds = %136
  %142 = load i32*, i32** %107, align 8
  %143 = getelementptr inbounds i32, i32* %142, i64 %131
  %144 = load i32, i32* %143, align 4
  %145 = zext i32 %144 to i64
  %146 = icmp eq i64 %131, 0
  br i1 %146, label %172, label %127

147:                                              ; preds = %121, %163
  %148 = phi i64 [ %170, %163 ], [ %122, %121 ]
  %149 = phi i64 [ %169, %163 ], [ 1, %121 ]
  %150 = phi i64 [ %166, %163 ], [ %106, %121 ]
  %151 = phi i64 [ %149, %163 ], [ 0, %121 ]
  %152 = sub i64 %150, %148
  %153 = getelementptr inbounds i8, i8* %101, i64 %148
  %154 = call i32 @_ZN5SkUTF9CountUTF8EPKcm(i8* %153, i64 %152) #14
  %155 = icmp eq i32 %154, 1
  br i1 %155, label %156, label %251

156:                                              ; preds = %147
  %157 = load i32*, i32** %107, align 8
  %158 = load i64, i64* %115, align 8
  %159 = ptrtoint i32* %157 to i64
  %160 = sub i64 %158, %159
  %161 = ashr exact i64 %160, 2
  %162 = icmp ult i64 %149, %161
  br i1 %162, label %163, label %172

163:                                              ; preds = %156
  %164 = getelementptr inbounds i32, i32* %157, i64 %151
  %165 = load i32, i32* %164, align 4
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds i32, i32* %157, i64 %149
  %168 = load i32, i32* %167, align 4
  %169 = add nuw i64 %149, 1
  %170 = zext i32 %168 to i64
  %171 = icmp ugt i32 %165, %168
  br i1 %171, label %147, label %251

172:                                              ; preds = %141, %156, %120, %124
  %173 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %173) #14
  %174 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %177 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %177, i8 -86, i64 24, i1 false)
  %178 = load i64, i64* %102, align 8
  %179 = load i8, i8* %92, align 1
  %180 = icmp slt i8 %179, 0
  br i1 %180, label %181, label %184

181:                                              ; preds = %172
  %182 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load i8*, i8** %182, align 8
  br label %186

184:                                              ; preds = %172
  %185 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  br label %186

186:                                              ; preds = %181, %184
  %187 = phi i8* [ %183, %181 ], [ %185, %184 ]
  %188 = getelementptr inbounds i8, i8* %187, i64 %178
  %189 = load i64, i64* %104, align 8
  %190 = icmp ugt i64 %189, -17
  br i1 %190, label %191, label %193

191:                                              ; preds = %186
  %192 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %192) #12
  unreachable

193:                                              ; preds = %186
  %194 = icmp ult i64 %189, 23
  br i1 %194, label %201, label %195

195:                                              ; preds = %193
  %196 = add nuw i64 %189, 16
  %197 = and i64 %196, -16
  %198 = call i8* @_Znwm(i64 %197) #13
  store i8* %198, i8** %174, align 8
  %199 = or i64 %197, -9223372036854775808
  store i64 %199, i64* %176, align 8
  store i64 %189, i64* %175, align 8
  %200 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %206

201:                                              ; preds = %193
  %202 = trunc i64 %189 to i8
  %203 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %203, i64 0, i32 1, i32 0
  store i8 %202, i8* %204, align 1
  %205 = icmp eq i64 %189, 0
  br i1 %205, label %209, label %206

206:                                              ; preds = %201, %195
  %207 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %203, %201 ], [ %200, %195 ]
  %208 = phi i8* [ %173, %201 ], [ %198, %195 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %208, i8* align 1 %188, i64 %189, i1 false) #14
  br label %209

209:                                              ; preds = %201, %206
  %210 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %203, %201 ], [ %207, %206 ]
  %211 = phi i8* [ %173, %201 ], [ %208, %206 ]
  %212 = getelementptr inbounds i8, i8* %211, i64 %189
  store i8 0, i8* %212, align 1
  %213 = load %class.SkJSONWriter*, %class.SkJSONWriter** %11, align 8
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %210, i64 0, i32 1, i32 0
  %215 = load i8, i8* %214, align 1
  %216 = icmp slt i8 %215, 0
  %217 = load i8*, i8** %174, align 8
  %218 = select i1 %216, i8* %217, i8* %173
  call void @_ZN12SkJSONWriter10appendNameEPKc(%class.SkJSONWriter* %213, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)) #14
  call void @_ZN12SkJSONWriter12appendStringEPKc(%class.SkJSONWriter* %213, i8* %218) #14
  %219 = load %class.SkJSONWriter*, %class.SkJSONWriter** %11, align 8
  call void @_ZN12SkJSONWriter10beginArrayEPKcb(%class.SkJSONWriter* %219, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i1 zeroext false)
  %220 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 2, i32 0, i32 0
  %221 = load i16*, i16** %220, align 8
  %222 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 2, i32 0, i32 1
  %223 = load i16*, i16** %222, align 8
  %224 = icmp eq i16* %221, %223
  br i1 %224, label %225, label %231

225:                                              ; preds = %231, %209
  %226 = load %class.SkJSONWriter*, %class.SkJSONWriter** %11, align 8
  call void @_ZN12SkJSONWriter8endArrayEv(%class.SkJSONWriter* %226)
  %227 = load %class.SkJSONWriter*, %class.SkJSONWriter** %11, align 8
  call void @_ZN12SkJSONWriter10beginArrayEPKcb(%class.SkJSONWriter* %227, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i1 zeroext false)
  %228 = load i32*, i32** %107, align 8
  %229 = load i32*, i32** %110, align 8
  %230 = icmp eq i32* %228, %229
  br i1 %230, label %238, label %245

231:                                              ; preds = %209, %231
  %232 = phi i16* [ %236, %231 ], [ %221, %209 ]
  %233 = load i16, i16* %232, align 2
  %234 = load %class.SkJSONWriter*, %class.SkJSONWriter** %11, align 8
  %235 = zext i16 %233 to i32
  call void @_ZN12SkJSONWriter10beginValueEb(%class.SkJSONWriter* %234, i1 zeroext false) #14
  call void (%class.SkJSONWriter*, i8*, ...) @_ZN12SkJSONWriter7appendfEPKcz(%class.SkJSONWriter* %234, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i32 %235) #14
  %236 = getelementptr inbounds i16, i16* %232, i64 1
  %237 = icmp eq i16* %236, %223
  br i1 %237, label %225, label %231

238:                                              ; preds = %245, %225
  %239 = load %class.SkJSONWriter*, %class.SkJSONWriter** %11, align 8
  call void @_ZN12SkJSONWriter8endArrayEv(%class.SkJSONWriter* %239)
  %240 = load i8, i8* %214, align 1
  %241 = icmp slt i8 %240, 0
  br i1 %241, label %242, label %244

242:                                              ; preds = %238
  %243 = load i8*, i8** %174, align 8
  call void @_ZdlPv(i8* %243) #13
  br label %244

244:                                              ; preds = %238, %242
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %173) #14
  br label %292

245:                                              ; preds = %225, %245
  %246 = phi i32* [ %249, %245 ], [ %228, %225 ]
  %247 = load i32, i32* %246, align 4
  %248 = load %class.SkJSONWriter*, %class.SkJSONWriter** %11, align 8
  call void @_ZN12SkJSONWriter10beginValueEb(%class.SkJSONWriter* %248, i1 zeroext false) #14
  call void (%class.SkJSONWriter*, i8*, ...) @_ZN12SkJSONWriter7appendfEPKcz(%class.SkJSONWriter* %248, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i32 %247) #14
  %249 = getelementptr inbounds i32, i32* %246, i64 1
  %250 = icmp eq i32* %249, %229
  br i1 %250, label %238, label %245

251:                                              ; preds = %136, %127, %163, %147, %121
  %252 = load i8, i8* %92, align 1
  %253 = icmp slt i8 %252, 0
  br i1 %253, label %254, label %257

254:                                              ; preds = %251
  %255 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load i8*, i8** %255, align 8
  br label %259

257:                                              ; preds = %251
  %258 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  br label %259

259:                                              ; preds = %254, %257
  %260 = phi i8* [ %256, %254 ], [ %258, %257 ]
  %261 = load i64, i64* %102, align 8
  %262 = load i64, i64* %104, align 8
  %263 = add i64 %262, %261
  %264 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 2, i32 0, i32 0
  %265 = load i16*, i16** %264, align 8
  %266 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 2, i32 0, i32 1
  %267 = bitcast i16** %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = ptrtoint i16* %265 to i64
  %270 = sub i64 %268, %269
  %271 = ashr exact i64 %270, 1
  %272 = bitcast i32** %107 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = load i64, i64* %115, align 8
  %275 = sub i64 %274, %273
  %276 = ashr exact i64 %275, 2
  %277 = bitcast %class.SkSpan.31* %9 to i64*
  store i64 %273, i64* %277, align 8
  %278 = getelementptr inbounds %class.SkSpan.31, %class.SkSpan.31* %9, i64 0, i32 1
  store i64 %276, i64* %278, align 8
  %279 = bitcast %"class.std::__1::function"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %279) #14
  %280 = ptrtoint %class.SkShaperJSONWriter* %0 to i64
  %281 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %10, i64 0, i32 0, i32 1, i32 0
  %282 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %10, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i64, %class.SkSpan.32*, %class.SkSpan*)* @"_ZNSt3__110__function16__policy_invokerIFvm6SkSpanIKcES2_IKtEEE11__call_implINS0_20__default_alloc_funcIZN18SkShaperJSONWriter15commitRunBufferERKN8SkShaper10RunHandler7RunInfoEE3$_0S7_EEEEvPKNS0_16__policy_storageEmOS4_OS6_", void (%"union.std::__1::__function::__policy_storage"*, i64, %class.SkSpan.32*, %class.SkSpan*)** %281, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN18SkShaperJSONWriter15commitRunBufferERKN8SkShaper10RunHandler7RunInfoEE3$_0Fvm6SkSpanIKcESB_IKtEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %282, align 8
  %283 = bitcast %"class.std::__1::function"* %10 to i64*
  store i64 %280, i64* %283, align 8
  call void @_ZN18SkShaperJSONWriter17VisualizeClustersEPKcmm6SkSpanIKtES2_IKjERKNSt3__18functionIFvmS2_IS0_ES4_EEE(i8* %260, i64 %261, i64 %263, i16* %265, i64 %271, %class.SkSpan.31* nonnull byval(%class.SkSpan.31) align 8 %9, %"class.std::__1::function"* nonnull dereferenceable(32) %10)
  %284 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %282, align 8
  %285 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %284, i64 0, i32 1
  %286 = load void (i8*)*, void (i8*)** %285, align 8
  %287 = icmp eq void (i8*)* %286, null
  br i1 %287, label %291, label %288

288:                                              ; preds = %259
  %289 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %10, i64 0, i32 0, i32 0, i32 0
  %290 = load i8*, i8** %289, align 8
  call void %286(i8* %290) #14
  br label %291

291:                                              ; preds = %259, %288
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %279) #14
  br label %292

292:                                              ; preds = %291, %244
  %293 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %1, i64 0, i32 3
  %294 = load i64, i64* %293, align 8
  %295 = icmp ugt i64 %294, 1
  br i1 %295, label %296, label %313

296:                                              ; preds = %292
  %297 = load %class.SkJSONWriter*, %class.SkJSONWriter** %11, align 8
  call void @_ZN12SkJSONWriter10beginArrayEPKcb(%class.SkJSONWriter* %297, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i1 zeroext false)
  %298 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 3, i32 0, i32 0
  %299 = load %struct.SkPoint*, %struct.SkPoint** %298, align 8
  %300 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 3, i32 0, i32 1
  %301 = load %struct.SkPoint*, %struct.SkPoint** %300, align 8
  %302 = icmp eq %struct.SkPoint* %299, %301
  br i1 %302, label %303, label %305

303:                                              ; preds = %305, %296
  %304 = load %class.SkJSONWriter*, %class.SkJSONWriter** %11, align 8
  call void @_ZN12SkJSONWriter8endArrayEv(%class.SkJSONWriter* %304)
  br label %313

305:                                              ; preds = %296, %305
  %306 = phi %struct.SkPoint* [ %311, %305 ], [ %299, %296 ]
  %307 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %306, i64 0, i32 0
  %308 = load float, float* %307, align 4
  %309 = load %class.SkJSONWriter*, %class.SkJSONWriter** %11, align 8
  call void @_ZN12SkJSONWriter10beginValueEb(%class.SkJSONWriter* %309, i1 zeroext false) #14
  %310 = fpext float %308 to double
  call void (%class.SkJSONWriter*, i8*, ...) @_ZN12SkJSONWriter7appendfEPKcz(%class.SkJSONWriter* %309, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), double %310) #14
  %311 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %306, i64 1
  %312 = icmp eq %struct.SkPoint* %311, %301
  br i1 %312, label %303, label %305

313:                                              ; preds = %303, %292
  %314 = load %class.SkJSONWriter*, %class.SkJSONWriter** %11, align 8
  call void @_ZN12SkJSONWriter10beginArrayEPKcb(%class.SkJSONWriter* %314, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i1 zeroext false)
  %315 = load i64, i64* %293, align 8
  %316 = icmp ugt i64 %315, 1
  br i1 %316, label %317, label %319

317:                                              ; preds = %313
  %318 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 3, i32 0, i32 0
  br label %336

319:                                              ; preds = %336, %313
  %320 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 3, i32 0, i32 1
  %321 = load %struct.SkPoint*, %struct.SkPoint** %320, align 8
  %322 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 3, i32 0, i32 0
  %323 = load %struct.SkPoint*, %struct.SkPoint** %322, align 8
  %324 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %321, i64 -1, i32 0
  %325 = load float, float* %324, align 4
  %326 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %323, i64 0, i32 0
  %327 = load float, float* %326, align 4
  %328 = fsub float %325, %327
  %329 = getelementptr inbounds %"struct.SkShaper::RunHandler::RunInfo", %"struct.SkShaper::RunHandler::RunInfo"* %1, i64 0, i32 2, i32 0
  %330 = load float, float* %329, align 4
  %331 = fsub float %330, %328
  %332 = load %class.SkJSONWriter*, %class.SkJSONWriter** %11, align 8
  call void @_ZN12SkJSONWriter10beginValueEb(%class.SkJSONWriter* %332, i1 zeroext false) #14
  %333 = fpext float %331 to double
  call void (%class.SkJSONWriter*, i8*, ...) @_ZN12SkJSONWriter7appendfEPKcz(%class.SkJSONWriter* %332, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), double %333) #14
  %334 = load %class.SkJSONWriter*, %class.SkJSONWriter** %11, align 8
  call void @_ZN12SkJSONWriter8endArrayEv(%class.SkJSONWriter* %334)
  %335 = load %class.SkJSONWriter*, %class.SkJSONWriter** %11, align 8
  call void @_ZN12SkJSONWriter9endObjectEv(%class.SkJSONWriter* %335)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  ret void

336:                                              ; preds = %317, %336
  %337 = phi i64 [ 1, %317 ], [ %347, %336 ]
  %338 = load %class.SkJSONWriter*, %class.SkJSONWriter** %11, align 8
  %339 = load %struct.SkPoint*, %struct.SkPoint** %318, align 8
  %340 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %339, i64 %337, i32 0
  %341 = load float, float* %340, align 4
  %342 = add i64 %337, -1
  %343 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %339, i64 %342, i32 0
  %344 = load float, float* %343, align 4
  %345 = fsub float %341, %344
  call void @_ZN12SkJSONWriter10beginValueEb(%class.SkJSONWriter* %338, i1 zeroext false) #14
  %346 = fpext float %345 to double
  call void (%class.SkJSONWriter*, i8*, ...) @_ZN12SkJSONWriter7appendfEPKcz(%class.SkJSONWriter* %338, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), double %346) #14
  %347 = add nuw i64 %337, 1
  %348 = load i64, i64* %293, align 8
  %349 = icmp ult i64 %347, %348
  br i1 %349, label %336, label %319
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkJSONWriter11beginObjectEPKcb(%class.SkJSONWriter*, i8*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = zext i1 %2 to i8
  tail call void @_ZN12SkJSONWriter10appendNameEPKc(%class.SkJSONWriter* %0, i8* %1)
  tail call void @_ZN12SkJSONWriter10beginValueEb(%class.SkJSONWriter* %0, i1 zeroext true)
  %5 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 2
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 1
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %7, %10
  %12 = inttoptr i64 %10 to i8*
  br i1 %11, label %13, label %30

13:                                               ; preds = %3
  %14 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, %12
  br i1 %16, label %30, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %19 = load %class.SkWStream*, %class.SkWStream** %18, align 8
  %20 = ptrtoint i8* %15 to i64
  %21 = sub i64 %7, %20
  %22 = bitcast %class.SkWStream* %19 to i1 (%class.SkWStream*, i8*, i64)***
  %23 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %23, i64 2
  %25 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %24, align 8
  %26 = tail call zeroext i1 %25(%class.SkWStream* %19, i8* %15, i64 %21) #14
  %27 = bitcast %class.SkJSONWriter* %0 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %9, align 8
  %29 = inttoptr i64 %28 to i8*
  br label %30

30:                                               ; preds = %3, %13, %17
  %31 = phi i8* [ %29, %17 ], [ %12, %13 ], [ %12, %3 ]
  store i8 123, i8* %31, align 1
  %32 = load i8*, i8** %8, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 1
  store i8* %33, i8** %8, align 8
  %34 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 6, i32 0, i32 0, i64 64
  %35 = bitcast i8* %34 to %class.SkTArray*
  tail call void @_ZN8SkTArrayIN12SkJSONWriter5ScopeELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %35, i32 1, i32 1) #14
  %36 = bitcast i8* %34 to i32**
  %37 = load i32*, i32** %36, align 8
  %38 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 6, i32 0, i32 0, i64 72
  %39 = bitcast i8* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = lshr i64 %40, 1
  %42 = and i64 %41, 2147483647
  %43 = getelementptr inbounds i32, i32* %37, i64 %42
  %44 = add i64 %40, 2
  %45 = and i64 %44, 4294967294
  %46 = and i64 %40, -4294967295
  %47 = or i64 %45, %46
  store i64 %47, i64* %39, align 8
  store i32 1, i32* %43, align 4
  %48 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 7, i32 0, i32 0, i64 16
  %49 = bitcast i8* %48 to %class.SkTArray.2*
  tail call void @_ZN8SkTArrayIbLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.2* %49, i32 1, i32 1) #14
  %50 = bitcast i8* %48 to i8**
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 7, i32 0, i32 0, i64 24
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = lshr i64 %54, 1
  %56 = and i64 %55, 2147483647
  %57 = getelementptr inbounds i8, i8* %51, i64 %56
  %58 = add i64 %54, 2
  %59 = and i64 %58, 4294967294
  %60 = and i64 %54, -4294967295
  %61 = or i64 %59, %60
  store i64 %61, i64* %53, align 8
  store i8 %4, i8* %57, align 1
  %62 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 5
  store i32 2, i32* %62, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #4

declare void @_ZNK10SkTypeface13getFamilyNameEP8SkString(%class.SkTypeface*, %class.SkString*) local_unnamed_addr #4

declare void @_ZNSt3__19to_stringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkJSONWriter10beginArrayEPKcb(%class.SkJSONWriter*, i8*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = zext i1 %2 to i8
  tail call void @_ZN12SkJSONWriter10appendNameEPKc(%class.SkJSONWriter* %0, i8* %1)
  tail call void @_ZN12SkJSONWriter10beginValueEb(%class.SkJSONWriter* %0, i1 zeroext true)
  %5 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 2
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 1
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %7, %10
  %12 = inttoptr i64 %10 to i8*
  br i1 %11, label %13, label %30

13:                                               ; preds = %3
  %14 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, %12
  br i1 %16, label %30, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %19 = load %class.SkWStream*, %class.SkWStream** %18, align 8
  %20 = ptrtoint i8* %15 to i64
  %21 = sub i64 %7, %20
  %22 = bitcast %class.SkWStream* %19 to i1 (%class.SkWStream*, i8*, i64)***
  %23 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %23, i64 2
  %25 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %24, align 8
  %26 = tail call zeroext i1 %25(%class.SkWStream* %19, i8* %15, i64 %21) #14
  %27 = bitcast %class.SkJSONWriter* %0 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %9, align 8
  %29 = inttoptr i64 %28 to i8*
  br label %30

30:                                               ; preds = %3, %13, %17
  %31 = phi i8* [ %29, %17 ], [ %12, %13 ], [ %12, %3 ]
  store i8 91, i8* %31, align 1
  %32 = load i8*, i8** %8, align 8
  %33 = getelementptr inbounds i8, i8* %32, i64 1
  store i8* %33, i8** %8, align 8
  %34 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 6, i32 0, i32 0, i64 64
  %35 = bitcast i8* %34 to %class.SkTArray*
  tail call void @_ZN8SkTArrayIN12SkJSONWriter5ScopeELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %35, i32 1, i32 1) #14
  %36 = bitcast i8* %34 to i32**
  %37 = load i32*, i32** %36, align 8
  %38 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 6, i32 0, i32 0, i64 72
  %39 = bitcast i8* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = lshr i64 %40, 1
  %42 = and i64 %41, 2147483647
  %43 = getelementptr inbounds i32, i32* %37, i64 %42
  %44 = add i64 %40, 2
  %45 = and i64 %44, 4294967294
  %46 = and i64 %40, -4294967295
  %47 = or i64 %45, %46
  store i64 %47, i64* %39, align 8
  store i32 2, i32* %43, align 4
  %48 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 7, i32 0, i32 0, i64 16
  %49 = bitcast i8* %48 to %class.SkTArray.2*
  tail call void @_ZN8SkTArrayIbLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.2* %49, i32 1, i32 1) #14
  %50 = bitcast i8* %48 to i8**
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 7, i32 0, i32 0, i64 24
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = lshr i64 %54, 1
  %56 = and i64 %55, 2147483647
  %57 = getelementptr inbounds i8, i8* %51, i64 %56
  %58 = add i64 %54, 2
  %59 = and i64 %58, 4294967294
  %60 = and i64 %54, -4294967295
  %61 = or i64 %59, %60
  store i64 %61, i64* %53, align 8
  store i8 %4, i8* %57, align 1
  %62 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 5
  store i32 5, i32* %62, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkJSONWriter8endArrayEv(%class.SkJSONWriter*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 5
  %5 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 7, i32 0, i32 0, i64 16
  %6 = bitcast i8* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 7, i32 0, i32 0, i64 24
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = lshr i64 %10, 1
  %12 = and i64 %11, 2147483647
  %13 = add nsw i64 %12, -1
  %14 = getelementptr inbounds i8, i8* %7, i64 %13
  %15 = load i8, i8* %14, align 1, !range !8
  %16 = icmp ne i8 %15, 0
  %17 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 6, i32 0, i32 0, i64 64
  %18 = bitcast i8* %17 to %class.SkTArray*
  %19 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 6, i32 0, i32 0, i64 72
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 4294967294
  %23 = add nuw nsw i64 %22, 4294967294
  %24 = and i64 %23, 4294967294
  %25 = and i64 %21, -4294967295
  %26 = or i64 %24, %25
  store i64 %26, i64* %20, align 8
  tail call void @_ZN8SkTArrayIN12SkJSONWriter5ScopeELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %18, i32 0, i32 2) #14
  %27 = bitcast i8* %5 to %class.SkTArray.2*
  %28 = load i64, i64* %9, align 8
  %29 = and i64 %28, 4294967294
  %30 = add nuw nsw i64 %29, 4294967294
  %31 = and i64 %30, 4294967294
  %32 = and i64 %28, -4294967295
  %33 = or i64 %31, %32
  store i64 %33, i64* %9, align 8
  tail call void @_ZN8SkTArrayIbLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.2* %27, i32 0, i32 2) #14
  %34 = bitcast i8* %17 to i32**
  %35 = load i32*, i32** %34, align 8
  %36 = load i64, i64* %20, align 8
  %37 = lshr i64 %36, 1
  %38 = and i64 %37, 2147483647
  %39 = add nsw i64 %38, -1
  %40 = getelementptr inbounds i32, i32* %35, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = icmp ult i32 %41, 3
  br i1 %42, label %43, label %47

43:                                               ; preds = %1
  %44 = sext i32 %41 to i64
  %45 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN12SkJSONWriter9endObjectEv, i64 0, i64 %44
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %2, align 4
  br label %47

47:                                               ; preds = %1, %43
  br i1 %4, label %49, label %48

48:                                               ; preds = %47
  tail call void @_ZN12SkJSONWriter9separatorEb(%class.SkJSONWriter* %0, i1 zeroext %16)
  br label %49

49:                                               ; preds = %48, %47
  %50 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 2
  %51 = bitcast i8** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 1
  %54 = bitcast i8** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %52, %55
  %57 = inttoptr i64 %55 to i8*
  br i1 %56, label %58, label %75

58:                                               ; preds = %49
  %59 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, %57
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %64 = load %class.SkWStream*, %class.SkWStream** %63, align 8
  %65 = ptrtoint i8* %60 to i64
  %66 = sub i64 %52, %65
  %67 = bitcast %class.SkWStream* %64 to i1 (%class.SkWStream*, i8*, i64)***
  %68 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %67, align 8
  %69 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %68, i64 2
  %70 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %69, align 8
  %71 = tail call zeroext i1 %70(%class.SkWStream* %64, i8* %60, i64 %66) #14
  %72 = bitcast %class.SkJSONWriter* %0 to i64*
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %54, align 8
  %74 = inttoptr i64 %73 to i8*
  br label %75

75:                                               ; preds = %49, %58, %62
  %76 = phi i8* [ %74, %62 ], [ %57, %58 ], [ %57, %49 ]
  store i8 93, i8* %76, align 1
  %77 = load i8*, i8** %53, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 1
  store i8* %78, i8** %53, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkShaperJSONWriter17VisualizeClustersEPKcmm6SkSpanIKtES2_IKjERKNSt3__18functionIFvmS2_IS0_ES4_EEE(i8*, i64, i64, i16*, i64, %class.SkSpan.31* nocapture readonly byval(%class.SkSpan.31) align 8, %"class.std::__1::function"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.SkSpan.32, align 8
  %9 = alloca %class.SkSpan, align 8
  %10 = alloca %class.SkSpan, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %class.anon.41, align 8
  %17 = alloca %class.anon.42, align 8
  %18 = alloca %"class.std::__1::function.36", align 8
  %19 = getelementptr inbounds %class.SkSpan, %class.SkSpan* %10, i64 0, i32 0
  store i16* %3, i16** %19, align 8
  %20 = getelementptr inbounds %class.SkSpan, %class.SkSpan* %10, i64 0, i32 1
  store i64 %4, i64* %20, align 8
  store i8* %0, i8** %11, align 8
  %21 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  %22 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #14
  %23 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #14
  %24 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #14
  %25 = bitcast %class.anon.41* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #14
  %26 = getelementptr inbounds %class.anon.41, %class.anon.41* %16, i64 0, i32 0
  %27 = getelementptr inbounds %class.anon.41, %class.anon.41* %16, i64 0, i32 1
  %28 = getelementptr inbounds %class.anon.41, %class.anon.41* %16, i64 0, i32 2
  %29 = getelementptr inbounds %class.anon.41, %class.anon.41* %16, i64 0, i32 3
  store i64* %12, i64** %26, align 8
  store i64* %13, i64** %27, align 8
  store i32* %14, i32** %28, align 8
  store i32* %15, i32** %29, align 8
  %30 = bitcast %class.anon.42* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %30) #14
  %31 = getelementptr inbounds %class.anon.42, %class.anon.42* %17, i64 0, i32 0
  store i64* %12, i64** %31, align 8
  %32 = getelementptr inbounds %class.anon.42, %class.anon.42* %17, i64 0, i32 1
  store i64* %13, i64** %32, align 8
  %33 = getelementptr inbounds %class.anon.42, %class.anon.42* %17, i64 0, i32 2
  store i8** %11, i8*** %33, align 8
  %34 = getelementptr inbounds %class.anon.42, %class.anon.42* %17, i64 0, i32 3
  store i32* %14, i32** %34, align 8
  %35 = getelementptr inbounds %class.anon.42, %class.anon.42* %17, i64 0, i32 4
  store i32* %15, i32** %35, align 8
  %36 = getelementptr inbounds %class.anon.42, %class.anon.42* %17, i64 0, i32 5
  store %class.SkSpan* %10, %class.SkSpan** %36, align 8
  %37 = getelementptr inbounds %class.anon.42, %class.anon.42* %17, i64 0, i32 6
  store %"class.std::__1::function"* %6, %"class.std::__1::function"** %37, align 8
  %38 = getelementptr inbounds %class.anon.42, %class.anon.42* %17, i64 0, i32 7
  store %class.anon.41* %16, %class.anon.41** %38, align 8
  store i64 -1, i64* %12, align 8
  store i64 0, i64* %13, align 8
  store i32 -1, i32* %14, align 4
  store i32 0, i32* %15, align 4
  %39 = getelementptr inbounds %class.SkSpan.31, %class.SkSpan.31* %5, i64 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = getelementptr inbounds %class.SkSpan.31, %class.SkSpan.31* %5, i64 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::function.36"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #14
  %44 = getelementptr inbounds %"class.std::__1::function.36", %"class.std::__1::function.36"* %18, i64 0, i32 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.std::__1::function.36", %"class.std::__1::function.36"* %18, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)* @"_ZNSt3__110__function16__policy_invokerIFvmmjjEE11__call_implINS0_20__default_alloc_funcIZN18SkShaperJSONWriter17VisualizeClustersEPKcmm6SkSpanIKtES9_IKjERKNS_8functionIFvmS9_IS7_ESB_EEEE3$_2S2_EEEEvPKNS0_16__policy_storageEmmjj", void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)** %44, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN18SkShaperJSONWriter17VisualizeClustersEPKcmm6SkSpanIKtES7_IKjERKNS_8functionIFvmS7_IS5_ES9_EEEE3$_2FvmmjjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %45, align 8
  %46 = call i8* @_Znwm(i64 64) #13, !noalias !9
  %47 = bitcast i8* %46 to i8***
  store i8** %11, i8*** %47, align 8
  %48 = getelementptr inbounds i8, i8* %46, i64 8
  %49 = bitcast i8* %48 to i64**
  store i64* %12, i64** %49, align 8
  %50 = getelementptr inbounds i8, i8* %46, i64 16
  %51 = bitcast i8* %50 to i64**
  store i64* %13, i64** %51, align 8
  %52 = getelementptr inbounds i8, i8* %46, i64 24
  %53 = bitcast i8* %52 to i32**
  store i32* %14, i32** %53, align 8
  %54 = getelementptr inbounds i8, i8* %46, i64 32
  %55 = bitcast i8* %54 to i32**
  store i32* %15, i32** %55, align 8
  %56 = getelementptr inbounds i8, i8* %46, i64 40
  %57 = bitcast i8* %56 to %class.anon.42**
  store %class.anon.42* %17, %class.anon.42** %57, align 8
  %58 = getelementptr inbounds i8, i8* %46, i64 48
  %59 = bitcast i8* %58 to %class.SkSpan**
  store %class.SkSpan* %10, %class.SkSpan** %59, align 8
  %60 = getelementptr inbounds i8, i8* %46, i64 56
  %61 = bitcast i8* %60 to %"class.std::__1::function"**
  store %"class.std::__1::function"* %6, %"class.std::__1::function"** %61, align 8
  %62 = getelementptr inbounds %"class.std::__1::function.36", %"class.std::__1::function.36"* %18, i64 0, i32 0, i32 0, i32 0
  store i8* %46, i8** %62, align 8
  %63 = load i32, i32* %40, align 4
  %64 = add i64 %42, -1
  %65 = getelementptr inbounds i32, i32* %40, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = icmp ugt i32 %63, %66
  %68 = icmp eq i64 %42, 0
  br i1 %67, label %97, label %69

69:                                               ; preds = %7
  br i1 %68, label %74, label %70

70:                                               ; preds = %69
  %71 = getelementptr inbounds %"class.std::__1::function.36", %"class.std::__1::function.36"* %18, i64 0, i32 0, i32 0
  br label %80

72:                                               ; preds = %88
  %73 = load void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)*, void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)** %44, align 8
  br label %74

74:                                               ; preds = %72, %69
  %75 = phi void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)* [ @"_ZNSt3__110__function16__policy_invokerIFvmmjjEE11__call_implINS0_20__default_alloc_funcIZN18SkShaperJSONWriter17VisualizeClustersEPKcmm6SkSpanIKtES9_IKjERKNS_8functionIFvmS9_IS7_ESB_EEEE3$_2S2_EEEEvPKNS0_16__policy_storageEmmjj", %69 ], [ %73, %72 ]
  %76 = phi i64 [ 0, %69 ], [ %89, %72 ]
  %77 = phi i32 [ %63, %69 ], [ %92, %72 ]
  %78 = trunc i64 %2 to i32
  %79 = getelementptr inbounds %"class.std::__1::function.36", %"class.std::__1::function.36"* %18, i64 0, i32 0, i32 0
  call void %75(%"union.std::__1::__function::__policy_storage"* nonnull %79, i64 %76, i64 %42, i32 %77, i32 %78) #14
  br label %132

80:                                               ; preds = %94, %70
  %81 = phi i32 [ %63, %70 ], [ %96, %94 ]
  %82 = phi i32 [ %63, %70 ], [ %92, %94 ]
  %83 = phi i64 [ 0, %70 ], [ %90, %94 ]
  %84 = phi i64 [ 0, %70 ], [ %89, %94 ]
  %85 = icmp eq i32 %82, %81
  br i1 %85, label %88, label %86

86:                                               ; preds = %80
  %87 = load void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)*, void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)** %44, align 8
  call void %87(%"union.std::__1::__function::__policy_storage"* nonnull %71, i64 %84, i64 %83, i32 %82, i32 %81) #14
  br label %88

88:                                               ; preds = %86, %80
  %89 = phi i64 [ %84, %80 ], [ %83, %86 ]
  %90 = add nuw i64 %83, 1
  %91 = getelementptr inbounds i32, i32* %40, i64 %89
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i64 %90, %42
  br i1 %93, label %72, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds i32, i32* %40, i64 %90
  %96 = load i32, i32* %95, align 4
  br label %80

97:                                               ; preds = %7
  br i1 %68, label %103, label %98

98:                                               ; preds = %97
  %99 = trunc i64 %2 to i32
  %100 = getelementptr inbounds %"class.std::__1::function.36", %"class.std::__1::function.36"* %18, i64 0, i32 0, i32 0
  br label %111

101:                                              ; preds = %122
  %102 = load void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)*, void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)** %44, align 8
  br label %103

103:                                              ; preds = %101, %97
  %104 = phi void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)* [ @"_ZNSt3__110__function16__policy_invokerIFvmmjjEE11__call_implINS0_20__default_alloc_funcIZN18SkShaperJSONWriter17VisualizeClustersEPKcmm6SkSpanIKtES9_IKjERKNS_8functionIFvmS9_IS7_ESB_EEEE3$_2S2_EEEEvPKNS0_16__policy_storageEmmjj", %97 ], [ %102, %101 ]
  %105 = phi i64 [ 0, %97 ], [ %123, %101 ]
  %106 = trunc i64 %1 to i32
  %107 = add i64 %105, -1
  %108 = getelementptr inbounds i32, i32* %40, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %"class.std::__1::function.36", %"class.std::__1::function.36"* %18, i64 0, i32 0, i32 0
  call void %104(%"union.std::__1::__function::__policy_storage"* nonnull %110, i64 %105, i64 %42, i32 %106, i32 %109) #14
  br label %132

111:                                              ; preds = %127, %98
  %112 = phi i32 [ %63, %98 ], [ %131, %127 ]
  %113 = phi i32 [ %63, %98 ], [ %129, %127 ]
  %114 = phi i64 [ 0, %98 ], [ %125, %127 ]
  %115 = phi i32 [ %99, %98 ], [ %124, %127 ]
  %116 = phi i64 [ 0, %98 ], [ %123, %127 ]
  %117 = icmp eq i32 %113, %112
  br i1 %117, label %122, label %118

118:                                              ; preds = %111
  %119 = getelementptr inbounds i32, i32* %40, i64 %116
  %120 = load void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)*, void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)** %44, align 8
  call void %120(%"union.std::__1::__function::__policy_storage"* nonnull %100, i64 %116, i64 %114, i32 %113, i32 %115) #14
  %121 = load i32, i32* %119, align 4
  br label %122

122:                                              ; preds = %118, %111
  %123 = phi i64 [ %116, %111 ], [ %114, %118 ]
  %124 = phi i32 [ %115, %111 ], [ %121, %118 ]
  %125 = add nuw i64 %114, 1
  %126 = icmp eq i64 %125, %42
  br i1 %126, label %101, label %127

127:                                              ; preds = %122
  %128 = getelementptr inbounds i32, i32* %40, i64 %123
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds i32, i32* %40, i64 %125
  %131 = load i32, i32* %130, align 4
  br label %111

132:                                              ; preds = %74, %103
  %133 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %45, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %133, i64 0, i32 1
  %135 = load void (i8*)*, void (i8*)** %134, align 8
  %136 = icmp eq void (i8*)* %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %132
  %138 = load i8*, i8** %62, align 8
  call void %135(i8* %138) #14
  br label %139

139:                                              ; preds = %132, %137
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #14
  %140 = load i64*, i64** %31, align 8
  %141 = load i64, i64* %140, align 8
  %142 = load i64*, i64** %32, align 8
  %143 = load i64, i64* %142, align 8
  %144 = icmp ugt i64 %143, %141
  br i1 %144, label %145, label %171

145:                                              ; preds = %139
  %146 = sub i64 %143, %141
  %147 = load i8**, i8*** %33, align 8
  %148 = load i8*, i8** %147, align 8
  %149 = load i32*, i32** %34, align 8
  %150 = load i32, i32* %149, align 4
  %151 = zext i32 %150 to i64
  %152 = getelementptr inbounds i8, i8* %148, i64 %151
  %153 = load i32*, i32** %35, align 8
  %154 = load i32, i32* %153, align 4
  %155 = sub i32 %154, %150
  %156 = zext i32 %155 to i64
  %157 = load %class.SkSpan*, %class.SkSpan** %36, align 8
  %158 = getelementptr inbounds %class.SkSpan, %class.SkSpan* %157, i64 0, i32 0
  %159 = load i16*, i16** %158, align 8
  %160 = getelementptr inbounds i16, i16* %159, i64 %141
  %161 = load %"class.std::__1::function"*, %"class.std::__1::function"** %37, align 8
  %162 = bitcast %class.SkSpan.32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %162) #14
  %163 = bitcast %class.SkSpan* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %163) #14
  %164 = getelementptr inbounds %class.SkSpan.32, %class.SkSpan.32* %8, i64 0, i32 0
  store i8* %152, i8** %164, align 8
  %165 = getelementptr inbounds %class.SkSpan.32, %class.SkSpan.32* %8, i64 0, i32 1
  store i64 %156, i64* %165, align 8
  %166 = getelementptr inbounds %class.SkSpan, %class.SkSpan* %9, i64 0, i32 0
  store i16* %160, i16** %166, align 8
  %167 = getelementptr inbounds %class.SkSpan, %class.SkSpan* %9, i64 0, i32 1
  store i64 %146, i64* %167, align 8
  %168 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %161, i64 0, i32 0, i32 1, i32 0
  %169 = load void (%"union.std::__1::__function::__policy_storage"*, i64, %class.SkSpan.32*, %class.SkSpan*)*, void (%"union.std::__1::__function::__policy_storage"*, i64, %class.SkSpan.32*, %class.SkSpan*)** %168, align 8
  %170 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %161, i64 0, i32 0, i32 0
  call void %169(%"union.std::__1::__function::__policy_storage"* %170, i64 %146, %class.SkSpan.32* nonnull dereferenceable(16) %8, %class.SkSpan* nonnull dereferenceable(16) %9) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %163) #14
  br label %171

171:                                              ; preds = %139, %145
  %172 = load %class.anon.41*, %class.anon.41** %38, align 8
  %173 = getelementptr inbounds %class.anon.41, %class.anon.41* %172, i64 0, i32 0
  %174 = load i64*, i64** %173, align 8
  store i64 -1, i64* %174, align 8
  %175 = getelementptr inbounds %class.anon.41, %class.anon.41* %172, i64 0, i32 1
  %176 = load i64*, i64** %175, align 8
  store i64 0, i64* %176, align 8
  %177 = getelementptr inbounds %class.anon.41, %class.anon.41* %172, i64 0, i32 2
  %178 = load i32*, i32** %177, align 8
  store i32 -1, i32* %178, align 4
  %179 = getelementptr inbounds %class.anon.41, %class.anon.41* %172, i64 0, i32 3
  %180 = load i32*, i32** %179, align 8
  store i32 0, i32* %180, align 4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %30) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkJSONWriter9endObjectEv(%class.SkJSONWriter*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 2
  %5 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 7, i32 0, i32 0, i64 16
  %6 = bitcast i8* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 7, i32 0, i32 0, i64 24
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = lshr i64 %10, 1
  %12 = and i64 %11, 2147483647
  %13 = add nsw i64 %12, -1
  %14 = getelementptr inbounds i8, i8* %7, i64 %13
  %15 = load i8, i8* %14, align 1, !range !8
  %16 = icmp ne i8 %15, 0
  %17 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 6, i32 0, i32 0, i64 64
  %18 = bitcast i8* %17 to %class.SkTArray*
  %19 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 6, i32 0, i32 0, i64 72
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 4294967294
  %23 = add nuw nsw i64 %22, 4294967294
  %24 = and i64 %23, 4294967294
  %25 = and i64 %21, -4294967295
  %26 = or i64 %24, %25
  store i64 %26, i64* %20, align 8
  tail call void @_ZN8SkTArrayIN12SkJSONWriter5ScopeELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray* %18, i32 0, i32 2) #14
  %27 = bitcast i8* %5 to %class.SkTArray.2*
  %28 = load i64, i64* %9, align 8
  %29 = and i64 %28, 4294967294
  %30 = add nuw nsw i64 %29, 4294967294
  %31 = and i64 %30, 4294967294
  %32 = and i64 %28, -4294967295
  %33 = or i64 %31, %32
  store i64 %33, i64* %9, align 8
  tail call void @_ZN8SkTArrayIbLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.2* %27, i32 0, i32 2) #14
  %34 = bitcast i8* %17 to i32**
  %35 = load i32*, i32** %34, align 8
  %36 = load i64, i64* %20, align 8
  %37 = lshr i64 %36, 1
  %38 = and i64 %37, 2147483647
  %39 = add nsw i64 %38, -1
  %40 = getelementptr inbounds i32, i32* %35, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = icmp ult i32 %41, 3
  br i1 %42, label %43, label %47

43:                                               ; preds = %1
  %44 = sext i32 %41 to i64
  %45 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN12SkJSONWriter9endObjectEv, i64 0, i64 %44
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %2, align 4
  br label %47

47:                                               ; preds = %1, %43
  br i1 %4, label %49, label %48

48:                                               ; preds = %47
  tail call void @_ZN12SkJSONWriter9separatorEb(%class.SkJSONWriter* %0, i1 zeroext %16)
  br label %49

49:                                               ; preds = %48, %47
  %50 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 2
  %51 = bitcast i8** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 1
  %54 = bitcast i8** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %52, %55
  %57 = inttoptr i64 %55 to i8*
  br i1 %56, label %58, label %75

58:                                               ; preds = %49
  %59 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = icmp eq i8* %60, %57
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %64 = load %class.SkWStream*, %class.SkWStream** %63, align 8
  %65 = ptrtoint i8* %60 to i64
  %66 = sub i64 %52, %65
  %67 = bitcast %class.SkWStream* %64 to i1 (%class.SkWStream*, i8*, i64)***
  %68 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %67, align 8
  %69 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %68, i64 2
  %70 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %69, align 8
  %71 = tail call zeroext i1 %70(%class.SkWStream* %64, i8* %60, i64 %66) #14
  %72 = bitcast %class.SkJSONWriter* %0 to i64*
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %54, align 8
  %74 = inttoptr i64 %73 to i8*
  br label %75

75:                                               ; preds = %49, %58, %62
  %76 = phi i8* [ %74, %62 ], [ %57, %58 ], [ %57, %49 ]
  store i8 125, i8* %76, align 1
  %77 = load i8*, i8** %53, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 1
  store i8* %78, i8** %53, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkShaperJSONWriter15BreakupClustersEmm6SkSpanIKjERKNSt3__18functionIFvmmjjEEE(i64, i64, i32*, i64, %"class.std::__1::function.36"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %6 = load i32, i32* %2, align 4
  %7 = add i64 %3, -1
  %8 = getelementptr inbounds i32, i32* %2, i64 %7
  %9 = load i32, i32* %8, align 4
  %10 = icmp ugt i32 %6, %9
  %11 = icmp eq i64 %3, 0
  br i1 %10, label %40, label %12

12:                                               ; preds = %5
  br i1 %11, label %16, label %13

13:                                               ; preds = %12
  %14 = getelementptr inbounds %"class.std::__1::function.36", %"class.std::__1::function.36"* %4, i64 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.std::__1::function.36", %"class.std::__1::function.36"* %4, i64 0, i32 0, i32 0
  br label %23

16:                                               ; preds = %31, %12
  %17 = phi i64 [ 0, %12 ], [ %32, %31 ]
  %18 = phi i32 [ %6, %12 ], [ %35, %31 ]
  %19 = trunc i64 %1 to i32
  %20 = getelementptr inbounds %"class.std::__1::function.36", %"class.std::__1::function.36"* %4, i64 0, i32 0, i32 1, i32 0
  %21 = load void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)*, void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::function.36", %"class.std::__1::function.36"* %4, i64 0, i32 0, i32 0
  tail call void %21(%"union.std::__1::__function::__policy_storage"* %22, i64 %17, i64 %3, i32 %18, i32 %19) #14
  br label %75

23:                                               ; preds = %37, %13
  %24 = phi i32 [ %6, %13 ], [ %39, %37 ]
  %25 = phi i32 [ %6, %13 ], [ %35, %37 ]
  %26 = phi i64 [ 0, %13 ], [ %33, %37 ]
  %27 = phi i64 [ 0, %13 ], [ %32, %37 ]
  %28 = icmp eq i32 %25, %24
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  %30 = load void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)*, void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)** %14, align 8
  tail call void %30(%"union.std::__1::__function::__policy_storage"* %15, i64 %27, i64 %26, i32 %25, i32 %24) #14
  br label %31

31:                                               ; preds = %23, %29
  %32 = phi i64 [ %27, %23 ], [ %26, %29 ]
  %33 = add nuw i64 %26, 1
  %34 = getelementptr inbounds i32, i32* %2, i64 %32
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i64 %33, %3
  br i1 %36, label %16, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds i32, i32* %2, i64 %33
  %39 = load i32, i32* %38, align 4
  br label %23

40:                                               ; preds = %5
  br i1 %11, label %45, label %41

41:                                               ; preds = %40
  %42 = trunc i64 %1 to i32
  %43 = getelementptr inbounds %"class.std::__1::function.36", %"class.std::__1::function.36"* %4, i64 0, i32 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.std::__1::function.36", %"class.std::__1::function.36"* %4, i64 0, i32 0, i32 0
  br label %54

45:                                               ; preds = %65, %40
  %46 = phi i64 [ 0, %40 ], [ %66, %65 ]
  %47 = trunc i64 %0 to i32
  %48 = add i64 %46, -1
  %49 = getelementptr inbounds i32, i32* %2, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.std::__1::function.36", %"class.std::__1::function.36"* %4, i64 0, i32 0, i32 1, i32 0
  %52 = load void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)*, void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::function.36", %"class.std::__1::function.36"* %4, i64 0, i32 0, i32 0
  tail call void %52(%"union.std::__1::__function::__policy_storage"* %53, i64 %46, i64 %3, i32 %47, i32 %50) #14
  br label %75

54:                                               ; preds = %70, %41
  %55 = phi i32 [ %6, %41 ], [ %74, %70 ]
  %56 = phi i32 [ %6, %41 ], [ %72, %70 ]
  %57 = phi i64 [ 0, %41 ], [ %68, %70 ]
  %58 = phi i32 [ %42, %41 ], [ %67, %70 ]
  %59 = phi i64 [ 0, %41 ], [ %66, %70 ]
  %60 = icmp eq i32 %56, %55
  br i1 %60, label %65, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds i32, i32* %2, i64 %59
  %63 = load void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)*, void (%"union.std::__1::__function::__policy_storage"*, i64, i64, i32, i32)** %43, align 8
  tail call void %63(%"union.std::__1::__function::__policy_storage"* %44, i64 %59, i64 %57, i32 %56, i32 %58) #14
  %64 = load i32, i32* %62, align 4
  br label %65

65:                                               ; preds = %54, %61
  %66 = phi i64 [ %59, %54 ], [ %57, %61 ]
  %67 = phi i32 [ %58, %54 ], [ %64, %61 ]
  %68 = add nuw i64 %57, 1
  %69 = icmp eq i64 %68, %3
  br i1 %69, label %45, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds i32, i32* %2, i64 %66
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds i32, i32* %2, i64 %68
  %74 = load i32, i32* %73, align 4
  br label %54

75:                                               ; preds = %45, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkShaperJSONWriter11displayMToNEm6SkSpanIKcES0_IKtE(%class.SkShaperJSONWriter* nocapture readonly, i64, i8*, i64, i16*, i64) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__19to_stringEm(%"class.std::__1::basic_string"* nonnull sret %7, i64 %1) #14
  %16 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__19to_stringEm(%"class.std::__1::basic_string"* nonnull sret %8, i64 %5) #14
  %20 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #14
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #14
  %24 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #14
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #14
  %25 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #14, !noalias !14
  %26 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 %26, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #14, !noalias !14
  %27 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1, !noalias !17
  %30 = icmp slt i8 %29, 0
  %31 = load i8*, i8** %17, align 8, !noalias !17
  %32 = load i64, i64* %18, align 8, !noalias !17
  %33 = zext i8 %29 to i64
  %34 = select i1 %30, i8* %31, i8* %16
  %35 = select i1 %30, i64 %32, i64 %33
  %36 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %34, i64 %35) #14, !noalias !17
  %37 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %37, i64 24, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #14, !noalias !17
  %38 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %6
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #13
  br label %45

45:                                               ; preds = %6, %42
  %46 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #13
  br label %53

53:                                               ; preds = %45, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #14
  %54 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 1
  %55 = load %class.SkJSONWriter*, %class.SkJSONWriter** %54, align 8
  %56 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  %60 = load i8*, i8** %21, align 8
  %61 = select i1 %59, i8* %60, i8* %20
  call void @_ZN12SkJSONWriter11beginObjectEPKcb(%class.SkJSONWriter* %55, i8* %61, i1 zeroext true)
  %62 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #14
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %66 = icmp ugt i64 %3, -17
  %67 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 24, i1 false)
  br i1 %66, label %68, label %70

68:                                               ; preds = %53
  %69 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %69) #12
  unreachable

70:                                               ; preds = %53
  %71 = icmp ult i64 %3, 23
  br i1 %71, label %78, label %72

72:                                               ; preds = %70
  %73 = add nuw i64 %3, 16
  %74 = and i64 %73, -16
  %75 = call i8* @_Znwm(i64 %74) #13
  store i8* %75, i8** %63, align 8
  %76 = or i64 %74, -9223372036854775808
  store i64 %76, i64* %65, align 8
  store i64 %3, i64* %64, align 8
  %77 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %83

78:                                               ; preds = %70
  %79 = trunc i64 %3 to i8
  %80 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  store i8 %79, i8* %81, align 1
  %82 = icmp eq i64 %3, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %78, %72
  %84 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %80, %78 ], [ %77, %72 ]
  %85 = phi i8* [ %62, %78 ], [ %75, %72 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %85, i8* align 1 %2, i64 %3, i1 false) #14
  br label %86

86:                                               ; preds = %78, %83
  %87 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %80, %78 ], [ %84, %83 ]
  %88 = phi i8* [ %62, %78 ], [ %85, %83 ]
  %89 = getelementptr inbounds i8, i8* %88, i64 %3
  store i8 0, i8* %89, align 1
  %90 = load %class.SkJSONWriter*, %class.SkJSONWriter** %54, align 8
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  %94 = load i8*, i8** %63, align 8
  %95 = select i1 %93, i8* %94, i8* %62
  call void @_ZN12SkJSONWriter10appendNameEPKc(%class.SkJSONWriter* %90, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)) #14
  call void @_ZN12SkJSONWriter12appendStringEPKc(%class.SkJSONWriter* %90, i8* %95) #14
  %96 = load %class.SkJSONWriter*, %class.SkJSONWriter** %54, align 8
  call void @_ZN12SkJSONWriter10beginArrayEPKcb(%class.SkJSONWriter* %96, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0), i1 zeroext false)
  %97 = getelementptr inbounds i16, i16* %4, i64 %5
  %98 = icmp eq i64 %5, 0
  br i1 %98, label %99, label %124

99:                                               ; preds = %124, %86
  %100 = load %class.SkJSONWriter*, %class.SkJSONWriter** %54, align 8
  call void @_ZN12SkJSONWriter8endArrayEv(%class.SkJSONWriter* %100)
  %101 = load %class.SkJSONWriter*, %class.SkJSONWriter** %54, align 8
  call void @_ZN12SkJSONWriter9endObjectEv(%class.SkJSONWriter* %101)
  %102 = load i8, i8* %91, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  %105 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %105) #13
  br label %106

106:                                              ; preds = %99, %104
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #14
  %107 = load i8, i8* %57, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %106
  %110 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %110) #13
  br label %111

111:                                              ; preds = %106, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #14
  %112 = load i8, i8* %28, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %111
  %115 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %115) #13
  br label %116

116:                                              ; preds = %111, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #14
  %117 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  %122 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %122) #13
  br label %123

123:                                              ; preds = %116, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #14
  ret void

124:                                              ; preds = %86, %124
  %125 = phi i16* [ %129, %124 ], [ %4, %86 ]
  %126 = load i16, i16* %125, align 2
  %127 = load %class.SkJSONWriter*, %class.SkJSONWriter** %54, align 8
  %128 = zext i16 %126 to i32
  call void @_ZN12SkJSONWriter10beginValueEb(%class.SkJSONWriter* %127, i1 zeroext false) #14
  call void (%class.SkJSONWriter*, i8*, ...) @_ZN12SkJSONWriter7appendfEPKcz(%class.SkJSONWriter* %127, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i32 %128) #14
  %129 = getelementptr inbounds i16, i16* %125, i64 1
  %130 = icmp eq i16* %129, %97
  br i1 %130, label %99, label %124
}

declare void @_ZNSt3__19to_stringEm(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #4

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18SkShaperJSONWriterD2Ev(%class.SkShaperJSONWriter*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV18SkShaperJSONWriter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 5
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 4, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 4, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 3, i32 0, i32 0
  %22 = load %struct.SkPoint*, %struct.SkPoint** %21, align 8
  %23 = icmp eq %struct.SkPoint* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %struct.SkPoint* %22 to i64
  %26 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 3, i32 0, i32 1
  %27 = bitcast %struct.SkPoint** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %struct.SkPoint* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %20, %24
  %30 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load i16*, i16** %30, align 8
  %32 = icmp eq i16* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint i16* %31 to i64
  %35 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 2, i32 0, i32 1
  %36 = bitcast i16** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast i16* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #13
  br label %38

38:                                               ; preds = %29, %33
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18SkShaperJSONWriterD0Ev(%class.SkShaperJSONWriter*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV18SkShaperJSONWriter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 5
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #13
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 4, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 4, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 3, i32 0, i32 0
  %22 = load %struct.SkPoint*, %struct.SkPoint** %21, align 8
  %23 = icmp eq %struct.SkPoint* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = ptrtoint %struct.SkPoint* %22 to i64
  %26 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 3, i32 0, i32 1
  %27 = bitcast %struct.SkPoint** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %struct.SkPoint* %22 to i8*
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %24, %20
  %30 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load i16*, i16** %30, align 8
  %32 = icmp eq i16* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint i16* %31 to i64
  %35 = getelementptr inbounds %class.SkShaperJSONWriter, %class.SkShaperJSONWriter* %0, i64 0, i32 2, i32 0, i32 1
  %36 = bitcast i16** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast i16* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #13
  br label %38

38:                                               ; preds = %29, %33
  %39 = bitcast %class.SkShaperJSONWriter* %0 to i8*
  tail call void @_ZdlPv(i8* %39) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18SkShaperJSONWriter10commitLineEv(%class.SkShaperJSONWriter*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkJSONWriter10appendNameEPKc(%class.SkJSONWriter*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %146, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 4
  br i1 %7, label %8, label %38

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 2
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %11, %14
  %16 = inttoptr i64 %14 to i8*
  br i1 %15, label %17, label %34

17:                                               ; preds = %8
  %18 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, %16
  br i1 %20, label %34, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %23 = load %class.SkWStream*, %class.SkWStream** %22, align 8
  %24 = ptrtoint i8* %19 to i64
  %25 = sub i64 %11, %24
  %26 = bitcast %class.SkWStream* %23 to i1 (%class.SkWStream*, i8*, i64)***
  %27 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %26, align 8
  %28 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %27, i64 2
  %29 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %28, align 8
  %30 = tail call zeroext i1 %29(%class.SkWStream* %23, i8* %19, i64 %25) #14
  %31 = bitcast %class.SkJSONWriter* %0 to i64*
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %13, align 8
  %33 = inttoptr i64 %32 to i8*
  br label %34

34:                                               ; preds = %8, %17, %21
  %35 = phi i8* [ %33, %21 ], [ %16, %17 ], [ %16, %8 ]
  store i8 44, i8* %35, align 1
  %36 = load i8*, i8** %12, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 1
  store i8* %37, i8** %12, align 8
  br label %38

38:                                               ; preds = %4, %34
  %39 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 7, i32 0, i32 0, i64 16
  %40 = bitcast i8* %39 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 7, i32 0, i32 0, i64 24
  %43 = bitcast i8* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = lshr i64 %44, 1
  %46 = and i64 %45, 2147483647
  %47 = add nsw i64 %46, -1
  %48 = getelementptr inbounds i8, i8* %41, i64 %47
  %49 = load i8, i8* %48, align 1, !range !8
  %50 = icmp ne i8 %49, 0
  tail call void @_ZN12SkJSONWriter9separatorEb(%class.SkJSONWriter* %0, i1 zeroext %50)
  %51 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 2
  %52 = bitcast i8** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 1
  %55 = bitcast i8** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %53, %56
  %58 = inttoptr i64 %56 to i8*
  br i1 %57, label %59, label %76

59:                                               ; preds = %38
  %60 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, %58
  br i1 %62, label %76, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %65 = load %class.SkWStream*, %class.SkWStream** %64, align 8
  %66 = ptrtoint i8* %61 to i64
  %67 = sub i64 %53, %66
  %68 = bitcast %class.SkWStream* %65 to i1 (%class.SkWStream*, i8*, i64)***
  %69 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %68, align 8
  %70 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %69, i64 2
  %71 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %70, align 8
  %72 = tail call zeroext i1 %71(%class.SkWStream* %65, i8* %61, i64 %67) #14
  %73 = bitcast %class.SkJSONWriter* %0 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %55, align 8
  %75 = inttoptr i64 %74 to i8*
  br label %76

76:                                               ; preds = %38, %59, %63
  %77 = phi i8* [ %75, %63 ], [ %58, %59 ], [ %58, %38 ]
  store i8 34, i8* %77, align 1
  %78 = load i8*, i8** %54, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 1
  store i8* %79, i8** %54, align 8
  %80 = tail call i64 @strlen(i8* nonnull %1) #15
  %81 = load i64, i64* %52, align 8
  %82 = ptrtoint i8* %79 to i64
  %83 = sub i64 %81, %82
  %84 = icmp ult i64 %83, %80
  br i1 %84, label %85, label %102

85:                                               ; preds = %76
  %86 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = icmp eq i8* %87, %79
  br i1 %88, label %102, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %91 = load %class.SkWStream*, %class.SkWStream** %90, align 8
  %92 = ptrtoint i8* %87 to i64
  %93 = sub i64 %82, %92
  %94 = bitcast %class.SkWStream* %91 to i1 (%class.SkWStream*, i8*, i64)***
  %95 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %94, align 8
  %96 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %95, i64 2
  %97 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %96, align 8
  %98 = tail call zeroext i1 %97(%class.SkWStream* %91, i8* %87, i64 %93) #14
  %99 = bitcast %class.SkJSONWriter* %0 to i64*
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %55, align 8
  %101 = inttoptr i64 %100 to i8*
  br label %102

102:                                              ; preds = %89, %85, %76
  %103 = phi i8* [ %101, %89 ], [ %79, %85 ], [ %79, %76 ]
  %104 = icmp ugt i64 %80, 32768
  br i1 %104, label %105, label %114

105:                                              ; preds = %102
  %106 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %107 = load %class.SkWStream*, %class.SkWStream** %106, align 8
  %108 = bitcast %class.SkWStream* %107 to i1 (%class.SkWStream*, i8*, i64)***
  %109 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %108, align 8
  %110 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %109, i64 2
  %111 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %110, align 8
  %112 = tail call zeroext i1 %111(%class.SkWStream* %107, i8* nonnull %1, i64 %80) #14
  %113 = load i64, i64* %55, align 8
  br label %118

114:                                              ; preds = %102
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %103, i8* nonnull align 1 %1, i64 %80, i1 false) #14
  %115 = load i8*, i8** %54, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 %80
  store i8* %116, i8** %54, align 8
  %117 = ptrtoint i8* %116 to i64
  br label %118

118:                                              ; preds = %105, %114
  %119 = phi i64 [ %113, %105 ], [ %117, %114 ]
  %120 = load i64, i64* %52, align 8
  %121 = sub i64 %120, %119
  %122 = icmp ult i64 %121, 2
  %123 = inttoptr i64 %119 to i8*
  br i1 %122, label %124, label %141

124:                                              ; preds = %118
  %125 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %126 = load i8*, i8** %125, align 8
  %127 = icmp eq i8* %126, %123
  br i1 %127, label %141, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %130 = load %class.SkWStream*, %class.SkWStream** %129, align 8
  %131 = ptrtoint i8* %126 to i64
  %132 = sub i64 %119, %131
  %133 = bitcast %class.SkWStream* %130 to i1 (%class.SkWStream*, i8*, i64)***
  %134 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %133, align 8
  %135 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %134, i64 2
  %136 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %135, align 8
  %137 = tail call zeroext i1 %136(%class.SkWStream* %130, i8* %126, i64 %132) #14
  %138 = bitcast %class.SkJSONWriter* %0 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %55, align 8
  %140 = inttoptr i64 %139 to i8*
  br label %141

141:                                              ; preds = %118, %124, %128
  %142 = phi i8* [ %140, %128 ], [ %123, %124 ], [ %123, %118 ]
  %143 = bitcast i8* %142 to i16*
  store i16 14882, i16* %143, align 1
  %144 = load i8*, i8** %54, align 8
  %145 = getelementptr inbounds i8, i8* %144, i64 2
  store i8* %145, i8** %54, align 8
  store i32 3, i32* %5, align 4
  br label %146

146:                                              ; preds = %2, %141
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkJSONWriter10beginValueEb(%class.SkJSONWriter*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 6
  br i1 %5, label %6, label %36

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 2
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %9, %12
  %14 = inttoptr i64 %12 to i8*
  br i1 %13, label %15, label %32

15:                                               ; preds = %6
  %16 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, %14
  br i1 %18, label %32, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %21 = load %class.SkWStream*, %class.SkWStream** %20, align 8
  %22 = ptrtoint i8* %17 to i64
  %23 = sub i64 %9, %22
  %24 = bitcast %class.SkWStream* %21 to i1 (%class.SkWStream*, i8*, i64)***
  %25 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %25, i64 2
  %27 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%class.SkWStream* %21, i8* %17, i64 %23) #14
  %29 = bitcast %class.SkJSONWriter* %0 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %11, align 8
  %31 = inttoptr i64 %30 to i8*
  br label %32

32:                                               ; preds = %6, %15, %19
  %33 = phi i8* [ %31, %19 ], [ %14, %15 ], [ %14, %6 ]
  store i8 44, i8* %33, align 1
  %34 = load i8*, i8** %10, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 1
  store i8* %35, i8** %10, align 8
  br label %36

36:                                               ; preds = %32, %2
  %37 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 6, i32 0, i32 0, i64 64
  %38 = bitcast i8* %37 to i32**
  %39 = load i32*, i32** %38, align 8
  %40 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 6, i32 0, i32 0, i64 72
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = lshr i64 %42, 1
  %44 = and i64 %43, 2147483647
  %45 = add nsw i64 %44, -1
  %46 = getelementptr inbounds i32, i32* %39, i64 %45
  %47 = load i32, i32* %46, align 4
  switch i32 %47, label %95 [
    i32 2, label %48
    i32 1, label %61
  ]

48:                                               ; preds = %36
  %49 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 7, i32 0, i32 0, i64 16
  %50 = bitcast i8* %49 to i8**
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 7, i32 0, i32 0, i64 24
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = lshr i64 %54, 1
  %56 = and i64 %55, 2147483647
  %57 = add nsw i64 %56, -1
  %58 = getelementptr inbounds i8, i8* %51, i64 %57
  %59 = load i8, i8* %58, align 1, !range !8
  %60 = icmp ne i8 %59, 0
  tail call void @_ZN12SkJSONWriter9separatorEb(%class.SkJSONWriter* %0, i1 zeroext %60)
  br label %95

61:                                               ; preds = %36
  %62 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 4
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %95

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 2
  %67 = bitcast i8** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 1
  %70 = bitcast i8** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %68, %71
  %73 = inttoptr i64 %71 to i8*
  br i1 %72, label %74, label %91

74:                                               ; preds = %65
  %75 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = icmp eq i8* %76, %73
  br i1 %77, label %91, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %80 = load %class.SkWStream*, %class.SkWStream** %79, align 8
  %81 = ptrtoint i8* %76 to i64
  %82 = sub i64 %68, %81
  %83 = bitcast %class.SkWStream* %80 to i1 (%class.SkWStream*, i8*, i64)***
  %84 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %83, align 8
  %85 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %84, i64 2
  %86 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %85, align 8
  %87 = tail call zeroext i1 %86(%class.SkWStream* %80, i8* %76, i64 %82) #14
  %88 = bitcast %class.SkJSONWriter* %0 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %70, align 8
  %90 = inttoptr i64 %89 to i8*
  br label %91

91:                                               ; preds = %65, %74, %78
  %92 = phi i8* [ %90, %78 ], [ %73, %74 ], [ %73, %65 ]
  store i8 32, i8* %92, align 1
  %93 = load i8*, i8** %69, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 1
  store i8* %94, i8** %69, align 8
  br label %95

95:                                               ; preds = %36, %61, %91, %48
  br i1 %1, label %106, label %96

96:                                               ; preds = %95
  %97 = load i32*, i32** %38, align 8
  %98 = load i64, i64* %41, align 8
  %99 = lshr i64 %98, 1
  %100 = and i64 %99, 2147483647
  %101 = add nsw i64 %100, -1
  %102 = getelementptr inbounds i32, i32* %97, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 2
  %105 = select i1 %104, i32 6, i32 4
  store i32 %105, i32* %3, align 4
  br label %106

106:                                              ; preds = %96, %95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkJSONWriter9separatorEb(%class.SkJSONWriter*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %100

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 2
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %9, %12
  %14 = inttoptr i64 %12 to i8*
  br i1 %1, label %15, label %78

15:                                               ; preds = %6
  br i1 %13, label %16, label %33

16:                                               ; preds = %15
  %17 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %33, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %22 = load %class.SkWStream*, %class.SkWStream** %21, align 8
  %23 = ptrtoint i8* %18 to i64
  %24 = sub i64 %9, %23
  %25 = bitcast %class.SkWStream* %22 to i1 (%class.SkWStream*, i8*, i64)***
  %26 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %25, align 8
  %27 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %26, i64 2
  %28 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %27, align 8
  %29 = tail call zeroext i1 %28(%class.SkWStream* %22, i8* %18, i64 %24) #14
  %30 = bitcast %class.SkJSONWriter* %0 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %11, align 8
  %32 = inttoptr i64 %31 to i8*
  br label %33

33:                                               ; preds = %15, %16, %20
  %34 = phi i8* [ %32, %20 ], [ %14, %16 ], [ %14, %15 ]
  store i8 10, i8* %34, align 1
  %35 = load i8*, i8** %10, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 1
  store i8* %36, i8** %10, align 8
  %37 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 6, i32 0, i32 0, i64 72
  %38 = bitcast i8* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, 4294967292
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %100, label %42

42:                                               ; preds = %33
  %43 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %44 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %45 = bitcast %class.SkJSONWriter* %0 to i64*
  br label %46

46:                                               ; preds = %42, %67
  %47 = phi i8* [ %36, %42 ], [ %70, %67 ]
  %48 = phi i32 [ 0, %42 ], [ %71, %67 ]
  %49 = ptrtoint i8* %47 to i64
  %50 = load i64, i64* %8, align 8
  %51 = sub i64 %50, %49
  %52 = icmp ult i64 %51, 3
  br i1 %52, label %53, label %67

53:                                               ; preds = %46
  %54 = load i8*, i8** %43, align 8
  %55 = icmp eq i8* %54, %47
  br i1 %55, label %67, label %56

56:                                               ; preds = %53
  %57 = load %class.SkWStream*, %class.SkWStream** %44, align 8
  %58 = ptrtoint i8* %54 to i64
  %59 = sub i64 %49, %58
  %60 = bitcast %class.SkWStream* %57 to i1 (%class.SkWStream*, i8*, i64)***
  %61 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %60, align 8
  %62 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %61, i64 2
  %63 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %62, align 8
  %64 = tail call zeroext i1 %63(%class.SkWStream* %57, i8* %54, i64 %59) #14
  %65 = load i64, i64* %45, align 8
  store i64 %65, i64* %11, align 8
  %66 = inttoptr i64 %65 to i8*
  br label %67

67:                                               ; preds = %46, %53, %56
  %68 = phi i8* [ %66, %56 ], [ %47, %53 ], [ %47, %46 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %68, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), i64 3, i1 false) #14
  %69 = load i8*, i8** %10, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 3
  store i8* %70, i8** %10, align 8
  %71 = add nuw nsw i32 %48, 1
  %72 = load i64, i64* %38, align 8
  %73 = lshr i64 %72, 1
  %74 = trunc i64 %73 to i32
  %75 = and i32 %74, 2147483647
  %76 = add nsw i32 %75, -1
  %77 = icmp slt i32 %71, %76
  br i1 %77, label %46, label %100

78:                                               ; preds = %6
  br i1 %13, label %79, label %96

79:                                               ; preds = %78
  %80 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = icmp eq i8* %81, %14
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %85 = load %class.SkWStream*, %class.SkWStream** %84, align 8
  %86 = ptrtoint i8* %81 to i64
  %87 = sub i64 %9, %86
  %88 = bitcast %class.SkWStream* %85 to i1 (%class.SkWStream*, i8*, i64)***
  %89 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %88, align 8
  %90 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %89, i64 2
  %91 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %90, align 8
  %92 = tail call zeroext i1 %91(%class.SkWStream* %85, i8* %81, i64 %87) #14
  %93 = bitcast %class.SkJSONWriter* %0 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %11, align 8
  %95 = inttoptr i64 %94 to i8*
  br label %96

96:                                               ; preds = %78, %79, %83
  %97 = phi i8* [ %95, %83 ], [ %14, %79 ], [ %14, %78 ]
  store i8 32, i8* %97, align 1
  %98 = load i8*, i8** %10, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 1
  store i8* %99, i8** %10, align 8
  br label %100

100:                                              ; preds = %67, %33, %96, %2
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN12SkJSONWriter5ScopeELb1EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %65

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %65, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 4) #14
  %45 = load i64, i64* %4, align 8
  %46 = shl i64 %45, 1
  %47 = and i64 %46, 8589934588
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %35
  %50 = bitcast %class.SkTArray* %0 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %51, i64 %47, i1 false) #14
  %52 = load i64, i64* %4, align 8
  br label %53

53:                                               ; preds = %35, %49
  %54 = phi i64 [ %45, %35 ], [ %52, %49 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  %57 = bitcast %class.SkTArray* %0 to i8**
  br i1 %56, label %61, label %58

58:                                               ; preds = %53
  %59 = load i8*, i8** %57, align 8
  tail call void @_Z7sk_freePv(i8* %59) #14
  %60 = load i64, i64* %4, align 8
  br label %61

61:                                               ; preds = %53, %58
  %62 = phi i64 [ %60, %58 ], [ %54, %53 ]
  store i8* %44, i8** %57, align 8
  %63 = and i64 %62, -4294967298
  %64 = or i64 %63, 1
  store i64 %64, i64* %4, align 8
  br label %65

65:                                               ; preds = %61, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #4

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIbLb1EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.2*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.2, %class.SkTArray.2* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %66

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %66, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 1) #14
  %45 = load i64, i64* %4, align 8
  %46 = lshr i64 %45, 1
  %47 = and i64 %46, 2147483647
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %35
  %50 = getelementptr inbounds %class.SkTArray.2, %class.SkTArray.2* %0, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %51, i64 %47, i1 false) #14
  %52 = load i64, i64* %4, align 8
  br label %53

53:                                               ; preds = %35, %49
  %54 = phi i64 [ %45, %35 ], [ %52, %49 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.SkTArray.2, %class.SkTArray.2* %0, i64 0, i32 0
  %59 = load i8*, i8** %58, align 8
  tail call void @_Z7sk_freePv(i8* %59) #14
  %60 = load i64, i64* %4, align 8
  br label %61

61:                                               ; preds = %53, %57
  %62 = phi i64 [ %54, %53 ], [ %60, %57 ]
  %63 = getelementptr inbounds %class.SkTArray.2, %class.SkTArray.2* %0, i64 0, i32 0
  store i8* %44, i8** %63, align 8
  %64 = and i64 %62, -4294967298
  %65 = or i64 %64, 1
  store i64 %65, i64* %4, align 8
  br label %66

66:                                               ; preds = %61, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkJSONWriter12appendStringEPKc(%class.SkJSONWriter*, i8*) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN12SkJSONWriter10beginValueEb(%class.SkJSONWriter* %0, i1 zeroext false)
  %3 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 2
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %5, %8
  %10 = inttoptr i64 %8 to i8*
  br i1 %9, label %11, label %28

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %10
  br i1 %14, label %28, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %17 = load %class.SkWStream*, %class.SkWStream** %16, align 8
  %18 = ptrtoint i8* %13 to i64
  %19 = sub i64 %5, %18
  %20 = bitcast %class.SkWStream* %17 to i1 (%class.SkWStream*, i8*, i64)***
  %21 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %20, align 8
  %22 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %21, i64 2
  %23 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %22, align 8
  %24 = tail call zeroext i1 %23(%class.SkWStream* %17, i8* %13, i64 %19) #14
  %25 = bitcast %class.SkJSONWriter* %0 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %7, align 8
  %27 = inttoptr i64 %26 to i8*
  br label %28

28:                                               ; preds = %2, %11, %15
  %29 = phi i8* [ %27, %15 ], [ %10, %11 ], [ %10, %2 ]
  store i8 34, i8* %29, align 1
  %30 = load i8*, i8** %6, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 1
  store i8* %31, i8** %6, align 8
  %32 = icmp eq i8* %1, null
  %33 = ptrtoint i8* %31 to i64
  br i1 %32, label %232, label %34

34:                                               ; preds = %28
  %35 = load i8, i8* %1, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %232, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %39 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %40 = bitcast %class.SkJSONWriter* %0 to i64*
  br label %41

41:                                               ; preds = %37, %222
  %42 = phi i64 [ %33, %37 ], [ %226, %222 ]
  %43 = phi i8 [ %35, %37 ], [ %228, %222 ]
  %44 = phi i8* [ %1, %37 ], [ %227, %222 ]
  %45 = sext i8 %43 to i32
  switch i32 %45, label %200 [
    i32 34, label %46
    i32 92, label %68
    i32 8, label %90
    i32 12, label %112
    i32 10, label %134
    i32 13, label %156
    i32 9, label %178
  ]

46:                                               ; preds = %41
  %47 = load i64, i64* %4, align 8
  %48 = sub i64 %47, %42
  %49 = icmp ult i64 %48, 2
  %50 = inttoptr i64 %42 to i8*
  br i1 %49, label %51, label %65

51:                                               ; preds = %46
  %52 = load i8*, i8** %38, align 8
  %53 = icmp eq i8* %52, %50
  br i1 %53, label %65, label %54

54:                                               ; preds = %51
  %55 = load %class.SkWStream*, %class.SkWStream** %39, align 8
  %56 = ptrtoint i8* %52 to i64
  %57 = sub i64 %42, %56
  %58 = bitcast %class.SkWStream* %55 to i1 (%class.SkWStream*, i8*, i64)***
  %59 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %58, align 8
  %60 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %59, i64 2
  %61 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %60, align 8
  %62 = tail call zeroext i1 %61(%class.SkWStream* %55, i8* %52, i64 %57) #14
  %63 = load i64, i64* %40, align 8
  store i64 %63, i64* %7, align 8
  %64 = inttoptr i64 %63 to i8*
  br label %65

65:                                               ; preds = %46, %51, %54
  %66 = phi i8* [ %64, %54 ], [ %50, %51 ], [ %50, %46 ]
  %67 = bitcast i8* %66 to i16*
  store i16 8796, i16* %67, align 1
  br label %222

68:                                               ; preds = %41
  %69 = load i64, i64* %4, align 8
  %70 = sub i64 %69, %42
  %71 = icmp ult i64 %70, 2
  %72 = inttoptr i64 %42 to i8*
  br i1 %71, label %73, label %87

73:                                               ; preds = %68
  %74 = load i8*, i8** %38, align 8
  %75 = icmp eq i8* %74, %72
  br i1 %75, label %87, label %76

76:                                               ; preds = %73
  %77 = load %class.SkWStream*, %class.SkWStream** %39, align 8
  %78 = ptrtoint i8* %74 to i64
  %79 = sub i64 %42, %78
  %80 = bitcast %class.SkWStream* %77 to i1 (%class.SkWStream*, i8*, i64)***
  %81 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %80, align 8
  %82 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %81, i64 2
  %83 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %82, align 8
  %84 = tail call zeroext i1 %83(%class.SkWStream* %77, i8* %74, i64 %79) #14
  %85 = load i64, i64* %40, align 8
  store i64 %85, i64* %7, align 8
  %86 = inttoptr i64 %85 to i8*
  br label %87

87:                                               ; preds = %68, %73, %76
  %88 = phi i8* [ %86, %76 ], [ %72, %73 ], [ %72, %68 ]
  %89 = bitcast i8* %88 to i16*
  store i16 23644, i16* %89, align 1
  br label %222

90:                                               ; preds = %41
  %91 = load i64, i64* %4, align 8
  %92 = sub i64 %91, %42
  %93 = icmp ult i64 %92, 2
  %94 = inttoptr i64 %42 to i8*
  br i1 %93, label %95, label %109

95:                                               ; preds = %90
  %96 = load i8*, i8** %38, align 8
  %97 = icmp eq i8* %96, %94
  br i1 %97, label %109, label %98

98:                                               ; preds = %95
  %99 = load %class.SkWStream*, %class.SkWStream** %39, align 8
  %100 = ptrtoint i8* %96 to i64
  %101 = sub i64 %42, %100
  %102 = bitcast %class.SkWStream* %99 to i1 (%class.SkWStream*, i8*, i64)***
  %103 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %102, align 8
  %104 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %103, i64 2
  %105 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %104, align 8
  %106 = tail call zeroext i1 %105(%class.SkWStream* %99, i8* %96, i64 %101) #14
  %107 = load i64, i64* %40, align 8
  store i64 %107, i64* %7, align 8
  %108 = inttoptr i64 %107 to i8*
  br label %109

109:                                              ; preds = %90, %95, %98
  %110 = phi i8* [ %108, %98 ], [ %94, %95 ], [ %94, %90 ]
  %111 = bitcast i8* %110 to i16*
  store i16 25180, i16* %111, align 1
  br label %222

112:                                              ; preds = %41
  %113 = load i64, i64* %4, align 8
  %114 = sub i64 %113, %42
  %115 = icmp ult i64 %114, 2
  %116 = inttoptr i64 %42 to i8*
  br i1 %115, label %117, label %131

117:                                              ; preds = %112
  %118 = load i8*, i8** %38, align 8
  %119 = icmp eq i8* %118, %116
  br i1 %119, label %131, label %120

120:                                              ; preds = %117
  %121 = load %class.SkWStream*, %class.SkWStream** %39, align 8
  %122 = ptrtoint i8* %118 to i64
  %123 = sub i64 %42, %122
  %124 = bitcast %class.SkWStream* %121 to i1 (%class.SkWStream*, i8*, i64)***
  %125 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %124, align 8
  %126 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %125, i64 2
  %127 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %126, align 8
  %128 = tail call zeroext i1 %127(%class.SkWStream* %121, i8* %118, i64 %123) #14
  %129 = load i64, i64* %40, align 8
  store i64 %129, i64* %7, align 8
  %130 = inttoptr i64 %129 to i8*
  br label %131

131:                                              ; preds = %112, %117, %120
  %132 = phi i8* [ %130, %120 ], [ %116, %117 ], [ %116, %112 ]
  %133 = bitcast i8* %132 to i16*
  store i16 26204, i16* %133, align 1
  br label %222

134:                                              ; preds = %41
  %135 = load i64, i64* %4, align 8
  %136 = sub i64 %135, %42
  %137 = icmp ult i64 %136, 2
  %138 = inttoptr i64 %42 to i8*
  br i1 %137, label %139, label %153

139:                                              ; preds = %134
  %140 = load i8*, i8** %38, align 8
  %141 = icmp eq i8* %140, %138
  br i1 %141, label %153, label %142

142:                                              ; preds = %139
  %143 = load %class.SkWStream*, %class.SkWStream** %39, align 8
  %144 = ptrtoint i8* %140 to i64
  %145 = sub i64 %42, %144
  %146 = bitcast %class.SkWStream* %143 to i1 (%class.SkWStream*, i8*, i64)***
  %147 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %146, align 8
  %148 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %147, i64 2
  %149 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %148, align 8
  %150 = tail call zeroext i1 %149(%class.SkWStream* %143, i8* %140, i64 %145) #14
  %151 = load i64, i64* %40, align 8
  store i64 %151, i64* %7, align 8
  %152 = inttoptr i64 %151 to i8*
  br label %153

153:                                              ; preds = %134, %139, %142
  %154 = phi i8* [ %152, %142 ], [ %138, %139 ], [ %138, %134 ]
  %155 = bitcast i8* %154 to i16*
  store i16 28252, i16* %155, align 1
  br label %222

156:                                              ; preds = %41
  %157 = load i64, i64* %4, align 8
  %158 = sub i64 %157, %42
  %159 = icmp ult i64 %158, 2
  %160 = inttoptr i64 %42 to i8*
  br i1 %159, label %161, label %175

161:                                              ; preds = %156
  %162 = load i8*, i8** %38, align 8
  %163 = icmp eq i8* %162, %160
  br i1 %163, label %175, label %164

164:                                              ; preds = %161
  %165 = load %class.SkWStream*, %class.SkWStream** %39, align 8
  %166 = ptrtoint i8* %162 to i64
  %167 = sub i64 %42, %166
  %168 = bitcast %class.SkWStream* %165 to i1 (%class.SkWStream*, i8*, i64)***
  %169 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %168, align 8
  %170 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %169, i64 2
  %171 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %170, align 8
  %172 = tail call zeroext i1 %171(%class.SkWStream* %165, i8* %162, i64 %167) #14
  %173 = load i64, i64* %40, align 8
  store i64 %173, i64* %7, align 8
  %174 = inttoptr i64 %173 to i8*
  br label %175

175:                                              ; preds = %156, %161, %164
  %176 = phi i8* [ %174, %164 ], [ %160, %161 ], [ %160, %156 ]
  %177 = bitcast i8* %176 to i16*
  store i16 29276, i16* %177, align 1
  br label %222

178:                                              ; preds = %41
  %179 = load i64, i64* %4, align 8
  %180 = sub i64 %179, %42
  %181 = icmp ult i64 %180, 2
  %182 = inttoptr i64 %42 to i8*
  br i1 %181, label %183, label %197

183:                                              ; preds = %178
  %184 = load i8*, i8** %38, align 8
  %185 = icmp eq i8* %184, %182
  br i1 %185, label %197, label %186

186:                                              ; preds = %183
  %187 = load %class.SkWStream*, %class.SkWStream** %39, align 8
  %188 = ptrtoint i8* %184 to i64
  %189 = sub i64 %42, %188
  %190 = bitcast %class.SkWStream* %187 to i1 (%class.SkWStream*, i8*, i64)***
  %191 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %190, align 8
  %192 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %191, i64 2
  %193 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %192, align 8
  %194 = tail call zeroext i1 %193(%class.SkWStream* %187, i8* %184, i64 %189) #14
  %195 = load i64, i64* %40, align 8
  store i64 %195, i64* %7, align 8
  %196 = inttoptr i64 %195 to i8*
  br label %197

197:                                              ; preds = %178, %183, %186
  %198 = phi i8* [ %196, %186 ], [ %182, %183 ], [ %182, %178 ]
  %199 = bitcast i8* %198 to i16*
  store i16 29788, i16* %199, align 1
  br label %222

200:                                              ; preds = %41
  %201 = load i64, i64* %4, align 8
  %202 = icmp eq i64 %201, %42
  %203 = inttoptr i64 %42 to i8*
  br i1 %202, label %204, label %219

204:                                              ; preds = %200
  %205 = load i8*, i8** %38, align 8
  %206 = icmp eq i8* %205, %203
  br i1 %206, label %219, label %207

207:                                              ; preds = %204
  %208 = load %class.SkWStream*, %class.SkWStream** %39, align 8
  %209 = ptrtoint i8* %205 to i64
  %210 = sub i64 %42, %209
  %211 = bitcast %class.SkWStream* %208 to i1 (%class.SkWStream*, i8*, i64)***
  %212 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %211, align 8
  %213 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %212, i64 2
  %214 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %213, align 8
  %215 = tail call zeroext i1 %214(%class.SkWStream* %208, i8* %205, i64 %210) #14
  %216 = load i64, i64* %40, align 8
  store i64 %216, i64* %7, align 8
  %217 = inttoptr i64 %216 to i8*
  %218 = load i8, i8* %44, align 1
  br label %219

219:                                              ; preds = %200, %204, %207
  %220 = phi i8 [ %218, %207 ], [ %43, %204 ], [ %43, %200 ]
  %221 = phi i8* [ %217, %207 ], [ %203, %204 ], [ %203, %200 ]
  store i8 %220, i8* %221, align 1
  br label %222

222:                                              ; preds = %219, %197, %175, %153, %131, %109, %87, %65
  %223 = phi i64 [ 1, %219 ], [ 2, %197 ], [ 2, %175 ], [ 2, %153 ], [ 2, %131 ], [ 2, %109 ], [ 2, %87 ], [ 2, %65 ]
  %224 = load i8*, i8** %6, align 8
  %225 = getelementptr inbounds i8, i8* %224, i64 %223
  store i8* %225, i8** %6, align 8
  %226 = ptrtoint i8* %225 to i64
  %227 = getelementptr inbounds i8, i8* %44, i64 1
  %228 = load i8, i8* %227, align 1
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %230, label %41

230:                                              ; preds = %222
  %231 = ptrtoint i8* %225 to i64
  br label %232

232:                                              ; preds = %230, %34, %28
  %233 = phi i64 [ %33, %34 ], [ %33, %28 ], [ %231, %230 ]
  %234 = load i64, i64* %4, align 8
  %235 = icmp eq i64 %234, %233
  %236 = inttoptr i64 %233 to i8*
  br i1 %235, label %237, label %254

237:                                              ; preds = %232
  %238 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 0
  %239 = load i8*, i8** %238, align 8
  %240 = icmp eq i8* %239, %236
  br i1 %240, label %254, label %241

241:                                              ; preds = %237
  %242 = getelementptr inbounds %class.SkJSONWriter, %class.SkJSONWriter* %0, i64 0, i32 3
  %243 = load %class.SkWStream*, %class.SkWStream** %242, align 8
  %244 = ptrtoint i8* %239 to i64
  %245 = sub i64 %233, %244
  %246 = bitcast %class.SkWStream* %243 to i1 (%class.SkWStream*, i8*, i64)***
  %247 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %246, align 8
  %248 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %247, i64 2
  %249 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %248, align 8
  %250 = tail call zeroext i1 %249(%class.SkWStream* %243, i8* %239, i64 %245) #14
  %251 = bitcast %class.SkJSONWriter* %0 to i64*
  %252 = load i64, i64* %251, align 8
  store i64 %252, i64* %7, align 8
  %253 = inttoptr i64 %252 to i8*
  br label %254

254:                                              ; preds = %232, %237, %241
  %255 = phi i8* [ %253, %241 ], [ %236, %237 ], [ %236, %232 ]
  store i8 34, i8* %255, align 1
  %256 = load i8*, i8** %6, align 8
  %257 = getelementptr inbounds i8, i8* %256, i64 1
  store i8* %257, i8** %6, align 8
  ret void
}

declare i32 @_ZN5SkUTF9CountUTF8EPKcm(i8*, i64) local_unnamed_addr #4

declare void @_ZN12SkJSONWriter7appendfEPKcz(%class.SkJSONWriter*, i8*, ...) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorItNS_9allocatorItEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i16** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i16** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 1
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i16*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i16, i16* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i16, i16* %13, i64 %18
  %20 = bitcast i16* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 2
  %25 = and i64 %24, -2
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %17, i8 0, i64 %25, i1 false) #14
  %26 = ptrtoint i16* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %81

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 1
  %34 = add i64 %33, %1
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #12
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 1
  %41 = icmp ult i64 %40, 4611686018427387903
  %42 = icmp ult i64 %39, %34
  %43 = select i1 %42, i64 %34, i64 %39
  %44 = select i1 %41, i64 %43, i64 9223372036854775807
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %38
  %47 = icmp slt i64 %44, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #12
  unreachable

49:                                               ; preds = %46
  %50 = shl i64 %44, 1
  %51 = tail call i8* @_Znwm(i64 %50) #13
  %52 = bitcast i8* %51 to i16*
  br label %53

53:                                               ; preds = %49, %38
  %54 = phi i16* [ %52, %49 ], [ null, %38 ]
  %55 = getelementptr inbounds i16, i16* %54, i64 %33
  %56 = getelementptr inbounds i16, i16* %54, i64 %44
  %57 = getelementptr inbounds i16, i16* %55, i64 %1
  %58 = bitcast i16* %55 to i8*
  %59 = shl i64 %1, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %58, i8 0, i64 %59, i1 false) #14
  %60 = ptrtoint i16* %56 to i64
  %61 = ptrtoint i16* %57 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %63 = load i16*, i16** %62, align 8
  %64 = load i64, i64* %7, align 8
  %65 = ptrtoint i16* %63 to i64
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 1
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds i16, i16* %55, i64 %68
  %70 = ptrtoint i16* %69 to i64
  %71 = icmp sgt i64 %66, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %53
  %73 = bitcast i16* %69 to i8*
  %74 = bitcast i16* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %73, i8* align 2 %74, i64 %66, i1 false) #14
  %75 = load i16*, i16** %62, align 8
  br label %76

76:                                               ; preds = %53, %72
  %77 = phi i16* [ %63, %53 ], [ %75, %72 ]
  store i64 %70, i64* %30, align 8
  store i64 %61, i64* %7, align 8
  store i64 %60, i64* %4, align 8
  %78 = icmp eq i16* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = bitcast i16* %77 to i8*
  tail call void @_ZdlPv(i8* %80) #13
  br label %81

81:                                               ; preds = %79, %76, %27
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI7SkPointNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.4"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %struct.SkPoint** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %struct.SkPoint** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %struct.SkPoint*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %struct.SkPoint, %struct.SkPoint* %13, i64 %18, i32 0
  %20 = bitcast float* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #14
  %26 = ptrtoint %struct.SkPoint* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.4"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.4"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #12
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #12
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #13
  %54 = bitcast i8* %53 to %struct.SkPoint*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %struct.SkPoint* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %57, i64 %33
  %59 = bitcast %struct.SkPoint* %58 to i8*
  %60 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %57, i64 %56
  %61 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %58, i64 %1
  %62 = shl nsw i64 %1, 3
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %struct.SkPoint* %60 to i64
  %64 = ptrtoint %struct.SkPoint* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %0, i64 0, i32 0, i32 0
  %66 = load %struct.SkPoint*, %struct.SkPoint** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %struct.SkPoint* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %58, i64 %71
  %73 = ptrtoint %struct.SkPoint* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %struct.SkPoint* %72 to i8*
  %77 = bitcast %struct.SkPoint* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #14
  %78 = load %struct.SkPoint*, %struct.SkPoint** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %struct.SkPoint* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %struct.SkPoint* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %struct.SkPoint* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.11"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #14
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.11"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.11"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #12
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #12
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #13
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #14
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #14
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvm6SkSpanIKcES2_IKtEEE11__call_implINS0_20__default_alloc_funcIZN18SkShaperJSONWriter15commitRunBufferERKN8SkShaper10RunHandler7RunInfoEE3$_0S7_EEEEvPKNS0_16__policy_storageEmOS4_OS6_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i64, %class.SkSpan.32* nocapture readonly dereferenceable(16), %class.SkSpan* nocapture readonly dereferenceable(16)) #0 align 2 {
  %5 = getelementptr inbounds %class.SkSpan.32, %class.SkSpan.32* %2, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %class.SkSpan.32, %class.SkSpan.32* %2, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %class.SkSpan, %class.SkSpan* %3, i64 0, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = getelementptr inbounds %class.SkSpan, %class.SkSpan* %3, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %class.SkShaperJSONWriter**
  %14 = load %class.SkShaperJSONWriter*, %class.SkShaperJSONWriter** %13, align 8
  tail call void @_ZN18SkShaperJSONWriter11displayMToNEm6SkSpanIKcES0_IKtE(%class.SkShaperJSONWriter* %14, i64 %1, i8* %6, i64 %8, i16* %10, i64 %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvmmjjEE11__call_implINS0_20__default_alloc_funcIZN18SkShaperJSONWriter17VisualizeClustersEPKcmm6SkSpanIKtES9_IKjERKNS_8functionIFvmS9_IS7_ESB_EEEE3$_2S2_EEEEvPKNS0_16__policy_storageEmmjj"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i64, i64, i32, i32) #0 align 2 {
  %6 = alloca %class.SkSpan.32, align 8
  %7 = alloca %class.SkSpan, align 8
  %8 = alloca %class.SkSpan.32, align 8
  %9 = alloca %class.SkSpan, align 8
  %10 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.57"**
  %11 = load %"class.std::__1::__function::__default_alloc_func.57"*, %"class.std::__1::__function::__default_alloc_func.57"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.57", %"class.std::__1::__function::__default_alloc_func.57"* %11, i64 0, i32 0, i32 0
  %13 = load i8**, i8*** %12, align 8
  %14 = load i8*, i8** %13, align 8
  %15 = zext i32 %3 to i64
  %16 = getelementptr inbounds i8, i8* %14, i64 %15
  %17 = sub i32 %4, %3
  %18 = zext i32 %17 to i64
  %19 = tail call i32 @_ZN5SkUTF9CountUTF8EPKcm(i8* %16, i64 %18) #14
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %119, label %21

21:                                               ; preds = %5
  %22 = sext i32 %19 to i64
  %23 = icmp eq i32 %19, 1
  %24 = sub i64 %2, %1
  %25 = icmp eq i64 %24, 1
  %26 = and i1 %25, %23
  br i1 %26, label %27, label %48

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.57", %"class.std::__1::__function::__default_alloc_func.57"* %11, i64 0, i32 0, i32 1
  %29 = load i64*, i64** %28, align 8
  %30 = load i64, i64* %29, align 8
  %31 = icmp ugt i64 %30, %1
  %32 = select i1 %31, i64 %1, i64 %30
  store i64 %32, i64* %29, align 8
  %33 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.57", %"class.std::__1::__function::__default_alloc_func.57"* %11, i64 0, i32 0, i32 2
  %34 = load i64*, i64** %33, align 8
  %35 = load i64, i64* %34, align 8
  %36 = icmp ult i64 %35, %2
  %37 = select i1 %36, i64 %2, i64 %35
  store i64 %37, i64* %34, align 8
  %38 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.57", %"class.std::__1::__function::__default_alloc_func.57"* %11, i64 0, i32 0, i32 3
  %39 = load i32*, i32** %38, align 8
  %40 = load i32, i32* %39, align 4
  %41 = icmp ugt i32 %40, %3
  %42 = select i1 %41, i32 %3, i32 %40
  store i32 %42, i32* %39, align 4
  %43 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.57", %"class.std::__1::__function::__default_alloc_func.57"* %11, i64 0, i32 0, i32 4
  %44 = load i32*, i32** %43, align 8
  %45 = load i32, i32* %44, align 4
  %46 = icmp ult i32 %45, %4
  %47 = select i1 %46, i32 %4, i32 %45
  store i32 %47, i32* %44, align 4
  br label %119

48:                                               ; preds = %21
  %49 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.57", %"class.std::__1::__function::__default_alloc_func.57"* %11, i64 0, i32 0, i32 5
  %50 = load %class.anon.42*, %class.anon.42** %49, align 8
  %51 = getelementptr inbounds %class.anon.42, %class.anon.42* %50, i64 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %class.anon.42, %class.anon.42* %50, i64 0, i32 1
  %55 = load i64*, i64** %54, align 8
  %56 = load i64, i64* %55, align 8
  %57 = icmp ugt i64 %56, %53
  br i1 %57, label %58, label %89

58:                                               ; preds = %48
  %59 = sub i64 %56, %53
  %60 = getelementptr inbounds %class.anon.42, %class.anon.42* %50, i64 0, i32 2
  %61 = load i8**, i8*** %60, align 8
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %class.anon.42, %class.anon.42* %50, i64 0, i32 3
  %64 = load i32*, i32** %63, align 8
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %62, i64 %66
  %68 = getelementptr inbounds %class.anon.42, %class.anon.42* %50, i64 0, i32 4
  %69 = load i32*, i32** %68, align 8
  %70 = load i32, i32* %69, align 4
  %71 = sub i32 %70, %65
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %class.anon.42, %class.anon.42* %50, i64 0, i32 5
  %74 = load %class.SkSpan*, %class.SkSpan** %73, align 8
  %75 = getelementptr inbounds %class.SkSpan, %class.SkSpan* %74, i64 0, i32 0
  %76 = load i16*, i16** %75, align 8
  %77 = getelementptr inbounds i16, i16* %76, i64 %53
  %78 = getelementptr inbounds %class.anon.42, %class.anon.42* %50, i64 0, i32 6
  %79 = load %"class.std::__1::function"*, %"class.std::__1::function"** %78, align 8
  %80 = bitcast %class.SkSpan.32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #14
  %81 = bitcast %class.SkSpan* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #14
  %82 = getelementptr inbounds %class.SkSpan.32, %class.SkSpan.32* %6, i64 0, i32 0
  store i8* %67, i8** %82, align 8
  %83 = getelementptr inbounds %class.SkSpan.32, %class.SkSpan.32* %6, i64 0, i32 1
  store i64 %72, i64* %83, align 8
  %84 = getelementptr inbounds %class.SkSpan, %class.SkSpan* %7, i64 0, i32 0
  store i16* %77, i16** %84, align 8
  %85 = getelementptr inbounds %class.SkSpan, %class.SkSpan* %7, i64 0, i32 1
  store i64 %59, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %79, i64 0, i32 0, i32 1, i32 0
  %87 = load void (%"union.std::__1::__function::__policy_storage"*, i64, %class.SkSpan.32*, %class.SkSpan*)*, void (%"union.std::__1::__function::__policy_storage"*, i64, %class.SkSpan.32*, %class.SkSpan*)** %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %79, i64 0, i32 0, i32 0
  call void %87(%"union.std::__1::__function::__policy_storage"* %88, i64 %59, %class.SkSpan.32* nonnull dereferenceable(16) %6, %class.SkSpan* nonnull dereferenceable(16) %7) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #14
  br label %89

89:                                               ; preds = %58, %48
  %90 = getelementptr inbounds %class.anon.42, %class.anon.42* %50, i64 0, i32 7
  %91 = load %class.anon.41*, %class.anon.41** %90, align 8
  %92 = getelementptr inbounds %class.anon.41, %class.anon.41* %91, i64 0, i32 0
  %93 = load i64*, i64** %92, align 8
  store i64 -1, i64* %93, align 8
  %94 = getelementptr inbounds %class.anon.41, %class.anon.41* %91, i64 0, i32 1
  %95 = load i64*, i64** %94, align 8
  store i64 0, i64* %95, align 8
  %96 = getelementptr inbounds %class.anon.41, %class.anon.41* %91, i64 0, i32 2
  %97 = load i32*, i32** %96, align 8
  store i32 -1, i32* %97, align 4
  %98 = getelementptr inbounds %class.anon.41, %class.anon.41* %91, i64 0, i32 3
  %99 = load i32*, i32** %98, align 8
  store i32 0, i32* %99, align 4
  %100 = load i8**, i8*** %12, align 8
  %101 = load i8*, i8** %100, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 %15
  %103 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.57", %"class.std::__1::__function::__default_alloc_func.57"* %11, i64 0, i32 0, i32 6
  %104 = load %class.SkSpan*, %class.SkSpan** %103, align 8
  %105 = getelementptr inbounds %class.SkSpan, %class.SkSpan* %104, i64 0, i32 0
  %106 = load i16*, i16** %105, align 8
  %107 = getelementptr inbounds i16, i16* %106, i64 %1
  %108 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.57", %"class.std::__1::__function::__default_alloc_func.57"* %11, i64 0, i32 0, i32 7
  %109 = load %"class.std::__1::function"*, %"class.std::__1::function"** %108, align 8
  %110 = bitcast %class.SkSpan.32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #14
  %111 = bitcast %class.SkSpan* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #14
  %112 = getelementptr inbounds %class.SkSpan.32, %class.SkSpan.32* %8, i64 0, i32 0
  store i8* %102, i8** %112, align 8
  %113 = getelementptr inbounds %class.SkSpan.32, %class.SkSpan.32* %8, i64 0, i32 1
  store i64 %18, i64* %113, align 8
  %114 = getelementptr inbounds %class.SkSpan, %class.SkSpan* %9, i64 0, i32 0
  store i16* %107, i16** %114, align 8
  %115 = getelementptr inbounds %class.SkSpan, %class.SkSpan* %9, i64 0, i32 1
  store i64 %24, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %109, i64 0, i32 0, i32 1, i32 0
  %117 = load void (%"union.std::__1::__function::__policy_storage"*, i64, %class.SkSpan.32*, %class.SkSpan*)*, void (%"union.std::__1::__function::__policy_storage"*, i64, %class.SkSpan.32*, %class.SkSpan*)** %116, align 8
  %118 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %109, i64 0, i32 0, i32 0
  call void %117(%"union.std::__1::__function::__policy_storage"* %118, i64 %22, %class.SkSpan.32* nonnull dereferenceable(16) %8, %class.SkSpan* nonnull dereferenceable(16) %9) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #14
  br label %119

119:                                              ; preds = %5, %27, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN18SkShaperJSONWriter17VisualizeClustersEPKcmm6SkSpanIKtES7_IKjERKNS_8functionIFvmS7_IS5_ES9_EEEE3$_2FvmmjjEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 64) #13, !noalias !20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 64, i1 false) #14
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN18SkShaperJSONWriter17VisualizeClustersEPKcmm6SkSpanIKtES7_IKjERKNS_8functionIFvmS7_IS5_ES9_EEEE3$_2FvmmjjEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #13
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind }
attributes #15 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_SA_"}
!8 = !{i8 0, i8 2}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!12 = distinct !{!12, !13, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN18SkShaperJSONWriter17VisualizeClustersEPKcmm6SkSpanIKtES7_IKjERKNS_8functionIFvmS7_IS5_ES9_EEEE3$_2FvmmjjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN18SkShaperJSONWriter17VisualizeClustersEPKcmm6SkSpanIKtES7_IKjERKNS_8functionIFvmS7_IS5_ES9_EEEE3$_2FvmmjjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!23 = distinct !{!23, !24, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN18SkShaperJSONWriter17VisualizeClustersEPKcmm6SkSpanIKtES7_IKjERKNS_8functionIFvmS7_IS5_ES9_EEEE3$_2FvmmjjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!24 = distinct !{!24, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN18SkShaperJSONWriter17VisualizeClustersEPKcmm6SkSpanIKtES7_IKjERKNS_8functionIFvmS7_IS5_ES9_EEEE3$_2FvmmjjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
