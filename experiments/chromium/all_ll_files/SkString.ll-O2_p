; ModuleID = '../../third_party/skia/src/core/SkString.cpp'
source_filename = "../../third_party/skia/src/core/SkString.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%class.SkTArray = type { %class.SkString*, i64 }

$_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

@.str.2 = private unnamed_addr constant [5 x i8] c"-inf\00", align 1
@_ZZ17SkStrAppendScalarPcfE7gFormat = internal constant [5 x i8] c"%.8g\00", align 1
@_ZN8SkString9gEmptyRecE = hidden global { i32, { { i32 } }, i8 } zeroinitializer, align 4
@_ZN19SkHexadecimalDigits6gUpperE = external local_unnamed_addr constant [16 x i8], align 16
@.str.3 = private unnamed_addr constant [45 x i8] c"../../third_party/skia/src/core/SkString.cpp\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"safe.ok()\00", align 1
@.str.6 = private unnamed_addr constant [36 x i8] c"SkString: vsnprintf reported error.\00", align 1

@_ZN8SkStringC1Ev = hidden unnamed_addr alias void (%class.SkString*), void (%class.SkString*)* @_ZN8SkStringC2Ev
@_ZN8SkStringC1Em = hidden unnamed_addr alias void (%class.SkString*, i64), void (%class.SkString*, i64)* @_ZN8SkStringC2Em
@_ZN8SkStringC1EPKc = hidden unnamed_addr alias void (%class.SkString*, i8*), void (%class.SkString*, i8*)* @_ZN8SkStringC2EPKc
@_ZN8SkStringC1EPKcm = hidden unnamed_addr alias void (%class.SkString*, i8*, i64), void (%class.SkString*, i8*, i64)* @_ZN8SkStringC2EPKcm
@_ZN8SkStringC1ERKS_ = hidden unnamed_addr alias void (%class.SkString*, %class.SkString*), void (%class.SkString*, %class.SkString*)* @_ZN8SkStringC2ERKS_
@_ZN8SkStringC1EOS_ = hidden unnamed_addr alias void (%class.SkString*, %class.SkString*), void (%class.SkString*, %class.SkString*)* @_ZN8SkStringC2EOS_
@_ZN8SkStringC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE = hidden unnamed_addr alias void (%class.SkString*, %"class.std::__1::basic_string"*), void (%class.SkString*, %"class.std::__1::basic_string"*)* @_ZN8SkStringC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
@_ZN8SkStringD1Ev = hidden unnamed_addr alias void (%class.SkString*), void (%class.SkString*)* @_ZN8SkStringD2Ev

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_Z13SkStrEndsWithPKcS0_(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #0 {
  %3 = tail call i64 @strlen(i8* %0) #16
  %4 = tail call i64 @strlen(i8* %1) #16
  %5 = icmp ult i64 %3, %4
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %0, i64 %3
  %8 = sub i64 0, %4
  %9 = getelementptr inbounds i8, i8* %7, i64 %8
  %10 = tail call i32 @strncmp(i8* %9, i8* %1, i64 %4) #16
  %11 = icmp eq i32 %10, 0
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i1 [ false, %2 ], [ %11, %6 ]
  ret i1 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_Z13SkStrEndsWithPKcc(i8* nocapture readonly, i8 signext) local_unnamed_addr #0 {
  %3 = tail call i64 @strlen(i8* %0) #16
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = add i64 %3, -1
  %7 = getelementptr inbounds i8, i8* %0, i64 %6
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, %1
  br label %10

10:                                               ; preds = %2, %5
  %11 = phi i1 [ %9, %5 ], [ false, %2 ]
  ret i1 %11
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_Z20SkStrStartsWithOneOfPKcS0_(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #0 {
  br label %3

3:                                                ; preds = %9, %2
  %4 = phi i8* [ %1, %2 ], [ %11, %9 ]
  %5 = phi i32 [ 0, %2 ], [ %12, %9 ]
  %6 = tail call i64 @strlen(i8* %4)
  %7 = tail call i32 @strncmp(i8* %0, i8* %4, i64 %6) #16
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %3
  %10 = getelementptr i8, i8* %4, i64 1
  %11 = getelementptr inbounds i8, i8* %10, i64 %6
  %12 = add nuw nsw i32 %5, 1
  %13 = load i8, i8* %11, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %3

15:                                               ; preds = %3, %9
  %16 = phi i32 [ -1, %9 ], [ %5, %3 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden i8* @_Z14SkStrAppendU32Pcj(i8*, i32) local_unnamed_addr #4 {
  %3 = alloca [10 x i8], align 1
  %4 = getelementptr inbounds [10 x i8], [10 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %4) #12
  %5 = getelementptr inbounds [10 x i8], [10 x i8]* %3, i64 0, i64 10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 -86, i64 10, i1 false)
  br label %6

6:                                                ; preds = %6, %2
  %7 = phi i32 [ %1, %2 ], [ %14, %6 ]
  %8 = phi i64 [ 0, %2 ], [ %12, %6 ]
  %9 = urem i32 %7, 10
  %10 = trunc i32 %9 to i8
  %11 = or i8 %10, 48
  %12 = add nsw i64 %8, -1
  %13 = getelementptr inbounds i8, i8* %5, i64 %12
  store i8 %11, i8* %13, align 1
  %14 = udiv i32 %7, 10
  %15 = icmp ugt i32 %7, 9
  br i1 %15, label %6, label %16

16:                                               ; preds = %6
  %17 = icmp slt i64 %8, 1
  br i1 %17, label %18, label %27

18:                                               ; preds = %16
  %19 = getelementptr [10 x i8], [10 x i8]* %3, i64 1, i64 %12
  %20 = sub i64 1, %8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %19, i64 %20, i1 false)
  br label %21

21:                                               ; preds = %18, %21
  %22 = phi i64 [ %24, %21 ], [ %12, %18 ]
  %23 = phi i8* [ %25, %21 ], [ %0, %18 ]
  %24 = add nsw i64 %22, 1
  %25 = getelementptr inbounds i8, i8* %23, i64 1
  %26 = icmp slt i64 %24, 0
  br i1 %26, label %21, label %27

27:                                               ; preds = %21, %16
  %28 = phi i8* [ %0, %16 ], [ %25, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %4) #12
  ret i8* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_Z14SkStrAppendS32Pci(i8*, i32) local_unnamed_addr #5 {
  %3 = alloca [10 x i8], align 1
  %4 = icmp slt i32 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i64 1
  store i8 45, i8* %0, align 1
  %7 = sub i32 0, %1
  br label %8

8:                                                ; preds = %5, %2
  %9 = phi i8* [ %6, %5 ], [ %0, %2 ]
  %10 = phi i32 [ %7, %5 ], [ %1, %2 ]
  %11 = getelementptr inbounds [10 x i8], [10 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %11) #12
  %12 = getelementptr inbounds [10 x i8], [10 x i8]* %3, i64 0, i64 10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %11, i8 -86, i64 10, i1 false) #12
  br label %13

13:                                               ; preds = %13, %8
  %14 = phi i32 [ %10, %8 ], [ %21, %13 ]
  %15 = phi i64 [ 0, %8 ], [ %19, %13 ]
  %16 = urem i32 %14, 10
  %17 = trunc i32 %16 to i8
  %18 = or i8 %17, 48
  %19 = add nsw i64 %15, -1
  %20 = getelementptr inbounds i8, i8* %12, i64 %19
  store i8 %18, i8* %20, align 1
  %21 = udiv i32 %14, 10
  %22 = icmp ugt i32 %14, 9
  br i1 %22, label %13, label %23

23:                                               ; preds = %13
  %24 = icmp slt i64 %15, 1
  br i1 %24, label %25, label %30

25:                                               ; preds = %23
  %26 = getelementptr [10 x i8], [10 x i8]* %3, i64 1, i64 %19
  %27 = sub i64 1, %15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 1 %26, i64 %27, i1 false) #12
  %28 = sub i64 1, %15
  %29 = getelementptr i8, i8* %9, i64 %28
  br label %30

30:                                               ; preds = %25, %23
  %31 = phi i8* [ %9, %23 ], [ %29, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %11) #12
  ret i8* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_Z14SkStrAppendU64Pcmi(i8*, i64, i32) local_unnamed_addr #5 {
  %4 = alloca [20 x i8], align 16
  %5 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #12
  %6 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 20, i1 false)
  br label %7

7:                                                ; preds = %7, %3
  %8 = phi i64 [ %1, %3 ], [ %15, %7 ]
  %9 = phi i32 [ %2, %3 ], [ %16, %7 ]
  %10 = phi i8* [ %6, %3 ], [ %14, %7 ]
  %11 = urem i64 %8, 10
  %12 = trunc i64 %11 to i8
  %13 = or i8 %12, 48
  %14 = getelementptr inbounds i8, i8* %10, i64 -1
  store i8 %13, i8* %14, align 1
  %15 = udiv i64 %8, 10
  %16 = add nsw i32 %9, -1
  %17 = icmp ugt i64 %8, 9
  br i1 %17, label %7, label %18

18:                                               ; preds = %7
  %19 = icmp sgt i32 %16, 0
  br i1 %19, label %20, label %48

20:                                               ; preds = %18
  %21 = add nsw i32 %9, -2
  %22 = zext i32 %21 to i64
  %23 = xor i64 %22, -1
  %24 = getelementptr i8, i8* %14, i64 %23
  %25 = zext i32 %16 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %24, i8 48, i64 %25, i1 false)
  %26 = add nsw i32 %9, -2
  %27 = and i32 %16, 7
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %37, label %29

29:                                               ; preds = %20, %29
  %30 = phi i8* [ %33, %29 ], [ %14, %20 ]
  %31 = phi i32 [ %34, %29 ], [ %16, %20 ]
  %32 = phi i32 [ %35, %29 ], [ %27, %20 ]
  %33 = getelementptr inbounds i8, i8* %30, i64 -1
  %34 = add nsw i32 %31, -1
  %35 = add i32 %32, -1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %29, !llvm.loop !2

37:                                               ; preds = %29, %20
  %38 = phi i8* [ %14, %20 ], [ %33, %29 ]
  %39 = phi i32 [ %16, %20 ], [ %34, %29 ]
  %40 = phi i8* [ undef, %20 ], [ %33, %29 ]
  %41 = icmp ult i32 %26, 7
  br i1 %41, label %48, label %42

42:                                               ; preds = %37, %42
  %43 = phi i8* [ %45, %42 ], [ %38, %37 ]
  %44 = phi i32 [ %46, %42 ], [ %39, %37 ]
  %45 = getelementptr inbounds i8, i8* %43, i64 -8
  %46 = add nsw i32 %44, -8
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %42, label %48

48:                                               ; preds = %37, %42, %18
  %49 = phi i8* [ %14, %18 ], [ %40, %37 ], [ %45, %42 ]
  %50 = ptrtoint i8* %6 to i64
  %51 = ptrtoint i8* %49 to i64
  %52 = sub i64 %50, %51
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %49, i64 %52, i1 false)
  %53 = getelementptr inbounds i8, i8* %0, i64 %52
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #12
  ret i8* %53
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_Z14SkStrAppendS64Pcli(i8*, i64, i32) local_unnamed_addr #5 {
  %4 = alloca [20 x i8], align 16
  %5 = icmp slt i64 %1, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, i8* %0, i64 1
  store i8 45, i8* %0, align 1
  %8 = sub i64 0, %1
  br label %9

9:                                                ; preds = %6, %3
  %10 = phi i8* [ %7, %6 ], [ %0, %3 ]
  %11 = phi i64 [ %8, %6 ], [ %1, %3 ]
  %12 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %12) #12
  %13 = getelementptr inbounds [20 x i8], [20 x i8]* %4, i64 0, i64 20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 20, i1 false) #12
  br label %14

14:                                               ; preds = %14, %9
  %15 = phi i64 [ %11, %9 ], [ %22, %14 ]
  %16 = phi i32 [ %2, %9 ], [ %23, %14 ]
  %17 = phi i8* [ %13, %9 ], [ %21, %14 ]
  %18 = urem i64 %15, 10
  %19 = trunc i64 %18 to i8
  %20 = or i8 %19, 48
  %21 = getelementptr inbounds i8, i8* %17, i64 -1
  store i8 %20, i8* %21, align 1
  %22 = udiv i64 %15, 10
  %23 = add nsw i32 %16, -1
  %24 = icmp ugt i64 %15, 9
  br i1 %24, label %14, label %25

25:                                               ; preds = %14
  %26 = icmp sgt i32 %23, 0
  br i1 %26, label %27, label %37

27:                                               ; preds = %25
  %28 = add nsw i32 %16, -2
  %29 = zext i32 %28 to i64
  %30 = xor i64 %29, -1
  %31 = getelementptr i8, i8* %21, i64 %30
  %32 = zext i32 %23 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %31, i8 48, i64 %32, i1 false) #12
  %33 = add nsw i32 %16, -2
  %34 = zext i32 %33 to i64
  %35 = xor i64 %34, -1
  %36 = getelementptr i8, i8* %21, i64 %35
  br label %37

37:                                               ; preds = %27, %25
  %38 = phi i8* [ %21, %25 ], [ %36, %27 ]
  %39 = ptrtoint i8* %13 to i64
  %40 = ptrtoint i8* %38 to i64
  %41 = sub i64 %39, %40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %38, i64 %41, i1 false) #12
  %42 = getelementptr inbounds i8, i8* %10, i64 %41
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %12) #12
  ret i8* %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_Z17SkStrAppendScalarPcf(i8*, float) local_unnamed_addr #5 {
  %3 = alloca [16 x i8], align 16
  %4 = fcmp uno float %1, 0.000000e+00
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = bitcast i8* %0 to i32*
  store i32 7233902, i32* %6, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 3
  br label %25

8:                                                ; preds = %2
  %9 = bitcast float %1 to i32
  %10 = and i32 %9, 2139095040
  %11 = icmp eq i32 %10, 2139095040
  br i1 %11, label %12, label %19

12:                                               ; preds = %8
  %13 = fcmp ogt float %1, 0.000000e+00
  br i1 %13, label %14, label %17

14:                                               ; preds = %12
  %15 = bitcast i8* %0 to i32*
  store i32 6712937, i32* %15, align 1
  %16 = getelementptr inbounds i8, i8* %0, i64 3
  br label %25

17:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 5, i1 false)
  %18 = getelementptr inbounds i8, i8* %0, i64 4
  br label %25

19:                                               ; preds = %8
  %20 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #12
  %21 = fpext float %1 to double
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 16, i1 false)
  %22 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %20, i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZ17SkStrAppendScalarPcfE7gFormat, i64 0, i64 0), double %21) #12
  %23 = sext i32 %22 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* nonnull align 16 %20, i64 %23, i1 false)
  %24 = getelementptr inbounds i8, i8* %0, i64 %23
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #12
  br label %25

25:                                               ; preds = %19, %17, %14, %5
  %26 = phi i8* [ %7, %5 ], [ %24, %19 ], [ %16, %14 ], [ %18, %17 ]
  ret i8* %26
}

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString3Rec4MakeEPKcm(%class.sk_sp* noalias nocapture sret, i8* readonly, i64) local_unnamed_addr #5 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %"struct.SkString::Rec"* bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %6, align 8
  br label %28

7:                                                ; preds = %3
  %8 = icmp ult i64 %2, 4294967296
  %9 = add i64 %2, 9
  %10 = add i64 %2, 12
  %11 = icmp uge i64 %10, %9
  %12 = and i1 %8, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %7
  tail call fastcc void @"_ZZN8SkString3Rec4MakeEPKcmENK3$_0clEv"()
  unreachable

14:                                               ; preds = %7
  %15 = and i64 %10, -4
  %16 = trunc i64 %2 to i32
  %17 = tail call i8* @_Znwm(i64 %15) #12
  %18 = bitcast i8* %17 to i32*
  store i32 %16, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %17, i64 4
  %20 = bitcast i8* %19 to i32*
  store i32 1, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  store i8 0, i8* %21, align 4
  %22 = ptrtoint i8* %17 to i64
  %23 = icmp eq i8* %1, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* nonnull align 1 %1, i64 %2, i1 false)
  br label %25

25:                                               ; preds = %24, %14
  %26 = getelementptr inbounds i8, i8* %21, i64 %2
  store i8 0, i8* %26, align 1
  %27 = bitcast %class.sk_sp* %0 to i64*
  store i64 %22, i64* %27, align 8
  br label %28

28:                                               ; preds = %25, %5
  ret void
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal fastcc void @"_ZZN8SkString3Rec4MakeEPKcmENK3$_0clEv"() unnamed_addr #7 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i32 219, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)) #17
  unreachable
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK8SkString3Rec3refEv(%"struct.SkString::Rec"*) local_unnamed_addr #9 align 2 {
  %2 = icmp eq %"struct.SkString::Rec"* %0, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = atomicrmw add i32* %4, i32 1 monotonic
  br label %6

6:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8SkString3Rec5unrefEv(%"struct.SkString::Rec"*) local_unnamed_addr #5 align 2 {
  %2 = icmp eq %"struct.SkString::Rec"* %0, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = atomicrmw add i32* %4, i32 -1 acq_rel
  %6 = icmp ne i32 %5, 1
  %7 = icmp eq %"struct.SkString::Rec"* %0, null
  %8 = or i1 %7, %6
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = bitcast %"struct.SkString::Rec"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %9, %3, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkString3Rec6uniqueEv(%"struct.SkString::Rec"* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 acquire, align 4
  %4 = icmp eq i32 %3, 1
  ret i1 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8SkStringC2Ev(%class.SkString* nocapture) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkStringC2Em(%class.SkString* nocapture, i64) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* null, %"struct.SkString::Rec"** %3, align 8
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = bitcast %class.SkString* %0 to i64*
  store i64 ptrtoint ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to i64), i64* %6, align 8
  br label %35

7:                                                ; preds = %2
  %8 = icmp ult i64 %1, 4294967296
  %9 = add i64 %1, 9
  %10 = add i64 %1, 12
  %11 = icmp uge i64 %10, %9
  %12 = and i1 %8, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %7
  tail call fastcc void @"_ZZN8SkString3Rec4MakeEPKcmENK3$_0clEv"() #12, !noalias !4
  unreachable

14:                                               ; preds = %7
  %15 = and i64 %10, -4
  %16 = trunc i64 %1 to i32
  %17 = tail call i8* @_Znwm(i64 %15) #12, !noalias !4
  %18 = bitcast i8* %17 to i32*
  store i32 %16, i32* %18, align 4, !noalias !4
  %19 = getelementptr inbounds i8, i8* %17, i64 4
  %20 = bitcast i8* %19 to i32*
  store i32 1, i32* %20, align 4, !noalias !4
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  store i8 0, i8* %21, align 4, !noalias !4
  %22 = ptrtoint i8* %17 to i64
  %23 = getelementptr inbounds i8, i8* %21, i64 %1
  store i8 0, i8* %23, align 1, !noalias !4
  %24 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %3, align 8
  %25 = bitcast %"struct.SkString::Rec"* %24 to i8*
  %26 = bitcast %class.SkString* %0 to i64*
  store i64 %22, i64* %26, align 8
  %27 = icmp eq %"struct.SkString::Rec"* %24, null
  %28 = icmp eq %"struct.SkString::Rec"* %24, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %29 = or i1 %27, %28
  br i1 %29, label %35, label %30

30:                                               ; preds = %14
  %31 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %24, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  tail call void @_ZdlPv(i8* %25) #12
  br label %35

35:                                               ; preds = %5, %34, %30, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkStringC2EPKc(%class.SkString* nocapture, i8* readonly) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* null, %"struct.SkString::Rec"** %3, align 8
  %4 = icmp eq i8* %1, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %2
  %6 = tail call i64 @strlen(i8* nonnull %1) #16
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %5
  %9 = icmp ult i64 %6, 4294967296
  %10 = add i64 %6, 9
  %11 = add i64 %6, 12
  %12 = icmp uge i64 %11, %10
  %13 = and i1 %9, %12
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  tail call fastcc void @"_ZZN8SkString3Rec4MakeEPKcmENK3$_0clEv"() #12, !noalias !7
  unreachable

15:                                               ; preds = %5, %2
  %16 = bitcast %class.SkString* %0 to i64*
  store i64 ptrtoint ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to i64), i64* %16, align 8
  br label %38

17:                                               ; preds = %8
  %18 = and i64 %11, -4
  %19 = trunc i64 %6 to i32
  %20 = tail call i8* @_Znwm(i64 %18) #12, !noalias !7
  %21 = bitcast i8* %20 to i32*
  store i32 %19, i32* %21, align 4, !noalias !7
  %22 = getelementptr inbounds i8, i8* %20, i64 4
  %23 = bitcast i8* %22 to i32*
  store i32 1, i32* %23, align 4, !noalias !7
  %24 = getelementptr inbounds i8, i8* %20, i64 8
  store i8 0, i8* %24, align 4, !noalias !7
  %25 = ptrtoint i8* %20 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* nonnull align 1 %1, i64 %6, i1 false) #12, !noalias !7
  %26 = getelementptr inbounds i8, i8* %24, i64 %6
  store i8 0, i8* %26, align 1, !noalias !7
  %27 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %3, align 8
  %28 = bitcast %"struct.SkString::Rec"* %27 to i8*
  %29 = bitcast %class.SkString* %0 to i64*
  store i64 %25, i64* %29, align 8
  %30 = icmp eq %"struct.SkString::Rec"* %27, null
  %31 = icmp eq %"struct.SkString::Rec"* %27, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %32 = or i1 %30, %31
  br i1 %32, label %38, label %33

33:                                               ; preds = %17
  %34 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %27, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @_ZdlPv(i8* %28) #12
  br label %38

38:                                               ; preds = %15, %37, %33, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkStringC2EPKcm(%class.SkString* nocapture, i8* readonly, i64) unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* null, %"struct.SkString::Rec"** %4, align 8
  %5 = icmp eq i64 %2, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = bitcast %class.SkString* %0 to i64*
  store i64 ptrtoint ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to i64), i64* %7, align 8
  br label %39

8:                                                ; preds = %3
  %9 = icmp ult i64 %2, 4294967296
  %10 = add i64 %2, 9
  %11 = add i64 %2, 12
  %12 = icmp uge i64 %11, %10
  %13 = and i1 %9, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %8
  tail call fastcc void @"_ZZN8SkString3Rec4MakeEPKcmENK3$_0clEv"() #12, !noalias !10
  unreachable

15:                                               ; preds = %8
  %16 = and i64 %11, -4
  %17 = trunc i64 %2 to i32
  %18 = tail call i8* @_Znwm(i64 %16) #12, !noalias !10
  %19 = bitcast i8* %18 to i32*
  store i32 %17, i32* %19, align 4, !noalias !10
  %20 = getelementptr inbounds i8, i8* %18, i64 4
  %21 = bitcast i8* %20 to i32*
  store i32 1, i32* %21, align 4, !noalias !10
  %22 = getelementptr inbounds i8, i8* %18, i64 8
  store i8 0, i8* %22, align 4, !noalias !10
  %23 = ptrtoint i8* %18 to i64
  %24 = icmp eq i8* %1, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* nonnull align 1 %1, i64 %2, i1 false) #12, !noalias !10
  br label %26

26:                                               ; preds = %15, %25
  %27 = getelementptr inbounds i8, i8* %22, i64 %2
  store i8 0, i8* %27, align 1, !noalias !10
  %28 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %4, align 8
  %29 = bitcast %"struct.SkString::Rec"* %28 to i8*
  %30 = bitcast %class.SkString* %0 to i64*
  store i64 %23, i64* %30, align 8
  %31 = icmp eq %"struct.SkString::Rec"* %28, null
  %32 = icmp eq %"struct.SkString::Rec"* %28, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %33 = or i1 %31, %32
  br i1 %33, label %39, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %28, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %39

38:                                               ; preds = %34
  tail call void @_ZdlPv(i8* %29) #12
  br label %39

39:                                               ; preds = %6, %38, %34, %26
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8SkStringC2ERKS_(%class.SkString* nocapture, %class.SkString* nocapture readonly dereferenceable(8)) unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.SkString, %class.SkString* %1, i64 0, i32 0, i32 0
  %5 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %4, align 8
  %6 = icmp eq %"struct.SkString::Rec"* %5, null
  %7 = icmp eq %"struct.SkString::Rec"* %5, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %8 = or i1 %6, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %2, %9
  store %"struct.SkString::Rec"* %5, %"struct.SkString::Rec"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkStringC2EOS_(%class.SkString* nocapture, %class.SkString* nocapture dereferenceable(8)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.SkString, %class.SkString* %1, i64 0, i32 0, i32 0
  %5 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %4, align 8
  %6 = icmp eq %"struct.SkString::Rec"* %5, null
  %7 = icmp eq %"struct.SkString::Rec"* %5, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %8 = or i1 %6, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %2, %9
  store %"struct.SkString::Rec"* %5, %"struct.SkString::Rec"** %3, align 8
  %13 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %4, align 8
  store %"struct.SkString::Rec"* bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %4, align 8
  %14 = icmp eq %"struct.SkString::Rec"* %13, null
  %15 = icmp eq %"struct.SkString::Rec"* %13, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %16 = or i1 %14, %15
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = bitcast %"struct.SkString::Rec"* %13 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %12, %17, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkStringC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.SkString* nocapture, %"class.std::__1::basic_string"* readonly dereferenceable(24)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* null, %"struct.SkString::Rec"** %3, align 8
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = bitcast %class.SkString* %0 to i64*
  store i64 ptrtoint ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to i64), i64* %18, align 8
  br label %50

19:                                               ; preds = %2
  %20 = icmp ult i64 %15, 4294967296
  %21 = add i64 %15, 9
  %22 = add i64 %15, 12
  %23 = icmp uge i64 %22, %21
  %24 = and i1 %20, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %19
  tail call fastcc void @"_ZZN8SkString3Rec4MakeEPKcmENK3$_0clEv"() #12, !noalias !13
  unreachable

26:                                               ; preds = %19
  %27 = and i64 %22, -4
  %28 = trunc i64 %15 to i32
  %29 = tail call i8* @_Znwm(i64 %27) #12, !noalias !13
  %30 = bitcast i8* %29 to i32*
  store i32 %28, i32* %30, align 4, !noalias !13
  %31 = getelementptr inbounds i8, i8* %29, i64 4
  %32 = bitcast i8* %31 to i32*
  store i32 1, i32* %32, align 4, !noalias !13
  %33 = getelementptr inbounds i8, i8* %29, i64 8
  store i8 0, i8* %33, align 4, !noalias !13
  %34 = ptrtoint i8* %29 to i64
  %35 = icmp eq i8* %14, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %26
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* nonnull align 1 %14, i64 %15, i1 false) #12, !noalias !13
  br label %37

37:                                               ; preds = %26, %36
  %38 = getelementptr inbounds i8, i8* %33, i64 %15
  store i8 0, i8* %38, align 1, !noalias !13
  %39 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %3, align 8
  %40 = bitcast %"struct.SkString::Rec"* %39 to i8*
  %41 = bitcast %class.SkString* %0 to i64*
  store i64 %34, i64* %41, align 8
  %42 = icmp eq %"struct.SkString::Rec"* %39, null
  %43 = icmp eq %"struct.SkString::Rec"* %39, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %44 = or i1 %42, %43
  br i1 %44, label %50, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %39, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  tail call void @_ZdlPv(i8* %40) #12
  br label %50

50:                                               ; preds = %17, %49, %45, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkStringD2Ev(%class.SkString* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %2, align 8
  %4 = icmp eq %"struct.SkString::Rec"* %3, null
  %5 = icmp eq %"struct.SkString::Rec"* %3, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %6 = or i1 %4, %5
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = bitcast %"struct.SkString::Rec"* %3 to i8*
  tail call void @_ZdlPv(i8* %12) #12
  br label %13

13:                                               ; preds = %1, %7, %11
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8SkString6equalsERKS_(%class.SkString* nocapture readonly, %class.SkString* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %3, align 8
  %5 = getelementptr inbounds %class.SkString, %class.SkString* %1, i64 0, i32 0, i32 0
  %6 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %5, align 8
  %7 = icmp eq %"struct.SkString::Rec"* %4, %6
  br i1 %7, label %22, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %6, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %6, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %4, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, %11
  br i1 %15, label %16, label %22

16:                                               ; preds = %8
  %17 = icmp eq i32 %11, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %4, i64 0, i32 2
  %20 = tail call i32 @bcmp(i8* %19, i8* %9, i64 %12) #12
  %21 = icmp eq i32 %20, 0
  br label %22

22:                                               ; preds = %18, %16, %8, %2
  %23 = phi i1 [ true, %2 ], [ false, %8 ], [ %21, %18 ], [ true, %16 ]
  ret i1 %23
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8SkString6equalsEPKcm(%class.SkString* nocapture readonly, i8* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  %5 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %4, align 8
  %6 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = icmp eq i64 %8, %2
  br i1 %9, label %10, label %16

10:                                               ; preds = %3
  %11 = icmp eq i64 %2, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %5, i64 0, i32 2
  %14 = tail call i32 @bcmp(i8* %13, i8* %1, i64 %2)
  %15 = icmp eq i32 %14, 0
  br label %16

16:                                               ; preds = %12, %10, %3
  %17 = phi i1 [ false, %3 ], [ %15, %12 ], [ true, %10 ]
  ret i1 %17
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8SkString6equalsEPKc(%class.SkString* nocapture readonly, i8* readonly) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* nonnull %1) #16
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi i64 [ %5, %4 ], [ 0, %2 ]
  %8 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  %9 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %8, align 8
  %10 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = icmp eq i64 %7, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %6
  %15 = icmp eq i64 %7, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %9, i64 0, i32 2
  %18 = tail call i32 @bcmp(i8* %17, i8* %1, i64 %7) #12
  %19 = icmp eq i32 %18, 0
  br label %20

20:                                               ; preds = %6, %14, %16
  %21 = phi i1 [ false, %6 ], [ %19, %16 ], [ true, %14 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %class.SkString* @_ZN8SkStringaSERKS_(%class.SkString* returned, %class.SkString* readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = icmp eq %class.SkString* %0, %1
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkString, %class.SkString* %1, i64 0, i32 0, i32 0
  %6 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %5, align 8
  %7 = icmp eq %"struct.SkString::Rec"* %6, null
  %8 = icmp eq %"struct.SkString::Rec"* %6, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %9 = or i1 %7, %8
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %10, %4
  %14 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  %15 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %14, align 8
  store %"struct.SkString::Rec"* %6, %"struct.SkString::Rec"** %14, align 8
  %16 = icmp eq %"struct.SkString::Rec"* %15, null
  %17 = icmp eq %"struct.SkString::Rec"* %15, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %18 = or i1 %16, %17
  br i1 %18, label %25, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = bitcast %"struct.SkString::Rec"* %15 to i8*
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %2, %13, %19, %23
  ret %class.SkString* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(8) %class.SkString* @_ZN8SkStringaSEOS_(%class.SkString* returned, %class.SkString* nocapture dereferenceable(8)) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %3, align 8
  %5 = getelementptr inbounds %class.SkString, %class.SkString* %1, i64 0, i32 0, i32 0
  %6 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %5, align 8
  %7 = icmp eq %"struct.SkString::Rec"* %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = ptrtoint %"struct.SkString::Rec"* %6 to i64
  %10 = ptrtoint %"struct.SkString::Rec"* %4 to i64
  %11 = bitcast %class.SkString* %0 to i64*
  %12 = bitcast %class.SkString* %1 to i64*
  store i64 %9, i64* %11, align 8
  store i64 %10, i64* %12, align 8
  br label %13

13:                                               ; preds = %2, %8
  ret %class.SkString* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8SkString4swapERS_(%class.SkString* nocapture, %class.SkString* nocapture dereferenceable(8)) local_unnamed_addr #9 align 2 {
  %3 = bitcast %class.SkString* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %class.SkString* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %3, align 8
  store i64 %4, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString* returned, i8* readonly) local_unnamed_addr #5 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %24, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* nonnull %1) #16
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %24, label %7

7:                                                ; preds = %4
  %8 = icmp ult i64 %5, 4294967296
  %9 = add i64 %5, 9
  %10 = add i64 %5, 12
  %11 = icmp uge i64 %10, %9
  %12 = and i1 %8, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %7
  tail call fastcc void @"_ZZN8SkString3Rec4MakeEPKcmENK3$_0clEv"() #12, !noalias !16
  unreachable

14:                                               ; preds = %7
  %15 = and i64 %10, -4
  %16 = trunc i64 %5 to i32
  %17 = tail call i8* @_Znwm(i64 %15) #12, !noalias !16
  %18 = bitcast i8* %17 to i32*
  store i32 %16, i32* %18, align 4, !noalias !16
  %19 = getelementptr inbounds i8, i8* %17, i64 4
  %20 = bitcast i8* %19 to i32*
  store i32 1, i32* %20, align 4, !noalias !16
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  store i8 0, i8* %21, align 4, !noalias !16
  %22 = ptrtoint i8* %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* nonnull align 1 %1, i64 %5, i1 false) #12, !noalias !16
  %23 = getelementptr inbounds i8, i8* %21, i64 %5
  store i8 0, i8* %23, align 1, !noalias !16
  br label %24

24:                                               ; preds = %14, %2, %4
  %25 = phi i64 [ %22, %14 ], [ ptrtoint ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to i64), %4 ], [ ptrtoint ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to i64), %2 ]
  %26 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  %27 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %26, align 8
  %28 = inttoptr i64 %25 to %"struct.SkString::Rec"*
  %29 = icmp eq %"struct.SkString::Rec"* %27, %28
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = bitcast %class.SkString* %0 to i64*
  store i64 %25, i64* %31, align 8
  br label %32

32:                                               ; preds = %24, %30
  %33 = icmp eq %"struct.SkString::Rec"* %27, null
  %34 = icmp eq %"struct.SkString::Rec"* %27, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %35 = or i1 %33, %34
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %27, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  %41 = bitcast %"struct.SkString::Rec"* %27 to i8*
  tail call void @_ZdlPv(i8* %41) #12
  br label %42

42:                                               ; preds = %32, %36, %40
  ret %class.SkString* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString5resetEv(%class.SkString* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %2, align 8
  store %"struct.SkString::Rec"* bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %2, align 8
  %4 = icmp eq %"struct.SkString::Rec"* %3, null
  %5 = icmp eq %"struct.SkString::Rec"* %3, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %6 = or i1 %4, %5
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = bitcast %"struct.SkString::Rec"* %3 to i8*
  tail call void @_ZdlPv(i8* %12) #12
  br label %13

13:                                               ; preds = %1, %7, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN8SkString12writable_strEv(%class.SkString* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  %3 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %2, align 8
  %4 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %45, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 acquire, align 4
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %45, label %11

11:                                               ; preds = %7
  %12 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %2, align 8
  %13 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %12, i64 0, i32 2
  %14 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %12, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = icmp eq i32 %15, 0
  br i1 %17, label %32, label %18

18:                                               ; preds = %11
  %19 = add nuw nsw i64 %16, 12
  %20 = and i64 %19, 8589934588
  %21 = tail call i8* @_Znwm(i64 %20) #12, !noalias !19
  %22 = bitcast i8* %21 to i32*
  store i32 %15, i32* %22, align 4, !noalias !19
  %23 = getelementptr inbounds i8, i8* %21, i64 4
  %24 = bitcast i8* %23 to i32*
  store i32 1, i32* %24, align 4, !noalias !19
  %25 = getelementptr inbounds i8, i8* %21, i64 8
  store i8 0, i8* %25, align 4, !noalias !19
  %26 = ptrtoint i8* %21 to i64
  %27 = icmp eq i8* %13, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %18
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* nonnull align 1 %13, i64 %16, i1 false) #12, !noalias !19
  br label %29

29:                                               ; preds = %28, %18
  %30 = getelementptr inbounds i8, i8* %25, i64 %16
  store i8 0, i8* %30, align 1, !noalias !19
  %31 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %2, align 8
  br label %32

32:                                               ; preds = %11, %29
  %33 = phi %"struct.SkString::Rec"* [ %31, %29 ], [ %12, %11 ]
  %34 = phi i64 [ %26, %29 ], [ ptrtoint ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to i64), %11 ]
  %35 = bitcast %class.SkString* %0 to i64*
  store i64 %34, i64* %35, align 8
  %36 = icmp eq %"struct.SkString::Rec"* %33, null
  %37 = icmp eq %"struct.SkString::Rec"* %33, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %38 = or i1 %36, %37
  br i1 %38, label %45, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %33, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  %44 = bitcast %"struct.SkString::Rec"* %33 to i8*
  tail call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %32, %39, %43, %1, %7
  %46 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %2, align 8
  %47 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %46, i64 0, i32 2
  ret i8* %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString6resizeEm(%class.SkString* nocapture, i64) local_unnamed_addr #5 align 2 {
  %3 = icmp ult i64 %1, 4294967295
  %4 = select i1 %3, i64 %1, i64 4294967295
  %5 = trunc i64 %4 to i32
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  %8 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  br i1 %6, label %9, label %19

9:                                                ; preds = %2
  store %"struct.SkString::Rec"* bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %7, align 8
  %10 = icmp eq %"struct.SkString::Rec"* %8, null
  %11 = icmp eq %"struct.SkString::Rec"* %8, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %12 = or i1 %10, %11
  br i1 %12, label %142, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 -1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %142

17:                                               ; preds = %13
  %18 = bitcast %"struct.SkString::Rec"* %8 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  br label %142

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 acquire, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %74

23:                                               ; preds = %19
  %24 = lshr i64 %4, 2
  %25 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  %26 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = lshr i32 %27, 2
  %29 = zext i32 %28 to i64
  %30 = icmp ugt i64 %24, %29
  br i1 %30, label %74, label %31

31:                                               ; preds = %23
  %32 = icmp eq i32 %27, 0
  br i1 %32, label %68, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %25, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 acquire, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %68, label %37

37:                                               ; preds = %33
  %38 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  %39 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = icmp eq i32 %40, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %38, i64 0, i32 2
  %45 = add nuw nsw i64 %41, 12
  %46 = and i64 %45, 8589934588
  %47 = tail call i8* @_Znwm(i64 %46) #12, !noalias !22
  %48 = bitcast i8* %47 to i32*
  store i32 %40, i32* %48, align 4, !noalias !22
  %49 = getelementptr inbounds i8, i8* %47, i64 4
  %50 = bitcast i8* %49 to i32*
  store i32 1, i32* %50, align 4, !noalias !22
  %51 = getelementptr inbounds i8, i8* %47, i64 8
  store i8 0, i8* %51, align 4, !noalias !22
  %52 = ptrtoint i8* %47 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* nonnull align 1 %44, i64 %41, i1 false) #12, !noalias !22
  %53 = getelementptr inbounds i8, i8* %51, i64 %41
  store i8 0, i8* %53, align 1, !noalias !22
  %54 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  br label %55

55:                                               ; preds = %43, %37
  %56 = phi %"struct.SkString::Rec"* [ %54, %43 ], [ %38, %37 ]
  %57 = phi i64 [ %52, %43 ], [ ptrtoint ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to i64), %37 ]
  %58 = bitcast %class.SkString* %0 to i64*
  store i64 %57, i64* %58, align 8
  %59 = icmp eq %"struct.SkString::Rec"* %56, null
  %60 = icmp eq %"struct.SkString::Rec"* %56, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %61 = or i1 %59, %60
  br i1 %61, label %68, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %56, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = bitcast %"struct.SkString::Rec"* %56 to i8*
  tail call void @_ZdlPv(i8* %67) #12
  br label %68

68:                                               ; preds = %31, %33, %55, %62, %66
  %69 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  %70 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %69, i64 0, i32 2
  %71 = getelementptr inbounds i8, i8* %70, i64 %4
  store i8 0, i8* %71, align 1
  %72 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  %73 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %72, i64 0, i32 0
  store i32 %5, i32* %73, align 4
  br label %142

74:                                               ; preds = %23, %19
  %75 = icmp eq i64 %4, 0
  br i1 %75, label %86, label %76

76:                                               ; preds = %74
  %77 = add nuw nsw i64 %4, 12
  %78 = and i64 %77, 8589934588
  %79 = tail call i8* @_Znwm(i64 %78) #12, !noalias !25
  %80 = bitcast i8* %79 to i32*
  store i32 %5, i32* %80, align 4, !noalias !25
  %81 = getelementptr inbounds i8, i8* %79, i64 4
  %82 = bitcast i8* %81 to i32*
  store i32 1, i32* %82, align 4, !noalias !25
  %83 = getelementptr inbounds i8, i8* %79, i64 8
  store i8 0, i8* %83, align 4, !noalias !25
  %84 = ptrtoint i8* %79 to i64
  %85 = getelementptr inbounds i8, i8* %83, i64 %4
  store i8 0, i8* %85, align 1, !noalias !25
  br label %86

86:                                               ; preds = %76, %74
  %87 = phi i64 [ %84, %76 ], [ ptrtoint ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to i64), %74 ]
  %88 = inttoptr i64 %87 to %"struct.SkString::Rec"*
  %89 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %88, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %119, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %88, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 acquire, align 4
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %119, label %96

96:                                               ; preds = %92
  %97 = load i32, i32* %89, align 4
  %98 = zext i32 %97 to i64
  %99 = icmp eq i32 %97, 0
  br i1 %99, label %111, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %88, i64 0, i32 2
  %102 = add nuw nsw i64 %98, 12
  %103 = and i64 %102, 8589934588
  %104 = tail call i8* @_Znwm(i64 %103) #12, !noalias !28
  %105 = bitcast i8* %104 to i32*
  store i32 %97, i32* %105, align 4, !noalias !28
  %106 = getelementptr inbounds i8, i8* %104, i64 4
  %107 = bitcast i8* %106 to i32*
  store i32 1, i32* %107, align 4, !noalias !28
  %108 = getelementptr inbounds i8, i8* %104, i64 8
  store i8 0, i8* %108, align 4, !noalias !28
  %109 = ptrtoint i8* %104 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %108, i8* nonnull align 1 %101, i64 %98, i1 false) #12, !noalias !28
  %110 = getelementptr inbounds i8, i8* %108, i64 %98
  store i8 0, i8* %110, align 1, !noalias !28
  br label %111

111:                                              ; preds = %100, %96
  %112 = phi i64 [ %109, %100 ], [ ptrtoint ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to i64), %96 ]
  %113 = icmp eq %"struct.SkString::Rec"* %88, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  br i1 %113, label %119, label %114

114:                                              ; preds = %111
  %115 = atomicrmw add i32* %93, i32 -1 acq_rel
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %117, label %119

117:                                              ; preds = %114
  %118 = inttoptr i64 %87 to i8*
  tail call void @_ZdlPv(i8* %118) #12
  br label %119

119:                                              ; preds = %86, %92, %111, %114, %117
  %120 = phi i64 [ %87, %86 ], [ %87, %92 ], [ %112, %111 ], [ %112, %117 ], [ %112, %114 ]
  %121 = inttoptr i64 %120 to %"struct.SkString::Rec"*
  %122 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %121, i64 0, i32 2
  %123 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  %124 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %123, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp ult i32 %125, %5
  %127 = select i1 %126, i32 %125, i32 %5
  %128 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %123, i64 0, i32 2
  %129 = sext i32 %127 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %122, i8* align 1 %128, i64 %129, i1 false)
  %130 = getelementptr inbounds i8, i8* %122, i64 %129
  store i8 0, i8* %130, align 1
  %131 = bitcast %class.SkString* %0 to i64*
  %132 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  store i64 %120, i64* %131, align 8
  %133 = icmp eq %"struct.SkString::Rec"* %132, null
  %134 = icmp eq %"struct.SkString::Rec"* %132, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %135 = or i1 %133, %134
  br i1 %135, label %142, label %136

136:                                              ; preds = %119
  %137 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %132, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = atomicrmw add i32* %137, i32 -1 acq_rel
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %142

140:                                              ; preds = %136
  %141 = bitcast %"struct.SkString::Rec"* %132 to i8*
  tail call void @_ZdlPv(i8* %141) #12
  br label %142

142:                                              ; preds = %140, %136, %119, %17, %13, %9, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString3setEPKc(%class.SkString* nocapture, i8* readonly) local_unnamed_addr #5 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* nonnull %1) #16
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi i64 [ %5, %4 ], [ 0, %2 ]
  tail call void @_ZN8SkString3setEPKcm(%class.SkString* %0, i8* %1, i64 %7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString3setEPKcm(%class.SkString* nocapture, i8* readonly, i64) local_unnamed_addr #5 align 2 {
  %4 = icmp ult i64 %2, 4294967295
  %5 = select i1 %4, i64 %2, i64 4294967295
  %6 = trunc i64 %5 to i32
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  %9 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %8, align 8
  br i1 %7, label %10, label %20

10:                                               ; preds = %3
  store %"struct.SkString::Rec"* bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %8, align 8
  %11 = icmp eq %"struct.SkString::Rec"* %9, null
  %12 = icmp eq %"struct.SkString::Rec"* %9, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %13 = or i1 %11, %12
  br i1 %13, label %106, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 -1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %106

18:                                               ; preds = %14
  %19 = bitcast %"struct.SkString::Rec"* %9 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %106

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 acquire, align 4
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %78

24:                                               ; preds = %20
  %25 = lshr i64 %5, 2
  %26 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %8, align 8
  %27 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = lshr i32 %28, 2
  %30 = zext i32 %29 to i64
  %31 = icmp ugt i64 %25, %30
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = icmp eq i32 %28, 0
  br i1 %33, label %69, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %26, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 acquire, align 4
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %69, label %38

38:                                               ; preds = %34
  %39 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %8, align 8
  %40 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %39, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = icmp eq i32 %41, 0
  br i1 %43, label %56, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %39, i64 0, i32 2
  %46 = add nuw nsw i64 %42, 12
  %47 = and i64 %46, 8589934588
  %48 = tail call i8* @_Znwm(i64 %47) #12, !noalias !31
  %49 = bitcast i8* %48 to i32*
  store i32 %41, i32* %49, align 4, !noalias !31
  %50 = getelementptr inbounds i8, i8* %48, i64 4
  %51 = bitcast i8* %50 to i32*
  store i32 1, i32* %51, align 4, !noalias !31
  %52 = getelementptr inbounds i8, i8* %48, i64 8
  store i8 0, i8* %52, align 4, !noalias !31
  %53 = ptrtoint i8* %48 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* nonnull align 1 %45, i64 %42, i1 false) #12, !noalias !31
  %54 = getelementptr inbounds i8, i8* %52, i64 %42
  store i8 0, i8* %54, align 1, !noalias !31
  %55 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %8, align 8
  br label %56

56:                                               ; preds = %44, %38
  %57 = phi %"struct.SkString::Rec"* [ %55, %44 ], [ %39, %38 ]
  %58 = phi i64 [ %53, %44 ], [ ptrtoint ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to i64), %38 ]
  %59 = bitcast %class.SkString* %0 to i64*
  store i64 %58, i64* %59, align 8
  %60 = icmp eq %"struct.SkString::Rec"* %57, null
  %61 = icmp eq %"struct.SkString::Rec"* %57, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %62 = or i1 %60, %61
  br i1 %62, label %69, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %57, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  %68 = bitcast %"struct.SkString::Rec"* %57 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %32, %34, %56, %63, %67
  %70 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %8, align 8
  %71 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %70, i64 0, i32 2
  %72 = icmp eq i8* %1, null
  br i1 %72, label %74, label %73

73:                                               ; preds = %69
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %71, i8* nonnull align 1 %1, i64 %5, i1 false)
  br label %74

74:                                               ; preds = %69, %73
  %75 = getelementptr inbounds i8, i8* %71, i64 %5
  store i8 0, i8* %75, align 1
  %76 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %8, align 8
  %77 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %76, i64 0, i32 0
  store i32 %6, i32* %77, align 4
  br label %106

78:                                               ; preds = %24, %20
  %79 = icmp eq i64 %5, 0
  br i1 %79, label %93, label %80

80:                                               ; preds = %78
  %81 = add nuw nsw i64 %5, 12
  %82 = and i64 %81, 8589934588
  %83 = tail call i8* @_Znwm(i64 %82) #12, !noalias !34
  %84 = bitcast i8* %83 to i32*
  store i32 %6, i32* %84, align 4, !noalias !34
  %85 = getelementptr inbounds i8, i8* %83, i64 4
  %86 = bitcast i8* %85 to i32*
  store i32 1, i32* %86, align 4, !noalias !34
  %87 = getelementptr inbounds i8, i8* %83, i64 8
  store i8 0, i8* %87, align 4, !noalias !34
  %88 = ptrtoint i8* %83 to i64
  %89 = icmp eq i8* %1, null
  br i1 %89, label %91, label %90

90:                                               ; preds = %80
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* nonnull align 1 %1, i64 %5, i1 false) #12, !noalias !34
  br label %91

91:                                               ; preds = %90, %80
  %92 = getelementptr inbounds i8, i8* %87, i64 %5
  store i8 0, i8* %92, align 1, !noalias !34
  br label %93

93:                                               ; preds = %91, %78
  %94 = phi i64 [ %88, %91 ], [ ptrtoint ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to i64), %78 ]
  %95 = bitcast %class.SkString* %0 to i64*
  %96 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %8, align 8
  store i64 %94, i64* %95, align 8
  %97 = icmp eq %"struct.SkString::Rec"* %96, null
  %98 = icmp eq %"struct.SkString::Rec"* %96, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %99 = or i1 %97, %98
  br i1 %99, label %106, label %100

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %96, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 -1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = bitcast %"struct.SkString::Rec"* %96 to i8*
  tail call void @_ZdlPv(i8* %105) #12
  br label %106

106:                                              ; preds = %104, %100, %93, %18, %14, %10, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString6insertEmPKc(%class.SkString* nocapture, i64, i8* readonly) local_unnamed_addr #5 align 2 {
  %4 = icmp eq i8* %2, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = tail call i64 @strlen(i8* nonnull %2) #16
  br label %7

7:                                                ; preds = %3, %5
  %8 = phi i64 [ %6, %5 ], [ 0, %3 ]
  tail call void @_ZN8SkString6insertEmPKcm(%class.SkString* %0, i64 %1, i8* %2, i64 %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString6insertEmPKcm(%class.SkString* nocapture, i64, i8* nocapture readonly, i64) local_unnamed_addr #5 align 2 {
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %171, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  %8 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  %9 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = icmp ult i64 %11, %1
  %13 = select i1 %12, i64 %11, i64 %1
  %14 = add i64 %11, %3
  %15 = icmp ugt i64 %14, 4294967295
  %16 = xor i64 %11, 4294967295
  %17 = select i1 %15, i64 %16, i64 %3
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %171, label %19

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 acquire, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %81

23:                                               ; preds = %19
  %24 = add i64 %17, %11
  %25 = xor i64 %24, %11
  %26 = icmp ult i64 %25, 4
  br i1 %26, label %27, label %81

27:                                               ; preds = %23
  %28 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  %29 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %67, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %28, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 acquire, align 4
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %67, label %36

36:                                               ; preds = %32
  %37 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  %38 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = icmp eq i32 %39, 0
  br i1 %41, label %54, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %37, i64 0, i32 2
  %44 = add nuw nsw i64 %40, 12
  %45 = and i64 %44, 8589934588
  %46 = tail call i8* @_Znwm(i64 %45) #12, !noalias !37
  %47 = bitcast i8* %46 to i32*
  store i32 %39, i32* %47, align 4, !noalias !37
  %48 = getelementptr inbounds i8, i8* %46, i64 4
  %49 = bitcast i8* %48 to i32*
  store i32 1, i32* %49, align 4, !noalias !37
  %50 = getelementptr inbounds i8, i8* %46, i64 8
  store i8 0, i8* %50, align 4, !noalias !37
  %51 = ptrtoint i8* %46 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* nonnull align 1 %43, i64 %40, i1 false) #12, !noalias !37
  %52 = getelementptr inbounds i8, i8* %50, i64 %40
  store i8 0, i8* %52, align 1, !noalias !37
  %53 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  br label %54

54:                                               ; preds = %42, %36
  %55 = phi %"struct.SkString::Rec"* [ %53, %42 ], [ %37, %36 ]
  %56 = phi i64 [ %51, %42 ], [ ptrtoint ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to i64), %36 ]
  %57 = bitcast %class.SkString* %0 to i64*
  store i64 %56, i64* %57, align 8
  %58 = icmp eq %"struct.SkString::Rec"* %55, null
  %59 = icmp eq %"struct.SkString::Rec"* %55, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %60 = or i1 %58, %59
  br i1 %60, label %67, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %55, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 -1 acq_rel
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = bitcast %"struct.SkString::Rec"* %55 to i8*
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %27, %32, %54, %61, %65
  %68 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  %69 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %68, i64 0, i32 2
  %70 = icmp ugt i64 %11, %1
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds i8, i8* %69, i64 %13
  %73 = getelementptr inbounds i8, i8* %72, i64 %17
  %74 = sub nsw i64 %11, %13
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %73, i8* align 1 %72, i64 %74, i1 false)
  br label %75

75:                                               ; preds = %71, %67
  %76 = getelementptr inbounds i8, i8* %69, i64 %13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %76, i8* align 1 %2, i64 %17, i1 false)
  %77 = getelementptr inbounds i8, i8* %69, i64 %24
  store i8 0, i8* %77, align 1
  %78 = trunc i64 %24 to i32
  %79 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  %80 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %79, i64 0, i32 0
  store i32 %78, i32* %80, align 4
  br label %171

81:                                               ; preds = %23, %19
  %82 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  %83 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %82, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = add i64 %17, %85
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %105, label %88

88:                                               ; preds = %81
  %89 = icmp ult i64 %86, 4294967296
  %90 = add i64 %86, 9
  %91 = add i64 %86, 12
  %92 = icmp uge i64 %91, %90
  %93 = and i1 %89, %92
  br i1 %93, label %95, label %94

94:                                               ; preds = %88
  tail call fastcc void @"_ZZN8SkString3Rec4MakeEPKcmENK3$_0clEv"() #12, !noalias !40
  unreachable

95:                                               ; preds = %88
  %96 = and i64 %91, -4
  %97 = trunc i64 %86 to i32
  %98 = tail call i8* @_Znwm(i64 %96) #12, !noalias !40
  %99 = bitcast i8* %98 to i32*
  store i32 %97, i32* %99, align 4, !noalias !40
  %100 = getelementptr inbounds i8, i8* %98, i64 4
  %101 = bitcast i8* %100 to i32*
  store i32 1, i32* %101, align 4, !noalias !40
  %102 = getelementptr inbounds i8, i8* %98, i64 8
  store i8 0, i8* %102, align 4, !noalias !40
  %103 = ptrtoint i8* %98 to i64
  %104 = getelementptr inbounds i8, i8* %102, i64 %86
  store i8 0, i8* %104, align 1, !noalias !40
  br label %105

105:                                              ; preds = %95, %81
  %106 = phi i64 [ %103, %95 ], [ ptrtoint ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to i64), %81 ]
  %107 = inttoptr i64 %106 to %"struct.SkString::Rec"*
  %108 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %107, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %138, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %107, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 acquire, align 4
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %138, label %115

115:                                              ; preds = %111
  %116 = load i32, i32* %108, align 4
  %117 = zext i32 %116 to i64
  %118 = icmp eq i32 %116, 0
  br i1 %118, label %130, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %107, i64 0, i32 2
  %121 = add nuw nsw i64 %117, 12
  %122 = and i64 %121, 8589934588
  %123 = tail call i8* @_Znwm(i64 %122) #12, !noalias !43
  %124 = bitcast i8* %123 to i32*
  store i32 %116, i32* %124, align 4, !noalias !43
  %125 = getelementptr inbounds i8, i8* %123, i64 4
  %126 = bitcast i8* %125 to i32*
  store i32 1, i32* %126, align 4, !noalias !43
  %127 = getelementptr inbounds i8, i8* %123, i64 8
  store i8 0, i8* %127, align 4, !noalias !43
  %128 = ptrtoint i8* %123 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %127, i8* nonnull align 1 %120, i64 %117, i1 false) #12, !noalias !43
  %129 = getelementptr inbounds i8, i8* %127, i64 %117
  store i8 0, i8* %129, align 1, !noalias !43
  br label %130

130:                                              ; preds = %119, %115
  %131 = phi i64 [ %128, %119 ], [ ptrtoint ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to i64), %115 ]
  %132 = icmp eq %"struct.SkString::Rec"* %107, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  br i1 %132, label %138, label %133

133:                                              ; preds = %130
  %134 = atomicrmw add i32* %112, i32 -1 acq_rel
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %136, label %138

136:                                              ; preds = %133
  %137 = inttoptr i64 %106 to i8*
  tail call void @_ZdlPv(i8* %137) #12
  br label %138

138:                                              ; preds = %105, %111, %130, %133, %136
  %139 = phi i64 [ %106, %105 ], [ %106, %111 ], [ %131, %130 ], [ %131, %136 ], [ %131, %133 ]
  %140 = inttoptr i64 %139 to %"struct.SkString::Rec"*
  %141 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %140, i64 0, i32 2
  %142 = icmp eq i64 %13, 0
  br i1 %142, label %146, label %143

143:                                              ; preds = %138
  %144 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  %145 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %144, i64 0, i32 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %141, i8* align 1 %145, i64 %13, i1 false)
  br label %146

146:                                              ; preds = %138, %143
  %147 = getelementptr inbounds i8, i8* %141, i64 %13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %147, i8* align 1 %2, i64 %17, i1 false)
  %148 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  %149 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %148, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = zext i32 %150 to i64
  %152 = icmp ult i64 %13, %151
  br i1 %152, label %153, label %159

153:                                              ; preds = %146
  %154 = getelementptr inbounds i8, i8* %147, i64 %17
  %155 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %148, i64 0, i32 2
  %156 = getelementptr inbounds i8, i8* %155, i64 %13
  %157 = sub nsw i64 %151, %13
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %154, i8* align 1 %156, i64 %157, i1 false)
  %158 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  br label %159

159:                                              ; preds = %153, %146
  %160 = phi %"struct.SkString::Rec"* [ %158, %153 ], [ %148, %146 ]
  %161 = bitcast %class.SkString* %0 to i64*
  store i64 %139, i64* %161, align 8
  %162 = icmp eq %"struct.SkString::Rec"* %160, null
  %163 = icmp eq %"struct.SkString::Rec"* %160, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %164 = or i1 %162, %163
  br i1 %164, label %171, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %160, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = atomicrmw add i32* %166, i32 -1 acq_rel
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %169, label %171

169:                                              ; preds = %165
  %170 = bitcast %"struct.SkString::Rec"* %160 to i8*
  tail call void @_ZdlPv(i8* %170) #12
  br label %171

171:                                              ; preds = %169, %165, %159, %75, %6, %4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString13insertUnicharEmi(%class.SkString* nocapture, i64, i32) local_unnamed_addr #5 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #12
  store i32 -1431655766, i32* %4, align 4
  %6 = call i64 @_ZN5SkUTF6ToUTF8EiPc(i32 %2, i8* nonnull %5) #12
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  call void @_ZN8SkString6insertEmPKcm(%class.SkString* %0, i64 %1, i8* nonnull %5, i64 %6)
  br label %9

9:                                                ; preds = %3, %8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #12
  ret void
}

declare i64 @_ZN5SkUTF6ToUTF8EiPc(i32, i8*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString9insertS32Emi(%class.SkString* nocapture, i64, i32) local_unnamed_addr #5 align 2 {
  %4 = alloca [10 x i8], align 1
  %5 = alloca [11 x i8], align 1
  %6 = getelementptr inbounds [11 x i8], [11 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 11, i8* nonnull %6) #12
  %7 = icmp slt i32 %2, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %6, i8 -86, i64 11, i1 false)
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = getelementptr inbounds [11 x i8], [11 x i8]* %5, i64 0, i64 1
  store i8 45, i8* %6, align 1
  %10 = sub i32 0, %2
  br label %11

11:                                               ; preds = %8, %3
  %12 = phi i8* [ %9, %8 ], [ %6, %3 ]
  %13 = phi i32 [ %10, %8 ], [ %2, %3 ]
  %14 = getelementptr inbounds [10 x i8], [10 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %14) #12
  %15 = getelementptr inbounds [10 x i8], [10 x i8]* %4, i64 0, i64 10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -86, i64 10, i1 false) #12
  br label %16

16:                                               ; preds = %16, %11
  %17 = phi i32 [ %13, %11 ], [ %24, %16 ]
  %18 = phi i64 [ 0, %11 ], [ %22, %16 ]
  %19 = urem i32 %17, 10
  %20 = trunc i32 %19 to i8
  %21 = or i8 %20, 48
  %22 = add nsw i64 %18, -1
  %23 = getelementptr inbounds i8, i8* %15, i64 %22
  store i8 %21, i8* %23, align 1
  %24 = udiv i32 %17, 10
  %25 = icmp ugt i32 %17, 9
  br i1 %25, label %16, label %26

26:                                               ; preds = %16
  %27 = icmp slt i64 %18, 1
  br i1 %27, label %28, label %32

28:                                               ; preds = %26
  %29 = getelementptr [10 x i8], [10 x i8]* %4, i64 1, i64 %22
  %30 = sub i64 1, %18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %29, i64 %30, i1 false) #12
  %31 = getelementptr i8, i8* %12, i64 %30
  br label %32

32:                                               ; preds = %26, %28
  %33 = phi i8* [ %12, %26 ], [ %31, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %14) #12
  %34 = ptrtoint i8* %33 to i64
  %35 = ptrtoint [11 x i8]* %5 to i64
  %36 = sub i64 %34, %35
  call void @_ZN8SkString6insertEmPKcm(%class.SkString* %0, i64 %1, i8* nonnull %6, i64 %36)
  call void @llvm.lifetime.end.p0i8(i64 11, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString9insertS64Emli(%class.SkString* nocapture, i64, i64, i32) local_unnamed_addr #5 align 2 {
  %5 = alloca [20 x i8], align 16
  %6 = alloca [21 x i8], align 16
  %7 = getelementptr inbounds [21 x i8], [21 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 21, i8* nonnull %7) #12
  %8 = icmp slt i64 %2, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 21, i1 false)
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds [21 x i8], [21 x i8]* %6, i64 0, i64 1
  store i8 45, i8* %7, align 16
  %11 = sub i64 0, %2
  br label %12

12:                                               ; preds = %9, %4
  %13 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %14 = phi i64 [ %11, %9 ], [ %2, %4 ]
  %15 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %15) #12
  %16 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -86, i64 20, i1 false) #12
  br label %17

17:                                               ; preds = %17, %12
  %18 = phi i64 [ %14, %12 ], [ %25, %17 ]
  %19 = phi i32 [ %3, %12 ], [ %26, %17 ]
  %20 = phi i8* [ %16, %12 ], [ %24, %17 ]
  %21 = urem i64 %18, 10
  %22 = trunc i64 %21 to i8
  %23 = or i8 %22, 48
  %24 = getelementptr inbounds i8, i8* %20, i64 -1
  store i8 %23, i8* %24, align 1
  %25 = udiv i64 %18, 10
  %26 = add nsw i32 %19, -1
  %27 = icmp ugt i64 %18, 9
  br i1 %27, label %17, label %28

28:                                               ; preds = %17
  %29 = icmp sgt i32 %26, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %28
  %31 = add nsw i32 %19, -2
  %32 = zext i32 %31 to i64
  %33 = xor i64 %32, -1
  %34 = getelementptr i8, i8* %24, i64 %33
  %35 = zext i32 %26 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %34, i8 48, i64 %35, i1 false) #12
  br label %36

36:                                               ; preds = %28, %30
  %37 = phi i8* [ %24, %28 ], [ %34, %30 ]
  %38 = ptrtoint i8* %16 to i64
  %39 = ptrtoint i8* %37 to i64
  %40 = sub i64 %38, %39
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %37, i64 %40, i1 false) #12
  %41 = getelementptr inbounds i8, i8* %13, i64 %40
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %15) #12
  %42 = ptrtoint i8* %41 to i64
  %43 = ptrtoint [21 x i8]* %6 to i64
  %44 = sub i64 %42, %43
  call void @_ZN8SkString6insertEmPKcm(%class.SkString* %0, i64 %1, i8* nonnull %7, i64 %44)
  call void @llvm.lifetime.end.p0i8(i64 21, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString9insertU32Emj(%class.SkString* nocapture, i64, i32) local_unnamed_addr #5 align 2 {
  %4 = alloca [10 x i8], align 1
  %5 = alloca [10 x i8], align 1
  %6 = getelementptr inbounds [10 x i8], [10 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %6) #12
  %7 = getelementptr inbounds [10 x i8], [10 x i8]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %6, i8 -86, i64 10, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %7) #12
  %8 = getelementptr inbounds [10 x i8], [10 x i8]* %4, i64 0, i64 10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %7, i8 -86, i64 10, i1 false) #12
  br label %9

9:                                                ; preds = %9, %3
  %10 = phi i32 [ %2, %3 ], [ %17, %9 ]
  %11 = phi i64 [ 0, %3 ], [ %15, %9 ]
  %12 = urem i32 %10, 10
  %13 = trunc i32 %12 to i8
  %14 = or i8 %13, 48
  %15 = add nsw i64 %11, -1
  %16 = getelementptr inbounds i8, i8* %8, i64 %15
  store i8 %14, i8* %16, align 1
  %17 = udiv i32 %10, 10
  %18 = icmp ugt i32 %10, 9
  br i1 %18, label %9, label %19

19:                                               ; preds = %9
  %20 = icmp slt i64 %11, 1
  br i1 %20, label %21, label %26

21:                                               ; preds = %19
  %22 = getelementptr [10 x i8], [10 x i8]* %4, i64 1, i64 %15
  %23 = sub i64 1, %11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %6, i8* align 1 %22, i64 %23, i1 false) #12
  %24 = sub i64 1, %11
  %25 = getelementptr [10 x i8], [10 x i8]* %5, i64 0, i64 %24
  br label %26

26:                                               ; preds = %21, %19
  %27 = phi i8* [ %6, %19 ], [ %25, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %7) #12
  %28 = ptrtoint i8* %27 to i64
  %29 = ptrtoint [10 x i8]* %5 to i64
  %30 = sub i64 %28, %29
  call void @_ZN8SkString6insertEmPKcm(%class.SkString* %0, i64 %1, i8* nonnull %6, i64 %30)
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString9insertU64Emmi(%class.SkString* nocapture, i64, i64, i32) local_unnamed_addr #5 align 2 {
  %5 = alloca [20 x i8], align 16
  %6 = alloca [20 x i8], align 16
  %7 = getelementptr inbounds [20 x i8], [20 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #12
  %8 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 20, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %8) #12
  %9 = getelementptr inbounds [20 x i8], [20 x i8]* %5, i64 0, i64 20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 20, i1 false) #12
  br label %10

10:                                               ; preds = %10, %4
  %11 = phi i64 [ %2, %4 ], [ %18, %10 ]
  %12 = phi i32 [ %3, %4 ], [ %19, %10 ]
  %13 = phi i8* [ %9, %4 ], [ %17, %10 ]
  %14 = urem i64 %11, 10
  %15 = trunc i64 %14 to i8
  %16 = or i8 %15, 48
  %17 = getelementptr inbounds i8, i8* %13, i64 -1
  store i8 %16, i8* %17, align 1
  %18 = udiv i64 %11, 10
  %19 = add nsw i32 %12, -1
  %20 = icmp ugt i64 %11, 9
  br i1 %20, label %10, label %21

21:                                               ; preds = %10
  %22 = icmp sgt i32 %19, 0
  br i1 %22, label %23, label %33

23:                                               ; preds = %21
  %24 = add nsw i32 %12, -2
  %25 = zext i32 %24 to i64
  %26 = xor i64 %25, -1
  %27 = getelementptr i8, i8* %17, i64 %26
  %28 = zext i32 %19 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %27, i8 48, i64 %28, i1 false) #12
  %29 = add nsw i32 %12, -2
  %30 = zext i32 %29 to i64
  %31 = xor i64 %30, -1
  %32 = getelementptr i8, i8* %17, i64 %31
  br label %33

33:                                               ; preds = %23, %21
  %34 = phi i8* [ %17, %21 ], [ %32, %23 ]
  %35 = ptrtoint i8* %9 to i64
  %36 = ptrtoint i8* %34 to i64
  %37 = sub i64 %35, %36
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %7, i8* align 1 %34, i64 %37, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %8) #12
  call void @_ZN8SkString6insertEmPKcm(%class.SkString* %0, i64 %1, i8* nonnull %7, i64 %37)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString9insertHexEmji(%class.SkString* nocapture, i64, i32, i32) local_unnamed_addr #5 align 2 {
  %5 = alloca i64, align 8
  %6 = icmp slt i32 %3, 8
  %7 = select i1 %6, i32 %3, i32 8
  %8 = icmp sgt i32 %7, 0
  %9 = select i1 %8, i32 %7, i32 0
  %10 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = getelementptr inbounds i64, i64* %5, i64 1
  %12 = bitcast i64* %11 to i8*
  store i64 -6148914691236517206, i64* %5, align 8
  br label %13

13:                                               ; preds = %13, %4
  %14 = phi i32 [ %9, %4 ], [ %23, %13 ]
  %15 = phi i32 [ %2, %4 ], [ %22, %13 ]
  %16 = phi i8* [ %12, %4 ], [ %21, %13 ]
  %17 = and i32 %15, 15
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* @_ZN19SkHexadecimalDigits6gUpperE, i64 0, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = getelementptr inbounds i8, i8* %16, i64 -1
  store i8 %20, i8* %21, align 1
  %22 = lshr i32 %15, 4
  %23 = add nsw i32 %14, -1
  %24 = icmp eq i32 %22, 0
  br i1 %24, label %25, label %13

25:                                               ; preds = %13
  %26 = icmp sgt i32 %23, 0
  br i1 %26, label %27, label %55

27:                                               ; preds = %25
  %28 = add nsw i32 %14, -2
  %29 = zext i32 %28 to i64
  %30 = xor i64 %29, -1
  %31 = getelementptr i8, i8* %21, i64 %30
  %32 = zext i32 %23 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %31, i8 48, i64 %32, i1 false)
  %33 = add nsw i32 %14, -2
  %34 = and i32 %23, 7
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %27, %36
  %37 = phi i8* [ %41, %36 ], [ %21, %27 ]
  %38 = phi i32 [ %40, %36 ], [ %23, %27 ]
  %39 = phi i32 [ %42, %36 ], [ %34, %27 ]
  %40 = add nsw i32 %38, -1
  %41 = getelementptr inbounds i8, i8* %37, i64 -1
  %42 = add i32 %39, -1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %36, !llvm.loop !46

44:                                               ; preds = %36, %27
  %45 = phi i8* [ %21, %27 ], [ %41, %36 ]
  %46 = phi i32 [ %23, %27 ], [ %40, %36 ]
  %47 = phi i8* [ undef, %27 ], [ %41, %36 ]
  %48 = icmp ult i32 %33, 7
  br i1 %48, label %55, label %49

49:                                               ; preds = %44, %49
  %50 = phi i8* [ %53, %49 ], [ %45, %44 ]
  %51 = phi i32 [ %52, %49 ], [ %46, %44 ]
  %52 = add nsw i32 %51, -8
  %53 = getelementptr inbounds i8, i8* %50, i64 -8
  %54 = icmp sgt i32 %52, 0
  br i1 %54, label %49, label %55

55:                                               ; preds = %44, %49, %25
  %56 = phi i8* [ %21, %25 ], [ %47, %44 ], [ %53, %49 ]
  %57 = ptrtoint i64* %11 to i64
  %58 = ptrtoint i8* %56 to i64
  %59 = sub i64 %57, %58
  call void @_ZN8SkString6insertEmPKcm(%class.SkString* %0, i64 %1, i8* %56, i64 %59)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString12insertScalarEmf(%class.SkString* nocapture, i64, float) local_unnamed_addr #5 align 2 {
  %4 = alloca [16 x i8], align 16
  %5 = alloca [15 x i8], align 4
  %6 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %6) #12
  %7 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 3
  %8 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 4
  %9 = fcmp uno float %2, 0.000000e+00
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 -86, i64 15, i1 false)
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = bitcast [15 x i8]* %5 to i32*
  store i32 7233902, i32* %11, align 4
  br label %27

12:                                               ; preds = %3
  %13 = bitcast float %2 to i32
  %14 = and i32 %13, 2139095040
  %15 = icmp eq i32 %14, 2139095040
  br i1 %15, label %16, label %21

16:                                               ; preds = %12
  %17 = fcmp ogt float %2, 0.000000e+00
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast [15 x i8]* %5 to i32*
  store i32 6712937, i32* %19, align 4
  br label %27

20:                                               ; preds = %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 5, i1 false) #12
  br label %27

21:                                               ; preds = %12
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #12
  %23 = fpext float %2 to double
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 -86, i64 16, i1 false) #12
  %24 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %22, i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZ17SkStrAppendScalarPcfE7gFormat, i64 0, i64 0), double %23) #12
  %25 = sext i32 %24 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* nonnull align 16 %22, i64 %25, i1 false) #12
  %26 = getelementptr inbounds [15 x i8], [15 x i8]* %5, i64 0, i64 %25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #12
  br label %27

27:                                               ; preds = %10, %18, %20, %21
  %28 = phi i8* [ %7, %10 ], [ %26, %21 ], [ %7, %18 ], [ %8, %20 ]
  %29 = ptrtoint i8* %28 to i64
  %30 = ptrtoint [15 x i8]* %5 to i64
  %31 = sub i64 %29, %30
  call void @_ZN8SkString6insertEmPKcm(%class.SkString* %0, i64 %1, i8* nonnull %6, i64 %31)
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString6printfEPKcz(%class.SkString* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #5 align 2 {
  %3 = alloca [1024 x i8], align 16
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0
  %7 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %5)
  %8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %8) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 1024, i1 false) #12
  %9 = call fastcc { i8*, i32 } @_ZL19apply_format_stringILi1024EE12StringBufferPKcP13__va_list_tagRAT__cP8SkString(i8* %1, %struct.__va_list_tag* nonnull %6, [1024 x i8]* nonnull dereferenceable(1024) %3, %class.SkString* %0) #12
  %10 = extractvalue { i8*, i32 } %9, 0
  %11 = icmp eq i8* %10, %8
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = extractvalue { i8*, i32 } %9, 1
  %14 = sext i32 %13 to i64
  call void @_ZN8SkString3setEPKcm(%class.SkString* %0, i8* nonnull %8, i64 %14) #12
  br label %15

15:                                               ; preds = %2, %12
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %8) #12
  call void @llvm.va_end(i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #12

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString11printVAListEPKcP13__va_list_tag(%class.SkString* nocapture, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #5 align 2 {
  %4 = alloca [1024 x i8], align 16
  %5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %5) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 1024, i1 false)
  %6 = call fastcc { i8*, i32 } @_ZL19apply_format_stringILi1024EE12StringBufferPKcP13__va_list_tagRAT__cP8SkString(i8* %1, %struct.__va_list_tag* %2, [1024 x i8]* nonnull dereferenceable(1024) %4, %class.SkString* %0)
  %7 = extractvalue { i8*, i32 } %6, 0
  %8 = icmp eq i8* %7, %5
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = extractvalue { i8*, i32 } %6, 1
  %11 = sext i32 %10 to i64
  call void @_ZN8SkString3setEPKcm(%class.SkString* %0, i8* nonnull %5, i64 %11)
  br label %12

12:                                               ; preds = %9, %3
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #12

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i8*, i32 } @_ZL19apply_format_stringILi1024EE12StringBufferPKcP13__va_list_tagRAT__cP8SkString(i8* nocapture readonly, %struct.__va_list_tag*, [1024 x i8]* dereferenceable(1024), %class.SkString* nocapture) unnamed_addr #5 {
  %5 = alloca [1 x %struct.__va_list_tag], align 16
  %6 = bitcast [1 x %struct.__va_list_tag]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0
  %8 = bitcast %struct.__va_list_tag* %1 to i8*
  %9 = bitcast [1 x %struct.__va_list_tag]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 24, i1 false)
  call void @llvm.va_copy(i8* nonnull %6, i8* %8)
  %10 = getelementptr inbounds [1024 x i8], [1024 x i8]* %2, i64 0, i64 0
  %11 = call i32 @vsnprintf(i8* %10, i64 1024, i8* %0, %struct.__va_list_tag* %1) #12
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %4
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i32 36, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6, i64 0, i64 0)) #12
  br label %64

14:                                               ; preds = %4
  %15 = icmp slt i32 %11, 1024
  br i1 %15, label %64, label %16

16:                                               ; preds = %14
  %17 = sext i32 %11 to i64
  call void @_ZN8SkString3setEPKcm(%class.SkString* %3, i8* null, i64 %17)
  %18 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  %19 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %18, align 8
  %20 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %58, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 acquire, align 4
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %58, label %27

27:                                               ; preds = %23
  %28 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %18, align 8
  %29 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = icmp eq i32 %30, 0
  br i1 %32, label %45, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %28, i64 0, i32 2
  %35 = add nuw nsw i64 %31, 12
  %36 = and i64 %35, 8589934588
  %37 = call i8* @_Znwm(i64 %36) #12, !noalias !47
  %38 = bitcast i8* %37 to i32*
  store i32 %30, i32* %38, align 4, !noalias !47
  %39 = getelementptr inbounds i8, i8* %37, i64 4
  %40 = bitcast i8* %39 to i32*
  store i32 1, i32* %40, align 4, !noalias !47
  %41 = getelementptr inbounds i8, i8* %37, i64 8
  store i8 0, i8* %41, align 4, !noalias !47
  %42 = ptrtoint i8* %37 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %41, i8* nonnull align 1 %34, i64 %31, i1 false) #12, !noalias !47
  %43 = getelementptr inbounds i8, i8* %41, i64 %31
  store i8 0, i8* %43, align 1, !noalias !47
  %44 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %18, align 8
  br label %45

45:                                               ; preds = %33, %27
  %46 = phi %"struct.SkString::Rec"* [ %44, %33 ], [ %28, %27 ]
  %47 = phi i64 [ %42, %33 ], [ ptrtoint ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to i64), %27 ]
  %48 = bitcast %class.SkString* %3 to i64*
  store i64 %47, i64* %48, align 8
  %49 = icmp eq %"struct.SkString::Rec"* %46, null
  %50 = icmp eq %"struct.SkString::Rec"* %46, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %51 = or i1 %49, %50
  br i1 %51, label %58, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %46, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 -1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  %57 = bitcast %"struct.SkString::Rec"* %46 to i8*
  call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %16, %23, %45, %52, %56
  %59 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %18, align 8
  %60 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %59, i64 0, i32 2
  %61 = add nuw nsw i32 %11, 1
  %62 = sext i32 %61 to i64
  %63 = call i32 @vsnprintf(i8* %60, i64 %62, i8* %0, %struct.__va_list_tag* nonnull %7) #12
  br label %64

64:                                               ; preds = %14, %58, %13
  %65 = phi i8* [ %10, %13 ], [ %60, %58 ], [ %10, %14 ]
  %66 = phi i32 [ 0, %13 ], [ %11, %58 ], [ %11, %14 ]
  call void @llvm.va_end(i8* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  %67 = insertvalue { i8*, i32 } undef, i8* %65, 0
  %68 = insertvalue { i8*, i32 } %67, i32 %66, 1
  ret { i8*, i32 } %68
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString7appendfEPKcz(%class.SkString* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #5 align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %0, i8* %1, %struct.__va_list_tag* nonnull %5)
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* nocapture, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #5 align 2 {
  %4 = alloca [1024 x i8], align 16
  %5 = alloca %class.SkString, align 8
  %6 = alloca [1024 x i8], align 16
  %7 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  %8 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  %9 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %21

12:                                               ; preds = %3
  %13 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %13) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 1024, i1 false) #12
  %14 = call fastcc { i8*, i32 } @_ZL19apply_format_stringILi1024EE12StringBufferPKcP13__va_list_tagRAT__cP8SkString(i8* %1, %struct.__va_list_tag* %2, [1024 x i8]* nonnull dereferenceable(1024) %4, %class.SkString* %0) #12
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = icmp eq i8* %15, %13
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = extractvalue { i8*, i32 } %14, 1
  %19 = sext i32 %18 to i64
  call void @_ZN8SkString3setEPKcm(%class.SkString* %0, i8* nonnull %13, i64 %19) #12
  br label %20

20:                                               ; preds = %12, %17
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %13) #12
  br label %40

21:                                               ; preds = %3
  %22 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  %23 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %23, align 8
  %24 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %24) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 -86, i64 1024, i1 false)
  %25 = call fastcc { i8*, i32 } @_ZL19apply_format_stringILi1024EE12StringBufferPKcP13__va_list_tagRAT__cP8SkString(i8* %1, %struct.__va_list_tag* %2, [1024 x i8]* nonnull dereferenceable(1024) %6, %class.SkString* nonnull %5)
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = sext i32 %27 to i64
  call void @_ZN8SkString6insertEmPKcm(%class.SkString* %0, i64 -1, i8* %26, i64 %28) #12
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %24) #12
  %29 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %23, align 8
  %30 = icmp eq %"struct.SkString::Rec"* %29, null
  %31 = icmp eq %"struct.SkString::Rec"* %29, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %32 = or i1 %30, %31
  br i1 %32, label %39, label %33

33:                                               ; preds = %21
  %34 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %29, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %39

37:                                               ; preds = %33
  %38 = bitcast %"struct.SkString::Rec"* %29 to i8*
  call void @_ZdlPv(i8* %38) #12
  br label %39

39:                                               ; preds = %21, %33, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  br label %40

40:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString8prependfEPKcz(%class.SkString* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #5 align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  call void @_ZN8SkString13prependVAListEPKcP13__va_list_tag(%class.SkString* %0, i8* %1, %struct.__va_list_tag* nonnull %5)
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString13prependVAListEPKcP13__va_list_tag(%class.SkString* nocapture, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #5 align 2 {
  %4 = alloca [1024 x i8], align 16
  %5 = alloca %class.SkString, align 8
  %6 = alloca [1024 x i8], align 16
  %7 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  %8 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  %9 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %21

12:                                               ; preds = %3
  %13 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %13) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 1024, i1 false) #12
  %14 = call fastcc { i8*, i32 } @_ZL19apply_format_stringILi1024EE12StringBufferPKcP13__va_list_tagRAT__cP8SkString(i8* %1, %struct.__va_list_tag* %2, [1024 x i8]* nonnull dereferenceable(1024) %4, %class.SkString* %0) #12
  %15 = extractvalue { i8*, i32 } %14, 0
  %16 = icmp eq i8* %15, %13
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = extractvalue { i8*, i32 } %14, 1
  %19 = sext i32 %18 to i64
  call void @_ZN8SkString3setEPKcm(%class.SkString* %0, i8* nonnull %13, i64 %19) #12
  br label %20

20:                                               ; preds = %12, %17
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %13) #12
  br label %40

21:                                               ; preds = %3
  %22 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  %23 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %23, align 8
  %24 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %24) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 -86, i64 1024, i1 false)
  %25 = call fastcc { i8*, i32 } @_ZL19apply_format_stringILi1024EE12StringBufferPKcP13__va_list_tagRAT__cP8SkString(i8* %1, %struct.__va_list_tag* %2, [1024 x i8]* nonnull dereferenceable(1024) %6, %class.SkString* nonnull %5)
  %26 = extractvalue { i8*, i32 } %25, 0
  %27 = extractvalue { i8*, i32 } %25, 1
  %28 = sext i32 %27 to i64
  call void @_ZN8SkString6insertEmPKcm(%class.SkString* %0, i64 0, i8* %26, i64 %28) #12
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %24) #12
  %29 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %23, align 8
  %30 = icmp eq %"struct.SkString::Rec"* %29, null
  %31 = icmp eq %"struct.SkString::Rec"* %29, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %32 = or i1 %30, %31
  br i1 %32, label %39, label %33

33:                                               ; preds = %21
  %34 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %29, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %39

37:                                               ; preds = %33
  %38 = bitcast %"struct.SkString::Rec"* %29 to i8*
  call void @_ZdlPv(i8* %38) #12
  br label %39

39:                                               ; preds = %21, %33, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  br label %40

40:                                               ; preds = %39, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkString6removeEmm(%class.SkString* nocapture, i64, i64) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  %5 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %4, align 8
  %6 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = icmp ugt i64 %8, %1
  br i1 %9, label %10, label %95

10:                                               ; preds = %3
  %11 = sub i64 %8, %1
  %12 = icmp ult i64 %11, %2
  %13 = select i1 %12, i64 %11, i64 %2
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %95, label %15

15:                                               ; preds = %10
  %16 = sub i64 %8, %13
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %35, label %18

18:                                               ; preds = %15
  %19 = icmp ult i64 %16, 4294967296
  %20 = add i64 %16, 9
  %21 = add i64 %16, 12
  %22 = icmp uge i64 %21, %20
  %23 = and i1 %19, %22
  br i1 %23, label %25, label %24

24:                                               ; preds = %18
  tail call fastcc void @"_ZZN8SkString3Rec4MakeEPKcmENK3$_0clEv"() #12, !noalias !50
  unreachable

25:                                               ; preds = %18
  %26 = and i64 %21, -4
  %27 = trunc i64 %16 to i32
  %28 = tail call i8* @_Znwm(i64 %26) #12, !noalias !50
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 4, !noalias !50
  %30 = getelementptr inbounds i8, i8* %28, i64 4
  %31 = bitcast i8* %30 to i32*
  store i32 1, i32* %31, align 4, !noalias !50
  %32 = getelementptr inbounds i8, i8* %28, i64 8
  store i8 0, i8* %32, align 4, !noalias !50
  %33 = ptrtoint i8* %28 to i64
  %34 = getelementptr inbounds i8, i8* %32, i64 %16
  store i8 0, i8* %34, align 1, !noalias !50
  br label %35

35:                                               ; preds = %25, %15
  %36 = phi i64 [ %33, %25 ], [ ptrtoint ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to i64), %15 ]
  %37 = inttoptr i64 %36 to %"struct.SkString::Rec"*
  %38 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %37, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %68, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %37, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 acquire, align 4
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %68, label %45

45:                                               ; preds = %41
  %46 = load i32, i32* %38, align 4
  %47 = zext i32 %46 to i64
  %48 = icmp eq i32 %46, 0
  br i1 %48, label %60, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %37, i64 0, i32 2
  %51 = add nuw nsw i64 %47, 12
  %52 = and i64 %51, 8589934588
  %53 = tail call i8* @_Znwm(i64 %52) #12, !noalias !53
  %54 = bitcast i8* %53 to i32*
  store i32 %46, i32* %54, align 4, !noalias !53
  %55 = getelementptr inbounds i8, i8* %53, i64 4
  %56 = bitcast i8* %55 to i32*
  store i32 1, i32* %56, align 4, !noalias !53
  %57 = getelementptr inbounds i8, i8* %53, i64 8
  store i8 0, i8* %57, align 4, !noalias !53
  %58 = ptrtoint i8* %53 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %57, i8* nonnull align 1 %50, i64 %47, i1 false) #12, !noalias !53
  %59 = getelementptr inbounds i8, i8* %57, i64 %47
  store i8 0, i8* %59, align 1, !noalias !53
  br label %60

60:                                               ; preds = %49, %45
  %61 = phi i64 [ %58, %49 ], [ ptrtoint ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to i64), %45 ]
  %62 = icmp eq %"struct.SkString::Rec"* %37, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  br i1 %62, label %68, label %63

63:                                               ; preds = %60
  %64 = atomicrmw add i32* %42, i32 -1 acq_rel
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  %67 = inttoptr i64 %36 to i8*
  tail call void @_ZdlPv(i8* %67) #12
  br label %68

68:                                               ; preds = %35, %41, %60, %63, %66
  %69 = phi i64 [ %36, %35 ], [ %36, %41 ], [ %61, %60 ], [ %61, %66 ], [ %61, %63 ]
  %70 = inttoptr i64 %69 to %"struct.SkString::Rec"*
  %71 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %70, i64 0, i32 2
  %72 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %4, align 8
  %73 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %72, i64 0, i32 2
  %74 = icmp eq i64 %1, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %68
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %71, i8* align 1 %73, i64 %1, i1 false)
  br label %76

76:                                               ; preds = %68, %75
  %77 = add i64 %13, %1
  %78 = sub i64 %8, %77
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds i8, i8* %71, i64 %1
  %82 = getelementptr inbounds i8, i8* %73, i64 %77
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* align 1 %82, i64 %78, i1 false)
  br label %83

83:                                               ; preds = %76, %80
  %84 = bitcast %class.SkString* %0 to i64*
  %85 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %4, align 8
  store i64 %69, i64* %84, align 8
  %86 = icmp eq %"struct.SkString::Rec"* %85, null
  %87 = icmp eq %"struct.SkString::Rec"* %85, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %88 = or i1 %86, %87
  br i1 %88, label %95, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %85, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 -1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = bitcast %"struct.SkString::Rec"* %85 to i8*
  tail call void @_ZdlPv(i8* %94) #12
  br label %95

95:                                               ; preds = %93, %89, %83, %10, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z14SkStringPrintfPKcz(%class.SkString* noalias nocapture sret, i8* nocapture readonly, ...) local_unnamed_addr #5 {
  %3 = alloca [1024 x i8], align 16
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = getelementptr inbounds %class.SkString, %class.SkString* %0, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %5, align 8
  %6 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0
  %8 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %6)
  %9 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 1024, i1 false) #12
  %10 = call fastcc { i8*, i32 } @_ZL19apply_format_stringILi1024EE12StringBufferPKcP13__va_list_tagRAT__cP8SkString(i8* %1, %struct.__va_list_tag* nonnull %7, [1024 x i8]* nonnull dereferenceable(1024) %3, %class.SkString* %0) #12
  %11 = extractvalue { i8*, i32 } %10, 0
  %12 = icmp eq i8* %11, %9
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = extractvalue { i8*, i32 } %10, 1
  %15 = sext i32 %14 to i64
  call void @_ZN8SkString3setEPKcm(%class.SkString* %0, i8* nonnull %9, i64 %15) #12
  br label %16

16:                                               ; preds = %2, %13
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %9) #12
  call void @llvm.va_end(i8* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z10SkStrSplitPKcS0_14SkStrSplitModeP8SkTArrayI8SkStringLb0EE(i8* readonly, i8* nocapture readonly, i32, %class.SkTArray*) local_unnamed_addr #5 {
  %5 = icmp eq i32 %2, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = tail call i64 @strspn(i8* %0, i8* %1) #16
  %8 = getelementptr inbounds i8, i8* %0, i64 %7
  br label %9

9:                                                ; preds = %6, %4
  %10 = phi i8* [ %8, %6 ], [ %0, %4 ]
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %44, label %13

13:                                               ; preds = %9
  %14 = icmp eq i32 %2, 0
  %15 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %3, i64 0, i32 0
  %16 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %3, i64 0, i32 1
  br label %17

17:                                               ; preds = %13, %41
  %18 = phi i8* [ %43, %41 ], [ %10, %13 ]
  %19 = tail call i64 @strcspn(i8* %18, i8* %1) #16
  %20 = icmp ne i64 %19, 0
  %21 = or i1 %14, %20
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  tail call void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %3, i32 1, i32 1) #12
  %23 = load %class.SkString*, %class.SkString** %15, align 8
  %24 = load i64, i64* %16, align 8
  %25 = lshr i64 %24, 1
  %26 = and i64 %25, 2147483647
  %27 = getelementptr inbounds %class.SkString, %class.SkString* %23, i64 %26
  %28 = add i64 %24, 2
  %29 = and i64 %28, 4294967294
  %30 = and i64 %24, -4294967295
  %31 = or i64 %29, %30
  store i64 %31, i64* %16, align 8
  %32 = getelementptr inbounds %class.SkString, %class.SkString* %27, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %32, align 8
  tail call void @_ZN8SkString3setEPKcm(%class.SkString* %27, i8* %18, i64 %19)
  %33 = getelementptr inbounds i8, i8* %18, i64 %19
  br label %34

34:                                               ; preds = %17, %22
  %35 = phi i8* [ %33, %22 ], [ %18, %17 ]
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %34
  br i1 %5, label %39, label %41

39:                                               ; preds = %38
  %40 = tail call i64 @strspn(i8* %35, i8* %1) #16
  br label %41

41:                                               ; preds = %38, %39
  %42 = phi i64 [ %40, %39 ], [ 1, %38 ]
  %43 = getelementptr inbounds i8, i8* %35, i64 %42
  br label %17

44:                                               ; preds = %34, %9
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i64 @strspn(i8* nocapture, i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i64 @strcspn(i8* nocapture, i8* nocapture) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #13

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #14

; Function Attrs: nounwind
declare void @llvm.va_copy(i8*, i8*) #12

; Function Attrs: nofree nounwind
declare i32 @vsnprintf(i8* nocapture, i64, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #6

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %106

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %106, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #12
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %94, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %88, %48
  %51 = phi i64 [ 0, %48 ], [ %89, %88 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.SkString*, %class.SkString** %49, align 8
  %55 = bitcast i8* %53 to %"struct.SkString::Rec"**
  %56 = getelementptr inbounds %class.SkString, %class.SkString* %54, i64 %51, i32 0, i32 0
  %57 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %56, align 8
  %58 = icmp eq %"struct.SkString::Rec"* %57, null
  %59 = icmp eq %"struct.SkString::Rec"* %57, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %60 = or i1 %58, %59
  br i1 %60, label %64, label %61

61:                                               ; preds = %50
  %62 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %57, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 1 monotonic
  br label %64

64:                                               ; preds = %61, %50
  store %"struct.SkString::Rec"* %57, %"struct.SkString::Rec"** %55, align 8
  %65 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %56, align 8
  store %"struct.SkString::Rec"* bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %56, align 8
  %66 = icmp eq %"struct.SkString::Rec"* %65, null
  %67 = icmp eq %"struct.SkString::Rec"* %65, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %68 = or i1 %66, %67
  br i1 %68, label %75, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %65, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw add i32* %70, i32 -1 acq_rel
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %75

73:                                               ; preds = %69
  %74 = bitcast %"struct.SkString::Rec"* %65 to i8*
  tail call void @_ZdlPv(i8* %74) #12
  br label %75

75:                                               ; preds = %73, %69, %64
  %76 = load %class.SkString*, %class.SkString** %49, align 8
  %77 = getelementptr inbounds %class.SkString, %class.SkString* %76, i64 %51, i32 0, i32 0
  %78 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %77, align 8
  %79 = icmp eq %"struct.SkString::Rec"* %78, null
  %80 = icmp eq %"struct.SkString::Rec"* %78, bitcast ({ i32, { { i32 } }, i8 }* @_ZN8SkString9gEmptyRecE to %"struct.SkString::Rec"*)
  %81 = or i1 %79, %80
  br i1 %81, label %88, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %78, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %88

86:                                               ; preds = %82
  %87 = bitcast %"struct.SkString::Rec"* %78 to i8*
  tail call void @_ZdlPv(i8* %87) #12
  br label %88

88:                                               ; preds = %86, %82, %75
  %89 = add nuw nsw i64 %51, 1
  %90 = load i64, i64* %4, align 8
  %91 = lshr i64 %90, 1
  %92 = and i64 %91, 2147483647
  %93 = icmp ult i64 %89, %92
  br i1 %93, label %50, label %94

94:                                               ; preds = %88, %35
  %95 = phi i64 [ %45, %35 ], [ %90, %88 ]
  %96 = and i64 %95, 1
  %97 = icmp eq i64 %96, 0
  %98 = bitcast %class.SkTArray* %0 to i8**
  br i1 %97, label %102, label %99

99:                                               ; preds = %94
  %100 = load i8*, i8** %98, align 8
  tail call void @_Z7sk_freePv(i8* %100) #12
  %101 = load i64, i64* %4, align 8
  br label %102

102:                                              ; preds = %94, %99
  %103 = phi i64 [ %101, %99 ], [ %95, %94 ]
  store i8* %44, i8** %98, align 8
  %104 = and i64 %103, -4294967298
  %105 = or i64 %104, 1
  store i64 %105, i64* %4, align 8
  br label %106

106:                                              ; preds = %102, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #11

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #11

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { nounwind readonly }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN8SkString3Rec4MakeEPKcm: argument 0"}
!6 = distinct !{!6, !"_ZN8SkString3Rec4MakeEPKcm"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN8SkString3Rec4MakeEPKcm: argument 0"}
!9 = distinct !{!9, !"_ZN8SkString3Rec4MakeEPKcm"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN8SkString3Rec4MakeEPKcm: argument 0"}
!12 = distinct !{!12, !"_ZN8SkString3Rec4MakeEPKcm"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN8SkString3Rec4MakeEPKcm: argument 0"}
!15 = distinct !{!15, !"_ZN8SkString3Rec4MakeEPKcm"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN8SkString3Rec4MakeEPKcm: argument 0"}
!18 = distinct !{!18, !"_ZN8SkString3Rec4MakeEPKcm"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN8SkString3Rec4MakeEPKcm: argument 0"}
!21 = distinct !{!21, !"_ZN8SkString3Rec4MakeEPKcm"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN8SkString3Rec4MakeEPKcm: argument 0"}
!24 = distinct !{!24, !"_ZN8SkString3Rec4MakeEPKcm"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN8SkString3Rec4MakeEPKcm: argument 0"}
!27 = distinct !{!27, !"_ZN8SkString3Rec4MakeEPKcm"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN8SkString3Rec4MakeEPKcm: argument 0"}
!30 = distinct !{!30, !"_ZN8SkString3Rec4MakeEPKcm"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN8SkString3Rec4MakeEPKcm: argument 0"}
!33 = distinct !{!33, !"_ZN8SkString3Rec4MakeEPKcm"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN8SkString3Rec4MakeEPKcm: argument 0"}
!36 = distinct !{!36, !"_ZN8SkString3Rec4MakeEPKcm"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN8SkString3Rec4MakeEPKcm: argument 0"}
!39 = distinct !{!39, !"_ZN8SkString3Rec4MakeEPKcm"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZN8SkString3Rec4MakeEPKcm: argument 0"}
!42 = distinct !{!42, !"_ZN8SkString3Rec4MakeEPKcm"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN8SkString3Rec4MakeEPKcm: argument 0"}
!45 = distinct !{!45, !"_ZN8SkString3Rec4MakeEPKcm"}
!46 = distinct !{!46, !3}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN8SkString3Rec4MakeEPKcm: argument 0"}
!49 = distinct !{!49, !"_ZN8SkString3Rec4MakeEPKcm"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN8SkString3Rec4MakeEPKcm: argument 0"}
!52 = distinct !{!52, !"_ZN8SkString3Rec4MakeEPKcm"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN8SkString3Rec4MakeEPKcm: argument 0"}
!55 = distinct !{!55, !"_ZN8SkString3Rec4MakeEPKcm"}
