; ModuleID = '../../third_party/blink/renderer/platform/graphics/path.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/path.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::PaintFlags" = type <{ %class.sk_sp.13, %class.sk_sp.14, %class.sk_sp.45, %class.sk_sp.46, %class.sk_sp.47, %class.sk_sp.48, i32, float, float, i32, %union.anon.55, [4 x i8] }>
%class.sk_sp.13 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.14 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.18, i32, %"class.absl::optional.25", %"class.std::__1::vector.30", %"class.std::__1::vector.37", %class.sk_sp.44, %class.sk_sp.15, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.15, %class.sk_sp.18, %"class.gfx::Rect", i32, %class.sk_sp.20, %class.sk_sp.24, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.15, %class.scoped_refptr }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.20 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.16, i32, i32 }
%class.sk_sp.16 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.17, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.21" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.24 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.sk_sp.18 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.absl::optional.25" = type { %"class.absl::optional_internal::optional_data.26" }
%"class.absl::optional_internal::optional_data.26" = type { %"class.absl::optional_internal::optional_data_base.27" }
%"class.absl::optional_internal::optional_data_base.27" = type { %"class.absl::optional_internal::optional_data_dtor_base.28" }
%"class.absl::optional_internal::optional_data_dtor_base.28" = type { i8, %union.anon.29 }
%union.anon.29 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { i32*, i32*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i32* }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { float*, float*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { float* }
%class.sk_sp.44 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.9", [7 x i8] }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%class.sk_sp.15 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.45 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.46 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.47 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.48 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.49, i32, %"class.absl::optional.50", i8, i32 }
%class.sk_sp.49 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.50" = type { %"class.absl::optional_internal::optional_data.51" }
%"class.absl::optional_internal::optional_data.51" = type { %"class.absl::optional_internal::optional_data_base.52" }
%"class.absl::optional_internal::optional_data_base.52" = type { %"class.absl::optional_internal::optional_data_dtor_base.53" }
%"class.absl::optional_internal::optional_data_dtor_base.53" = type { i8, %union.anon.54 }
%union.anon.54 = type { %struct.SkRect }
%union.anon.55 = type { i32 }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%"class.blink::Path::PositionCalculator" = type <{ %class.SkPath, %class.SkPathMeasure, float, [4 x i8] }>
%class.SkPathMeasure = type { %class.SkContourMeasureIter, %class.sk_sp.60 }
%class.SkContourMeasureIter = type { %"class.std::__1::unique_ptr.56" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.SkContourMeasureIter::Impl"* }
%"class.SkContourMeasureIter::Impl" = type opaque
%class.sk_sp.60 = type { %class.SkContourMeasure* }
%class.SkContourMeasure = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkTDArray.61, %class.SkTDArray, float, i8, [3 x i8] }>
%class.SkTDArray.61 = type { %"struct.SkContourMeasure::Segment"*, i32, i32 }
%"struct.SkContourMeasure::Segment" = type { float, i32, i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp.13 }
%"class.blink::AffineTransform" = type { [6 x double] }
%"struct.blink::PathElement" = type { i32, %"class.blink::FloatPoint"* }
%"class.SkPath::RawIter" = type <{ %"class.SkPath::RangeIter", %"class.SkPath::RangeIter", float, [4 x i8] }>
%"class.SkPath::RangeIter" = type { i8*, %struct.SkPoint*, float* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"struct.blink::PointAndTangent" = type { %"class.blink::FloatPoint", float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }

$_ZNK5blink16FloatRoundedRectcv7SkRRectEv = comdat any

@__const._ZNK5blink4Path10StrokePathERKNS_10StrokeDataEf.flags = private unnamed_addr constant %"class.cc::PaintFlags" <{ %class.sk_sp.13 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.14 { %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*) }, %class.sk_sp.45 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.46 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.47 { %class.SkDrawLooper* inttoptr (i64 -6148914691236517206 to %class.SkDrawLooper*) }, %class.sk_sp.48 { %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*) }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %union.anon.55 { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

@_ZN5blink4PathC1Ev = hidden unnamed_addr alias void (%"class.blink::Path"*), void (%"class.blink::Path"*)* @_ZN5blink4PathC2Ev
@_ZN5blink4PathC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::Path"*, %"class.blink::Path"*), void (%"class.blink::Path"*, %"class.blink::Path"*)* @_ZN5blink4PathC2ERKS0_
@_ZN5blink4PathC1ERK6SkPath = hidden unnamed_addr alias void (%"class.blink::Path"*, %class.SkPath*), void (%"class.blink::Path"*, %class.SkPath*)* @_ZN5blink4PathC2ERK6SkPath
@_ZN5blink4PathD1Ev = hidden unnamed_addr alias void (%"class.blink::Path"*), void (%"class.blink::Path"*)* @_ZN5blink4PathD2Ev
@_ZN5blink4Path18PositionCalculatorC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::Path::PositionCalculator"*, %"class.blink::Path"*), void (%"class.blink::Path::PositionCalculator"*, %"class.blink::Path"*)* @_ZN5blink4Path18PositionCalculatorC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4PathC2Ev(%"class.blink::Path"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %2) #11
  ret void
}

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4PathC2ERKS0_(%"class.blink::Path"*, %"class.blink::Path"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %1, i64 0, i32 0
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %3, %class.SkPath* dereferenceable(16) %4) #11
  ret void
}

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4PathC2ERK6SkPath(%"class.blink::Path"*, %class.SkPath* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %3, %class.SkPath* dereferenceable(16) %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4PathD2Ev(%"class.blink::Path"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %2) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blink::Path"* @_ZN5blink4PathaSERKS0_(%"class.blink::Path"* returned, %"class.blink::Path"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %5 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %4, %class.SkPath* dereferenceable(16) %3) #11
  ret %"class.blink::Path"* %0
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blink::Path"* @_ZN5blink4PathaSERK6SkPath(%"class.blink::Path"* returned, %class.SkPath* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %4 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* %3, %class.SkPath* dereferenceable(16) %1) #11
  ret %"class.blink::Path"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink4PatheqERKS0_(%"class.blink::Path"*, %"class.blink::Path"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZeqRK6SkPathS1_(%class.SkPath* dereferenceable(16) %3, %class.SkPath* dereferenceable(16) %4) #11
  ret i1 %5
}

declare zeroext i1 @_ZeqRK6SkPathS1_(%class.SkPath* dereferenceable(16), %class.SkPath* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink4Path8ContainsERKNS_10FloatPointE(%"class.blink::Path"*, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = tail call float @llvm.fabs.f32(float %4) #12
  %6 = fcmp ueq float %5, 0x7FF0000000000000
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = tail call float @llvm.fabs.f32(float %9) #12
  %11 = fcmp ueq float %10, 0x7FF0000000000000
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %14 = tail call zeroext i1 @_ZNK6SkPath8containsEff(%class.SkPath* %13, float %4, float %9) #11
  br label %15

15:                                               ; preds = %7, %2, %12
  %16 = phi i1 [ %14, %12 ], [ false, %7 ], [ false, %2 ]
  ret i1 %16
}

declare zeroext i1 @_ZNK6SkPath8containsEff(%class.SkPath*, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink4Path8ContainsERKNS_10FloatPointENS_8WindRuleE(%"class.blink::Path"*, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPath, align 8
  %5 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = tail call float @llvm.fabs.f32(float %6) #12
  %8 = fcmp ueq float %7, 0x7FF0000000000000
  br i1 %8, label %33, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = tail call float @llvm.fabs.f32(float %11) #12
  %13 = fcmp ueq float %12, 0x7FF0000000000000
  br i1 %13, label %33, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0, i32 4
  %17 = load i8, i8* %16, align 2
  %18 = and i8 %17, 3
  %19 = zext i8 %18 to i32
  %20 = icmp eq i32 %19, %2
  br i1 %20, label %31, label %21

21:                                               ; preds = %14
  %22 = bitcast %class.SkPath* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #11
  %23 = getelementptr inbounds %class.SkPath, %class.SkPath* %4, i64 0, i32 4
  %24 = bitcast %class.SkPath* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1ERKS_(%class.SkPath* nonnull %4, %class.SkPath* dereferenceable(16) %15) #11
  %25 = trunc i32 %2 to i8
  %26 = load i8, i8* %23, align 2
  %27 = and i8 %25, 3
  %28 = and i8 %26, -4
  %29 = or i8 %28, %27
  store i8 %29, i8* %23, align 2
  %30 = call zeroext i1 @_ZNK6SkPath8containsEff(%class.SkPath* nonnull %4, float %6, float %11) #11
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #11
  br label %33

31:                                               ; preds = %14
  %32 = tail call zeroext i1 @_ZNK6SkPath8containsEff(%class.SkPath* %15, float %6, float %11) #11
  br label %33

33:                                               ; preds = %9, %3, %21, %31
  %34 = phi i1 [ false, %9 ], [ false, %3 ], [ %30, %21 ], [ %32, %31 ]
  ret i1 %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink4Path10StrokePathERKNS_10StrokeDataERKNS_15AffineTransformE(%class.SkPath* noalias sret, %"class.blink::Path"*, %"class.blink::StrokeData"* dereferenceable(32), %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.cc::PaintFlags", align 8
  %6 = tail call double @_ZNK5blink15AffineTransform13XScaleSquaredEv(%"class.blink::AffineTransform"* %3) #11
  %7 = tail call double @_ZNK5blink15AffineTransform13YScaleSquaredEv(%"class.blink::AffineTransform"* %3) #11
  %8 = fcmp olt double %6, %7
  %9 = select i1 %8, double %7, double %6
  %10 = tail call double @sqrt(double %9) #11
  %11 = fcmp ult double %10, 0x47EFFFFFE0000000
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = fcmp ole double %10, 0xC7EFFFFFE0000000
  %14 = select i1 %13, double 0xC7EFFFFFE0000000, double %10
  %15 = fptrunc double %14 to float
  br label %16

16:                                               ; preds = %4, %12
  %17 = phi float [ %15, %12 ], [ 0x47EFFFFFE0000000, %4 ]
  %18 = bitcast %"class.cc::PaintFlags"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %18) #11, !noalias !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZNK5blink4Path10StrokePathERKNS_10StrokeDataEf.flags to i8*), i64 72, i1 false) #11, !noalias !2
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %5) #11, !noalias !2
  call void @_ZNK5blink10StrokeData10SetupPaintEPN2cc10PaintFlagsEii(%"class.blink::StrokeData"* %2, %"class.cc::PaintFlags"* nonnull %5, i32 0, i32 0) #11, !noalias !2
  %19 = bitcast %class.SkPath* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 -86, i64 16, i1 false) #11, !alias.scope !2
  call void @_ZN6SkPathC1Ev(%class.SkPath* %0) #11
  %20 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %1, i64 0, i32 0
  %21 = call zeroext i1 @_ZNK2cc10PaintFlags11getFillPathERK6SkPathPS1_PK6SkRectf(%"class.cc::PaintFlags"* nonnull %5, %class.SkPath* dereferenceable(16) %20, %class.SkPath* %0, %struct.SkRect* null, float %17) #11
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %18) #11, !noalias !2
  ret void
}

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #4

declare double @_ZNK5blink15AffineTransform13XScaleSquaredEv(%"class.blink::AffineTransform"*) local_unnamed_addr #1

declare double @_ZNK5blink15AffineTransform13YScaleSquaredEv(%"class.blink::AffineTransform"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink4Path10StrokePathERKNS_10StrokeDataEf(%class.SkPath* noalias sret, %"class.blink::Path"*, %"class.blink::StrokeData"* dereferenceable(32), float) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.cc::PaintFlags", align 8
  %6 = bitcast %"class.cc::PaintFlags"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %6) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZNK5blink4Path10StrokePathERKNS_10StrokeDataEf.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %5) #11
  call void @_ZNK5blink10StrokeData10SetupPaintEPN2cc10PaintFlagsEii(%"class.blink::StrokeData"* %2, %"class.cc::PaintFlags"* nonnull %5, i32 0, i32 0) #11
  %7 = bitcast %class.SkPath* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* %0) #11
  %8 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %1, i64 0, i32 0
  %9 = call zeroext i1 @_ZNK2cc10PaintFlags11getFillPathERK6SkPathPS1_PK6SkRectf(%"class.cc::PaintFlags"* nonnull %5, %class.SkPath* dereferenceable(16) %8, %class.SkPath* %0, %struct.SkRect* null, float %3) #11
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"*) unnamed_addr #1

declare void @_ZNK5blink10StrokeData10SetupPaintEPN2cc10PaintFlagsEii(%"class.blink::StrokeData"*, %"class.cc::PaintFlags"*, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK2cc10PaintFlags11getFillPathERK6SkPathPS1_PK6SkRectf(%"class.cc::PaintFlags"*, %class.SkPath* dereferenceable(16), %class.SkPath*, %struct.SkRect*, float) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink4Path14StrokeContainsERKNS_10FloatPointERKNS_10StrokeDataERKNS_15AffineTransformE(%"class.blink::Path"*, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), %"class.blink::StrokeData"* dereferenceable(32), %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPath, align 8
  %6 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = tail call float @llvm.fabs.f32(float %7) #12
  %9 = fcmp ueq float %8, 0x7FF0000000000000
  br i1 %9, label %20, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = tail call float @llvm.fabs.f32(float %12) #12
  %14 = fcmp ueq float %13, 0x7FF0000000000000
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = bitcast %class.SkPath* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #11
  call void @_ZNK5blink4Path10StrokePathERKNS_10StrokeDataERKNS_15AffineTransformE(%class.SkPath* nonnull sret %5, %"class.blink::Path"* %0, %"class.blink::StrokeData"* dereferenceable(32) %2, %"class.blink::AffineTransform"* dereferenceable(48) %3)
  %17 = load float, float* %6, align 4
  %18 = load float, float* %11, align 4
  %19 = call zeroext i1 @_ZNK6SkPath8containsEff(%class.SkPath* nonnull %5, float %17, float %18) #11
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  br label %20

20:                                               ; preds = %10, %4, %15
  %21 = phi i1 [ %19, %15 ], [ false, %10 ], [ false, %4 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink4Path17TightBoundingRectEv(%"class.blink::Path"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %3 = tail call { <2 x float>, <2 x float> } @_ZNK6SkPath18computeTightBoundsEv(%class.SkPath* %2) #11
  %4 = extractvalue { <2 x float>, <2 x float> } %3, 0
  %5 = extractvalue { <2 x float>, <2 x float> } %3, 1
  %6 = fsub <2 x float> %5, %4
  %7 = insertvalue { <2 x float>, <2 x float> } %3, <2 x float> %6, 1
  ret { <2 x float>, <2 x float> } %7
}

declare { <2 x float>, <2 x float> } @_ZNK6SkPath18computeTightBoundsEv(%class.SkPath*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink4Path12BoundingRectEv(%"class.blink::Path"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %4 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 9
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 1
  %9 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 3, i32 0
  %10 = load %struct.SkPoint*, %struct.SkPoint** %9, align 8
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 3, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %8, %struct.SkPoint* %10, i32 %12) #11
  %14 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 10
  %15 = zext i1 %13 to i8
  store i8 %15, i8* %14, align 1
  store i8 0, i8* %4, align 8
  br label %16

16:                                               ; preds = %1, %7
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 1, i32 0
  %18 = bitcast float* %17 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  %20 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 1, i32 2
  %21 = bitcast float* %20 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 4
  %23 = fsub <2 x float> %22, %19
  %24 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %19, 0
  %25 = insertvalue { <2 x float>, <2 x float> } %24, <2 x float> %23, 1
  ret { <2 x float>, <2 x float> } %25
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink4Path18StrokeBoundingRectERKNS_10StrokeDataE(%"class.blink::Path"*, %"class.blink::StrokeData"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::PaintFlags", align 8
  %4 = alloca %class.SkPath, align 8
  %5 = bitcast %class.SkPath* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = bitcast %"class.cc::PaintFlags"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %6) #11, !noalias !5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZNK5blink4Path10StrokePathERKNS_10StrokeDataEf.flags to i8*), i64 72, i1 false) #11, !noalias !5
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %3) #11, !noalias !5
  call void @_ZNK5blink10StrokeData10SetupPaintEPN2cc10PaintFlagsEii(%"class.blink::StrokeData"* %1, %"class.cc::PaintFlags"* nonnull %3, i32 0, i32 0) #11, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false) #11, !alias.scope !5
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %4) #11
  %7 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %8 = call zeroext i1 @_ZNK2cc10PaintFlags11getFillPathERK6SkPathPS1_PK6SkRectf(%"class.cc::PaintFlags"* nonnull %3, %class.SkPath* dereferenceable(16) %7, %class.SkPath* nonnull %4, %struct.SkRect* null, float 0x3FD3333340000000) #11
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #11, !noalias !5
  %9 = call { <2 x float>, <2 x float> } @_ZNK6SkPath18computeTightBoundsEv(%class.SkPath* nonnull %4) #11
  %10 = extractvalue { <2 x float>, <2 x float> } %9, 0
  %11 = extractvalue { <2 x float>, <2 x float> } %9, 1
  %12 = fsub <2 x float> %11, %10
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  %13 = insertvalue { <2 x float>, <2 x float> } %9, <2 x float> %12, 1
  ret { <2 x float>, <2 x float> } %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink4Path5ApplyEPvPFvS1_PKNS_11PathElementEE(%"class.blink::Path"*, i8*, void (i8*, %"struct.blink::PathElement"*)* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkPath::RawIter", align 8
  %5 = alloca [4 x %struct.SkPoint], align 16
  %6 = alloca %"struct.blink::PathElement", align 8
  %7 = alloca [3 x %"class.blink::FloatPoint"], align 16
  %8 = bitcast [3 x %"class.blink::FloatPoint"]* %7 to i8*
  %9 = alloca [5 x %struct.SkPoint], align 16
  %10 = bitcast %"class.SkPath::RawIter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %4, i64 0, i32 2
  %12 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %4, i64 0, i32 3, i64 0
  %13 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %14 = bitcast i8* %12 to i32*
  store i32 -1431655766, i32* %14, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 52, i1 false) #11
  call void @_ZN6SkPath7RawIter7setPathERKS_(%"class.SkPath::RawIter"* nonnull %4, %class.SkPath* dereferenceable(16) %13) #11
  %15 = bitcast [4 x %struct.SkPoint]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  %16 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 0, i32 1
  %17 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 1
  %18 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 2
  %19 = bitcast %"struct.blink::PathElement"* %6 to i8*
  %20 = bitcast [4 x %struct.SkPoint]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %21 = getelementptr inbounds [3 x %"class.blink::FloatPoint"], [3 x %"class.blink::FloatPoint"]* %7, i64 0, i64 0
  %22 = getelementptr inbounds [3 x %"class.blink::FloatPoint"], [3 x %"class.blink::FloatPoint"]* %7, i64 0, i64 0, i32 1
  %23 = getelementptr inbounds [3 x %"class.blink::FloatPoint"], [3 x %"class.blink::FloatPoint"]* %7, i64 0, i64 2, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 24, i1 false)
  %24 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 0
  %25 = getelementptr inbounds %"struct.blink::PathElement", %"struct.blink::PathElement"* %6, i64 0, i32 0
  %26 = getelementptr inbounds %"struct.blink::PathElement", %"struct.blink::PathElement"* %6, i64 0, i32 1
  %27 = bitcast [5 x %struct.SkPoint]* %9 to i8*
  %28 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %9, i64 0, i64 0
  %29 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %9, i64 0, i64 1
  %30 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %9, i64 0, i64 3
  %31 = getelementptr inbounds [3 x %"class.blink::FloatPoint"], [3 x %"class.blink::FloatPoint"]* %7, i64 0, i64 2
  %32 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 3, i32 0
  %33 = bitcast float* %32 to i32*
  %34 = bitcast %"class.blink::FloatPoint"* %31 to i32*
  %35 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 3, i32 1
  %36 = bitcast float* %35 to i32*
  %37 = bitcast float* %23 to i32*
  %38 = bitcast %struct.SkPoint* %17 to i32*
  %39 = bitcast [3 x %"class.blink::FloatPoint"]* %7 to i32*
  %40 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 1, i32 1
  %41 = bitcast float* %40 to i32*
  %42 = bitcast float* %22 to i32*
  %43 = bitcast [4 x %struct.SkPoint]* %5 to i32*
  %44 = bitcast [3 x %"class.blink::FloatPoint"]* %7 to i32*
  %45 = bitcast float* %16 to i32*
  %46 = bitcast float* %22 to i32*
  %47 = bitcast %struct.SkPoint* %29 to <4 x i32>*
  %48 = bitcast [3 x %"class.blink::FloatPoint"]* %7 to <4 x i32>*
  %49 = bitcast %struct.SkPoint* %30 to <4 x i32>*
  %50 = bitcast [3 x %"class.blink::FloatPoint"]* %7 to <4 x i32>*
  %51 = bitcast %struct.SkPoint* %17 to <4 x i32>*
  %52 = bitcast [3 x %"class.blink::FloatPoint"]* %7 to <4 x i32>*
  %53 = bitcast %struct.SkPoint* %17 to <4 x i32>*
  %54 = bitcast [3 x %"class.blink::FloatPoint"]* %7 to <4 x i32>*
  br label %55

55:                                               ; preds = %74, %3
  %56 = call i32 @_ZN6SkPath7RawIter4nextEP7SkPoint(%"class.SkPath::RawIter"* nonnull %4, %struct.SkPoint* nonnull %24) #11
  switch i32 %56, label %78 [
    i32 0, label %57
    i32 1, label %60
    i32 2, label %63
    i32 4, label %65
    i32 3, label %69
    i32 5, label %75
    i32 6, label %76
  ]

57:                                               ; preds = %55
  store i32 0, i32* %25, align 8
  %58 = load i32, i32* %43, align 16
  store i32 %58, i32* %44, align 16
  %59 = load i32, i32* %45, align 4
  store i32 %59, i32* %46, align 4
  br label %77

60:                                               ; preds = %55
  store i32 1, i32* %25, align 8
  %61 = load i32, i32* %38, align 8
  store i32 %61, i32* %39, align 16
  %62 = load i32, i32* %41, align 4
  store i32 %62, i32* %42, align 4
  br label %77

63:                                               ; preds = %55
  store i32 2, i32* %25, align 8
  %64 = load <4 x i32>, <4 x i32>* %53, align 8
  store <4 x i32> %64, <4 x i32>* %54, align 16
  br label %77

65:                                               ; preds = %55
  store i32 3, i32* %25, align 8
  %66 = load <4 x i32>, <4 x i32>* %51, align 8
  store <4 x i32> %66, <4 x i32>* %52, align 16
  %67 = load i32, i32* %33, align 8
  store i32 %67, i32* %34, align 16
  %68 = load i32, i32* %36, align 4
  store i32 %68, i32* %37, align 4
  br label %77

69:                                               ; preds = %55
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %27, i8 -1, i64 40, i1 false)
  %70 = load float, float* %11, align 8
  %71 = call i32 @_ZN6SkPath19ConvertConicToQuadsERK7SkPointS2_S2_fPS0_i(%struct.SkPoint* nonnull dereferenceable(8) %24, %struct.SkPoint* dereferenceable(8) %17, %struct.SkPoint* dereferenceable(8) %18, float %70, %struct.SkPoint* nonnull %28, i32 1) #11
  store i32 2, i32* %25, align 8
  %72 = load <4 x i32>, <4 x i32>* %47, align 8
  store <4 x i32> %72, <4 x i32>* %48, align 16
  store %"class.blink::FloatPoint"* %21, %"class.blink::FloatPoint"** %26, align 8
  call void %2(i8* %1, %"struct.blink::PathElement"* nonnull %6) #11
  %73 = load <4 x i32>, <4 x i32>* %49, align 8
  store <4 x i32> %73, <4 x i32>* %50, align 16
  store %"class.blink::FloatPoint"* %21, %"class.blink::FloatPoint"** %26, align 8
  call void %2(i8* %1, %"struct.blink::PathElement"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #11
  br label %74

74:                                               ; preds = %69, %78
  br label %55

75:                                               ; preds = %55
  store i32 4, i32* %25, align 8
  br label %77

76:                                               ; preds = %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #11
  ret void

77:                                               ; preds = %57, %60, %63, %65, %75
  store %"class.blink::FloatPoint"* %21, %"class.blink::FloatPoint"** %26, align 8
  br label %78

78:                                               ; preds = %77, %55
  call void %2(i8* %1, %"struct.blink::PathElement"* nonnull %6) #11
  br label %74
}

declare i32 @_ZN6SkPath7RawIter4nextEP7SkPoint(%"class.SkPath::RawIter"*, %struct.SkPoint*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i32 @_ZN6SkPath19ConvertConicToQuadsERK7SkPointS2_S2_fPS0_i(%struct.SkPoint* dereferenceable(8), %struct.SkPoint* dereferenceable(8), %struct.SkPoint* dereferenceable(8), float, %struct.SkPoint*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path9TransformERKNS_15AffineTransformE(%"class.blink::Path"*, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkMatrix, align 4
  %4 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %5 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #11
  call void @_ZN5blink25AffineTransformToSkMatrixERKNS_15AffineTransformE(%class.SkMatrix* nonnull sret %3, %"class.blink::AffineTransform"* dereferenceable(48) %1) #11
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* %4, %class.SkMatrix* nonnull dereferenceable(40) %3, %class.SkPath* %4, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #11
  ret void
}

declare void @_ZN5blink25AffineTransformToSkMatrixERKNS_15AffineTransformE(%class.SkMatrix* sret, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path9TransformERKNS_20TransformationMatrixE(%"class.blink::Path"*, %"class.blink::TransformationMatrix"* dereferenceable(128)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkMatrix, align 4
  %4 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %5 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #11
  call void @_ZN5blink30TransformationMatrixToSkMatrixERKNS_20TransformationMatrixE(%class.SkMatrix* nonnull sret %3, %"class.blink::TransformationMatrix"* dereferenceable(128) %1) #11
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* %4, %class.SkMatrix* nonnull dereferenceable(40) %3, %class.SkPath* %4, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #11
  ret void
}

declare void @_ZN5blink30TransformationMatrixToSkMatrixERKNS_20TransformationMatrixE(%class.SkMatrix* sret, %"class.blink::TransformationMatrix"* dereferenceable(128)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink4Path6lengthEv(%"class.blink::Path"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.SkPathMeasure, align 8
  %3 = bitcast %class.SkPathMeasure* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %5 = bitcast %class.SkPathMeasure* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false)
  call void @_ZN13SkPathMeasureC1ERK6SkPathbf(%class.SkPathMeasure* nonnull %2, %class.SkPath* dereferenceable(16) %4, i1 zeroext false, float 1.000000e+00) #11
  br label %6

6:                                                ; preds = %6, %1
  %7 = phi float [ 0.000000e+00, %1 ], [ %9, %6 ]
  %8 = call float @_ZN13SkPathMeasure9getLengthEv(%class.SkPathMeasure* nonnull %2) #11
  %9 = fadd float %7, %8
  %10 = call zeroext i1 @_ZN13SkPathMeasure11nextContourEv(%class.SkPathMeasure* nonnull %2) #11
  br i1 %10, label %6, label %11

11:                                               ; preds = %6
  call void @_ZN13SkPathMeasureD1Ev(%class.SkPathMeasure* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #11
  ret float %9
}

declare void @_ZN13SkPathMeasureC1ERK6SkPathbf(%class.SkPathMeasure*, %class.SkPath* dereferenceable(16), i1 zeroext, float) unnamed_addr #1

declare float @_ZN13SkPathMeasure9getLengthEv(%class.SkPathMeasure*) local_unnamed_addr #1

declare zeroext i1 @_ZN13SkPathMeasure11nextContourEv(%class.SkPathMeasure*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN13SkPathMeasureD1Ev(%class.SkPathMeasure*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK5blink4Path13PointAtLengthEf(%"class.blink::Path"*, float) local_unnamed_addr #5 align 2 {
  %3 = alloca %"struct.blink::PointAndTangent", align 8
  %4 = alloca %class.SkPathMeasure, align 8
  %5 = alloca float, align 4
  %6 = bitcast %"struct.blink::PointAndTangent"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6)
  %7 = bitcast %class.SkPathMeasure* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #11
  call void @_ZN13SkPathMeasureC1ERK6SkPathbf(%class.SkPathMeasure* nonnull %4, %class.SkPath* dereferenceable(16) %8, i1 zeroext false, float 1.000000e+00) #11
  %9 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  store float 0.000000e+00, float* %5, align 4
  %10 = call float @llvm.fabs.f32(float %1) #12
  %11 = fcmp one float %10, 0x7FF0000000000000
  %12 = select i1 %11, float %1, float 0.000000e+00
  %13 = call fastcc { i64, <2 x float> } @_ZN5blinkL29CalculatePointAndNormalOnPathER13SkPathMeasureRff(%class.SkPathMeasure* nonnull dereferenceable(16) %4, float* nonnull dereferenceable(4) %5, float %12) #11
  %14 = extractvalue { i64, <2 x float> } %13, 0
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %2
  %18 = extractvalue { i64, <2 x float> } %13, 1
  %19 = lshr i64 %14, 32
  %20 = trunc i64 %19 to i32
  %21 = bitcast %"struct.blink::PointAndTangent"* %3 to i32*
  store i32 %20, i32* %21, align 8
  %22 = getelementptr inbounds %"struct.blink::PointAndTangent", %"struct.blink::PointAndTangent"* %3, i64 0, i32 0, i32 1
  %23 = bitcast float* %22 to <2 x float>*
  store <2 x float> %18, <2 x float>* %23, align 4
  br label %33

24:                                               ; preds = %2
  %25 = call <2 x float> @_ZNK6SkPath8getPointEi(%class.SkPath* %8, i32 0) #11
  %26 = bitcast <2 x float> %25 to <2 x i32>
  %27 = extractelement <2 x i32> %26, i32 0
  %28 = bitcast %"struct.blink::PointAndTangent"* %3 to i32*
  store i32 %27, i32* %28, align 8
  %29 = extractelement <2 x i32> %26, i32 1
  %30 = getelementptr inbounds %"struct.blink::PointAndTangent", %"struct.blink::PointAndTangent"* %3, i64 0, i32 0, i32 1
  %31 = bitcast float* %30 to i32*
  store i32 %29, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.blink::PointAndTangent", %"struct.blink::PointAndTangent"* %3, i64 0, i32 1
  store float 0.000000e+00, float* %32, align 8
  br label %33

33:                                               ; preds = %17, %24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  call void @_ZN13SkPathMeasureD1Ev(%class.SkPathMeasure* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  %34 = bitcast %"struct.blink::PointAndTangent"* %3 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6)
  ret <2 x float> %35
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, float } @_ZNK5blink4Path22PointAndNormalAtLengthEf(%"class.blink::Path"*, float) local_unnamed_addr #5 align 2 {
  %3 = alloca %"struct.blink::PointAndTangent", align 8
  %4 = alloca %class.SkPathMeasure, align 8
  %5 = alloca float, align 4
  %6 = bitcast %class.SkPathMeasure* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %8 = bitcast %class.SkPathMeasure* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  call void @_ZN13SkPathMeasureC1ERK6SkPathbf(%class.SkPathMeasure* nonnull %4, %class.SkPath* dereferenceable(16) %7, i1 zeroext false, float 1.000000e+00) #11
  %9 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  store float 0.000000e+00, float* %5, align 4
  %10 = call float @llvm.fabs.f32(float %1) #12
  %11 = fcmp one float %10, 0x7FF0000000000000
  %12 = select i1 %11, float %1, float 0.000000e+00
  %13 = call fastcc { i64, <2 x float> } @_ZN5blinkL29CalculatePointAndNormalOnPathER13SkPathMeasureRff(%class.SkPathMeasure* nonnull dereferenceable(16) %4, float* nonnull dereferenceable(4) %5, float %12)
  %14 = extractvalue { i64, <2 x float> } %13, 0
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %25, label %17

17:                                               ; preds = %2
  %18 = extractvalue { i64, <2 x float> } %13, 1
  %19 = lshr i64 %14, 32
  %20 = trunc i64 %19 to i32
  %21 = bitcast %"struct.blink::PointAndTangent"* %3 to i32*
  store i32 %20, i32* %21, align 8
  %22 = getelementptr inbounds %"struct.blink::PointAndTangent", %"struct.blink::PointAndTangent"* %3, i64 0, i32 0, i32 1
  %23 = bitcast float* %22 to <2 x float>*
  store <2 x float> %18, <2 x float>* %23, align 4
  %24 = extractelement <2 x float> %18, i32 1
  br label %34

25:                                               ; preds = %2
  %26 = call <2 x float> @_ZNK6SkPath8getPointEi(%class.SkPath* %7, i32 0) #11
  %27 = bitcast <2 x float> %26 to <2 x i32>
  %28 = extractelement <2 x i32> %27, i32 0
  %29 = bitcast %"struct.blink::PointAndTangent"* %3 to i32*
  store i32 %28, i32* %29, align 8
  %30 = extractelement <2 x i32> %27, i32 1
  %31 = getelementptr inbounds %"struct.blink::PointAndTangent", %"struct.blink::PointAndTangent"* %3, i64 0, i32 0, i32 1
  %32 = bitcast float* %31 to i32*
  store i32 %30, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.blink::PointAndTangent", %"struct.blink::PointAndTangent"* %3, i64 0, i32 1
  store float 0.000000e+00, float* %33, align 8
  br label %34

34:                                               ; preds = %17, %25
  %35 = phi float [ %24, %17 ], [ 0.000000e+00, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  call void @_ZN13SkPathMeasureD1Ev(%class.SkPathMeasure* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  %36 = bitcast %"struct.blink::PointAndTangent"* %3 to <2 x float>*
  %37 = load <2 x float>, <2 x float>* %36, align 8
  %38 = insertvalue { <2 x float>, float } undef, <2 x float> %37, 0
  %39 = insertvalue { <2 x float>, float } %38, float %35, 1
  ret { <2 x float>, float } %39
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i64, <2 x float> } @_ZN5blinkL29CalculatePointAndNormalOnPathER13SkPathMeasureRff(%class.SkPathMeasure* dereferenceable(16), float* nocapture dereferenceable(4), float) unnamed_addr #0 {
  %4 = alloca %struct.SkPoint, align 4
  %5 = alloca %struct.SkPoint, align 4
  %6 = bitcast %struct.SkPoint* %4 to i8*
  %7 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 0
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 1
  %9 = bitcast %struct.SkPoint* %5 to i8*
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 1
  br label %12

12:                                               ; preds = %34, %3
  %13 = load float, float* %1, align 4
  %14 = call float @_ZN13SkPathMeasure9getLengthEv(%class.SkPathMeasure* %0) #11
  %15 = fadd float %13, %14
  %16 = fcmp ult float %15, %2
  br i1 %16, label %34, label %17

17:                                               ; preds = %12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  store float 0xFFFFFFFFE0000000, float* %7, align 4
  store float 0xFFFFFFFFE0000000, float* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  store float 0xFFFFFFFFE0000000, float* %10, align 4
  store float 0xFFFFFFFFE0000000, float* %11, align 4
  %18 = load float, float* %1, align 4
  %19 = fsub float %2, %18
  %20 = call zeroext i1 @_ZN13SkPathMeasure9getPosTanEfP7SkPointS1_(%class.SkPathMeasure* %0, float %19, %struct.SkPoint* nonnull %5, %struct.SkPoint* nonnull %4) #11
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  br label %34

22:                                               ; preds = %17
  %23 = bitcast %struct.SkPoint* %5 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = load float, float* %11, align 4
  %26 = zext i32 %24 to i64
  %27 = load float, float* %8, align 4
  %28 = load float, float* %7, align 4
  %29 = call float @atan2f(float %27, float %28) #11
  %30 = fmul float %29, 0x404CA5DC00000000
  %31 = insertelement <2 x float> undef, float %25, i32 0
  %32 = insertelement <2 x float> %31, float %30, i32 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %33 = shl nuw i64 %26, 32
  br label %36

34:                                               ; preds = %12, %21
  store float %15, float* %1, align 4
  %35 = call zeroext i1 @_ZN13SkPathMeasure11nextContourEv(%class.SkPathMeasure* %0) #11
  br i1 %35, label %12, label %36

36:                                               ; preds = %34, %22
  %37 = phi <2 x float> [ %32, %22 ], [ undef, %34 ]
  %38 = phi i64 [ %33, %22 ], [ 0, %34 ]
  %39 = phi i64 [ 1, %22 ], [ 0, %34 ]
  %40 = or i64 %39, %38
  %41 = insertvalue { i64, <2 x float> } undef, i64 %40, 0
  %42 = insertvalue { i64, <2 x float> } %41, <2 x float> %37, 1
  ret { i64, <2 x float> } %42
}

declare <2 x float> @_ZNK6SkPath8getPointEi(%class.SkPath*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path18PositionCalculatorC2ERKS0_(%"class.blink::Path::PositionCalculator"*, %"class.blink::Path"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Path::PositionCalculator", %"class.blink::Path::PositionCalculator"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %1, i64 0, i32 0
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %3, %class.SkPath* dereferenceable(16) %4) #11
  %5 = getelementptr inbounds %"class.blink::Path::PositionCalculator", %"class.blink::Path::PositionCalculator"* %0, i64 0, i32 1
  tail call void @_ZN13SkPathMeasureC1ERK6SkPathbf(%class.SkPathMeasure* %5, %class.SkPath* dereferenceable(16) %4, i1 zeroext false, float 1.000000e+00) #11
  %6 = getelementptr inbounds %"class.blink::Path::PositionCalculator", %"class.blink::Path::PositionCalculator"* %0, i64 0, i32 2
  store float 0.000000e+00, float* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, float } @_ZN5blink4Path18PositionCalculator22PointAndNormalAtLengthEf(%"class.blink::Path::PositionCalculator"*, float) local_unnamed_addr #5 align 2 {
  %3 = alloca %"struct.blink::PointAndTangent", align 8
  %4 = tail call float @llvm.fabs.f32(float %1) #12
  %5 = fcmp one float %4, 0x7FF0000000000000
  %6 = select i1 %5, float %1, float 0.000000e+00
  %7 = fcmp ult float %6, 0.000000e+00
  br i1 %7, label %29, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::Path::PositionCalculator", %"class.blink::Path::PositionCalculator"* %0, i64 0, i32 2
  %10 = load float, float* %9, align 8
  %11 = fcmp olt float %6, %10
  br i1 %11, label %12, label %15

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::Path::PositionCalculator", %"class.blink::Path::PositionCalculator"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::Path::PositionCalculator", %"class.blink::Path::PositionCalculator"* %0, i64 0, i32 0
  tail call void @_ZN13SkPathMeasure7setPathEPK6SkPathb(%class.SkPathMeasure* %13, %class.SkPath* %14, i1 zeroext false) #11
  store float 0.000000e+00, float* %9, align 8
  br label %15

15:                                               ; preds = %12, %8
  %16 = getelementptr inbounds %"class.blink::Path::PositionCalculator", %"class.blink::Path::PositionCalculator"* %0, i64 0, i32 1
  %17 = tail call fastcc { i64, <2 x float> } @_ZN5blinkL29CalculatePointAndNormalOnPathER13SkPathMeasureRff(%class.SkPathMeasure* dereferenceable(16) %16, float* dereferenceable(4) %9, float %6)
  %18 = extractvalue { i64, <2 x float> } %17, 0
  %19 = trunc i64 %18 to i8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %29, label %21

21:                                               ; preds = %15
  %22 = extractvalue { i64, <2 x float> } %17, 1
  %23 = lshr i64 %18, 32
  %24 = trunc i64 %23 to i32
  %25 = bitcast %"struct.blink::PointAndTangent"* %3 to i32*
  store i32 %24, i32* %25, align 8
  %26 = getelementptr inbounds %"struct.blink::PointAndTangent", %"struct.blink::PointAndTangent"* %3, i64 0, i32 0, i32 1
  %27 = bitcast float* %26 to <2 x float>*
  store <2 x float> %22, <2 x float>* %27, align 4
  %28 = extractelement <2 x float> %22, i32 1
  br label %39

29:                                               ; preds = %15, %2
  %30 = getelementptr inbounds %"class.blink::Path::PositionCalculator", %"class.blink::Path::PositionCalculator"* %0, i64 0, i32 0
  %31 = tail call <2 x float> @_ZNK6SkPath8getPointEi(%class.SkPath* %30, i32 0) #11
  %32 = bitcast <2 x float> %31 to <2 x i32>
  %33 = extractelement <2 x i32> %32, i32 0
  %34 = bitcast %"struct.blink::PointAndTangent"* %3 to i32*
  store i32 %33, i32* %34, align 8
  %35 = extractelement <2 x i32> %32, i32 1
  %36 = getelementptr inbounds %"struct.blink::PointAndTangent", %"struct.blink::PointAndTangent"* %3, i64 0, i32 0, i32 1
  %37 = bitcast float* %36 to i32*
  store i32 %35, i32* %37, align 4
  %38 = getelementptr inbounds %"struct.blink::PointAndTangent", %"struct.blink::PointAndTangent"* %3, i64 0, i32 1
  store float 0.000000e+00, float* %38, align 8
  br label %39

39:                                               ; preds = %21, %29
  %40 = phi float [ %28, %21 ], [ 0.000000e+00, %29 ]
  %41 = bitcast %"struct.blink::PointAndTangent"* %3 to <2 x float>*
  %42 = load <2 x float>, <2 x float>* %41, align 8
  %43 = insertvalue { <2 x float>, float } undef, <2 x float> %42, 0
  %44 = insertvalue { <2 x float>, float } %43, float %40, 1
  ret { <2 x float>, float } %44
}

declare void @_ZN13SkPathMeasure7setPathEPK6SkPathb(%class.SkPathMeasure*, %class.SkPath*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path5ClearEv(%"class.blink::Path"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %3 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath* %2) #11
  ret void
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink4Path7IsEmptyEv(%"class.blink::Path"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %4 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 4, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink4Path8IsClosedEv(%"class.blink::Path"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK6SkPath19isLastContourClosedEv(%class.SkPath* %2) #11
  ret i1 %3
}

declare zeroext i1 @_ZNK6SkPath19isLastContourClosedEv(%class.SkPath*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink4Path13SetIsVolatileEb(%"class.blink::Path"* nocapture, i1 zeroext) local_unnamed_addr #7 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0, i32 4
  %5 = load i8, i8* %4, align 2
  %6 = shl nuw nsw i8 %3, 2
  %7 = and i8 %5, -5
  %8 = or i8 %7, %6
  store i8 %8, i8* %4, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink4Path15HasCurrentPointEv(%"class.blink::Path"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %3 = tail call i32 @_ZNK6SkPath9getPointsEP7SkPointi(%class.SkPath* %2, %struct.SkPoint* null, i32 0) #11
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

declare i32 @_ZNK6SkPath9getPointsEP7SkPointi(%class.SkPath*, %struct.SkPoint*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK5blink4Path12CurrentPointEv(%"class.blink::Path"*) local_unnamed_addr #5 align 2 {
  %2 = alloca <2 x float>, align 8
  %3 = bitcast <2 x float>* %2 to %struct.SkPoint*
  %4 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %5 = tail call i32 @_ZNK6SkPath11countPointsEv(%class.SkPath* %4) #11
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = bitcast <2 x float>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = getelementptr inbounds <2 x float>, <2 x float>* %2, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %9, align 8
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %10, align 4
  %11 = call zeroext i1 @_ZNK6SkPath9getLastPtEP7SkPoint(%class.SkPath* %4, %struct.SkPoint* nonnull %3) #11
  %12 = load <2 x float>, <2 x float>* %2, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  br label %13

13:                                               ; preds = %1, %7
  %14 = phi <2 x float> [ %12, %7 ], [ <float 0x7FF8000000000000, float 0x7FF8000000000000>, %1 ]
  ret <2 x float> %14
}

declare i32 @_ZNK6SkPath11countPointsEv(%class.SkPath*) local_unnamed_addr #1

declare zeroext i1 @_ZNK6SkPath9getLastPtEP7SkPoint(%class.SkPath*, %struct.SkPoint*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink4Path11SetWindRuleENS_8WindRuleE(%"class.blink::Path"* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = trunc i32 %1 to i8
  %4 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0, i32 4
  %5 = load i8, i8* %4, align 2
  %6 = and i8 %3, 3
  %7 = and i8 %5, -4
  %8 = or i8 %7, %6
  store i8 %8, i8* %4, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path6MoveToERKNS_10FloatPointE(%"class.blink::Path"*, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = tail call float @llvm.fabs.f32(float %5) #12
  %7 = fcmp one float %6, 0x7FF0000000000000
  %8 = select i1 %7, float %5, float 0.000000e+00
  %9 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = tail call float @llvm.fabs.f32(float %10) #12
  %12 = fcmp one float %11, 0x7FF0000000000000
  %13 = select i1 %12, float %10, float 0.000000e+00
  %14 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath* %3, float %8, float %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path9AddLineToERKNS_10FloatPointE(%"class.blink::Path"*, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = tail call float @llvm.fabs.f32(float %5) #12
  %7 = fcmp one float %6, 0x7FF0000000000000
  %8 = select i1 %7, float %5, float 0.000000e+00
  %9 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = tail call float @llvm.fabs.f32(float %10) #12
  %12 = fcmp one float %11, 0x7FF0000000000000
  %13 = select i1 %12, float %10, float 0.000000e+00
  %14 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %3, float %8, float %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path14AddQuadCurveToERKNS_10FloatPointES3_(%"class.blink::Path"*, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = tail call float @llvm.fabs.f32(float %6) #12
  %8 = fcmp one float %7, 0x7FF0000000000000
  %9 = select i1 %8, float %6, float 0.000000e+00
  %10 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %11 = load float, float* %10, align 4
  %12 = tail call float @llvm.fabs.f32(float %11) #12
  %13 = fcmp one float %12, 0x7FF0000000000000
  %14 = select i1 %13, float %11, float 0.000000e+00
  %15 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %2, i64 0, i32 0
  %16 = load float, float* %15, align 4
  %17 = tail call float @llvm.fabs.f32(float %16) #12
  %18 = fcmp one float %17, 0x7FF0000000000000
  %19 = select i1 %18, float %16, float 0.000000e+00
  %20 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %2, i64 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = tail call float @llvm.fabs.f32(float %21) #12
  %23 = fcmp one float %22, 0x7FF0000000000000
  %24 = select i1 %23, float %21, float 0.000000e+00
  %25 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath* %4, float %9, float %14, float %19, float %24) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path16AddBezierCurveToERKNS_10FloatPointES3_S3_(%"class.blink::Path"*, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = tail call float @llvm.fabs.f32(float %7) #12
  %9 = fcmp one float %8, 0x7FF0000000000000
  %10 = select i1 %9, float %7, float 0.000000e+00
  %11 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = tail call float @llvm.fabs.f32(float %12) #12
  %14 = fcmp one float %13, 0x7FF0000000000000
  %15 = select i1 %14, float %12, float 0.000000e+00
  %16 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %2, i64 0, i32 0
  %17 = load float, float* %16, align 4
  %18 = tail call float @llvm.fabs.f32(float %17) #12
  %19 = fcmp one float %18, 0x7FF0000000000000
  %20 = select i1 %19, float %17, float 0.000000e+00
  %21 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %2, i64 0, i32 1
  %22 = load float, float* %21, align 4
  %23 = tail call float @llvm.fabs.f32(float %22) #12
  %24 = fcmp one float %23, 0x7FF0000000000000
  %25 = select i1 %24, float %22, float 0.000000e+00
  %26 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %3, i64 0, i32 0
  %27 = load float, float* %26, align 4
  %28 = tail call float @llvm.fabs.f32(float %27) #12
  %29 = fcmp one float %28, 0x7FF0000000000000
  %30 = select i1 %29, float %27, float 0.000000e+00
  %31 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %3, i64 0, i32 1
  %32 = load float, float* %31, align 4
  %33 = tail call float @llvm.fabs.f32(float %32) #12
  %34 = fcmp one float %33, 0x7FF0000000000000
  %35 = select i1 %34, float %32, float 0.000000e+00
  %36 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath7cubicToEffffff(%class.SkPath* %5, float %10, float %15, float %20, float %25, float %30, float %35) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path8AddArcToERKNS_10FloatPointES3_f(%"class.blink::Path"*, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), float) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = tail call float @llvm.fabs.f32(float %7) #12
  %9 = fcmp one float %8, 0x7FF0000000000000
  %10 = select i1 %9, float %7, float 0.000000e+00
  %11 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = tail call float @llvm.fabs.f32(float %12) #12
  %14 = fcmp one float %13, 0x7FF0000000000000
  %15 = select i1 %14, float %12, float 0.000000e+00
  %16 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %2, i64 0, i32 0
  %17 = load float, float* %16, align 4
  %18 = tail call float @llvm.fabs.f32(float %17) #12
  %19 = fcmp one float %18, 0x7FF0000000000000
  %20 = select i1 %19, float %17, float 0.000000e+00
  %21 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %2, i64 0, i32 1
  %22 = load float, float* %21, align 4
  %23 = tail call float @llvm.fabs.f32(float %22) #12
  %24 = fcmp one float %23, 0x7FF0000000000000
  %25 = select i1 %24, float %22, float 0.000000e+00
  %26 = tail call float @llvm.fabs.f32(float %3) #12
  %27 = fcmp one float %26, 0x7FF0000000000000
  %28 = select i1 %27, float %3, float 0.000000e+00
  %29 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToEfffff(%class.SkPath* %5, float %10, float %15, float %20, float %25, float %28) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path8AddArcToERKNS_10FloatPointERKNS_9FloatSizeEfbb(%"class.blink::Path"*, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), %"class.blink::FloatSize"* nocapture readonly dereferenceable(8), float, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %2, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = tail call float @llvm.fabs.f32(float %9) #12
  %11 = fcmp one float %10, 0x7FF0000000000000
  %12 = select i1 %11, float %9, float 0.000000e+00
  %13 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %2, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = tail call float @llvm.fabs.f32(float %14) #12
  %16 = fcmp one float %15, 0x7FF0000000000000
  %17 = select i1 %16, float %14, float 0.000000e+00
  %18 = tail call float @llvm.fabs.f32(float %3) #12
  %19 = fcmp one float %18, 0x7FF0000000000000
  %20 = select i1 %19, float %3, float 0.000000e+00
  %21 = zext i1 %4 to i32
  %22 = xor i1 %5, true
  %23 = zext i1 %22 to i32
  %24 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 0
  %25 = load float, float* %24, align 4
  %26 = tail call float @llvm.fabs.f32(float %25) #12
  %27 = fcmp one float %26, 0x7FF0000000000000
  %28 = select i1 %27, float %25, float 0.000000e+00
  %29 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %30 = load float, float* %29, align 4
  %31 = tail call float @llvm.fabs.f32(float %30) #12
  %32 = fcmp one float %31, 0x7FF0000000000000
  %33 = select i1 %32, float %30, float 0.000000e+00
  %34 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToEfffNS_7ArcSizeE15SkPathDirectionff(%class.SkPath* %7, float %12, float %17, float %20, i32 %21, i32 %23, float %28, float %33) #11
  ret void
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToEfffNS_7ArcSizeE15SkPathDirectionff(%class.SkPath*, float, float, float, i32, i32, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path12CloseSubpathEv(%"class.blink::Path"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %3 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath5closeEv(%class.SkPath* %2) #11
  ret void
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5closeEv(%class.SkPath*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path10AddEllipseERKNS_10FloatPointEffff(%"class.blink::Path"*, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), float, float, float, float) local_unnamed_addr #0 align 2 {
  %7 = alloca <4 x float>, align 16
  %8 = bitcast <4 x float>* %7 to %struct.SkRect*
  %9 = bitcast %"class.blink::FloatPoint"* %1 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = extractelement <2 x float> %10, i32 0
  %12 = insertelement <4 x float> undef, float %11, i32 0
  %13 = extractelement <2 x float> %10, i32 1
  %14 = insertelement <4 x float> %12, float %13, i32 1
  %15 = insertelement <4 x float> %14, float %2, i32 2
  %16 = insertelement <4 x float> %15, float %3, i32 3
  %17 = call <4 x float> @llvm.fabs.v4f32(<4 x float> %16)
  %18 = fcmp one <4 x float> %17, <float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000>
  %19 = select <4 x i1> %18, <4 x float> %16, <4 x float> zeroinitializer
  %20 = bitcast <4 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #11
  %21 = shufflevector <4 x float> %19, <4 x float> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %22 = fsub <4 x float> %19, %21
  %23 = fadd <4 x float> %19, %21
  %24 = shufflevector <4 x float> %22, <4 x float> %23, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  store <4 x float> %24, <4 x float>* %7, align 16
  %25 = fsub float %5, %4
  %26 = fmul float %4, 1.800000e+02
  %27 = fdiv float %26, 0x400921FB60000000
  %28 = tail call float @llvm.fabs.f32(float %27) #12
  %29 = fcmp one float %28, 0x7FF0000000000000
  %30 = select i1 %29, float %27, float 0.000000e+00
  %31 = fmul float %25, 1.800000e+02
  %32 = fdiv float %31, 0x400921FB60000000
  %33 = tail call float @llvm.fabs.f32(float %32) #12
  %34 = fcmp one float %33, 0x7FF0000000000000
  %35 = select i1 %34, float %32, float 0.000000e+00
  %36 = fadd float %35, -3.600000e+02
  %37 = tail call float @llvm.fabs.f32(float %36) #11
  %38 = fcmp ugt float %37, 0x3F30000000000000
  br i1 %38, label %44, label %39

39:                                               ; preds = %6
  %40 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %41 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToERK6SkRectffb(%class.SkPath* %40, %struct.SkRect* nonnull dereferenceable(16) %8, float %30, float 1.800000e+02, i1 zeroext false) #11
  %42 = fadd float %30, 1.800000e+02
  %43 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToERK6SkRectffb(%class.SkPath* %40, %struct.SkRect* nonnull dereferenceable(16) %8, float %42, float 1.800000e+02, i1 zeroext false) #11
  br label %55

44:                                               ; preds = %6
  %45 = fadd float %35, 3.600000e+02
  %46 = tail call float @llvm.fabs.f32(float %45) #11
  %47 = fcmp ugt float %46, 0x3F30000000000000
  %48 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  br i1 %47, label %53, label %49

49:                                               ; preds = %44
  %50 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToERK6SkRectffb(%class.SkPath* %48, %struct.SkRect* nonnull dereferenceable(16) %8, float %30, float -1.800000e+02, i1 zeroext false) #11
  %51 = fadd float %30, -1.800000e+02
  %52 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToERK6SkRectffb(%class.SkPath* %48, %struct.SkRect* nonnull dereferenceable(16) %8, float %51, float -1.800000e+02, i1 zeroext false) #11
  br label %55

53:                                               ; preds = %44
  %54 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToERK6SkRectffb(%class.SkPath* %48, %struct.SkRect* nonnull dereferenceable(16) %8, float %30, float %35, i1 zeroext false) #11
  br label %55

55:                                               ; preds = %53, %49, %39
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #11
  ret void
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToERK6SkRectffb(%class.SkPath*, %struct.SkRect* dereferenceable(16), float, float, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path6AddArcERKNS_10FloatPointEfff(%"class.blink::Path"*, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), float, float, float) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink4Path10AddEllipseERKNS_10FloatPointEffff(%"class.blink::Path"* %0, %"class.blink::FloatPoint"* dereferenceable(8) %1, float %2, float %2, float %3, float %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path7AddRectERKNS_9FloatRectE(%"class.blink::Path"*, %"class.blink::FloatRect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRect*
  %5 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %6 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = bitcast %"class.blink::FloatRect"* %1 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1, i32 0
  %10 = bitcast float* %9 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  %12 = fadd <2 x float> %8, %11
  %13 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> %8, <2 x float>* %13, align 8
  %14 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  store <2 x float> %12, <2 x float>* %14, align 8
  %15 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath* %5, %struct.SkRect* nonnull dereferenceable(16) %4, i32 0, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath*, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path10AddEllipseERKNS_10FloatPointEfffff(%"class.blink::Path"*, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), float, float, float, float, float) local_unnamed_addr #5 align 2 {
  %8 = alloca %class.SkMatrix, align 4
  %9 = alloca %class.SkMatrix, align 4
  %10 = alloca %"class.blink::FloatPoint", align 4
  %11 = alloca %"class.blink::AffineTransform", align 8
  %12 = alloca %"class.blink::AffineTransform", align 8
  %13 = alloca %"class.blink::AffineTransform", align 8
  %14 = alloca <2 x float>, align 8
  %15 = fcmp une float %4, 0.000000e+00
  br i1 %15, label %26, label %16

16:                                               ; preds = %7
  %17 = bitcast %"class.blink::FloatPoint"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = bitcast %"class.blink::FloatPoint"* %1 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %"class.blink::FloatPoint"* %10 to i32*
  store i32 %19, i32* %23, align 4
  %24 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %10, i64 0, i32 1
  %25 = bitcast float* %24 to i32*
  store i32 %22, i32* %25, align 4
  call void @_ZN5blink4Path10AddEllipseERKNS_10FloatPointEffff(%"class.blink::Path"* %0, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %10, float %2, float %3, float %5, float %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %46

26:                                               ; preds = %7
  %27 = bitcast <2 x float>* %14 to %"class.blink::FloatPoint"*
  %28 = bitcast %"class.blink::AffineTransform"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %28) #11
  %29 = bitcast %"class.blink::AffineTransform"* %12 to i8*
  %30 = bitcast %"class.blink::AffineTransform"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -1, i64 48, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %29) #11
  %31 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 0
  %32 = load float, float* %31, align 4
  %33 = fpext float %32 to double
  %34 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %35 = load float, float* %34, align 4
  %36 = fpext float %35 to double
  call void @_ZN5blink15AffineTransformC1Edddddd(%"class.blink::AffineTransform"* nonnull %12, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00, double %33, double %36) #11
  %37 = fpext float %4 to double
  %38 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform13RotateRadiansEd(%"class.blink::AffineTransform"* nonnull %12, double %37) #11
  %39 = bitcast %"class.blink::AffineTransform"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 %39, i64 48, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %29) #11
  %40 = bitcast %"class.blink::AffineTransform"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %40) #11
  %41 = bitcast %"class.blink::AffineTransform"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -1, i64 48, i1 false)
  call void @_ZNK5blink15AffineTransform7InverseEv(%"class.blink::AffineTransform"* nonnull sret %13, %"class.blink::AffineTransform"* nonnull %11) #11
  %42 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %43 = bitcast %class.SkMatrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %43) #11
  call void @_ZN5blink25AffineTransformToSkMatrixERKNS_15AffineTransformE(%class.SkMatrix* nonnull sret %8, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %13) #11
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* %42, %class.SkMatrix* nonnull dereferenceable(40) %8, %class.SkPath* %42, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %43) #11
  %44 = bitcast <2 x float>* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #11
  store <2 x float> zeroinitializer, <2 x float>* %14, align 8
  call void @_ZN5blink4Path10AddEllipseERKNS_10FloatPointEffff(%"class.blink::Path"* %0, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %27, float %2, float %3, float %5, float %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  %45 = bitcast %class.SkMatrix* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %45) #11
  call void @_ZN5blink25AffineTransformToSkMatrixERKNS_15AffineTransformE(%class.SkMatrix* nonnull sret %9, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %11) #11
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* %42, %class.SkMatrix* nonnull dereferenceable(40) %9, %class.SkPath* %42, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %40) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %28) #11
  br label %46

46:                                               ; preds = %26, %16
  ret void
}

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform13RotateRadiansEd(%"class.blink::AffineTransform"*, double) local_unnamed_addr #1

declare void @_ZNK5blink15AffineTransform7InverseEv(%"class.blink::AffineTransform"* sret, %"class.blink::AffineTransform"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path10AddEllipseERKNS_9FloatRectE(%"class.blink::Path"*, %"class.blink::FloatRect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRect*
  %5 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %6 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = bitcast %"class.blink::FloatRect"* %1 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1, i32 0
  %10 = bitcast float* %9 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  %12 = fadd <2 x float> %8, %11
  %13 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> %8, <2 x float>* %13, align 8
  %14 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  store <2 x float> %12, <2 x float>* %14, align 8
  %15 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addOvalERK6SkRect15SkPathDirectionj(%class.SkPath* %5, %struct.SkRect* nonnull dereferenceable(16) %4, i32 0, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addOvalERK6SkRect15SkPathDirectionj(%class.SkPath*, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path14AddRoundedRectERKNS_16FloatRoundedRectE(%"class.blink::Path"*, %"class.blink::FloatRoundedRect"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 1
  %6 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 2
  %7 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 3
  tail call void @_ZN5blink4Path14AddRoundedRectERKNS_9FloatRectERKNS_9FloatSizeES6_S6_S6_(%"class.blink::Path"* %0, %"class.blink::FloatRect"* dereferenceable(16) %3, %"class.blink::FloatSize"* dereferenceable(8) %4, %"class.blink::FloatSize"* dereferenceable(8) %5, %"class.blink::FloatSize"* dereferenceable(8) %6, %"class.blink::FloatSize"* dereferenceable(8) %7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path14AddRoundedRectERKNS_9FloatRectERKNS_9FloatSizeES6_S6_S6_(%"class.blink::Path"*, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca %class.SkRRect, align 4
  %9 = alloca %"class.blink::FloatRoundedRect", align 4
  %10 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1, i32 0
  %11 = load float, float* %10, align 4
  %12 = fcmp ugt float %11, 0.000000e+00
  br i1 %12, label %13, label %62

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1, i32 1
  %15 = load float, float* %14, align 4
  %16 = fcmp ugt float %15, 0.000000e+00
  br i1 %16, label %17, label %62

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %2, i64 0, i32 0
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %3, i64 0, i32 0
  %21 = load float, float* %20, align 4
  %22 = fadd float %19, %21
  %23 = fcmp olt float %11, %22
  br i1 %23, label %45, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %4, i64 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %5, i64 0, i32 0
  %28 = load float, float* %27, align 4
  %29 = fadd float %26, %28
  %30 = fcmp olt float %11, %29
  br i1 %30, label %45, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %2, i64 0, i32 1
  %33 = load float, float* %32, align 4
  %34 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %4, i64 0, i32 1
  %35 = load float, float* %34, align 4
  %36 = fadd float %33, %35
  %37 = fcmp olt float %15, %36
  br i1 %37, label %45, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %3, i64 0, i32 1
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %5, i64 0, i32 1
  %42 = load float, float* %41, align 4
  %43 = fadd float %40, %42
  %44 = fcmp olt float %15, %43
  br i1 %44, label %45, label %57

45:                                               ; preds = %38, %31, %24, %17
  %46 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %47 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %48 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #11
  %49 = bitcast %"class.blink::FloatRect"* %1 to <2 x float>*
  %50 = load <2 x float>, <2 x float>* %49, align 4
  %51 = insertelement <2 x float> undef, float %11, i32 0
  %52 = insertelement <2 x float> %51, float %15, i32 1
  %53 = fadd <2 x float> %52, %50
  %54 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %50, <2 x float>* %54, align 8
  %55 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %53, <2 x float>* %55, align 8
  %56 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath* %47, %struct.SkRect* nonnull dereferenceable(16) %46, i32 0, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #11
  br label %62

57:                                               ; preds = %38
  %58 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %59 = bitcast %class.SkRRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %59) #11
  %60 = bitcast %"class.blink::FloatRoundedRect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %60) #11
  call void @_ZN5blink16FloatRoundedRectC1ERKNS_9FloatRectERKNS_9FloatSizeES6_S6_S6_(%"class.blink::FloatRoundedRect"* nonnull %9, %"class.blink::FloatRect"* dereferenceable(16) %1, %"class.blink::FloatSize"* dereferenceable(8) %2, %"class.blink::FloatSize"* dereferenceable(8) %3, %"class.blink::FloatSize"* dereferenceable(8) %4, %"class.blink::FloatSize"* dereferenceable(8) %5) #11
  call void @_ZNK5blink16FloatRoundedRectcv7SkRRectEv(%class.SkRRect* nonnull sret %8, %"class.blink::FloatRoundedRect"* nonnull %9) #11
  %61 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirectionj(%class.SkPath* %58, %class.SkRRect* nonnull dereferenceable(52) %8, i32 0, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %60) #11
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %59) #11
  br label %62

62:                                               ; preds = %13, %6, %57, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path14AddRoundedRectERKNS_9FloatRectERKNS_9FloatSizeE(%"class.blink::Path"*, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkRRect, align 4
  %5 = alloca %"class.blink::FloatRoundedRect", align 4
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.blink::FloatSize"*
  %8 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1, i32 0
  %9 = load float, float* %8, align 4
  %10 = fcmp ugt float %9, 0.000000e+00
  br i1 %10, label %11, label %52

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1, i32 1
  %13 = load float, float* %12, align 4
  %14 = fcmp ugt float %13, 0.000000e+00
  br i1 %14, label %15, label %52

15:                                               ; preds = %11
  %16 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = bitcast i64* %6 to float*
  %18 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %7, i64 0, i32 1
  %19 = bitcast %"class.blink::FloatSize"* %2 to i64*
  %20 = load i64, i64* %19, align 4
  store i64 %20, i64* %6, align 8
  %21 = fmul float %9, 5.000000e-01
  %22 = fmul float %13, 5.000000e-01
  %23 = trunc i64 %20 to i32
  %24 = bitcast i32 %23 to float
  %25 = fcmp olt float %24, 0.000000e+00
  %26 = lshr i64 %20, 32
  %27 = trunc i64 %26 to i32
  %28 = bitcast i32 %27 to float
  br i1 %25, label %29, label %33

29:                                               ; preds = %15
  %30 = fcmp olt float %28, 0.000000e+00
  %31 = select i1 %30, float 0.000000e+00, float %28
  store float %31, float* %17, align 8
  %32 = bitcast float %31 to i32
  br label %33

33:                                               ; preds = %29, %15
  %34 = phi float [ %31, %29 ], [ %24, %15 ]
  %35 = phi i32 [ %32, %29 ], [ %23, %15 ]
  %36 = fcmp olt float %28, 0.000000e+00
  br i1 %36, label %37, label %40

37:                                               ; preds = %33
  %38 = bitcast float* %18 to i32*
  store i32 %35, i32* %38, align 4
  %39 = bitcast i32 %35 to float
  br label %40

40:                                               ; preds = %37, %33
  %41 = phi float [ %39, %37 ], [ %28, %33 ]
  %42 = fcmp ogt float %34, %21
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  store float %21, float* %17, align 8
  br label %44

44:                                               ; preds = %43, %40
  %45 = fcmp ogt float %41, %22
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  store float %22, float* %18, align 4
  br label %47

47:                                               ; preds = %46, %44
  %48 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %49 = bitcast %class.SkRRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %49) #11
  %50 = bitcast %"class.blink::FloatRoundedRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %50) #11
  call void @_ZN5blink16FloatRoundedRectC1ERKNS_9FloatRectERKNS_9FloatSizeES6_S6_S6_(%"class.blink::FloatRoundedRect"* nonnull %5, %"class.blink::FloatRect"* dereferenceable(16) %1, %"class.blink::FloatSize"* nonnull dereferenceable(8) %7, %"class.blink::FloatSize"* nonnull dereferenceable(8) %7, %"class.blink::FloatSize"* nonnull dereferenceable(8) %7, %"class.blink::FloatSize"* nonnull dereferenceable(8) %7) #11
  call void @_ZNK5blink16FloatRoundedRectcv7SkRRectEv(%class.SkRRect* nonnull sret %4, %"class.blink::FloatRoundedRect"* nonnull %5) #11
  %51 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirectionj(%class.SkPath* %48, %class.SkRRect* nonnull dereferenceable(52) %4, i32 0, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %50) #11
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %49) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %52

52:                                               ; preds = %11, %3, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path21AddPathForRoundedRectERKNS_9FloatRectERKNS_9FloatSizeES6_S6_S6_b(%"class.blink::Path"*, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::FloatSize"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.SkRRect, align 4
  %9 = alloca %"class.blink::FloatRoundedRect", align 4
  %10 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %11 = bitcast %class.SkRRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %11) #11
  %12 = bitcast %"class.blink::FloatRoundedRect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #11
  call void @_ZN5blink16FloatRoundedRectC1ERKNS_9FloatRectERKNS_9FloatSizeES6_S6_S6_(%"class.blink::FloatRoundedRect"* nonnull %9, %"class.blink::FloatRect"* dereferenceable(16) %1, %"class.blink::FloatSize"* dereferenceable(8) %2, %"class.blink::FloatSize"* dereferenceable(8) %3, %"class.blink::FloatSize"* dereferenceable(8) %4, %"class.blink::FloatSize"* dereferenceable(8) %5) #11
  call void @_ZNK5blink16FloatRoundedRectcv7SkRRectEv(%class.SkRRect* nonnull sret %8, %"class.blink::FloatRoundedRect"* nonnull %9)
  %13 = xor i1 %6, true
  %14 = zext i1 %13 to i32
  %15 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirectionj(%class.SkPath* %10, %class.SkRRect* nonnull dereferenceable(52) %8, i32 %14, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %11) #11
  ret void
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirectionj(%class.SkPath*, %class.SkRRect* dereferenceable(52), i32, i32) local_unnamed_addr #1

declare void @_ZN5blink16FloatRoundedRectC1ERKNS_9FloatRectERKNS_9FloatSizeES6_S6_S6_(%"class.blink::FloatRoundedRect"*, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::FloatSize"* dereferenceable(8), %"class.blink::FloatSize"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16FloatRoundedRectcv7SkRRectEv(%class.SkRRect* noalias sret, %"class.blink::FloatRoundedRect"*) local_unnamed_addr #8 comdat align 2 {
  %3 = alloca [4 x %struct.SkPoint], align 16
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %0, i64 0, i32 2
  %7 = bitcast %class.SkRRect* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 52, i1 false) #11
  %8 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fcmp ogt float %9, 0xBE80000000000000
  %11 = fcmp olt float %9, 0x3E80000000000000
  %12 = and i1 %10, %11
  %13 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 0, i32 1
  br i1 %12, label %17, label %14

14:                                               ; preds = %2
  %15 = bitcast float* %13 to i32*
  %16 = load i32, i32* %15, align 4
  br label %59

17:                                               ; preds = %2
  %18 = load float, float* %13, align 4
  %19 = fcmp ogt float %18, 0xBE80000000000000
  %20 = fcmp olt float %18, 0x3E80000000000000
  %21 = and i1 %19, %20
  %22 = bitcast float %18 to i32
  br i1 %21, label %23, label %59

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 1, i32 0
  %25 = load float, float* %24, align 4
  %26 = fcmp ogt float %25, 0xBE80000000000000
  %27 = fcmp olt float %25, 0x3E80000000000000
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %59

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 1, i32 1
  %31 = load float, float* %30, align 4
  %32 = fcmp ogt float %31, 0xBE80000000000000
  %33 = fcmp olt float %31, 0x3E80000000000000
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %59

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 2, i32 0
  %37 = load float, float* %36, align 4
  %38 = fcmp ogt float %37, 0xBE80000000000000
  %39 = fcmp olt float %37, 0x3E80000000000000
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %59

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 2, i32 1
  %43 = load float, float* %42, align 4
  %44 = fcmp ogt float %43, 0xBE80000000000000
  %45 = fcmp olt float %43, 0x3E80000000000000
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %59

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 3, i32 0
  %49 = load float, float* %48, align 4
  %50 = fcmp ogt float %49, 0xBE80000000000000
  %51 = fcmp olt float %49, 0x3E80000000000000
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %59

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 3, i32 1
  %55 = load float, float* %54, align 4
  %56 = fcmp ule float %55, 0xBE80000000000000
  %57 = fcmp uge float %55, 0x3E80000000000000
  %58 = or i1 %56, %57
  br i1 %58, label %59, label %100

59:                                               ; preds = %14, %53, %35, %41, %23, %29, %17, %47
  %60 = phi i32 [ %16, %14 ], [ %22, %53 ], [ %22, %35 ], [ %22, %41 ], [ %22, %23 ], [ %22, %29 ], [ %22, %17 ], [ %22, %47 ]
  %61 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %62 = bitcast [4 x %struct.SkPoint]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %62) #11
  %63 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 0
  %64 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 0, i32 0
  %65 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 0, i32 1
  %66 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 1
  %67 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 1, i32 1
  %68 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 2
  store float %9, float* %64, align 16
  %69 = bitcast float* %65 to i32*
  store i32 %60, i32* %69, align 4
  %70 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 1, i32 0
  %71 = bitcast float* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 1, i32 1
  %74 = bitcast float* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = bitcast %struct.SkPoint* %66 to i32*
  store i32 %72, i32* %76, align 8
  %77 = bitcast float* %67 to i32*
  store i32 %75, i32* %77, align 4
  %78 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 1, i32 2, i32 0
  %79 = bitcast float* %78 to <4 x i32>*
  %80 = load <4 x i32>, <4 x i32>* %79, align 4
  %81 = shufflevector <4 x i32> %80, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 0, i32 1>
  %82 = bitcast %struct.SkPoint* %68 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %82, align 16
  %83 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #11
  %84 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 0, i32 0
  %85 = load float, float* %84, align 4
  %86 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 0, i32 1
  %87 = load float, float* %86, align 4
  %88 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 1, i32 0
  %89 = load float, float* %88, align 4
  %90 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 1, i32 1
  %91 = load float, float* %90, align 4
  %92 = insertelement <2 x float> undef, float %85, i32 0
  %93 = insertelement <2 x float> %92, float %87, i32 1
  %94 = fadd float %85, %89
  %95 = insertelement <2 x float> undef, float %94, i32 0
  %96 = fadd float %87, %91
  %97 = insertelement <2 x float> %95, float %96, i32 1
  %98 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %93, <2 x float>* %98, align 8
  %99 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %97, <2 x float>* %99, align 8
  call void @_ZN7SkRRect12setRectRadiiERK6SkRectPK7SkPoint(%class.SkRRect* %0, %struct.SkRect* nonnull dereferenceable(16) %61, %struct.SkPoint* nonnull %63) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %62) #11
  br label %116

100:                                              ; preds = %53
  %101 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %102 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #11
  %103 = bitcast %"class.blink::FloatRoundedRect"* %1 to <2 x float>*
  %104 = load <2 x float>, <2 x float>* %103, align 4
  %105 = getelementptr inbounds %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect"* %1, i64 0, i32 0, i32 1, i32 0
  %106 = bitcast float* %105 to <2 x float>*
  %107 = load <2 x float>, <2 x float>* %106, align 4
  %108 = fadd <2 x float> %104, %107
  %109 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %104, <2 x float>* %109, align 8
  %110 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %108, <2 x float>* %110, align 8
  %111 = call zeroext i1 @_ZN7SkRRect14initializeRectERK6SkRect(%class.SkRRect* %0, %struct.SkRect* nonnull dereferenceable(16) %101) #11
  br i1 %111, label %112, label %115

112:                                              ; preds = %100
  %113 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %0, i64 0, i32 1, i64 0
  %114 = bitcast %struct.SkPoint* %113 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %114, i8 0, i64 32, i1 false) #11
  store i32 1, i32* %6, align 4
  br label %115

115:                                              ; preds = %100, %112
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #11
  br label %116

116:                                              ; preds = %115, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path7AddPathERKS0_RKNS_15AffineTransformE(%"class.blink::Path"*, %"class.blink::Path"* dereferenceable(16), %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkMatrix, align 4
  %5 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %1, i64 0, i32 0
  %7 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #11
  call void @_ZN5blink25AffineTransformToSkMatrixERKNS_15AffineTransformE(%class.SkMatrix* nonnull sret %4, %"class.blink::AffineTransform"* dereferenceable(48) %2) #11
  %8 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPathERKS_RK8SkMatrixNS_11AddPathModeE(%class.SkPath* %5, %class.SkPath* dereferenceable(16) %6, %class.SkMatrix* nonnull dereferenceable(40) %4, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #11
  ret void
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPathERKS_RK8SkMatrixNS_11AddPathModeE(%class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink4Path9TranslateERKNS_9FloatSizeE(%"class.blink::Path"*, %"class.blink::FloatSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = tail call float @llvm.fabs.f32(float %5) #12
  %7 = fcmp one float %6, 0x7FF0000000000000
  %8 = select i1 %7, float %5, float 0.000000e+00
  %9 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 1
  %10 = load float, float* %9, align 4
  %11 = tail call float @llvm.fabs.f32(float %10) #12
  %12 = fcmp one float %11, 0x7FF0000000000000
  %13 = select i1 %12, float %10, float 0.000000e+00
  tail call void @_ZNK6SkPath6offsetEffPS_(%class.SkPath* %3, float %8, float %13, %class.SkPath* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink4Path12SubtractPathERKS0_(%"class.blink::Path"*, %"class.blink::Path"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_Z2OpRK6SkPathS1_8SkPathOpPS_(%class.SkPath* dereferenceable(16) %3, %class.SkPath* dereferenceable(16) %4, i32 0, %class.SkPath* %3) #11
  ret i1 %5
}

declare zeroext i1 @_Z2OpRK6SkPathS1_8SkPathOpPS_(%class.SkPath* dereferenceable(16), %class.SkPath* dereferenceable(16), i32, %class.SkPath*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink4Path9UnionPathERKS0_(%"class.blink::Path"*, %"class.blink::Path"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::Path", %"class.blink::Path"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_Z2OpRK6SkPathS1_8SkPathOpPS_(%class.SkPath* dereferenceable(16) %3, %class.SkPath* dereferenceable(16) %4, i32 2, %class.SkPath* %3) #11
  ret i1 %5
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink19EllipseIsRenderableEff(float, float) local_unnamed_addr #9 {
  %3 = fsub float %1, %0
  %4 = tail call float @llvm.fabs.f32(float %3) #11
  %5 = fcmp olt float %4, 0x401921FB60000000
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = fcmp one float %4, 0x7FF0000000000000
  %8 = fadd float %4, 0xC01921FB60000000
  %9 = select i1 %7, float %8, float 0xC01921FB60000000
  %10 = tail call float @llvm.fabs.f32(float %9) #11
  %11 = fcmp ole float %10, 0x3F30000000000000
  br label %12

12:                                               ; preds = %6, %2
  %13 = phi i1 [ true, %2 ], [ %11, %6 ]
  ret i1 %13
}

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #1

declare void @_ZN6SkPath7RawIter7setPathERKS_(%"class.SkPath::RawIter"*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath*, %class.SkMatrix* dereferenceable(40), %class.SkPath*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN13SkPathMeasure9getPosTanEfP7SkPointS1_(%class.SkPathMeasure*, float, %struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare float @atan2f(float, float) local_unnamed_addr #4

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath*, float, float) local_unnamed_addr #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath*, float, float) local_unnamed_addr #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath*, float, float, float, float) local_unnamed_addr #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7cubicToEffffff(%class.SkPath*, float, float, float, float, float, float) local_unnamed_addr #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToEfffff(%class.SkPath*, float, float, float, float, float) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #10

declare void @_ZN5blink15AffineTransformC1Edddddd(%"class.blink::AffineTransform"*, double, double, double, double, double, double) unnamed_addr #1

declare void @_ZN7SkRRect12setRectRadiiERK6SkRectPK7SkPoint(%class.SkRRect*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*) local_unnamed_addr #1

declare zeroext i1 @_ZN7SkRRect14initializeRectERK6SkRect(%class.SkRRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK6SkPath6offsetEffPS_(%class.SkPath*, float, float, %class.SkPath*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink4Path10StrokePathERKNS_10StrokeDataEf: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink4Path10StrokePathERKNS_10StrokeDataEf"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink4Path10StrokePathERKNS_10StrokeDataEf: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink4Path10StrokePathERKNS_10StrokeDataEf"}
