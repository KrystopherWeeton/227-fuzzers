; ModuleID = '../../net/third_party/quiche/src/quic/core/qpack/value_splitting_header_list.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/qpack/value_splitting_header_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.quic::ValueSplittingHeaderList::const_iterator" = type { %"class.spdy::Http2HeaderBlock"*, %"class.spdy::Http2HeaderBlock::iterator", i64, i64, %"struct.std::__1::pair.15" }
%"class.spdy::Http2HeaderBlock::iterator" = type { %"class.std::__1::__list_const_iterator" }
%"class.std::__1::__list_const_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"struct.std::__1::pair.15" = type { %"class.absl::string_view", %"class.absl::string_view" }
%"class.absl::string_view" = type { i8*, i64 }
%"class.spdy::Http2HeaderBlock" = type { %"class.quiche::QuicheLinkedHashMap", %"class.spdy::SpdyHeaderStorage", i64, i64 }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"struct.std::__1::pair"**, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"struct.std::__1::pair" = type { %"class.absl::string_view", %"class.std::__1::__list_iterator" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.spdy::SpdyHeaderStorage" = type { %"class.spdy::SpdySimpleArena" }
%"class.spdy::SpdySimpleArena" = type { i64, %"class.std::__1::vector", %"class.spdy::SpdySimpleArena::Status" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spdy::SpdySimpleArena::Block"*, %"struct.spdy::SpdySimpleArena::Block"*, %"class.std::__1::__compressed_pair.10" }
%"struct.spdy::SpdySimpleArena::Block" = type { %"class.std::__1::unique_ptr", i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i8* }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.spdy::SpdySimpleArena::Block"* }
%"class.spdy::SpdySimpleArena::Status" = type { i64 }
%"class.quic::ValueSplittingHeaderList" = type { %"class.spdy::Http2HeaderBlock"* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.std::__1::pair.16" }
%"struct.std::__1::pair.16" = type { %"class.absl::string_view", %"class.spdy::Http2HeaderBlock::HeaderValue" }
%"class.spdy::Http2HeaderBlock::HeaderValue" = type { %"class.spdy::SpdyHeaderStorage"*, %"class.std::__1::vector.17", %"struct.std::__1::pair.15", i64, i64 }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.absl::string_view"*, %"class.absl::string_view"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.absl::string_view"* }

@_ZN4quic12_GLOBAL__N_110kCookieKeyE = internal constant [7 x i8] c"cookie\00", align 1
@.str = private unnamed_addr constant [26 x i8] c"absl::string_view::substr\00", align 1

@_ZN4quic24ValueSplittingHeaderList14const_iteratorC1EPKN4spdy16Http2HeaderBlockENS3_8iteratorE = hidden unnamed_addr alias void (%"class.quic::ValueSplittingHeaderList::const_iterator"*, %"class.spdy::Http2HeaderBlock"*, %"class.spdy::Http2HeaderBlock::iterator"*), void (%"class.quic::ValueSplittingHeaderList::const_iterator"*, %"class.spdy::Http2HeaderBlock"*, %"class.spdy::Http2HeaderBlock::iterator"*)* @_ZN4quic24ValueSplittingHeaderList14const_iteratorC2EPKN4spdy16Http2HeaderBlockENS3_8iteratorE
@_ZN4quic24ValueSplittingHeaderListC1EPKN4spdy16Http2HeaderBlockE = hidden unnamed_addr alias void (%"class.quic::ValueSplittingHeaderList"*, %"class.spdy::Http2HeaderBlock"*), void (%"class.quic::ValueSplittingHeaderList"*, %"class.spdy::Http2HeaderBlock"*)* @_ZN4quic24ValueSplittingHeaderListC2EPKN4spdy16Http2HeaderBlockE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic24ValueSplittingHeaderList14const_iteratorC2EPKN4spdy16Http2HeaderBlockENS3_8iteratorE(%"class.quic::ValueSplittingHeaderList::const_iterator"*, %"class.spdy::Http2HeaderBlock"*, %"class.spdy::Http2HeaderBlock::iterator"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 0
  store %"class.spdy::Http2HeaderBlock"* %1, %"class.spdy::Http2HeaderBlock"** %4, align 8
  %5 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 1
  tail call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ERKS1_(%"class.spdy::Http2HeaderBlock::iterator"* %5, %"class.spdy::Http2HeaderBlock::iterator"* dereferenceable(8) %2) #10
  %6 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 2
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 4
  %8 = bitcast %"struct.std::__1::pair.15"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false) #10
  tail call void @_ZN4quic24ValueSplittingHeaderList14const_iterator17UpdateHeaderFieldEv(%"class.quic::ValueSplittingHeaderList::const_iterator"* %0)
  ret void
}

declare void @_ZN4spdy16Http2HeaderBlock8iteratorC1ERKS1_(%"class.spdy::Http2HeaderBlock::iterator"*, %"class.spdy::Http2HeaderBlock::iterator"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic24ValueSplittingHeaderList14const_iterator17UpdateHeaderFieldEv(%"class.quic::ValueSplittingHeaderList::const_iterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.spdy::Http2HeaderBlock::iterator", align 8
  %3 = alloca %"class.absl::string_view", align 8
  %4 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 1
  %5 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 0
  %7 = load %"class.spdy::Http2HeaderBlock"*, %"class.spdy::Http2HeaderBlock"** %6, align 8
  %8 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %2, %"struct.std::__1::__list_node_base"* %8) #10
  %9 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %4, i64 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %2, i64 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__list_node_base"* %10, %12
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  br i1 %13, label %84, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %4 to %"struct.std::__1::__list_node"**
  %16 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %16, i64 0, i32 1, i32 1
  %18 = call dereferenceable(32) %"struct.std::__1::pair.15"* @_ZNK4spdy16Http2HeaderBlock11HeaderValue7as_pairEv(%"class.spdy::Http2HeaderBlock::HeaderValue"* %17) #10
  %19 = getelementptr inbounds %"struct.std::__1::pair.15", %"struct.std::__1::pair.15"* %18, i64 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair.15", %"struct.std::__1::pair.15"* %18, i64 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.absl::string_view"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %3, i64 0, i32 0
  %25 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %3, i64 0, i32 1
  %26 = bitcast %"class.absl::string_view"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  %27 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %15, align 8
  %28 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %27, i64 0, i32 1, i32 1
  %29 = call dereferenceable(32) %"struct.std::__1::pair.15"* @_ZNK4spdy16Http2HeaderBlock11HeaderValue7as_pairEv(%"class.spdy::Http2HeaderBlock::HeaderValue"* %28) #10
  %30 = getelementptr inbounds %"struct.std::__1::pair.15", %"struct.std::__1::pair.15"* %29, i64 0, i32 1
  %31 = bitcast %"class.absl::string_view"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %31, i64 16, i1 false)
  %32 = icmp eq i64 %22, 6
  br i1 %32, label %36, label %33

33:                                               ; preds = %14
  %34 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  br label %43

36:                                               ; preds = %14
  %37 = call i32 @bcmp(i8* %20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN4quic12_GLOBAL__N_110kCookieKeyE, i64 0, i64 0), i64 6) #10
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 2
  %40 = load i64, i64* %39, align 8
  br i1 %38, label %41, label %43

41:                                               ; preds = %36
  %42 = call i64 @_ZNK4absl11string_view4findEcm(%"class.absl::string_view"* nonnull %3, i8 signext 59, i64 %40) #10
  br label %47

43:                                               ; preds = %33, %36
  %44 = phi i64 [ %35, %33 ], [ %40, %36 ]
  %45 = phi i64* [ %34, %33 ], [ %39, %36 ]
  %46 = call i64 @_ZNK4absl11string_view4findEcm(%"class.absl::string_view"* nonnull %3, i8 signext 0, i64 %44) #10
  br label %47

47:                                               ; preds = %43, %41
  %48 = phi i64 [ %46, %43 ], [ %42, %41 ]
  %49 = phi i64* [ %45, %43 ], [ %39, %41 ]
  %50 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 3
  store i64 %48, i64* %50, align 8
  %51 = load i64, i64* %49, align 8
  %52 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 3
  %53 = sub i64 %48, %51
  %54 = load i64, i64* %25, align 8
  %55 = icmp ult i64 %54, %51
  br i1 %55, label %56, label %57, !prof !2

56:                                               ; preds = %47
  call void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0)) #11
  unreachable

57:                                               ; preds = %47
  %58 = sub i64 %54, %51
  %59 = icmp ugt i64 %58, %53
  %60 = select i1 %59, i64 %53, i64 %58
  %61 = icmp sgt i64 %60, -1
  br i1 %61, label %63, label %62, !prof !3

62:                                               ; preds = %57
  call void @llvm.trap() #10
  unreachable

63:                                               ; preds = %57
  %64 = load i8*, i8** %24, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 %51
  %66 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 4, i32 0, i32 0
  store i8* %20, i8** %66, align 8
  %67 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 4, i32 0, i32 1
  store i64 %22, i64* %67, align 8
  %68 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 4, i32 1, i32 0
  store i8* %65, i8** %68, align 8
  %69 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 4, i32 1, i32 1
  store i64 %60, i64* %69, align 8
  br i1 %32, label %70, label %83

70:                                               ; preds = %63
  %71 = call i32 @bcmp(i8* %20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN4quic12_GLOBAL__N_110kCookieKeyE, i64 0, i64 0), i64 6) #10
  %72 = icmp ne i32 %71, 0
  %73 = icmp eq i64 %48, -1
  %74 = or i1 %73, %72
  br i1 %74, label %83, label %75

75:                                               ; preds = %70
  %76 = add nuw i64 %48, 1
  %77 = icmp ult i64 %76, %54
  br i1 %77, label %78, label %83

78:                                               ; preds = %75
  %79 = getelementptr inbounds i8, i8* %64, i64 %76
  %80 = load i8, i8* %79, align 1
  %81 = icmp eq i8 %80, 32
  br i1 %81, label %82, label %83

82:                                               ; preds = %78
  store i64 %76, i64* %52, align 8
  br label %83

83:                                               ; preds = %70, %63, %75, %82, %78
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #10
  br label %84

84:                                               ; preds = %1, %83
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic24ValueSplittingHeaderList14const_iteratoreqERKS1_(%"class.quic::ValueSplittingHeaderList::const_iterator"* nocapture readonly, %"class.quic::ValueSplittingHeaderList::const_iterator"* nocapture readonly dereferenceable(64)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %3, align 8
  %5 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %1, i64 0, i32 1, i32 0, i32 0
  %6 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__list_node_base"* %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %1, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br label %14

14:                                               ; preds = %8, %2
  %15 = phi i1 [ false, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic24ValueSplittingHeaderList14const_iteratorneERKS1_(%"class.quic::ValueSplittingHeaderList::const_iterator"* nocapture readonly, %"class.quic::ValueSplittingHeaderList::const_iterator"* nocapture readonly dereferenceable(64)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %3, align 8
  %5 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %1, i64 0, i32 1, i32 0, i32 0
  %6 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__list_node_base"* %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %1, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = icmp ne i64 %10, %12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i1 [ true, %2 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.quic::ValueSplittingHeaderList::const_iterator"* @_ZN4quic24ValueSplittingHeaderList14const_iteratorppEv(%"class.quic::ValueSplittingHeaderList::const_iterator"* returned) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, -1
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.spdy::Http2HeaderBlock::iterator", %"class.spdy::Http2HeaderBlock::iterator"* %6, i64 0, i32 0, i32 0
  %8 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %8, i64 0, i32 1
  %10 = bitcast %"struct.std::__1::__list_node_base"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.spdy::Http2HeaderBlock::iterator"* %6 to i64*
  store i64 %11, i64* %12, align 8
  br label %15

13:                                               ; preds = %1
  %14 = add nuw i64 %3, 1
  br label %15

15:                                               ; preds = %13, %5
  %16 = phi i64 [ %14, %13 ], [ 0, %5 ]
  %17 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 2
  store i64 %16, i64* %17, align 8
  tail call void @_ZN4quic24ValueSplittingHeaderList14const_iterator17UpdateHeaderFieldEv(%"class.quic::ValueSplittingHeaderList::const_iterator"* %0)
  ret %"class.quic::ValueSplittingHeaderList::const_iterator"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(32) %"struct.std::__1::pair.15"* @_ZNK4quic24ValueSplittingHeaderList14const_iteratordeEv(%"class.quic::ValueSplittingHeaderList::const_iterator"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 4
  ret %"struct.std::__1::pair.15"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"struct.std::__1::pair.15"* @_ZNK4quic24ValueSplittingHeaderList14const_iteratorptEv(%"class.quic::ValueSplittingHeaderList::const_iterator"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 4
  ret %"struct.std::__1::pair.15"* %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind
declare void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind
declare i64 @_ZNK4absl11string_view4findEcm(%"class.absl::string_view"*, i8 signext, i64) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic24ValueSplittingHeaderListC2EPKN4spdy16Http2HeaderBlockE(%"class.quic::ValueSplittingHeaderList"* nocapture, %"class.spdy::Http2HeaderBlock"*) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList", %"class.quic::ValueSplittingHeaderList"* %0, i64 0, i32 0
  store %"class.spdy::Http2HeaderBlock"* %1, %"class.spdy::Http2HeaderBlock"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4quic24ValueSplittingHeaderList5beginEv(%"class.quic::ValueSplittingHeaderList::const_iterator"* noalias sret, %"class.quic::ValueSplittingHeaderList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spdy::Http2HeaderBlock::iterator", align 8
  %4 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList", %"class.quic::ValueSplittingHeaderList"* %1, i64 0, i32 0
  %5 = load %"class.spdy::Http2HeaderBlock"*, %"class.spdy::Http2HeaderBlock"** %4, align 8
  %6 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %7 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %6, align 8, !noalias !4
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %3, %"struct.std::__1::__list_node_base"* %7) #10
  %8 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 0
  store %"class.spdy::Http2HeaderBlock"* %5, %"class.spdy::Http2HeaderBlock"** %8, align 8
  %9 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 1
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ERKS1_(%"class.spdy::Http2HeaderBlock::iterator"* %9, %"class.spdy::Http2HeaderBlock::iterator"* nonnull dereferenceable(8) %3) #10
  %10 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 2
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 4
  %12 = bitcast %"struct.std::__1::pair.15"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false) #10
  call void @_ZN4quic24ValueSplittingHeaderList14const_iterator17UpdateHeaderFieldEv(%"class.quic::ValueSplittingHeaderList::const_iterator"* %0) #10
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4quic24ValueSplittingHeaderList3endEv(%"class.quic::ValueSplittingHeaderList::const_iterator"* noalias sret, %"class.quic::ValueSplittingHeaderList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spdy::Http2HeaderBlock::iterator", align 8
  %4 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList", %"class.quic::ValueSplittingHeaderList"* %1, i64 0, i32 0
  %5 = load %"class.spdy::Http2HeaderBlock"*, %"class.spdy::Http2HeaderBlock"** %4, align 8
  %6 = getelementptr inbounds %"class.spdy::Http2HeaderBlock", %"class.spdy::Http2HeaderBlock"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %3, %"struct.std::__1::__list_node_base"* %6) #10
  %7 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 0
  store %"class.spdy::Http2HeaderBlock"* %5, %"class.spdy::Http2HeaderBlock"** %7, align 8
  %8 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 1
  call void @_ZN4spdy16Http2HeaderBlock8iteratorC1ERKS1_(%"class.spdy::Http2HeaderBlock::iterator"* %8, %"class.spdy::Http2HeaderBlock::iterator"* nonnull dereferenceable(8) %3) #10
  %9 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 2
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.quic::ValueSplittingHeaderList::const_iterator", %"class.quic::ValueSplittingHeaderList::const_iterator"* %0, i64 0, i32 4
  %11 = bitcast %"struct.std::__1::pair.15"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #10
  call void @_ZN4quic24ValueSplittingHeaderList14const_iterator17UpdateHeaderFieldEv(%"class.quic::ValueSplittingHeaderList::const_iterator"* %0) #10
  call void @_ZN4spdy16Http2HeaderBlock8iteratorD1Ev(%"class.spdy::Http2HeaderBlock::iterator"* nonnull %3) #10
  ret void
}

declare void @_ZN4spdy16Http2HeaderBlock8iteratorC1ENSt3__121__list_const_iteratorINS2_4pairIN4absl11string_viewENS0_11HeaderValueEEEPvEE(%"class.spdy::Http2HeaderBlock::iterator"*, %"struct.std::__1::__list_node_base"*) unnamed_addr #1

declare dereferenceable(32) %"struct.std::__1::pair.15"* @_ZNK4spdy16Http2HeaderBlock11HeaderValue7as_pairEv(%"class.spdy::Http2HeaderBlock::HeaderValue"*) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: noreturn
declare void @_ZN4absl13base_internal18ThrowStdOutOfRangeEPKc(i8*) local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK4spdy16Http2HeaderBlock5beginEv: argument 0"}
!6 = distinct !{!6, !"_ZNK4spdy16Http2HeaderBlock5beginEv"}
