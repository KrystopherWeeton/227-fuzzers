; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_webgl_context_attributes.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_webgl_context_attributes.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.77", i32, [4 x i8], %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.213", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.247", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.254", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.170", %"class.std::__1::unique_ptr.193", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__cxx_atomic_impl.116" }
%"struct.std::__1::__cxx_atomic_impl.116" = type { %"struct.std::__1::__cxx_atomic_base_impl.117" }
%"struct.std::__1::__cxx_atomic_base_impl.117" = type { i64 }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::Worklist.159"* }
%"class.blink::Worklist.159" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::Worklist.166"* }
%"class.blink::Worklist.166" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.113" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.173", %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.187", [4 x i8] }>
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175", %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { i64 }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { float }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.196", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.205" }
%"class.WTF::Vector.205" = type { %"class.WTF::VectorBuffer.206" }
%"class.WTF::VectorBuffer.206" = type { %"class.WTF::VectorBufferBase.207" }
%"class.WTF::VectorBufferBase.207" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.221" }
%"class.WTF::VectorBuffer.221" = type { %"class.WTF::VectorBufferBase.222" }
%"class.WTF::VectorBufferBase.222" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.235" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.145"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.152"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.285" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.254" = type { %"struct.std::__1::__atomic_base.255" }
%"struct.std::__1::__atomic_base.255" = type { %"struct.std::__1::__cxx_atomic_impl.256" }
%"struct.std::__1::__cxx_atomic_impl.256" = type { %"struct.std::__1::__cxx_atomic_base_impl.257" }
%"struct.std::__1::__cxx_atomic_base_impl.257" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::WebGLContextAttributes" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], %"class.WTF::String", i8, i8, i8, i8, [4 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.24", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.71", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.258", %"class.std::__1::unique_ptr.263", %"class.blink::Persistent.269", %"class.blink::Persistent.273", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.8", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", i32, i32 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.24" = type { %"class.WTF::HashTable.25" }
%"class.WTF::HashTable.25" = type <{ %"struct.WTF::KeyValuePair.28"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.28" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.37", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.32", i8* }
%"class.WTF::HashMap.32" = type { %"class.WTF::HashTable.33" }
%"class.WTF::HashTable.33" = type <{ %"struct.WTF::KeyValuePair.36"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.36" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.37" = type { %"class.v8::PersistentValueMapBase.38" }
%"class.v8::PersistentValueMapBase.38" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.39", i8* }
%"class.WTF::HashMap.39" = type { %"class.WTF::HashTable.40" }
%"class.WTF::HashTable.40" = type <{ %"struct.WTF::KeyValuePair.43"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.43" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.44" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.55", %"class.WTF::Vector.61", i8, i32 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.61" = type { %"class.WTF::VectorBuffer.62" }
%"class.WTF::VectorBuffer.62" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.292, %"class.blink::Member.311", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.292 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.293", i32, i32, %"class.blink::Persistent.295" }
%"class.WTF::RefCounted.293" = type { %"class.base::RefCounted.294" }
%"class.base::RefCounted.294" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.295" = type { %"class.blink::PersistentBase.296" }
%"class.blink::PersistentBase.296" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.301" }
%"class.WTF::HashMap.301" = type { %"class.WTF::HashTable.302" }
%"class.WTF::HashTable.302" = type <{ %"struct.WTF::KeyValuePair.304"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.304" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.308" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.305" }
%"class.blink::MemberBase.305" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.308" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.308" = type { %"class.v8::TracedReference.309" }
%"class.v8::TracedReference.309" = type { %"class.v8::BasicTracedReference.310" }
%"class.v8::BasicTracedReference.310" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.258" = type { %"class.WTF::VectorBuffer.259" }
%"class.WTF::VectorBuffer.259" = type { %"class.WTF::VectorBufferBase.260" }
%"class.WTF::VectorBufferBase.260" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.269" = type { %"class.blink::PersistentBase.270" }
%"class.blink::PersistentBase.270" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.273" = type { %"class.blink::PersistentBase.274" }
%"class.blink::PersistentBase.274" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.279" }
%"class.WTF::Vector.279" = type { %"class.WTF::VectorBuffer.280" }
%"class.WTF::VectorBuffer.280" = type { %"class.WTF::VectorBufferBase.281" }
%"class.WTF::VectorBufferBase.281" = type { %"struct.std::__1::pair.282"*, i32, i32 }
%"struct.std::__1::pair.282" = type { %"class.blink::UntracedMember", %"class.blink::Member" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.283" }
%"class.blink::MemberBase.283" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.313" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::Boolean" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::Int32" = type { i8 }

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@_ZZN5blink24V8WebGLContextAttributes6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_22WebGLContextAttributesERNS_14ExceptionStateEE12kValidValues = internal constant [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"low-power\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"high-performance\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"WebGLPowerPreference\00", align 1
@_ZZN5blinkL35eternalV8WebGLContextAttributesKeysEPN2v87IsolateEE5kKeys = internal constant [10 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i32 0, i32 0)], align 16
@.str.5 = private unnamed_addr constant [6 x i8] c"alpha\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"antialias\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"depth\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"desynchronized\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"failIfMajorPerformanceCaveat\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"powerPreference\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"premultipliedAlpha\00", align 1
@.str.12 = private unnamed_addr constant [22 x i8] c"preserveDrawingBuffer\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"stencil\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"xrCompatible\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 10, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZZN5blinkL35eternalV8WebGLContextAttributesKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase18is_web_xr_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.16 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.17 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24V8WebGLContextAttributes6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_22WebGLContextAttributesERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::WebGLContextAttributes"* nocapture, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.blink::V8StringResource", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = icmp eq %"class.v8::Value"* %1, null
  br i1 %10, label %753, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.v8::Value"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 3
  %15 = icmp eq i64 %14, 1
  br i1 %15, label %16, label %32

16:                                               ; preds = %11
  %17 = add i64 %13, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = and i64 %13, -4294967296
  %21 = zext i32 %19 to i64
  %22 = or i64 %20, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load i16, i16* %24, align 2
  %26 = icmp eq i16 %25, 67
  br i1 %26, label %27, label %32

27:                                               ; preds = %16
  %28 = add i64 %13, 23
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = ashr i32 %30, 1
  switch i32 %31, label %32 [
    i32 5, label %753
    i32 3, label %753
  ]

32:                                               ; preds = %27, %16, %11
  %33 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #7
  br i1 %33, label %35, label %34

34:                                               ; preds = %32
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0)) #7
  br label %753

35:                                               ; preds = %32
  %36 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %37 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %38 = add i64 %37, 8
  %39 = inttoptr i64 %38 to %"class.blink::V8PerIsolateData"**
  %40 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %39, align 8
  %41 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %40, i8* bitcast ([10 x i8*]* @_ZZN5blinkL35eternalV8WebGLContextAttributesKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.313"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.313"*)) #7
  %42 = extractvalue { i64, %"class.v8::Eternal"* } %41, 1
  %43 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %43) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %0) #7
  %44 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #7
  %45 = bitcast %"class.v8::Eternal"* %42 to %"class.v8::Value"**
  %46 = load %"class.v8::Value"*, %"class.v8::Value"** %45, align 8
  %47 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %36, %"class.v8::Context"* %44, %"class.v8::Value"* %46) #7
  %48 = icmp eq %"class.v8::Value"* %47, null
  br i1 %48, label %49, label %55

49:                                               ; preds = %35
  %50 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #7
  %51 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %52 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %52, i64 5
  %54 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %53, align 8
  call void %54(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %50) #7
  br label %752

55:                                               ; preds = %35
  %56 = bitcast %"class.v8::Value"* %47 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %57, 3
  %59 = icmp eq i64 %58, 1
  br i1 %59, label %60, label %77

60:                                               ; preds = %55
  %61 = add i64 %57, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = and i64 %57, -4294967296
  %65 = zext i32 %63 to i64
  %66 = or i64 %64, %65
  %67 = add i64 %66, 7
  %68 = inttoptr i64 %67 to i16*
  %69 = load i16, i16* %68, align 2
  %70 = icmp eq i16 %69, 67
  br i1 %70, label %71, label %77

71:                                               ; preds = %60
  %72 = add i64 %57, 23
  %73 = inttoptr i64 %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = and i32 %74, -2
  %76 = icmp eq i32 %75, 10
  br i1 %76, label %93, label %77

77:                                               ; preds = %60, %55, %71
  %78 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %47) #7
  br i1 %78, label %79, label %82, !prof !2

79:                                               ; preds = %77
  %80 = bitcast %"class.v8::Value"* %47 to %"class.v8::Boolean"*
  %81 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %80) #7
  br label %84

82:                                               ; preds = %77
  %83 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %47, %"class.v8::Isolate"* %0) #7
  br label %84

84:                                               ; preds = %79, %82
  %85 = phi i1 [ %81, %79 ], [ %83, %82 ]
  %86 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %752

89:                                               ; preds = %84
  %90 = zext i1 %85 to i8
  %91 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 10
  store i8 %90, i8* %91, align 1
  %92 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 1
  store i8 1, i8* %92, align 8
  br label %93

93:                                               ; preds = %89, %71
  %94 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %42, i64 1, i32 0
  %95 = bitcast %"class.v8::Name"** %94 to %"class.v8::Value"**
  %96 = load %"class.v8::Value"*, %"class.v8::Value"** %95, align 8
  %97 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %36, %"class.v8::Context"* %44, %"class.v8::Value"* %96) #7
  %98 = icmp eq %"class.v8::Value"* %97, null
  br i1 %98, label %99, label %105

99:                                               ; preds = %93
  %100 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #7
  %101 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %102 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %102, i64 5
  %104 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %103, align 8
  call void %104(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %100) #7
  br label %752

105:                                              ; preds = %93
  %106 = bitcast %"class.v8::Value"* %97 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %127

110:                                              ; preds = %105
  %111 = add i64 %107, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %107, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %127

121:                                              ; preds = %110
  %122 = add i64 %107, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = and i32 %124, -2
  %126 = icmp eq i32 %125, 10
  br i1 %126, label %143, label %127

127:                                              ; preds = %110, %105, %121
  %128 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %97) #7
  br i1 %128, label %129, label %132, !prof !2

129:                                              ; preds = %127
  %130 = bitcast %"class.v8::Value"* %97 to %"class.v8::Boolean"*
  %131 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %130) #7
  br label %134

132:                                              ; preds = %127
  %133 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %97, %"class.v8::Isolate"* %0) #7
  br label %134

134:                                              ; preds = %129, %132
  %135 = phi i1 [ %131, %129 ], [ %133, %132 ]
  %136 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %137 = load i32, i32* %136, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %752

139:                                              ; preds = %134
  %140 = zext i1 %135 to i8
  %141 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 11
  store i8 %140, i8* %141, align 2
  %142 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 2
  store i8 1, i8* %142, align 1
  br label %143

143:                                              ; preds = %139, %121
  %144 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %42, i64 2, i32 0
  %145 = bitcast %"class.v8::Name"** %144 to %"class.v8::Value"**
  %146 = load %"class.v8::Value"*, %"class.v8::Value"** %145, align 8
  %147 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %36, %"class.v8::Context"* %44, %"class.v8::Value"* %146) #7
  %148 = icmp eq %"class.v8::Value"* %147, null
  br i1 %148, label %149, label %155

149:                                              ; preds = %143
  %150 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #7
  %151 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %152 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %152, i64 5
  %154 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %153, align 8
  call void %154(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %150) #7
  br label %752

155:                                              ; preds = %143
  %156 = bitcast %"class.v8::Value"* %147 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = and i64 %157, 3
  %159 = icmp eq i64 %158, 1
  br i1 %159, label %160, label %177

160:                                              ; preds = %155
  %161 = add i64 %157, -1
  %162 = inttoptr i64 %161 to i32*
  %163 = load i32, i32* %162, align 4
  %164 = and i64 %157, -4294967296
  %165 = zext i32 %163 to i64
  %166 = or i64 %164, %165
  %167 = add i64 %166, 7
  %168 = inttoptr i64 %167 to i16*
  %169 = load i16, i16* %168, align 2
  %170 = icmp eq i16 %169, 67
  br i1 %170, label %171, label %177

171:                                              ; preds = %160
  %172 = add i64 %157, 23
  %173 = inttoptr i64 %172 to i32*
  %174 = load i32, i32* %173, align 4
  %175 = and i32 %174, -2
  %176 = icmp eq i32 %175, 10
  br i1 %176, label %193, label %177

177:                                              ; preds = %160, %155, %171
  %178 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %147) #7
  br i1 %178, label %179, label %182, !prof !2

179:                                              ; preds = %177
  %180 = bitcast %"class.v8::Value"* %147 to %"class.v8::Boolean"*
  %181 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %180) #7
  br label %184

182:                                              ; preds = %177
  %183 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %147, %"class.v8::Isolate"* %0) #7
  br label %184

184:                                              ; preds = %179, %182
  %185 = phi i1 [ %181, %179 ], [ %183, %182 ]
  %186 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %187 = load i32, i32* %186, align 8
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %752

189:                                              ; preds = %184
  %190 = zext i1 %185 to i8
  %191 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 12
  store i8 %190, i8* %191, align 1
  %192 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 3
  store i8 1, i8* %192, align 2
  br label %193

193:                                              ; preds = %189, %171
  %194 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %42, i64 3, i32 0
  %195 = bitcast %"class.v8::Name"** %194 to %"class.v8::Value"**
  %196 = load %"class.v8::Value"*, %"class.v8::Value"** %195, align 8
  %197 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %36, %"class.v8::Context"* %44, %"class.v8::Value"* %196) #7
  %198 = icmp eq %"class.v8::Value"* %197, null
  br i1 %198, label %199, label %205

199:                                              ; preds = %193
  %200 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #7
  %201 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %202 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %201, align 8
  %203 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %202, i64 5
  %204 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %203, align 8
  call void %204(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %200) #7
  br label %752

205:                                              ; preds = %193
  %206 = bitcast %"class.v8::Value"* %197 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = and i64 %207, 3
  %209 = icmp eq i64 %208, 1
  br i1 %209, label %210, label %227

210:                                              ; preds = %205
  %211 = add i64 %207, -1
  %212 = inttoptr i64 %211 to i32*
  %213 = load i32, i32* %212, align 4
  %214 = and i64 %207, -4294967296
  %215 = zext i32 %213 to i64
  %216 = or i64 %214, %215
  %217 = add i64 %216, 7
  %218 = inttoptr i64 %217 to i16*
  %219 = load i16, i16* %218, align 2
  %220 = icmp eq i16 %219, 67
  br i1 %220, label %221, label %227

221:                                              ; preds = %210
  %222 = add i64 %207, 23
  %223 = inttoptr i64 %222 to i32*
  %224 = load i32, i32* %223, align 4
  %225 = and i32 %224, -2
  %226 = icmp eq i32 %225, 10
  br i1 %226, label %243, label %227

227:                                              ; preds = %210, %205, %221
  %228 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %197) #7
  br i1 %228, label %229, label %232, !prof !2

229:                                              ; preds = %227
  %230 = bitcast %"class.v8::Value"* %197 to %"class.v8::Boolean"*
  %231 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %230) #7
  br label %234

232:                                              ; preds = %227
  %233 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %197, %"class.v8::Isolate"* %0) #7
  br label %234

234:                                              ; preds = %229, %232
  %235 = phi i1 [ %231, %229 ], [ %233, %232 ]
  %236 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %237 = load i32, i32* %236, align 8
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %752

239:                                              ; preds = %234
  %240 = zext i1 %235 to i8
  %241 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 13
  store i8 %240, i8* %241, align 4
  %242 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 4
  store i8 1, i8* %242, align 1
  br label %243

243:                                              ; preds = %239, %221
  %244 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %42, i64 4, i32 0
  %245 = bitcast %"class.v8::Name"** %244 to %"class.v8::Value"**
  %246 = load %"class.v8::Value"*, %"class.v8::Value"** %245, align 8
  %247 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %36, %"class.v8::Context"* %44, %"class.v8::Value"* %246) #7
  %248 = icmp eq %"class.v8::Value"* %247, null
  br i1 %248, label %249, label %255

249:                                              ; preds = %243
  %250 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #7
  %251 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %252 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %251, align 8
  %253 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %252, i64 5
  %254 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %253, align 8
  call void %254(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %250) #7
  br label %752

255:                                              ; preds = %243
  %256 = bitcast %"class.v8::Value"* %247 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = and i64 %257, 3
  %259 = icmp eq i64 %258, 1
  br i1 %259, label %260, label %277

260:                                              ; preds = %255
  %261 = add i64 %257, -1
  %262 = inttoptr i64 %261 to i32*
  %263 = load i32, i32* %262, align 4
  %264 = and i64 %257, -4294967296
  %265 = zext i32 %263 to i64
  %266 = or i64 %264, %265
  %267 = add i64 %266, 7
  %268 = inttoptr i64 %267 to i16*
  %269 = load i16, i16* %268, align 2
  %270 = icmp eq i16 %269, 67
  br i1 %270, label %271, label %277

271:                                              ; preds = %260
  %272 = add i64 %257, 23
  %273 = inttoptr i64 %272 to i32*
  %274 = load i32, i32* %273, align 4
  %275 = and i32 %274, -2
  %276 = icmp eq i32 %275, 10
  br i1 %276, label %293, label %277

277:                                              ; preds = %260, %255, %271
  %278 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %247) #7
  br i1 %278, label %279, label %282, !prof !2

279:                                              ; preds = %277
  %280 = bitcast %"class.v8::Value"* %247 to %"class.v8::Boolean"*
  %281 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %280) #7
  br label %284

282:                                              ; preds = %277
  %283 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %247, %"class.v8::Isolate"* %0) #7
  br label %284

284:                                              ; preds = %279, %282
  %285 = phi i1 [ %281, %279 ], [ %283, %282 ]
  %286 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %287 = load i32, i32* %286, align 8
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %752

289:                                              ; preds = %284
  %290 = zext i1 %285 to i8
  %291 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 14
  store i8 %290, i8* %291, align 1
  %292 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 5
  store i8 1, i8* %292, align 4
  br label %293

293:                                              ; preds = %289, %271
  %294 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %42, i64 5, i32 0
  %295 = bitcast %"class.v8::Name"** %294 to %"class.v8::Value"**
  %296 = load %"class.v8::Value"*, %"class.v8::Value"** %295, align 8
  %297 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %36, %"class.v8::Context"* %44, %"class.v8::Value"* %296) #7
  %298 = icmp eq %"class.v8::Value"* %297, null
  br i1 %298, label %299, label %305

299:                                              ; preds = %293
  %300 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #7
  %301 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %302 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %301, align 8
  %303 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %302, i64 5
  %304 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %303, align 8
  call void %304(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %300) #7
  br label %752

305:                                              ; preds = %293
  %306 = bitcast %"class.v8::Value"* %297 to i64*
  %307 = load i64, i64* %306, align 8
  %308 = and i64 %307, 3
  %309 = icmp eq i64 %308, 1
  br i1 %309, label %310, label %327

310:                                              ; preds = %305
  %311 = add i64 %307, -1
  %312 = inttoptr i64 %311 to i32*
  %313 = load i32, i32* %312, align 4
  %314 = and i64 %307, -4294967296
  %315 = zext i32 %313 to i64
  %316 = or i64 %314, %315
  %317 = add i64 %316, 7
  %318 = inttoptr i64 %317 to i16*
  %319 = load i16, i16* %318, align 2
  %320 = icmp eq i16 %319, 67
  br i1 %320, label %321, label %327

321:                                              ; preds = %310
  %322 = add i64 %307, 23
  %323 = inttoptr i64 %322 to i32*
  %324 = load i32, i32* %323, align 4
  %325 = and i32 %324, -2
  %326 = icmp eq i32 %325, 10
  br i1 %326, label %549, label %327

327:                                              ; preds = %310, %305, %321
  %328 = bitcast %"class.blink::V8StringResource"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %328) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %328, i8 -86, i64 152, i1 false)
  %329 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %297, %"class.v8::Value"** %329, align 8
  %330 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 1
  store i32 0, i32* %330, align 8
  %331 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %331, align 8
  %332 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1
  %333 = bitcast %"class.std::__1::unique_ptr"* %332 to i64*
  store i64 0, i64* %333, align 8
  %334 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %7) #7
  br i1 %334, label %351, label %335

335:                                              ; preds = %327
  %336 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %337 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %337) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %337, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %336) #7
  %338 = load %"class.v8::Value"*, %"class.v8::Value"** %329, align 8
  %339 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %336) #7
  %340 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %338, %"class.v8::Context"* %339) #7
  %341 = ptrtoint %"class.v8::String"* %340 to i64
  %342 = bitcast %"class.blink::V8StringResource"* %7 to i64*
  store i64 %341, i64* %342, align 8
  %343 = icmp eq %"class.v8::String"* %340, null
  br i1 %343, label %345, label %344

344:                                              ; preds = %335
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %337) #7
  br label %351

345:                                              ; preds = %335
  %346 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %347 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %348 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %347, align 8
  %349 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %348, i64 5
  %350 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %349, align 8
  call void %350(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %346) #7
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %337) #7
  br label %527

351:                                              ; preds = %327, %344
  %352 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %352) #7
  %353 = load %"class.v8::Value"*, %"class.v8::Value"** %329, align 8
  %354 = icmp eq %"class.v8::Value"* %353, null
  br i1 %354, label %359, label %355, !prof !3

355:                                              ; preds = %351
  %356 = bitcast %"class.v8::Value"* %353 to %"class.v8::String"*
  %357 = load i32, i32* %330, align 8
  %358 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %356, i32 %357) #7
  br label %379

359:                                              ; preds = %351
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %331, align 8
  %361 = icmp eq %"class.WTF::StringImpl"* %360, null
  br i1 %361, label %379, label %362

362:                                              ; preds = %359
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = load atomic i32, i32* %363 monotonic, align 4
  %365 = and i32 %364, 2
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %379

367:                                              ; preds = %362
  %368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %369 = load i32, i32* %368, align 4
  %370 = zext i32 %369 to i33
  %371 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %370, i33 1) #7
  %372 = extractvalue { i33, i1 } %371, 1
  %373 = extractvalue { i33, i1 } %371, 0
  %374 = icmp slt i33 %373, 0
  %375 = or i1 %372, %374
  br i1 %375, label %376, label %377, !prof !3

376:                                              ; preds = %367
  call void @llvm.trap() #7
  unreachable

377:                                              ; preds = %367
  %378 = trunc i33 %373 to i32
  store i32 %378, i32* %368, align 4
  br label %379

379:                                              ; preds = %355, %359, %362, %377
  %380 = phi %"class.WTF::StringImpl"* [ %358, %355 ], [ null, %359 ], [ %360, %362 ], [ %360, %377 ]
  %381 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %380, %"class.WTF::StringImpl"** %381, align 8
  %382 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %382) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 20) #7
  %383 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %8, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink24V8WebGLContextAttributes6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_22WebGLContextAttributesERNS_14ExceptionStateEE12kValidValues, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %384 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %385 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %384, align 8
  %386 = icmp eq %"class.WTF::StringImpl"* %385, null
  br i1 %386, label %400, label %387

387:                                              ; preds = %379
  %388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %385, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %389 = load atomic i32, i32* %388 monotonic, align 4
  %390 = and i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %385, i64 0, i32 0
  %393 = load i32, i32* %392, align 4
  br i1 %391, label %394, label %396

394:                                              ; preds = %387
  %395 = add i32 %393, -1
  store i32 %395, i32* %392, align 4
  br label %396

396:                                              ; preds = %394, %387
  %397 = phi i32 [ %395, %394 ], [ %393, %387 ]
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %399, label %400

399:                                              ; preds = %396
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %385) #7
  br label %400

400:                                              ; preds = %379, %396, %399
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %382) #7
  %401 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %381, align 8
  %402 = icmp eq %"class.WTF::StringImpl"* %401, null
  br i1 %402, label %416, label %403

403:                                              ; preds = %400
  %404 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %401, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %405 = load atomic i32, i32* %404 monotonic, align 4
  %406 = and i32 %405, 2
  %407 = icmp eq i32 %406, 0
  %408 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %401, i64 0, i32 0
  %409 = load i32, i32* %408, align 4
  br i1 %407, label %410, label %412

410:                                              ; preds = %403
  %411 = add i32 %409, -1
  store i32 %411, i32* %408, align 4
  br label %412

412:                                              ; preds = %410, %403
  %413 = phi i32 [ %411, %410 ], [ %409, %403 ]
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %415, label %416

415:                                              ; preds = %412
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %401) #7
  br label %416

416:                                              ; preds = %400, %412, %415
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %352) #7
  br i1 %383, label %417, label %527

417:                                              ; preds = %416
  %418 = load %"class.v8::Value"*, %"class.v8::Value"** %329, align 8
  %419 = icmp eq %"class.v8::Value"* %418, null
  br i1 %419, label %420, label %444, !prof !3

420:                                              ; preds = %417
  %421 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %331, align 8
  %422 = icmp eq %"class.WTF::StringImpl"* %421, null
  br i1 %422, label %423, label %425

423:                                              ; preds = %420
  %424 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 16
  br label %469

425:                                              ; preds = %420
  %426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %427 = load atomic i32, i32* %426 monotonic, align 4
  %428 = and i32 %427, 2
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %430, label %442

430:                                              ; preds = %425
  %431 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 0
  %432 = load i32, i32* %431, align 4
  %433 = zext i32 %432 to i33
  %434 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %433, i33 1) #7
  %435 = extractvalue { i33, i1 } %434, 1
  %436 = extractvalue { i33, i1 } %434, 0
  %437 = icmp slt i33 %436, 0
  %438 = or i1 %435, %437
  br i1 %438, label %439, label %440, !prof !3

439:                                              ; preds = %430
  call void @llvm.trap() #7
  unreachable

440:                                              ; preds = %430
  %441 = trunc i33 %436 to i32
  store i32 %441, i32* %431, align 4
  br label %442

442:                                              ; preds = %425, %440
  %443 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 16
  br label %450

444:                                              ; preds = %417
  %445 = bitcast %"class.v8::Value"* %418 to %"class.v8::String"*
  %446 = load i32, i32* %330, align 8
  %447 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %445, i32 %446) #7
  %448 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 16
  %449 = icmp eq %"class.WTF::StringImpl"* %447, null
  br i1 %449, label %469, label %450

450:                                              ; preds = %442, %444
  %451 = phi %"class.WTF::String"* [ %443, %442 ], [ %448, %444 ]
  %452 = phi %"class.WTF::StringImpl"* [ %421, %442 ], [ %447, %444 ]
  %453 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %454 = load atomic i32, i32* %453 monotonic, align 4
  %455 = and i32 %454, 2
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %457, label %469

457:                                              ; preds = %450
  %458 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 0
  %459 = load i32, i32* %458, align 4
  %460 = zext i32 %459 to i33
  %461 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %460, i33 1) #7
  %462 = extractvalue { i33, i1 } %461, 1
  %463 = extractvalue { i33, i1 } %461, 0
  %464 = icmp slt i33 %463, 0
  %465 = or i1 %462, %464
  br i1 %465, label %466, label %467, !prof !3

466:                                              ; preds = %457
  call void @llvm.trap() #7
  unreachable

467:                                              ; preds = %457
  %468 = trunc i33 %463 to i32
  store i32 %468, i32* %458, align 4
  br label %469

469:                                              ; preds = %423, %467, %450, %444
  %470 = phi i1 [ false, %467 ], [ false, %450 ], [ true, %444 ], [ true, %423 ]
  %471 = phi %"class.WTF::String"* [ %451, %467 ], [ %451, %450 ], [ %448, %444 ], [ %424, %423 ]
  %472 = phi %"class.WTF::StringImpl"* [ %452, %467 ], [ %452, %450 ], [ null, %444 ], [ null, %423 ]
  %473 = ptrtoint %"class.WTF::StringImpl"* %472 to i64
  %474 = bitcast %"class.WTF::String"* %471 to i64*
  %475 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %471, i64 0, i32 0, i32 0
  %476 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %475, align 8
  store i64 %473, i64* %474, align 8
  %477 = icmp eq %"class.WTF::StringImpl"* %476, null
  br i1 %477, label %491, label %478

478:                                              ; preds = %469
  %479 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %476, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %480 = load atomic i32, i32* %479 monotonic, align 4
  %481 = and i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %476, i64 0, i32 0
  %484 = load i32, i32* %483, align 4
  br i1 %482, label %485, label %487

485:                                              ; preds = %478
  %486 = add i32 %484, -1
  store i32 %486, i32* %483, align 4
  br label %487

487:                                              ; preds = %485, %478
  %488 = phi i32 [ %486, %485 ], [ %484, %478 ]
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %491

490:                                              ; preds = %487
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %476) #7
  br label %491

491:                                              ; preds = %469, %487, %490
  br i1 %470, label %505, label %492

492:                                              ; preds = %491
  %493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %472, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %494 = load atomic i32, i32* %493 monotonic, align 4
  %495 = and i32 %494, 2
  %496 = icmp eq i32 %495, 0
  %497 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %472, i64 0, i32 0
  %498 = load i32, i32* %497, align 4
  br i1 %496, label %499, label %501

499:                                              ; preds = %492
  %500 = add i32 %498, -1
  store i32 %500, i32* %497, align 4
  br label %501

501:                                              ; preds = %499, %492
  %502 = phi i32 [ %500, %499 ], [ %498, %492 ]
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %504, label %505

504:                                              ; preds = %501
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %472) #7
  br label %505

505:                                              ; preds = %491, %501, %504
  %506 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %507 = load i8*, i8** %506, align 8
  store i8* null, i8** %506, align 8
  %508 = icmp eq i8* %507, null
  br i1 %508, label %510, label %509

509:                                              ; preds = %505
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %507) #7
  br label %510

510:                                              ; preds = %509, %505
  %511 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %331, align 8
  %512 = icmp eq %"class.WTF::StringImpl"* %511, null
  br i1 %512, label %526, label %513

513:                                              ; preds = %510
  %514 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %511, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %515 = load atomic i32, i32* %514 monotonic, align 4
  %516 = and i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %511, i64 0, i32 0
  %519 = load i32, i32* %518, align 4
  br i1 %517, label %520, label %522

520:                                              ; preds = %513
  %521 = add i32 %519, -1
  store i32 %521, i32* %518, align 4
  br label %522

522:                                              ; preds = %520, %513
  %523 = phi i32 [ %521, %520 ], [ %519, %513 ]
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %525, label %526

525:                                              ; preds = %522
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %511) #7
  br label %526

526:                                              ; preds = %510, %522, %525
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %328) #7
  br label %549

527:                                              ; preds = %345, %416
  %528 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %529 = load i8*, i8** %528, align 8
  store i8* null, i8** %528, align 8
  %530 = icmp eq i8* %529, null
  br i1 %530, label %532, label %531

531:                                              ; preds = %527
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %529) #7
  br label %532

532:                                              ; preds = %531, %527
  %533 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %331, align 8
  %534 = icmp eq %"class.WTF::StringImpl"* %533, null
  br i1 %534, label %548, label %535

535:                                              ; preds = %532
  %536 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %533, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %537 = load atomic i32, i32* %536 monotonic, align 4
  %538 = and i32 %537, 2
  %539 = icmp eq i32 %538, 0
  %540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %533, i64 0, i32 0
  %541 = load i32, i32* %540, align 4
  br i1 %539, label %542, label %544

542:                                              ; preds = %535
  %543 = add i32 %541, -1
  store i32 %543, i32* %540, align 4
  br label %544

544:                                              ; preds = %542, %535
  %545 = phi i32 [ %543, %542 ], [ %541, %535 ]
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %547, label %548

547:                                              ; preds = %544
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %533) #7
  br label %548

548:                                              ; preds = %532, %544, %547
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %328) #7
  br label %752

549:                                              ; preds = %526, %321
  %550 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %42, i64 6, i32 0
  %551 = bitcast %"class.v8::Name"** %550 to %"class.v8::Value"**
  %552 = load %"class.v8::Value"*, %"class.v8::Value"** %551, align 8
  %553 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %36, %"class.v8::Context"* %44, %"class.v8::Value"* %552) #7
  %554 = icmp eq %"class.v8::Value"* %553, null
  br i1 %554, label %555, label %561

555:                                              ; preds = %549
  %556 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #7
  %557 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %558 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %557, align 8
  %559 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %558, i64 5
  %560 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %559, align 8
  call void %560(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %556) #7
  br label %752

561:                                              ; preds = %549
  %562 = bitcast %"class.v8::Value"* %553 to i64*
  %563 = load i64, i64* %562, align 8
  %564 = and i64 %563, 3
  %565 = icmp eq i64 %564, 1
  br i1 %565, label %566, label %583

566:                                              ; preds = %561
  %567 = add i64 %563, -1
  %568 = inttoptr i64 %567 to i32*
  %569 = load i32, i32* %568, align 4
  %570 = and i64 %563, -4294967296
  %571 = zext i32 %569 to i64
  %572 = or i64 %570, %571
  %573 = add i64 %572, 7
  %574 = inttoptr i64 %573 to i16*
  %575 = load i16, i16* %574, align 2
  %576 = icmp eq i16 %575, 67
  br i1 %576, label %577, label %583

577:                                              ; preds = %566
  %578 = add i64 %563, 23
  %579 = inttoptr i64 %578 to i32*
  %580 = load i32, i32* %579, align 4
  %581 = and i32 %580, -2
  %582 = icmp eq i32 %581, 10
  br i1 %582, label %599, label %583

583:                                              ; preds = %566, %561, %577
  %584 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %553) #7
  br i1 %584, label %585, label %588, !prof !2

585:                                              ; preds = %583
  %586 = bitcast %"class.v8::Value"* %553 to %"class.v8::Boolean"*
  %587 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %586) #7
  br label %590

588:                                              ; preds = %583
  %589 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %553, %"class.v8::Isolate"* %0) #7
  br label %590

590:                                              ; preds = %585, %588
  %591 = phi i1 [ %587, %585 ], [ %589, %588 ]
  %592 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %593 = load i32, i32* %592, align 8
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %595, label %752

595:                                              ; preds = %590
  %596 = zext i1 %591 to i8
  %597 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 17
  store i8 %596, i8* %597, align 8
  %598 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 6
  store i8 1, i8* %598, align 1
  br label %599

599:                                              ; preds = %595, %577
  %600 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %42, i64 7, i32 0
  %601 = bitcast %"class.v8::Name"** %600 to %"class.v8::Value"**
  %602 = load %"class.v8::Value"*, %"class.v8::Value"** %601, align 8
  %603 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %36, %"class.v8::Context"* %44, %"class.v8::Value"* %602) #7
  %604 = icmp eq %"class.v8::Value"* %603, null
  br i1 %604, label %605, label %611

605:                                              ; preds = %599
  %606 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #7
  %607 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %608 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %607, align 8
  %609 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %608, i64 5
  %610 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %609, align 8
  call void %610(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %606) #7
  br label %752

611:                                              ; preds = %599
  %612 = bitcast %"class.v8::Value"* %603 to i64*
  %613 = load i64, i64* %612, align 8
  %614 = and i64 %613, 3
  %615 = icmp eq i64 %614, 1
  br i1 %615, label %616, label %633

616:                                              ; preds = %611
  %617 = add i64 %613, -1
  %618 = inttoptr i64 %617 to i32*
  %619 = load i32, i32* %618, align 4
  %620 = and i64 %613, -4294967296
  %621 = zext i32 %619 to i64
  %622 = or i64 %620, %621
  %623 = add i64 %622, 7
  %624 = inttoptr i64 %623 to i16*
  %625 = load i16, i16* %624, align 2
  %626 = icmp eq i16 %625, 67
  br i1 %626, label %627, label %633

627:                                              ; preds = %616
  %628 = add i64 %613, 23
  %629 = inttoptr i64 %628 to i32*
  %630 = load i32, i32* %629, align 4
  %631 = and i32 %630, -2
  %632 = icmp eq i32 %631, 10
  br i1 %632, label %649, label %633

633:                                              ; preds = %616, %611, %627
  %634 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %603) #7
  br i1 %634, label %635, label %638, !prof !2

635:                                              ; preds = %633
  %636 = bitcast %"class.v8::Value"* %603 to %"class.v8::Boolean"*
  %637 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %636) #7
  br label %640

638:                                              ; preds = %633
  %639 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %603, %"class.v8::Isolate"* %0) #7
  br label %640

640:                                              ; preds = %635, %638
  %641 = phi i1 [ %637, %635 ], [ %639, %638 ]
  %642 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %643 = load i32, i32* %642, align 8
  %644 = icmp eq i32 %643, 0
  br i1 %644, label %645, label %752

645:                                              ; preds = %640
  %646 = zext i1 %641 to i8
  %647 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 18
  store i8 %646, i8* %647, align 1
  %648 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 7
  store i8 1, i8* %648, align 2
  br label %649

649:                                              ; preds = %645, %627
  %650 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %42, i64 8, i32 0
  %651 = bitcast %"class.v8::Name"** %650 to %"class.v8::Value"**
  %652 = load %"class.v8::Value"*, %"class.v8::Value"** %651, align 8
  %653 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %36, %"class.v8::Context"* %44, %"class.v8::Value"* %652) #7
  %654 = icmp eq %"class.v8::Value"* %653, null
  br i1 %654, label %655, label %661

655:                                              ; preds = %649
  %656 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #7
  %657 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %658 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %657, align 8
  %659 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %658, i64 5
  %660 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %659, align 8
  call void %660(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %656) #7
  br label %752

661:                                              ; preds = %649
  %662 = bitcast %"class.v8::Value"* %653 to i64*
  %663 = load i64, i64* %662, align 8
  %664 = and i64 %663, 3
  %665 = icmp eq i64 %664, 1
  br i1 %665, label %666, label %683

666:                                              ; preds = %661
  %667 = add i64 %663, -1
  %668 = inttoptr i64 %667 to i32*
  %669 = load i32, i32* %668, align 4
  %670 = and i64 %663, -4294967296
  %671 = zext i32 %669 to i64
  %672 = or i64 %670, %671
  %673 = add i64 %672, 7
  %674 = inttoptr i64 %673 to i16*
  %675 = load i16, i16* %674, align 2
  %676 = icmp eq i16 %675, 67
  br i1 %676, label %677, label %683

677:                                              ; preds = %666
  %678 = add i64 %663, 23
  %679 = inttoptr i64 %678 to i32*
  %680 = load i32, i32* %679, align 4
  %681 = and i32 %680, -2
  %682 = icmp eq i32 %681, 10
  br i1 %682, label %699, label %683

683:                                              ; preds = %666, %661, %677
  %684 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %653) #7
  br i1 %684, label %685, label %688, !prof !2

685:                                              ; preds = %683
  %686 = bitcast %"class.v8::Value"* %653 to %"class.v8::Boolean"*
  %687 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %686) #7
  br label %690

688:                                              ; preds = %683
  %689 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %653, %"class.v8::Isolate"* %0) #7
  br label %690

690:                                              ; preds = %685, %688
  %691 = phi i1 [ %687, %685 ], [ %689, %688 ]
  %692 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %693 = load i32, i32* %692, align 8
  %694 = icmp eq i32 %693, 0
  br i1 %694, label %695, label %752

695:                                              ; preds = %690
  %696 = zext i1 %691 to i8
  %697 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 19
  store i8 %696, i8* %697, align 2
  %698 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 8
  store i8 1, i8* %698, align 1
  br label %699

699:                                              ; preds = %695, %677
  %700 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase18is_web_xr_enabled_E, align 1, !range !4
  %701 = icmp eq i8 %700, 0
  br i1 %701, label %752, label %702

702:                                              ; preds = %699
  %703 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %42, i64 9, i32 0
  %704 = bitcast %"class.v8::Name"** %703 to %"class.v8::Value"**
  %705 = load %"class.v8::Value"*, %"class.v8::Value"** %704, align 8
  %706 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %36, %"class.v8::Context"* %44, %"class.v8::Value"* %705) #7
  %707 = icmp eq %"class.v8::Value"* %706, null
  br i1 %707, label %708, label %714

708:                                              ; preds = %702
  %709 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #7
  %710 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %711 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %710, align 8
  %712 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %711, i64 5
  %713 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %712, align 8
  call void %713(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %709) #7
  br label %752

714:                                              ; preds = %702
  %715 = bitcast %"class.v8::Value"* %706 to i64*
  %716 = load i64, i64* %715, align 8
  %717 = and i64 %716, 3
  %718 = icmp eq i64 %717, 1
  br i1 %718, label %719, label %736

719:                                              ; preds = %714
  %720 = add i64 %716, -1
  %721 = inttoptr i64 %720 to i32*
  %722 = load i32, i32* %721, align 4
  %723 = and i64 %716, -4294967296
  %724 = zext i32 %722 to i64
  %725 = or i64 %723, %724
  %726 = add i64 %725, 7
  %727 = inttoptr i64 %726 to i16*
  %728 = load i16, i16* %727, align 2
  %729 = icmp eq i16 %728, 67
  br i1 %729, label %730, label %736

730:                                              ; preds = %719
  %731 = add i64 %716, 23
  %732 = inttoptr i64 %731 to i32*
  %733 = load i32, i32* %732, align 4
  %734 = and i32 %733, -2
  %735 = icmp eq i32 %734, 10
  br i1 %735, label %752, label %736

736:                                              ; preds = %719, %714, %730
  %737 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %706) #7
  br i1 %737, label %738, label %741, !prof !2

738:                                              ; preds = %736
  %739 = bitcast %"class.v8::Value"* %706 to %"class.v8::Boolean"*
  %740 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %739) #7
  br label %743

741:                                              ; preds = %736
  %742 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %706, %"class.v8::Isolate"* %0) #7
  br label %743

743:                                              ; preds = %738, %741
  %744 = phi i1 [ %740, %738 ], [ %742, %741 ]
  %745 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %746 = load i32, i32* %745, align 8
  %747 = icmp eq i32 %746, 0
  br i1 %747, label %748, label %752

748:                                              ; preds = %743
  %749 = zext i1 %744 to i8
  %750 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 20
  store i8 %749, i8* %750, align 1
  %751 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %2, i64 0, i32 9
  store i8 1, i8* %751, align 8
  br label %752

752:                                              ; preds = %743, %699, %690, %640, %590, %284, %234, %184, %134, %84, %99, %199, %299, %548, %605, %708, %730, %748, %655, %555, %249, %149, %49
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %43) #7
  br label %753

753:                                              ; preds = %27, %27, %4, %752, %34
  ret void
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), i8**, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink22WebGLContextAttributes8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::WebGLContextAttributes"* nocapture readonly, %"class.v8::Object"* nocapture readnone, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #7
  %5 = tail call zeroext i1 @_ZN5blink26toV8WebGLContextAttributesEPKNS_22WebGLContextAttributesEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::WebGLContextAttributes"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* undef, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink26toV8WebGLContextAttributesEPKNS_22WebGLContextAttributesEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::WebGLContextAttributes"* nocapture readonly, %"class.v8::Object"*, %"class.v8::Object"* nocapture readnone, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %7 = add i64 %6, 8
  %8 = inttoptr i64 %7 to %"class.blink::V8PerIsolateData"**
  %9 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %8, align 8
  %10 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %9, i8* bitcast ([10 x i8*]* @_ZZN5blinkL35eternalV8WebGLContextAttributesKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.313"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.313"*)) #7
  %11 = extractvalue { i64, %"class.v8::Eternal"* } %10, 1
  %12 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #7
  %13 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %0, i64 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %0, i64 0, i32 10
  %18 = load i8, i8* %17, align 1, !range !4
  %19 = icmp eq i8 %18, 0
  %20 = select i1 %19, i64 192, i64 184
  %21 = add i64 %20, %6
  br label %24

22:                                               ; preds = %4
  %23 = add i64 %6, 184
  br label %24

24:                                               ; preds = %16, %22
  %25 = phi i64 [ %21, %16 ], [ %23, %22 ]
  %26 = inttoptr i64 %25 to %"class.v8::Value"*
  %27 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 0, i32 0
  %28 = load %"class.v8::Name"*, %"class.v8::Name"** %27, align 8
  %29 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %28, %"class.v8::Value"* %26) #7
  %30 = trunc i16 %29 to i8
  %31 = icmp ne i8 %30, 0
  %32 = icmp ugt i16 %29, 255
  %33 = and i1 %32, %31
  br i1 %33, label %34, label %242

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %0, i64 0, i32 2
  %36 = load i8, i8* %35, align 1, !range !4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %0, i64 0, i32 11
  %40 = load i8, i8* %39, align 2, !range !4
  %41 = icmp eq i8 %40, 0
  %42 = select i1 %41, i64 192, i64 184
  %43 = add i64 %42, %6
  br label %46

44:                                               ; preds = %34
  %45 = add i64 %6, 184
  br label %46

46:                                               ; preds = %38, %44
  %47 = phi i64 [ %43, %38 ], [ %45, %44 ]
  %48 = inttoptr i64 %47 to %"class.v8::Value"*
  %49 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 1, i32 0
  %50 = load %"class.v8::Name"*, %"class.v8::Name"** %49, align 8
  %51 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %50, %"class.v8::Value"* %48) #7
  %52 = trunc i16 %51 to i8
  %53 = icmp ne i8 %52, 0
  %54 = icmp ugt i16 %51, 255
  %55 = and i1 %54, %53
  br i1 %55, label %56, label %242

56:                                               ; preds = %46
  %57 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %0, i64 0, i32 3
  %58 = load i8, i8* %57, align 2, !range !4
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %0, i64 0, i32 12
  %62 = load i8, i8* %61, align 1, !range !4
  %63 = icmp eq i8 %62, 0
  %64 = select i1 %63, i64 192, i64 184
  %65 = add i64 %64, %6
  br label %68

66:                                               ; preds = %56
  %67 = add i64 %6, 184
  br label %68

68:                                               ; preds = %60, %66
  %69 = phi i64 [ %65, %60 ], [ %67, %66 ]
  %70 = inttoptr i64 %69 to %"class.v8::Value"*
  %71 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 2, i32 0
  %72 = load %"class.v8::Name"*, %"class.v8::Name"** %71, align 8
  %73 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %72, %"class.v8::Value"* %70) #7
  %74 = trunc i16 %73 to i8
  %75 = icmp ne i8 %74, 0
  %76 = icmp ugt i16 %73, 255
  %77 = and i1 %76, %75
  br i1 %77, label %78, label %242

78:                                               ; preds = %68
  %79 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %0, i64 0, i32 4
  %80 = load i8, i8* %79, align 1, !range !4
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %88, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %0, i64 0, i32 13
  %84 = load i8, i8* %83, align 4, !range !4
  %85 = icmp eq i8 %84, 0
  %86 = select i1 %85, i64 192, i64 184
  %87 = add i64 %86, %6
  br label %90

88:                                               ; preds = %78
  %89 = add i64 %6, 192
  br label %90

90:                                               ; preds = %82, %88
  %91 = phi i64 [ %87, %82 ], [ %89, %88 ]
  %92 = inttoptr i64 %91 to %"class.v8::Value"*
  %93 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 3, i32 0
  %94 = load %"class.v8::Name"*, %"class.v8::Name"** %93, align 8
  %95 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %94, %"class.v8::Value"* %92) #7
  %96 = trunc i16 %95 to i8
  %97 = icmp ne i8 %96, 0
  %98 = icmp ugt i16 %95, 255
  %99 = and i1 %98, %97
  br i1 %99, label %100, label %242

100:                                              ; preds = %90
  %101 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %0, i64 0, i32 5
  %102 = load i8, i8* %101, align 4, !range !4
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %110, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %0, i64 0, i32 14
  %106 = load i8, i8* %105, align 1, !range !4
  %107 = icmp eq i8 %106, 0
  %108 = select i1 %107, i64 192, i64 184
  %109 = add i64 %108, %6
  br label %112

110:                                              ; preds = %100
  %111 = add i64 %6, 192
  br label %112

112:                                              ; preds = %104, %110
  %113 = phi i64 [ %109, %104 ], [ %111, %110 ]
  %114 = inttoptr i64 %113 to %"class.v8::Value"*
  %115 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 4, i32 0
  %116 = load %"class.v8::Name"*, %"class.v8::Name"** %115, align 8
  %117 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %116, %"class.v8::Value"* %114) #7
  %118 = trunc i16 %117 to i8
  %119 = icmp ne i8 %118, 0
  %120 = icmp ugt i16 %117, 255
  %121 = and i1 %120, %119
  br i1 %121, label %122, label %242

122:                                              ; preds = %112
  %123 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %0, i64 0, i32 16, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %136, label %126

126:                                              ; preds = %122
  %127 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #7
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %124, %"class.WTF::StringImpl"** %128, align 8
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 1
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %133 = bitcast i8** %132 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %131, %"class.WTF::StringImpl"** %133, align 8
  %134 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %130, i32* %134, align 8
  %135 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #7
  br label %140

136:                                              ; preds = %122
  %137 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i32 0, i32 7) #7
  %138 = icmp eq %"class.v8::String"* %137, null
  br i1 %138, label %139, label %140, !prof !3

139:                                              ; preds = %136
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %140

140:                                              ; preds = %139, %136, %126
  %141 = phi %"class.v8::String"* [ %135, %126 ], [ %137, %136 ], [ null, %139 ]
  %142 = bitcast %"class.v8::String"* %141 to %"class.v8::Value"*
  %143 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 5, i32 0
  %144 = load %"class.v8::Name"*, %"class.v8::Name"** %143, align 8
  %145 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %144, %"class.v8::Value"* %142) #7
  %146 = trunc i16 %145 to i8
  %147 = icmp ne i8 %146, 0
  %148 = icmp ugt i16 %145, 255
  %149 = and i1 %148, %147
  br i1 %149, label %150, label %242

150:                                              ; preds = %140
  %151 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %0, i64 0, i32 6
  %152 = load i8, i8* %151, align 1, !range !4
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %160, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %0, i64 0, i32 17
  %156 = load i8, i8* %155, align 8, !range !4
  %157 = icmp eq i8 %156, 0
  %158 = select i1 %157, i64 192, i64 184
  %159 = add i64 %158, %6
  br label %162

160:                                              ; preds = %150
  %161 = add i64 %6, 184
  br label %162

162:                                              ; preds = %154, %160
  %163 = phi i64 [ %159, %154 ], [ %161, %160 ]
  %164 = inttoptr i64 %163 to %"class.v8::Value"*
  %165 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 6, i32 0
  %166 = load %"class.v8::Name"*, %"class.v8::Name"** %165, align 8
  %167 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %166, %"class.v8::Value"* %164) #7
  %168 = trunc i16 %167 to i8
  %169 = icmp ne i8 %168, 0
  %170 = icmp ugt i16 %167, 255
  %171 = and i1 %170, %169
  br i1 %171, label %172, label %242

172:                                              ; preds = %162
  %173 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %0, i64 0, i32 7
  %174 = load i8, i8* %173, align 2, !range !4
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %182, label %176

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %0, i64 0, i32 18
  %178 = load i8, i8* %177, align 1, !range !4
  %179 = icmp eq i8 %178, 0
  %180 = select i1 %179, i64 192, i64 184
  %181 = add i64 %180, %6
  br label %184

182:                                              ; preds = %172
  %183 = add i64 %6, 192
  br label %184

184:                                              ; preds = %176, %182
  %185 = phi i64 [ %181, %176 ], [ %183, %182 ]
  %186 = inttoptr i64 %185 to %"class.v8::Value"*
  %187 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 7, i32 0
  %188 = load %"class.v8::Name"*, %"class.v8::Name"** %187, align 8
  %189 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %188, %"class.v8::Value"* %186) #7
  %190 = trunc i16 %189 to i8
  %191 = icmp ne i8 %190, 0
  %192 = icmp ugt i16 %189, 255
  %193 = and i1 %192, %191
  br i1 %193, label %194, label %242

194:                                              ; preds = %184
  %195 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %0, i64 0, i32 8
  %196 = load i8, i8* %195, align 1, !range !4
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %204, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %0, i64 0, i32 19
  %200 = load i8, i8* %199, align 2, !range !4
  %201 = icmp eq i8 %200, 0
  %202 = select i1 %201, i64 192, i64 184
  %203 = add i64 %202, %6
  br label %206

204:                                              ; preds = %194
  %205 = add i64 %6, 192
  br label %206

206:                                              ; preds = %198, %204
  %207 = phi i64 [ %203, %198 ], [ %205, %204 ]
  %208 = inttoptr i64 %207 to %"class.v8::Value"*
  %209 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 8, i32 0
  %210 = load %"class.v8::Name"*, %"class.v8::Name"** %209, align 8
  %211 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %210, %"class.v8::Value"* %208) #7
  %212 = trunc i16 %211 to i8
  %213 = icmp ne i8 %212, 0
  %214 = icmp ugt i16 %211, 255
  %215 = and i1 %214, %213
  br i1 %215, label %216, label %242

216:                                              ; preds = %206
  %217 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase18is_web_xr_enabled_E, align 1, !range !4
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %241, label %219

219:                                              ; preds = %216
  %220 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %0, i64 0, i32 9
  %221 = load i8, i8* %220, align 8, !range !4
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %229, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.blink::WebGLContextAttributes", %"class.blink::WebGLContextAttributes"* %0, i64 0, i32 20
  %225 = load i8, i8* %224, align 1, !range !4
  %226 = icmp eq i8 %225, 0
  %227 = select i1 %226, i64 192, i64 184
  %228 = add i64 %227, %6
  br label %231

229:                                              ; preds = %219
  %230 = add i64 %6, 192
  br label %231

231:                                              ; preds = %223, %229
  %232 = phi i64 [ %228, %223 ], [ %230, %229 ]
  %233 = inttoptr i64 %232 to %"class.v8::Value"*
  %234 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %11, i64 9, i32 0
  %235 = load %"class.v8::Name"*, %"class.v8::Name"** %234, align 8
  %236 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %12, %"class.v8::Name"* %235, %"class.v8::Value"* %233) #7
  %237 = trunc i16 %236 to i8
  %238 = icmp ne i8 %237, 0
  %239 = icmp ugt i16 %236, 255
  %240 = and i1 %239, %238
  br i1 %240, label %241, label %242

241:                                              ; preds = %216, %231
  br label %242

242:                                              ; preds = %46, %90, %140, %184, %206, %231, %241, %162, %112, %68, %24
  %243 = phi i1 [ false, %24 ], [ false, %46 ], [ false, %68 ], [ false, %90 ], [ false, %112 ], [ false, %140 ], [ false, %162 ], [ false, %184 ], [ true, %241 ], [ false, %231 ], [ false, %206 ]
  ret i1 %243
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #7
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #7
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #7
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !3

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #7
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebGLContextAttributes"* @_ZN5blink17NativeValueTraitsINS_22WebGLContextAttributesEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 40) #7
  %5 = bitcast i8* %4 to %"class.blink::WebGLContextAttributes"*
  tail call void @_ZN5blink22WebGLContextAttributesC1Ev(%"class.blink::WebGLContextAttributes"* %5) #7
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink24V8WebGLContextAttributes6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_22WebGLContextAttributesERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::WebGLContextAttributes"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::WebGLContextAttributes"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.313"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare void @_ZN5blink22WebGLContextAttributesC1Ev(%"class.blink::WebGLContextAttributes"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !5

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !2

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #7
  br i1 %22, label %23, label %80, !prof !2

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #7
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #7
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #7
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %35
  tail call void @llvm.trap() #7
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #7
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
