; ModuleID = '../../third_party/blink/renderer/core/workers/worker_classic_script_loader.cc'
source_filename = "../../third_party/blink/renderer/core/workers/worker_classic_script_loader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.25 }
%class.scoped_refptr.25 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.26" }
%"struct.std::__1::atomic.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl.29" }
%"struct.std::__1::__cxx_atomic_impl.29" = type { %"struct.std::__1::__cxx_atomic_base_impl.30" }
%"struct.std::__1::__cxx_atomic_base_impl.30" = type { i32 }
%"struct.url::Component" = type { i32, i32 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::KURL"* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.31" }
%"class.base::TimeDelta" = type { i64 }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%union.anon.40 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.41 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.886", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.41 }
%"class.WTF::RefCounted.886" = type { %"class.base::RefCounted.887" }
%"class.base::RefCounted.887" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.42 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.49, i8, %"class.url::Origin" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr.25 }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.43"*, %"class.std::__1::unique_ptr.43"*, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.1206" }
%"class.std::__1::__compressed_pair.1206" = type { %"struct.std::__1::__compressed_pair_elem.1207" }
%"struct.std::__1::__compressed_pair_elem.1207" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.std::__1::unique_ptr.43"* }
%class.scoped_refptr.49 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.50", [4 x i8] }>
%"class.base::RefCountedThreadSafe.50" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr.41*, i32, i32 }
%"class.WTF::Vector.63" = type { %"class.WTF::VectorBuffer.64" }
%"class.WTF::VectorBuffer.64" = type { %"class.WTF::VectorBufferBase.65" }
%"class.WTF::VectorBufferBase.65" = type { %"class.WTF::String"*, i32, i32 }
%union.anon.77 = type { %"class.base::TimeDelta" }
%union.anon.72 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%union.anon.82 = type { %"class.base::UnguessableToken" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase.88", i32 }
%"class.mojo::ScopedHandleBase.88" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.89 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1211", %"class.base::internal::flat_tree.1212" }
%"class.base::RefCountedThreadSafe.1211" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.1212" = type { %"class.std::__1::vector.1213" }
%"class.std::__1::vector.1213" = type { %"class.std::__1::__vector_base.1214" }
%"class.std::__1::__vector_base.1214" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { i32* }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.1003, %"class.mojo::PendingRemote.1004" }
%class.scoped_refptr.1003 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.mojo::PendingRemote.1004" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::TextEncoding" = type { i8* }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.90" }
%"class.WTF::HashTable.90" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.93 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.94" }
%"class.base::RefCounted.94" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.99" }
%"class.WTF::HashMap.99" = type { %"class.WTF::HashTable.100" }
%"class.WTF::HashTable.100" = type <{ %"struct.WTF::KeyValuePair.102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.102" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.106", i32, [4 x i8], %"class.std::__1::unique_ptr.244", %"class.std::__1::unique_ptr.244", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.261", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.279", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.286", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.224", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.142" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.142" = type { %"struct.std::__1::__atomic_base.143" }
%"struct.std::__1::__atomic_base.143" = type { %"struct.std::__1::__atomic_base.144" }
%"struct.std::__1::__atomic_base.144" = type { %"struct.std::__1::__cxx_atomic_impl.145" }
%"struct.std::__1::__cxx_atomic_impl.145" = type { %"struct.std::__1::__cxx_atomic_base_impl.146" }
%"struct.std::__1::__cxx_atomic_base_impl.146" = type { i64 }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::Worklist.153"* }
%"class.blink::Worklist.153" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.142" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::Worklist.160"* }
%"class.blink::Worklist.160" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.142" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::Worklist.167"* }
%"class.blink::Worklist.167" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.142" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::Worklist.174"* }
%"class.blink::Worklist.174" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.142" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::Worklist.181"* }
%"class.blink::Worklist.181" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.142" }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::Worklist.188"* }
%"class.blink::Worklist.188" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.142" }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::Worklist.195"* }
%"class.blink::Worklist.195" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.142" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.202", %"class.std::__1::__compressed_pair.211", %"class.std::__1::__compressed_pair.216", %"class.std::__1::__compressed_pair.218", [4 x i8] }>
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204", %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { i64 }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { float }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.227", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.236" }
%"class.WTF::Vector.236" = type { %"class.WTF::VectorBuffer.237" }
%"class.WTF::VectorBuffer.237" = type { %"class.WTF::VectorBufferBase.238" }
%"class.WTF::VectorBufferBase.238" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.252" }
%"class.WTF::VectorBuffer.252" = type { %"class.WTF::VectorBufferBase.253" }
%"class.WTF::VectorBufferBase.253" = type { %"struct.std::__1::pair.254"*, i32, i32 }
%"struct.std::__1::pair.254" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.267" }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.153"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.160"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.167"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.174"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.181"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.879", i64 }
%"class.std::__1::vector.879" = type { %"class.std::__1::__vector_base.880" }
%"class.std::__1::__vector_base.880" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.881" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.285 }
%class.scoped_refptr.285 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.286" = type { %"struct.std::__1::__atomic_base.287" }
%"struct.std::__1::__atomic_base.287" = type { %"struct.std::__1::__cxx_atomic_impl.288" }
%"struct.std::__1::__cxx_atomic_impl.288" = type { %"struct.std::__1::__cxx_atomic_base_impl.289" }
%"struct.std::__1::__cxx_atomic_base_impl.289" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.290 = type { %"class.base::RefCountedData.291"* }
%"class.base::RefCountedData.291" = type { %"class.base::RefCountedThreadSafe.1237", %"class.mojo::PendingRemote.1182" }
%"class.base::RefCountedThreadSafe.1237" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.1182" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.292 = type { %"class.base::RefCountedData.293"* }
%"class.base::RefCountedData.293" = type opaque
%"struct.blink::FetchParameters::ResourceWidth" = type <{ float, i8, [3 x i8] }>
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::WorkerClassicScriptLoader" = type { %"class.blink::ThreadableLoaderClient", %"class.blink::WorkerMainScriptLoaderClient", %"class.base::OnceCallback", %"class.base::OnceCallback", %"class.blink::Member", %"class.blink::Member.1", %"class.WTF::String", %"class.std::__1::unique_ptr.590", %"class.WTF::StringBuilder", %"class.blink::KURL", %"class.blink::KURL", i8, i8, i8, i8, i64, i64, %"class.std::__1::unique_ptr.619", %"class.blink::Member.629", i32, %"class.std::__1::unique_ptr.682", %"class.WTF::String", %"class.blink::Member.688" }
%"class.blink::ThreadableLoaderClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WorkerMainScriptLoaderClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ThreadableLoader"* }
%"class.blink::ThreadableLoader" = type <{ %"class.blink::RawResourceClient.base", [7 x i8], %"class.blink::Member.891", %"class.blink::Member.893", %"class.blink::Member.688", %"struct.blink::ResourceLoaderOptions", i32, [4 x i8], %"class.base::TimeDelta", %"class.blink::HeapTaskRunnerTimer.895", %"class.base::TimeTicks", %"class.blink::RawResourceClientStateChecker", [4 x i8] }>
%"class.blink::RawResourceClient.base" = type { %"class.blink::ResourceClient.base" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.890", [7 x i8], %"class.blink::Member.841", i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration.890" = type { i8 }
%"class.blink::Member.841" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.788", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.798", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.809", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.817", %"class.blink::ResourceResponse", %class.scoped_refptr.327, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.788" = type { %"class.absl::optional_internal::optional_data.789" }
%"class.absl::optional_internal::optional_data.789" = type { %"class.absl::optional_internal::optional_data_base.790" }
%"class.absl::optional_internal::optional_data_base.790" = type { %"class.absl::optional_internal::optional_data_dtor_base.791" }
%"class.absl::optional_internal::optional_data_dtor_base.791" = type { i8, %union.anon.792 }
%union.anon.792 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.341", i8, %"class.absl::optional.388", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.341" = type { %"class.absl::optional_internal::optional_data.342" }
%"class.absl::optional_internal::optional_data.342" = type { %"class.absl::optional_internal::optional_data_base.343" }
%"class.absl::optional_internal::optional_data_base.343" = type { %"class.absl::optional_internal::optional_data_dtor_base.344" }
%"class.absl::optional_internal::optional_data_dtor_base.344" = type { i8, [7 x i8], %union.anon.345 }
%union.anon.345 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.388" = type { %"class.absl::optional_internal::optional_data.389" }
%"class.absl::optional_internal::optional_data.389" = type { %"class.absl::optional_internal::optional_data_base.390" }
%"class.absl::optional_internal::optional_data_base.390" = type { %"class.absl::optional_internal::optional_data_dtor_base.391" }
%"class.absl::optional_internal::optional_data_dtor_base.391" = type { i8, %union.anon.392 }
%union.anon.392 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.793", %"class.WTF::Vector.63" }
%"class.WTF::Vector.793" = type { %"class.WTF::VectorBuffer.794" }
%"class.WTF::VectorBuffer.794" = type { %"class.WTF::VectorBufferBase.795" }
%"class.WTF::VectorBufferBase.795" = type { i32*, i32, i32 }
%"class.WTF::Vector.798" = type { %"class.WTF::VectorBuffer.799" }
%"class.WTF::VectorBuffer.799" = type { %"class.WTF::VectorBufferBase.800" }
%"class.WTF::VectorBufferBase.800" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.805" }
%"class.WTF::HashMap.805" = type { %"class.WTF::HashTable.806" }
%"class.WTF::HashTable.806" = type <{ %"struct.WTF::KeyValuePair.808"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.808" = type <{ %"class.blink::WeakMember.1220", i32, [4 x i8] }>
%"class.blink::WeakMember.1220" = type { %"class.blink::MemberBase.1221" }
%"class.blink::MemberBase.1221" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.890", [7 x i8], %"class.blink::Member.841", i8, [7 x i8] }>
%"class.blink::HeapHashSet.809" = type { %"class.WTF::HashSet.812" }
%"class.WTF::HashSet.812" = type { %"class.WTF::HashTable.813" }
%"class.WTF::HashTable.813" = type <{ %"class.blink::WeakMember.815"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.815" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.294" }
%"class.base::time_internal::TimeBase.294" = type { i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.816 }
%class.scoped_refptr.816 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.41, %class.scoped_refptr.41, %class.scoped_refptr.41, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.42, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.51", %"class.absl::optional.56", %"class.absl::optional.68", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.78", %"class.absl::optional.68", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.68", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.78", %"class.absl::optional.83", i8, %class.scoped_refptr.89 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.absl::optional.51" = type { %"class.absl::optional_internal::optional_data.52" }
%"class.absl::optional_internal::optional_data.52" = type { %"class.absl::optional_internal::optional_data_base.53" }
%"class.absl::optional_internal::optional_data_base.53" = type { %"class.absl::optional_internal::optional_data_dtor_base.54" }
%"class.absl::optional_internal::optional_data_dtor_base.54" = type { i8, %union.anon.55 }
%union.anon.55 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.56" = type { %"class.absl::optional_internal::optional_data.57" }
%"class.absl::optional_internal::optional_data.57" = type { %"class.absl::optional_internal::optional_data_base.58" }
%"class.absl::optional_internal::optional_data_base.58" = type { %"class.absl::optional_internal::optional_data_dtor_base.59" }
%"class.absl::optional_internal::optional_data_dtor_base.59" = type { i8, %union.anon.60 }
%union.anon.60 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector", %"class.WTF::Vector.63", %"class.WTF::String" }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.73", %"class.absl::optional.73" }
%"class.absl::optional.73" = type { %"class.absl::optional_internal::optional_data.74" }
%"class.absl::optional_internal::optional_data.74" = type { %"class.absl::optional_internal::optional_data_base.75" }
%"class.absl::optional_internal::optional_data_base.75" = type { %"class.absl::optional_internal::optional_data_dtor_base.76" }
%"class.absl::optional_internal::optional_data_dtor_base.76" = type { i8, %union.anon.77 }
%"class.absl::optional.68" = type { %"class.absl::optional_internal::optional_data.69" }
%"class.absl::optional_internal::optional_data.69" = type { %"class.absl::optional_internal::optional_data_base.70" }
%"class.absl::optional_internal::optional_data_base.70" = type { %"class.absl::optional_internal::optional_data_dtor_base.71" }
%"class.absl::optional_internal::optional_data_dtor_base.71" = type { i8, %union.anon.72 }
%"class.absl::optional.78" = type { %"class.absl::optional_internal::optional_data.79" }
%"class.absl::optional_internal::optional_data.79" = type { %"class.absl::optional_internal::optional_data_base.80" }
%"class.absl::optional_internal::optional_data_base.80" = type { %"class.absl::optional_internal::optional_data_dtor_base.81" }
%"class.absl::optional_internal::optional_data_dtor_base.81" = type { i8, %union.anon.82 }
%"class.absl::optional.83" = type { %"class.absl::optional_internal::optional_data.84" }
%"class.absl::optional_internal::optional_data.84" = type { %"class.absl::optional_internal::optional_data_base.85" }
%"class.absl::optional_internal::optional_data_base.85" = type { %"class.absl::optional_internal::optional_data_dtor_base.86" }
%"class.absl::optional_internal::optional_data_dtor_base.86" = type { i8, %union.anon.87 }
%union.anon.87 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.295", %class.scoped_refptr.310, %class.scoped_refptr.311, %"struct.blink::CacheControlHeader", %"class.absl::optional.73", %"class.absl::optional.312", %"class.absl::optional.312", %"class.absl::optional.312", i64, %"class.blink::KURL", %"class.WTF::Vector.317", %"class.WTF::String", %"class.WTF::Vector.63", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.78", %"class.WTF::Vector.63", %"class.blink::KURL", %"class.absl::optional.322" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.295" = type { %"class.absl::optional_internal::optional_data.296" }
%"class.absl::optional_internal::optional_data.296" = type { %"class.absl::optional_internal::optional_data_base.297" }
%"class.absl::optional_internal::optional_data_base.297" = type { %"class.absl::optional_internal::optional_data_dtor_base.298" }
%"class.absl::optional_internal::optional_data_dtor_base.298" = type { i8, %union.anon.299 }
%union.anon.299 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.63", %"class.WTF::String", i64, i64, %"class.WTF::Vector.300", %"class.WTF::Vector.305" }
%"class.WTF::Vector.300" = type { %"class.WTF::VectorBuffer.301" }
%"class.WTF::VectorBuffer.301" = type { %"class.WTF::VectorBufferBase.302" }
%"class.WTF::VectorBufferBase.302" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.305" = type { %"class.WTF::VectorBuffer.306" }
%"class.WTF::VectorBuffer.306" = type { %"class.WTF::VectorBufferBase.307" }
%"class.WTF::VectorBufferBase.307" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.310 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.311 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.312" = type { %"class.absl::optional_internal::optional_data.313" }
%"class.absl::optional_internal::optional_data.313" = type { %"class.absl::optional_internal::optional_data_base.314" }
%"class.absl::optional_internal::optional_data_base.314" = type { %"class.absl::optional_internal::optional_data_dtor_base.315" }
%"class.absl::optional_internal::optional_data_dtor_base.315" = type { i8, %union.anon.316 }
%union.anon.316 = type { %"class.base::Time" }
%"class.WTF::Vector.317" = type { %"class.WTF::VectorBuffer.318" }
%"class.WTF::VectorBuffer.318" = type { %"class.WTF::VectorBufferBase.319" }
%"class.WTF::VectorBufferBase.319" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.322" = type { %"class.absl::optional_internal::optional_data.323" }
%"class.absl::optional_internal::optional_data.323" = type { %"class.absl::optional_internal::optional_data_base.324" }
%"class.absl::optional_internal::optional_data_base.324" = type { %"class.absl::optional_internal::optional_data_dtor_base.325" }
%"class.absl::optional_internal::optional_data_dtor_base.325" = type { i8, %union.anon.326 }
%union.anon.326 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.327 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.328", i64, %"class.WTF::Vector.330", %"class.WTF::Vector.335" }
%"class.WTF::RefCounted.328" = type { %"class.base::RefCounted.329" }
%"class.base::RefCounted.329" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.330" = type { %"class.WTF::VectorBuffer.331" }
%"class.WTF::VectorBuffer.331" = type { %"class.WTF::VectorBufferBase.332" }
%"class.WTF::VectorBufferBase.332" = type { i8*, i32, i32 }
%"class.WTF::Vector.335" = type { %"class.WTF::VectorBuffer.336" }
%"class.WTF::VectorBuffer.336" = type { %"class.WTF::VectorBufferBase.337" }
%"class.WTF::VectorBufferBase.337" = type { %"class.std::__1::unique_ptr.338"*, i32, i32 }
%"class.std::__1::unique_ptr.338" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.819" }
%"class.std::__1::__tree.819" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.820", %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"class.blink::Member.891" = type { %"class.blink::MemberBase.892" }
%"class.blink::MemberBase.892" = type { %"class.blink::ThreadableLoaderClient"* }
%"class.blink::Member.893" = type { %"class.blink::MemberBase.894" }
%"class.blink::MemberBase.894" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.953", i32, i8, [3 x i8], %"class.blink::HeapVector.955", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.964", %"class.blink::Member.633", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.973", %"class.blink::Member.979", %"class.blink::Member.629", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.897" }
%"class.blink::HeapHashMap.897" = type { %"class.WTF::HashMap.900" }
%"class.WTF::HashMap.900" = type { %"class.WTF::HashTable.901" }
%"class.WTF::HashTable.901" = type <{ %"struct.WTF::KeyValuePair.903"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.903" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.911" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.904" }
%"class.blink::HeapHashSet.904" = type { %"class.WTF::HashSet.907" }
%"class.WTF::HashSet.907" = type { %"class.WTF::HashTable.908" }
%"class.WTF::HashTable.908" = type <{ %"class.blink::WeakMember.910"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.910" = type opaque
%"class.blink::Supplementable.911" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.912" }
%"class.blink::HeapHashMap.912" = type { %"class.WTF::HashMap.915" }
%"class.WTF::HashMap.915" = type { %"class.WTF::HashTable.916" }
%"class.WTF::HashTable.916" = type <{ %"struct.WTF::KeyValuePair.918"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.918" = type { i8*, %"class.blink::Member.1222" }
%"class.blink::Member.1222" = type { %"class.blink::MemberBase.1223" }
%"class.blink::MemberBase.1223" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1224" }
%"class.blink::Member.1224" = type { %"class.blink::MemberBase.1225" }
%"class.blink::MemberBase.1225" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.919, %"class.std::__1::unique_ptr.920", %"class.std::__1::unique_ptr.920", %"class.std::__1::unique_ptr.947", %"class.std::__1::unique_ptr.947", %"class.blink::Member.893", i32, [4 x i8], %"class.WTF::HashSet.678", i32, i32 }
%class.scoped_refptr.919 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.920" = type { %"class.std::__1::__compressed_pair.921" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.922" }
%"struct.std::__1::__compressed_pair_elem.922" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.923", %"class.std::__1::map.934", %"class.std::__1::map.943"* }
%"class.std::__1::map.923" = type { %"class.std::__1::__tree.924" }
%"class.std::__1::__tree.924" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.925", %"class.std::__1::__compressed_pair.929" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"class.std::__1::map.934" = type { %"class.std::__1::__tree.935" }
%"class.std::__1::__tree.935" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.936", %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"class.std::__1::map.943" = type opaque
%"class.std::__1::unique_ptr.947" = type { %"class.std::__1::__compressed_pair.948" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.949" }
%"struct.std::__1::__compressed_pair_elem.949" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.678" = type { %"class.WTF::HashTable.679" }
%"class.WTF::HashTable.679" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.955" = type { %"class.WTF::Vector.958" }
%"class.WTF::Vector.958" = type { %"class.WTF::VectorBuffer.959" }
%"class.WTF::VectorBuffer.959" = type { %"class.WTF::VectorBufferBase.960" }
%"class.WTF::VectorBufferBase.960" = type { %"class.blink::Member.961"*, i32, i32 }
%"class.blink::Member.961" = type { %"class.blink::MemberBase.962" }
%"class.blink::MemberBase.962" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::Member.964" = type { %"class.blink::MemberBase.965" }
%"class.blink::MemberBase.965" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.633" = type { %"class.blink::MemberBase.634" }
%"class.blink::MemberBase.634" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.966", i32, i32 }
%"class.blink::HeapHashMap.966" = type { %"class.WTF::HashMap.969" }
%"class.WTF::HashMap.969" = type { %"class.WTF::HashTable.970" }
%"class.WTF::HashTable.970" = type <{ %"struct.WTF::KeyValuePair.972"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.972" = type opaque
%"class.std::__1::unique_ptr.973" = type { %"class.std::__1::__compressed_pair.974" }
%"class.std::__1::__compressed_pair.974" = type { %"struct.std::__1::__compressed_pair_elem.975" }
%"struct.std::__1::__compressed_pair_elem.975" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type { %"class.WTF::HashSet.983", %"class.WTF::HashSet.983", %"class.WTF::HashSet.983", %"class.WTF::HashMap.987", %"class.std::__1::unique_ptr.992", %"class.blink::Member.893", %"class.WTF::HashMap.998" }
%"class.WTF::HashSet.983" = type { %"class.WTF::HashTable.984" }
%"class.WTF::HashTable.984" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.987" = type { %"class.WTF::HashTable.988" }
%"class.WTF::HashTable.988" = type <{ %"struct.WTF::KeyValuePair.991"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.991" = type opaque
%"class.std::__1::unique_ptr.992" = type { %"class.std::__1::__compressed_pair.993" }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.994" }
%"struct.std::__1::__compressed_pair_elem.994" = type { %"class.blink::TrialTokenValidator"* }
%"class.blink::TrialTokenValidator" = type { i32 (...)** }
%"class.WTF::HashMap.998" = type { %"class.WTF::HashTable.999" }
%"class.WTF::HashTable.999" = type <{ %"struct.WTF::KeyValuePair.1002"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1002" = type { %"class.WTF::String", %"struct.blink::OriginTrialResult" }
%"struct.blink::OriginTrialResult" = type { %"class.WTF::String", i32, %"class.WTF::Vector.1226" }
%"class.WTF::Vector.1226" = type { %"class.WTF::VectorBuffer.1227" }
%"class.WTF::VectorBuffer.1227" = type { %"class.WTF::VectorBufferBase.1228" }
%"class.WTF::VectorBufferBase.1228" = type { %"struct.blink::OriginTrialTokenResult"*, i32, i32 }
%"struct.blink::OriginTrialTokenResult" = type { %"class.WTF::String", i32, %"class.absl::optional.1229" }
%"class.absl::optional.1229" = type { %"class.absl::optional_internal::optional_data.1230" }
%"class.absl::optional_internal::optional_data.1230" = type { %"class.absl::optional_internal::optional_data_base.1231" }
%"class.absl::optional_internal::optional_data_base.1231" = type { %"class.absl::optional_internal::optional_data_dtor_base.1232" }
%"class.absl::optional_internal::optional_data_dtor_base.1232" = type { i8, %union.anon.1233 }
%union.anon.1233 = type { %"class.blink::TrialToken" }
%"class.blink::TrialToken" = type { %"class.url::Origin", i8, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", i8, i32 }
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet", i8, i8, %class.scoped_refptr.93, %class.scoped_refptr.290, %class.scoped_refptr.292 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.blink::HeapTaskRunnerTimer.895" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.896", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.548, %"class.base::WeakPtrFactory.845" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.548 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.6" }>
%"class.base::RefCountedThreadSafe.6" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.845" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.9", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.10" }
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%"class.blink::WeakMember.896" = type { %"class.blink::MemberBase" }
%"class.blink::RawResourceClientStateChecker" = type { i32 }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::WorkerMainScriptLoader"* }
%"class.blink::WorkerMainScriptLoader" = type { %"class.network::mojom::URLLoaderClient", %"class.std::__1::unique_ptr", %"class.mojo::ScopedHandleBase.16", %"class.blink::Member.17", %"class.blink::Member.19", %"class.blink::Member.21", i32, %"class.blink::ResourceRequestHead", %"struct.blink::ResourceLoaderOptions", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::ResourceResponse", %class.scoped_refptr.327, %"class.WTF::TextEncoding", %"struct.network::URLLoaderCompletionStatus", i8, i8, i8, %"class.mojo::Remote", %"class.mojo::Receiver", %"class.std::__1::unique_ptr.544" }
%"class.network::mojom::URLLoaderClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.5, i8, %"class.mojo::ScopedHandleBase", %class.scoped_refptr.7, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.5 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.7 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase.16" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::WorkerMainScriptLoaderClient"* }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"struct.network::URLLoaderCompletionStatus" = type <{ i32, i32, i8, [7 x i8], %"class.base::TimeTicks", i64, i64, i64, %"class.absl::optional.341", i32, [4 x i8], %"class.absl::optional.346", %"class.absl::optional.388", i8, [7 x i8], %"class.net::ProxyServer", %"struct.net::ResolveErrorInfo", i8, [7 x i8] }>
%"class.absl::optional.346" = type { %"class.absl::optional_internal::optional_data.347" }
%"class.absl::optional_internal::optional_data.347" = type { %"class.absl::optional_internal::optional_data_base.348" }
%"class.absl::optional_internal::optional_data_base.348" = type { %"class.absl::optional_internal::optional_data_dtor_base.349" }
%"class.absl::optional_internal::optional_data_dtor_base.349" = type { i8, [7 x i8], %union.anon.350 }
%union.anon.350 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.351, %class.scoped_refptr.351, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.371", %"class.std::__1::basic_string", %"class.std::__1::vector.379", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.351 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.352", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.360", %"class.std::__1::vector.364" }
%"class.base::RefCountedThreadSafe.352" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.353", %"class.std::__1::vector.353", %"class.std::__1::vector.353", %"class.std::__1::vector.353" }
%"class.std::__1::vector.353" = type { %"class.std::__1::__vector_base.354" }
%"class.std::__1::__vector_base.354" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.364" = type { %"class.std::__1::__vector_base.365" }
%"class.std::__1::__vector_base.365" = type { %"class.std::__1::unique_ptr.360"*, %"class.std::__1::unique_ptr.360"*, %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.std::__1::unique_ptr.360"* }
%"class.std::__1::vector.371" = type { %"class.std::__1::__vector_base.372" }
%"class.std::__1::__vector_base.372" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.374" }
%"class.net::HashValue" = type { i32, %union.anon.373 }
%union.anon.373 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.379" = type { %"class.std::__1::__vector_base.380" }
%"class.std::__1::__vector_base.380" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.383" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.381, i32, [4 x i8] }>
%class.scoped_refptr.381 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.382", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.382" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.537" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.393, %"class.std::__1::unique_ptr.492", %"class.mojo::ScopedHandleBase.88", [4 x i8], %class.scoped_refptr.5, i32 }>
%class.scoped_refptr.393 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.5, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase.88", [4 x i8], %"class.absl::optional.458", %"class.absl::optional.463", %"class.absl::optional.418", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.483", i8, [7 x i8], %class.scoped_refptr.5, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.394" }>
%"class.base::RefCountedThreadSafe.394" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.395", %"class.std::__1::unique_ptr.401", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.407" }
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.407" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase.88", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.5, %"class.std::__1::unique_ptr", %"class.absl::optional.408", %"struct.std::__1::atomic.286", i8, i8, i8, i8, i32, i32, %"class.absl::optional.418", %"class.std::__1::unique_ptr.423", i8, i64, %class.scoped_refptr.454, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.457" }
%"class.absl::optional.408" = type { %"class.absl::optional_internal::optional_data.409" }
%"class.absl::optional_internal::optional_data.409" = type { %"class.absl::optional_internal::optional_data_base.410" }
%"class.absl::optional_internal::optional_data_base.410" = type { %"class.absl::optional_internal::optional_data_dtor_base.411" }
%"class.absl::optional_internal::optional_data_dtor_base.411" = type { i8, %union.anon.412 }
%union.anon.412 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.413", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.413" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.426", i8, i64, %class.scoped_refptr.427, %class.scoped_refptr.449 }
%"class.base::RepeatingCallback.426" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.427 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.428", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.438", i8, [7 x i8] }>
%"class.base::RefCounted.428" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.429 }
%class.scoped_refptr.429 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.430", %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"class.std::__1::map.438" = type { %"class.std::__1::__tree.439" }
%"class.std::__1::__tree.439" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.440", %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%class.scoped_refptr.449 = type { %"class.base::RefCountedData.450"* }
%"class.base::RefCountedData.450" = type opaque
%class.scoped_refptr.454 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.455 }
%class.scoped_refptr.455 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.878", [4 x i8], %"class.base::RepeatingCallback.495", %class.scoped_refptr.5, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.26", [4 x i8] }>
%"class.base::RefCountedThreadSafe.878" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.495" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.457" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.458" = type { %"class.absl::optional_internal::optional_data.459" }
%"class.absl::optional_internal::optional_data.459" = type { %"class.absl::optional_internal::optional_data_base.460" }
%"class.absl::optional_internal::optional_data_base.460" = type { %"class.absl::optional_internal::optional_data_dtor_base.461" }
%"class.absl::optional_internal::optional_data_dtor_base.461" = type { i8, %union.anon.462 }
%union.anon.462 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.463" = type { %"class.absl::optional_internal::optional_data.464" }
%"class.absl::optional_internal::optional_data.464" = type { %"class.absl::optional_internal::optional_data_base.465" }
%"class.absl::optional_internal::optional_data_base.465" = type { %"class.absl::optional_internal::optional_data_dtor_base.466" }
%"class.absl::optional_internal::optional_data_dtor_base.466" = type { i8, [7 x i8], %union.anon.467 }
%union.anon.467 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.418" = type { %"class.absl::optional_internal::optional_data.419" }
%"class.absl::optional_internal::optional_data.419" = type { %"class.absl::optional_internal::optional_data_base.420" }
%"class.absl::optional_internal::optional_data_base.420" = type { %"class.absl::optional_internal::optional_data_dtor_base.421" }
%"class.absl::optional_internal::optional_data_dtor_base.421" = type { i8, %union.anon.422 }
%union.anon.422 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.468 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.468 = type { %"class.std::__1::map.471" }
%"class.std::__1::map.471" = type { %"class.std::__1::__tree.472" }
%"class.std::__1::__tree.472" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.473", %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.482"*, i64 }
%"class.std::__1::unique_ptr.482" = type opaque
%"class.std::__1::map.483" = type { %"class.std::__1::__tree.484" }
%"class.std::__1::__tree.484" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.485", %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.495", %"class.base::OnceCallback.496", %"class.absl::optional.73", %"class.absl::optional.497", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.504", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.512", %"class.std::__1::map.523", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.532", i8, %class.scoped_refptr.5, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.533" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.496" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.497" = type { %"class.absl::optional_internal::optional_data.498" }
%"class.absl::optional_internal::optional_data.498" = type { %"class.absl::optional_internal::optional_data_base.499" }
%"class.absl::optional_internal::optional_data_base.499" = type { %"class.absl::optional_internal::optional_data_dtor_base.500" }
%"class.absl::optional_internal::optional_data_dtor_base.500" = type { i8, %union.anon.501 }
%union.anon.501 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.5, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.502" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.502" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.503 }
%class.scoped_refptr.503 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.507", %class.scoped_refptr.508 }
%"class.base::RepeatingCallback.507" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.508 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.394", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.512" = type { %"class.std::__1::__tree.513" }
%"class.std::__1::__tree.513" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.514", %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"class.std::__1::map.523" = type { %"class.std::__1::__tree.524" }
%"class.std::__1::__tree.524" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.525", %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"class.base::OnceCallback.532" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.533" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.network::mojom::URLLoaderProxy"* }
%"class.network::mojom::URLLoaderProxy" = type { %"class.network::mojom::URLLoader", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::URLLoader" = type { i32 (...)** }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.network::mojom::URLLoaderClientStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.393, %"class.std::__1::unique_ptr.492", %"class.base::WeakPtrFactory.543" }
%"class.base::WeakPtrFactory.543" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.network::mojom::URLLoaderClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.network::mojom::URLLoaderClient"* }
%"class.std::__1::unique_ptr.544" = type { %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.blink::ResourceLoadInfoNotifierWrapper"* }
%"class.blink::ResourceLoadInfoNotifierWrapper" = type { %"class.base::WeakPtr.547", %class.scoped_refptr.548, %"class.mojo::StructPtr" }
%"class.base::WeakPtr.547" = type { %"class.base::internal::WeakPtrBase" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.549" }
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.blink::mojom::ResourceLoadInfo"* }
%"class.blink::mojom::ResourceLoadInfo" = type { i64, %class.GURL, %class.GURL, %class.GURL, %"class.std::__1::basic_string", i32, i32, %"class.std::__1::basic_string", i8, %"class.mojo::StructPtr.558", i32, %"struct.net::LoadTimingInfo", i64, i64, %"class.std::__1::vector.570" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.552" }
%"class.std::__1::unique_ptr.552" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %class.GURL* }
%"class.mojo::StructPtr.558" = type { %"class.std::__1::unique_ptr.559" }
%"class.std::__1::unique_ptr.559" = type { %"class.std::__1::__compressed_pair.560" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"class.blink::mojom::CommonNetworkInfo"* }
%"class.blink::mojom::CommonNetworkInfo" = type { i8, i8, %"class.absl::optional.562" }
%"class.absl::optional.562" = type { %"class.absl::optional_internal::optional_data.563" }
%"class.absl::optional_internal::optional_data.563" = type { %"class.absl::optional_internal::optional_data_base.564" }
%"class.absl::optional_internal::optional_data_base.564" = type { %"class.absl::optional_internal::optional_data_dtor_base.565" }
%"class.absl::optional_internal::optional_data_dtor_base.565" = type { i8, %union.anon.566 }
%union.anon.566 = type { %"class.net::IPEndPoint" }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.std::__1::vector.570" = type { %"class.std::__1::__vector_base.571" }
%"class.std::__1::__vector_base.571" = type { %"class.mojo::StructPtr.572"*, %"class.mojo::StructPtr.572"*, %"class.std::__1::__compressed_pair.579" }
%"class.mojo::StructPtr.572" = type { %"class.std::__1::unique_ptr.573" }
%"class.std::__1::unique_ptr.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.575" = type { %"class.blink::mojom::RedirectInfo"* }
%"class.blink::mojom::RedirectInfo" = type { %"class.url::Origin", %"class.mojo::StructPtr.558" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.mojo::StructPtr.572"* }
%"class.std::__1::unique_ptr.590" = type { %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.592" }
%"struct.std::__1::__compressed_pair_elem.592" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.593", i32, %"class.WTF::Vector.330", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.599" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.599" = type { %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.601" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.608, i32, i8, i8, [2 x i8] }>
%union.anon.608 = type { %"class.WTF::Vector.609" }
%"class.WTF::Vector.609" = type { %"class.WTF::VectorBuffer.610" }
%"class.WTF::VectorBuffer.610" = type { %"class.WTF::VectorBufferBase.611", [16 x i8] }
%"class.WTF::VectorBufferBase.611" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.619" = type { %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"class.WTF::Vector.622"* }
%"class.WTF::Vector.622" = type { %"class.WTF::VectorBuffer.623" }
%"class.WTF::VectorBuffer.623" = type { %"class.WTF::VectorBufferBase.611" }
%"class.blink::Member.629" = type { %"class.blink::MemberBase.630" }
%"class.blink::MemberBase.630" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.633", i8, [7 x i8], %"class.WTF::Vector.635", %"class.blink::HeapVector", i8, [7 x i8], %"class.WTF::HashSet.678", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %"class.mojo::StructPtr.638"*, i32, i32 }
%"class.mojo::StructPtr.638" = type { %"class.std::__1::unique_ptr.639" }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.642", %"class.WTF::HashMap.649", %"class.WTF::HashMap.654", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.63", i32, %"class.mojo::StructPtr.659", %"class.WTF::Vector.63" }
%"class.mojo::StructPtr.642" = type { %"class.std::__1::unique_ptr.643" }
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.649" = type { %"class.WTF::HashTable.650" }
%"class.WTF::HashTable.650" = type <{ %"struct.WTF::KeyValuePair.653"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.653" = type opaque
%"class.WTF::HashMap.654" = type { %"class.WTF::HashTable.655" }
%"class.WTF::HashTable.655" = type <{ %"struct.WTF::KeyValuePair.658"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.658" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.659" = type { %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.63", i8, i8, [6 x i8] }>
%"class.blink::HeapVector" = type { %"class.WTF::Vector.673" }
%"class.WTF::Vector.673" = type { %"class.WTF::VectorBuffer.674" }
%"class.WTF::VectorBuffer.674" = type { %"class.WTF::VectorBufferBase.675" }
%"class.WTF::VectorBufferBase.675" = type { %"class.blink::Member.676"*, i32, i32 }
%"class.blink::Member.676" = type opaque
%"class.std::__1::unique_ptr.682" = type { %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.WTF::Vector.63"* }
%"class.blink::Member.688" = type { %"class.blink::MemberBase.689" }
%"class.blink::MemberBase.689" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.692", %"class.blink::Member.21", %"class.blink::Member.17", %class.scoped_refptr.548, %class.scoped_refptr.548, %"class.blink::Member.702", %"class.blink::Member.708", %"class.blink::Member.714", %"class.blink::Member.718", %"class.blink::Member.770", %"class.blink::HeapHashMap.772", %"class.blink::HeapHashSet", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap.828", %"class.blink::HeapVector.835", %"class.blink::Member.843", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.847", %"class.WTF::Vector.854", %"class.blink::HeapHashSet.860", %"class.blink::HeapHashSet.860", %"class.std::__1::unique_ptr.866", %"class.base::WeakPtr.763", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.875", i8, i8, %"class.base::WeakPtrFactory.877" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.692" = type { %"class.blink::MemberBase.693" }
%"class.blink::MemberBase.693" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type <{ %"class.blink::ResourceFetcherProperties", %"class.blink::Member.696", %"class.blink::Member.698", i8, i8, i8, i8, i8, [3 x i8], %"class.blink::KURL", i32, [4 x i8] }>
%"class.blink::ResourceFetcherProperties" = type { i32 (...)** }
%"class.blink::Member.696" = type { %"class.blink::MemberBase.697" }
%"class.blink::MemberBase.697" = type { %"class.blink::ResourceFetcherProperties"* }
%"class.blink::Member.698" = type { %"class.blink::MemberBase.699" }
%"class.blink::MemberBase.699" = type { %"class.blink::FetchClientSettingsObject"* }
%"class.blink::FetchClientSettingsObject" = type { i32 (...)** }
%"class.blink::Member.702" = type { %"class.blink::MemberBase.703" }
%"class.blink::MemberBase.703" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type { %"class.blink::UseCounter", %"class.blink::Member.706" }
%"class.blink::Member.706" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::UseCounter"* }
%"class.blink::Member.708" = type { %"class.blink::MemberBase.709" }
%"class.blink::MemberBase.709" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.712" }
%"class.blink::Member.712" = type { %"class.blink::MemberBase.713" }
%"class.blink::MemberBase.713" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.714" = type { %"class.blink::MemberBase.715" }
%"class.blink::MemberBase.715" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.718" = type { %"class.blink::MemberBase.719" }
%"class.blink::MemberBase.719" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.722", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.724", %"class.WTF::HashSet.729", i8, [3 x i8], i32, %"class.blink::HeapHashMap.733", %"class.std::__1::map.740", %"class.std::__1::map.751", %"class.std::__1::unique_ptr.760", %"class.blink::Member.708", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.767", %"class.mojo::InlinedStructPtr.769", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.722" = type { %"class.blink::MemberBase.723" }
%"class.blink::MemberBase.723" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.724" = type { %"class.WTF::HashTable.725" }
%"class.WTF::HashTable.725" = type <{ %"struct.WTF::KeyValuePair.728"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.728" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.729" = type { %"class.WTF::HashTable.730" }
%"class.WTF::HashTable.730" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.733" = type { %"class.WTF::HashMap.736" }
%"class.WTF::HashMap.736" = type { %"class.WTF::HashTable.737" }
%"class.WTF::HashTable.737" = type <{ %"struct.WTF::KeyValuePair.739"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.739" = type opaque
%"class.std::__1::map.740" = type { %"class.std::__1::__tree.741" }
%"class.std::__1::__tree.741" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.742", %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"class.std::__1::map.751" = type { %"class.std::__1::__tree.752" }
%"class.std::__1::__tree.752" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.753", %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"class.std::__1::unique_ptr.760" = type { %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.763", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.769" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.770" = type { %"class.blink::MemberBase.771" }
%"class.blink::MemberBase.771" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.772" = type { %"class.WTF::HashMap.775" }
%"class.WTF::HashMap.775" = type { %"class.WTF::HashTable.776" }
%"class.WTF::HashTable.776" = type <{ %"struct.WTF::KeyValuePair.778"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.778" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.781" }
%"class.WTF::HashSet.781" = type { %"class.WTF::HashTable.782" }
%"class.WTF::HashTable.782" = type <{ %"class.blink::WeakMember.784"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::HeapHashMap.828" = type { %"class.WTF::HashMap.831" }
%"class.WTF::HashMap.831" = type { %"class.WTF::HashTable.832" }
%"class.WTF::HashTable.832" = type <{ %"struct.WTF::KeyValuePair.834"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.834" = type opaque
%"class.blink::HeapVector.835" = type { %"class.WTF::Vector.838" }
%"class.WTF::Vector.838" = type { %"class.WTF::VectorBuffer.839" }
%"class.WTF::VectorBuffer.839" = type { %"class.WTF::VectorBufferBase.840" }
%"class.WTF::VectorBufferBase.840" = type { %"class.blink::Member.841"*, i32, i32 }
%"class.blink::Member.843" = type { %"class.blink::MemberBase.844" }
%"class.blink::MemberBase.844" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.846", { i64, i64 } }
%"class.blink::WeakMember.846" = type { %"class.blink::MemberBase.689" }
%"class.blink::HeapHashMap.847" = type { %"class.WTF::HashMap.850" }
%"class.WTF::HashMap.850" = type { %"class.WTF::HashTable.851" }
%"class.WTF::HashTable.851" = type <{ %"struct.WTF::KeyValuePair.853"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.853" = type opaque
%"class.WTF::Vector.854" = type { %"class.WTF::VectorBuffer.855" }
%"class.WTF::VectorBuffer.855" = type { %"class.WTF::VectorBufferBase.856" }
%"class.WTF::VectorBufferBase.856" = type { %class.scoped_refptr.857*, i32, i32 }
%class.scoped_refptr.857 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.860" = type { %"class.WTF::HashSet.863" }
%"class.WTF::HashSet.863" = type { %"class.WTF::HashTable.864" }
%"class.WTF::HashTable.864" = type <{ %"class.blink::Member.817"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.866" = type { %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"class.WTF::HashSet.869"* }
%"class.WTF::HashSet.869" = type opaque
%"class.base::WeakPtr.763" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.873" }
%"class.blink::Member.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.875" = type { %"class.blink::MemberBase.876" }
%"class.blink::MemberBase.876" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.877" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"struct.blink::WorkerMainScriptLoadParameters" = type { i32, %"class.mojo::StructPtr.1008", %"class.mojo::ScopedHandleBase.16", %"class.mojo::StructPtr.1157", %"class.std::__1::vector.1165", %"class.std::__1::vector.1172" }
%"class.mojo::StructPtr.1008" = type { %"class.std::__1::unique_ptr.1009" }
%"class.std::__1::unique_ptr.1009" = type { %"class.std::__1::__compressed_pair.1010" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.1011" }
%"struct.std::__1::__compressed_pair_elem.1011" = type { %"class.network::mojom::URLResponseHead"* }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.1012, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr.1021", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.1037", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional.346", %"class.std::__1::vector.353", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.322", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.1043", %"class.absl::optional.1143", %"class.absl::optional.78", %"class.std::__1::vector.353", %class.GURL, i8, [7 x i8] }>
%class.scoped_refptr.1012 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.1013", %"class.std::__1::vector.1014", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.1013" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.1014" = type { %"class.std::__1::__vector_base.1015" }
%"class.std::__1::__vector_base.1015" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.1016" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.1017" }
%"struct.std::__1::__compressed_pair_elem.1017" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"class.mojo::StructPtr.1021" = type { %"class.std::__1::unique_ptr.1022" }
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.1025", %"class.std::__1::vector.1025", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.1025" = type { %"class.std::__1::__vector_base.1026" }
%"class.std::__1::__vector_base.1026" = type { %"class.mojo::InlinedStructPtr.1027"*, %"class.mojo::InlinedStructPtr.1027"*, %"class.std::__1::__compressed_pair.1029" }
%"class.mojo::InlinedStructPtr.1027" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"class.mojo::InlinedStructPtr.1027"* }
%"class.std::__1::vector.1037" = type { %"class.std::__1::__vector_base.1038" }
%"class.std::__1::__vector_base.1038" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.1039" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"class.mojo::StructPtr.1043" = type { %"class.std::__1::unique_ptr.1044" }
%"class.std::__1::unique_ptr.1044" = type { %"class.std::__1::__compressed_pair.1045" }
%"class.std::__1::__compressed_pair.1045" = type { %"struct.std::__1::__compressed_pair_elem.1046" }
%"struct.std::__1::__compressed_pair_elem.1046" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.1047", %"class.mojo::StructPtr.1095", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.1107", %"class.base::TimeDelta", %"class.absl::optional.1107", i32, [4 x i8], %"class.std::__1::vector.1119", %"class.mojo::StructPtr.1133", i8, [7 x i8] }>
%"class.std::__1::vector.1047" = type { %"class.std::__1::__vector_base.1048" }
%"class.std::__1::__vector_base.1048" = type { %"class.mojo::StructPtr.1049"*, %"class.mojo::StructPtr.1049"*, %"class.std::__1::__compressed_pair.1090" }
%"class.mojo::StructPtr.1049" = type { %"class.std::__1::unique_ptr.1050" }
%"class.std::__1::unique_ptr.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1053", %"class.base::flat_map", %"class.base::flat_map.1068", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1078", i8, %"class.std::__1::vector.353", i32, %"class.mojo::StructPtr.1080", %"class.std::__1::vector.353" }
%"class.mojo::StructPtr.1053" = type { %"class.std::__1::unique_ptr.1054" }
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1060" }
%"class.std::__1::vector.1060" = type { %"class.std::__1::__vector_base.1061" }
%"class.std::__1::__vector_base.1061" = type { %"struct.std::__1::pair.1062"*, %"struct.std::__1::pair.1062"*, %"class.std::__1::__compressed_pair.1063" }
%"struct.std::__1::pair.1062" = type opaque
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.1064" }
%"struct.std::__1::__compressed_pair_elem.1064" = type { %"struct.std::__1::pair.1062"* }
%"class.base::flat_map.1068" = type { %"class.base::internal::flat_tree.1069" }
%"class.base::internal::flat_tree.1069" = type { %"class.std::__1::vector.1070" }
%"class.std::__1::vector.1070" = type { %"class.std::__1::__vector_base.1071" }
%"class.std::__1::__vector_base.1071" = type { %"struct.std::__1::pair.1072"*, %"struct.std::__1::pair.1072"*, %"class.std::__1::__compressed_pair.1073" }
%"struct.std::__1::pair.1072" = type opaque
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"struct.std::__1::pair.1072"* }
%"class.mojo::InlinedStructPtr.1078" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.1080" = type { %"class.std::__1::unique_ptr.1081" }
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.353", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.1091" }
%"struct.std::__1::__compressed_pair_elem.1091" = type { %"class.mojo::StructPtr.1049"* }
%"class.mojo::StructPtr.1095" = type { %"class.std::__1::unique_ptr.1096" }
%"class.std::__1::unique_ptr.1096" = type { %"class.std::__1::__compressed_pair.1097" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.1098" }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.1102", i32, %"class.absl::optional.1102" }
%"class.absl::optional.1102" = type { %"class.absl::optional_internal::optional_data.1103" }
%"class.absl::optional_internal::optional_data.1103" = type { %"class.absl::optional_internal::optional_data_base.1104" }
%"class.absl::optional_internal::optional_data_base.1104" = type { %"class.absl::optional_internal::optional_data_dtor_base.1105" }
%"class.absl::optional_internal::optional_data_dtor_base.1105" = type { i8, %union.anon.1106 }
%union.anon.1106 = type { %"class.std::__1::basic_string" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.1102", i32, %"class.absl::optional.1102" }
%"class.absl::optional.1107" = type { %"class.absl::optional_internal::optional_data.1108" }
%"class.absl::optional_internal::optional_data.1108" = type { %"class.absl::optional_internal::optional_data_base.1109" }
%"class.absl::optional_internal::optional_data_base.1109" = type { %"class.absl::optional_internal::optional_data_dtor_base.1110" }
%"class.absl::optional_internal::optional_data_dtor_base.1110" = type { i8, %union.anon.1111 }
%union.anon.1111 = type { %"class.std::__1::vector.1112" }
%"class.std::__1::vector.1112" = type { %"class.std::__1::__vector_base.1113" }
%"class.std::__1::__vector_base.1113" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1114" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.1115" }
%"struct.std::__1::__compressed_pair_elem.1115" = type { i32* }
%"class.std::__1::vector.1119" = type { %"class.std::__1::__vector_base.1120" }
%"class.std::__1::__vector_base.1120" = type { %"class.mojo::StructPtr.1121"*, %"class.mojo::StructPtr.1121"*, %"class.std::__1::__compressed_pair.1128" }
%"class.mojo::StructPtr.1121" = type { %"class.std::__1::unique_ptr.1122" }
%"class.std::__1::unique_ptr.1122" = type { %"class.std::__1::__compressed_pair.1123" }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.1102" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1129" }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"class.mojo::StructPtr.1121"* }
%"class.mojo::StructPtr.1133" = type { %"class.std::__1::unique_ptr.1134" }
%"class.std::__1::unique_ptr.1134" = type { %"class.std::__1::__compressed_pair.1135" }
%"class.std::__1::__compressed_pair.1135" = type { %"struct.std::__1::__compressed_pair_elem.1136" }
%"struct.std::__1::__compressed_pair_elem.1136" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.353"* }
%"class.absl::optional.1143" = type { %"class.absl::optional_internal::optional_data.1144" }
%"class.absl::optional_internal::optional_data.1144" = type { %"class.absl::optional_internal::optional_data_base.1145" }
%"class.absl::optional_internal::optional_data_base.1145" = type { %"class.absl::optional_internal::optional_data_dtor_base.1146" }
%"class.absl::optional_internal::optional_data_dtor_base.1146" = type { i8, %union.anon.1147 }
%union.anon.1147 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.1148" }
%"class.std::__1::unique_ptr.1148" = type { %"class.std::__1::__compressed_pair.1149" }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.1150" }
%"struct.std::__1::__compressed_pair_elem.1150" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.353", %"class.absl::optional.1102", %"class.std::__1::vector.353", %"class.std::__1::vector.353" }
%"class.mojo::StructPtr.1157" = type { %"class.std::__1::unique_ptr.1158" }
%"class.std::__1::unique_ptr.1158" = type { %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"class.network::mojom::URLLoaderClientEndpoints"* }
%"class.network::mojom::URLLoaderClientEndpoints" = type { %"class.mojo::PendingRemote.1161", %"class.mojo::PendingReceiver" }
%"class.mojo::PendingRemote.1161" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase.88", %"class.mojo::ConnectionGroup::Ref" }
%"class.std::__1::vector.1165" = type { %"class.std::__1::__vector_base.1166" }
%"class.std::__1::__vector_base.1166" = type { %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"*, %"class.std::__1::__compressed_pair.1167" }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"class.std::__1::__compressed_pair.1167" = type { %"struct.std::__1::__compressed_pair_elem.1168" }
%"struct.std::__1::__compressed_pair_elem.1168" = type { %"struct.net::RedirectInfo"* }
%"class.std::__1::vector.1172" = type { %"class.std::__1::__vector_base.1173" }
%"class.std::__1::__vector_base.1173" = type { %"class.mojo::StructPtr.1008"*, %"class.mojo::StructPtr.1008"*, %"class.std::__1::__compressed_pair.1174" }
%"class.std::__1::__compressed_pair.1174" = type { %"struct.std::__1::__compressed_pair_elem.1175" }
%"struct.std::__1::__compressed_pair_elem.1175" = type { %"class.mojo::StructPtr.1008"* }
%"class.blink::FetchParameters" = type <{ %"class.blink::ResourceRequest", %"class.blink::TextResourceDecoderOptions", %"struct.blink::ResourceLoaderOptions", i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ContentSecurityPolicyResponseHeaders" = type <{ %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", i8, [7 x i8] }>
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.1183", i64, %"class.absl::optional.1189" }
%"class.std::__1::unique_ptr.1183" = type { %"class.std::__1::__compressed_pair.1184" }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.1185" }
%"struct.std::__1::__compressed_pair_elem.1185" = type { i8* }
%"class.absl::optional.1189" = type { %"class.absl::optional_internal::optional_data.1190" }
%"class.absl::optional_internal::optional_data.1190" = type { %"class.absl::optional_internal::optional_data_base.1191" }
%"class.absl::optional_internal::optional_data_base.1191" = type { %"class.absl::optional_internal::optional_data_dtor_base.1192" }
%"class.absl::optional_internal::optional_data_dtor_base.1192" = type { i8, %union.anon.1193 }
%union.anon.1193 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.1194", %"class.std::__1::unique_ptr.1195" }
%"class.mojo::ScopedHandleBase.1194" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1195" = type { %"class.std::__1::__compressed_pair.1196" }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.1197" }
%"struct.std::__1::__compressed_pair_elem.1197" = type { i8* }
%"class.blink::BytesConsumer" = type opaque
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.1205", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1204" }
%"class.base::RefCountedThreadSafe.1204" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.1205" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::StringAppend.1238" = type { %"class.WTF::StringAppend.1239", %"class.WTF::String" }
%"class.WTF::StringAppend.1239" = type { %"class.WTF::StringAppend.1240", i8* }
%"class.WTF::StringAppend.1240" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.1238", i8* }
%"class.WTF::StringTypeAdapter.1241" = type <{ i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringTypeAdapter.1243" = type { %"class.WTF::StringTypeAdapter.1244" }
%"class.WTF::StringTypeAdapter.1244" = type { %"class.WTF::StringView" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN5blink22ThreadableLoaderClient11DidSendDataEmm = comdat any

$_ZN5blink22ThreadableLoaderClient18WillFollowRedirectERKNS_4KURLERKNS_16ResourceResponseE = comdat any

$_ZN5blink22ThreadableLoaderClient27DidStartLoadingResponseBodyERNS_13BytesConsumerE = comdat any

$_ZN5blink22ThreadableLoaderClient15DidDownloadDataEm = comdat any

$_ZN5blink22ThreadableLoaderClient17DidDownloadToBlobE13scoped_refptrINS_14BlobDataHandleEE = comdat any

$_ZN5blink25WorkerClassicScriptLoaderD2Ev = comdat any

$_ZN5blink25WorkerClassicScriptLoaderD0Ev = comdat any

$_ZN5blink28WorkerMainScriptLoaderClient18OnStartLoadingBodyERKNS_16ResourceResponseE = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16ThreadableLoaderEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_16ThreadableLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16ThreadableLoaderEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16ThreadableLoaderEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_22WorkerMainScriptLoaderEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_22WorkerMainScriptLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_22WorkerMainScriptLoaderEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_22WorkerMainScriptLoaderEE7GetNameEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN5blink10TraceTraitINS_21ContentSecurityPolicyEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_15ResourceFetcherEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21ContentSecurityPolicyEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_21ContentSecurityPolicyEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_21ContentSecurityPolicyEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_16ThreadableLoaderEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16ThreadableLoaderEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_22WorkerMainScriptLoaderEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_22WorkerMainScriptLoaderEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_21ContentSecurityPolicyEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21ContentSecurityPolicyEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink25WorkerClassicScriptLoaderE = hidden unnamed_addr constant { [19 x i8*], [7 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WorkerClassicScriptLoader"*, %"class.blink::Visitor"*)* @_ZNK5blink25WorkerClassicScriptLoader5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ThreadableLoaderClient"*, i64, i64)* @_ZN5blink22ThreadableLoaderClient11DidSendDataEmm to i8*), i8* bitcast (i1 (%"class.blink::ThreadableLoaderClient"*, %"class.blink::KURL"*, %"class.blink::ResourceResponse"*)* @_ZN5blink22ThreadableLoaderClient18WillFollowRedirectERKNS_4KURLERKNS_16ResourceResponseE to i8*), i8* bitcast (void (%"class.blink::WorkerClassicScriptLoader"*, i64, %"class.blink::ResourceResponse"*)* @_ZN5blink25WorkerClassicScriptLoader18DidReceiveResponseEmRKNS_16ResourceResponseE to i8*), i8* bitcast (void (%"class.blink::ThreadableLoaderClient"*, %"class.blink::BytesConsumer"*)* @_ZN5blink22ThreadableLoaderClient27DidStartLoadingResponseBodyERNS_13BytesConsumerE to i8*), i8* bitcast (void (%"class.blink::WorkerClassicScriptLoader"*, i8*, i32)* @_ZN5blink25WorkerClassicScriptLoader14DidReceiveDataEPKcj to i8*), i8* bitcast (void (%"class.blink::WorkerClassicScriptLoader"*, %"class.mojo_base::BigBuffer"*)* @_ZN5blink25WorkerClassicScriptLoader24DidReceiveCachedMetadataEN9mojo_base9BigBufferE to i8*), i8* bitcast (void (%"class.blink::WorkerClassicScriptLoader"*, i64)* @_ZN5blink25WorkerClassicScriptLoader16DidFinishLoadingEm to i8*), i8* bitcast (void (%"class.blink::WorkerClassicScriptLoader"*, %"class.blink::ResourceError"*)* @_ZN5blink25WorkerClassicScriptLoader7DidFailERKNS_13ResourceErrorE to i8*), i8* bitcast (void (%"class.blink::WorkerClassicScriptLoader"*)* @_ZN5blink25WorkerClassicScriptLoader20DidFailRedirectCheckEv to i8*), i8* bitcast (void (%"class.blink::ThreadableLoaderClient"*, i64)* @_ZN5blink22ThreadableLoaderClient15DidDownloadDataEm to i8*), i8* bitcast (void (%"class.blink::ThreadableLoaderClient"*, %"class.blink::BlobDataHandle"*)* @_ZN5blink22ThreadableLoaderClient17DidDownloadToBlobE13scoped_refptrINS_14BlobDataHandleEE to i8*), i8* bitcast (void (%"class.blink::WorkerClassicScriptLoader"*)* @_ZN5blink25WorkerClassicScriptLoaderD2Ev to i8*), i8* bitcast (void (%"class.blink::WorkerClassicScriptLoader"*)* @_ZN5blink25WorkerClassicScriptLoaderD0Ev to i8*), i8* bitcast (void (%"class.blink::WorkerClassicScriptLoader"*, i64, i8*)* @_ZN5blink25WorkerClassicScriptLoader14DidReceiveDataEN4base4spanIKcLm18446744073709551615EEE to i8*), i8* bitcast (void (%"class.blink::WorkerClassicScriptLoader"*)* @_ZN5blink25WorkerClassicScriptLoader33OnFinishedLoadingWorkerMainScriptEv to i8*), i8* bitcast (void (%"class.blink::WorkerClassicScriptLoader"*)* @_ZN5blink25WorkerClassicScriptLoader31OnFailedLoadingWorkerMainScriptEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::WorkerClassicScriptLoader"*, %"class.blink::Visitor"*)* @_ZThn8_NK5blink25WorkerClassicScriptLoader5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::WorkerClassicScriptLoader"*, i64, i8*)* @_ZThn8_N5blink25WorkerClassicScriptLoader14DidReceiveDataEN4base4spanIKcLm18446744073709551615EEE to i8*), i8* bitcast (void (%"class.blink::WorkerMainScriptLoaderClient"*, %"class.blink::ResourceResponse"*)* @_ZN5blink28WorkerMainScriptLoaderClient18OnStartLoadingBodyERKNS_16ResourceResponseE to i8*), i8* bitcast (void (%"class.blink::WorkerClassicScriptLoader"*)* @_ZThn8_N5blink25WorkerClassicScriptLoader33OnFinishedLoadingWorkerMainScriptEv to i8*), i8* bitcast (void (%"class.blink::WorkerClassicScriptLoader"*)* @_ZThn8_N5blink25WorkerClassicScriptLoader31OnFailedLoadingWorkerMainScriptEv to i8*)] }, align 8
@_ZN5blink10http_names4kGETE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@__const._ZN5blink25WorkerClassicScriptLoader32LoadTopLevelScriptAsynchronouslyERNS_16ExecutionContextEPNS_15ResourceFetcherERKNS_4KURLENSt3__110unique_ptrINS_30WorkerMainScriptLoadParametersENS8_14default_deleteISA_EEEENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationENSH_11RequestModeENSH_15CredentialsModeEN4base12OnceCallbackIFvvEEESO_NSL_11StrongAliasINS_23RejectCoepUnsafeNoneTagEbEEN4mojo13PendingRemoteINSH_5blink16URLLoaderFactoryEEE.fetch_params = private unnamed_addr constant <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.40 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.41, %class.scoped_refptr.41, %class.scoped_refptr.41, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.42, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector", %"class.WTF::Vector.63", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.72 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.77 } } } }, { { { { i8, [7 x i8], %union.anon.77 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.82 } } } }, { { { { i8, [7 x i8], %union.anon.72 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.72 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.82 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.89 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet", i8, i8, [6 x i8], %class.scoped_refptr.93, %class.scoped_refptr.290, %class.scoped_refptr.292 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }> <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.40 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.41, %class.scoped_refptr.41, %class.scoped_refptr.41, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.42, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector", %"class.WTF::Vector.63", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.72 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.77 } } } }, { { { { i8, [7 x i8], %union.anon.77 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.82 } } } }, { { { { i8, [7 x i8], %union.anon.72 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.72 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.82 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.89 }, %"class.blink::ResourceRequestBody" } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.40 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.41, %class.scoped_refptr.41, %class.scoped_refptr.41, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.42, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector", %"class.WTF::Vector.63", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.72 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.77 } } } }, { { { { i8, [7 x i8], %union.anon.77 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.82 } } } }, { { { { i8, [7 x i8], %union.anon.72 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.72 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.82 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.89 } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.31" { %"class.std::__1::__compressed_pair.32" { %"struct.std::__1::__compressed_pair_elem.33" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::TimeDelta" { i64 -6148914691236517206 }, <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.40 } } } } } }, i8, [7 x i8] }> <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.40 } } } } } } { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.40 } } } } } { %"class.url::SchemeHostPort" <{ %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.37" { %"struct.std::__1::__compressed_pair_elem.38" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.37" { %"struct.std::__1::__compressed_pair_elem.38" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, { { { { i8, [7 x i8], %union.anon.40 } } } } { { { { i8, [7 x i8], %union.anon.40 } } } { { { i8, [7 x i8], %union.anon.40 } } { { i8, [7 x i8], %union.anon.40 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.40 { %"class.url::Origin::Nonce" { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %class.scoped_refptr.41 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.41 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.41 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.blink::HTTPHeaderMap" { %"class.WTF::HashMap" { %"class.WTF::HashTable" <{ %"struct.WTF::KeyValuePair"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } }, i16 -21846, [2 x i8] c"\AA\AA", i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, %class.scoped_refptr.42 { %"class.blink::WebURLRequestExtraData"* inttoptr (i64 -6148914691236517206 to %"class.blink::WebURLRequestExtraData"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" } } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" } } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" } } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" } } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" } } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.31" { %"class.std::__1::__compressed_pair.32" { %"struct.std::__1::__compressed_pair_elem.33" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.31" { %"class.std::__1::__compressed_pair.32" { %"struct.std::__1::__compressed_pair_elem.33" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector", %"class.WTF::Vector.63", %"class.WTF::String" } } } } } } { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector", %"class.WTF::Vector.63", %"class.WTF::String" } } } } } { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector", %"class.WTF::Vector.63", %"class.WTF::String" } } } } { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector", %"class.WTF::Vector.63", %"class.WTF::String" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector", %"class.WTF::Vector.63", %"class.WTF::String" } } { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector", %"class.WTF::Vector.63", %"class.WTF::String" } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.WTF::Vector" { %"class.WTF::VectorBuffer" { %"class.WTF::VectorBufferBase" { %class.scoped_refptr.41* inttoptr (i64 -6148914691236517206 to %class.scoped_refptr.41*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::Vector.63" { %"class.WTF::VectorBuffer.64" { %"class.WTF::VectorBufferBase.65" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } } }, { { { { i8, [7 x i8], %union.anon.72 } } } } { { { { i8, [7 x i8], %union.anon.72 } } } { { { i8, [7 x i8], %union.anon.72 } } { { i8, [7 x i8], %union.anon.72 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.72 { %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.77 } } } }, { { { { i8, [7 x i8], %union.anon.77 } } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.77 } } } } { { { { i8, [7 x i8], %union.anon.77 } } } { { { i8, [7 x i8], %union.anon.77 } } { { i8, [7 x i8], %union.anon.77 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.77 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } }, { { { { i8, [7 x i8], %union.anon.77 } } } } { { { { i8, [7 x i8], %union.anon.77 } } } { { { i8, [7 x i8], %union.anon.77 } } { { i8, [7 x i8], %union.anon.77 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.77 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } } }, i8 -86, i8 -86, i8 -86, i8 -86, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.82 } } } } { { { { i8, [7 x i8], %union.anon.82 } } } { { { i8, [7 x i8], %union.anon.82 } } { { i8, [7 x i8], %union.anon.82 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.82 { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], %union.anon.72 } } } } { { { { i8, [7 x i8], %union.anon.72 } } } { { { i8, [7 x i8], %union.anon.72 } } { { i8, [7 x i8], %union.anon.72 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.72 { %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { { { { i8, [7 x i8], %union.anon.72 } } } } { { { { i8, [7 x i8], %union.anon.72 } } } { { { i8, [7 x i8], %union.anon.72 } } { { i8, [7 x i8], %union.anon.72 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.72 { %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, i64 -6148914691236517206, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, i64 -6148914691236517206, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [2 x i8] c"\AA\AA", { { { { i8, [7 x i8], %union.anon.82 } } } } { { { { i8, [7 x i8], %union.anon.82 } } } { { { i8, [7 x i8], %union.anon.82 } } { { i8, [7 x i8], %union.anon.82 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.82 { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.31" { %"class.std::__1::__compressed_pair.32" { %"struct.std::__1::__compressed_pair_elem.33" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, %"class.mojo::PendingRemote" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase.88" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.89 { %"class.base::RefCountedData"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData"*) } }, %"class.blink::ResourceRequestBody" { %class.scoped_refptr.1003 { %"class.blink::EncodedFormData"* inttoptr (i64 -6148914691236517206 to %"class.blink::EncodedFormData"*) }, %"class.mojo::PendingRemote.1004" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase.88" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, [3 x i8], [5 x i8] }> <{ i32 -1431655766, i32 -1431655766, %"class.WTF::TextEncoding" { i8* inttoptr (i64 -6148914691236517206 to i8*) }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.31" { %"class.std::__1::__compressed_pair.32" { %"struct.std::__1::__compressed_pair_elem.33" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, [3 x i8] c"\AA\AA\AA", [5 x i8] c"\AA\AA\AA\AA\AA" }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet", i8, i8, [6 x i8], %class.scoped_refptr.93, %class.scoped_refptr.290, %class.scoped_refptr.292 } { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" } { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.WTF::TextPosition" { %"class.WTF::OrdinalNumber" { i32 -1431655766 }, %"class.WTF::OrdinalNumber" { i32 -1431655766 } }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, i8 -86, %"class.base::StrongAlias" { i8 -86 }, [5 x i8] c"\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.25 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::HashSet" { %"class.WTF::HashTable.90" <{ %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.93 { %"class.blink::DOMWrapperWorld"* inttoptr (i64 -6148914691236517206 to %"class.blink::DOMWrapperWorld"*) }, %class.scoped_refptr.290 { %"class.base::RefCountedData.291"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.291"*) }, %class.scoped_refptr.292 { %"class.base::RefCountedData.293"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.293"*) } }, i32 -1431655766, i32 -1431655766, %"struct.blink::FetchParameters::ResourceWidth" <{ float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.blink::ClientHintsPreferences" { %"struct.blink::WebEnabledClientHints" { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, [5 x i8] c"\AA\AA\AA\AA\AA" }>, align 8
@_ZN5blink10http_names15kReferrerPolicyE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10http_names12kOriginTrialE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [5 x i8] c"blob\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"filesystem\00", align 1
@.str.3 = private unnamed_addr constant [51 x i8] c"Refused to load the top-level worker script from '\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"' because it doesn't match the origin of the request URL '\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.7 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16ThreadableLoaderEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadableLoader]\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_16ThreadableLoaderEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16ThreadableLoaderEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16ThreadableLoaderEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16ThreadableLoaderEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16ThreadableLoaderEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.11 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22WorkerMainScriptLoaderEEEPKcv = private unnamed_addr constant [77 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::WorkerMainScriptLoader]\00", align 1
@_ZZN5blink11GCInfoTraitINS_22WorkerMainScriptLoaderEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_22WorkerMainScriptLoaderEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_22WorkerMainScriptLoaderEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_22WorkerMainScriptLoaderEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_22WorkerMainScriptLoaderEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [102 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<unsigned char, 0, WTF::PartitionAllocator>]\00", align 1
@.str.12 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.13 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21ContentSecurityPolicyEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ContentSecurityPolicy]\00", align 1
@_ZZN5blink11GCInfoTraitINS_21ContentSecurityPolicyEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21ContentSecurityPolicyEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_21ContentSecurityPolicyEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21ContentSecurityPolicyEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21ContentSecurityPolicyEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

@_ZN5blink25WorkerClassicScriptLoaderC1Ev = hidden unnamed_addr alias void (%"class.blink::WorkerClassicScriptLoader"*), void (%"class.blink::WorkerClassicScriptLoader"*)* @_ZN5blink25WorkerClassicScriptLoaderC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkerClassicScriptLoaderC2Ev(%"class.blink::WorkerClassicScriptLoader"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::WorkerClassicScriptLoader"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [7 x i8*] }, { [19 x i8*], [7 x i8*] }* @_ZTVN5blink25WorkerClassicScriptLoaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [7 x i8*] }, { [19 x i8*], [7 x i8*] }* @_ZTVN5blink25WorkerClassicScriptLoaderE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 8, i32 2
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 8, i32 3
  %6 = bitcast %"class.base::internal::BindStateBase"** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 57, i1 false)
  store i8 1, i8* %5, align 4
  %7 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 8, i32 4
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 9
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %8) #11
  %9 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 10
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %9) #11
  %10 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 11
  %11 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 15
  %12 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 19
  %13 = bitcast i8* %10 to i32*
  store i32 0, i32* %13, align 8
  %14 = bitcast i64* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false)
  store i32 2, i32* %12, align 8
  %15 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 20
  %16 = bitcast %"class.std::__1::unique_ptr.682"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false)
  ret void
}

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkerClassicScriptLoader17LoadSynchronouslyERNS_16ExecutionContextEPNS_15ResourceFetcherERKNS_4KURLENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationE(%"class.blink::WorkerClassicScriptLoader"*, %"class.blink::ExecutionContext"* dereferenceable(376), %"class.blink::ResourceFetcher"*, %"class.blink::KURL"* dereferenceable(112), i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::ResourceRequest", align 8
  %8 = alloca %"struct.blink::ResourceLoaderOptions", align 8
  %9 = alloca %"class.blink::ResourceRequest", align 8
  %10 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 9
  %11 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %10, %"class.blink::KURL"* dereferenceable(112) %3) #11
  %12 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 22
  %13 = ptrtoint %"class.blink::ResourceFetcher"* %2 to i64
  %14 = bitcast %"class.blink::Member.688"* %12 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %6
  %18 = bitcast %"class.blink::ResourceFetcher"* %2 to i8*
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %18) #11
  br label %20

20:                                               ; preds = %6, %17
  %21 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %7, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1032, i8* nonnull %21) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 1032, i1 false)
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* nonnull %7, %"class.blink::KURL"* dereferenceable(112) %3) #11
  %22 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %7, i64 0, i32 0
  %23 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names4kGETE, align 8
  call void @_ZN5blink19ResourceRequestHead13SetHttpMethodERKN3WTF12AtomicStringE(%"class.blink::ResourceRequestHead"* nonnull %22, %"class.WTF::AtomicString"* dereferenceable(8) %23) #11
  %24 = getelementptr inbounds %"class.blink::Member.688", %"class.blink::Member.688"* %12, i64 0, i32 0, i32 0
  %25 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ResourceFetcher", %"class.blink::ResourceFetcher"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::DetachableResourceFetcherProperties"*, %"class.blink::DetachableResourceFetcherProperties"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %27, i64 0, i32 1, i32 0, i32 0
  %29 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %28, align 8
  %30 = icmp eq %"class.blink::ResourceFetcherProperties"* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %20
  %32 = bitcast %"class.blink::ResourceFetcherProperties"* %29 to %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)***
  %33 = load %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)**, %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)*, %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)** %33, i64 3
  %35 = load %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)*, %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)** %34, align 8
  %36 = call dereferenceable(8) %"class.blink::FetchClientSettingsObject"* %35(%"class.blink::ResourceFetcherProperties"* nonnull %29) #11
  br label %40

37:                                               ; preds = %20
  %38 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %27, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::FetchClientSettingsObject"*, %"class.blink::FetchClientSettingsObject"** %38, align 8
  br label %40

40:                                               ; preds = %31, %37
  %41 = phi %"class.blink::FetchClientSettingsObject"* [ %36, %31 ], [ %39, %37 ]
  %42 = bitcast %"class.blink::FetchClientSettingsObject"* %41 to i32 (%"class.blink::FetchClientSettingsObject"*)***
  %43 = load i32 (%"class.blink::FetchClientSettingsObject"*)**, i32 (%"class.blink::FetchClientSettingsObject"*)*** %42, align 8
  %44 = getelementptr inbounds i32 (%"class.blink::FetchClientSettingsObject"*)*, i32 (%"class.blink::FetchClientSettingsObject"*)** %43, i64 9
  %45 = load i32 (%"class.blink::FetchClientSettingsObject"*)*, i32 (%"class.blink::FetchClientSettingsObject"*)** %44, align 8
  %46 = call i32 %45(%"class.blink::FetchClientSettingsObject"* %41) #11
  call void @_ZN5blink19ResourceRequestHead48SetExternalRequestStateFromRequestorAddressSpaceEN7network5mojom14IPAddressSpaceE(%"class.blink::ResourceRequestHead"* nonnull %22, i32 %46) #11
  %47 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %7, i64 0, i32 0, i32 15
  store i32 %4, i32* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %7, i64 0, i32 0, i32 16
  store i32 %5, i32* %48, align 4
  %49 = bitcast %"struct.blink::ResourceLoaderOptions"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %49) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 112, i1 false)
  %50 = call %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"* %1) #11
  call void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"* nonnull %8, %"class.blink::DOMWrapperWorld"* %50) #11
  %51 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %8, i64 0, i32 8
  store i8 1, i8* %51, align 8
  %52 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %8, i64 0, i32 4
  store i8 0, i8* %52, align 1
  %53 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16ThreadableLoaderEEEPhm(i64 304) #11
  %54 = bitcast i8* %53 to %"class.blink::ThreadableLoader"*
  %55 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 0
  call void @_ZN5blink16ThreadableLoaderC1ERNS_16ExecutionContextEPNS_22ThreadableLoaderClientERKNS_21ResourceLoaderOptionsEPNS_15ResourceFetcherE(%"class.blink::ThreadableLoader"* %54, %"class.blink::ExecutionContext"* dereferenceable(376) %1, %"class.blink::ThreadableLoaderClient"* %55, %"struct.blink::ResourceLoaderOptions"* nonnull dereferenceable(112) %8, %"class.blink::ResourceFetcher"* %2) #11
  %56 = getelementptr inbounds i8, i8* %53, i64 -4
  %57 = bitcast i8* %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = or i16 %58, 1
  store atomic i16 %59, i16* %57 release, align 2
  %60 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 4
  %61 = ptrtoint i8* %53 to i64
  %62 = bitcast %"class.blink::Member"* %60 to i64*
  store atomic i64 %61, i64* %62 monotonic, align 8
  %63 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %64 = icmp eq i32 %63, 0
  %65 = bitcast i8* %53 to %"class.blink::ThreadableLoader"*
  br i1 %64, label %70, label %66

66:                                               ; preds = %40
  %67 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #11
  %68 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %60, i64 0, i32 0, i32 0
  %69 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %68, align 8
  br label %70

70:                                               ; preds = %40, %66
  %71 = phi %"class.blink::ThreadableLoader"* [ %65, %40 ], [ %69, %66 ]
  call void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"* nonnull %9, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %7) #11
  call void @_ZN5blink16ThreadableLoader5StartENS_15ResourceRequestE(%"class.blink::ThreadableLoader"* %71, %"class.blink::ResourceRequest"* nonnull %9) #11
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %9) #11
  call void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %49) #11
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 1032, i8* nonnull %21) #11
  ret void
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

declare void @_ZN5blink19ResourceRequestHead13SetHttpMethodERKN3WTF12AtomicStringE(%"class.blink::ResourceRequestHead"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink19ResourceRequestHead48SetExternalRequestStateFromRequestorAddressSpaceEN7network5mojom14IPAddressSpaceE(%"class.blink::ResourceRequestHead"*, i32) local_unnamed_addr #1

declare %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"*, %"class.blink::DOMWrapperWorld"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink16ThreadableLoader5StartENS_15ResourceRequestE(%"class.blink::ThreadableLoader"*, %"class.blink::ResourceRequest"*) local_unnamed_addr #1

declare void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"*, %"class.blink::ResourceRequest"* dereferenceable(1032)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkerClassicScriptLoader32LoadTopLevelScriptAsynchronouslyERNS_16ExecutionContextEPNS_15ResourceFetcherERKNS_4KURLENSt3__110unique_ptrINS_30WorkerMainScriptLoadParametersENS8_14default_deleteISA_EEEENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationENSH_11RequestModeENSH_15CredentialsModeEN4base12OnceCallbackIFvvEEESO_NSL_11StrongAliasINS_23RejectCoepUnsafeNoneTagEbEEN4mojo13PendingRemoteINSH_5blink16URLLoaderFactoryEEE(%"class.blink::WorkerClassicScriptLoader"*, %"class.blink::ExecutionContext"* dereferenceable(376), %"class.blink::ResourceFetcher"*, %"class.blink::KURL"* dereferenceable(112), %"struct.blink::WorkerMainScriptLoadParameters"*, i32, i32, i32, i32, %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, i8, %"class.mojo::PendingRemote.1182"*) local_unnamed_addr #0 align 2 {
  %14 = alloca %"class.base::OnceCallback", align 8
  %15 = alloca %"class.blink::ResourceRequest", align 8
  %16 = alloca %"class.blink::FetchParameters", align 8
  %17 = alloca %"class.blink::ResourceRequest", align 8
  %18 = alloca %"struct.blink::ResourceLoaderOptions", align 8
  %19 = alloca %"struct.blink::ResourceLoaderOptions", align 8
  %20 = alloca %"class.blink::ResourceRequest", align 8
  %21 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 2, i32 0
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  %23 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %21, %"class.base::internal::CallbackBase"* dereferenceable(8) %22) #11
  %24 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 3, i32 0
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  %26 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %24, %"class.base::internal::CallbackBase"* dereferenceable(8) %25) #11
  %27 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 9
  %28 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %27, %"class.blink::KURL"* dereferenceable(112) %3) #11
  %29 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 22
  %30 = ptrtoint %"class.blink::ResourceFetcher"* %2 to i64
  %31 = bitcast %"class.blink::Member.688"* %29 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %13
  %35 = bitcast %"class.blink::ResourceFetcher"* %2 to i8*
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #11
  br label %37

37:                                               ; preds = %13, %34
  %38 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 14
  store i8 1, i8* %38, align 1
  %39 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %15, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1032, i8* nonnull %39) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 1032, i1 false)
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* nonnull %15, %"class.blink::KURL"* dereferenceable(112) %3) #11
  %40 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %15, i64 0, i32 0
  %41 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names4kGETE, align 8
  call void @_ZN5blink19ResourceRequestHead13SetHttpMethodERKN3WTF12AtomicStringE(%"class.blink::ResourceRequestHead"* nonnull %40, %"class.WTF::AtomicString"* dereferenceable(8) %41) #11
  %42 = getelementptr inbounds %"class.blink::Member.688", %"class.blink::Member.688"* %29, i64 0, i32 0, i32 0
  %43 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ResourceFetcher", %"class.blink::ResourceFetcher"* %43, i64 0, i32 2, i32 0, i32 0
  %45 = load %"class.blink::DetachableResourceFetcherProperties"*, %"class.blink::DetachableResourceFetcherProperties"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %45, i64 0, i32 1, i32 0, i32 0
  %47 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %46, align 8
  %48 = icmp eq %"class.blink::ResourceFetcherProperties"* %47, null
  br i1 %48, label %55, label %49

49:                                               ; preds = %37
  %50 = bitcast %"class.blink::ResourceFetcherProperties"* %47 to %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)***
  %51 = load %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)**, %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)*, %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)** %51, i64 3
  %53 = load %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)*, %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)** %52, align 8
  %54 = call dereferenceable(8) %"class.blink::FetchClientSettingsObject"* %53(%"class.blink::ResourceFetcherProperties"* nonnull %47) #11
  br label %58

55:                                               ; preds = %37
  %56 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %45, i64 0, i32 2, i32 0, i32 0
  %57 = load %"class.blink::FetchClientSettingsObject"*, %"class.blink::FetchClientSettingsObject"** %56, align 8
  br label %58

58:                                               ; preds = %49, %55
  %59 = phi %"class.blink::FetchClientSettingsObject"* [ %54, %49 ], [ %57, %55 ]
  %60 = bitcast %"class.blink::FetchClientSettingsObject"* %59 to i32 (%"class.blink::FetchClientSettingsObject"*)***
  %61 = load i32 (%"class.blink::FetchClientSettingsObject"*)**, i32 (%"class.blink::FetchClientSettingsObject"*)*** %60, align 8
  %62 = getelementptr inbounds i32 (%"class.blink::FetchClientSettingsObject"*)*, i32 (%"class.blink::FetchClientSettingsObject"*)** %61, i64 9
  %63 = load i32 (%"class.blink::FetchClientSettingsObject"*)*, i32 (%"class.blink::FetchClientSettingsObject"*)** %62, align 8
  %64 = call i32 %63(%"class.blink::FetchClientSettingsObject"* %59) #11
  call void @_ZN5blink19ResourceRequestHead48SetExternalRequestStateFromRequestorAddressSpaceEN7network5mojom14IPAddressSpaceE(%"class.blink::ResourceRequestHead"* nonnull %40, i32 %64) #11
  %65 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %15, i64 0, i32 0, i32 15
  store i32 %5, i32* %65, align 8
  %66 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %15, i64 0, i32 0, i32 16
  store i32 %6, i32* %66, align 4
  %67 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %15, i64 0, i32 0, i32 17
  store i32 %7, i32* %67, align 8
  %68 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %15, i64 0, i32 0, i32 19
  store i32 %8, i32* %68, align 8
  %69 = icmp eq %"struct.blink::WorkerMainScriptLoadParameters"* %4, null
  br i1 %69, label %118, label %70

70:                                               ; preds = %58
  %71 = call i64 @_ZN5blink22CreateUniqueIdentifierEv() #11
  %72 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %15, i64 0, i32 0, i32 42
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %15, i64 0, i32 0, i32 22
  %74 = bitcast %"class.WTF::String"* %73 to i64*
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %73, i64 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  store i64 0, i64* %74, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #11
  br label %91

91:                                               ; preds = %90, %87, %70
  call void @_ZN5blink19ResourceRequestHead11SetPriorityENS_13WebURLRequest8PriorityEi(%"class.blink::ResourceRequestHead"* nonnull %40, i32 3, i32 0) #11
  %92 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1344, i8* nonnull %92) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* align 8 getelementptr inbounds (<{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.40 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.41, %class.scoped_refptr.41, %class.scoped_refptr.41, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.42, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector", %"class.WTF::Vector.63", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.72 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.77 } } } }, { { { { i8, [7 x i8], %union.anon.77 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.82 } } } }, { { { { i8, [7 x i8], %union.anon.72 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.72 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.82 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.89 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet", i8, i8, [6 x i8], %class.scoped_refptr.93, %class.scoped_refptr.290, %class.scoped_refptr.292 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>, <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.40 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.41, %class.scoped_refptr.41, %class.scoped_refptr.41, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.42, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector", %"class.WTF::Vector.63", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.72 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.77 } } } }, { { { { i8, [7 x i8], %union.anon.77 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.82 } } } }, { { { { i8, [7 x i8], %union.anon.72 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.72 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.82 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.89 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.31" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet", i8, i8, [6 x i8], %class.scoped_refptr.93, %class.scoped_refptr.290, %class.scoped_refptr.292 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>* @__const._ZN5blink25WorkerClassicScriptLoader32LoadTopLevelScriptAsynchronouslyERNS_16ExecutionContextEPNS_15ResourceFetcherERKNS_4KURLENSt3__110unique_ptrINS_30WorkerMainScriptLoadParametersENS8_14default_deleteISA_EEEENS_5mojom18RequestContextTypeEN7network5mojom18RequestDestinationENSH_11RequestModeENSH_15CredentialsModeEN4base12OnceCallbackIFvvEEESO_NSL_11StrongAliasINS_23RejectCoepUnsafeNoneTagEbEEN4mojo13PendingRemoteINSH_5blink16URLLoaderFactoryEEE.fetch_params, i64 0, i32 0, i32 0, i32 0, i32 0), i64 1344, i1 false)
  call void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"* nonnull %17, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %15) #11
  %93 = bitcast %"struct.blink::ResourceLoaderOptions"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %93) #11
  %94 = call %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"* %1) #11
  call void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"* nonnull %18, %"class.blink::DOMWrapperWorld"* %94) #11
  call void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"* nonnull %16, %"class.blink::ResourceRequest"* nonnull %17, %"struct.blink::ResourceLoaderOptions"* nonnull dereferenceable(112) %18) #11
  call void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %93) #11
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %17) #11
  %95 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_22WorkerMainScriptLoaderEEEPhm(i64 2920) #11
  %96 = bitcast i8* %95 to %"class.blink::WorkerMainScriptLoader"*
  call void @_ZN5blink22WorkerMainScriptLoaderC1Ev(%"class.blink::WorkerMainScriptLoader"* %96) #11
  %97 = getelementptr inbounds i8, i8* %95, i64 -4
  %98 = bitcast i8* %97 to i16*
  %99 = load atomic i16, i16* %98 monotonic, align 2
  %100 = or i16 %99, 1
  store atomic i16 %100, i16* %98 release, align 2
  %101 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 5
  %102 = ptrtoint i8* %95 to i64
  %103 = bitcast %"class.blink::Member.1"* %101 to i64*
  store atomic i64 %102, i64* %103 monotonic, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  %106 = bitcast i8* %95 to %"class.blink::WorkerMainScriptLoader"*
  br i1 %105, label %111, label %107

107:                                              ; preds = %91
  %108 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #11
  %109 = getelementptr inbounds %"class.blink::Member.1", %"class.blink::Member.1"* %101, i64 0, i32 0, i32 0
  %110 = load %"class.blink::WorkerMainScriptLoader"*, %"class.blink::WorkerMainScriptLoader"** %109, align 8
  br label %111

111:                                              ; preds = %91, %107
  %112 = phi %"class.blink::WorkerMainScriptLoader"* [ %106, %91 ], [ %110, %107 ]
  %113 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %42, align 8
  %114 = call %"class.blink::FetchContext"* @_ZNK5blink15ResourceFetcher7ContextEv(%"class.blink::ResourceFetcher"* %113) #11
  %115 = getelementptr inbounds %"class.blink::ResourceFetcher", %"class.blink::ResourceFetcher"* %2, i64 0, i32 3, i32 0, i32 0
  %116 = load %"class.blink::ResourceLoadObserver"*, %"class.blink::ResourceLoadObserver"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 1
  call void @_ZN5blink22WorkerMainScriptLoader5StartERKNS_15FetchParametersENSt3__110unique_ptrINS_30WorkerMainScriptLoadParametersENS4_14default_deleteIS6_EEEEPNS_12FetchContextEPNS_20ResourceLoadObserverEPNS_28WorkerMainScriptLoaderClientE(%"class.blink::WorkerMainScriptLoader"* %112, %"class.blink::FetchParameters"* nonnull dereferenceable(1344) %16, %"struct.blink::WorkerMainScriptLoadParameters"* nonnull %4, %"class.blink::FetchContext"* %114, %"class.blink::ResourceLoadObserver"* %116, %"class.blink::WorkerMainScriptLoaderClient"* %117) #11
  call void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 1344, i8* nonnull %92) #11
  br label %184

118:                                              ; preds = %58
  %119 = bitcast %"struct.blink::ResourceLoaderOptions"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %119) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 112, i1 false)
  %120 = call %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"* %1) #11
  call void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"* nonnull %19, %"class.blink::DOMWrapperWorld"* %120) #11
  %121 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 13
  store i8 1, i8* %121, align 2
  %122 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %19, i64 0, i32 5, i32 0
  store i8 %11, i8* %122, align 2
  %123 = getelementptr inbounds %"class.mojo::PendingRemote.1182", %"class.mojo::PendingRemote.1182"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %148, label %126

126:                                              ; preds = %118
  %127 = call i8* @_Znwm(i64 12) #12
  %128 = bitcast i8* %127 to i32*
  store i32 0, i32* %128, align 4
  %129 = getelementptr inbounds i8, i8* %127, i64 4
  %130 = bitcast i8* %129 to %"struct.mojo::internal::PendingRemoteState"*
  %131 = getelementptr inbounds %"class.mojo::PendingRemote.1182", %"class.mojo::PendingRemote.1182"* %12, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* %130, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %131) #11
  %132 = atomicrmw add i32* %128, i32 1 monotonic
  %133 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %19, i64 0, i32 11
  %134 = ptrtoint i8* %127 to i64
  %135 = bitcast %class.scoped_refptr.290* %133 to i64*
  %136 = getelementptr inbounds %class.scoped_refptr.290, %class.scoped_refptr.290* %133, i64 0, i32 0
  %137 = load %"class.base::RefCountedData.291"*, %"class.base::RefCountedData.291"** %136, align 8
  store i64 %134, i64* %135, align 8
  %138 = icmp eq %"class.base::RefCountedData.291"* %137, null
  br i1 %138, label %148, label %139

139:                                              ; preds = %126
  %140 = getelementptr inbounds %"class.base::RefCountedData.291", %"class.base::RefCountedData.291"* %137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = atomicrmw sub i32* %140, i32 1 acq_rel
  %142 = icmp eq i32 %141, 1
  br i1 %142, label %143, label %148

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.base::RefCountedData.291", %"class.base::RefCountedData.291"* %137, i64 0, i32 0
  %145 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1237", %"class.base::RefCountedThreadSafe.1237"* %144, i64 1
  %146 = bitcast %"class.base::RefCountedThreadSafe.1237"* %145 to %"struct.mojo::internal::PendingRemoteState"*
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %146) #11
  %147 = bitcast %"class.base::RefCountedData.291"* %137 to i8*
  call void @_ZdlPv(i8* %147) #12
  br label %148

148:                                              ; preds = %118, %143, %139, %126
  %149 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16ThreadableLoaderEEEPhm(i64 304) #11
  %150 = bitcast i8* %149 to %"class.blink::ThreadableLoader"*
  %151 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 0
  call void @_ZN5blink16ThreadableLoaderC1ERNS_16ExecutionContextEPNS_22ThreadableLoaderClientERKNS_21ResourceLoaderOptionsEPNS_15ResourceFetcherE(%"class.blink::ThreadableLoader"* %150, %"class.blink::ExecutionContext"* dereferenceable(376) %1, %"class.blink::ThreadableLoaderClient"* %151, %"struct.blink::ResourceLoaderOptions"* nonnull dereferenceable(112) %19, %"class.blink::ResourceFetcher"* %2) #11
  %152 = getelementptr inbounds i8, i8* %149, i64 -4
  %153 = bitcast i8* %152 to i16*
  %154 = load atomic i16, i16* %153 monotonic, align 2
  %155 = or i16 %154, 1
  store atomic i16 %155, i16* %153 release, align 2
  %156 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 4
  %157 = ptrtoint i8* %149 to i64
  %158 = bitcast %"class.blink::Member"* %156 to i64*
  store atomic i64 %157, i64* %158 monotonic, align 8
  %159 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %160 = icmp eq i32 %159, 0
  %161 = bitcast i8* %149 to %"class.blink::ThreadableLoader"*
  br i1 %160, label %166, label %162

162:                                              ; preds = %148
  %163 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %149) #11
  %164 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %156, i64 0, i32 0, i32 0
  %165 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %164, align 8
  br label %166

166:                                              ; preds = %148, %162
  %167 = phi %"class.blink::ThreadableLoader"* [ %161, %148 ], [ %165, %162 ]
  call void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"* nonnull %20, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %15) #11
  call void @_ZN5blink16ThreadableLoader5StartENS_15ResourceRequestE(%"class.blink::ThreadableLoader"* %167, %"class.blink::ResourceRequest"* nonnull %20) #11
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %20) #11
  %168 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 11
  %169 = load i8, i8* %168, align 8, !range !2
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %183, label %171

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %173 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %172, align 8
  %174 = icmp eq %"class.base::internal::BindStateBase"* %173, null
  br i1 %174, label %183, label %175

175:                                              ; preds = %171
  %176 = ptrtoint %"class.base::internal::BindStateBase"* %173 to i64
  %177 = bitcast %"class.base::OnceCallback"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #11
  %178 = bitcast %"class.base::OnceCallback"* %14 to i64*
  store i64 %176, i64* %178, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %172, align 8
  %179 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %14, i64 0, i32 0
  %180 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %173, i64 0, i32 1
  %181 = bitcast void ()** %180 to void (%"class.base::internal::BindStateBase"*)**
  %182 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %181, align 8
  call void %182(%"class.base::internal::BindStateBase"* nonnull %173) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %179) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177) #11
  br label %183

183:                                              ; preds = %175, %171, %166
  call void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %119) #11
  br label %184

184:                                              ; preds = %111, %183
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 1032, i8* nonnull %39) #11
  ret void
}

declare i64 @_ZN5blink22CreateUniqueIdentifierEv() local_unnamed_addr #1

declare void @_ZN5blink19ResourceRequestHead11SetPriorityENS_13WebURLRequest8PriorityEi(%"class.blink::ResourceRequestHead"*, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112)) unnamed_addr #1

declare void @_ZN5blink22WorkerMainScriptLoader5StartERKNS_15FetchParametersENSt3__110unique_ptrINS_30WorkerMainScriptLoadParametersENS4_14default_deleteIS6_EEEEPNS_12FetchContextEPNS_20ResourceLoadObserverEPNS_28WorkerMainScriptLoaderClientE(%"class.blink::WorkerMainScriptLoader"*, %"class.blink::FetchParameters"* dereferenceable(1344), %"struct.blink::WorkerMainScriptLoadParameters"*, %"class.blink::FetchContext"*, %"class.blink::ResourceLoadObserver"*, %"class.blink::WorkerMainScriptLoaderClient"*) local_unnamed_addr #1

declare %"class.blink::FetchContext"* @_ZNK5blink15ResourceFetcher7ContextEv(%"class.blink::ResourceFetcher"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkerClassicScriptLoader14NotifyFinishedEv(%"class.blink::WorkerClassicScriptLoader"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %5 = icmp eq %"class.base::internal::BindStateBase"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.base::internal::BindStateBase"* %4 to i64
  %8 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %7, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %3, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %4, i64 0, i32 1
  %12 = bitcast void ()** %11 to void (%"class.base::internal::BindStateBase"*)**
  %13 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %12, align 8
  tail call void %13(%"class.base::internal::BindStateBase"* nonnull %4) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  br label %14

14:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink25WorkerClassicScriptLoader11ResponseURLEv(%"class.blink::WorkerClassicScriptLoader"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 10
  ret %"class.blink::KURL"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkerClassicScriptLoader18DidReceiveResponseEmRKNS_16ResourceResponseE(%"class.blink::WorkerClassicScriptLoader"*, i64, %"class.blink::ResourceResponse"* dereferenceable(1072)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::KURL", align 8
  %11 = tail call i32 @_ZNK5blink16ResourceResponse14HttpStatusCodeEv(%"class.blink::ResourceResponse"* %2) #11
  %12 = add i32 %11, -200
  %13 = icmp ugt i32 %12, 99
  br i1 %13, label %14, label %34

14:                                               ; preds = %3
  %15 = tail call i32 @_ZNK5blink16ResourceResponse14HttpStatusCodeEv(%"class.blink::ResourceResponse"* %2) #11
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %34, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 11
  store i8 1, i8* %18, align 8
  %19 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 4, i32 0, i32 0
  %20 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %19, align 8
  %21 = icmp eq %"class.blink::ThreadableLoader"* %20, null
  br i1 %21, label %299, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %23, align 8
  %25 = icmp eq %"class.base::internal::BindStateBase"* %24, null
  br i1 %25, label %299, label %26

26:                                               ; preds = %22
  %27 = ptrtoint %"class.base::internal::BindStateBase"* %24 to i64
  %28 = bitcast %"class.base::OnceCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  %29 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %27, i64* %29, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  %31 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %24, i64 0, i32 1
  %32 = bitcast void ()** %31 to void (%"class.base::internal::BindStateBase"*)**
  %33 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %32, align 8
  tail call void %33(%"class.base::internal::BindStateBase"* nonnull %24) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %299

34:                                               ; preds = %14, %3
  %35 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 22, i32 0, i32 0
  %36 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ResourceFetcher", %"class.blink::ResourceFetcher"* %36, i64 0, i32 7, i32 0, i32 0
  %38 = load %"class.blink::DetachableUseCounter"*, %"class.blink::DetachableUseCounter"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::DetachableUseCounter", %"class.blink::DetachableUseCounter"* %38, i64 0, i32 0
  %40 = getelementptr inbounds %"class.blink::ResourceFetcher", %"class.blink::ResourceFetcher"* %36, i64 0, i32 8, i32 0, i32 0
  %41 = load %"class.blink::DetachableConsoleLogger"*, %"class.blink::DetachableConsoleLogger"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::DetachableConsoleLogger", %"class.blink::DetachableConsoleLogger"* %41, i64 0, i32 0
  %43 = getelementptr inbounds %"class.blink::ResourceFetcher", %"class.blink::ResourceFetcher"* %36, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::DetachableResourceFetcherProperties"*, %"class.blink::DetachableResourceFetcherProperties"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %44, i64 0, i32 1, i32 0, i32 0
  %46 = load %"class.blink::ResourceFetcherProperties"*, %"class.blink::ResourceFetcherProperties"** %45, align 8
  %47 = icmp eq %"class.blink::ResourceFetcherProperties"* %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %34
  %49 = bitcast %"class.blink::ResourceFetcherProperties"* %46 to %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)***
  %50 = load %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)**, %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)*, %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)** %50, i64 3
  %52 = load %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)*, %"class.blink::FetchClientSettingsObject"* (%"class.blink::ResourceFetcherProperties"*)** %51, align 8
  %53 = tail call dereferenceable(8) %"class.blink::FetchClientSettingsObject"* %52(%"class.blink::ResourceFetcherProperties"* nonnull %46) #11
  br label %57

54:                                               ; preds = %34
  %55 = getelementptr inbounds %"class.blink::DetachableResourceFetcherProperties", %"class.blink::DetachableResourceFetcherProperties"* %44, i64 0, i32 2, i32 0, i32 0
  %56 = load %"class.blink::FetchClientSettingsObject"*, %"class.blink::FetchClientSettingsObject"** %55, align 8
  br label %57

57:                                               ; preds = %48, %54
  %58 = phi %"class.blink::FetchClientSettingsObject"* [ %53, %48 ], [ %56, %54 ]
  %59 = bitcast %"class.blink::FetchClientSettingsObject"* %58 to i32 (%"class.blink::FetchClientSettingsObject"*)***
  %60 = load i32 (%"class.blink::FetchClientSettingsObject"*)**, i32 (%"class.blink::FetchClientSettingsObject"*)*** %59, align 8
  %61 = getelementptr inbounds i32 (%"class.blink::FetchClientSettingsObject"*)*, i32 (%"class.blink::FetchClientSettingsObject"*)** %60, i64 8
  %62 = load i32 (%"class.blink::FetchClientSettingsObject"*)*, i32 (%"class.blink::FetchClientSettingsObject"*)** %61, align 8
  %63 = tail call i32 %62(%"class.blink::FetchClientSettingsObject"* %58) #11
  %64 = tail call zeroext i1 @_ZN5blink16AllowedByNosniff16MimeTypeAsScriptERNS_10UseCounterEPNS_13ConsoleLoggerERKNS_16ResourceResponseENS0_13MimeTypeCheckE(%"class.blink::UseCounter"* dereferenceable(8) %39, %"class.blink::ConsoleLogger"* %42, %"class.blink::ResourceResponse"* dereferenceable(1072) %2, i32 %63) #11
  br i1 %64, label %82, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 11
  store i8 1, i8* %66, align 8
  %67 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 4, i32 0, i32 0
  %68 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %67, align 8
  %69 = icmp eq %"class.blink::ThreadableLoader"* %68, null
  br i1 %69, label %299, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %72 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %71, align 8
  %73 = icmp eq %"class.base::internal::BindStateBase"* %72, null
  br i1 %73, label %299, label %74

74:                                               ; preds = %70
  %75 = ptrtoint %"class.base::internal::BindStateBase"* %72 to i64
  %76 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #11
  %77 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %75, i64* %77, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %71, align 8
  %78 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  %79 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %72, i64 0, i32 1
  %80 = bitcast void ()** %79 to void (%"class.base::internal::BindStateBase"*)**
  %81 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %80, align 8
  tail call void %81(%"class.base::internal::BindStateBase"* nonnull %72) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %78) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #11
  br label %299

82:                                               ; preds = %57
  %83 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 14
  %84 = load i8, i8* %83, align 1, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %141, label %86

86:                                               ; preds = %82
  %87 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #11
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %88, align 8
  %89 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 9
  %90 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %2) #11
  %91 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_126CheckSameOriginEnforcementERKNS_4KURLES3_(%"class.blink::KURL"* dereferenceable(112) %89, %"class.blink::KURL"* dereferenceable(112) %90) #11
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %94, label %93

93:                                               ; preds = %86
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %88, align 8
  br label %98

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %95) #11
  call void @_ZNK5blink16ResourceResponse11ResponseUrlEv(%"class.blink::KURL"* nonnull sret %5, %"class.blink::ResourceResponse"* %2) #11
  %96 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_126CheckSameOriginEnforcementERKNS_4KURLES3_(%"class.blink::KURL"* dereferenceable(112) %89, %"class.blink::KURL"* nonnull dereferenceable(112) %5) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %95) #11
  store %"class.WTF::StringImpl"* %96, %"class.WTF::StringImpl"** %88, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %140, label %98

98:                                               ; preds = %93, %94
  %99 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %35, align 8
  %100 = getelementptr inbounds %"class.blink::ResourceFetcher", %"class.blink::ResourceFetcher"* %99, i64 0, i32 8, i32 0, i32 0
  %101 = load %"class.blink::DetachableConsoleLogger"*, %"class.blink::DetachableConsoleLogger"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::DetachableConsoleLogger", %"class.blink::DetachableConsoleLogger"* %101, i64 0, i32 0
  %103 = bitcast %"class.blink::DetachableConsoleLogger"* %101 to void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)***
  %104 = load void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)**, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)** %104, i64 3
  %106 = load void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)** %105, align 8
  call void %106(%"class.blink::ConsoleLogger"* %102, i32 7, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %9, i1 zeroext false) #11
  %107 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 11
  store i8 1, i8* %107, align 8
  %108 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 4, i32 0, i32 0
  %109 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %108, align 8
  %110 = icmp eq %"class.blink::ThreadableLoader"* %109, null
  br i1 %110, label %123, label %111

111:                                              ; preds = %98
  %112 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %113 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %112, align 8
  %114 = icmp eq %"class.base::internal::BindStateBase"* %113, null
  br i1 %114, label %123, label %115

115:                                              ; preds = %111
  %116 = ptrtoint %"class.base::internal::BindStateBase"* %113 to i64
  %117 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #11
  %118 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %116, i64* %118, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %112, align 8
  %119 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %120 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %113, i64 0, i32 1
  %121 = bitcast void ()** %120 to void (%"class.base::internal::BindStateBase"*)**
  %122 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %121, align 8
  call void %122(%"class.base::internal::BindStateBase"* nonnull %113) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %119) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #11
  br label %123

123:                                              ; preds = %98, %111, %115
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #11
  br label %139

139:                                              ; preds = %123, %135, %138
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #11
  br label %299

140:                                              ; preds = %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #11
  br label %141

141:                                              ; preds = %140, %82
  %142 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 15
  store i64 %1, i64* %142, align 8
  %143 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %143) #11
  call void @_ZNK5blink16ResourceResponse11ResponseUrlEv(%"class.blink::KURL"* nonnull sret %10, %"class.blink::ResourceResponse"* %2) #11
  %144 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 10
  %145 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %144, %"class.blink::KURL"* nonnull dereferenceable(112) %10) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %143) #11
  %146 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse16TextEncodingNameEv(%"class.blink::ResourceResponse"* %2) #11
  %147 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 6
  %148 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %146, i64 0, i32 0, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %168, label %151

151:                                              ; preds = %141
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %168

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = zext i32 %158 to i33
  %160 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %159, i33 1) #11
  %161 = extractvalue { i33, i1 } %160, 1
  %162 = extractvalue { i33, i1 } %160, 0
  %163 = icmp slt i33 %162, 0
  %164 = or i1 %161, %163
  br i1 %164, label %165, label %166, !prof !3

165:                                              ; preds = %156
  call void @llvm.trap() #11
  unreachable

166:                                              ; preds = %156
  %167 = trunc i33 %162 to i32
  store i32 %167, i32* %157, align 4
  br label %168

168:                                              ; preds = %166, %151, %141
  %169 = ptrtoint %"class.WTF::StringImpl"* %149 to i64
  %170 = bitcast %"class.WTF::String"* %147 to i64*
  %171 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %147, i64 0, i32 0, i32 0
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %171, align 8
  store i64 %169, i64* %170, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %187, label %174

174:                                              ; preds = %168
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  br i1 %178, label %181, label %183

181:                                              ; preds = %174
  %182 = add i32 %180, -1
  store i32 %182, i32* %179, align 4
  br label %183

183:                                              ; preds = %181, %174
  %184 = phi i32 [ %182, %181 ], [ %180, %174 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %172) #11
  br label %187

187:                                              ; preds = %168, %183, %186
  %188 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %2, i64 0, i32 49
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 16
  store i64 %189, i64* %190, align 8
  %191 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %2, i64 0, i32 9
  %192 = load i32, i32* %191, align 4
  %193 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 19
  store i32 %192, i32* %193, align 8
  %194 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names15kReferrerPolicyE, align 8
  %195 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse15HttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"* %2, %"class.WTF::AtomicString"* dereferenceable(8) %194) #11
  %196 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 21
  %197 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %195, i64 0, i32 0, i32 0, i32 0
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %197, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %217, label %200

200:                                              ; preds = %187
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %217

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = zext i32 %207 to i33
  %209 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %208, i33 1) #11
  %210 = extractvalue { i33, i1 } %209, 1
  %211 = extractvalue { i33, i1 } %209, 0
  %212 = icmp slt i33 %211, 0
  %213 = or i1 %210, %212
  br i1 %213, label %214, label %215, !prof !3

214:                                              ; preds = %205
  call void @llvm.trap() #11
  unreachable

215:                                              ; preds = %205
  %216 = trunc i33 %211 to i32
  store i32 %216, i32* %206, align 4
  br label %217

217:                                              ; preds = %215, %200, %187
  %218 = ptrtoint %"class.WTF::StringImpl"* %198 to i64
  %219 = bitcast %"class.WTF::String"* %196 to i64*
  %220 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %196, i64 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  store i64 %218, i64* %219, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %217
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #11
  br label %236

236:                                              ; preds = %217, %232, %235
  call void @_ZN5blink25WorkerClassicScriptLoader28ProcessContentSecurityPolicyERKNS_16ResourceResponseE(%"class.blink::WorkerClassicScriptLoader"* %0, %"class.blink::ResourceResponse"* dereferenceable(1072) %2)
  %237 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kOriginTrialE, align 8
  %238 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse15HttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"* %2, %"class.WTF::AtomicString"* dereferenceable(8) %237) #11
  %239 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %238, i64 0, i32 0
  %240 = call %"class.WTF::Vector.63"* @_ZN5blink18OriginTrialContext16ParseHeaderValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %239) #11
  %241 = ptrtoint %"class.WTF::Vector.63"* %240 to i64
  %242 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 20
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr.682", %"class.std::__1::unique_ptr.682"* %242, i64 0, i32 0, i32 0, i32 0
  %244 = load %"class.WTF::Vector.63"*, %"class.WTF::Vector.63"** %243, align 8
  %245 = bitcast %"class.std::__1::unique_ptr.682"* %242 to i64*
  store i64 %241, i64* %245, align 8
  %246 = icmp eq %"class.WTF::Vector.63"* %244, null
  br i1 %246, label %287, label %247

247:                                              ; preds = %236
  %248 = getelementptr inbounds %"class.WTF::Vector.63", %"class.WTF::Vector.63"* %244, i64 0, i32 0, i32 0, i32 0
  %249 = load %"class.WTF::String"*, %"class.WTF::String"** %248, align 8
  %250 = icmp eq %"class.WTF::String"* %249, null
  br i1 %250, label %285, label %251, !prof !4

251:                                              ; preds = %247
  %252 = bitcast %"class.WTF::String"* %249 to i8*
  %253 = getelementptr inbounds %"class.WTF::Vector.63", %"class.WTF::Vector.63"* %244, i64 0, i32 0, i32 0, i32 2
  %254 = load i32, i32* %253, align 4
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %283, label %256, !prof !3

256:                                              ; preds = %251
  %257 = zext i32 %254 to i64
  %258 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %249, i64 %257
  br label %259

259:                                              ; preds = %277, %256
  %260 = phi %"class.WTF::String"* [ %278, %277 ], [ %249, %256 ]
  %261 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %260, i64 0, i32 0, i32 0
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %261, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %262, null
  br i1 %263, label %277, label %264

264:                                              ; preds = %259
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = and i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  br i1 %268, label %271, label %273

271:                                              ; preds = %264
  %272 = add i32 %270, -1
  store i32 %272, i32* %269, align 4
  br label %273

273:                                              ; preds = %271, %264
  %274 = phi i32 [ %272, %271 ], [ %270, %264 ]
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %273
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %262) #11
  br label %277

277:                                              ; preds = %276, %273, %259
  %278 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %260, i64 1
  %279 = icmp eq %"class.WTF::String"* %278, %258
  br i1 %279, label %280, label %259

280:                                              ; preds = %277
  store i32 0, i32* %253, align 4
  %281 = bitcast %"class.WTF::Vector.63"* %244 to i8**
  %282 = load i8*, i8** %281, align 8
  br label %283

283:                                              ; preds = %280, %251
  %284 = phi i8* [ %282, %280 ], [ %252, %251 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %284) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %248, align 8
  br label %285

285:                                              ; preds = %283, %247
  %286 = bitcast %"class.WTF::Vector.63"* %244 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %286) #11
  br label %287

287:                                              ; preds = %285, %236
  %288 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %289 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %288, align 8
  %290 = icmp eq %"class.base::internal::BindStateBase"* %289, null
  br i1 %290, label %299, label %291

291:                                              ; preds = %287
  %292 = ptrtoint %"class.base::internal::BindStateBase"* %289 to i64
  %293 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %293) #11
  %294 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %292, i64* %294, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %288, align 8
  %295 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %296 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %289, i64 0, i32 1
  %297 = bitcast void ()** %296 to void (%"class.base::internal::BindStateBase"*)**
  %298 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %297, align 8
  call void %298(%"class.base::internal::BindStateBase"* nonnull %289) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %295) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %293) #11
  br label %299

299:                                              ; preds = %287, %74, %70, %65, %26, %22, %17, %139, %291
  ret void
}

declare i32 @_ZNK5blink16ResourceResponse14HttpStatusCodeEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkerClassicScriptLoader11NotifyErrorEv(%"class.blink::WorkerClassicScriptLoader"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 11
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %4, align 8
  %6 = icmp eq %"class.blink::ThreadableLoader"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %7
  %12 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  %13 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %12, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %17 = bitcast void ()** %16 to void (%"class.base::internal::BindStateBase"*)**
  %18 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %17, align 8
  tail call void %18(%"class.base::internal::BindStateBase"* nonnull %9) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  br label %19

19:                                               ; preds = %1, %11, %7
  ret void
}

declare zeroext i1 @_ZN5blink16AllowedByNosniff16MimeTypeAsScriptERNS_10UseCounterEPNS_13ConsoleLoggerERKNS_16ResourceResponseENS0_13MimeTypeCheckE(%"class.blink::UseCounter"* dereferenceable(8), %"class.blink::ConsoleLogger"*, %"class.blink::ResourceResponse"* dereferenceable(1072), i32) local_unnamed_addr #1

declare void @_ZNK5blink16ResourceResponse11ResponseUrlEv(%"class.blink::KURL"* sret, %"class.blink::ResourceResponse"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse16TextEncodingNameEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse15HttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkerClassicScriptLoader28ProcessContentSecurityPolicyERKNS_16ResourceResponseE(%"class.blink::WorkerClassicScriptLoader"* nocapture, %"class.blink::ResourceResponse"* dereferenceable(1072)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::Vector.635", align 8
  %7 = alloca %"class.blink::ContentSecurityPolicyResponseHeaders", align 8
  %8 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %1) #11
  %9 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %10 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 4, i32* %12, align 8
  %13 = tail call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %8, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %3) #11
  br i1 %13, label %110, label %14

14:                                               ; preds = %2
  %15 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %1) #11
  %16 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %17 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 4, i32* %19, align 8
  %20 = tail call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %15, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %4) #11
  br i1 %20, label %110, label %21

21:                                               ; preds = %14
  %22 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %1) #11
  %23 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %24 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8** %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 10, i32* %26, align 8
  %27 = tail call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %22, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %5) #11
  br i1 %27, label %110, label %28

28:                                               ; preds = %21
  %29 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21ContentSecurityPolicyEEEPhm(i64 112) #11
  %30 = bitcast i8* %29 to %"class.blink::ContentSecurityPolicy"*
  tail call void @_ZN5blink21ContentSecurityPolicyC1Ev(%"class.blink::ContentSecurityPolicy"* %30) #11
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  %35 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 18
  %36 = ptrtoint i8* %29 to i64
  %37 = bitcast %"class.blink::Member.629"* %35 to i64*
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  %40 = bitcast i8* %29 to %"class.blink::ContentSecurityPolicy"*
  br i1 %39, label %45, label %41

41:                                               ; preds = %28
  %42 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %29) #11
  %43 = getelementptr inbounds %"class.blink::Member.629", %"class.blink::Member.629"* %35, i64 0, i32 0, i32 0
  %44 = load %"class.blink::ContentSecurityPolicy"*, %"class.blink::ContentSecurityPolicy"** %43, align 8
  br label %45

45:                                               ; preds = %28, %41
  %46 = phi %"class.blink::ContentSecurityPolicy"* [ %40, %28 ], [ %44, %41 ]
  %47 = bitcast %"class.blink::ContentSecurityPolicyResponseHeaders"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %47) #11
  call void @_ZN5blink36ContentSecurityPolicyResponseHeadersC1ERKNS_16ResourceResponseE(%"class.blink::ContentSecurityPolicyResponseHeaders"* nonnull %7, %"class.blink::ResourceResponse"* dereferenceable(1072) %1) #11
  call void @_ZN5blink33ParseContentSecurityPolicyHeadersERKNS_36ContentSecurityPolicyResponseHeadersE(%"class.WTF::Vector.635"* nonnull sret %6, %"class.blink::ContentSecurityPolicyResponseHeaders"* nonnull dereferenceable(136) %7) #11
  call void @_ZN5blink21ContentSecurityPolicy11AddPoliciesEN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ContentSecurityPolicy"* %46, %"class.WTF::Vector.635"* nonnull %6) #11
  %48 = getelementptr inbounds %"class.WTF::Vector.635", %"class.WTF::Vector.635"* %6, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.mojo::StructPtr.638"*, %"class.mojo::StructPtr.638"** %48, align 8
  %50 = icmp eq %"class.mojo::StructPtr.638"* %49, null
  br i1 %50, label %74, label %51, !prof !4

51:                                               ; preds = %45
  %52 = bitcast %"class.mojo::StructPtr.638"* %49 to i8*
  %53 = getelementptr inbounds %"class.WTF::Vector.635", %"class.WTF::Vector.635"* %6, i64 0, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %72, label %56, !prof !3

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.mojo::StructPtr.638", %"class.mojo::StructPtr.638"* %49, i64 %57
  br label %59

59:                                               ; preds = %66, %56
  %60 = phi %"class.mojo::StructPtr.638"* [ %67, %66 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.mojo::StructPtr.638", %"class.mojo::StructPtr.638"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %61, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %61, align 8
  %63 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %59
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %62) #11
  %65 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %62 to i8*
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %64, %59
  %67 = getelementptr inbounds %"class.mojo::StructPtr.638", %"class.mojo::StructPtr.638"* %60, i64 1
  %68 = icmp eq %"class.mojo::StructPtr.638"* %67, %58
  br i1 %68, label %69, label %59

69:                                               ; preds = %66
  store i32 0, i32* %53, align 4
  %70 = bitcast %"class.WTF::Vector.635"* %6 to i8**
  %71 = load i8*, i8** %70, align 8
  br label %72

72:                                               ; preds = %69, %51
  %73 = phi i8* [ %71, %69 ], [ %52, %51 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %73) #11
  store %"class.mojo::StructPtr.638"* null, %"class.mojo::StructPtr.638"** %48, align 8
  br label %74

74:                                               ; preds = %45, %72
  %75 = getelementptr inbounds %"class.blink::ContentSecurityPolicyResponseHeaders", %"class.blink::ContentSecurityPolicyResponseHeaders"* %7, i64 0, i32 2
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %75) #11
  %76 = getelementptr inbounds %"class.blink::ContentSecurityPolicyResponseHeaders", %"class.blink::ContentSecurityPolicyResponseHeaders"* %7, i64 0, i32 1, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #11
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.blink::ContentSecurityPolicyResponseHeaders", %"class.blink::ContentSecurityPolicyResponseHeaders"* %7, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #11
  br label %109

109:                                              ; preds = %92, %105, %108
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %47) #11
  br label %110

110:                                              ; preds = %21, %2, %14, %109
  ret void
}

declare %"class.WTF::Vector.63"* @_ZN5blink18OriginTrialContext16ParseHeaderValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkerClassicScriptLoader14DidReceiveDataEPKcj(%"class.blink::WorkerClassicScriptLoader"*, i8*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::TextResourceDecoderOptions", align 8
  %5 = alloca %"class.WTF::TextEncoding", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 11
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %78

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 7
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.590", %"class.std::__1::unique_ptr.590"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %12, align 8
  %14 = icmp eq %"class.blink::TextResourceDecoder"* %13, null
  br i1 %14, label %15, label %43

15:                                               ; preds = %10
  %16 = bitcast %"class.blink::TextResourceDecoderOptions"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %16) #11
  %17 = bitcast %"class.WTF::TextEncoding"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 6
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %15, %22
  %27 = tail call dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() #11
  %28 = bitcast %"class.WTF::TextEncoding"* %27 to i64*
  %29 = bitcast %"class.WTF::TextEncoding"* %5 to i64*
  %30 = load i64, i64* %28, align 8
  store i64 %30, i64* %29, align 8
  br label %32

31:                                               ; preds = %22
  call void @_ZN3WTF12TextEncodingC1ERKNS_6StringE(%"class.WTF::TextEncoding"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %18) #11
  br label %32

32:                                               ; preds = %31, %26
  call void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"* nonnull %4, i32 0, %"class.WTF::TextEncoding"* nonnull dereferenceable(8) %5) #11
  %33 = call noalias i8* @malloc(i64 208) #11
  %34 = bitcast i8* %33 to %"class.blink::TextResourceDecoder"*
  call void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"* %34, %"class.blink::TextResourceDecoderOptions"* nonnull dereferenceable(152) %4) #11
  %35 = ptrtoint i8* %33 to i64
  %36 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %12, align 8
  %37 = bitcast %"class.std::__1::unique_ptr.590"* %11 to i64*
  store i64 %35, i64* %37, align 8
  %38 = icmp eq %"class.blink::TextResourceDecoder"* %36, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %32
  call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %36) #11
  %40 = bitcast %"class.blink::TextResourceDecoder"* %36 to i8*
  call void @free(i8* %40) #11
  br label %41

41:                                               ; preds = %39, %32
  %42 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %4, i64 0, i32 7
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %42) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %16) #11
  br label %43

43:                                               ; preds = %10, %41
  %44 = icmp eq i32 %2, 0
  br i1 %44, label %78, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 8
  %47 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #11
  %48 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %12, align 8
  %49 = zext i32 %2 to i64
  %50 = call %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder6DecodeEPKcm(%"class.blink::TextResourceDecoder"* %48, i8* %1, i64 %49) #11
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %52, label %57

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %53, align 8
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %55 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 0, i32* %56, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %46, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  br label %77

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %58, align 8
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 1
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %63 = bitcast i8** %62 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %63, align 8
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %60, i32* %64, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %46, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %57
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %57
  %74 = phi i32 [ %72, %71 ], [ %70, %57 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #11
  br label %77

77:                                               ; preds = %52, %73, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #11
  br label %78

78:                                               ; preds = %43, %3, %77
  ret void
}

declare dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() local_unnamed_addr #1

declare void @_ZN3WTF12TextEncodingC1ERKNS_6StringE(%"class.WTF::TextEncoding"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"*, i32, %"class.WTF::TextEncoding"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #11
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #11
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #11
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder6DecodeEPKcm(%"class.blink::TextResourceDecoder"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkerClassicScriptLoader24DidReceiveCachedMetadataEN9mojo_base9BigBufferE(%"class.blink::WorkerClassicScriptLoader"* nocapture, %"class.mojo_base::BigBuffer"*) unnamed_addr #0 align 2 {
  %3 = tail call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %1) #11
  %4 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #11
  %5 = trunc i64 %3 to i32
  %6 = bitcast i8* %4 to i8**
  store i8* null, i8** %6, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 8
  %9 = icmp eq i32 %5, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %2
  %11 = and i64 %3, 4294967295
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %11) #11
  %13 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %12, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #11
  %14 = ptrtoint i8* %13 to i64
  %15 = bitcast i8* %4 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = trunc i64 %12 to i32
  store i32 %16, i32* %8, align 8
  br label %17

17:                                               ; preds = %2, %10
  %18 = phi i64 [ %11, %10 ], [ 0, %2 ]
  %19 = phi i8* [ %13, %10 ], [ null, %2 ]
  %20 = getelementptr inbounds i8, i8* %4, i64 12
  %21 = bitcast i8* %20 to i32*
  store i32 %5, i32* %21, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %19, i8 0, i64 %18, i1 false) #11
  %22 = ptrtoint i8* %4 to i64
  %23 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 17
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.619", %"class.std::__1::unique_ptr.619"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::Vector.622"*, %"class.WTF::Vector.622"** %24, align 8
  %26 = bitcast %"class.std::__1::unique_ptr.619"* %23 to i64*
  store i64 %22, i64* %26, align 8
  %27 = icmp eq %"class.WTF::Vector.622"* %25, null
  %28 = bitcast i8* %4 to %"class.WTF::Vector.622"*
  br i1 %27, label %42, label %29

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.WTF::Vector.622", %"class.WTF::Vector.622"* %25, i64 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %39, label %33, !prof !4

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::Vector.622", %"class.WTF::Vector.622"* %25, i64 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37, !prof !3

37:                                               ; preds = %33
  store i32 0, i32* %34, align 4
  br label %38

38:                                               ; preds = %37, %33
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #11
  store i8* null, i8** %30, align 8
  br label %39

39:                                               ; preds = %38, %29
  %40 = bitcast %"class.WTF::Vector.622"* %25 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %40) #11
  %41 = load %"class.WTF::Vector.622"*, %"class.WTF::Vector.622"** %24, align 8
  br label %42

42:                                               ; preds = %39, %17
  %43 = phi %"class.WTF::Vector.622"* [ %41, %39 ], [ %28, %17 ]
  %44 = getelementptr inbounds %"class.WTF::Vector.622", %"class.WTF::Vector.622"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = tail call i8* @_ZN9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"* %1) #11
  %47 = tail call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %1) #11
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 1 %46, i64 %47, i1 false)
  ret void
}

declare i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"*) local_unnamed_addr #1

declare i8* @_ZN9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkerClassicScriptLoader16DidFinishLoadingEm(%"class.blink::WorkerClassicScriptLoader"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 13
  store i8 0, i8* %5, align 2
  %6 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 11
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %44

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %11 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %10, align 8
  %12 = icmp eq %"class.blink::TextResourceDecoder"* %11, null
  br i1 %12, label %44, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 8
  %15 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = tail call %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder5FlushEv(%"class.blink::TextResourceDecoder"* nonnull %11) #11
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %23

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %19, align 8
  %20 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %21 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 0, i32* %22, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  br label %43

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %29 = bitcast i8** %28 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %26, i32* %30, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %23
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %23
  %40 = phi i32 [ %38, %37 ], [ %36, %23 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #11
  br label %43

43:                                               ; preds = %18, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  br label %44

44:                                               ; preds = %9, %2, %43
  %45 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %45, align 8
  %47 = icmp eq %"class.base::internal::BindStateBase"* %46, null
  br i1 %47, label %56, label %48

48:                                               ; preds = %44
  %49 = ptrtoint %"class.base::internal::BindStateBase"* %46 to i64
  %50 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  %51 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %49, i64* %51, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %45, align 8
  %52 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %53 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %46, i64 0, i32 1
  %54 = bitcast void ()** %53 to void (%"class.base::internal::BindStateBase"*)**
  %55 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %54, align 8
  call void %55(%"class.base::internal::BindStateBase"* nonnull %46) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %52) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  br label %56

56:                                               ; preds = %44, %48
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder5FlushEv(%"class.blink::TextResourceDecoder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkerClassicScriptLoader7DidFailERKNS_13ResourceErrorE(%"class.blink::WorkerClassicScriptLoader"* nocapture, %"class.blink::ResourceError"* dereferenceable(208)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 13
  store i8 0, i8* %4, align 2
  %5 = tail call zeroext i1 @_ZNK5blink13ResourceError14IsCancellationEv(%"class.blink::ResourceError"* %1) #11
  %6 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 12
  %7 = zext i1 %5 to i8
  store i8 %7, i8* %6, align 1
  %8 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 11
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 4, i32 0, i32 0
  %10 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %9, align 8
  %11 = icmp eq %"class.blink::ThreadableLoader"* %10, null
  br i1 %11, label %24, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %13, align 8
  %15 = icmp eq %"class.base::internal::BindStateBase"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %12
  %17 = ptrtoint %"class.base::internal::BindStateBase"* %14 to i64
  %18 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %17, i64* %19, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %14, i64 0, i32 1
  %22 = bitcast void ()** %21 to void (%"class.base::internal::BindStateBase"*)**
  %23 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %22, align 8
  tail call void %23(%"class.base::internal::BindStateBase"* nonnull %14) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %24

24:                                               ; preds = %2, %12, %16
  ret void
}

declare zeroext i1 @_ZNK5blink13ResourceError14IsCancellationEv(%"class.blink::ResourceError"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkerClassicScriptLoader20DidFailRedirectCheckEv(%"class.blink::WorkerClassicScriptLoader"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 11
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %4, align 8
  %6 = icmp eq %"class.blink::ThreadableLoader"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %7
  %12 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  %13 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %12, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %17 = bitcast void ()** %16 to void (%"class.base::internal::BindStateBase"*)**
  %18 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %17, align 8
  tail call void %18(%"class.base::internal::BindStateBase"* nonnull %9) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  br label %19

19:                                               ; preds = %1, %7, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkerClassicScriptLoader14DidReceiveDataEN4base4spanIKcLm18446744073709551615EEE(%"class.blink::WorkerClassicScriptLoader"*, i64, i8*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::TextResourceDecoderOptions", align 8
  %5 = alloca %"class.WTF::TextEncoding", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.590", %"class.std::__1::unique_ptr.590"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %8, align 8
  %10 = icmp eq %"class.blink::TextResourceDecoder"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %3
  %12 = bitcast %"class.blink::TextResourceDecoderOptions"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %12) #11
  %13 = bitcast %"class.WTF::TextEncoding"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 5, i32 0, i32 0
  %15 = load %"class.blink::WorkerMainScriptLoader"*, %"class.blink::WorkerMainScriptLoader"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::WorkerMainScriptLoader", %"class.blink::WorkerMainScriptLoader"* %15, i64 0, i32 13, i32 0
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.WTF::TextEncoding"* %5 to i64*
  store i64 %18, i64* %19, align 8
  call void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"* nonnull %4, i32 0, %"class.WTF::TextEncoding"* nonnull dereferenceable(8) %5) #11
  %20 = call noalias i8* @malloc(i64 208) #11
  %21 = bitcast i8* %20 to %"class.blink::TextResourceDecoder"*
  call void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"* %21, %"class.blink::TextResourceDecoderOptions"* nonnull dereferenceable(152) %4) #11
  %22 = ptrtoint i8* %20 to i64
  %23 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %8, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.590"* %7 to i64*
  store i64 %22, i64* %24, align 8
  %25 = icmp eq %"class.blink::TextResourceDecoder"* %23, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %11
  call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %23) #11
  %27 = bitcast %"class.blink::TextResourceDecoder"* %23 to i8*
  call void @free(i8* %27) #11
  br label %28

28:                                               ; preds = %26, %11
  %29 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %4, i64 0, i32 7
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %29) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %12) #11
  br label %30

30:                                               ; preds = %3, %28
  %31 = icmp eq i64 %1, 0
  br i1 %31, label %64, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 8
  %34 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #11
  %35 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %8, align 8
  %36 = call %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder6DecodeEPKcm(%"class.blink::TextResourceDecoder"* %35, i8* %2, i64 %1) #11
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %38, label %43

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %39, align 8
  %40 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %41 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 0, i32* %42, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %33, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  br label %63

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %44, align 8
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 1
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %49 = bitcast i8** %48 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %49, align 8
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %46, i32* %50, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %33, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %43
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %43
  %60 = phi i32 [ %58, %57 ], [ %56, %43 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #11
  br label %63

63:                                               ; preds = %38, %59, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #11
  br label %64

64:                                               ; preds = %30, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25WorkerClassicScriptLoader14DidReceiveDataEN4base4spanIKcLm18446744073709551615EEE(%"class.blink::WorkerClassicScriptLoader"*, i64, i8*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 -1, i32 22
  %5 = bitcast %"class.blink::Member.688"* %4 to %"class.blink::WorkerClassicScriptLoader"*
  tail call void @_ZN5blink25WorkerClassicScriptLoader14DidReceiveDataEN4base4spanIKcLm18446744073709551615EEE(%"class.blink::WorkerClassicScriptLoader"* %5, i64 %1, i8* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkerClassicScriptLoader33OnFinishedLoadingWorkerMainScriptEv(%"class.blink::WorkerClassicScriptLoader"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 5, i32 0, i32 0
  %5 = load %"class.blink::WorkerMainScriptLoader"*, %"class.blink::WorkerMainScriptLoader"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::WorkerMainScriptLoader", %"class.blink::WorkerMainScriptLoader"* %5, i64 0, i32 11
  tail call void @_ZN5blink25WorkerClassicScriptLoader18DidReceiveResponseEmRKNS_16ResourceResponseE(%"class.blink::WorkerClassicScriptLoader"* %0, i64 0, %"class.blink::ResourceResponse"* dereferenceable(1072) %6)
  %7 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %8 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %7, align 8
  %9 = icmp eq %"class.blink::TextResourceDecoder"* %8, null
  br i1 %9, label %41, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 8
  %12 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = tail call %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder5FlushEv(%"class.blink::TextResourceDecoder"* nonnull %8) #11
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %15, label %20

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %16, align 8
  %17 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %18 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 0, i32* %19, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  br label %40

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %26 = bitcast i8** %25 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %23, i32* %27, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %20
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %20
  %37 = phi i32 [ %35, %34 ], [ %33, %20 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #11
  br label %40

40:                                               ; preds = %15, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  br label %41

41:                                               ; preds = %1, %40
  %42 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %42, align 8
  %44 = icmp eq %"class.base::internal::BindStateBase"* %43, null
  br i1 %44, label %53, label %45

45:                                               ; preds = %41
  %46 = ptrtoint %"class.base::internal::BindStateBase"* %43 to i64
  %47 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  %48 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %46, i64* %48, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %42, align 8
  %49 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %50 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %43, i64 0, i32 1
  %51 = bitcast void ()** %50 to void (%"class.base::internal::BindStateBase"*)**
  %52 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %51, align 8
  call void %52(%"class.base::internal::BindStateBase"* nonnull %43) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %49) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %53

53:                                               ; preds = %41, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25WorkerClassicScriptLoader33OnFinishedLoadingWorkerMainScriptEv(%"class.blink::WorkerClassicScriptLoader"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 -1, i32 22
  %3 = bitcast %"class.blink::Member.688"* %2 to %"class.blink::WorkerClassicScriptLoader"*
  tail call void @_ZN5blink25WorkerClassicScriptLoader33OnFinishedLoadingWorkerMainScriptEv(%"class.blink::WorkerClassicScriptLoader"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkerClassicScriptLoader31OnFailedLoadingWorkerMainScriptEv(%"class.blink::WorkerClassicScriptLoader"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 11
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %4, align 8
  %6 = icmp eq %"class.base::internal::BindStateBase"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"class.base::internal::BindStateBase"* %5 to i64
  %9 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %8, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %4, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %5, i64 0, i32 1
  %13 = bitcast void ()** %12 to void (%"class.base::internal::BindStateBase"*)**
  %14 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %13, align 8
  tail call void %14(%"class.base::internal::BindStateBase"* nonnull %5) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %15

15:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink25WorkerClassicScriptLoader31OnFailedLoadingWorkerMainScriptEv(%"class.blink::WorkerClassicScriptLoader"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 -1, i32 22
  %4 = getelementptr inbounds %"class.blink::Member.688", %"class.blink::Member.688"* %3, i64 42
  %5 = bitcast %"class.blink::Member.688"* %4 to i8*
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %"class.blink::Member.688", %"class.blink::Member.688"* %3, i64 3
  %7 = bitcast %"class.blink::Member.688"* %6 to %"class.base::internal::BindStateBase"**
  %8 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %9 = icmp eq %"class.base::internal::BindStateBase"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %1
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %8 to i64
  %12 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  %13 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %11, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %8, i64 0, i32 1
  %16 = bitcast void ()** %15 to void (%"class.base::internal::BindStateBase"*)**
  %17 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %16, align 8
  tail call void %17(%"class.base::internal::BindStateBase"* nonnull %8) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  br label %18

18:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink25WorkerClassicScriptLoader5TraceEPNS_7VisitorE(%"class.blink::WorkerClassicScriptLoader"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 4
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16ThreadableLoaderEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 5
  %15 = bitcast %"class.blink::Member.1"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22WorkerMainScriptLoaderEE5TraceEPNS_7VisitorEPKv) #11
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 18
  %26 = bitcast %"class.blink::Member.629"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ContentSecurityPolicyEE5TraceEPNS_7VisitorEPKv) #11
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 22
  %37 = bitcast %"class.blink::Member.688"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15ResourceFetcherEE5TraceEPNS_7VisitorEPKv) #11
  br label %46

46:                                               ; preds = %35, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_NK5blink25WorkerClassicScriptLoader5TraceEPNS_7VisitorE(%"class.blink::WorkerClassicScriptLoader"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 -1, i32 22
  %4 = getelementptr inbounds %"class.blink::Member.688", %"class.blink::Member.688"* %3, i64 4
  %5 = bitcast %"class.blink::Member.688"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16ThreadableLoaderEE5TraceEPNS_7VisitorEPKv) #11
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.blink::Member.688", %"class.blink::Member.688"* %3, i64 5
  %16 = bitcast %"class.blink::Member.688"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22WorkerMainScriptLoaderEE5TraceEPNS_7VisitorEPKv) #11
  br label %25

25:                                               ; preds = %19, %14
  %26 = getelementptr inbounds %"class.blink::Member.688", %"class.blink::Member.688"* %3, i64 46
  %27 = bitcast %"class.blink::Member.688"* %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = inttoptr i64 %28 to i8*
  %32 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %1, i8* nonnull %31, i8* nonnull %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ContentSecurityPolicyEE5TraceEPNS_7VisitorEPKv) #11
  br label %36

36:                                               ; preds = %30, %25
  %37 = getelementptr inbounds %"class.blink::Member.688", %"class.blink::Member.688"* %3, i64 50
  %38 = bitcast %"class.blink::Member.688"* %37 to i64*
  %39 = load atomic i64, i64* %38 monotonic, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %36
  %42 = inttoptr i64 %39 to i8*
  %43 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, i64 5
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %45, align 8
  tail call void %46(%"class.blink::Visitor"* %1, i8* nonnull %42, i8* nonnull %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15ResourceFetcherEE5TraceEPNS_7VisitorEPKv) #11
  br label %47

47:                                               ; preds = %36, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25WorkerClassicScriptLoader6CancelEv(%"class.blink::WorkerClassicScriptLoader"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 13
  %3 = load i8, i8* %2, align 2, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  store i8 0, i8* %2, align 2
  %6 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 4, i32 0, i32 0
  %7 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %6, align 8
  %8 = icmp eq %"class.blink::ThreadableLoader"* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN5blink16ThreadableLoader6CancelEv(%"class.blink::ThreadableLoader"* nonnull %7) #11
  br label %10

10:                                               ; preds = %5, %1, %9
  ret void
}

declare void @_ZN5blink16ThreadableLoader6CancelEv(%"class.blink::ThreadableLoader"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink25WorkerClassicScriptLoader10SourceTextEv(%"class.blink::WorkerClassicScriptLoader"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 8
  %3 = tail call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* %2) #11
  ret %"class.WTF::StringImpl"* %3
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"*, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #1

declare void @_ZN5blink21ContentSecurityPolicy11AddPoliciesEN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ContentSecurityPolicy"*, %"class.WTF::Vector.635"*) local_unnamed_addr #1

declare void @_ZN5blink33ParseContentSecurityPolicyHeadersERKNS_36ContentSecurityPolicyResponseHeadersE(%"class.WTF::Vector.635"* sret, %"class.blink::ContentSecurityPolicyResponseHeaders"* dereferenceable(136)) local_unnamed_addr #1

declare void @_ZN5blink36ContentSecurityPolicyResponseHeadersC1ERKNS_16ResourceResponseE(%"class.blink::ContentSecurityPolicyResponseHeaders"*, %"class.blink::ResourceResponse"* dereferenceable(1072)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ThreadableLoaderClient11DidSendDataEmm(%"class.blink::ThreadableLoaderClient"*, i64, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink22ThreadableLoaderClient18WillFollowRedirectERKNS_4KURLERKNS_16ResourceResponseE(%"class.blink::ThreadableLoaderClient"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::ResourceResponse"* dereferenceable(1072)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ThreadableLoaderClient27DidStartLoadingResponseBodyERNS_13BytesConsumerE(%"class.blink::ThreadableLoaderClient"*, %"class.blink::BytesConsumer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ThreadableLoaderClient15DidDownloadDataEm(%"class.blink::ThreadableLoaderClient"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ThreadableLoaderClient17DidDownloadToBlobE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::ThreadableLoaderClient"*, %"class.blink::BlobDataHandle"*) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::BlobDataHandle"* %1, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw sub i32* %5, i32 1 acq_rel
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %1) #11
  %9 = bitcast %"class.blink::BlobDataHandle"* %1 to i8*
  tail call void @free(i8* %9) #11
  br label %10

10:                                               ; preds = %2, %4, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25WorkerClassicScriptLoaderD2Ev(%"class.blink::WorkerClassicScriptLoader"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.blink::WorkerClassicScriptLoader"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [7 x i8*] }, { [19 x i8*], [7 x i8*] }* @_ZTVN5blink25WorkerClassicScriptLoaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [7 x i8*] }, { [19 x i8*], [7 x i8*] }* @_ZTVN5blink25WorkerClassicScriptLoaderE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 21, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #11
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 20, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::Vector.63"*, %"class.WTF::Vector.63"** %20, align 8
  store %"class.WTF::Vector.63"* null, %"class.WTF::Vector.63"** %20, align 8
  %22 = icmp eq %"class.WTF::Vector.63"* %21, null
  br i1 %22, label %63, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::Vector.63", %"class.WTF::Vector.63"* %21, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::String"*, %"class.WTF::String"** %24, align 8
  %26 = icmp eq %"class.WTF::String"* %25, null
  br i1 %26, label %61, label %27, !prof !4

27:                                               ; preds = %23
  %28 = bitcast %"class.WTF::String"* %25 to i8*
  %29 = getelementptr inbounds %"class.WTF::Vector.63", %"class.WTF::Vector.63"* %21, i64 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %59, label %32, !prof !3

32:                                               ; preds = %27
  %33 = zext i32 %30 to i64
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 %33
  br label %35

35:                                               ; preds = %53, %32
  %36 = phi %"class.WTF::String"* [ %54, %53 ], [ %25, %32 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #11
  br label %53

53:                                               ; preds = %52, %49, %35
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 1
  %55 = icmp eq %"class.WTF::String"* %54, %34
  br i1 %55, label %56, label %35

56:                                               ; preds = %53
  store i32 0, i32* %29, align 4
  %57 = bitcast %"class.WTF::Vector.63"* %21 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %27
  %60 = phi i8* [ %58, %56 ], [ %28, %27 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %60) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %24, align 8
  br label %61

61:                                               ; preds = %59, %23
  %62 = bitcast %"class.WTF::Vector.63"* %21 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %62) #11
  br label %63

63:                                               ; preds = %19, %61
  %64 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 17, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::Vector.622"*, %"class.WTF::Vector.622"** %64, align 8
  store %"class.WTF::Vector.622"* null, %"class.WTF::Vector.622"** %64, align 8
  %66 = icmp eq %"class.WTF::Vector.622"* %65, null
  br i1 %66, label %79, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.WTF::Vector.622", %"class.WTF::Vector.622"* %65, i64 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %77, label %71, !prof !4

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.WTF::Vector.622", %"class.WTF::Vector.622"* %65, i64 0, i32 0, i32 0, i32 2
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !3

75:                                               ; preds = %71
  store i32 0, i32* %72, align 4
  br label %76

76:                                               ; preds = %75, %71
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %69) #11
  store i8* null, i8** %68, align 8
  br label %77

77:                                               ; preds = %76, %67
  %78 = bitcast %"class.WTF::Vector.622"* %65 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %78) #11
  br label %79

79:                                               ; preds = %63, %77
  %80 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 10
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %80) #11
  %81 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 9
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %81) #11
  %82 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 8
  tail call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* %82) #11
  %83 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %82, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #11
  br label %99

99:                                               ; preds = %79, %95, %98
  %100 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %101 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %100, align 8
  store %"class.blink::TextResourceDecoder"* null, %"class.blink::TextResourceDecoder"** %100, align 8
  %102 = icmp eq %"class.blink::TextResourceDecoder"* %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %99
  tail call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %101) #11
  %104 = bitcast %"class.blink::TextResourceDecoder"* %101 to i8*
  tail call void @free(i8* %104) #11
  br label %105

105:                                              ; preds = %99, %103
  %106 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 6, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #11
  br label %122

122:                                              ; preds = %105, %118, %121
  %123 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %123) #11
  %124 = getelementptr inbounds %"class.blink::WorkerClassicScriptLoader", %"class.blink::WorkerClassicScriptLoader"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %124) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25WorkerClassicScriptLoaderD0Ev(%"class.blink::WorkerClassicScriptLoader"*) unnamed_addr #5 comdat align 2 {
  tail call void @_ZN5blink25WorkerClassicScriptLoaderD2Ev(%"class.blink::WorkerClassicScriptLoader"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink28WorkerMainScriptLoaderClient18OnStartLoadingBodyERKNS_16ResourceResponseE(%"class.blink::WorkerMainScriptLoaderClient"*, %"class.blink::ResourceResponse"* dereferenceable(1072)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_126CheckSameOriginEnforcementERKNS_4KURLES3_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 {
  %3 = alloca %"class.WTF::StringAppend.1238", align 8
  %4 = alloca %"class.WTF::StringAppend", align 8
  %5 = alloca %"class.WTF::StringAppend.1238", align 8
  %6 = alloca %"class.WTF::StringAppend.1239", align 8
  %7 = tail call zeroext i1 @_ZN5blinkneERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112) %0, %"class.blink::KURL"* dereferenceable(112) %1) #11
  br i1 %7, label %8, label %272

8:                                                ; preds = %2
  %9 = tail call zeroext i1 @_ZN5blink14SecurityOrigin13AreSameOriginERKNS_4KURLES3_(%"class.blink::KURL"* dereferenceable(112) %0, %"class.blink::KURL"* dereferenceable(112) %1) #11
  br i1 %9, label %272, label %10

10:                                               ; preds = %8
  %11 = bitcast %"class.WTF::StringAppend"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #11
  %12 = bitcast %"class.WTF::StringAppend.1238"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #11
  %13 = bitcast %"class.WTF::StringAppend.1239"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  %14 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"* %1) #11
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %91, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %33

23:                                               ; preds = %16
  %24 = zext i32 %22 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #11
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !3

30:                                               ; preds = %23
  tail call void @llvm.trap() #11
  unreachable

31:                                               ; preds = %23
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %21, align 4
  br label %33

33:                                               ; preds = %31, %16
  %34 = phi i32 [ %32, %31 ], [ %22, %16 ]
  %35 = load atomic i32, i32* %17 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %48

38:                                               ; preds = %33
  %39 = zext i32 %34 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #11
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !3

45:                                               ; preds = %38
  tail call void @llvm.trap() #11
  unreachable

46:                                               ; preds = %38
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %21, align 4
  br label %48

48:                                               ; preds = %46, %33
  %49 = phi i32 [ %47, %46 ], [ %34, %33 ]
  %50 = load atomic i32, i32* %17 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = add i32 %49, -1
  store i32 %54, i32* %21, align 4
  br label %55

55:                                               ; preds = %53, %48
  %56 = phi i32 [ %54, %53 ], [ %49, %48 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #11
  br label %59

59:                                               ; preds = %55, %58
  %60 = load atomic i32, i32* %17 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %74

63:                                               ; preds = %59
  %64 = load i32, i32* %21, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #11
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !3

71:                                               ; preds = %63
  tail call void @llvm.trap() #11
  unreachable

72:                                               ; preds = %63
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %21, align 4
  br label %74

74:                                               ; preds = %59, %72
  %75 = bitcast %"class.WTF::StringAppend.1239"* %6 to i64*
  store i64 ptrtoint ([51 x i8]* @.str.3 to i64), i64* %75, align 8
  %76 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %76, align 8
  %77 = load atomic i32, i32* %17 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %95

80:                                               ; preds = %74
  %81 = load i32, i32* %21, align 4
  %82 = zext i32 %81 to i33
  %83 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #11
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !3

88:                                               ; preds = %80
  tail call void @llvm.trap() #11
  unreachable

89:                                               ; preds = %80
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %21, align 4
  br label %95

91:                                               ; preds = %10
  %92 = bitcast %"class.WTF::StringAppend.1239"* %6 to i64*
  store i64 ptrtoint ([51 x i8]* @.str.3 to i64), i64* %92, align 8
  %93 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %93, align 8
  %94 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i8** %94, align 8
  br label %107

95:                                               ; preds = %89, %74
  %96 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i8** %96, align 8
  %97 = load atomic i32, i32* %17 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = load i32, i32* %21, align 4
  br i1 %99, label %101, label %103

101:                                              ; preds = %95
  %102 = add i32 %100, -1
  store i32 %102, i32* %21, align 4
  br label %103

103:                                              ; preds = %101, %95
  %104 = phi i32 [ %102, %101 ], [ %100, %95 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #11
  br label %107

107:                                              ; preds = %91, %103, %106
  %108 = phi %"class.WTF::StringImpl"** [ %93, %91 ], [ %76, %103 ], [ %76, %106 ]
  %109 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"* %0) #11
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.1238"* nonnull sret %5, %"class.WTF::StringAppend.1239"* nonnull dereferenceable(24) %6, %"class.WTF::StringImpl"* %109)
  %110 = bitcast %"class.WTF::StringAppend.1238"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %110)
  %111 = bitcast %"class.WTF::StringAppend.1238"* %5 to i64*
  %112 = load i64, i64* %111, align 8, !noalias !5
  %113 = bitcast %"class.WTF::StringAppend.1238"* %3 to i64*
  store i64 %112, i64* %113, align 8, !noalias !5
  %114 = getelementptr inbounds %"class.WTF::StringAppend.1238", %"class.WTF::StringAppend.1238"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8, !noalias !5
  %116 = getelementptr inbounds %"class.WTF::StringAppend.1238", %"class.WTF::StringAppend.1238"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %115, %"class.WTF::StringImpl"** %116, align 8, !noalias !5
  %117 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %117, label %135, label %118

118:                                              ; preds = %107
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %135

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = zext i32 %125 to i33
  %127 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #11
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !3

132:                                              ; preds = %123
  call void @llvm.trap() #11
  unreachable

133:                                              ; preds = %123
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %124, align 4
  br label %135

135:                                              ; preds = %133, %118, %107
  %136 = getelementptr inbounds %"class.WTF::StringAppend.1238", %"class.WTF::StringAppend.1238"* %3, i64 0, i32 0, i32 1
  %137 = getelementptr inbounds %"class.WTF::StringAppend.1238", %"class.WTF::StringAppend.1238"* %5, i64 0, i32 0, i32 1
  %138 = bitcast i8** %137 to i64*
  %139 = load i64, i64* %138, align 8, !noalias !5
  %140 = bitcast i8** %136 to i64*
  store i64 %139, i64* %140, align 8, !noalias !5
  %141 = getelementptr inbounds %"class.WTF::StringAppend.1238", %"class.WTF::StringAppend.1238"* %5, i64 0, i32 1, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8, !noalias !5
  %143 = getelementptr inbounds %"class.WTF::StringAppend.1238", %"class.WTF::StringAppend.1238"* %3, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %142, %"class.WTF::StringImpl"** %143, align 8, !noalias !5
  %144 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %144, label %162, label %145

145:                                              ; preds = %135
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %162

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i33
  %154 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %153, i33 1) #11
  %155 = extractvalue { i33, i1 } %154, 1
  %156 = extractvalue { i33, i1 } %154, 0
  %157 = icmp slt i33 %156, 0
  %158 = or i1 %155, %157
  br i1 %158, label %159, label %160, !prof !3

159:                                              ; preds = %150
  call void @llvm.trap() #11
  unreachable

160:                                              ; preds = %150
  %161 = trunc i33 %156 to i32
  store i32 %161, i32* %151, align 4
  br label %162

162:                                              ; preds = %135, %145, %160
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"* nonnull %4, %"class.WTF::StringAppend.1238"* nonnull byval(%"class.WTF::StringAppend.1238") align 8 %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %110)
  %163 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %4)
  %164 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #11
  br label %180

180:                                              ; preds = %179, %176, %162
  %181 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %188, label %191, label %193

191:                                              ; preds = %184
  %192 = add i32 %190, -1
  store i32 %192, i32* %189, align 4
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i32 [ %192, %191 ], [ %190, %184 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %182) #11
  br label %197

197:                                              ; preds = %180, %193, %196
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %213, label %200

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %200
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %200
  %210 = phi i32 [ %208, %207 ], [ %206, %200 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %198) #11
  br label %213

213:                                              ; preds = %212, %209, %197
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %214, null
  br i1 %215, label %229, label %216

216:                                              ; preds = %213
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load atomic i32, i32* %217 monotonic, align 4
  %219 = and i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 0
  %222 = load i32, i32* %221, align 4
  br i1 %220, label %223, label %225

223:                                              ; preds = %216
  %224 = add i32 %222, -1
  store i32 %224, i32* %221, align 4
  br label %225

225:                                              ; preds = %223, %216
  %226 = phi i32 [ %224, %223 ], [ %222, %216 ]
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %225
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %214) #11
  br label %229

229:                                              ; preds = %213, %225, %228
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %230, null
  br i1 %231, label %245, label %232

232:                                              ; preds = %229
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  br i1 %236, label %239, label %241

239:                                              ; preds = %232
  %240 = add i32 %238, -1
  store i32 %240, i32* %237, align 4
  br label %241

241:                                              ; preds = %239, %232
  %242 = phi i32 [ %240, %239 ], [ %238, %232 ]
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %241
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %230) #11
  br label %245

245:                                              ; preds = %229, %241, %244
  br i1 %15, label %271, label %246

246:                                              ; preds = %245
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load atomic i32, i32* %247 monotonic, align 4
  %249 = and i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %252 = load i32, i32* %251, align 4
  br i1 %250, label %253, label %255

253:                                              ; preds = %246
  %254 = add i32 %252, -1
  store i32 %254, i32* %251, align 4
  br label %255

255:                                              ; preds = %253, %246
  %256 = phi i32 [ %254, %253 ], [ %252, %246 ]
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %260

258:                                              ; preds = %255
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #11
  %259 = load i32, i32* %251, align 4
  br label %260

260:                                              ; preds = %255, %258
  %261 = phi i32 [ %256, %255 ], [ %259, %258 ]
  %262 = load atomic i32, i32* %247 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %267

265:                                              ; preds = %260
  %266 = add i32 %261, -1
  store i32 %266, i32* %251, align 4
  br label %267

267:                                              ; preds = %265, %260
  %268 = phi i32 [ %266, %265 ], [ %261, %260 ]
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %271

270:                                              ; preds = %267
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #11
  br label %271

271:                                              ; preds = %245, %267, %270
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #11
  br label %272

272:                                              ; preds = %2, %8, %271
  %273 = phi %"class.WTF::StringImpl"* [ %163, %271 ], [ null, %8 ], [ null, %2 ]
  ret %"class.WTF::StringImpl"* %273
}

declare zeroext i1 @_ZN5blinkneERKNS_4KURLES2_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14SecurityOrigin13AreSameOriginERKNS_4KURLES3_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.1238"* noalias sret, %"class.WTF::StringAppend.1239"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.1239", align 8
  %5 = bitcast %"class.WTF::StringAppend.1239"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.1239"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #11
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %41
  tail call void @llvm.trap() #11
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.1238"* %0, %"class.WTF::StringAppend.1239"* nonnull byval(%"class.WTF::StringAppend.1239") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.1238"* %0, %"class.WTF::StringAppend.1239"* nonnull byval(%"class.WTF::StringAppend.1239") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #11
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1241", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1241", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1241", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.1241"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #11
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1241"* nonnull %4, i8* %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.1241"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #11
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1241"* nonnull %3, i8* %15) #11
  %16 = bitcast %"class.WTF::StringTypeAdapter.1241"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #11
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1241"* nonnull %2, i8* %18) #11
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #11
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #11
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #11
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !3

56:                                               ; preds = %49
  call void @llvm.trap() #11
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #11
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #11
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #11
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %85
  call void @llvm.trap() #11
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #11
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #11
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"*, %"class.WTF::StringAppend.1238"* byval(%"class.WTF::StringAppend.1238") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.1238"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1238", %"class.WTF::StringAppend.1238"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1238", %"class.WTF::StringAppend.1238"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1238", %"class.WTF::StringAppend.1238"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #11
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  tail call void @llvm.trap() #11
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #11
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #11
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.1238"*, %"class.WTF::StringAppend.1239"* byval(%"class.WTF::StringAppend.1239") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.1239"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.1238"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1238", %"class.WTF::StringAppend.1238"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.1238", %"class.WTF::StringAppend.1238"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.1238", %"class.WTF::StringAppend.1238"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #11
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %43
  tail call void @llvm.trap() #11
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #11
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #11
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1241", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1241"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1241", %"class.WTF::StringTypeAdapter.1241"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1241"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1241"* nonnull %4, i8* %14) #11
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1238"* %9) #11
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1238"* %9) #11
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i8* %25, i8* %26) #11
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.7, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i8* %41, i8* %42) #11
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.7, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1243", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1241", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.1241"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.1241"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1241"* nonnull %4, i8* %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.1243"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1243", %"class.WTF::StringTypeAdapter.1243"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1243", %"class.WTF::StringTypeAdapter.1243"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #11
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.1243"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.1239"* %10, i8* %1) #11
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1243", %"class.WTF::StringTypeAdapter.1243"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1239"* %10) #11
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1244"* nonnull %30, i8* %33) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1238"* %5) #11
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1241"* nonnull %4, i8* %36) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1243", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1241", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.1241"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.1241"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1241"* nonnull %4, i8* %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.1243"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1243", %"class.WTF::StringTypeAdapter.1243"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1243", %"class.WTF::StringTypeAdapter.1243"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #11
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.1243"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.1239"* %10, i16* %1) #11
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1243", %"class.WTF::StringTypeAdapter.1243"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1239"* %10) #11
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1244"* nonnull %30, i16* %33) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1238"* %5) #11
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1241"* nonnull %4, i16* %36) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1241"*, i8*) unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.1238"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1238", %"class.WTF::StringAppend.1238"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1238", %"class.WTF::StringAppend.1238"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1239"* %8) #11
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1239"* %8) #11
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #11
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i8* %26, i8* %27) #11
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.7, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #11
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #11
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i8* %41, i8* %42) #11
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.7, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1239"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1241", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1241"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1241", %"class.WTF::StringTypeAdapter.1241"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1241"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1241"* nonnull %4, i8* %14) #11
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1240"* %9) #11
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1240"* %9) #11
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i8* %25, i8* %26) #11
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.7, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i8* %41, i8* %42) #11
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.7, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1240"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1241", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.1241"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1241", %"class.WTF::StringTypeAdapter.1241"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.1240", %"class.WTF::StringAppend.1240"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.1241"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1241"* nonnull %4, i8* %13) #11
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1240", %"class.WTF::StringAppend.1240"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i8* %30, i8* %31) #11
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.7, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i8* %45, i8* %46) #11
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.7, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1241"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1244"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.1239"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1241", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1243", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1241", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1241"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1241"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1241"* nonnull %5, i8* %10) #11
  %11 = bitcast %"class.WTF::StringTypeAdapter.1241"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1241", %"class.WTF::StringTypeAdapter.1241"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #11
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1241"* nonnull %3, i8* %14) #11
  %15 = bitcast %"class.WTF::StringTypeAdapter.1243"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1243", %"class.WTF::StringTypeAdapter.1243"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1243", %"class.WTF::StringTypeAdapter.1243"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #11
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1243"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1241"* nonnull %3, i8* %1) #11
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1243", %"class.WTF::StringTypeAdapter.1243"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1244"* nonnull %34, i8* %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1240"* %6) #11
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1241"* nonnull %5, i8* %40) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1241"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1244"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.1239"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1241", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1243", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1241", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1241"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1241"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1241"* nonnull %5, i8* %10) #11
  %11 = bitcast %"class.WTF::StringTypeAdapter.1241"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1241", %"class.WTF::StringTypeAdapter.1241"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #11
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1241"* nonnull %3, i8* %14) #11
  %15 = bitcast %"class.WTF::StringTypeAdapter.1243"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1243", %"class.WTF::StringTypeAdapter.1243"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1243", %"class.WTF::StringTypeAdapter.1243"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.1239", %"class.WTF::StringAppend.1239"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #11
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1243"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1241"* nonnull %3, i16* %1) #11
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1243", %"class.WTF::StringTypeAdapter.1243"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1244"* nonnull %34, i16* %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1240"* %6) #11
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1241"* nonnull %5, i16* %40) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret void
}

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"*) unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"*) unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink16ThreadableLoaderC1ERNS_16ExecutionContextEPNS_22ThreadableLoaderClientERKNS_21ResourceLoaderOptionsEPNS_15ResourceFetcherE(%"class.blink::ThreadableLoader"*, %"class.blink::ExecutionContext"* dereferenceable(376), %"class.blink::ThreadableLoaderClient"*, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112), %"class.blink::ResourceFetcher"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16ThreadableLoaderEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16ThreadableLoaderEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16ThreadableLoaderEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.26"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16ThreadableLoaderEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.26"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16ThreadableLoaderEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16ThreadableLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ThreadableLoader"*
  tail call void @_ZNK5blink16ThreadableLoader5TraceEPNS_7VisitorE(%"class.blink::ThreadableLoader"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16ThreadableLoaderEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ThreadableLoader"*
  tail call void @_ZN5blink16ThreadableLoaderD1Ev(%"class.blink::ThreadableLoader"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16ThreadableLoaderEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.26"*) local_unnamed_addr #1

declare void @_ZNK5blink16ThreadableLoader5TraceEPNS_7VisitorE(%"class.blink::ThreadableLoader"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink16ThreadableLoaderD1Ev(%"class.blink::ThreadableLoader"*) unnamed_addr #3

declare void @_ZN5blink22WorkerMainScriptLoaderC1Ev(%"class.blink::WorkerMainScriptLoader"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_22WorkerMainScriptLoaderEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_22WorkerMainScriptLoaderEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_22WorkerMainScriptLoaderEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.26"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_22WorkerMainScriptLoaderEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.26"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22WorkerMainScriptLoaderEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_22WorkerMainScriptLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WorkerMainScriptLoader"*
  tail call void @_ZNK5blink22WorkerMainScriptLoader5TraceEPNS_7VisitorE(%"class.blink::WorkerMainScriptLoader"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_22WorkerMainScriptLoaderEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::WorkerMainScriptLoader"*
  tail call void @_ZN5blink22WorkerMainScriptLoaderD1Ev(%"class.blink::WorkerMainScriptLoader"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_22WorkerMainScriptLoaderEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink22WorkerMainScriptLoader5TraceEPNS_7VisitorE(%"class.blink::WorkerMainScriptLoader"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink22WorkerMainScriptLoaderD1Ev(%"class.blink::WorkerMainScriptLoader"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

declare void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoderOptions"* dereferenceable(152)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.13, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #11
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21ContentSecurityPolicyEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ContentSecurityPolicy"*
  tail call void @_ZNK5blink21ContentSecurityPolicy5TraceEPNS_7VisitorE(%"class.blink::ContentSecurityPolicy"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink21ContentSecurityPolicy5TraceEPNS_7VisitorE(%"class.blink::ContentSecurityPolicy"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ResourceFetcherEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ResourceFetcher"*
  %4 = bitcast i8* %1 to void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)**, void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)*, void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)*, void (%"class.blink::ResourceFetcher"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ResourceFetcher"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZN5blink21ContentSecurityPolicyC1Ev(%"class.blink::ContentSecurityPolicy"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21ContentSecurityPolicyEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21ContentSecurityPolicyEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21ContentSecurityPolicyEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.26"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21ContentSecurityPolicyEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.26"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21ContentSecurityPolicyEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_21ContentSecurityPolicyEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ContentSecurityPolicy"*
  tail call void @_ZN5blink21ContentSecurityPolicyD1Ev(%"class.blink::ContentSecurityPolicy"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21ContentSecurityPolicyEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind
declare void @_ZN5blink21ContentSecurityPolicyD1Ev(%"class.blink::ContentSecurityPolicy"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!7 = distinct !{!7, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
