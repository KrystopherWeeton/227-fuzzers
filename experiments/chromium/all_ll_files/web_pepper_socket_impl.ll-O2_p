; ModuleID = '../../third_party/blink/renderer/modules/websockets/web_pepper_socket_impl.cc'
source_filename = "../../third_party/blink/renderer/modules/websockets/web_pepper_socket_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.4", i32, [4 x i8], %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.165", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.171", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.116", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::Worklist.47"* }
%"class.blink::Worklist.47" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::Worklist.54"* }
%"class.blink::Worklist.54" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::Worklist.61"* }
%"class.blink::Worklist.61" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.96", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.110", [4 x i8] }>
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98", %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { i64 }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { float }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.119", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.139" }
%"class.WTF::VectorBuffer.139" = type { %"class.WTF::VectorBufferBase.140" }
%"class.WTF::VectorBufferBase.140" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.153" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.47"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.54"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.61"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.188" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.171" = type { %"struct.std::__1::__atomic_base.172" }
%"struct.std::__1::__atomic_base.172" = type { %"struct.std::__1::__cxx_atomic_impl.173" }
%"struct.std::__1::__cxx_atomic_impl.173" = type { %"struct.std::__1::__cxx_atomic_base_impl.174" }
%"struct.std::__1::__cxx_atomic_base_impl.174" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::WebPepperSocketImpl" = type { %"class.blink::WebPepperSocket", %"class.blink::Persistent", %"class.blink::WebPepperSocketClient"*, %"class.blink::Persistent.175", %"class.blink::WebString", i8, i64, i64 }
%"class.blink::WebPepperSocket" = type { i32 (...)** }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::WebSocketChannel"*, %"class.blink::PersistentNodePtr" }
%"class.blink::WebSocketChannel" = type { i32 (...)** }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.175" = type { %"class.blink::PersistentBase.176" }
%"class.blink::PersistentBase.176" = type { %"class.blink::WebPepperSocketChannelClientProxy"*, %"class.blink::PersistentNodePtr" }
%"class.blink::WebPepperSocketChannelClientProxy" = type { %"class.blink::WebSocketChannelClient", %"class.blink::WebPepperSocketImpl"* }
%"class.blink::WebSocketChannelClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WebString" = type { %class.scoped_refptr.179 }
%class.scoped_refptr.179 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.180" }
%"struct.std::__1::atomic.180" = type { %"struct.std::__1::__atomic_base.181" }
%"struct.std::__1::__atomic_base.181" = type { %"struct.std::__1::__atomic_base.182" }
%"struct.std::__1::__atomic_base.182" = type { %"struct.std::__1::__cxx_atomic_impl.183" }
%"struct.std::__1::__cxx_atomic_impl.183" = type { %"struct.std::__1::__cxx_atomic_base_impl.184" }
%"struct.std::__1::__cxx_atomic_base_impl.184" = type { i32 }
%"class.blink::WebDocument" = type { %"class.blink::WebNode" }
%"class.blink::WebNode" = type { i32 (...)**, %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebPepperSocketClient" = type { i32 (...)** }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.251", %"class.WTF::Vector.251", i8, i32, %"class.blink::Member.262", %"class.blink::Member.264", %"class.blink::Member.266", %"class.blink::Member.268", %"class.blink::Member.270", %"class.blink::Member.272", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.280", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.286", %"class.blink::Member.288", %"class.blink::Member.241", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.291", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.216", %"class.blink::Member.319", %"class.blink::Member.216", %"class.blink::Member.216", %"class.blink::Member.216", %"class.blink::UserActionElementSet", %"class.blink::Member.328", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.335", i16, i8, %"class.blink::Member.342", %"class.blink::Member.344", %"class.blink::Member.346", %"class.blink::Member.348", %"class.blink::TextLinkColors", %"class.blink::Member.350", i8, [7 x i8], %"class.blink::HeapHashMap.352", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.216", %"class.WTF::Vector.359", %"class.blink::Member.364", %"class.blink::Member.366", i8, %"class.blink::Member.216", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.368", %"class.blink::HeapVector.370", %"class.std::__1::unique_ptr.378", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.384", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.397", %"class.WTF::Vector.399", i8, i8, %"class.std::__1::unique_ptr.404", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.410", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.418", i8, i32, %"class.blink::Member.420", %"class.blink::Member.422", %"class.blink::Member.424", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.426", %"class.WTF::HashMap.428", %"class.blink::Member.433", %"class.blink::Member.435", %"class.blink::Member.437", %"class.blink::Member.439", %"class.blink::Member.203", %"class.blink::Member.203", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.441", i8, i32, %"class.blink::Member.448", %"class.blink::Member.450", i32, %"class.blink::Member.452", %"class.blink::Member.454", %"class.blink::Member.456", %"class.std::__1::unique_ptr.458", i64, %"class.std::__1::unique_ptr.464", i32, i32, %"class.blink::Member.470", %"class.blink::Member.472", %"class.blink::Member.474", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.476", %"class.WTF::Vector.478", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.483", %"class.blink::Member.490", %"class.std::__1::unique_ptr.492", %"class.blink::Member.498", i8, i8, %"class.WTF::String", %"class.blink::Member.500", i8, [7 x i8], %"class.blink::HeapHashMap.502", %"class.blink::HeapObserverSet", %"class.blink::Member.516", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.518", i32, i8, i8, %"class.blink::WeakMember.520", %"class.blink::Member.521" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.195", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.197" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.195" = type { %"class.blink::MemberBase.196" }
%"class.blink::MemberBase.196" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.197" = type { %"class.blink::MemberBase.198" }
%"class.blink::MemberBase.198" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.201", %"class.blink::Member.203", %"class.blink::Member.195", %"class.blink::Member.205", %"class.blink::Member.205", %"class.blink::Member.224", %"class.blink::Member.226", %"class.blink::Member.228", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.233", %"class.blink::HeapVector.235" }
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.205" = type { %"class.blink::MemberBase.206" }
%"class.blink::MemberBase.206" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.212" }
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.216", i32, %"class.blink::HeapVector" }
%"class.blink::Member.224" = type { %"class.blink::MemberBase.225" }
%"class.blink::MemberBase.225" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.226" = type { %"class.blink::MemberBase.227" }
%"class.blink::MemberBase.227" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.228" = type { %"class.blink::MemberBase.229" }
%"class.blink::MemberBase.229" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.230" }
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::HeapHashMap.232"* }
%"class.blink::HeapHashMap.232" = type opaque
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.235" = type { %"class.WTF::Vector.238" }
%"class.WTF::Vector.238" = type { %"class.WTF::VectorBuffer.239" }
%"class.WTF::VectorBuffer.239" = type { %"class.WTF::VectorBufferBase.240" }
%"class.WTF::VectorBufferBase.240" = type { %"class.blink::Member.241"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.244" }
%"class.blink::HeapHashMap.244" = type { %"class.WTF::HashMap.247" }
%"class.WTF::HashMap.247" = type { %"class.WTF::HashTable.248" }
%"class.WTF::HashTable.248" = type <{ %"struct.WTF::KeyValuePair.250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.250" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.251" = type { %"class.WTF::VectorBuffer.252" }
%"class.WTF::VectorBuffer.252" = type { %"class.WTF::VectorBufferBase.253" }
%"class.WTF::VectorBufferBase.253" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.254 }
%class.scoped_refptr.254 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.255" }
%"struct.std::__1::atomic.255" = type { %"struct.std::__1::__atomic_base.256" }
%"struct.std::__1::__atomic_base.256" = type { %"struct.std::__1::__atomic_base.257" }
%"struct.std::__1::__atomic_base.257" = type { %"struct.std::__1::__cxx_atomic_impl.258" }
%"struct.std::__1::__cxx_atomic_impl.258" = type { %"struct.std::__1::__cxx_atomic_base_impl.259" }
%"struct.std::__1::__cxx_atomic_base_impl.259" = type { i32 }
%"class.blink::Member.262" = type { %"class.blink::MemberBase.263" }
%"class.blink::MemberBase.263" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.264" = type { %"class.blink::MemberBase.265" }
%"class.blink::MemberBase.265" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.534", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.578", i32, i8, [3 x i8], %"class.blink::HeapVector.580", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.588", %"class.blink::Member.590", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.599", %"class.blink::Member.605", %"class.blink::Member.607", i8, [7 x i8] }>
%"class.blink::Supplementable.534" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.535" }
%"class.blink::HeapHashMap.535" = type { %"class.WTF::HashMap.538" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.541"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.541" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.550" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.542" }
%"class.blink::HeapObserverSet.542" = type { i32, [4 x i8], %"class.blink::HeapHashSet.543" }
%"class.blink::HeapHashSet.543" = type { %"class.WTF::HashSet.546" }
%"class.WTF::HashSet.546" = type { %"class.WTF::HashTable.547" }
%"class.WTF::HashTable.547" = type <{ %"class.blink::WeakMember.549"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.549" = type opaque
%"class.blink::Supplementable.550" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.551" }
%"class.blink::HeapHashMap.551" = type { %"class.WTF::HashMap.554" }
%"class.WTF::HashMap.554" = type { %"class.WTF::HashTable.555" }
%"class.WTF::HashTable.555" = type <{ %"struct.WTF::KeyValuePair.557"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.557" = type { i8*, %"class.blink::Member.710" }
%"class.blink::Member.710" = type { %"class.blink::MemberBase.711" }
%"class.blink::MemberBase.711" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.712" }
%"class.blink::Member.712" = type { %"class.blink::MemberBase.713" }
%"class.blink::MemberBase.713" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.558, %"class.std::__1::unique_ptr.562", %"class.std::__1::unique_ptr.562", %"class.std::__1::unique_ptr.568", %"class.std::__1::unique_ptr.568", %"class.blink::Member.264", i32, [4 x i8], %"class.WTF::HashSet.574", i32, i32 }
%class.scoped_refptr.558 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.559", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.561 }
%"class.WTF::RefCounted.559" = type { %"class.base::RefCounted.560" }
%"class.base::RefCounted.560" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.561 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.574" = type { %"class.WTF::HashTable.575" }
%"class.WTF::HashTable.575" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.578" = type { %"class.blink::MemberBase.579" }
%"class.blink::MemberBase.579" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.580" = type { %"class.WTF::Vector.583" }
%"class.WTF::Vector.583" = type { %"class.WTF::VectorBuffer.584" }
%"class.WTF::VectorBuffer.584" = type { %"class.WTF::VectorBufferBase.585" }
%"class.WTF::VectorBufferBase.585" = type { %"class.blink::Member.586"*, i32, i32 }
%"class.blink::Member.586" = type opaque
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.592", i32, i32 }
%"class.blink::HeapHashMap.592" = type { %"class.WTF::HashMap.595" }
%"class.WTF::HashMap.595" = type { %"class.WTF::HashTable.596" }
%"class.WTF::HashTable.596" = type <{ %"struct.WTF::KeyValuePair.598"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.598" = type opaque
%"class.std::__1::unique_ptr.599" = type { %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.601" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.266" = type { %"class.blink::MemberBase.267" }
%"class.blink::MemberBase.267" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.268" = type { %"class.blink::MemberBase.269" }
%"class.blink::MemberBase.269" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.274" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::KURL"* }
%"class.blink::Member.286" = type { %"class.blink::MemberBase.287" }
%"class.blink::MemberBase.287" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.288" = type { %"class.blink::MemberBase.289" }
%"class.blink::MemberBase.289" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.241" = type { %"class.blink::MemberBase.242" }
%"class.blink::MemberBase.242" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.290 }
%class.scoped_refptr.290 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.291" = type { %"class.WTF::VectorBuffer.292" }
%"class.WTF::VectorBuffer.292" = type { %"class.WTF::VectorBufferBase.293" }
%"class.WTF::VectorBufferBase.293" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.294 }
%class.scoped_refptr.294 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent.295" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.295" = type { %"class.blink::PersistentBase.296" }
%"class.blink::PersistentBase.296" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.299" }
%"class.blink::HeapHashMap.299" = type { %"class.WTF::HashMap.302" }
%"class.WTF::HashMap.302" = type { %"class.WTF::HashTable.303" }
%"class.WTF::HashTable.303" = type <{ %"struct.WTF::KeyValuePair.305"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.305" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.319" = type { %"class.blink::MemberBase.320" }
%"class.blink::MemberBase.320" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.321" }
%"class.blink::HeapHashMap.321" = type { %"class.WTF::HashMap.324" }
%"class.WTF::HashMap.324" = type { %"class.WTF::HashTable.325" }
%"class.WTF::HashTable.325" = type <{ %"struct.WTF::KeyValuePair.327"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.327" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.332" }
%"class.WTF::HashTable.332" = type <{ %"class.blink::WeakMember.334"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.334" = type opaque
%"class.blink::HeapHashSet.335" = type { %"class.WTF::HashSet.338" }
%"class.WTF::HashSet.338" = type { %"class.WTF::HashTable.339" }
%"class.WTF::HashTable.339" = type <{ %"class.blink::WeakMember.341"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.341" = type opaque
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.344" = type { %"class.blink::MemberBase.345" }
%"class.blink::MemberBase.345" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.346" = type { %"class.blink::MemberBase.347" }
%"class.blink::MemberBase.347" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.350" = type { %"class.blink::MemberBase.351" }
%"class.blink::MemberBase.351" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.352" = type { %"class.WTF::HashMap.355" }
%"class.WTF::HashMap.355" = type { %"class.WTF::HashTable.356" }
%"class.WTF::HashTable.356" = type <{ %"struct.WTF::KeyValuePair.358"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.358" = type opaque
%"class.WTF::Vector.359" = type { %"class.WTF::VectorBuffer.360" }
%"class.WTF::VectorBuffer.360" = type { %"class.WTF::VectorBufferBase.361" }
%"class.WTF::VectorBufferBase.361" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.366" = type { %"class.blink::MemberBase.367" }
%"class.blink::MemberBase.367" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.216" = type { %"class.blink::MemberBase.217" }
%"class.blink::MemberBase.217" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.368" = type { %"class.blink::MemberBase.369" }
%"class.blink::MemberBase.369" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.370" = type { %"class.WTF::Vector.373" }
%"class.WTF::Vector.373" = type { %"class.WTF::VectorBuffer.374" }
%"class.WTF::VectorBuffer.374" = type { %"class.WTF::VectorBufferBase.375" }
%"class.WTF::VectorBufferBase.375" = type { %"class.blink::Member.376"*, i32, i32 }
%"class.blink::Member.376" = type opaque
%"class.std::__1::unique_ptr.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.384" = type { %"class.WTF::HashSet.387" }
%"class.WTF::HashSet.387" = type { %"class.WTF::HashTable.388" }
%"class.WTF::HashTable.388" = type <{ %"class.blink::WeakMember.390"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.390" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.391", i32, [4 x i8] }>
%"class.WTF::Vector.391" = type { %"class.WTF::VectorBuffer.392" }
%"class.WTF::VectorBuffer.392" = type { %"class.WTF::VectorBufferBase.393" }
%"class.WTF::VectorBufferBase.393" = type { %"struct.std::__1::pair.394"*, i32, i32 }
%"struct.std::__1::pair.394" = type opaque
%"class.blink::Member.397" = type { %"class.blink::MemberBase.398" }
%"class.blink::MemberBase.398" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.399" = type { %"class.WTF::VectorBuffer.400" }
%"class.WTF::VectorBuffer.400" = type { %"class.WTF::VectorBufferBase.401" }
%"class.WTF::VectorBufferBase.401" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.220" }
%"class.WTF::Vector.220" = type { %"class.WTF::VectorBuffer.221" }
%"class.WTF::VectorBuffer.221" = type { %"class.WTF::VectorBufferBase.222" }
%"class.WTF::VectorBufferBase.222" = type { %"class.blink::Member.216"*, i32, i32 }
%"class.blink::HeapVector.410" = type { %"class.WTF::Vector.413" }
%"class.WTF::Vector.413" = type { %"class.WTF::VectorBuffer.414" }
%"class.WTF::VectorBuffer.414" = type { %"class.WTF::VectorBufferBase.415" }
%"class.WTF::VectorBufferBase.415" = type { %"class.blink::Member.416"*, i32, i32 }
%"class.blink::Member.416" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.203" }
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.428" = type { %"class.WTF::HashTable.429" }
%"class.WTF::HashTable.429" = type <{ %"struct.WTF::KeyValuePair.432"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.432" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.203" = type { %"class.blink::MemberBase.204" }
%"class.blink::MemberBase.204" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.318", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.309, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.309 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.310" }>
%"class.base::RefCountedThreadSafe.310" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.311 }
%class.scoped_refptr.311 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.312", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.312" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.313" }
%"struct.std::__1::atomic.313" = type { %"struct.std::__1::__atomic_base.314" }
%"struct.std::__1::__atomic_base.314" = type { %"struct.std::__1::__atomic_base.315" }
%"struct.std::__1::__atomic_base.315" = type { %"struct.std::__1::__cxx_atomic_impl.316" }
%"struct.std::__1::__cxx_atomic_impl.316" = type { %"struct.std::__1::__cxx_atomic_base_impl.317" }
%"struct.std::__1::__cxx_atomic_base_impl.317" = type { i8 }
%"class.blink::WeakMember.318" = type { %"class.blink::MemberBase.204" }
%"class.blink::HeapHashSet.441" = type { %"class.WTF::HashSet.444" }
%"class.WTF::HashSet.444" = type { %"class.WTF::HashTable.445" }
%"class.WTF::HashTable.445" = type <{ %"class.blink::Member.447"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.447" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.478" = type { %"class.WTF::VectorBuffer.479" }
%"class.WTF::VectorBuffer.479" = type { %"class.WTF::VectorBufferBase.480" }
%"class.WTF::VectorBufferBase.480" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.483" = type { %"class.WTF::HashMap.486" }
%"class.WTF::HashMap.486" = type { %"class.WTF::HashTable.487" }
%"class.WTF::HashTable.487" = type <{ %"struct.WTF::KeyValuePair.489"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.489" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.179 }
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.502" = type { %"class.WTF::HashMap.505" }
%"class.WTF::HashMap.505" = type { %"class.WTF::HashTable.506" }
%"class.WTF::HashTable.506" = type <{ %"struct.WTF::KeyValuePair.508"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.508" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.509" }
%"class.blink::HeapHashSet.509" = type { %"class.WTF::HashSet.512" }
%"class.WTF::HashSet.512" = type { %"class.WTF::HashTable.513" }
%"class.WTF::HashTable.513" = type <{ %"class.blink::WeakMember.515"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.515" = type opaque
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.203", %"class.blink::HeapHashSet.525", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.532", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.525" = type { %"class.WTF::HashSet.528" }
%"class.WTF::HashSet.528" = type { %"class.WTF::HashTable.529" }
%"class.WTF::HashTable.529" = type <{ %"class.blink::Member.531"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.531" = type opaque
%"class.blink::HeapTaskRunnerTimer.532" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.533", { i64, i64 } }
%"class.blink::WeakMember.533" = type { %"class.blink::MemberBase.519" }
%"class.blink::WeakMember.520" = type { %"class.blink::MemberBase" }
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.636", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.636" = type { %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WebSocketChannelImpl" = type { %"class.blink::WebSocketChannel", %"class.network::mojom::blink::WebSocketHandshakeClient", %"class.network::mojom::blink::WebSocketClient", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.609", %"class.blink::KURL", i64, %"class.blink::Member.611", %"class.WTF::Deque.613", %"class.blink::WebSocketMessageChunkAccumulator", %"class.blink::Member.264", i8, i8, i8, i8, i8, i64, %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.WTF::String", %"class.std::__1::unique_ptr.633", %"class.mojo::StructPtr", %"class.std::__1::unique_ptr.656", %"class.std::__1::unique_ptr.662", %"class.blink::HeapMojoRemote", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoReceiver.672", %"class.mojo::ScopedHandleBase.675", %"class.mojo::SimpleWatcher", %"class.WTF::Deque.680", %"class.mojo::ScopedHandleBase.685", %"class.mojo::SimpleWatcher", i8, %"class.blink::WebSocketChannelImpl::ConnectionCountTrackerHandle", %class.scoped_refptr.309 }
%"class.network::mojom::blink::WebSocketHandshakeClient" = type { i32 (...)** }
%"class.network::mojom::blink::WebSocketClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.609" = type { %"class.blink::MemberBase.610" }
%"class.blink::MemberBase.610" = type { %"class.blink::WebSocketChannelClient"* }
%"class.blink::Member.611" = type { %"class.blink::MemberBase.612" }
%"class.blink::MemberBase.612" = type { %"class.blink::WebSocketChannelImpl::BlobLoader"* }
%"class.blink::WebSocketChannelImpl::BlobLoader" = type opaque
%"class.WTF::Deque.613" = type { %"class.WTF::Deque<blink::WebSocketChannelImpl::Message, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::WebSocketChannelImpl::Message, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.616" }
%"class.WTF::VectorBuffer.616" = type { %"class.WTF::VectorBufferBase.617" }
%"class.WTF::VectorBufferBase.617" = type { %"class.blink::WebSocketChannelImpl::Message"*, i32, i32 }
%"class.blink::WebSocketChannelImpl::Message" = type { %"class.std::__1::unique_ptr.618", i32, %class.scoped_refptr.622, %"class.base::span", %"class.base::StrongAlias", i16, %"class.WTF::String", %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.618" = type { %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620", %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.620" = type { i8* }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"class.blink::WebSocketChannelImpl::MessageDataDeleter" }
%"class.blink::WebSocketChannelImpl::MessageDataDeleter" = type { %"class.v8::Isolate"*, i64 }
%class.scoped_refptr.622 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.623" }
%"class.base::RefCountedThreadSafe.623" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.base::StrongAlias" = type { i8 }
%"class.blink::WebSocketMessageChunkAccumulator" = type { %"class.WTF::Vector.624", %"class.WTF::Vector.624", i64, i32, %"class.blink::TaskRunnerTimer" }
%"class.WTF::Vector.624" = type { %"class.WTF::VectorBuffer.625" }
%"class.WTF::VectorBuffer.625" = type { %"class.WTF::VectorBufferBase.626" }
%"class.WTF::VectorBufferBase.626" = type { %"class.std::__1::unique_ptr.627"*, i32, i32 }
%"class.std::__1::unique_ptr.627" = type { %"class.std::__1::__compressed_pair.628" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WebSocketMessageChunkAccumulator"*, { i64, i64 } }
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.632 }
%class.scoped_refptr.632 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.633" = type { %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.blink::SourceLocation"* }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.645" }
%"class.std::__1::unique_ptr.645" = type { %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.network::mojom::blink::WebSocketHandshakeRequest"* }
%"class.network::mojom::blink::WebSocketHandshakeRequest" = type { %"class.blink::KURL", %"class.WTF::Vector.648", %"class.WTF::String" }
%"class.WTF::Vector.648" = type { %"class.WTF::VectorBuffer.649" }
%"class.WTF::VectorBuffer.649" = type { %"class.WTF::VectorBufferBase.650" }
%"class.WTF::VectorBufferBase.650" = type { %"class.mojo::InlinedStructPtr"*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::HttpHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::HttpHeader" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.std::__1::unique_ptr.656" = type { %"class.std::__1::__compressed_pair.657" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"class.blink::WebSocketHandshakeThrottle"* }
%"class.blink::WebSocketHandshakeThrottle" = type opaque
%"class.std::__1::unique_ptr.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"struct.blink::WebSocketChannelImpl::ConnectInfo"* }
%"struct.blink::WebSocketChannelImpl::ConnectInfo" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.668" }
%"class.blink::Member.668" = type { %"class.blink::MemberBase.669" }
%"class.blink::MemberBase.669" = type { %"class.blink::HeapMojoRemote<network::mojom::blink::WebSocket, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<network::mojom::blink::WebSocket, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.670" }
%"class.blink::Member.670" = type { %"class.blink::MemberBase.671" }
%"class.blink::MemberBase.671" = type { %"class.blink::HeapMojoReceiver<network::mojom::blink::WebSocketHandshakeClient, blink::WebSocketChannelImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<network::mojom::blink::WebSocketHandshakeClient, blink::WebSocketChannelImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoReceiver.672" = type { %"class.blink::Member.673" }
%"class.blink::Member.673" = type { %"class.blink::MemberBase.674" }
%"class.blink::MemberBase.674" = type { %"class.blink::HeapMojoReceiver<network::mojom::blink::WebSocketClient, blink::WebSocketChannelImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<network::mojom::blink::WebSocketClient, blink::WebSocketChannelImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.mojo::ScopedHandleBase.675" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.WTF::Deque.680" = type { %"class.WTF::Deque<blink::WebSocketChannelImpl::DataFrame, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::WebSocketChannelImpl::DataFrame, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.683" }
%"class.WTF::VectorBuffer.683" = type { %"class.WTF::VectorBufferBase.684" }
%"class.WTF::VectorBufferBase.684" = type { %"struct.blink::WebSocketChannelImpl::DataFrame"*, i32, i32 }
%"struct.blink::WebSocketChannelImpl::DataFrame" = type { i8, i32, i32 }
%"class.mojo::ScopedHandleBase.685" = type { %"class.mojo::DataPipeProducerHandle" }
%"class.mojo::DataPipeProducerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.676, i8, %"class.mojo::ScopedHandleBase.677", %class.scoped_refptr.678, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.679" }
%class.scoped_refptr.676 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.mojo::ScopedHandleBase.677" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.678 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.679" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WebSocketChannelImpl::ConnectionCountTrackerHandle" = type { i8 }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.694 }
%union.anon.694 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::WebArrayBuffer" = type { %"class.blink::WebPrivatePtr.698" }
%"class.blink::WebPrivatePtr.698" = type { i8* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::Vector.702" = type { %"class.WTF::VectorBuffer.703" }
%"class.WTF::VectorBuffer.703" = type { %"class.WTF::VectorBufferBase.704" }
%"class.WTF::VectorBufferBase.704" = type { i8*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.731, %"class.blink::Member.732", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.731 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.732" = type { %"class.blink::MemberBase.733" }
%"class.blink::MemberBase.733" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.734" }
%"class.blink::Persistent.734" = type { %"class.blink::PersistentBase.735" }
%"class.blink::PersistentBase.735" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias.736" }
%"class.base::StrongAlias.736" = type { %"class.base::UnguessableToken" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::Vector.740" = type { %"class.WTF::VectorBuffer.741" }
%"class.WTF::VectorBuffer.741" = type { %"class.WTF::VectorBufferBase.742" }
%"class.WTF::VectorBufferBase.742" = type { %"class.base::span"*, i32, i32 }

$_ZN5blink14DOMArrayBuffer6CreateEPKvm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink18DOMArrayBufferBaseD2Ev = comdat any

$_ZN5blink18DOMArrayBufferBaseD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_33WebPepperSocketChannelClientProxyEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_33WebPepperSocketChannelClientProxyEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_33WebPepperSocketChannelClientProxyEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_33WebPepperSocketChannelClientProxyEE7GetNameEPKv = comdat any

$_ZNK5blink33WebPepperSocketChannelClientProxy5TraceEPNS_7VisitorE = comdat any

$_ZN5blink22WebSocketChannelClientD2Ev = comdat any

$_ZN5blink33WebPepperSocketChannelClientProxyD0Ev = comdat any

$_ZN5blink33WebPepperSocketChannelClientProxy10DidConnectERKN3WTF6StringES4_ = comdat any

$_ZN5blink33WebPepperSocketChannelClientProxy21DidReceiveTextMessageERKN3WTF6StringE = comdat any

$_ZN5blink33WebPepperSocketChannelClientProxy23DidReceiveBinaryMessageERKN3WTF6VectorIN4base4spanIKcLm18446744073709551615EEELj0ENS1_18PartitionAllocatorEEE = comdat any

$_ZN5blink33WebPepperSocketChannelClientProxy8DidErrorEv = comdat any

$_ZN5blink33WebPepperSocketChannelClientProxy24DidConsumeBufferedAmountEm = comdat any

$_ZN5blink33WebPepperSocketChannelClientProxy24DidStartClosingHandshakeEv = comdat any

$_ZN5blink33WebPepperSocketChannelClientProxy8DidCloseENS_22WebSocketChannelClient32ClosingHandshakeCompletionStatusEtRKN3WTF6StringE = comdat any

$_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_33WebPepperSocketChannelClientProxyELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_16WebSocketChannelELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16WebSocketChannelELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_16WebSocketChannelEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink18DOMArrayBufferBaseE = comdat any

$_ZZN5blink11GCInfoTraitINS_33WebPepperSocketChannelClientProxyEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_33WebPepperSocketChannelClientProxyEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink33WebPepperSocketChannelClientProxyE = comdat any

@_ZTVN5blink19WebPepperSocketImplE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebPepperSocketImpl"*)* @_ZN5blink19WebPepperSocketImplD2Ev to i8*), i8* bitcast (void (%"class.blink::WebPepperSocketImpl"*)* @_ZN5blink19WebPepperSocketImplD0Ev to i8*), i8* bitcast (void (%"class.blink::WebPepperSocketImpl"*, %"class.blink::WebURL"*, %"class.blink::WebString"*)* @_ZN5blink19WebPepperSocketImpl7ConnectERKNS_6WebURLERKNS_9WebStringE to i8*), i8* bitcast (void (%"class.blink::WebString"*, %"class.blink::WebPepperSocketImpl"*)* @_ZN5blink19WebPepperSocketImpl11SubprotocolEv to i8*), i8* bitcast (i1 (%"class.blink::WebPepperSocketImpl"*, %"class.blink::WebString"*)* @_ZN5blink19WebPepperSocketImpl8SendTextERKNS_9WebStringE to i8*), i8* bitcast (i1 (%"class.blink::WebPepperSocketImpl"*, %"class.blink::WebArrayBuffer"*)* @_ZN5blink19WebPepperSocketImpl15SendArrayBufferERKNS_14WebArrayBufferE to i8*), i8* bitcast (void (%"class.blink::WebPepperSocketImpl"*, i32, %"class.blink::WebString"*)* @_ZN5blink19WebPepperSocketImpl5CloseEiRKNS_9WebStringE to i8*), i8* bitcast (void (%"class.blink::WebPepperSocketImpl"*, %"class.blink::WebString"*)* @_ZN5blink19WebPepperSocketImpl4FailERKNS_9WebStringE to i8*), i8* bitcast (void (%"class.blink::WebPepperSocketImpl"*)* @_ZN5blink19WebPepperSocketImpl10DisconnectEv to i8*)] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink14DOMArrayBufferE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN5blink18DOMArrayBufferBaseE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::DOMArrayBufferBase"*)* @_ZN5blink18DOMArrayBufferBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::DOMArrayBufferBase"*)* @_ZN5blink18DOMArrayBufferBaseD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)* @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::DOMArrayBufferBase"*, %"class.blink::ScriptState"*)* @_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink33WebPepperSocketChannelClientProxyEEEPKcv = private unnamed_addr constant [88 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::WebPepperSocketChannelClientProxy]\00", align 1
@_ZZN5blink11GCInfoTraitINS_33WebPepperSocketChannelClientProxyEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_33WebPepperSocketChannelClientProxyEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_33WebPepperSocketChannelClientProxyEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_33WebPepperSocketChannelClientProxyEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_33WebPepperSocketChannelClientProxyEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZTVN5blink33WebPepperSocketChannelClientProxyE = linkonce_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebPepperSocketChannelClientProxy"*, %"class.blink::Visitor"*)* @_ZNK5blink33WebPepperSocketChannelClientProxy5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::WebSocketChannelClient"*)* @_ZN5blink22WebSocketChannelClientD2Ev to i8*), i8* bitcast (void (%"class.blink::WebPepperSocketChannelClientProxy"*)* @_ZN5blink33WebPepperSocketChannelClientProxyD0Ev to i8*), i8* bitcast (void (%"class.blink::WebPepperSocketChannelClientProxy"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink33WebPepperSocketChannelClientProxy10DidConnectERKN3WTF6StringES4_ to i8*), i8* bitcast (void (%"class.blink::WebPepperSocketChannelClientProxy"*, %"class.WTF::String"*)* @_ZN5blink33WebPepperSocketChannelClientProxy21DidReceiveTextMessageERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::WebPepperSocketChannelClientProxy"*, %"class.WTF::Vector.740"*)* @_ZN5blink33WebPepperSocketChannelClientProxy23DidReceiveBinaryMessageERKN3WTF6VectorIN4base4spanIKcLm18446744073709551615EEELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::WebPepperSocketChannelClientProxy"*)* @_ZN5blink33WebPepperSocketChannelClientProxy8DidErrorEv to i8*), i8* bitcast (void (%"class.blink::WebPepperSocketChannelClientProxy"*, i64)* @_ZN5blink33WebPepperSocketChannelClientProxy24DidConsumeBufferedAmountEm to i8*), i8* bitcast (void (%"class.blink::WebPepperSocketChannelClientProxy"*)* @_ZN5blink33WebPepperSocketChannelClientProxy24DidStartClosingHandshakeEv to i8*), i8* bitcast (void (%"class.blink::WebPepperSocketChannelClientProxy"*, i32, i16, %"class.WTF::String"*)* @_ZN5blink33WebPepperSocketChannelClientProxy8DidCloseENS_22WebSocketChannelClient32ClosingHandshakeCompletionStatusEtRKN3WTF6StringE to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIcLj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [93 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<char, 0, WTF::PartitionAllocator>]\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1

@_ZN5blink19WebPepperSocketImplC1ERKNS_11WebDocumentEPNS_21WebPepperSocketClientE = hidden unnamed_addr alias void (%"class.blink::WebPepperSocketImpl"*, %"class.blink::WebDocument"*, %"class.blink::WebPepperSocketClient"*), void (%"class.blink::WebPepperSocketImpl"*, %"class.blink::WebDocument"*, %"class.blink::WebPepperSocketClient"*)* @_ZN5blink19WebPepperSocketImplC2ERKNS_11WebDocumentEPNS_21WebPepperSocketClientE
@_ZN5blink19WebPepperSocketImplD1Ev = hidden unnamed_addr alias void (%"class.blink::WebPepperSocketImpl"*), void (%"class.blink::WebPepperSocketImpl"*)* @_ZN5blink19WebPepperSocketImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WebPepperSocket"* @_ZN5blink15WebPepperSocket6CreateERKNS_11WebDocumentEPNS_21WebPepperSocketClientE(%"class.blink::WebDocument"* dereferenceable(16), %"class.blink::WebPepperSocketClient"*) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 80) #10
  %4 = bitcast i8* %3 to %"class.blink::WebPepperSocketImpl"*
  tail call void @_ZN5blink19WebPepperSocketImplC2ERKNS_11WebDocumentEPNS_21WebPepperSocketClientE(%"class.blink::WebPepperSocketImpl"* nonnull %4, %"class.blink::WebDocument"* dereferenceable(16) %0, %"class.blink::WebPepperSocketClient"* %1) #11
  %5 = bitcast i8* %3 to %"class.blink::WebPepperSocket"*
  ret %"class.blink::WebPepperSocket"* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebPepperSocketImplC2ERKNS_11WebDocumentEPNS_21WebPepperSocketClientE(%"class.blink::WebPepperSocketImpl"*, %"class.blink::WebDocument"* dereferenceable(16), %"class.blink::WebPepperSocketClient"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink19WebPepperSocketImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 1
  %6 = bitcast %"class.blink::Persistent"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #11
  %7 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 2
  store %"class.blink::WebPepperSocketClient"* %2, %"class.blink::WebPepperSocketClient"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 3
  %9 = ptrtoint %"class.blink::WebPepperSocketImpl"* %0 to i64
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_33WebPepperSocketChannelClientProxyEEEPhm(i64 16) #11
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink33WebPepperSocketChannelClientProxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  %13 = bitcast i8* %12 to i64*
  store i64 %9, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 -4
  %15 = bitcast i8* %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = or i16 %16, 1
  store atomic i16 %17, i16* %15 release, align 2
  %18 = getelementptr inbounds %"class.blink::Persistent.175", %"class.blink::Persistent.175"* %8, i64 0, i32 0
  %19 = bitcast %"class.blink::Persistent.175"* %8 to i8**
  store i8* %10, i8** %19, align 8
  %20 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  %21 = ptrtoint i8* %10 to i64
  switch i64 %21, label %22 [
    i64 0, label %48
    i64 -1, label %48
  ]

22:                                               ; preds = %3
  %23 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %24 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %23, i64 0, i32 1
  %25 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %24) #11
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %22
  %28 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %24, i8* %28) #11
  br label %29

29:                                               ; preds = %27, %22
  %30 = phi i8* [ %28, %27 ], [ %25, %22 ]
  %31 = bitcast i8* %30 to %"class.blink::ThreadState"**
  %32 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %35, align 8
  %37 = icmp eq %"class.blink::PersistentNode"* %36, null
  br i1 %37, label %38, label %41, !prof !2

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %34, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %39) #11
  %40 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %35, align 8
  br label %41

41:                                               ; preds = %38, %29
  %42 = phi %"class.blink::PersistentNode"* [ %40, %38 ], [ %36, %29 ]
  %43 = bitcast %"class.blink::PersistentNode"* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::PersistentRegion"* %34 to i64*
  store i64 %44, i64* %45, align 8
  %46 = bitcast %"class.blink::PersistentNode"* %42 to %"class.blink::PersistentBase.176"**
  store %"class.blink::PersistentBase.176"* %18, %"class.blink::PersistentBase.176"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %42, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_33WebPepperSocketChannelClientProxyELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %47, align 8
  store %"class.blink::PersistentNode"* %42, %"class.blink::PersistentNode"** %20, align 8
  br label %48

48:                                               ; preds = %3, %3, %41
  %49 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 4
  tail call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %49) #11
  %50 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 5
  store i8 0, i8* %50, align 8
  %51 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 6
  %52 = bitcast i64* %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false)
  %53 = tail call %"class.blink::Document"* @_ZNK5blink11WebDocumentcvPNS_8DocumentEEv(%"class.blink::WebDocument"* %1) #11
  %54 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %53) #11
  %55 = getelementptr inbounds %"class.blink::Persistent.175", %"class.blink::Persistent.175"* %8, i64 0, i32 0, i32 0
  %56 = load %"class.blink::WebPepperSocketChannelClientProxy"*, %"class.blink::WebPepperSocketChannelClientProxy"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::WebPepperSocketChannelClientProxy", %"class.blink::WebPepperSocketChannelClientProxy"* %56, i64 0, i32 0
  %58 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #11
  %59 = tail call %"class.blink::WebSocketChannelImpl"* @_ZN5blink20WebSocketChannelImpl6CreateEPNS_16ExecutionContextEPNS_22WebSocketChannelClientENSt3__110unique_ptrINS_14SourceLocationENS5_14default_deleteIS7_EEEE(%"class.blink::ExecutionContext"* %54, %"class.blink::WebSocketChannelClient"* %57, %"class.blink::SourceLocation"* %58) #11
  %60 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %5, i64 0, i32 0
  %61 = getelementptr inbounds %"class.blink::WebSocketChannelImpl", %"class.blink::WebSocketChannelImpl"* %59, i64 0, i32 0
  tail call void @_ZN5blink14PersistentBaseINS_16WebSocketChannelELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase"* %60, %"class.blink::WebSocketChannel"* %61) #11
  ret void
}

declare void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"*) unnamed_addr #2

declare %"class.blink::Document"* @_ZNK5blink11WebDocumentcvPNS_8DocumentEEv(%"class.blink::WebDocument"*) local_unnamed_addr #2

declare %"class.blink::WebSocketChannelImpl"* @_ZN5blink20WebSocketChannelImpl6CreateEPNS_16ExecutionContextEPNS_22WebSocketChannelClientENSt3__110unique_ptrINS_14SourceLocationENS5_14default_deleteIS7_EEEE(%"class.blink::ExecutionContext"*, %"class.blink::WebSocketChannelClient"*, %"class.blink::SourceLocation"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #2

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebPepperSocketImplD2Ev(%"class.blink::WebPepperSocketImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink19WebPepperSocketImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %3, align 8
  %5 = bitcast %"class.blink::WebSocketChannel"* %4 to void (%"class.blink::WebSocketChannel"*)***
  %6 = load void (%"class.blink::WebSocketChannel"*)**, void (%"class.blink::WebSocketChannel"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::WebSocketChannel"*)*, void (%"class.blink::WebSocketChannel"*)** %6, i64 8
  %8 = load void (%"class.blink::WebSocketChannel"*)*, void (%"class.blink::WebSocketChannel"*)** %7, align 8
  tail call void %8(%"class.blink::WebSocketChannel"* %4) #11
  %9 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 4
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %9) #11
  %10 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %11 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %12 = icmp eq %"class.blink::PersistentNode"* %11, null
  br i1 %12, label %32, label %13

13:                                               ; preds = %1
  %14 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %15 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %14, i64 0, i32 1
  %16 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %15) #11
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %20, !prof !2

18:                                               ; preds = %13
  %19 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %15, i8* %19) #11
  br label %20

20:                                               ; preds = %18, %13
  %21 = phi i8* [ %19, %18 ], [ %16, %13 ]
  %22 = bitcast i8* %21 to %"class.blink::ThreadState"**
  %23 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %24, align 8
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %25, i64 0, i32 0, i32 0
  %28 = bitcast %"class.blink::PersistentRegion"* %25 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::PersistentNode"* %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %26, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %31, align 8
  store %"class.blink::PersistentNode"* %26, %"class.blink::PersistentNode"** %27, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %10, align 8
  br label %32

32:                                               ; preds = %1, %20
  %33 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %33, align 8
  %35 = icmp eq %"class.blink::PersistentNode"* %34, null
  br i1 %35, label %55, label %36

36:                                               ; preds = %32
  %37 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %38 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %37, i64 0, i32 1
  %39 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %38) #11
  %40 = icmp eq i8* %39, null
  br i1 %40, label %41, label %43, !prof !2

41:                                               ; preds = %36
  %42 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %38, i8* %42) #11
  br label %43

43:                                               ; preds = %41, %36
  %44 = phi i8* [ %42, %41 ], [ %39, %36 ]
  %45 = bitcast i8* %44 to %"class.blink::ThreadState"**
  %46 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %47, align 8
  %49 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %33, align 8
  %50 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %48, i64 0, i32 0, i32 0
  %51 = bitcast %"class.blink::PersistentRegion"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.blink::PersistentNode"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %49, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %54, align 8
  store %"class.blink::PersistentNode"* %49, %"class.blink::PersistentNode"** %50, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %33, align 8
  br label %55

55:                                               ; preds = %32, %43
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebPepperSocketImplD0Ev(%"class.blink::WebPepperSocketImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19WebPepperSocketImplD2Ev(%"class.blink::WebPepperSocketImpl"* %0) #11
  %2 = bitcast %"class.blink::WebPepperSocketImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebPepperSocketImpl7ConnectERKNS_6WebURLERKNS_9WebStringE(%"class.blink::WebPepperSocketImpl"* nocapture readonly, %"class.blink::WebURL"* dereferenceable(96), %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %8) #11
  call void @_ZNK5blink6WebURLcvNS_4KURLEEv(%"class.blink::KURL"* nonnull sret %4, %"class.blink::WebURL"* %1) #11
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %2) #11
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = bitcast %"class.blink::WebSocketChannel"* %7 to i1 (%"class.blink::WebSocketChannel"*, %"class.blink::KURL"*, %"class.WTF::String"*)***
  %13 = load i1 (%"class.blink::WebSocketChannel"*, %"class.blink::KURL"*, %"class.WTF::String"*)**, i1 (%"class.blink::WebSocketChannel"*, %"class.blink::KURL"*, %"class.WTF::String"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::WebSocketChannel"*, %"class.blink::KURL"*, %"class.WTF::String"*)*, i1 (%"class.blink::WebSocketChannel"*, %"class.blink::KURL"*, %"class.WTF::String"*)** %13, i64 2
  %15 = load i1 (%"class.blink::WebSocketChannel"*, %"class.blink::KURL"*, %"class.WTF::String"*)*, i1 (%"class.blink::WebSocketChannel"*, %"class.blink::KURL"*, %"class.WTF::String"*)** %14, align 8
  %16 = call zeroext i1 %15(%"class.blink::WebSocketChannel"* %7, %"class.blink::KURL"* nonnull dereferenceable(112) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #11
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #11
  br label %32

32:                                               ; preds = %3, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %8) #11
  ret void
}

declare void @_ZNK5blink6WebURLcvNS_4KURLEEv(%"class.blink::KURL"* sret, %"class.blink::WebURL"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebPepperSocketImpl11SubprotocolEv(%"class.blink::WebString"* noalias sret, %"class.blink::WebPepperSocketImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %1, i64 0, i32 4
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %0, %"class.blink::WebString"* dereferenceable(8) %3) #11
  ret void
}

declare void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19WebPepperSocketImpl8SendTextERKNS_9WebStringE(%"class.blink::WebPepperSocketImpl"* nocapture, %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %8 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %1) #11
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %7, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* nonnull %3, i32 0) #11
  %13 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = load i64, i64* %11, align 8
  %18 = zext i8 %15 to i64
  %19 = select i1 %16, i64 %17, i64 %18
  %20 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 6
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %19
  store i64 %22, i64* %20, align 8
  %23 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 5
  %24 = load i8, i8* %23, align 8, !range !3
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 7
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, %19
  store i64 %29, i64* %27, align 8
  br label %30

30:                                               ; preds = %2, %26
  %31 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 2
  %32 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %31, align 8
  %33 = bitcast %"class.blink::WebPepperSocketClient"* %32 to void (%"class.blink::WebPepperSocketClient"*, i64)***
  %34 = load void (%"class.blink::WebPepperSocketClient"*, i64)**, void (%"class.blink::WebPepperSocketClient"*, i64)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*, i64)*, void (%"class.blink::WebPepperSocketClient"*, i64)** %34, i64 10
  %36 = load void (%"class.blink::WebPepperSocketClient"*, i64)*, void (%"class.blink::WebPepperSocketClient"*, i64)** %35, align 8
  call void %36(%"class.blink::WebPepperSocketClient"* %32, i64 %22) #11
  %37 = load i8, i8* %23, align 8, !range !3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %49

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %41 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %40, align 8
  %42 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %42, align 8
  %43 = bitcast %"class.blink::WebSocketChannel"* %41 to i32 (%"class.blink::WebSocketChannel"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback"*)***
  %44 = load i32 (%"class.blink::WebSocketChannel"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback"*)**, i32 (%"class.blink::WebSocketChannel"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback"*)*** %43, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::WebSocketChannel"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback"*)*, i32 (%"class.blink::WebSocketChannel"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback"*)** %44, i64 3
  %46 = load i32 (%"class.blink::WebSocketChannel"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback"*)*, i32 (%"class.blink::WebSocketChannel"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback"*)** %45, align 8
  %47 = call i32 %46(%"class.blink::WebSocketChannel"* %41, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.base::OnceCallback"* nonnull %5) #11
  %48 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %48) #11
  br label %49

49:                                               ; preds = %30, %39
  %50 = load i8, i8* %14, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %49
  %53 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %53) #10
  br label %54

54:                                               ; preds = %49, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #11
  br label %70

70:                                               ; preds = %54, %66, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  ret i1 true
}

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19WebPepperSocketImpl15SendArrayBufferERKNS_14WebArrayBufferE(%"class.blink::WebPepperSocketImpl"* nocapture, %"class.blink::WebArrayBuffer"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = tail call i64 @_ZNK5blink14WebArrayBuffer10ByteLengthEv(%"class.blink::WebArrayBuffer"* %1) #11
  %5 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 6
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %4
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 5
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 7
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, %4
  store i64 %14, i64* %12, align 8
  br label %15

15:                                               ; preds = %2, %11
  %16 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 2
  %17 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %16, align 8
  %18 = bitcast %"class.blink::WebPepperSocketClient"* %17 to void (%"class.blink::WebPepperSocketClient"*, i64)***
  %19 = load void (%"class.blink::WebPepperSocketClient"*, i64)**, void (%"class.blink::WebPepperSocketClient"*, i64)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*, i64)*, void (%"class.blink::WebPepperSocketClient"*, i64)** %19, i64 10
  %21 = load void (%"class.blink::WebPepperSocketClient"*, i64)*, void (%"class.blink::WebPepperSocketClient"*, i64)** %20, align 8
  tail call void %21(%"class.blink::WebPepperSocketClient"* %17, i64 %7) #11
  %22 = load i8, i8* %8, align 8, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %42

24:                                               ; preds = %15
  %25 = tail call %"class.blink::DOMArrayBuffer"* @_ZNK5blink14WebArrayBuffercvPNS_14DOMArrayBufferEEv(%"class.blink::WebArrayBuffer"* %1) #11
  %26 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %27 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %25, i64 0, i32 0, i32 1, i32 0, i32 0
  %29 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %28, align 8
  %30 = icmp eq %"class.v8::BackingStore"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %24
  %32 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %29) #11
  br label %33

33:                                               ; preds = %24, %31
  %34 = phi i64 [ %32, %31 ], [ 0, %24 ]
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %35, align 8
  %36 = bitcast %"class.blink::WebSocketChannel"* %27 to i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback"*)***
  %37 = load i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback"*)**, i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback"*)*** %36, align 8
  %38 = getelementptr inbounds i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback"*)*, i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback"*)** %37, i64 4
  %39 = load i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback"*)*, i32 (%"class.blink::WebSocketChannel"*, %"class.blink::DOMArrayBuffer"*, i64, i64, %"class.base::OnceCallback"*)** %38, align 8
  %40 = call i32 %39(%"class.blink::WebSocketChannel"* %27, %"class.blink::DOMArrayBuffer"* dereferenceable(40) %25, i64 0, i64 %34, %"class.base::OnceCallback"* nonnull %3) #11
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #11
  br label %42

42:                                               ; preds = %15, %33
  ret i1 true
}

declare i64 @_ZNK5blink14WebArrayBuffer10ByteLengthEv(%"class.blink::WebArrayBuffer"*) local_unnamed_addr #2

declare %"class.blink::DOMArrayBuffer"* @_ZNK5blink14WebArrayBuffercvPNS_14DOMArrayBufferEEv(%"class.blink::WebArrayBuffer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebPepperSocketImpl5CloseEiRKNS_9WebStringE(%"class.blink::WebPepperSocketImpl"* nocapture, i32, %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 5
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %6, align 8
  %8 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %2) #11
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = bitcast %"class.blink::WebSocketChannel"* %7 to void (%"class.blink::WebSocketChannel"*, i32, %"class.WTF::String"*)***
  %12 = load void (%"class.blink::WebSocketChannel"*, i32, %"class.WTF::String"*)**, void (%"class.blink::WebSocketChannel"*, i32, %"class.WTF::String"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::WebSocketChannel"*, i32, %"class.WTF::String"*)*, void (%"class.blink::WebSocketChannel"*, i32, %"class.WTF::String"*)** %12, i64 6
  %14 = load void (%"class.blink::WebSocketChannel"*, i32, %"class.WTF::String"*)*, void (%"class.blink::WebSocketChannel"*, i32, %"class.WTF::String"*)** %13, align 8
  call void %14(%"class.blink::WebSocketChannel"* %7, i32 %1, %"class.WTF::String"* nonnull dereferenceable(8) %4) #11
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #11
  br label %30

30:                                               ; preds = %3, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebPepperSocketImpl4FailERKNS_9WebStringE(%"class.blink::WebPepperSocketImpl"* nocapture readonly, %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %5, align 8
  %7 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = tail call %"class.WTF::StringImpl"* @_ZNK5blink9WebStringcvN3WTF6StringEEv(%"class.blink::WebString"* %1) #11
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  %12 = tail call noalias i8* @malloc(i64 32) #11
  %13 = bitcast i8* %12 to %"class.blink::SourceLocation"*
  call void @_ZN5blink14SourceLocationC1ERKN3WTF6StringEjjNSt3__110unique_ptrIN12v8_inspector12V8StackTraceENS5_14default_deleteIS8_EEEEi(%"class.blink::SourceLocation"* %13, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0, i32 0, %"class.v8_inspector::V8StackTrace"* null, i32 0) #11
  %14 = bitcast %"class.blink::WebSocketChannel"* %6 to void (%"class.blink::WebSocketChannel"*, %"class.WTF::String"*, i32, %"class.blink::SourceLocation"*)***
  %15 = load void (%"class.blink::WebSocketChannel"*, %"class.WTF::String"*, i32, %"class.blink::SourceLocation"*)**, void (%"class.blink::WebSocketChannel"*, %"class.WTF::String"*, i32, %"class.blink::SourceLocation"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::WebSocketChannel"*, %"class.WTF::String"*, i32, %"class.blink::SourceLocation"*)*, void (%"class.blink::WebSocketChannel"*, %"class.WTF::String"*, i32, %"class.blink::SourceLocation"*)** %15, i64 7
  %17 = load void (%"class.blink::WebSocketChannel"*, %"class.WTF::String"*, i32, %"class.blink::SourceLocation"*)*, void (%"class.blink::WebSocketChannel"*, %"class.WTF::String"*, i32, %"class.blink::SourceLocation"*)** %16, align 8
  call void %17(%"class.blink::WebSocketChannel"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %3, i32 3, %"class.blink::SourceLocation"* %13) #11
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #11
  br label %33

33:                                               ; preds = %2, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #11
  br label %49

49:                                               ; preds = %33, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebPepperSocketImpl10DisconnectEv(%"class.blink::WebPepperSocketImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %2, align 8
  %4 = bitcast %"class.blink::WebSocketChannel"* %3 to void (%"class.blink::WebSocketChannel"*)***
  %5 = load void (%"class.blink::WebSocketChannel"*)**, void (%"class.blink::WebSocketChannel"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::WebSocketChannel"*)*, void (%"class.blink::WebSocketChannel"*)** %5, i64 8
  %7 = load void (%"class.blink::WebSocketChannel"*)*, void (%"class.blink::WebSocketChannel"*)** %6, align 8
  tail call void %7(%"class.blink::WebSocketChannel"* %3) #11
  %8 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 2
  store %"class.blink::WebPepperSocketClient"* null, %"class.blink::WebPepperSocketClient"** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebPepperSocketImpl10DidConnectERKN3WTF6StringES4_(%"class.blink::WebPepperSocketImpl"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebString", align 8
  %5 = alloca %"class.blink::WebString", align 8
  %6 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 2
  %7 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %6, align 8
  %8 = bitcast %"class.blink::WebString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %1) #11
  %9 = bitcast %"class.blink::WebString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %2) #11
  %10 = bitcast %"class.blink::WebPepperSocketClient"* %7 to void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*, %"class.blink::WebString"*)***
  %11 = load void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*, %"class.blink::WebString"*)**, void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*, %"class.blink::WebString"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*, %"class.blink::WebString"*)*, void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*, %"class.blink::WebString"*)** %11, i64 2
  %13 = load void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*, %"class.blink::WebString"*)*, void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*, %"class.blink::WebString"*)** %12, align 8
  call void %13(%"class.blink::WebPepperSocketClient"* %7, %"class.blink::WebString"* nonnull dereferenceable(8) %4, %"class.blink::WebString"* nonnull dereferenceable(8) %5) #11
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  %14 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 4
  %15 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKN3WTF6StringE(%"class.blink::WebString"* %14, %"class.WTF::String"* dereferenceable(8) %1) #11
  %16 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %6, align 8
  %17 = bitcast %"class.blink::WebPepperSocketClient"* %16 to void (%"class.blink::WebPepperSocketClient"*)***
  %18 = load void (%"class.blink::WebPepperSocketClient"*)**, void (%"class.blink::WebPepperSocketClient"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*)*, void (%"class.blink::WebPepperSocketClient"*)** %18, i64 9
  %20 = load void (%"class.blink::WebPepperSocketClient"*)*, void (%"class.blink::WebPepperSocketClient"*)** %19, align 8
  call void %20(%"class.blink::WebPepperSocketClient"* %16) #11
  ret void
}

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebPepperSocketImpl21DidReceiveTextMessageERKN3WTF6StringE(%"class.blink::WebPepperSocketImpl"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebString", align 8
  %4 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 2
  %5 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %4, align 8
  %6 = bitcast %"class.blink::WebString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %3, %"class.WTF::String"* dereferenceable(8) %1) #11
  %7 = bitcast %"class.blink::WebPepperSocketClient"* %5 to void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*)***
  %8 = load void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*)**, void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*)*, void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*)** %8, i64 3
  %10 = load void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*)*, void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*)** %9, align 8
  call void %10(%"class.blink::WebPepperSocketClient"* %5, %"class.blink::WebString"* nonnull dereferenceable(8) %3) #11
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebPepperSocketImpl23DidReceiveBinaryMessageENSt3__110unique_ptrIN3WTF6VectorIcLj0ENS3_18PartitionAllocatorEEENS1_14default_deleteIS6_EEEE(%"class.blink::WebPepperSocketImpl"* nocapture readonly, %"class.WTF::Vector.702"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebArrayBuffer", align 8
  %4 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 2
  %5 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %4, align 8
  %6 = bitcast %"class.blink::WebArrayBuffer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::Vector.702", %"class.WTF::Vector.702"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.702", %"class.WTF::Vector.702"* %1, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = tail call %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer6CreateEPKvm(i8* %8, i64 %11)
  call void @_ZN5blink14WebArrayBufferC1EPNS_14DOMArrayBufferE(%"class.blink::WebArrayBuffer"* nonnull %3, %"class.blink::DOMArrayBuffer"* %12) #11
  %13 = bitcast %"class.blink::WebPepperSocketClient"* %5 to void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebArrayBuffer"*)***
  %14 = load void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebArrayBuffer"*)**, void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebArrayBuffer"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebArrayBuffer"*)*, void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebArrayBuffer"*)** %14, i64 4
  %16 = load void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebArrayBuffer"*)*, void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebArrayBuffer"*)** %15, align 8
  call void %16(%"class.blink::WebPepperSocketClient"* %5, %"class.blink::WebArrayBuffer"* nonnull dereferenceable(8) %3) #11
  call void @_ZN5blink14WebArrayBuffer5ResetEv(%"class.blink::WebArrayBuffer"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %17 = icmp eq %"class.WTF::Vector.702"* %1, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %2
  %19 = load i8*, i8** %7, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %26, label %21, !prof !4

21:                                               ; preds = %18
  %22 = load i32, i32* %9, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24, !prof !2

24:                                               ; preds = %21
  store i32 0, i32* %9, align 4
  br label %25

25:                                               ; preds = %24, %21
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %19) #11
  store i8* null, i8** %7, align 8
  br label %26

26:                                               ; preds = %25, %18
  %27 = bitcast %"class.WTF::Vector.702"* %1 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %27) #11
  br label %28

28:                                               ; preds = %2, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer6CreateEPKvm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::ArrayBufferContents", align 8
  %4 = alloca %"class.blink::ArrayBufferContents", align 8
  %5 = alloca %"class.blink::ArrayBufferContents", align 8
  %6 = alloca %"class.blink::ArrayBufferContents", align 8
  %7 = bitcast %"class.blink::ArrayBufferContents"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %5, i64 0, i32 0, i32 1
  %10 = bitcast %"class.blink::ArrayBufferContents"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  call void @_ZN5blink19ArrayBufferContentsC1EmmNS0_11SharingTypeENS0_20InitializationPolicyE(%"class.blink::ArrayBufferContents"* nonnull %5, i64 %1, i64 1, i32 0, i32 1) #11
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %8, align 8
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %11) #11
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %17, !prof !2

16:                                               ; preds = %2, %13
  notail call fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm(i64 %1) #12
  unreachable

17:                                               ; preds = %13
  %18 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %8, align 8
  %19 = icmp eq %"class.v8::BackingStore"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %17
  %21 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %18) #11
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i8* [ %21, %20 ], [ null, %17 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %0, i64 %1, i1 false)
  %24 = bitcast %"class.blink::ArrayBufferContents"* %5 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.blink::ArrayBufferContents"* %6 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %6, i64 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::__shared_weak_count"** %9 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::__shared_weak_count"** %27 to i64*
  store i64 %29, i64* %30, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #11
  %31 = bitcast %"class.blink::ArrayBufferContents"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #11
  %32 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #11
  %33 = bitcast i8* %32 to %"class.blink::DOMArrayBuffer"*
  %34 = bitcast %"class.blink::ArrayBufferContents"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 16, i1 false) #11
  %35 = bitcast %"class.blink::ArrayBufferContents"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 16, i1 false) #11
  %36 = bitcast i8* %32 to i32 (...)***
  %37 = getelementptr inbounds i8, i8* %32, i64 8
  %38 = bitcast i8* %37 to i64**
  store i64* null, i64** %38, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink18DOMArrayBufferBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %39 = getelementptr inbounds i8, i8* %32, i64 16
  %40 = bitcast i8* %39 to i64*
  store i64 %25, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %32, i64 24
  %42 = bitcast i8* %41 to i64*
  store i64 %29, i64* %42, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 16, i1 false) #11
  %43 = getelementptr inbounds i8, i8* %32, i64 32
  store i8 0, i8* %43, align 8
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %3) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink14DOMArrayBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #11
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %4) #11
  %44 = getelementptr inbounds i8, i8* %32, i64 -4
  %45 = bitcast i8* %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = or i16 %46, 1
  store atomic i16 %47, i16* %45 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %6) #11
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret %"class.blink::DOMArrayBuffer"* %33
}

declare void @_ZN5blink14WebArrayBufferC1EPNS_14DOMArrayBufferE(%"class.blink::WebArrayBuffer"*, %"class.blink::DOMArrayBuffer"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebPepperSocketImpl8DidErrorEv(%"class.blink::WebPepperSocketImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 2
  %3 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %2, align 8
  %4 = bitcast %"class.blink::WebPepperSocketClient"* %3 to void (%"class.blink::WebPepperSocketClient"*)***
  %5 = load void (%"class.blink::WebPepperSocketClient"*)**, void (%"class.blink::WebPepperSocketClient"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*)*, void (%"class.blink::WebPepperSocketClient"*)** %5, i64 5
  %7 = load void (%"class.blink::WebPepperSocketClient"*)*, void (%"class.blink::WebPepperSocketClient"*)** %6, align 8
  tail call void %7(%"class.blink::WebPepperSocketClient"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebPepperSocketImpl24DidConsumeBufferedAmountEm(%"class.blink::WebPepperSocketImpl"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 2
  %4 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %3, align 8
  %5 = bitcast %"class.blink::WebPepperSocketClient"* %4 to void (%"class.blink::WebPepperSocketClient"*, i64)***
  %6 = load void (%"class.blink::WebPepperSocketClient"*, i64)**, void (%"class.blink::WebPepperSocketClient"*, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*, i64)*, void (%"class.blink::WebPepperSocketClient"*, i64)** %6, i64 6
  %8 = load void (%"class.blink::WebPepperSocketClient"*, i64)*, void (%"class.blink::WebPepperSocketClient"*, i64)** %7, align 8
  tail call void %8(%"class.blink::WebPepperSocketClient"* %4, i64 %1) #11
  %9 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 6
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %10, %1
  store i64 %11, i64* %9, align 8
  %12 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %3, align 8
  %13 = bitcast %"class.blink::WebPepperSocketClient"* %12 to void (%"class.blink::WebPepperSocketClient"*, i64)***
  %14 = load void (%"class.blink::WebPepperSocketClient"*, i64)**, void (%"class.blink::WebPepperSocketClient"*, i64)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*, i64)*, void (%"class.blink::WebPepperSocketClient"*, i64)** %14, i64 10
  %16 = load void (%"class.blink::WebPepperSocketClient"*, i64)*, void (%"class.blink::WebPepperSocketClient"*, i64)** %15, align 8
  tail call void %16(%"class.blink::WebPepperSocketClient"* %12, i64 %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebPepperSocketImpl24DidStartClosingHandshakeEv(%"class.blink::WebPepperSocketImpl"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 2
  %3 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %2, align 8
  %4 = bitcast %"class.blink::WebPepperSocketClient"* %3 to void (%"class.blink::WebPepperSocketClient"*)***
  %5 = load void (%"class.blink::WebPepperSocketClient"*)**, void (%"class.blink::WebPepperSocketClient"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*)*, void (%"class.blink::WebPepperSocketClient"*)** %5, i64 7
  %7 = load void (%"class.blink::WebPepperSocketClient"*)*, void (%"class.blink::WebPepperSocketClient"*)** %6, align 8
  tail call void %7(%"class.blink::WebPepperSocketClient"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19WebPepperSocketImpl8DidCloseENS_22WebSocketChannelClient32ClosingHandshakeCompletionStatusEtRKN3WTF6StringE(%"class.blink::WebPepperSocketImpl"* nocapture, i32, i16 zeroext, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::WebString", align 8
  %6 = alloca %"class.blink::WebString", align 8
  %7 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 5
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 2
  %9 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %8, align 8
  %10 = bitcast %"class.blink::WebString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %3) #11
  %11 = bitcast %"class.blink::WebPepperSocketClient"* %9 to void (%"class.blink::WebPepperSocketClient"*, i32, i16, %"class.blink::WebString"*)***
  %12 = load void (%"class.blink::WebPepperSocketClient"*, i32, i16, %"class.blink::WebString"*)**, void (%"class.blink::WebPepperSocketClient"*, i32, i16, %"class.blink::WebString"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*, i32, i16, %"class.blink::WebString"*)*, void (%"class.blink::WebPepperSocketClient"*, i32, i16, %"class.blink::WebString"*)** %12, i64 8
  %14 = load void (%"class.blink::WebPepperSocketClient"*, i32, i16, %"class.blink::WebString"*)*, void (%"class.blink::WebPepperSocketClient"*, i32, i16, %"class.blink::WebString"*)** %13, align 8
  call void %14(%"class.blink::WebPepperSocketClient"* %9, i32 %1, i16 zeroext %2, %"class.blink::WebString"* nonnull dereferenceable(8) %5) #11
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  %15 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %8, align 8
  %16 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 6
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %0, i64 0, i32 7
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = bitcast %"class.blink::WebString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %6, %"class.WTF::String"* dereferenceable(8) %3) #11
  %22 = bitcast %"class.blink::WebPepperSocketClient"* %15 to void (%"class.blink::WebPepperSocketClient"*, i64, i32, i16, %"class.blink::WebString"*)***
  %23 = load void (%"class.blink::WebPepperSocketClient"*, i64, i32, i16, %"class.blink::WebString"*)**, void (%"class.blink::WebPepperSocketClient"*, i64, i32, i16, %"class.blink::WebString"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*, i64, i32, i16, %"class.blink::WebString"*)*, void (%"class.blink::WebPepperSocketClient"*, i64, i32, i16, %"class.blink::WebString"*)** %23, i64 11
  %25 = load void (%"class.blink::WebPepperSocketClient"*, i64, i32, i16, %"class.blink::WebString"*)*, void (%"class.blink::WebPepperSocketClient"*, i64, i32, i16, %"class.blink::WebString"*)** %24, align 8
  call void %25(%"class.blink::WebPepperSocketClient"* %15, i64 %20, i32 %1, i16 zeroext %2, %"class.blink::WebString"* nonnull dereferenceable(8) %6) #11
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

declare void @_ZN5blink19ArrayBufferContentsC1EmmNS0_11SharingTypeENS0_20InitializationPolicyE(%"class.blink::ArrayBufferContents"*, i64, i64, i32, i32) unnamed_addr #2

; Function Attrs: noinline noreturn nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm(i64) unnamed_addr #6 {
  tail call void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() #11
  tail call void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64 %0) #11
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !6
  unreachable
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"*) unnamed_addr #3

declare i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

declare void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() local_unnamed_addr #2

declare void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.180"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.180"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.180"*) local_unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18DOMArrayBufferBaseD2Ev(%"class.blink::DOMArrayBufferBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink18DOMArrayBufferBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %0, i64 0, i32 1
  tail call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18DOMArrayBufferBaseD0Ev(%"class.blink::DOMArrayBufferBase"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE(%"class.blink::DOMArrayBufferBase"*, %"class.blink::ScriptState"*) unnamed_addr #0 comdat align 2 {
  ret %"class.v8::Value"* null
}

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare void @_ZN5blink14WebArrayBuffer5ResetEv(%"class.blink::WebArrayBuffer"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_33WebPepperSocketChannelClientProxyEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_33WebPepperSocketChannelClientProxyEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_33WebPepperSocketChannelClientProxyEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.180"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_33WebPepperSocketChannelClientProxyEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.180"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink33WebPepperSocketChannelClientProxyEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_33WebPepperSocketChannelClientProxyEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_33WebPepperSocketChannelClientProxyEE8FinalizeEPv(i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_33WebPepperSocketChannelClientProxyEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink33WebPepperSocketChannelClientProxy5TraceEPNS_7VisitorE(%"class.blink::WebPepperSocketChannelClientProxy"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22WebSocketChannelClientD2Ev(%"class.blink::WebSocketChannelClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33WebPepperSocketChannelClientProxyD0Ev(%"class.blink::WebPepperSocketChannelClientProxy"*) unnamed_addr #7 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33WebPepperSocketChannelClientProxy10DidConnectERKN3WTF6StringES4_(%"class.blink::WebPepperSocketChannelClientProxy"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::WebString", align 8
  %5 = alloca %"class.blink::WebString", align 8
  %6 = getelementptr inbounds %"class.blink::WebPepperSocketChannelClientProxy", %"class.blink::WebPepperSocketChannelClientProxy"* %0, i64 0, i32 1
  %7 = load %"class.blink::WebPepperSocketImpl"*, %"class.blink::WebPepperSocketImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %7, i64 0, i32 2
  %9 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %8, align 8
  %10 = bitcast %"class.blink::WebString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %4, %"class.WTF::String"* dereferenceable(8) %1) #11
  %11 = bitcast %"class.blink::WebString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %2) #11
  %12 = bitcast %"class.blink::WebPepperSocketClient"* %9 to void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*, %"class.blink::WebString"*)***
  %13 = load void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*, %"class.blink::WebString"*)**, void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*, %"class.blink::WebString"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*, %"class.blink::WebString"*)*, void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*, %"class.blink::WebString"*)** %13, i64 2
  %15 = load void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*, %"class.blink::WebString"*)*, void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*, %"class.blink::WebString"*)** %14, align 8
  call void %15(%"class.blink::WebPepperSocketClient"* %9, %"class.blink::WebString"* nonnull dereferenceable(8) %4, %"class.blink::WebString"* nonnull dereferenceable(8) %5) #11
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  %16 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %7, i64 0, i32 4
  %17 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKN3WTF6StringE(%"class.blink::WebString"* %16, %"class.WTF::String"* dereferenceable(8) %1) #11
  %18 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %8, align 8
  %19 = bitcast %"class.blink::WebPepperSocketClient"* %18 to void (%"class.blink::WebPepperSocketClient"*)***
  %20 = load void (%"class.blink::WebPepperSocketClient"*)**, void (%"class.blink::WebPepperSocketClient"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*)*, void (%"class.blink::WebPepperSocketClient"*)** %20, i64 9
  %22 = load void (%"class.blink::WebPepperSocketClient"*)*, void (%"class.blink::WebPepperSocketClient"*)** %21, align 8
  call void %22(%"class.blink::WebPepperSocketClient"* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33WebPepperSocketChannelClientProxy21DidReceiveTextMessageERKN3WTF6StringE(%"class.blink::WebPepperSocketChannelClientProxy"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::WebString", align 8
  %4 = getelementptr inbounds %"class.blink::WebPepperSocketChannelClientProxy", %"class.blink::WebPepperSocketChannelClientProxy"* %0, i64 0, i32 1
  %5 = load %"class.blink::WebPepperSocketImpl"*, %"class.blink::WebPepperSocketImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %5, i64 0, i32 2
  %7 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %6, align 8
  %8 = bitcast %"class.blink::WebString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %3, %"class.WTF::String"* dereferenceable(8) %1) #11
  %9 = bitcast %"class.blink::WebPepperSocketClient"* %7 to void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*)***
  %10 = load void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*)**, void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*)*, void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*)** %10, i64 3
  %12 = load void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*)*, void (%"class.blink::WebPepperSocketClient"*, %"class.blink::WebString"*)** %11, align 8
  call void %12(%"class.blink::WebPepperSocketClient"* %7, %"class.blink::WebString"* nonnull dereferenceable(8) %3) #11
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33WebPepperSocketChannelClientProxy23DidReceiveBinaryMessageERKN3WTF6VectorIN4base4spanIKcLm18446744073709551615EEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::WebPepperSocketChannelClientProxy"*, %"class.WTF::Vector.740"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIcLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #11
  %4 = bitcast i8* %3 to %"class.WTF::Vector.702"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #11
  %5 = getelementptr inbounds %"class.WTF::Vector.740", %"class.WTF::Vector.740"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.base::span"*, %"class.base::span"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.740", %"class.WTF::Vector.740"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %15, %2
  %13 = getelementptr inbounds %"class.blink::WebPepperSocketChannelClientProxy", %"class.blink::WebPepperSocketChannelClientProxy"* %0, i64 0, i32 1
  %14 = load %"class.blink::WebPepperSocketImpl"*, %"class.blink::WebPepperSocketImpl"** %13, align 8
  tail call void @_ZN5blink19WebPepperSocketImpl23DidReceiveBinaryMessageENSt3__110unique_ptrIN3WTF6VectorIcLj0ENS3_18PartitionAllocatorEEENS1_14default_deleteIS6_EEEE(%"class.blink::WebPepperSocketImpl"* %14, %"class.WTF::Vector.702"* %4)
  ret void

15:                                               ; preds = %2, %15
  %16 = phi %"class.base::span"* [ %22, %15 ], [ %6, %2 ]
  %17 = getelementptr inbounds %"class.base::span", %"class.base::span"* %16, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.base::span", %"class.base::span"* %16, i64 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = trunc i64 %20 to i32
  tail call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.702"* %4, i8* %18, i32 %21)
  %22 = getelementptr inbounds %"class.base::span", %"class.base::span"* %16, i64 1
  %23 = icmp eq %"class.base::span"* %22, %10
  br i1 %23, label %12, label %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33WebPepperSocketChannelClientProxy8DidErrorEv(%"class.blink::WebPepperSocketChannelClientProxy"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebPepperSocketChannelClientProxy", %"class.blink::WebPepperSocketChannelClientProxy"* %0, i64 0, i32 1
  %3 = load %"class.blink::WebPepperSocketImpl"*, %"class.blink::WebPepperSocketImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %3, i64 0, i32 2
  %5 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %4, align 8
  %6 = bitcast %"class.blink::WebPepperSocketClient"* %5 to void (%"class.blink::WebPepperSocketClient"*)***
  %7 = load void (%"class.blink::WebPepperSocketClient"*)**, void (%"class.blink::WebPepperSocketClient"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*)*, void (%"class.blink::WebPepperSocketClient"*)** %7, i64 5
  %9 = load void (%"class.blink::WebPepperSocketClient"*)*, void (%"class.blink::WebPepperSocketClient"*)** %8, align 8
  tail call void %9(%"class.blink::WebPepperSocketClient"* %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33WebPepperSocketChannelClientProxy24DidConsumeBufferedAmountEm(%"class.blink::WebPepperSocketChannelClientProxy"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WebPepperSocketChannelClientProxy", %"class.blink::WebPepperSocketChannelClientProxy"* %0, i64 0, i32 1
  %4 = load %"class.blink::WebPepperSocketImpl"*, %"class.blink::WebPepperSocketImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %4, i64 0, i32 2
  %6 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %5, align 8
  %7 = bitcast %"class.blink::WebPepperSocketClient"* %6 to void (%"class.blink::WebPepperSocketClient"*, i64)***
  %8 = load void (%"class.blink::WebPepperSocketClient"*, i64)**, void (%"class.blink::WebPepperSocketClient"*, i64)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*, i64)*, void (%"class.blink::WebPepperSocketClient"*, i64)** %8, i64 6
  %10 = load void (%"class.blink::WebPepperSocketClient"*, i64)*, void (%"class.blink::WebPepperSocketClient"*, i64)** %9, align 8
  tail call void %10(%"class.blink::WebPepperSocketClient"* %6, i64 %1) #11
  %11 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %4, i64 0, i32 6
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %1
  store i64 %13, i64* %11, align 8
  %14 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %5, align 8
  %15 = bitcast %"class.blink::WebPepperSocketClient"* %14 to void (%"class.blink::WebPepperSocketClient"*, i64)***
  %16 = load void (%"class.blink::WebPepperSocketClient"*, i64)**, void (%"class.blink::WebPepperSocketClient"*, i64)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*, i64)*, void (%"class.blink::WebPepperSocketClient"*, i64)** %16, i64 10
  %18 = load void (%"class.blink::WebPepperSocketClient"*, i64)*, void (%"class.blink::WebPepperSocketClient"*, i64)** %17, align 8
  tail call void %18(%"class.blink::WebPepperSocketClient"* %14, i64 %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33WebPepperSocketChannelClientProxy24DidStartClosingHandshakeEv(%"class.blink::WebPepperSocketChannelClientProxy"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebPepperSocketChannelClientProxy", %"class.blink::WebPepperSocketChannelClientProxy"* %0, i64 0, i32 1
  %3 = load %"class.blink::WebPepperSocketImpl"*, %"class.blink::WebPepperSocketImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %3, i64 0, i32 2
  %5 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %4, align 8
  %6 = bitcast %"class.blink::WebPepperSocketClient"* %5 to void (%"class.blink::WebPepperSocketClient"*)***
  %7 = load void (%"class.blink::WebPepperSocketClient"*)**, void (%"class.blink::WebPepperSocketClient"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*)*, void (%"class.blink::WebPepperSocketClient"*)** %7, i64 7
  %9 = load void (%"class.blink::WebPepperSocketClient"*)*, void (%"class.blink::WebPepperSocketClient"*)** %8, align 8
  tail call void %9(%"class.blink::WebPepperSocketClient"* %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33WebPepperSocketChannelClientProxy8DidCloseENS_22WebSocketChannelClient32ClosingHandshakeCompletionStatusEtRKN3WTF6StringE(%"class.blink::WebPepperSocketChannelClientProxy"*, i32, i16 zeroext, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::WebString", align 8
  %6 = alloca %"class.blink::WebString", align 8
  %7 = getelementptr inbounds %"class.blink::WebPepperSocketChannelClientProxy", %"class.blink::WebPepperSocketChannelClientProxy"* %0, i64 0, i32 1
  %8 = load %"class.blink::WebPepperSocketImpl"*, %"class.blink::WebPepperSocketImpl"** %7, align 8
  store %"class.blink::WebPepperSocketImpl"* null, %"class.blink::WebPepperSocketImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %8, i64 0, i32 5
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %8, i64 0, i32 2
  %11 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %10, align 8
  %12 = bitcast %"class.blink::WebString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %3) #11
  %13 = bitcast %"class.blink::WebPepperSocketClient"* %11 to void (%"class.blink::WebPepperSocketClient"*, i32, i16, %"class.blink::WebString"*)***
  %14 = load void (%"class.blink::WebPepperSocketClient"*, i32, i16, %"class.blink::WebString"*)**, void (%"class.blink::WebPepperSocketClient"*, i32, i16, %"class.blink::WebString"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*, i32, i16, %"class.blink::WebString"*)*, void (%"class.blink::WebPepperSocketClient"*, i32, i16, %"class.blink::WebString"*)** %14, i64 8
  %16 = load void (%"class.blink::WebPepperSocketClient"*, i32, i16, %"class.blink::WebString"*)*, void (%"class.blink::WebPepperSocketClient"*, i32, i16, %"class.blink::WebString"*)** %15, align 8
  call void %16(%"class.blink::WebPepperSocketClient"* %11, i32 %1, i16 zeroext %2, %"class.blink::WebString"* nonnull dereferenceable(8) %5) #11
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  %17 = load %"class.blink::WebPepperSocketClient"*, %"class.blink::WebPepperSocketClient"** %10, align 8
  %18 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %8, i64 0, i32 6
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.blink::WebPepperSocketImpl", %"class.blink::WebPepperSocketImpl"* %8, i64 0, i32 7
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = bitcast %"class.blink::WebString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %6, %"class.WTF::String"* dereferenceable(8) %3) #11
  %24 = bitcast %"class.blink::WebPepperSocketClient"* %17 to void (%"class.blink::WebPepperSocketClient"*, i64, i32, i16, %"class.blink::WebString"*)***
  %25 = load void (%"class.blink::WebPepperSocketClient"*, i64, i32, i16, %"class.blink::WebString"*)**, void (%"class.blink::WebPepperSocketClient"*, i64, i32, i16, %"class.blink::WebString"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::WebPepperSocketClient"*, i64, i32, i16, %"class.blink::WebString"*)*, void (%"class.blink::WebPepperSocketClient"*, i64, i32, i16, %"class.blink::WebString"*)** %25, i64 11
  %27 = load void (%"class.blink::WebPepperSocketClient"*, i64, i32, i16, %"class.blink::WebString"*)*, void (%"class.blink::WebPepperSocketClient"*, i64, i32, i16, %"class.blink::WebString"*)** %26, align 8
  call void %27(%"class.blink::WebPepperSocketClient"* %17, i64 %22, i32 %1, i16 zeroext %2, %"class.blink::WebString"* nonnull dereferenceable(8) %6) #11
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.702"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.702", %"class.WTF::Vector.702"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.702", %"class.WTF::Vector.702"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %87

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.702", %"class.WTF::Vector.702"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ugt i8* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = icmp ugt i8* %19, %1
  br i1 %20, label %52, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %87, !prof !4

30:                                               ; preds = %21
  %31 = icmp eq i8* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %32) #11
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %33) #11
  %35 = ptrtoint i8* %34 to i64
  br i1 %31, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.WTF::Vector.702"* %0 to i64*
  store atomic i64 %35, i64* %37 monotonic, align 8
  %38 = trunc i64 %33 to i32
  store i32 %38, i32* %10, align 8
  br label %87

39:                                               ; preds = %30
  %40 = load i8*, i8** %14, align 8
  %41 = icmp ne i8* %34, null
  %42 = icmp ne i8* %40, null
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %48, !prof !4

44:                                               ; preds = %39
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* nonnull align 1 %40, i64 %46, i1 false) #11
  %47 = load i8*, i8** %14, align 8
  br label %48

48:                                               ; preds = %44, %39
  %49 = phi i8* [ %40, %39 ], [ %47, %44 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #11
  %50 = bitcast %"class.WTF::Vector.702"* %0 to i64*
  store atomic i64 %35, i64* %50 monotonic, align 8
  %51 = trunc i64 %33 to i32
  store i32 %51, i32* %10, align 8
  br label %87

52:                                               ; preds = %17
  %53 = ptrtoint i8* %1 to i64
  %54 = ptrtoint i8* %15 to i64
  %55 = sub i64 %53, %54
  %56 = lshr i32 %11, 2
  %57 = add nuw i32 %11, 1
  %58 = add i32 %57, %56
  %59 = icmp ugt i32 %58, 4
  %60 = select i1 %59, i32 %58, i32 4
  %61 = icmp ugt i32 %60, %9
  %62 = select i1 %61, i32 %60, i32 %9
  %63 = icmp ult i32 %11, %62
  br i1 %63, label %64, label %84, !prof !4

64:                                               ; preds = %52
  %65 = icmp eq i8* %15, null
  %66 = zext i32 %62 to i64
  %67 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %66) #11
  %68 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %67) #11
  %69 = ptrtoint i8* %68 to i64
  br i1 %65, label %81, label %70

70:                                               ; preds = %64
  %71 = load i8*, i8** %14, align 8
  %72 = icmp ne i8* %68, null
  %73 = icmp ne i8* %71, null
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %79, !prof !4

75:                                               ; preds = %70
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* nonnull align 1 %71, i64 %77, i1 false) #11
  %78 = load i8*, i8** %14, align 8
  br label %79

79:                                               ; preds = %75, %70
  %80 = phi i8* [ %71, %70 ], [ %78, %75 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #11
  br label %81

81:                                               ; preds = %64, %79
  %82 = bitcast %"class.WTF::Vector.702"* %0 to i64*
  store atomic i64 %69, i64* %82 monotonic, align 8
  %83 = trunc i64 %67 to i32
  store i32 %83, i32* %10, align 8
  br label %84

84:                                               ; preds = %81, %52
  %85 = phi i8* [ %15, %52 ], [ %68, %81 ]
  %86 = getelementptr inbounds i8, i8* %85, i64 %55
  br label %87

87:                                               ; preds = %84, %21, %36, %48, %3
  %88 = phi i8* [ %1, %3 ], [ %86, %84 ], [ %1, %21 ], [ %1, %36 ], [ %1, %48 ]
  %89 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #11
  %90 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %90, align 8
  %91 = load i32, i32* %7, align 4
  %92 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = icmp ult i32 %9, %91
  br i1 %93, label %95, label %94

94:                                               ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* null, i8** %90, align 8
  br label %104

95:                                               ; preds = %87
  %96 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  %97 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %91) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* %96, i8* %97) #11
  %98 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* %99, i8** %90, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #11
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #11
  br label %104

104:                                              ; preds = %94, %95, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #11
  %105 = getelementptr inbounds %"class.WTF::Vector.702", %"class.WTF::Vector.702"* %0, i64 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = load i32, i32* %7, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  %110 = icmp ne i8* %109, null
  %111 = icmp ne i8* %88, null
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %115, !prof !4

113:                                              ; preds = %104
  %114 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* nonnull align 1 %88, i64 %114, i1 false) #11
  br label %115

115:                                              ; preds = %104, %113
  store i32 %9, i32* %7, align 4
  ret void
}

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #11
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_33WebPepperSocketChannelClientProxyELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::WebPepperSocketChannelClientProxy"**
  %5 = load %"class.blink::WebPepperSocketChannelClientProxy"*, %"class.blink::WebPepperSocketChannelClientProxy"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #11
  %7 = icmp eq %"class.blink::WebPepperSocketChannelClientProxy"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::WebPepperSocketChannelClientProxy"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_33WebPepperSocketChannelClientProxyEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #11
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_16WebSocketChannelELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase"*, %"class.blink::WebSocketChannel"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 0
  store %"class.blink::WebSocketChannel"* %1, %"class.blink::WebSocketChannel"** %3, align 8
  %4 = ptrtoint %"class.blink::WebSocketChannel"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %35
    i64 -1, label %35
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %58

9:                                                ; preds = %5
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #11
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #11
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !2

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #11
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %0, %"class.blink::PersistentBase"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16WebSocketChannelELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %6, align 8
  br label %58

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #11
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #11
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %46, %35, %28, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16WebSocketChannelELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::WebSocketChannel"**
  %5 = load %"class.blink::WebSocketChannel"*, %"class.blink::WebSocketChannel"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #11
  %7 = icmp eq %"class.blink::WebSocketChannel"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::WebSocketChannel"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16WebSocketChannelEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #11
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16WebSocketChannelEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::WebSocketChannel"*
  %4 = bitcast i8* %1 to void (%"class.blink::WebSocketChannel"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::WebSocketChannel"*, %"class.blink::Visitor"*)**, void (%"class.blink::WebSocketChannel"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::WebSocketChannel"*, %"class.blink::Visitor"*)*, void (%"class.blink::WebSocketChannel"*, %"class.blink::Visitor"*)** %5, i64 12
  %7 = load void (%"class.blink::WebSocketChannel"*, %"class.blink::Visitor"*)*, void (%"class.blink::WebSocketChannel"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::WebSocketChannel"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZN5blink14SourceLocationC1ERKN3WTF6StringEjjNSt3__110unique_ptrIN12v8_inspector12V8StackTraceENS5_14default_deleteIS8_EEEEi(%"class.blink::SourceLocation"*, %"class.WTF::String"* dereferenceable(8), i32, i32, %"class.v8_inspector::V8StackTrace"*, i32) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noinline noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{i32 -2134478659}
!6 = !{i32 -2134478638}
