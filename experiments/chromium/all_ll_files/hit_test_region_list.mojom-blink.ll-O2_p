; ModuleID = 'gen/services/viz/public/mojom/hit_test/hit_test_region_list.mojom-blink.cc'
source_filename = "gen/services/viz/public/mojom/hit_test/hit_test_region_list.mojom-blink.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::mojom::blink::HitTestRegion" = type { i32, i32, %"class.viz::FrameSinkId", %"class.gfx::Rect", %"class.gfx::Transform" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.viz::mojom::blink::HitTestRegionList" = type { i32, i32, %"class.gfx::Rect", %"class.gfx::Transform", %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.viz::HitTestRegion"*, i32, i32 }
%"struct.viz::HitTestRegion" = type { i32, i32, %"class.viz::FrameSinkId", %"class.gfx::Rect", %"class.gfx::Transform" }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.12", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.6"*, %"class.mojo::ScopedHandleBase.6"*, %"class.std::__1::__compressed_pair.7" }
%"class.mojo::ScopedHandleBase.6" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.mojo::ScopedHandleBase.6"* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.14" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.23, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.25", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.22", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.23 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.24" }>
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i32 }
%"class.viz::mojom::internal::HitTestRegion_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.30", %"struct.mojo::internal::Pointer.31" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.30" = type { i64 }
%"struct.mojo::internal::Pointer.31" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.viz::mojom::blink::HitTestRegion"* }
%"class.viz::mojom::internal::HitTestRegionList_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, %"struct.mojo::internal::Pointer.30", %"struct.mojo::internal::Pointer.31", %"struct.mojo::internal::Pointer.35" }
%"struct.mojo::internal::Pointer.35" = type { i64 }
%"class.mojo::StructPtr.36" = type { %"class.std::__1::unique_ptr.37" }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.viz::mojom::blink::HitTestRegionList"* }
%"class.mojo::internal::Array_Data.52" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN3viz5mojom21HitTestRegionDataViewEEEN3WTF6VectorINS3_13HitTestRegionELj0ENS7_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISB_EESB_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal18HitTestRegion_DataEEEEEPSB_PNS_7MessageE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN3viz13HitTestRegionEEEmm = comdat any

$_ZN3WTF6VectorIN3viz13HitTestRegionELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"<value>\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"async_hit_test_reasons\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"frame_sink_id\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"rect\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"transform\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"bounds\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"regions\00", align 1
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4
@.str.9 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.10 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3viz13HitTestRegionEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = viz::HitTestRegion]\00", align 1
@.str.11 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN3viz5mojom5blink13HitTestRegionC1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::blink::HitTestRegion"*), void (%"class.viz::mojom::blink::HitTestRegion"*)* @_ZN3viz5mojom5blink13HitTestRegionC2Ev
@_ZN3viz5mojom5blink13HitTestRegionC1EjjRKNS_11FrameSinkIdERKN3gfx4RectERKNS6_9TransformE = hidden unnamed_addr alias void (%"class.viz::mojom::blink::HitTestRegion"*, i32, i32, %"class.viz::FrameSinkId"*, %"class.gfx::Rect"*, %"class.gfx::Transform"*), void (%"class.viz::mojom::blink::HitTestRegion"*, i32, i32, %"class.viz::FrameSinkId"*, %"class.gfx::Rect"*, %"class.gfx::Transform"*)* @_ZN3viz5mojom5blink13HitTestRegionC2EjjRKNS_11FrameSinkIdERKN3gfx4RectERKNS6_9TransformE
@_ZN3viz5mojom5blink13HitTestRegionD1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::blink::HitTestRegion"*), void (%"class.viz::mojom::blink::HitTestRegion"*)* @_ZN3viz5mojom5blink13HitTestRegionD2Ev
@_ZN3viz5mojom5blink17HitTestRegionListC1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::blink::HitTestRegionList"*), void (%"class.viz::mojom::blink::HitTestRegionList"*)* @_ZN3viz5mojom5blink17HitTestRegionListC2Ev
@_ZN3viz5mojom5blink17HitTestRegionListC1EjjRKN3gfx4RectERKNS3_9TransformEN3WTF6VectorINS_13HitTestRegionELj0ENSA_18PartitionAllocatorEEE = hidden unnamed_addr alias void (%"class.viz::mojom::blink::HitTestRegionList"*, i32, i32, %"class.gfx::Rect"*, %"class.gfx::Transform"*, %"class.WTF::Vector"*), void (%"class.viz::mojom::blink::HitTestRegionList"*, i32, i32, %"class.gfx::Rect"*, %"class.gfx::Transform"*, %"class.WTF::Vector"*)* @_ZN3viz5mojom5blink17HitTestRegionListC2EjjRKN3gfx4RectERKNS3_9TransformEN3WTF6VectorINS_13HitTestRegionELj0ENSA_18PartitionAllocatorEEE
@_ZN3viz5mojom5blink17HitTestRegionListD1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::blink::HitTestRegionList"*), void (%"class.viz::mojom::blink::HitTestRegionList"*)* @_ZN3viz5mojom5blink17HitTestRegionListD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom5blink13HitTestRegionC2Ev(%"class.viz::mojom::blink::HitTestRegion"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegion", %"class.viz::mojom::blink::HitTestRegion"* %0, i64 0, i32 4
  %3 = bitcast %"class.gfx::Transform"* %2 to i8*
  %4 = bitcast %"class.viz::mojom::blink::HitTestRegion"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 32, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #7
  %5 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegion", %"class.viz::mojom::blink::HitTestRegion"* %0, i64 0, i32 4, i32 0, i32 1
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom5blink13HitTestRegionC2EjjRKNS_11FrameSinkIdERKN3gfx4RectERKNS6_9TransformE(%"class.viz::mojom::blink::HitTestRegion"* nocapture, i32, i32, %"class.viz::FrameSinkId"* nocapture readonly dereferenceable(8), %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Transform"* nocapture readonly dereferenceable(68)) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegion", %"class.viz::mojom::blink::HitTestRegion"* %0, i64 0, i32 0
  store i32 %1, i32* %7, align 4
  %8 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegion", %"class.viz::mojom::blink::HitTestRegion"* %0, i64 0, i32 1
  store i32 %2, i32* %8, align 4
  %9 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegion", %"class.viz::mojom::blink::HitTestRegion"* %0, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %9, align 4
  %12 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegion", %"class.viz::mojom::blink::HitTestRegion"* %0, i64 0, i32 2, i32 1
  %13 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %3, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %12, align 4
  %15 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegion", %"class.viz::mojom::blink::HitTestRegion"* %0, i64 0, i32 3
  %16 = bitcast %"class.gfx::Rect"* %15 to i8*
  %17 = bitcast %"class.gfx::Rect"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %17, i64 16, i1 false)
  %18 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegion", %"class.viz::mojom::blink::HitTestRegion"* %0, i64 0, i32 4
  %19 = bitcast %"class.gfx::Transform"* %18 to i8*
  %20 = bitcast %"class.gfx::Transform"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 68, i1 false) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz5mojom5blink13HitTestRegionD2Ev(%"class.viz::mojom::blink::HitTestRegion"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz5mojom5blink13HitTestRegion14WriteIntoTraceEN8perfetto11TracedValueE(%"class.viz::mojom::blink::HitTestRegion"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedDictionary", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.perfetto::TracedValue", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = bitcast %"class.perfetto::TracedDictionary"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #7
  %15 = bitcast %"class.perfetto::TracedDictionary"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %5, %"class.perfetto::TracedValue"* %1) #7
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %6, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #7
  %16 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegion", %"class.viz::mojom::blink::HitTestRegion"* %0, i64 0, i32 0
  %17 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  %18 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* nonnull align 8 %17, i64 16, i1 false) #7
  %19 = load i32, i32* %16, align 4
  %20 = zext i32 %19 to i64
  call void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"* nonnull %4, i64 %20) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #7
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %7, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0)) #7
  %21 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegion", %"class.viz::mojom::blink::HitTestRegion"* %0, i64 0, i32 1
  %22 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  %23 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* nonnull align 8 %22, i64 16, i1 false) #7
  %24 = load i32, i32* %21, align 4
  %25 = zext i32 %24 to i64
  call void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"* nonnull %3, i64 %25) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #7
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %8, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0)) #7
  %26 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #7
  %27 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 7, i8* %28, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #7
  %29 = getelementptr inbounds i8, i8* %26, i64 7
  store i8 0, i8* %29, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #7
  %30 = load i8, i8* %28, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #8
  br label %35

35:                                               ; preds = %2, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #7
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %10, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)) #7
  %36 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #7
  %37 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 7, i8* %38, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #7
  %39 = getelementptr inbounds i8, i8* %36, i64 7
  store i8 0, i8* %39, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #7
  %40 = load i8, i8* %38, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #8
  br label %45

45:                                               ; preds = %35, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #7
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %12, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)) #7
  %46 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #7
  %47 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  store i8 7, i8* %48, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #7
  %49 = getelementptr inbounds i8, i8* %46, i64 7
  store i8 0, i8* %49, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #7
  %50 = load i8, i8* %48, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #8
  br label %55

55:                                               ; preds = %45, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #3

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz5mojom5blink13HitTestRegion8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN3viz5mojom8internal18HitTestRegion_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #7
  ret i1 %3
}

declare zeroext i1 @_ZN3viz5mojom8internal18HitTestRegion_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom5blink17HitTestRegionListC2Ev(%"class.viz::mojom::blink::HitTestRegionList"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegionList", %"class.viz::mojom::blink::HitTestRegionList"* %0, i64 0, i32 3
  %3 = bitcast %"class.gfx::Transform"* %2 to i8*
  %4 = bitcast %"class.viz::mojom::blink::HitTestRegionList"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #7
  %5 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegionList", %"class.viz::mojom::blink::HitTestRegionList"* %0, i64 0, i32 3, i32 0, i32 1
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegionList", %"class.viz::mojom::blink::HitTestRegionList"* %0, i64 0, i32 4
  %7 = bitcast %"class.WTF::Vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom5blink17HitTestRegionListC2EjjRKN3gfx4RectERKNS3_9TransformEN3WTF6VectorINS_13HitTestRegionELj0ENSA_18PartitionAllocatorEEE(%"class.viz::mojom::blink::HitTestRegionList"* nocapture, i32, i32, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Transform"* nocapture readonly dereferenceable(68), %"class.WTF::Vector"* nocapture) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegionList", %"class.viz::mojom::blink::HitTestRegionList"* %0, i64 0, i32 0
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegionList", %"class.viz::mojom::blink::HitTestRegionList"* %0, i64 0, i32 1
  store i32 %2, i32* %8, align 4
  %9 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegionList", %"class.viz::mojom::blink::HitTestRegionList"* %0, i64 0, i32 2
  %10 = bitcast %"class.gfx::Rect"* %9 to i8*
  %11 = bitcast %"class.gfx::Rect"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 4 %11, i64 16, i1 false)
  %12 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegionList", %"class.viz::mojom::blink::HitTestRegionList"* %0, i64 0, i32 3
  %13 = bitcast %"class.gfx::Transform"* %12 to i8*
  %14 = bitcast %"class.gfx::Transform"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 68, i1 false) #7
  %15 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegionList", %"class.viz::mojom::blink::HitTestRegionList"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegionList", %"class.viz::mojom::blink::HitTestRegionList"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegionList", %"class.viz::mojom::blink::HitTestRegionList"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %18 = bitcast %"class.WTF::Vector"* %5 to i64*
  %19 = bitcast %"class.WTF::Vector"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #7
  %20 = load i64, i64* %18, align 8
  %21 = bitcast %"class.WTF::Vector"* %15 to i64*
  store atomic i64 0, i64* %18 monotonic, align 8
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %23 = load i32, i32* %16, align 4
  %24 = load i32, i32* %22, align 4
  store i32 %24, i32* %16, align 4
  store i32 %23, i32* %22, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %17, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %17, align 4
  store i32 %26, i32* %25, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom5blink17HitTestRegionListD2Ev(%"class.viz::mojom::blink::HitTestRegionList"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegionList", %"class.viz::mojom::blink::HitTestRegionList"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %2, align 8
  %4 = icmp eq %"struct.viz::HitTestRegion"* %3, null
  %5 = bitcast %"struct.viz::HitTestRegion"* %3 to i8*
  br i1 %4, label %12, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegionList", %"class.viz::mojom::blink::HitTestRegionList"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #7
  store %"struct.viz::HitTestRegion"* null, %"struct.viz::HitTestRegion"** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3viz5mojom5blink17HitTestRegionList14WriteIntoTraceEN8perfetto11TracedValueE(%"class.viz::mojom::blink::HitTestRegionList"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedDictionary", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.perfetto::TracedValue", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = bitcast %"class.perfetto::TracedDictionary"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #7
  %15 = bitcast %"class.perfetto::TracedDictionary"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %5, %"class.perfetto::TracedValue"* %1) #7
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %6, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #7
  %16 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegionList", %"class.viz::mojom::blink::HitTestRegionList"* %0, i64 0, i32 0
  %17 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  %18 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* nonnull align 8 %17, i64 16, i1 false) #7
  %19 = load i32, i32* %16, align 4
  %20 = zext i32 %19 to i64
  call void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"* nonnull %4, i64 %20) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #7
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %7, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0)) #7
  %21 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegionList", %"class.viz::mojom::blink::HitTestRegionList"* %0, i64 0, i32 1
  %22 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  %23 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* nonnull align 8 %22, i64 16, i1 false) #7
  %24 = load i32, i32* %21, align 4
  %25 = zext i32 %24 to i64
  call void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"* nonnull %3, i64 %25) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #7
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %8, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)) #7
  %26 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #7
  %27 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 7, i8* %28, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #7
  %29 = getelementptr inbounds i8, i8* %26, i64 7
  store i8 0, i8* %29, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #7
  %30 = load i8, i8* %28, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #8
  br label %35

35:                                               ; preds = %2, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #7
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %10, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)) #7
  %36 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #7
  %37 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 7, i8* %38, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #7
  %39 = getelementptr inbounds i8, i8* %36, i64 7
  store i8 0, i8* %39, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #7
  %40 = load i8, i8* %38, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #8
  br label %45

45:                                               ; preds = %35, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #7
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %12, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0)) #7
  %46 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #7
  %47 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  store i8 7, i8* %48, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #7
  %49 = getelementptr inbounds i8, i8* %46, i64 7
  store i8 0, i8* %49, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #7
  %50 = load i8, i8* %48, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #8
  br label %55

55:                                               ; preds = %45, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz5mojom5blink17HitTestRegionList8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN3viz5mojom8internal22HitTestRegionList_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #7
  ret i1 %3
}

declare zeroext i1 @_ZN3viz5mojom8internal22HitTestRegionList_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom21HitTestRegionDataViewENS_9StructPtrINS2_5blink13HitTestRegionEEEE4ReadES3_PS7_(%"class.viz::mojom::internal::HitTestRegion_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 100) #8, !noalias !4
  %5 = getelementptr inbounds i8, i8* %4, i64 32
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 0, i64 24, i1 false) #7, !noalias !4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #7, !noalias !4
  %7 = getelementptr inbounds i8, i8* %4, i64 96
  store i8 0, i8* %7, align 4, !noalias !4
  %8 = ptrtoint i8* %4 to i64
  %9 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegion_Data", %"class.viz::mojom::internal::HitTestRegion_Data"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 1
  %11 = bitcast i8* %4 to i32*
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegion_Data", %"class.viz::mojom::internal::HitTestRegion_Data"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 1
  %14 = getelementptr inbounds i8, i8* %4, i64 4
  %15 = bitcast i8* %14 to i32*
  store i32 %13, i32* %15, align 4
  %16 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegion_Data", %"class.viz::mojom::internal::HitTestRegion_Data"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %16, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  %20 = bitcast %"struct.mojo::internal::Pointer"* %16 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 %18
  br i1 %19, label %37, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds i8, i8* %4, i64 8
  %24 = getelementptr inbounds i8, i8* %21, i64 8
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 1
  %27 = getelementptr inbounds i8, i8* %21, i64 12
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %28, align 1
  %30 = bitcast i8* %23 to i64*
  %31 = zext i32 %29 to i64
  %32 = shl nuw i64 %31, 32
  %33 = zext i32 %26 to i64
  %34 = or i64 %32, %33
  store i64 %34, i64* %30, align 4
  %35 = or i32 %29, %26
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %103, label %37

37:                                               ; preds = %22, %3
  %38 = getelementptr inbounds i8, i8* %4, i64 16
  %39 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegion_Data", %"class.viz::mojom::internal::HitTestRegion_Data"* %0, i64 0, i32 4
  %40 = getelementptr inbounds %"struct.mojo::internal::Pointer.30", %"struct.mojo::internal::Pointer.30"* %39, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  %43 = bitcast %"struct.mojo::internal::Pointer.30"* %39 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %41
  br i1 %42, label %85, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds i8, i8* %44, i64 16
  %47 = bitcast i8* %46 to i32*
  %48 = load i32, i32* %47, align 1
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %103, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds i8, i8* %44, i64 20
  %52 = bitcast i8* %51 to i32*
  %53 = load i32, i32* %52, align 1
  %54 = icmp slt i32 %53, 0
  br i1 %54, label %103, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds i8, i8* %44, i64 8
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %57, align 1
  %59 = getelementptr inbounds i8, i8* %44, i64 12
  %60 = bitcast i8* %59 to i32*
  %61 = load i32, i32* %60, align 1
  %62 = bitcast i8* %38 to i32*
  store i32 %58, i32* %62, align 4
  %63 = getelementptr inbounds i8, i8* %4, i64 20
  %64 = bitcast i8* %63 to i32*
  store i32 %61, i32* %64, align 4
  %65 = icmp sgt i32 %58, 0
  %66 = icmp sgt i32 %48, 0
  %67 = and i1 %66, %65
  %68 = sub nuw nsw i32 2147483647, %58
  %69 = icmp ult i32 %68, %48
  %70 = and i1 %69, %67
  %71 = select i1 %70, i32 %68, i32 %48
  %72 = icmp sgt i32 %71, 0
  %73 = select i1 %72, i32 %71, i32 0
  %74 = getelementptr inbounds i8, i8* %4, i64 24
  %75 = bitcast i8* %74 to i32*
  store i32 %73, i32* %75, align 4
  %76 = icmp sgt i32 %61, 0
  %77 = sub nuw nsw i32 2147483647, %61
  %78 = icmp ult i32 %77, %53
  %79 = and i1 %76, %78
  %80 = select i1 %79, i32 %77, i32 %53
  %81 = icmp sgt i32 %80, 0
  %82 = select i1 %81, i32 %80, i32 0
  %83 = getelementptr inbounds i8, i8* %4, i64 28
  %84 = bitcast i8* %83 to i32*
  store i32 %82, i32* %84, align 4
  br label %85

85:                                               ; preds = %55, %37
  %86 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegion_Data", %"class.viz::mojom::internal::HitTestRegion_Data"* %0, i64 0, i32 5
  %87 = getelementptr inbounds %"struct.mojo::internal::Pointer.31", %"struct.mojo::internal::Pointer.31"* %86, i64 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %103, label %90

90:                                               ; preds = %85
  %91 = bitcast %"struct.mojo::internal::Pointer.31"* %86 to i8*
  %92 = getelementptr inbounds i8, i8* %91, i64 %88
  %93 = getelementptr inbounds i8, i8* %92, i64 8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %95, 0
  %97 = bitcast i8* %5 to %class.SkMatrix44*
  br i1 %96, label %98, label %99

98:                                               ; preds = %90
  tail call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* %97) #7
  br label %103

99:                                               ; preds = %90
  %100 = getelementptr inbounds i8, i8* %93, i64 %95
  %101 = getelementptr inbounds i8, i8* %100, i64 8
  %102 = bitcast i8* %101 to float*
  tail call void @_ZN10SkMatrix4412setColMajorfEPKf(%class.SkMatrix44* %97, float* %102) #7
  br label %103

103:                                              ; preds = %22, %50, %45, %99, %98, %85
  %104 = phi i8 [ 1, %85 ], [ 1, %98 ], [ 1, %99 ], [ 0, %45 ], [ 0, %50 ], [ 0, %22 ]
  %105 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"class.viz::mojom::blink::HitTestRegion"*, %"class.viz::mojom::blink::HitTestRegion"** %105, align 8
  store %"class.viz::mojom::blink::HitTestRegion"* null, %"class.viz::mojom::blink::HitTestRegion"** %105, align 8
  %107 = icmp eq %"class.viz::mojom::blink::HitTestRegion"* %106, null
  br i1 %107, label %108, label %111

108:                                              ; preds = %103
  %109 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %8, i64* %109, align 8
  %110 = icmp ne i8 %104, 0
  br label %119

111:                                              ; preds = %103
  %112 = bitcast %"class.viz::mojom::blink::HitTestRegion"* %106 to i8*
  tail call void @_ZdlPv(i8* %112) #8
  %113 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %114 = load %"class.viz::mojom::blink::HitTestRegion"*, %"class.viz::mojom::blink::HitTestRegion"** %105, align 8
  store i64 %8, i64* %113, align 8
  %115 = icmp ne i8 %104, 0
  %116 = icmp eq %"class.viz::mojom::blink::HitTestRegion"* %114, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %111
  %118 = bitcast %"class.viz::mojom::blink::HitTestRegion"* %114 to i8*
  tail call void @_ZdlPv(i8* %118) #8
  br label %119

119:                                              ; preds = %108, %111, %117
  %120 = phi i1 [ %110, %108 ], [ %115, %111 ], [ %115, %117 ]
  ret i1 %120
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom25HitTestRegionListDataViewENS_9StructPtrINS2_5blink17HitTestRegionListEEEE4ReadES3_PS7_(%"class.viz::mojom::internal::HitTestRegionList_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr.36"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 112) #8, !noalias !7
  %5 = getelementptr inbounds i8, i8* %4, i64 24
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #7, !noalias !7
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #7, !noalias !7
  %7 = getelementptr inbounds i8, i8* %4, i64 88
  store i8 0, i8* %7, align 4, !noalias !7
  %8 = getelementptr inbounds i8, i8* %4, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #7, !noalias !7
  %9 = ptrtoint i8* %4 to i64
  %10 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegionList_Data", %"class.viz::mojom::internal::HitTestRegionList_Data"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 1
  %12 = bitcast i8* %4 to i32*
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegionList_Data", %"class.viz::mojom::internal::HitTestRegionList_Data"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 1
  %15 = getelementptr inbounds i8, i8* %4, i64 4
  %16 = bitcast i8* %15 to i32*
  store i32 %14, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %4, i64 8
  %18 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegionList_Data", %"class.viz::mojom::internal::HitTestRegionList_Data"* %0, i64 0, i32 3
  %19 = getelementptr inbounds %"struct.mojo::internal::Pointer.30", %"struct.mojo::internal::Pointer.30"* %18, i64 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  %22 = bitcast %"struct.mojo::internal::Pointer.30"* %18 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 %20
  br i1 %21, label %64, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds i8, i8* %23, i64 16
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 1
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %109, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds i8, i8* %23, i64 20
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %109, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds i8, i8* %23, i64 8
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = getelementptr inbounds i8, i8* %23, i64 12
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 1
  %41 = bitcast i8* %17 to i32*
  store i32 %37, i32* %41, align 4
  %42 = getelementptr inbounds i8, i8* %4, i64 12
  %43 = bitcast i8* %42 to i32*
  store i32 %40, i32* %43, align 4
  %44 = icmp sgt i32 %37, 0
  %45 = icmp sgt i32 %27, 0
  %46 = and i1 %45, %44
  %47 = sub nuw nsw i32 2147483647, %37
  %48 = icmp ult i32 %47, %27
  %49 = and i1 %48, %46
  %50 = select i1 %49, i32 %47, i32 %27
  %51 = icmp sgt i32 %50, 0
  %52 = select i1 %51, i32 %50, i32 0
  %53 = getelementptr inbounds i8, i8* %4, i64 16
  %54 = bitcast i8* %53 to i32*
  store i32 %52, i32* %54, align 4
  %55 = icmp sgt i32 %40, 0
  %56 = sub nuw nsw i32 2147483647, %40
  %57 = icmp ult i32 %56, %32
  %58 = and i1 %55, %57
  %59 = select i1 %58, i32 %56, i32 %32
  %60 = icmp sgt i32 %59, 0
  %61 = select i1 %60, i32 %59, i32 0
  %62 = getelementptr inbounds i8, i8* %4, i64 20
  %63 = bitcast i8* %62 to i32*
  store i32 %61, i32* %63, align 4
  br label %64

64:                                               ; preds = %3, %34
  %65 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegionList_Data", %"class.viz::mojom::internal::HitTestRegionList_Data"* %0, i64 0, i32 4
  %66 = getelementptr inbounds %"struct.mojo::internal::Pointer.31", %"struct.mojo::internal::Pointer.31"* %65, i64 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %82, label %69

69:                                               ; preds = %64
  %70 = bitcast %"struct.mojo::internal::Pointer.31"* %65 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 %67
  %72 = getelementptr inbounds i8, i8* %71, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, 0
  %76 = bitcast i8* %5 to %class.SkMatrix44*
  br i1 %75, label %77, label %78

77:                                               ; preds = %69
  tail call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* %76) #7
  br label %82

78:                                               ; preds = %69
  %79 = getelementptr inbounds i8, i8* %72, i64 %74
  %80 = getelementptr inbounds i8, i8* %79, i64 8
  %81 = bitcast i8* %80 to float*
  tail call void @_ZN10SkMatrix4412setColMajorfEPKf(%class.SkMatrix44* %76, float* %81) #7
  br label %82

82:                                               ; preds = %64, %77, %78
  %83 = getelementptr inbounds %"class.viz::mojom::internal::HitTestRegionList_Data", %"class.viz::mojom::internal::HitTestRegionList_Data"* %0, i64 0, i32 5
  %84 = getelementptr inbounds %"struct.mojo::internal::Pointer.35", %"struct.mojo::internal::Pointer.35"* %83, i64 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %102

87:                                               ; preds = %82
  %88 = getelementptr inbounds i8, i8* %4, i64 104
  %89 = bitcast i8* %88 to i32*
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %108, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds i8, i8* %4, i64 108
  %94 = bitcast i8* %93 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %98, label %97

97:                                               ; preds = %92
  store i32 0, i32* %94, align 4
  br label %98

98:                                               ; preds = %97, %92
  %99 = bitcast i8* %8 to i8**
  %100 = load i8*, i8** %99, align 8
  %101 = bitcast i8* %8 to i64*
  store atomic i64 0, i64* %101 monotonic, align 8
  store i32 0, i32* %89, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %100) #7
  br label %108

102:                                              ; preds = %82
  %103 = bitcast i8* %8 to %"class.WTF::Vector"*
  %104 = bitcast %"struct.mojo::internal::Pointer.35"* %83 to i8*
  %105 = getelementptr inbounds i8, i8* %104, i64 %85
  %106 = bitcast i8* %105 to %"class.mojo::internal::Array_Data.52"*
  %107 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN3viz5mojom21HitTestRegionDataViewEEEN3WTF6VectorINS3_13HitTestRegionELj0ENS7_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISB_EESB_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal18HitTestRegion_DataEEEEEPSB_PNS_7MessageE(%"class.mojo::internal::Array_Data.52"* nonnull %106, %"class.WTF::Vector"* %103, %"class.mojo::Message"* %1) #7
  br i1 %107, label %108, label %109

108:                                              ; preds = %98, %87, %102
  br label %109

109:                                              ; preds = %29, %24, %108, %102
  %110 = phi i8 [ 1, %108 ], [ 0, %102 ], [ 0, %24 ], [ 0, %29 ]
  %111 = getelementptr inbounds %"class.mojo::StructPtr.36", %"class.mojo::StructPtr.36"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %112 = load %"class.viz::mojom::blink::HitTestRegionList"*, %"class.viz::mojom::blink::HitTestRegionList"** %111, align 8
  store %"class.viz::mojom::blink::HitTestRegionList"* null, %"class.viz::mojom::blink::HitTestRegionList"** %111, align 8
  %113 = icmp eq %"class.viz::mojom::blink::HitTestRegionList"* %112, null
  br i1 %113, label %114, label %117

114:                                              ; preds = %109
  %115 = bitcast %"class.mojo::StructPtr.36"* %2 to i64*
  store i64 %9, i64* %115, align 8
  %116 = icmp ne i8 %110, 0
  br label %147

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegionList", %"class.viz::mojom::blink::HitTestRegionList"* %112, i64 0, i32 4, i32 0, i32 0, i32 0
  %119 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %118, align 8
  %120 = icmp eq %"struct.viz::HitTestRegion"* %119, null
  %121 = bitcast %"struct.viz::HitTestRegion"* %119 to i8*
  br i1 %120, label %128, label %122, !prof !2

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegionList", %"class.viz::mojom::blink::HitTestRegionList"* %112, i64 0, i32 4, i32 0, i32 0, i32 2
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %127, label %126, !prof !3

126:                                              ; preds = %122
  store i32 0, i32* %123, align 4
  br label %127

127:                                              ; preds = %126, %122
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %121) #7
  br label %128

128:                                              ; preds = %117, %127
  %129 = bitcast %"class.viz::mojom::blink::HitTestRegionList"* %112 to i8*
  tail call void @_ZdlPv(i8* %129) #8
  %130 = bitcast %"class.mojo::StructPtr.36"* %2 to i64*
  %131 = load %"class.viz::mojom::blink::HitTestRegionList"*, %"class.viz::mojom::blink::HitTestRegionList"** %111, align 8
  store i64 %9, i64* %130, align 8
  %132 = icmp ne i8 %110, 0
  %133 = icmp eq %"class.viz::mojom::blink::HitTestRegionList"* %131, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegionList", %"class.viz::mojom::blink::HitTestRegionList"* %131, i64 0, i32 4, i32 0, i32 0, i32 0
  %136 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %135, align 8
  %137 = icmp eq %"struct.viz::HitTestRegion"* %136, null
  %138 = bitcast %"struct.viz::HitTestRegion"* %136 to i8*
  br i1 %137, label %145, label %139, !prof !2

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.viz::mojom::blink::HitTestRegionList", %"class.viz::mojom::blink::HitTestRegionList"* %131, i64 0, i32 4, i32 0, i32 0, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %144, label %143, !prof !3

143:                                              ; preds = %139
  store i32 0, i32* %140, align 4
  br label %144

144:                                              ; preds = %143, %139
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %138) #7
  br label %145

145:                                              ; preds = %144, %134
  %146 = bitcast %"class.viz::mojom::blink::HitTestRegionList"* %131 to i8*
  tail call void @_ZdlPv(i8* %146) #8
  br label %147

147:                                              ; preds = %114, %128, %145
  %148 = phi i1 [ %116, %114 ], [ %132, %128 ], [ %132, %145 ]
  ret i1 %148
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZNO8perfetto11TracedValue11WriteUInt64Em(%"class.perfetto::TracedValue"*, i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN10SkMatrix4412setColMajorfEPKf(%class.SkMatrix44*, float*) local_unnamed_addr #3

declare void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN3viz5mojom21HitTestRegionDataViewEEEN3WTF6VectorINS3_13HitTestRegionELj0ENS7_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISB_EESB_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal18HitTestRegion_DataEEEEEPSB_PNS_7MessageE(%"class.mojo::internal::Array_Data.52"*, %"class.WTF::Vector"*, %"class.mojo::Message"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data.52", %"class.mojo::internal::Array_Data.52"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, %5
  br i1 %8, label %9, label %70

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ult i32 %11, %5
  br i1 %12, label %13, label %52

13:                                               ; preds = %9
  %14 = lshr i32 %11, 2
  %15 = add nuw i32 %11, 1
  %16 = add i32 %15, %14
  %17 = icmp ugt i32 %16, 4
  %18 = select i1 %17, i32 %16, i32 4
  %19 = icmp ugt i32 %18, %5
  %20 = select i1 %19, i32 %18, i32 %5
  %21 = icmp ult i32 %11, %20
  br i1 %21, label %22, label %52, !prof !2

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %23, align 8
  %25 = icmp eq %"struct.viz::HitTestRegion"* %24, null
  %26 = zext i32 %20 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3viz13HitTestRegionEEEmm(i64 %26) #7
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3viz13HitTestRegionEEEPKcv, i64 0, i64 0)) #7
  br i1 %25, label %29, label %34

29:                                               ; preds = %22
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %1 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 100
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %10, align 8
  br label %52

34:                                               ; preds = %22
  %35 = udiv i64 %27, 100
  %36 = ptrtoint i8* %28 to i64
  %37 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %23, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %"struct.viz::HitTestRegion"* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %"struct.viz::HitTestRegion"* %37 to i8*
  br i1 %40, label %42, label %48, !prof !2

42:                                               ; preds = %34
  %43 = load i32, i32* %6, align 4
  %44 = zext i32 %43 to i64
  %45 = mul nuw nsw i64 %44, 100
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %41, i64 %45, i1 false) #7
  %46 = bitcast %"class.WTF::Vector"* %1 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %42, %34
  %49 = phi i8* [ %47, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #7
  %50 = bitcast %"class.WTF::Vector"* %1 to i64*
  store atomic i64 %36, i64* %50 monotonic, align 8
  %51 = trunc i64 %35 to i32
  store i32 %51, i32* %10, align 8
  br label %52

52:                                               ; preds = %48, %29, %13, %9
  %53 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %54 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %53, align 8
  %55 = load i32, i32* %6, align 4
  %56 = zext i32 %5 to i64
  %57 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %54, i64 %56
  %58 = icmp eq i32 %55, %5
  br i1 %58, label %70, label %59

59:                                               ; preds = %52
  %60 = zext i32 %55 to i64
  %61 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %54, i64 %60
  br label %62

62:                                               ; preds = %62, %59
  %63 = phi %"struct.viz::HitTestRegion"* [ %68, %62 ], [ %61, %59 ]
  %64 = bitcast %"struct.viz::HitTestRegion"* %63 to i8*
  %65 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %63, i64 0, i32 4
  %66 = bitcast %"class.gfx::Transform"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %64, i8 0, i64 100, i1 false) #7
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %66, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #7
  %67 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %63, i64 0, i32 4, i32 0, i32 1
  store i8 0, i8* %67, align 4
  %68 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %63, i64 1
  %69 = icmp eq %"struct.viz::HitTestRegion"* %68, %57
  br i1 %69, label %70, label %62

70:                                               ; preds = %62, %52, %3
  store i32 %5, i32* %6, align 4
  %71 = load i32, i32* %4, align 1
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %95, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.mojo::internal::Array_Data.52", %"class.mojo::internal::Array_Data.52"* %0, i64 1
  br label %75

75:                                               ; preds = %73, %91
  %76 = phi i64 [ 0, %73 ], [ %83, %91 ]
  %77 = getelementptr inbounds %"class.mojo::internal::Array_Data.52", %"class.mojo::internal::Array_Data.52"* %74, i64 %76
  %78 = bitcast %"class.mojo::internal::Array_Data.52"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq i64 %79, 0
  %81 = bitcast %"class.mojo::internal::Array_Data.52"* %77 to i8*
  %82 = getelementptr inbounds i8, i8* %81, i64 %79
  %83 = add nuw nsw i64 %76, 1
  %84 = trunc i64 %76 to i32
  %85 = tail call dereferenceable(100) %"struct.viz::HitTestRegion"* @_ZN3WTF6VectorIN3viz13HitTestRegionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 %84) #7
  %86 = icmp eq i8* %82, null
  %87 = or i1 %80, %86
  br i1 %87, label %91, label %88

88:                                               ; preds = %75
  %89 = bitcast i8* %82 to %"class.viz::mojom::internal::HitTestRegion_Data"*
  %90 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom21HitTestRegionDataViewENS1_13HitTestRegionEE4ReadES3_PS4_(%"class.viz::mojom::internal::HitTestRegion_Data"* nonnull %89, %"class.mojo::Message"* %2, %"struct.viz::HitTestRegion"* %85) #7
  br i1 %90, label %91, label %95

91:                                               ; preds = %75, %88
  %92 = load i32, i32* %4, align 1
  %93 = zext i32 %92 to i64
  %94 = icmp ult i64 %83, %93
  br i1 %94, label %75, label %95

95:                                               ; preds = %91, %88, %70
  %96 = phi i1 [ true, %70 ], [ false, %88 ], [ true, %91 ]
  ret i1 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3viz13HitTestRegionEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 21453864
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 21453864) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = mul i64 %0, 100
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

declare zeroext i1 @_ZN4mojo12StructTraitsIN3viz5mojom21HitTestRegionDataViewENS1_13HitTestRegionEE4ReadES3_PS4_(%"class.viz::mojom::internal::HitTestRegion_Data"*, %"class.mojo::Message"*, %"struct.viz::HitTestRegion"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(100) %"struct.viz::HitTestRegion"* @_ZN3WTF6VectorIN3viz13HitTestRegionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %24, i64 %25
  ret %"struct.viz::HitTestRegion"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN3viz5mojom5blink13HitTestRegion3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZN3viz5mojom5blink13HitTestRegion3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3viz5mojom5blink17HitTestRegionList3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZN3viz5mojom5blink17HitTestRegionList3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
