; ModuleID = '../../third_party/boringssl/src/crypto/engine/engine.c'
source_filename = "../../third_party/boringssl/src/crypto/engine/engine.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.engine_st = type { %struct.rsa_meth_st*, %struct.ecdsa_method_st* }
%struct.rsa_meth_st = type { %struct.openssl_method_common_st, i8*, i32 (%struct.rsa_st*)*, i32 (%struct.rsa_st*)*, i64 (%struct.rsa_st*)*, i32 (i32, i8*, i32, i8*, i32*, %struct.rsa_st*)*, i32 (%struct.rsa_st*, i64*, i8*, i64, i8*, i64, i32)*, i32 (%struct.rsa_st*, i64*, i8*, i64, i8*, i64, i32)*, i32 (%struct.rsa_st*, i8*, i8*, i64)*, i32 }
%struct.openssl_method_common_st = type { i32, i8 }
%struct.rsa_st = type { %struct.rsa_meth_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.crypto_ex_data_st, i32, i32, %union.crypto_mutex_st, %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i32, %struct.bn_blinding_st**, i8*, i64, i8 }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.bn_mont_ctx_st = type opaque
%struct.bignum_st = type opaque
%struct.bn_blinding_st = type opaque
%struct.ecdsa_method_st = type { %struct.openssl_method_common_st, i8*, i32 (%struct.ec_key_st*)*, i32 (%struct.ec_key_st*)*, i64 (%struct.ec_key_st*)*, i32 (i8*, i64, i8*, i32*, %struct.ec_key_st*)*, i32 }
%struct.ec_key_st = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden %struct.engine_st* @ENGINE_new() local_unnamed_addr #0 {
  %1 = tail call i8* @OPENSSL_malloc(i64 16) #6
  %2 = icmp eq i8* %1, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %0
  %4 = bitcast i8* %1 to %struct.engine_st*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %1, i8 0, i64 16, i1 false) #6
  br label %5

5:                                                ; preds = %0, %3
  %6 = phi %struct.engine_st* [ %4, %3 ], [ null, %0 ]
  ret %struct.engine_st* %6
}

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ENGINE_free(%struct.engine_st*) local_unnamed_addr #0 {
  %2 = bitcast %struct.engine_st* %0 to i8*
  tail call void @OPENSSL_free(i8* %2) #6
  ret i32 1
}

declare void @OPENSSL_free(i8*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @ENGINE_set_RSA_method(%struct.engine_st* nocapture, %struct.rsa_meth_st*, i64) local_unnamed_addr #2 {
  %4 = icmp eq i64 %2, 80
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.rsa_meth_st, %struct.rsa_meth_st* %1, i64 0, i32 0, i32 1
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.engine_st, %struct.engine_st* %0, i64 0, i32 0
  store %struct.rsa_meth_st* %1, %struct.rsa_meth_st** %10, align 8
  br label %11

11:                                               ; preds = %3, %5, %9
  %12 = phi i32 [ 1, %9 ], [ 0, %5 ], [ 0, %3 ]
  ret i32 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.rsa_meth_st* @ENGINE_get_RSA_method(%struct.engine_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.engine_st, %struct.engine_st* %0, i64 0, i32 0
  %3 = load %struct.rsa_meth_st*, %struct.rsa_meth_st** %2, align 8
  ret %struct.rsa_meth_st* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @ENGINE_set_ECDSA_method(%struct.engine_st* nocapture, %struct.ecdsa_method_st*, i64) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %struct.engine_st, %struct.engine_st* %0, i64 0, i32 1
  %5 = icmp eq i64 %2, 56
  br i1 %5, label %6, label %11

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.ecdsa_method_st, %struct.ecdsa_method_st* %1, i64 0, i32 0, i32 1
  %8 = load i8, i8* %7, align 4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store %struct.ecdsa_method_st* %1, %struct.ecdsa_method_st** %4, align 8
  br label %11

11:                                               ; preds = %3, %6, %10
  %12 = phi i32 [ 1, %10 ], [ 0, %6 ], [ 0, %3 ]
  ret i32 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.ecdsa_method_st* @ENGINE_get_ECDSA_method(%struct.engine_st* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.engine_st, %struct.engine_st* %0, i64 0, i32 1
  %3 = load %struct.ecdsa_method_st*, %struct.ecdsa_method_st** %2, align 8
  ret %struct.ecdsa_method_st* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @METHOD_ref(i8* nocapture) local_unnamed_addr #4 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @METHOD_unref(i8* nocapture) local_unnamed_addr #4 {
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
