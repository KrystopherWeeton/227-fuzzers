; ModuleID = '../../third_party/pdfium/core/fpdfapi/render/cpdf_rendercontext.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/render/cpdf_rendercontext.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.CPDF_RenderOptions::Options" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.CPDF_RenderOptions::ColorScheme" = type { i32, i32, i32, i32 }
%"class.fxcrt::RetainPtr.374" = type { %"class.std::__1::unique_ptr.375" }
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %class.CPDF_OCContext* }
%class.CPDF_OCContext = type { %"class.fxcrt::Retainable", %"class.fxcrt::UnownedPtr", i32, %"class.std::__1::map.378" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type { %"class.CPDF_Parser::ParsedObjectsHolder", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.16", %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.33", %"class.std::__1::vector", i8, i8, i32, i32, %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.123", %"class.std::__1::vector.129", %"class.CPDF_Document::StockFontClearer", %"class.std::__1::unique_ptr.137" }
%"class.CPDF_Parser::ParsedObjectsHolder" = type { %class.CPDF_IndirectObjectHolder }
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.4" }
%"class.std::__1::__tree.4" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.421" }
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.424", %"class.std::__1::__compressed_pair.432", %"class.std::__1::__compressed_pair.437", %"class.std::__1::__compressed_pair.439", [4 x i8] }>
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426", %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { float }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.CPDF_Parser* }
%class.CPDF_Parser = type <{ %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.23", %"class.fxcrt::UnownedPtr.29", i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.30", i64, %"class.fxcrt::RetainPtr.62", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.74", %"class.std::__1::map.80", %"class.std::__1::set.89", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.CPDF_SyntaxParser* }
%class.CPDF_SyntaxParser = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.fxcrt::UnownedPtr.29" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.CPDF_CrossRefTable* }
%class.CPDF_CrossRefTable = type { %"class.fxcrt::RetainPtr.33", %"class.std::__1::map.50" }
%"class.std::__1::map.50" = type { %"class.std::__1::__tree.51" }
%"class.std::__1::__tree.51" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::RetainPtr.62" = type { %"class.std::__1::unique_ptr.63" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.CPDF_SecurityHandler* }
%class.CPDF_SecurityHandler = type opaque
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.68" }
%"class.fxcrt::RetainPtr.68" = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %class.CPDF_LinearizedHeader* }
%class.CPDF_LinearizedHeader = type opaque
%"class.std::__1::map.80" = type { %"class.std::__1::__tree.81" }
%"class.std::__1::__tree.81" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.89" = type { %"class.std::__1::__tree.90" }
%"class.std::__1::__tree.90" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::RetainPtr.33" = type { %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map.37" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.std::__1::map.37" = type { %"class.std::__1::__tree.38" }
%"class.std::__1::__tree.38" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.100" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.CPDF_Document::RenderDataIface"* }
%"class.CPDF_Document::RenderDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.CPDF_Document::PageDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %class.JBig2_DocumentContext* }
%class.JBig2_DocumentContext = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.CPDF_Document::LinkListIface"* }
%"class.CPDF_Document::LinkListIface" = type { i32 (...)** }
%"class.std::__1::vector.129" = type { %"class.std::__1::__vector_base.130" }
%"class.std::__1::__vector_base.130" = type { i32*, i32*, %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { i32* }
%"class.CPDF_Document::StockFontClearer" = type { %"class.fxcrt::UnownedPtr.136" }
%"class.fxcrt::UnownedPtr.136" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.CPDF_Document::Extension"* }
%"class.CPDF_Document::Extension" = type { i32 (...)** }
%"class.std::__1::map.378" = type { %"class.std::__1::__tree.379" }
%"class.std::__1::__tree.379" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.380", %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::RetainPtr.398" = type { %"class.std::__1::unique_ptr.399" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %class.CPDF_Dictionary* }
%"class.std::__1::vector.404" = type { %"class.std::__1::__vector_base.405" }
%"class.std::__1::__vector_base.405" = type { %"class.fxcrt::UnownedPtr.406"*, %"class.fxcrt::UnownedPtr.406"*, %"class.std::__1::__compressed_pair.407" }
%"class.fxcrt::UnownedPtr.406" = type opaque
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.fxcrt::UnownedPtr.406"* }
%"class.fxcrt::UnownedPtr.412" = type { %class.CPDF_RenderContext* }
%class.CPDF_RenderContext = type { %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.33", %"class.fxcrt::UnownedPtr.143", %"class.std::__1::vector.230" }
%"class.fxcrt::UnownedPtr.143" = type { %class.CPDF_PageRenderCache* }
%class.CPDF_PageRenderCache = type <{ %"class.CPDF_Page::RenderCacheIface", %"class.fxcrt::UnownedPtr.144", %"class.std::__1::map.212", %"class.fxcrt::MaybeOwned", i32, i32, i8, [7 x i8] }>
%"class.CPDF_Page::RenderCacheIface" = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.144" = type { %class.CPDF_Page* }
%class.CPDF_Page = type { %class.IPDF_Page, %class.CPDF_PageObjectHolder, %class.CFX_STemplate, %class.CFX_Matrix, %"class.fxcrt::UnownedPtr", %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.206", %"class.fxcrt::ObservedPtr" }
%class.IPDF_Page = type { %"class.fxcrt::Retainable" }
%class.CPDF_PageObjectHolder = type { i32 (...)**, %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.33", %"class.std::__1::map.145", %"class.std::__1::map.156", %class.CFX_FloatRect, %class.CPDF_Transparency, i8, i8, %"class.fxcrt::RetainPtr.33", %"class.fxcrt::UnownedPtr", %"class.std::__1::vector.167", %"class.std::__1::unique_ptr.174", %"class.std::__1::deque", %class.CFX_Matrix, %"class.std::__1::set.190" }
%"class.std::__1::map.145" = type { %"class.std::__1::__tree.146" }
%"class.std::__1::__tree.146" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.147", %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.156" = type { %"class.std::__1::__tree.157" }
%"class.std::__1::__tree.157" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.158", %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.CFX_FloatRect = type { float, float, float, float }
%"class.std::__1::vector.167" = type { %"class.std::__1::__vector_base.168" }
%"class.std::__1::__vector_base.168" = type { %class.CFX_FloatRect*, %class.CFX_FloatRect*, %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %class.CFX_FloatRect* }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %class.CPDF_ContentParser* }
%class.CPDF_ContentParser = type opaque
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.186" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.180"**, %"class.std::__1::unique_ptr.180"**, %"class.std::__1::unique_ptr.180"**, %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %class.CPDF_PageObject* }
%class.CPDF_PageObject = type { %class.CPDF_GraphicStates, %class.CFX_FloatRect, %class.CPDF_ContentMarks, i8, i32 }
%class.CPDF_ContentMarks = type { %"class.fxcrt::RetainPtr.360" }
%"class.fxcrt::RetainPtr.360" = type { %"class.std::__1::unique_ptr.361" }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.CPDF_ContentMarks::MarkData"* }
%"class.CPDF_ContentMarks::MarkData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.364" }
%"class.std::__1::vector.364" = type { %"class.std::__1::__vector_base.365" }
%"class.std::__1::__vector_base.365" = type { %"class.fxcrt::RetainPtr.366"*, %"class.fxcrt::RetainPtr.366"*, %"class.std::__1::__compressed_pair.367" }
%"class.fxcrt::RetainPtr.366" = type opaque
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.fxcrt::RetainPtr.366"* }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.std::__1::unique_ptr.180"** }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.190" = type { %"class.std::__1::__tree.191" }
%"class.std::__1::__tree.191" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.192", %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.CFX_STemplate = type { float, float }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.CPDF_Page::RenderCacheIface"* }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.CPDF_Page::RenderContextIface"* }
%"class.CPDF_Page::RenderContextIface" = type { i32 (...)** }
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CPDF_Page::View"* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.CPDF_Page::View" = type { %"class.fxcrt::Observable" }
%"class.std::__1::map.212" = type { %"class.std::__1::__tree.213" }
%"class.std::__1::__tree.213" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.214", %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.223", %"class.fxcrt::UnownedPtr.229" }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %class.CPDF_ImageCacheEntry* }
%class.CPDF_ImageCacheEntry = type opaque
%"class.fxcrt::UnownedPtr.229" = type { %class.CPDF_ImageCacheEntry* }
%"class.std::__1::vector.230" = type { %"class.std::__1::__vector_base.231" }
%"class.std::__1::__vector_base.231" = type { %"class.CPDF_RenderContext::Layer"*, %"class.CPDF_RenderContext::Layer"*, %"class.std::__1::__compressed_pair.233" }
%"class.CPDF_RenderContext::Layer" = type { %"class.fxcrt::UnownedPtr.232", %class.CFX_Matrix }
%"class.fxcrt::UnownedPtr.232" = type { %class.CPDF_PageObjectHolder* }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.CPDF_RenderContext::Layer"* }
%"class.fxcrt::UnownedPtr.397" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr.238", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.391" }
%"class.fxcrt::RetainPtr.238" = type { %"class.std::__1::unique_ptr.239" }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned.248" }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr.238", %"class.std::__1::vector.244" }
%"class.std::__1::vector.244" = type { %"class.std::__1::__vector_base.245" }
%"class.std::__1::__vector_base.245" = type { i32*, i32*, %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"class.fxcrt::MaybeOwned.248" = type { %"class.std::__1::unique_ptr.249", %"class.fxcrt::UnownedPtr.253" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { i8* }
%"class.fxcrt::UnownedPtr.253" = type { i8* }
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CPDF_ClipPath = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr.254" }
%"class.fxcrt::RetainPtr.254" = type { %"class.std::__1::unique_ptr.255" }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.CPDF_ClipPath::PathData"* }
%"class.CPDF_ClipPath::PathData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.258", %"class.std::__1::vector.266" }
%"class.std::__1::vector.258" = type { %"class.std::__1::__vector_base.259" }
%"class.std::__1::__vector_base.259" = type { %"struct.std::__1::pair.260"*, %"struct.std::__1::pair.260"*, %"class.std::__1::__compressed_pair.261" }
%"struct.std::__1::pair.260" = type opaque
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::pair.260"* }
%"class.std::__1::vector.266" = type { %"class.std::__1::__vector_base.267" }
%"class.std::__1::__vector_base.267" = type { %"class.std::__1::unique_ptr.268"*, %"class.std::__1::unique_ptr.268"*, %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::unique_ptr.268" = type opaque
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.std::__1::unique_ptr.268"* }
%"class.fxcrt::UnownedPtr.413" = type { %class.CPDF_PageObject* }
%class.CPDF_GraphicStates = type { i32 (...)**, %class.CPDF_ClipPath, %class.CFX_GraphState, %class.CPDF_ColorState, %class.CPDF_TextState, %class.CPDF_GeneralState }
%class.CFX_GraphState = type { %"class.fxcrt::SharedCopyOnWrite.276" }
%"class.fxcrt::SharedCopyOnWrite.276" = type { %"class.fxcrt::RetainPtr.277" }
%"class.fxcrt::RetainPtr.277" = type { %"class.std::__1::unique_ptr.278" }
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %class.CFX_RetainableGraphStateData* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.281" }
%"class.std::__1::vector.281" = type { %"class.std::__1::__vector_base.282" }
%"class.std::__1::__vector_base.282" = type { float*, float*, %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { float* }
%class.CPDF_ColorState = type { %"class.fxcrt::SharedCopyOnWrite.290" }
%"class.fxcrt::SharedCopyOnWrite.290" = type { %"class.fxcrt::RetainPtr.291" }
%"class.fxcrt::RetainPtr.291" = type { %"class.std::__1::unique_ptr.292" }
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.CPDF_ColorState::ColorData"* }
%"class.CPDF_ColorState::ColorData" = type { %"class.fxcrt::Retainable", i32, i32, %class.CPDF_Color, %class.CPDF_Color }
%class.CPDF_Color = type { %"class.std::__1::vector.281", %"class.std::__1::unique_ptr.295", %"class.fxcrt::RetainPtr.313" }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %class.PatternValue* }
%class.PatternValue = type { %"class.fxcrt::RetainPtr.298", %"struct.std::__1::array" }
%"class.fxcrt::RetainPtr.298" = type { %"class.std::__1::unique_ptr.299" }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %class.CPDF_Pattern* }
%class.CPDF_Pattern = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.302", %class.CFX_Matrix, %class.CFX_Matrix }
%"class.fxcrt::RetainPtr.302" = type { %"class.std::__1::unique_ptr.303" }
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %class.CPDF_Object* }
%"struct.std::__1::array" = type { [16 x float] }
%"class.fxcrt::RetainPtr.313" = type { %"class.std::__1::unique_ptr.314" }
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.317", %"class.fxcrt::RetainPtr.318", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::UnownedPtr.317" = type { %class.CPDF_Document* }
%"class.fxcrt::RetainPtr.318" = type { %"class.std::__1::unique_ptr.319" }
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %class.CPDF_Array* }
%class.CPDF_Array = type opaque
%class.CPDF_TextState = type { %"class.fxcrt::SharedCopyOnWrite.328" }
%"class.fxcrt::SharedCopyOnWrite.328" = type { %"class.fxcrt::RetainPtr.329" }
%"class.fxcrt::RetainPtr.329" = type { %"class.std::__1::unique_ptr.330" }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.CPDF_TextState::TextData"* }
%"class.CPDF_TextState::TextData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.333", %"class.fxcrt::UnownedPtr.317", float, float, float, i32, [4 x float], [4 x float] }
%"class.fxcrt::RetainPtr.333" = type { %"class.std::__1::unique_ptr.334" }
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %class.CPDF_Font* }
%class.CPDF_Font = type opaque
%class.CPDF_GeneralState = type { %"class.fxcrt::SharedCopyOnWrite.341" }
%"class.fxcrt::SharedCopyOnWrite.341" = type { %"class.fxcrt::RetainPtr.342" }
%"class.fxcrt::RetainPtr.342" = type { %"class.std::__1::unique_ptr.343" }
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.CPDF_GeneralState::StateData"* }
%"class.CPDF_GeneralState::StateData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::ByteString", i32, %"class.fxcrt::RetainPtr.302", %class.CFX_Matrix, float, float, %"class.fxcrt::RetainPtr.346", %"class.fxcrt::RetainPtr.352", %class.CFX_Matrix, i32, i8, i8, i8, i8, i8, i32, %"class.fxcrt::RetainPtr.346", %"class.fxcrt::RetainPtr.346", %"class.fxcrt::RetainPtr.346", float, float }
%"class.fxcrt::RetainPtr.352" = type { %"class.std::__1::unique_ptr.353" }
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %class.CPDF_TransferFunc* }
%class.CPDF_TransferFunc = type opaque
%"class.fxcrt::RetainPtr.346" = type { %"class.std::__1::unique_ptr.347" }
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %class.CPDF_Object* }
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %class.CPDF_ImageRenderer* }
%class.CPDF_ImageRenderer = type opaque
%"class.fxcrt::UnownedPtr.420" = type { %class.CPDF_Type3Char* }
%class.CPDF_Type3Char = type opaque
%class.CPDF_Transparency = type { i8, i8 }
%class.CPDF_RenderOptions = type { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", %"class.fxcrt::RetainPtr.374" }
%class.CFX_DefaultRenderDevice = type { %class.CFX_RenderDevice }
%"class.CFX_RenderDevice::StateRestorer" = type { %"class.fxcrt::UnownedPtr.397" }
%class.CPDF_RenderStatus = type <{ %class.CPDF_RenderOptions, %"class.fxcrt::RetainPtr.398", %"class.fxcrt::RetainPtr.398", %"class.std::__1::vector.404", %"class.fxcrt::UnownedPtr.412", %"class.fxcrt::UnownedPtr.397", %class.CFX_Matrix, %class.CPDF_ClipPath, %"class.fxcrt::UnownedPtr.413", %"class.fxcrt::UnownedPtr.413", %class.CPDF_GraphicStates, %"class.std::__1::unique_ptr.414", %"class.fxcrt::UnownedPtr.420", %class.CPDF_Transparency, i8, i8, i8, i8, i8, i8, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

@__const._ZN18CPDF_RenderContext6RenderEP16CFX_RenderDevicePK15CPDF_PageObjectPK18CPDF_RenderOptionsPK10CFX_Matrix.status = private unnamed_addr constant <{ { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", [4 x i8], %"class.fxcrt::RetainPtr.374" }, %"class.fxcrt::RetainPtr.398", %"class.fxcrt::RetainPtr.398", %"class.std::__1::vector.404", %"class.fxcrt::UnownedPtr.412", %"class.fxcrt::UnownedPtr.397", %class.CFX_Matrix, %class.CPDF_ClipPath, %"class.fxcrt::UnownedPtr.413", %"class.fxcrt::UnownedPtr.413", %class.CPDF_GraphicStates, %"class.std::__1::unique_ptr.414", %"class.fxcrt::UnownedPtr.420", %class.CPDF_Transparency, i8, i8, i8, i8, i8, i8, i32, i32, i32, [4 x i8] }> <{ { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", [4 x i8], %"class.fxcrt::RetainPtr.374" } { i8 -86, i8 -86, %"struct.CPDF_RenderOptions::Options" { i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86 }, %"struct.CPDF_RenderOptions::ColorScheme" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %"class.fxcrt::RetainPtr.374" { %"class.std::__1::unique_ptr.375" { %"class.std::__1::__compressed_pair.376" { %"struct.std::__1::__compressed_pair_elem.377" { %class.CPDF_OCContext* inttoptr (i64 -6148914691236517206 to %class.CPDF_OCContext*) } } } } }, %"class.fxcrt::RetainPtr.398" { %"class.std::__1::unique_ptr.399" { %"class.std::__1::__compressed_pair.400" { %"struct.std::__1::__compressed_pair_elem.401" { %class.CPDF_Dictionary* inttoptr (i64 -6148914691236517206 to %class.CPDF_Dictionary*) } } } }, %"class.fxcrt::RetainPtr.398" { %"class.std::__1::unique_ptr.399" { %"class.std::__1::__compressed_pair.400" { %"struct.std::__1::__compressed_pair_elem.401" { %class.CPDF_Dictionary* inttoptr (i64 -6148914691236517206 to %class.CPDF_Dictionary*) } } } }, %"class.std::__1::vector.404" { %"class.std::__1::__vector_base.405" { %"class.fxcrt::UnownedPtr.406"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::UnownedPtr.406"*), %"class.fxcrt::UnownedPtr.406"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::UnownedPtr.406"*), %"class.std::__1::__compressed_pair.407" { %"struct.std::__1::__compressed_pair_elem.408" { %"class.fxcrt::UnownedPtr.406"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::UnownedPtr.406"*) } } } }, %"class.fxcrt::UnownedPtr.412" { %class.CPDF_RenderContext* inttoptr (i64 -6148914691236517206 to %class.CPDF_RenderContext*) }, %"class.fxcrt::UnownedPtr.397" { %class.CFX_RenderDevice* inttoptr (i64 -6148914691236517206 to %class.CFX_RenderDevice*) }, %class.CFX_Matrix { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.CPDF_ClipPath { %"class.fxcrt::SharedCopyOnWrite" { %"class.fxcrt::RetainPtr.254" { %"class.std::__1::unique_ptr.255" { %"class.std::__1::__compressed_pair.256" { %"struct.std::__1::__compressed_pair_elem.257" { %"class.CPDF_ClipPath::PathData"* inttoptr (i64 -6148914691236517206 to %"class.CPDF_ClipPath::PathData"*) } } } } } }, %"class.fxcrt::UnownedPtr.413" { %class.CPDF_PageObject* inttoptr (i64 -6148914691236517206 to %class.CPDF_PageObject*) }, %"class.fxcrt::UnownedPtr.413" { %class.CPDF_PageObject* inttoptr (i64 -6148914691236517206 to %class.CPDF_PageObject*) }, %class.CPDF_GraphicStates { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.CPDF_ClipPath { %"class.fxcrt::SharedCopyOnWrite" { %"class.fxcrt::RetainPtr.254" { %"class.std::__1::unique_ptr.255" { %"class.std::__1::__compressed_pair.256" { %"struct.std::__1::__compressed_pair_elem.257" { %"class.CPDF_ClipPath::PathData"* inttoptr (i64 -6148914691236517206 to %"class.CPDF_ClipPath::PathData"*) } } } } } }, %class.CFX_GraphState { %"class.fxcrt::SharedCopyOnWrite.276" { %"class.fxcrt::RetainPtr.277" { %"class.std::__1::unique_ptr.278" { %"class.std::__1::__compressed_pair.279" { %"struct.std::__1::__compressed_pair_elem.280" { %class.CFX_RetainableGraphStateData* inttoptr (i64 -6148914691236517206 to %class.CFX_RetainableGraphStateData*) } } } } } }, %class.CPDF_ColorState { %"class.fxcrt::SharedCopyOnWrite.290" { %"class.fxcrt::RetainPtr.291" { %"class.std::__1::unique_ptr.292" { %"class.std::__1::__compressed_pair.293" { %"struct.std::__1::__compressed_pair_elem.294" { %"class.CPDF_ColorState::ColorData"* inttoptr (i64 -6148914691236517206 to %"class.CPDF_ColorState::ColorData"*) } } } } } }, %class.CPDF_TextState { %"class.fxcrt::SharedCopyOnWrite.328" { %"class.fxcrt::RetainPtr.329" { %"class.std::__1::unique_ptr.330" { %"class.std::__1::__compressed_pair.331" { %"struct.std::__1::__compressed_pair_elem.332" { %"class.CPDF_TextState::TextData"* inttoptr (i64 -6148914691236517206 to %"class.CPDF_TextState::TextData"*) } } } } } }, %class.CPDF_GeneralState { %"class.fxcrt::SharedCopyOnWrite.341" { %"class.fxcrt::RetainPtr.342" { %"class.std::__1::unique_ptr.343" { %"class.std::__1::__compressed_pair.344" { %"struct.std::__1::__compressed_pair_elem.345" { %"class.CPDF_GeneralState::StateData"* inttoptr (i64 -6148914691236517206 to %"class.CPDF_GeneralState::StateData"*) } } } } } } }, %"class.std::__1::unique_ptr.414" { %"class.std::__1::__compressed_pair.415" { %"struct.std::__1::__compressed_pair_elem.416" { %class.CPDF_ImageRenderer* inttoptr (i64 -6148914691236517206 to %class.CPDF_ImageRenderer*) } } }, %"class.fxcrt::UnownedPtr.420" { %class.CPDF_Type3Char* inttoptr (i64 -6148914691236517206 to %class.CPDF_Type3Char*) }, %class.CPDF_Transparency { i8 -86, i8 -86 }, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

@_ZN18CPDF_RenderContextC1EP13CPDF_DocumentP15CPDF_DictionaryP20CPDF_PageRenderCache = hidden unnamed_addr alias void (%class.CPDF_RenderContext*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %class.CPDF_PageRenderCache*), void (%class.CPDF_RenderContext*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %class.CPDF_PageRenderCache*)* @_ZN18CPDF_RenderContextC2EP13CPDF_DocumentP15CPDF_DictionaryP20CPDF_PageRenderCache
@_ZN18CPDF_RenderContextD1Ev = hidden unnamed_addr alias void (%class.CPDF_RenderContext*), void (%class.CPDF_RenderContext*)* @_ZN18CPDF_RenderContextD2Ev
@_ZN18CPDF_RenderContext5LayerC1EP21CPDF_PageObjectHolderRK10CFX_Matrix = hidden unnamed_addr alias void (%"class.CPDF_RenderContext::Layer"*, %class.CPDF_PageObjectHolder*, %class.CFX_Matrix*), void (%"class.CPDF_RenderContext::Layer"*, %class.CPDF_PageObjectHolder*, %class.CFX_Matrix*)* @_ZN18CPDF_RenderContext5LayerC2EP21CPDF_PageObjectHolderRK10CFX_Matrix
@_ZN18CPDF_RenderContext5LayerC1ERKS0_ = hidden unnamed_addr alias void (%"class.CPDF_RenderContext::Layer"*, %"class.CPDF_RenderContext::Layer"*), void (%"class.CPDF_RenderContext::Layer"*, %"class.CPDF_RenderContext::Layer"*)* @_ZN18CPDF_RenderContext5LayerC2ERKS0_
@_ZN18CPDF_RenderContext5LayerD1Ev = hidden unnamed_addr alias void (%"class.CPDF_RenderContext::Layer"*), void (%"class.CPDF_RenderContext::Layer"*)* @_ZN18CPDF_RenderContext5LayerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_RenderContextC2EP13CPDF_DocumentP15CPDF_DictionaryP20CPDF_PageRenderCache(%class.CPDF_RenderContext* nocapture, %class.CPDF_Document*, %class.CPDF_Dictionary*, %class.CPDF_PageRenderCache*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %0, i64 0, i32 0, i32 0
  store %class.CPDF_Document* %1, %class.CPDF_Document** %5, align 8
  %6 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %0, i64 0, i32 1
  %7 = ptrtoint %class.CPDF_Dictionary* %2 to i64
  %8 = bitcast %"class.fxcrt::RetainPtr.33"* %6 to i64*
  store i64 %7, i64* %8, align 8
  %9 = icmp eq %class.CPDF_Dictionary* %2, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %2, i64 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add nsw i64 %12, 1
  store i64 %13, i64* %11, align 8
  br label %14

14:                                               ; preds = %4, %10
  %15 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %0, i64 0, i32 2, i32 0
  store %class.CPDF_PageRenderCache* %3, %class.CPDF_PageRenderCache** %15, align 8
  %16 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %0, i64 0, i32 3
  %17 = bitcast %"class.std::__1::vector.230"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_RenderContextD2Ev(%class.CPDF_RenderContext* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.CPDF_RenderContext::Layer"*, %"class.CPDF_RenderContext::Layer"** %2, align 8
  %4 = icmp eq %"class.CPDF_RenderContext::Layer"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.CPDF_RenderContext::Layer"* %3 to i64
  %7 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %0, i64 0, i32 3, i32 0, i32 1
  %8 = bitcast %"class.CPDF_RenderContext::Layer"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.CPDF_RenderContext::Layer"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #10
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %11, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %11, align 8
  %13 = icmp eq %class.CPDF_Dictionary* %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %12, i64 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = add nsw i64 %16, -1
  store i64 %17, i64* %15, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %25

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %12, i64 0, i32 0, i32 0
  %21 = bitcast %class.CPDF_Dictionary* %12 to void (%"class.fxcrt::Retainable"*)***
  %22 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %22, i64 1
  %24 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %23, align 8
  tail call void %24(%"class.fxcrt::Retainable"* nonnull %20) #9
  br label %25

25:                                               ; preds = %10, %14, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_RenderContext13GetBackgroundERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEPK15CPDF_PageObjectPK18CPDF_RenderOptionsRK10CFX_Matrix(%class.CPDF_RenderContext*, %"class.fxcrt::RetainPtr.238"* dereferenceable(8), %class.CPDF_PageObject*, %class.CPDF_RenderOptions* readonly, %class.CFX_Matrix* readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.CFX_DefaultRenderDevice, align 8
  %7 = alloca %"class.fxcrt::RetainPtr.238", align 8
  %8 = alloca %struct.FX_RECT, align 4
  %9 = bitcast %class.CFX_DefaultRenderDevice* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @_ZN23CFX_DefaultRenderDeviceC1Ev(%class.CFX_DefaultRenderDevice* nonnull %6) #9
  %10 = bitcast %"class.fxcrt::RetainPtr.238"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %11 = bitcast %"class.fxcrt::RetainPtr.238"* %7 to i64*
  store i64 0, i64* %11, align 8
  %12 = call zeroext i1 @_ZN23CFX_DefaultRenderDevice6AttachERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEbS5_b(%class.CFX_DefaultRenderDevice* nonnull %6, %"class.fxcrt::RetainPtr.238"* dereferenceable(8) %1, i1 zeroext false, %"class.fxcrt::RetainPtr.238"* nonnull dereferenceable(8) %7, i1 zeroext false) #9
  %13 = getelementptr inbounds %"class.fxcrt::RetainPtr.238", %"class.fxcrt::RetainPtr.238"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %13, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %13, align 8
  %15 = icmp eq %class.CFX_DIBitmap* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %14, i64 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = add nsw i64 %18, -1
  store i64 %19, i64* %17, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %14, i64 0, i32 0, i32 0
  %23 = bitcast %class.CFX_DIBitmap* %14 to void (%"class.fxcrt::Retainable"*)***
  %24 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %24, i64 1
  %26 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %25, align 8
  call void %26(%"class.fxcrt::Retainable"* nonnull %22) #9
  br label %27

27:                                               ; preds = %5, %16, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  %28 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %6, i64 0, i32 0
  %29 = bitcast %struct.FX_RECT* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #9
  %30 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %6, i64 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %6, i64 0, i32 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %8, i64 0, i32 0
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %8, i64 0, i32 1
  store i32 0, i32* %35, align 4
  %36 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %8, i64 0, i32 2
  store i32 %31, i32* %36, align 4
  %37 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %8, i64 0, i32 3
  store i32 %33, i32* %37, align 4
  %38 = call zeroext i1 @_ZN16CFX_RenderDevice17FillRectWithBlendERK7FX_RECTj9BlendMode(%class.CFX_RenderDevice* nonnull %28, %struct.FX_RECT* nonnull dereferenceable(16) %8, i32 -1, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #9
  call void @_ZN18CPDF_RenderContext6RenderEP16CFX_RenderDevicePK15CPDF_PageObjectPK18CPDF_RenderOptionsPK10CFX_Matrix(%class.CPDF_RenderContext* %0, %class.CFX_RenderDevice* nonnull %28, %class.CPDF_PageObject* %2, %class.CPDF_RenderOptions* %3, %class.CFX_Matrix* %4)
  call void @_ZN23CFX_DefaultRenderDeviceD1Ev(%class.CFX_DefaultRenderDevice* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN23CFX_DefaultRenderDeviceC1Ev(%class.CFX_DefaultRenderDevice*) unnamed_addr #2

declare zeroext i1 @_ZN23CFX_DefaultRenderDevice6AttachERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEbS5_b(%class.CFX_DefaultRenderDevice*, %"class.fxcrt::RetainPtr.238"* dereferenceable(8), i1 zeroext, %"class.fxcrt::RetainPtr.238"* dereferenceable(8), i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_RenderContext6RenderEP16CFX_RenderDevicePK15CPDF_PageObjectPK18CPDF_RenderOptionsPK10CFX_Matrix(%class.CPDF_RenderContext*, %class.CFX_RenderDevice*, %class.CPDF_PageObject*, %class.CPDF_RenderOptions* readonly, %class.CFX_Matrix* readonly) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.CFX_RenderDevice::StateRestorer", align 8
  %7 = alloca %class.CPDF_RenderStatus, align 8
  %8 = alloca %class.CFX_Matrix, align 16
  %9 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.CPDF_RenderContext::Layer"*, %"class.CPDF_RenderContext::Layer"** %9, align 8
  %11 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %0, i64 0, i32 3, i32 0, i32 1
  %12 = load %"class.CPDF_RenderContext::Layer"*, %"class.CPDF_RenderContext::Layer"** %11, align 8
  %13 = icmp eq %"class.CPDF_RenderContext::Layer"* %10, %12
  br i1 %13, label %136, label %14

14:                                               ; preds = %5
  %15 = bitcast %"class.CFX_RenderDevice::StateRestorer"* %6 to i8*
  %16 = getelementptr inbounds %"class.CFX_RenderDevice::StateRestorer", %"class.CFX_RenderDevice::StateRestorer"* %6, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %7, i64 0, i32 0, i32 0
  %18 = icmp eq %class.CPDF_RenderOptions* %3, null
  %19 = getelementptr inbounds %class.CPDF_RenderOptions, %class.CPDF_RenderOptions* %3, i64 0, i32 0
  %20 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %7, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %class.CPDF_RenderOptions, %class.CPDF_RenderOptions* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %7, i64 0, i32 9, i32 0
  %23 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %7, i64 0, i32 13, i32 0
  %24 = bitcast i8* %23 to i16*
  %25 = bitcast %class.CFX_Matrix* %8 to i8*
  %26 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %8, i64 0, i32 0
  %27 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %8, i64 0, i32 1
  %28 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %8, i64 0, i32 2
  %29 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %8, i64 0, i32 3
  %30 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %8, i64 0, i32 4
  %31 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %8, i64 0, i32 5
  %32 = icmp eq %class.CFX_Matrix* %4, null
  %33 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 2
  %34 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 4
  %35 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 5
  %36 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %7, i64 0, i32 6
  %37 = bitcast %class.CFX_Matrix* %36 to i8*
  %38 = bitcast %class.CFX_Matrix* %4 to i8*
  %39 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %7, i64 0, i32 0, i32 2, i32 8
  %40 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %7, i64 0, i32 0
  %41 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %0, i64 0, i32 2, i32 0
  %42 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %7, i64 0, i32 14
  %43 = bitcast %class.CFX_Matrix* %4 to <2 x float>*
  %44 = bitcast float* %33 to <2 x float>*
  %45 = bitcast %class.CFX_Matrix* %8 to <4 x float>*
  br label %46

46:                                               ; preds = %130, %14
  %47 = phi %"class.CPDF_RenderContext::Layer"* [ %10, %14 ], [ %133, %130 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  store %class.CFX_RenderDevice* inttoptr (i64 -6148914691236517206 to %class.CFX_RenderDevice*), %class.CFX_RenderDevice** %16, align 8
  call void @_ZN16CFX_RenderDevice13StateRestorerC1EPS_(%"class.CFX_RenderDevice::StateRestorer"* nonnull %6, %class.CFX_RenderDevice* %1) #9
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %17) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 getelementptr inbounds (<{ { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", [4 x i8], %"class.fxcrt::RetainPtr.374" }, %"class.fxcrt::RetainPtr.398", %"class.fxcrt::RetainPtr.398", %"class.std::__1::vector.404", %"class.fxcrt::UnownedPtr.412", %"class.fxcrt::UnownedPtr.397", %class.CFX_Matrix, %class.CPDF_ClipPath, %"class.fxcrt::UnownedPtr.413", %"class.fxcrt::UnownedPtr.413", %class.CPDF_GraphicStates, %"class.std::__1::unique_ptr.414", %"class.fxcrt::UnownedPtr.420", %class.CPDF_Transparency, i8, i8, i8, i8, i8, i8, i32, i32, i32, [4 x i8] }>, <{ { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", [4 x i8], %"class.fxcrt::RetainPtr.374" }, %"class.fxcrt::RetainPtr.398", %"class.fxcrt::RetainPtr.398", %"class.std::__1::vector.404", %"class.fxcrt::UnownedPtr.412", %"class.fxcrt::UnownedPtr.397", %class.CFX_Matrix, %class.CPDF_ClipPath, %"class.fxcrt::UnownedPtr.413", %"class.fxcrt::UnownedPtr.413", %class.CPDF_GraphicStates, %"class.std::__1::unique_ptr.414", %"class.fxcrt::UnownedPtr.420", %class.CPDF_Transparency, i8, i8, i8, i8, i8, i8, i32, i32, i32, [4 x i8] }>* @__const._ZN18CPDF_RenderContext6RenderEP16CFX_RenderDevicePK15CPDF_PageObjectPK18CPDF_RenderOptionsPK10CFX_Matrix.status, i64 0, i32 0, i32 0), i64 232, i1 false)
  call void @_ZN17CPDF_RenderStatusC1EP18CPDF_RenderContextP16CFX_RenderDevice(%class.CPDF_RenderStatus* nonnull %7, %class.CPDF_RenderContext* %0, %class.CFX_RenderDevice* %1) #9
  br i1 %18, label %73, label %48

48:                                               ; preds = %46
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %19, i64 28, i1 false) #9
  %49 = load %class.CPDF_OCContext*, %class.CPDF_OCContext** %20, align 8
  %50 = load %class.CPDF_OCContext*, %class.CPDF_OCContext** %21, align 8
  %51 = icmp eq %class.CPDF_OCContext* %49, %50
  br i1 %51, label %73, label %52

52:                                               ; preds = %48
  %53 = icmp eq %class.CPDF_OCContext* %50, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %class.CPDF_OCContext, %class.CPDF_OCContext* %50, i64 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = add nsw i64 %56, 1
  store i64 %57, i64* %55, align 8
  %58 = load %class.CPDF_OCContext*, %class.CPDF_OCContext** %20, align 8
  br label %59

59:                                               ; preds = %54, %52
  %60 = phi %class.CPDF_OCContext* [ %58, %54 ], [ %49, %52 ]
  store %class.CPDF_OCContext* %50, %class.CPDF_OCContext** %20, align 8
  %61 = icmp eq %class.CPDF_OCContext* %60, null
  br i1 %61, label %73, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %class.CPDF_OCContext, %class.CPDF_OCContext* %60, i64 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = add nsw i64 %64, -1
  store i64 %65, i64* %63, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %62
  %68 = getelementptr inbounds %class.CPDF_OCContext, %class.CPDF_OCContext* %60, i64 0, i32 0
  %69 = bitcast %class.CPDF_OCContext* %60 to void (%"class.fxcrt::Retainable"*)***
  %70 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %70, i64 1
  %72 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %71, align 8
  call void %72(%"class.fxcrt::Retainable"* nonnull %68) #9
  br label %73

73:                                               ; preds = %67, %62, %59, %48, %46
  store %class.CPDF_PageObject* %2, %class.CPDF_PageObject** %22, align 8
  %74 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %47, i64 0, i32 0, i32 0
  %75 = load %class.CPDF_PageObjectHolder*, %class.CPDF_PageObjectHolder** %74, align 8
  %76 = getelementptr inbounds %class.CPDF_PageObjectHolder, %class.CPDF_PageObjectHolder* %75, i64 0, i32 6
  %77 = bitcast %class.CPDF_Transparency* %76 to i16*
  %78 = load i16, i16* %77, align 1
  store i16 %78, i16* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #9
  %79 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %47, i64 0, i32 1
  %80 = bitcast %class.CFX_Matrix* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %25, i8* align 4 %80, i64 24, i1 false)
  br i1 %32, label %123, label %81

81:                                               ; preds = %73
  %82 = load float, float* %26, align 16, !noalias !2
  %83 = load float, float* %27, align 4, !noalias !2
  %84 = load <2 x float>, <2 x float>* %43, align 4, !noalias !2
  %85 = shufflevector <2 x float> %84, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %86 = load <2 x float>, <2 x float>* %44, align 4, !noalias !2
  %87 = shufflevector <2 x float> %86, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %88 = load float, float* %28, align 8, !noalias !2
  %89 = load float, float* %29, align 4, !noalias !2
  %90 = insertelement <4 x float> undef, float %82, i32 0
  %91 = shufflevector <4 x float> %90, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %92 = extractelement <2 x float> %84, i32 0
  %93 = extractelement <2 x float> %84, i32 1
  %94 = shufflevector <4 x float> %91, <4 x float> %85, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %95 = insertelement <4 x float> undef, float %92, i32 0
  %96 = insertelement <4 x float> %95, float %93, i32 1
  %97 = insertelement <4 x float> %96, float %88, i32 2
  %98 = insertelement <4 x float> %97, float %88, i32 3
  %99 = fmul <4 x float> %94, %98
  %100 = insertelement <4 x float> undef, float %83, i32 0
  %101 = shufflevector <4 x float> %100, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %102 = extractelement <2 x float> %86, i32 0
  %103 = extractelement <2 x float> %86, i32 1
  %104 = shufflevector <4 x float> %101, <4 x float> %87, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %105 = insertelement <4 x float> undef, float %102, i32 0
  %106 = insertelement <4 x float> %105, float %103, i32 1
  %107 = insertelement <4 x float> %106, float %89, i32 2
  %108 = insertelement <4 x float> %107, float %89, i32 3
  %109 = fmul <4 x float> %104, %108
  %110 = fadd <4 x float> %99, %109
  %111 = load float, float* %30, align 16, !noalias !2
  %112 = fmul float %92, %111
  %113 = load float, float* %31, align 4, !noalias !2
  %114 = fmul float %102, %113
  %115 = fadd float %112, %114
  %116 = load float, float* %34, align 4, !noalias !2
  %117 = fadd float %116, %115
  %118 = fmul float %93, %111
  %119 = fmul float %103, %113
  %120 = fadd float %118, %119
  %121 = load float, float* %35, align 4, !noalias !2
  %122 = fadd float %120, %121
  store <4 x float> %110, <4 x float>* %45, align 16
  store float %117, float* %30, align 16
  store float %122, float* %31, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* nonnull align 4 %38, i64 24, i1 false) #9
  br label %123

123:                                              ; preds = %73, %81
  call void @_ZN17CPDF_RenderStatus10InitializeEPKS_PK18CPDF_GraphicStates(%class.CPDF_RenderStatus* nonnull %7, %class.CPDF_RenderStatus* null, %class.CPDF_GraphicStates* null) #9
  %124 = load %class.CPDF_PageObjectHolder*, %class.CPDF_PageObjectHolder** %74, align 8
  call void @_ZN17CPDF_RenderStatus16RenderObjectListEPK21CPDF_PageObjectHolderRK10CFX_Matrix(%class.CPDF_RenderStatus* nonnull %7, %class.CPDF_PageObjectHolder* %124, %class.CFX_Matrix* nonnull dereferenceable(24) %8) #9
  %125 = load i8, i8* %39, align 2, !range !5
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %130, label %127

127:                                              ; preds = %123
  %128 = load %class.CPDF_PageRenderCache*, %class.CPDF_PageRenderCache** %41, align 8
  %129 = call i32 @_ZNK18CPDF_RenderOptions17GetCacheSizeLimitEv(%class.CPDF_RenderOptions* nonnull %40) #9
  call void @_ZN20CPDF_PageRenderCache17CacheOptimizationEi(%class.CPDF_PageRenderCache* %128, i32 %129) #9
  br label %130

130:                                              ; preds = %123, %127
  %131 = load i8, i8* %42, align 2, !range !5
  %132 = icmp ne i8 %131, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #9
  call void @_ZN17CPDF_RenderStatusD1Ev(%class.CPDF_RenderStatus* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %17) #9
  call void @_ZN16CFX_RenderDevice13StateRestorerD1Ev(%"class.CFX_RenderDevice::StateRestorer"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  %133 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %47, i64 1
  %134 = icmp eq %"class.CPDF_RenderContext::Layer"* %133, %12
  %135 = or i1 %132, %134
  br i1 %135, label %136, label %46

136:                                              ; preds = %130, %5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN23CFX_DefaultRenderDeviceD1Ev(%class.CFX_DefaultRenderDevice*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_RenderContext11AppendLayerEP21CPDF_PageObjectHolderRK10CFX_Matrix(%class.CPDF_RenderContext*, %class.CPDF_PageObjectHolder*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %class.CPDF_PageObjectHolder* %1 to i64
  %5 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %0, i64 0, i32 3
  %6 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %0, i64 0, i32 3, i32 0, i32 1
  %7 = load %"class.CPDF_RenderContext::Layer"*, %"class.CPDF_RenderContext::Layer"** %6, align 8
  %8 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %9 = load %"class.CPDF_RenderContext::Layer"*, %"class.CPDF_RenderContext::Layer"** %8, align 8
  %10 = icmp ult %"class.CPDF_RenderContext::Layer"* %7, %9
  %11 = ptrtoint %"class.CPDF_RenderContext::Layer"* %9 to i64
  br i1 %10, label %12, label %20

12:                                               ; preds = %3
  %13 = bitcast %"class.CPDF_RenderContext::Layer"* %7 to i64*
  store i64 %4, i64* %13, align 8
  %14 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %7, i64 0, i32 1
  %15 = bitcast %class.CFX_Matrix* %14 to i8*
  %16 = bitcast %class.CFX_Matrix* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 4 %16, i64 24, i1 false) #9
  %17 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %7, i64 1
  %18 = ptrtoint %"class.CPDF_RenderContext::Layer"* %17 to i64
  %19 = bitcast %"class.CPDF_RenderContext::Layer"** %6 to i64*
  store i64 %18, i64* %19, align 8
  br label %119

20:                                               ; preds = %3
  %21 = ptrtoint %"class.CPDF_RenderContext::Layer"* %7 to i64
  %22 = bitcast %"class.CPDF_RenderContext::Layer"** %6 to i64*
  %23 = bitcast %"class.std::__1::vector.230"* %5 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %21, %24
  %26 = ashr exact i64 %25, 5
  %27 = add nsw i64 %26, 1
  %28 = icmp ugt i64 %27, 576460752303423487
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = bitcast %"class.std::__1::vector.230"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %30) #11
  unreachable

31:                                               ; preds = %20
  %32 = bitcast %"class.CPDF_RenderContext::Layer"** %8 to i64*
  %33 = sub i64 %11, %24
  %34 = ashr exact i64 %33, 5
  %35 = icmp ult i64 %34, 288230376151711743
  br i1 %35, label %36, label %44

36:                                               ; preds = %31
  %37 = ashr exact i64 %33, 4
  %38 = icmp ult i64 %37, %27
  %39 = select i1 %38, i64 %27, i64 %37
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %36
  %42 = icmp ugt i64 %39, 576460752303423487
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  tail call void @abort() #11
  unreachable

44:                                               ; preds = %41, %31
  %45 = phi i64 [ %39, %41 ], [ 576460752303423487, %31 ]
  %46 = shl i64 %45, 5
  %47 = tail call i8* @_Znwm(i64 %46) #10
  %48 = bitcast i8* %47 to %"class.CPDF_RenderContext::Layer"*
  br label %49

49:                                               ; preds = %44, %36
  %50 = phi i64 [ %45, %44 ], [ 0, %36 ]
  %51 = phi %"class.CPDF_RenderContext::Layer"* [ %48, %44 ], [ null, %36 ]
  %52 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %51, i64 %26
  %53 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %51, i64 %50
  %54 = ptrtoint %"class.CPDF_RenderContext::Layer"* %53 to i64
  %55 = bitcast %"class.CPDF_RenderContext::Layer"* %52 to i64*
  store i64 %4, i64* %55, align 8
  %56 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %51, i64 %26, i32 1
  %57 = bitcast %class.CFX_Matrix* %56 to i8*
  %58 = bitcast %class.CFX_Matrix* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 4 %58, i64 24, i1 false) #9
  %59 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %52, i64 1
  %60 = ptrtoint %"class.CPDF_RenderContext::Layer"* %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.230", %"class.std::__1::vector.230"* %5, i64 0, i32 0, i32 0
  %62 = load %"class.CPDF_RenderContext::Layer"*, %"class.CPDF_RenderContext::Layer"** %61, align 8
  %63 = ptrtoint %"class.CPDF_RenderContext::Layer"* %62 to i64
  %64 = load %"class.CPDF_RenderContext::Layer"*, %"class.CPDF_RenderContext::Layer"** %6, align 8
  %65 = icmp eq %"class.CPDF_RenderContext::Layer"* %64, %62
  br i1 %65, label %112, label %66

66:                                               ; preds = %49
  %67 = getelementptr %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %64, i64 -1, i32 0, i32 0
  %68 = ptrtoint %class.CPDF_PageObjectHolder** %67 to i64
  %69 = sub i64 %68, %63
  %70 = lshr i64 %69, 5
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 3
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %84, label %74

74:                                               ; preds = %66, %74
  %75 = phi %"class.CPDF_RenderContext::Layer"* [ %78, %74 ], [ %52, %66 ]
  %76 = phi %"class.CPDF_RenderContext::Layer"* [ %79, %74 ], [ %64, %66 ]
  %77 = phi i64 [ %82, %74 ], [ %72, %66 ]
  %78 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %75, i64 -1
  %79 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %76, i64 -1
  %80 = bitcast %"class.CPDF_RenderContext::Layer"* %78 to i8*
  %81 = bitcast %"class.CPDF_RenderContext::Layer"* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 32, i1 false) #9
  %82 = add i64 %77, -1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %74, !llvm.loop !6

84:                                               ; preds = %74, %66
  %85 = phi %"class.CPDF_RenderContext::Layer"* [ undef, %66 ], [ %78, %74 ]
  %86 = phi %"class.CPDF_RenderContext::Layer"* [ %52, %66 ], [ %78, %74 ]
  %87 = phi %"class.CPDF_RenderContext::Layer"* [ %64, %66 ], [ %79, %74 ]
  %88 = icmp ult i64 %69, 96
  br i1 %88, label %109, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.CPDF_RenderContext::Layer"* [ %104, %89 ], [ %86, %84 ]
  %91 = phi %"class.CPDF_RenderContext::Layer"* [ %105, %89 ], [ %87, %84 ]
  %92 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %90, i64 -1
  %93 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %91, i64 -1
  %94 = bitcast %"class.CPDF_RenderContext::Layer"* %92 to i8*
  %95 = bitcast %"class.CPDF_RenderContext::Layer"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 32, i1 false) #9
  %96 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %90, i64 -2
  %97 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %91, i64 -2
  %98 = bitcast %"class.CPDF_RenderContext::Layer"* %96 to i8*
  %99 = bitcast %"class.CPDF_RenderContext::Layer"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 32, i1 false) #9
  %100 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %90, i64 -3
  %101 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %91, i64 -3
  %102 = bitcast %"class.CPDF_RenderContext::Layer"* %100 to i8*
  %103 = bitcast %"class.CPDF_RenderContext::Layer"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 32, i1 false) #9
  %104 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %90, i64 -4
  %105 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %91, i64 -4
  %106 = bitcast %"class.CPDF_RenderContext::Layer"* %104 to i8*
  %107 = bitcast %"class.CPDF_RenderContext::Layer"* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 32, i1 false) #9
  %108 = icmp eq %"class.CPDF_RenderContext::Layer"* %105, %62
  br i1 %108, label %109, label %89

109:                                              ; preds = %89, %84
  %110 = phi %"class.CPDF_RenderContext::Layer"* [ %85, %84 ], [ %104, %89 ]
  %111 = load i64, i64* %23, align 8
  br label %112

112:                                              ; preds = %49, %109
  %113 = phi %"class.CPDF_RenderContext::Layer"* [ %110, %109 ], [ %52, %49 ]
  %114 = phi i64 [ %111, %109 ], [ %63, %49 ]
  %115 = ptrtoint %"class.CPDF_RenderContext::Layer"* %113 to i64
  store i64 %115, i64* %23, align 8
  store i64 %60, i64* %22, align 8
  store i64 %54, i64* %32, align 8
  %116 = icmp eq i64 %114, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %112
  %118 = inttoptr i64 %114 to i8*
  tail call void @_ZdlPv(i8* %118) #10
  br label %119

119:                                              ; preds = %117, %112, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_RenderContext6RenderEP16CFX_RenderDevicePK18CPDF_RenderOptionsPK10CFX_Matrix(%class.CPDF_RenderContext*, %class.CFX_RenderDevice*, %class.CPDF_RenderOptions* readonly, %class.CFX_Matrix* readonly) local_unnamed_addr #0 align 2 {
  tail call void @_ZN18CPDF_RenderContext6RenderEP16CFX_RenderDevicePK15CPDF_PageObjectPK18CPDF_RenderOptionsPK10CFX_Matrix(%class.CPDF_RenderContext* %0, %class.CFX_RenderDevice* %1, %class.CPDF_PageObject* null, %class.CPDF_RenderOptions* %2, %class.CFX_Matrix* %3)
  ret void
}

declare void @_ZN16CFX_RenderDevice13StateRestorerC1EPS_(%"class.CFX_RenderDevice::StateRestorer"*, %class.CFX_RenderDevice*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN17CPDF_RenderStatusC1EP18CPDF_RenderContextP16CFX_RenderDevice(%class.CPDF_RenderStatus*, %class.CPDF_RenderContext*, %class.CFX_RenderDevice*) unnamed_addr #2

declare void @_ZN17CPDF_RenderStatus10InitializeEPKS_PK18CPDF_GraphicStates(%class.CPDF_RenderStatus*, %class.CPDF_RenderStatus*, %class.CPDF_GraphicStates*) local_unnamed_addr #2

declare void @_ZN17CPDF_RenderStatus16RenderObjectListEPK21CPDF_PageObjectHolderRK10CFX_Matrix(%class.CPDF_RenderStatus*, %class.CPDF_PageObjectHolder*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN20CPDF_PageRenderCache17CacheOptimizationEi(%class.CPDF_PageRenderCache*, i32) local_unnamed_addr #2

declare i32 @_ZNK18CPDF_RenderOptions17GetCacheSizeLimitEv(%class.CPDF_RenderOptions*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN17CPDF_RenderStatusD1Ev(%class.CPDF_RenderStatus*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN16CFX_RenderDevice13StateRestorerD1Ev(%"class.CFX_RenderDevice::StateRestorer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_RenderContext5LayerC2EP21CPDF_PageObjectHolderRK10CFX_Matrix(%"class.CPDF_RenderContext::Layer"* nocapture, %class.CPDF_PageObjectHolder*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %0, i64 0, i32 0, i32 0
  store %class.CPDF_PageObjectHolder* %1, %class.CPDF_PageObjectHolder** %4, align 8
  %5 = getelementptr inbounds %"class.CPDF_RenderContext::Layer", %"class.CPDF_RenderContext::Layer"* %0, i64 0, i32 1
  %6 = bitcast %class.CFX_Matrix* %5 to i8*
  %7 = bitcast %class.CFX_Matrix* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 4 %7, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_RenderContext5LayerC2ERKS0_(%"class.CPDF_RenderContext::Layer"* nocapture, %"class.CPDF_RenderContext::Layer"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.CPDF_RenderContext::Layer"* %0 to i8*
  %4 = bitcast %"class.CPDF_RenderContext::Layer"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN18CPDF_RenderContext5LayerD2Ev(%"class.CPDF_RenderContext::Layer"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

declare zeroext i1 @_ZN16CFX_RenderDevice17FillRectWithBlendERK7FX_RECTj9BlendMode(%class.CFX_RenderDevice*, %struct.FX_RECT* dereferenceable(16), i32, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!4 = distinct !{!4, !"_ZNK10CFX_MatrixmlERKS_"}
!5 = !{i8 0, i8 2}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
