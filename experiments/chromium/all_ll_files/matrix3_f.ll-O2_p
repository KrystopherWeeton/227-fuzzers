; ModuleID = '../../ui/gfx/geometry/matrix3_f.cc'
source_filename = "../../ui/gfx/geometry/matrix3_f.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Matrix3F" = type { [9 x float] }
%"class.gfx::Vector3dF" = type { float, float, float }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }

@.str = private unnamed_addr constant [79 x i8] c"[[%+0.4f, %+0.4f, %+0.4f], [%+0.4f, %+0.4f, %+0.4f], [%+0.4f, %+0.4f, %+0.4f]]\00", align 1

@_ZN3gfx8Matrix3FC1Ev = hidden unnamed_addr alias void (%"class.gfx::Matrix3F"*), void (%"class.gfx::Matrix3F"*)* @_ZN3gfx8Matrix3FC2Ev
@_ZN3gfx8Matrix3FD1Ev = hidden unnamed_addr alias void (%"class.gfx::Matrix3F"*), void (%"class.gfx::Matrix3F"*)* @_ZN3gfx8Matrix3FD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gfx8Matrix3FC2Ev(%"class.gfx::Matrix3F"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gfx8Matrix3FD2Ev(%"class.gfx::Matrix3F"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8Matrix3F5ZerosEv(%"class.gfx::Matrix3F"* noalias nocapture sret) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.gfx::Matrix3F"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 36, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8Matrix3F4OnesEv(%"class.gfx::Matrix3F"* noalias nocapture sret) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.gfx::Matrix3F"* %0 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %2, align 4
  %3 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 4
  %4 = bitcast float* %3 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %4, align 4
  %5 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8Matrix3F8IdentityEv(%"class.gfx::Matrix3F"* noalias nocapture sret) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.gfx::Matrix3F"* %0 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %2, align 4
  %3 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 4
  %4 = bitcast float* %3 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %4, align 4
  %5 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx8Matrix3F16FromOuterProductERKNS_9Vector3dFES3_(%"class.gfx::Matrix3F"* noalias nocapture sret, %"class.gfx::Vector3dF"* nocapture readonly dereferenceable(12), %"class.gfx::Vector3dF"* nocapture readonly dereferenceable(12)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %1, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %2, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %2, i64 0, i32 1
  %9 = bitcast float* %8 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = shufflevector <2 x float> %10, <2 x float> undef, <4 x i32> <i32 0, i32 undef, i32 undef, i32 undef>
  %12 = shufflevector <2 x float> %10, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %13 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %1, i64 0, i32 1
  %14 = insertelement <2 x float> undef, float %5, i32 0
  %15 = insertelement <2 x float> %14, float %7, i32 1
  %16 = shufflevector <2 x float> %15, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 0, i32 1>
  %17 = insertelement <4 x float> undef, float %7, i32 0
  %18 = extractelement <2 x float> %10, i32 0
  %19 = extractelement <2 x float> %10, i32 1
  %20 = shufflevector <4 x float> %17, <4 x float> %12, <4 x i32> <i32 0, i32 4, i32 5, i32 undef>
  %21 = bitcast float* %13 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 4
  %23 = shufflevector <2 x float> %22, <2 x float> undef, <4 x i32> <i32 0, i32 undef, i32 undef, i32 undef>
  %24 = shufflevector <2 x float> %22, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %25 = shufflevector <4 x float> %20, <4 x float> %23, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  %26 = fmul <4 x float> %16, %25
  %27 = insertelement <4 x float> undef, float %18, i32 0
  %28 = insertelement <4 x float> %27, float %19, i32 1
  %29 = insertelement <4 x float> %28, float %7, i32 2
  %30 = shufflevector <4 x float> %29, <4 x float> %11, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  %31 = fmul <4 x float> %30, %24
  %32 = extractelement <2 x float> %22, i32 1
  %33 = fmul float %19, %32
  %34 = bitcast %"class.gfx::Matrix3F"* %0 to <4 x float>*
  store <4 x float> %26, <4 x float>* %34, align 4
  %35 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 4
  %36 = bitcast float* %35 to <4 x float>*
  store <4 x float> %31, <4 x float>* %36, align 4
  %37 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 8
  store float %33, float* %37, align 4
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx8Matrix3F7IsEqualERKS0_(%"class.gfx::Matrix3F"* nocapture readonly, %"class.gfx::Matrix3F"* nocapture readonly dereferenceable(36)) local_unnamed_addr #3 align 2 {
  %3 = bitcast %"class.gfx::Matrix3F"* %0 to i8*
  %4 = bitcast %"class.gfx::Matrix3F"* %1 to i8*
  %5 = tail call i32 @bcmp(i8* %3, i8* %4, i64 36)
  %6 = icmp eq i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx8Matrix3F6IsNearERKS0_f(%"class.gfx::Matrix3F"* nocapture readonly, %"class.gfx::Matrix3F"* nocapture readonly dereferenceable(36), float) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 0
  %7 = load float, float* %6, align 4
  %8 = fsub float %5, %7
  %9 = tail call float @llvm.fabs.f32(float %8) #8
  %10 = fcmp ogt float %9, %2
  br i1 %10, label %19, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 1
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 1
  %15 = load float, float* %14, align 4
  %16 = fsub float %13, %15
  %17 = tail call float @llvm.fabs.f32(float %16) #8
  %18 = fcmp ogt float %17, %2
  br i1 %18, label %19, label %21

19:                                               ; preds = %77, %69, %61, %53, %45, %37, %29, %21, %11, %3
  %20 = phi i1 [ false, %3 ], [ false, %11 ], [ false, %21 ], [ false, %29 ], [ false, %37 ], [ false, %45 ], [ false, %53 ], [ false, %61 ], [ false, %69 ], [ true, %77 ]
  ret i1 %20

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 2
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 2
  %25 = load float, float* %24, align 4
  %26 = fsub float %23, %25
  %27 = tail call float @llvm.fabs.f32(float %26) #8
  %28 = fcmp ogt float %27, %2
  br i1 %28, label %19, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 3
  %31 = load float, float* %30, align 4
  %32 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 3
  %33 = load float, float* %32, align 4
  %34 = fsub float %31, %33
  %35 = tail call float @llvm.fabs.f32(float %34) #8
  %36 = fcmp ogt float %35, %2
  br i1 %36, label %19, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 4
  %39 = load float, float* %38, align 4
  %40 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 4
  %41 = load float, float* %40, align 4
  %42 = fsub float %39, %41
  %43 = tail call float @llvm.fabs.f32(float %42) #8
  %44 = fcmp ogt float %43, %2
  br i1 %44, label %19, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 5
  %47 = load float, float* %46, align 4
  %48 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 5
  %49 = load float, float* %48, align 4
  %50 = fsub float %47, %49
  %51 = tail call float @llvm.fabs.f32(float %50) #8
  %52 = fcmp ogt float %51, %2
  br i1 %52, label %19, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 6
  %55 = load float, float* %54, align 4
  %56 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 6
  %57 = load float, float* %56, align 4
  %58 = fsub float %55, %57
  %59 = tail call float @llvm.fabs.f32(float %58) #8
  %60 = fcmp ogt float %59, %2
  br i1 %60, label %19, label %61

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 7
  %63 = load float, float* %62, align 4
  %64 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 7
  %65 = load float, float* %64, align 4
  %66 = fsub float %63, %65
  %67 = tail call float @llvm.fabs.f32(float %66) #8
  %68 = fcmp ogt float %67, %2
  br i1 %68, label %19, label %69

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 8
  %71 = load float, float* %70, align 4
  %72 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 8
  %73 = load float, float* %72, align 4
  %74 = fsub float %71, %73
  %75 = tail call float @llvm.fabs.f32(float %74) #8
  %76 = fcmp ogt float %75, %2
  br i1 %76, label %19, label %77

77:                                               ; preds = %69
  br label %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx8Matrix3F3AddERKS0_(%"class.gfx::Matrix3F"* noalias nocapture sret, %"class.gfx::Matrix3F"* nocapture readonly, %"class.gfx::Matrix3F"* nocapture readonly dereferenceable(36)) local_unnamed_addr #1 align 2 {
  %4 = bitcast %"class.gfx::Matrix3F"* %1 to <4 x float>*
  %5 = load <4 x float>, <4 x float>* %4, align 4
  %6 = bitcast %"class.gfx::Matrix3F"* %2 to <4 x float>*
  %7 = load <4 x float>, <4 x float>* %6, align 4
  %8 = fadd <4 x float> %5, %7
  %9 = bitcast %"class.gfx::Matrix3F"* %0 to <4 x float>*
  store <4 x float> %8, <4 x float>* %9, align 4
  %10 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 4
  %11 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %2, i64 0, i32 0, i64 4
  %12 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 4
  %13 = bitcast float* %10 to <4 x float>*
  %14 = load <4 x float>, <4 x float>* %13, align 4
  %15 = bitcast float* %11 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 4
  %17 = fadd <4 x float> %14, %16
  %18 = bitcast float* %12 to <4 x float>*
  store <4 x float> %17, <4 x float>* %18, align 4
  %19 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 8
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %2, i64 0, i32 0, i64 8
  %22 = load float, float* %21, align 4
  %23 = fadd float %20, %22
  %24 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 8
  store float %23, float* %24, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx8Matrix3F8SubtractERKS0_(%"class.gfx::Matrix3F"* noalias nocapture sret, %"class.gfx::Matrix3F"* nocapture readonly, %"class.gfx::Matrix3F"* nocapture readonly dereferenceable(36)) local_unnamed_addr #1 align 2 {
  %4 = bitcast %"class.gfx::Matrix3F"* %1 to <4 x float>*
  %5 = load <4 x float>, <4 x float>* %4, align 4
  %6 = bitcast %"class.gfx::Matrix3F"* %2 to <4 x float>*
  %7 = load <4 x float>, <4 x float>* %6, align 4
  %8 = fsub <4 x float> %5, %7
  %9 = bitcast %"class.gfx::Matrix3F"* %0 to <4 x float>*
  store <4 x float> %8, <4 x float>* %9, align 4
  %10 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 4
  %11 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %2, i64 0, i32 0, i64 4
  %12 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 4
  %13 = bitcast float* %10 to <4 x float>*
  %14 = load <4 x float>, <4 x float>* %13, align 4
  %15 = bitcast float* %11 to <4 x float>*
  %16 = load <4 x float>, <4 x float>* %15, align 4
  %17 = fsub <4 x float> %14, %16
  %18 = bitcast float* %12 to <4 x float>*
  store <4 x float> %17, <4 x float>* %18, align 4
  %19 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 8
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %2, i64 0, i32 0, i64 8
  %22 = load float, float* %21, align 4
  %23 = fsub float %20, %22
  %24 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 8
  store float %23, float* %24, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx8Matrix3F7InverseEv(%"class.gfx::Matrix3F"* noalias nocapture sret, %"class.gfx::Matrix3F"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.gfx::Matrix3F"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 36, i1 false) #8, !alias.scope !2
  %4 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 4
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 7
  %9 = bitcast float* %8 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = extractelement <2 x float> %10, i32 1
  %12 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 5
  %13 = load float, float* %12, align 4
  %14 = fpext float %13 to double
  %15 = extractelement <2 x float> %10, i32 0
  %16 = insertelement <2 x float> undef, float %15, i32 0
  %17 = insertelement <2 x float> %16, float %7, i32 1
  %18 = fpext <2 x float> %17 to <2 x double>
  %19 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 1
  %20 = load float, float* %19, align 4
  %21 = fpext float %20 to double
  %22 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 6
  %23 = load float, float* %22, align 4
  %24 = fpext float %23 to double
  %25 = fmul double %14, %24
  %26 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 3
  %27 = load float, float* %26, align 4
  %28 = insertelement <2 x float> %10, float %27, i32 0
  %29 = fpext <2 x float> %28 to <2 x double>
  %30 = extractelement <2 x double> %29, i32 0
  %31 = extractelement <2 x double> %29, i32 1
  %32 = fmul double %31, %30
  %33 = fsub double %25, %32
  %34 = fmul double %33, %21
  %35 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 2
  %36 = load float, float* %35, align 4
  %37 = insertelement <2 x float> undef, float %36, i32 0
  %38 = insertelement <2 x float> %37, float %5, i32 1
  %39 = fpext <2 x float> %38 to <2 x double>
  %40 = fmul <2 x double> %18, %29
  %41 = extractelement <2 x double> %18, i32 1
  %42 = insertelement <2 x double> undef, double %41, i32 0
  %43 = insertelement <2 x double> %42, double %14, i32 1
  %44 = insertelement <2 x double> undef, double %24, i32 0
  %45 = shufflevector <2 x double> %44, <2 x double> %18, <2 x i32> <i32 0, i32 2>
  %46 = fmul <2 x double> %43, %45
  %47 = fsub <2 x double> %40, %46
  %48 = fmul <2 x double> %47, %39
  %49 = extractelement <2 x double> %48, i32 1
  %50 = fadd double %49, %34
  %51 = extractelement <2 x double> %48, i32 0
  %52 = fadd double %51, %50
  %53 = tail call double @llvm.fabs.f64(double %52) #8
  %54 = fcmp olt double %53, 0x3E80000000000000
  br i1 %54, label %111, label %55

55:                                               ; preds = %2
  %56 = insertelement <4 x float> undef, float %7, i32 0
  %57 = insertelement <4 x float> %56, float %15, i32 1
  %58 = insertelement <4 x float> %57, float %13, i32 2
  %59 = insertelement <4 x float> %58, float %13, i32 3
  %60 = shufflevector <2 x float> %10, <2 x float> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %61 = insertelement <4 x float> %60, float %36, i32 1
  %62 = insertelement <4 x float> %61, float %20, i32 2
  %63 = insertelement <4 x float> %62, float %23, i32 3
  %64 = fmul <4 x float> %59, %63
  %65 = insertelement <4 x float> undef, float %13, i32 0
  %66 = insertelement <4 x float> %65, float %20, i32 1
  %67 = insertelement <4 x float> %66, float %7, i32 2
  %68 = insertelement <4 x float> %67, float %11, i32 3
  %69 = insertelement <4 x float> undef, float %15, i32 0
  %70 = insertelement <4 x float> %69, float %11, i32 1
  %71 = insertelement <4 x float> %70, float %36, i32 2
  %72 = insertelement <4 x float> %71, float %27, i32 3
  %73 = fmul <4 x float> %68, %72
  %74 = fsub <4 x float> %64, %73
  %75 = fpext <4 x float> %74 to <4 x double>
  %76 = insertelement <4 x double> undef, double %52, i32 0
  %77 = shufflevector <4 x double> %76, <4 x double> undef, <4 x i32> zeroinitializer
  %78 = fdiv <4 x double> %75, %77
  %79 = fptrunc <4 x double> %78 to <4 x float>
  %80 = insertelement <4 x float> undef, float %5, i32 0
  %81 = insertelement <4 x float> %80, float %36, i32 1
  %82 = insertelement <4 x float> %81, float %15, i32 2
  %83 = insertelement <4 x float> %82, float %20, i32 3
  %84 = insertelement <4 x float> %60, float %27, i32 1
  %85 = insertelement <4 x float> %84, float %27, i32 2
  %86 = insertelement <4 x float> %85, float %23, i32 3
  %87 = fmul <4 x float> %83, %86
  %88 = insertelement <4 x float> undef, float %36, i32 0
  %89 = insertelement <4 x float> %88, float %5, i32 1
  %90 = insertelement <4 x float> %89, float %7, i32 2
  %91 = insertelement <4 x float> %90, float %5, i32 3
  %92 = insertelement <4 x float> undef, float %23, i32 0
  %93 = insertelement <4 x float> %92, float %13, i32 1
  %94 = insertelement <4 x float> %93, float %23, i32 2
  %95 = insertelement <4 x float> %94, float %15, i32 3
  %96 = fmul <4 x float> %91, %95
  %97 = fsub <4 x float> %87, %96
  %98 = fpext <4 x float> %97 to <4 x double>
  %99 = fdiv <4 x double> %98, %77
  %100 = fptrunc <4 x double> %99 to <4 x float>
  %101 = fmul float %5, %7
  %102 = fmul float %20, %27
  %103 = fsub float %101, %102
  %104 = fpext float %103 to double
  %105 = fdiv double %104, %52
  %106 = fptrunc double %105 to float
  %107 = bitcast %"class.gfx::Matrix3F"* %0 to <4 x float>*
  store <4 x float> %79, <4 x float>* %107, align 4
  %108 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 4
  %109 = bitcast float* %108 to <4 x float>*
  store <4 x float> %100, <4 x float>* %109, align 4
  %110 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 8
  store float %106, float* %110, align 4
  br label %111

111:                                              ; preds = %55, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx8Matrix3F9TransposeEv(%"class.gfx::Matrix3F"* noalias nocapture sret, %"class.gfx::Matrix3F"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.gfx::Matrix3F"* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 3
  %6 = bitcast float* %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 6
  %9 = bitcast float* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 1
  %12 = bitcast float* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 4
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 7
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 2
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 5
  %24 = bitcast float* %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 8
  %27 = bitcast float* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = bitcast %"class.gfx::Matrix3F"* %0 to i32*
  store i32 %4, i32* %29, align 4
  %30 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 1
  %31 = bitcast float* %30 to i32*
  store i32 %7, i32* %31, align 4
  %32 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 2
  %33 = bitcast float* %32 to i32*
  store i32 %10, i32* %33, align 4
  %34 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 3
  %35 = bitcast float* %34 to i32*
  store i32 %13, i32* %35, align 4
  %36 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 4
  %37 = bitcast float* %36 to i32*
  store i32 %16, i32* %37, align 4
  %38 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 5
  %39 = bitcast float* %38 to i32*
  store i32 %19, i32* %39, align 4
  %40 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 6
  %41 = bitcast float* %40 to i32*
  store i32 %22, i32* %41, align 4
  %42 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 7
  %43 = bitcast float* %42 to i32*
  store i32 %25, i32* %43, align 4
  %44 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 8
  %45 = bitcast float* %44 to i32*
  store i32 %28, i32* %45, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK3gfx8Matrix3F11DeterminantEv(%"class.gfx::Matrix3F"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 0
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 4
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 8
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 5
  %9 = load float, float* %8, align 4
  %10 = fpext float %9 to double
  %11 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 7
  %12 = load float, float* %11, align 4
  %13 = insertelement <2 x float> undef, float %12, i32 0
  %14 = insertelement <2 x float> %13, float %5, i32 1
  %15 = fpext <2 x float> %14 to <2 x double>
  %16 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 1
  %17 = load float, float* %16, align 4
  %18 = fpext float %17 to double
  %19 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 6
  %20 = load float, float* %19, align 4
  %21 = fpext float %20 to double
  %22 = fmul double %10, %21
  %23 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 3
  %24 = load float, float* %23, align 4
  %25 = insertelement <2 x float> undef, float %24, i32 0
  %26 = insertelement <2 x float> %25, float %7, i32 1
  %27 = fpext <2 x float> %26 to <2 x double>
  %28 = extractelement <2 x double> %27, i32 0
  %29 = extractelement <2 x double> %27, i32 1
  %30 = fmul double %29, %28
  %31 = fsub double %22, %30
  %32 = fmul double %31, %18
  %33 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 2
  %34 = load float, float* %33, align 4
  %35 = insertelement <2 x float> undef, float %34, i32 0
  %36 = insertelement <2 x float> %35, float %3, i32 1
  %37 = fpext <2 x float> %36 to <2 x double>
  %38 = fmul <2 x double> %15, %27
  %39 = extractelement <2 x double> %15, i32 1
  %40 = insertelement <2 x double> undef, double %39, i32 0
  %41 = insertelement <2 x double> %40, double %10, i32 1
  %42 = insertelement <2 x double> undef, double %21, i32 0
  %43 = shufflevector <2 x double> %42, <2 x double> %15, <2 x i32> <i32 0, i32 2>
  %44 = fmul <2 x double> %41, %43
  %45 = fsub <2 x double> %38, %44
  %46 = fmul <2 x double> %45, %37
  %47 = extractelement <2 x double> %46, i32 1
  %48 = fadd double %47, %32
  %49 = extractelement <2 x double> %46, i32 0
  %50 = fadd double %49, %48
  %51 = fptrunc double %50 to float
  ret float %51
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx13MatrixProductERKNS_8Matrix3FES2_(%"class.gfx::Matrix3F"* noalias nocapture sret, %"class.gfx::Matrix3F"* nocapture readonly dereferenceable(36), %"class.gfx::Matrix3F"* nocapture readonly dereferenceable(36)) local_unnamed_addr #1 {
  %4 = alloca %"class.gfx::Vector3dF", align 8
  %5 = alloca %"class.gfx::Vector3dF", align 8
  %6 = bitcast %"class.gfx::Matrix3F"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 36, i1 false) #8, !alias.scope !5
  %7 = bitcast %"class.gfx::Vector3dF"* %4 to i8*
  %8 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %4, i64 0, i32 2
  %9 = bitcast float* %8 to i32*
  %10 = bitcast %"class.gfx::Vector3dF"* %5 to i8*
  %11 = bitcast %"class.gfx::Vector3dF"* %5 to <2 x float>*
  %12 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %5, i64 0, i32 2
  %13 = bitcast float* %12 to i32*
  %14 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %2, i64 0, i32 0, i64 0
  %15 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %2, i64 0, i32 0, i64 3
  %16 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %2, i64 0, i32 0, i64 6
  %17 = bitcast float* %16 to i32*
  %18 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %2, i64 0, i32 0, i64 1
  %19 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %2, i64 0, i32 0, i64 4
  %20 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %2, i64 0, i32 0, i64 7
  %21 = bitcast float* %20 to i32*
  %22 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %2, i64 0, i32 0, i64 2
  %23 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %2, i64 0, i32 0, i64 5
  %24 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %2, i64 0, i32 0, i64 8
  %25 = bitcast float* %24 to i32*
  %26 = bitcast %"class.gfx::Vector3dF"* %4 to i64*
  %27 = bitcast %"class.gfx::Vector3dF"* %4 to i64*
  %28 = bitcast %"class.gfx::Vector3dF"* %4 to i64*
  br label %29

29:                                               ; preds = %29, %3
  %30 = phi i64 [ 0, %3 ], [ %67, %29 ]
  %31 = mul nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 %31
  %33 = add nuw nsw i64 %31, 1
  %34 = add nuw nsw i64 %31, 2
  %35 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 %34
  %36 = bitcast float* %35 to i32*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #8
  %37 = bitcast float* %32 to i64*
  %38 = load i64, i64* %37, align 4
  %39 = load i32, i32* %36, align 4
  store i64 %38, i64* %26, align 8
  store i32 %39, i32* %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %10) #8
  %40 = load float, float* %14, align 4
  %41 = load float, float* %15, align 4
  %42 = load i32, i32* %17, align 4
  %43 = insertelement <2 x float> undef, float %40, i32 0
  %44 = insertelement <2 x float> %43, float %41, i32 1
  store <2 x float> %44, <2 x float>* %11, align 8
  store i32 %42, i32* %13, align 8
  %45 = call float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* nonnull dereferenceable(12) %4, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %5) #8
  %46 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 %31
  store float %45, float* %46, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #8
  %47 = bitcast float* %32 to i64*
  %48 = load i64, i64* %47, align 4
  %49 = load i32, i32* %36, align 4
  store i64 %48, i64* %27, align 8
  store i32 %49, i32* %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %10) #8
  %50 = load float, float* %18, align 4
  %51 = load float, float* %19, align 4
  %52 = load i32, i32* %21, align 4
  %53 = insertelement <2 x float> undef, float %50, i32 0
  %54 = insertelement <2 x float> %53, float %51, i32 1
  store <2 x float> %54, <2 x float>* %11, align 8
  store i32 %52, i32* %13, align 8
  %55 = call float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* nonnull dereferenceable(12) %4, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %5) #8
  %56 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 %33
  store float %55, float* %56, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #8
  %57 = bitcast float* %32 to i64*
  %58 = load i64, i64* %57, align 4
  %59 = load i32, i32* %36, align 4
  store i64 %58, i64* %28, align 8
  store i32 %59, i32* %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %10) #8
  %60 = load float, float* %22, align 4
  %61 = load float, float* %23, align 4
  %62 = load i32, i32* %25, align 4
  %63 = insertelement <2 x float> undef, float %60, i32 0
  %64 = insertelement <2 x float> %63, float %61, i32 1
  store <2 x float> %64, <2 x float>* %11, align 8
  store i32 %62, i32* %13, align 8
  %65 = call float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* nonnull dereferenceable(12) %4, %"class.gfx::Vector3dF"* nonnull dereferenceable(12) %5) #8
  %66 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 %34
  store float %65, float* %66, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #8
  %67 = add nuw nsw i64 %30, 1
  %68 = icmp eq i64 %67, 3
  br i1 %68, label %69, label %29

69:                                               ; preds = %29
  ret void
}

declare float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* dereferenceable(12), %"class.gfx::Vector3dF"* dereferenceable(12)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, float } @_ZN3gfx13MatrixProductERKNS_8Matrix3FERKNS_9Vector3dFE(%"class.gfx::Matrix3F"* nocapture readonly dereferenceable(36), %"class.gfx::Vector3dF"* dereferenceable(12)) local_unnamed_addr #1 {
  %3 = alloca %"class.gfx::Vector3dF", align 8
  %4 = alloca %"class.gfx::Vector3dF", align 8
  %5 = alloca %"class.gfx::Vector3dF", align 8
  %6 = bitcast %"class.gfx::Vector3dF"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #8
  %7 = bitcast %"class.gfx::Matrix3F"* %0 to i64*
  %8 = load i64, i64* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 2
  %10 = bitcast float* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %"class.gfx::Vector3dF"* %3 to i64*
  store i64 %8, i64* %12, align 8
  %13 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %3, i64 0, i32 2
  %14 = bitcast float* %13 to i32*
  store i32 %11, i32* %14, align 8
  %15 = call float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* nonnull dereferenceable(12) %3, %"class.gfx::Vector3dF"* dereferenceable(12) %1) #8
  %16 = bitcast %"class.gfx::Vector3dF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 3
  %18 = bitcast float* %17 to i64*
  %19 = load i64, i64* %18, align 4
  %20 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 5
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %"class.gfx::Vector3dF"* %4 to i64*
  store i64 %19, i64* %23, align 8
  %24 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %4, i64 0, i32 2
  %25 = bitcast float* %24 to i32*
  store i32 %22, i32* %25, align 8
  %26 = call float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* nonnull dereferenceable(12) %4, %"class.gfx::Vector3dF"* dereferenceable(12) %1) #8
  %27 = bitcast %"class.gfx::Vector3dF"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 6
  %29 = bitcast float* %28 to i64*
  %30 = load i64, i64* %29, align 4
  %31 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %0, i64 0, i32 0, i64 8
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = bitcast %"class.gfx::Vector3dF"* %5 to i64*
  store i64 %30, i64* %34, align 8
  %35 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %5, i64 0, i32 2
  %36 = bitcast float* %35 to i32*
  store i32 %33, i32* %36, align 8
  %37 = call float @_ZN3gfx10DotProductERKNS_9Vector3dFES2_(%"class.gfx::Vector3dF"* nonnull dereferenceable(12) %5, %"class.gfx::Vector3dF"* dereferenceable(12) %1) #8
  %38 = insertelement <2 x float> undef, float %15, i32 0
  %39 = insertelement <2 x float> %38, float %26, i32 1
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %27) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #8
  %40 = insertvalue { <2 x float>, float } undef, <2 x float> %39, 0
  %41 = insertvalue { <2 x float>, float } %40, float %37, 1
  ret { <2 x float>, float } %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx8Matrix3F8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::Matrix3F"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 0
  %4 = load float, float* %3, align 4
  %5 = fpext float %4 to double
  %6 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 1
  %7 = load float, float* %6, align 4
  %8 = fpext float %7 to double
  %9 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 2
  %10 = load float, float* %9, align 4
  %11 = fpext float %10 to double
  %12 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 3
  %13 = load float, float* %12, align 4
  %14 = fpext float %13 to double
  %15 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 4
  %16 = load float, float* %15, align 4
  %17 = fpext float %16 to double
  %18 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 5
  %19 = load float, float* %18, align 4
  %20 = fpext float %19 to double
  %21 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 6
  %22 = load float, float* %21, align 4
  %23 = fpext float %22 to double
  %24 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 7
  %25 = load float, float* %24, align 4
  %26 = fpext float %25 to double
  %27 = getelementptr inbounds %"class.gfx::Matrix3F", %"class.gfx::Matrix3F"* %1, i64 0, i32 0, i64 8
  %28 = load float, float* %27, align 4
  %29 = fpext float %28 to double
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str, i64 0, i64 0), double %5, double %8, double %11, double %14, double %17, double %20, double %23, double %26, double %29) #8
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #6

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3gfx8Matrix3F5ZerosEv: argument 0"}
!4 = distinct !{!4, !"_ZN3gfx8Matrix3F5ZerosEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3gfx8Matrix3F5ZerosEv: argument 0"}
!7 = distinct !{!7, !"_ZN3gfx8Matrix3F5ZerosEv"}
