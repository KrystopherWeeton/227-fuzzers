; ModuleID = '../../extensions/browser/api/declarative_net_request/ruleset_matcher.cc'
source_filename = "../../extensions/browser/api/declarative_net_request/ruleset_matcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::declarative_net_request::RulesetMatcher" = type { %"class.std::__1::basic_string", %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRuleset"*, %"class.util::IdType", %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher", %"class.extensions::declarative_net_request::RegexRulesMatcher" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.extensions::declarative_net_request::flat::ExtensionIndexedRuleset" = type { %"class.flatbuffers::Table" }
%"class.flatbuffers::Table" = type { [1 x i8] }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher" = type { %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.flatbuffers::Vector"*, %"class.std::__1::vector", i8, i64 }
%"class.extensions::declarative_net_request::RulesetMatcherBase" = type { i32 (...)**, %"class.std::__1::basic_string", %"class.util::IdType", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.flatbuffers::Vector" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.url_pattern_index::UrlPatternIndexMatcher"*, %"class.std::__1::__compressed_pair.10" }
%"class.url_pattern_index::UrlPatternIndexMatcher" = type { %"struct.url_pattern_index::flat::UrlPatternIndex"*, %"class.absl::optional" }
%"struct.url_pattern_index::flat::UrlPatternIndex" = type { %"class.flatbuffers::Table" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.9 }
%union.anon.9 = type { i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.url_pattern_index::UrlPatternIndexMatcher"* }
%"class.extensions::declarative_net_request::RegexRulesMatcher" = type { %"class.extensions::declarative_net_request::RulesetMatcherBase", %"class.flatbuffers::Vector.15"*, %"class.flatbuffers::Vector"*, i8, %"class.re2::FilteredRE2", %"class.std::__1::map.28", %"class.std::__1::unique_ptr.39" }
%"class.flatbuffers::Vector.15" = type { i32 }
%"class.re2::FilteredRE2" = type { %"class.std::__1::vector.16", i8, %"class.std::__1::unique_ptr" }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"class.re2::RE2"**, %"class.re2::RE2"**, %"class.std::__1::__compressed_pair.20" }
%"class.re2::RE2" = type { %"class.std::__1::basic_string", %"class.re2::RE2::Options", %"class.re2::Regexp"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.re2::Regexp"*, %"class.re2::Prog"*, i32, i8, %"class.re2::Prog"*, %"class.std::__1::map.18"*, %"class.std::__1::map.19"*, %"struct.std::__1::once_flag", %"struct.std::__1::once_flag", %"struct.std::__1::once_flag" }
%"class.re2::RE2::Options" = type { i32, i8, i8, i8, i64, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.re2::Regexp" = type opaque
%"class.re2::Prog" = type opaque
%"class.std::__1::map.18" = type opaque
%"class.std::__1::map.19" = type opaque
%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.re2::RE2"** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.re2::PrefilterTree"* }
%"class.re2::PrefilterTree" = type opaque
%"class.std::__1::map.28" = type { %"class.std::__1::__tree.29" }
%"class.std::__1::__tree.29" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.url_matcher::SubstringSetMatcher"* }
%"class.url_matcher::SubstringSetMatcher" = type <{ %"class.std::__1::vector.42", i8, [7 x i8] }>
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.std::__1::__compressed_pair.51" }
%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode" = type <{ %"class.base::flat_map", i32, i32, i32, [4 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.44" }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.46" }
%"struct.std::__1::pair" = type { i8, i32 }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.flatbuffers::Vector.59" = type { i32 }
%"class.absl::optional.60" = type { %"class.absl::optional_internal::optional_data.61" }
%"class.absl::optional_internal::optional_data.61" = type { %"class.absl::optional_internal::optional_data_base.62" }
%"class.absl::optional_internal::optional_data_base.62" = type { %"class.absl::optional_internal::optional_data_dtor_base.63" }
%"class.absl::optional_internal::optional_data_dtor_base.63" = type { i8, [7 x i8], %union.anon.64 }
%union.anon.64 = type { %"struct.extensions::declarative_net_request::RequestAction" }
%"struct.extensions::declarative_net_request::RequestAction" = type <{ i32, [4 x i8], %"class.absl::optional.65", i32, [4 x i8], i64, %"class.util::IdType", [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::vector.76", %"class.std::__1::vector.76", i8, [7 x i8] }>
%"class.absl::optional.65" = type { %"class.absl::optional_internal::optional_data.66" }
%"class.absl::optional_internal::optional_data.66" = type { %"class.absl::optional_internal::optional_data_base.67" }
%"class.absl::optional_internal::optional_data_base.67" = type { %"class.absl::optional_internal::optional_data_dtor_base.68" }
%"class.absl::optional_internal::optional_data_dtor_base.68" = type { i8, %union.anon.69 }
%union.anon.69 = type { %class.GURL }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.70" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %class.GURL* }
%"class.std::__1::vector.76" = type { %"class.std::__1::__vector_base.77" }
%"class.std::__1::__vector_base.77" = type { %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"*, %"class.std::__1::__compressed_pair.83" }
%"struct.extensions::declarative_net_request::RequestAction::HeaderInfo" = type { %"class.std::__1::basic_string", i32, %"class.absl::optional.78" }
%"class.absl::optional.78" = type { %"class.absl::optional_internal::optional_data.79" }
%"class.absl::optional_internal::optional_data.79" = type { %"class.absl::optional_internal::optional_data_base.80" }
%"class.absl::optional_internal::optional_data_base.80" = type { %"class.absl::optional_internal::optional_data_dtor_base.81" }
%"class.absl::optional_internal::optional_data_dtor_base.81" = type { i8, %union.anon.82 }
%union.anon.82 = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.extensions::declarative_net_request::RequestAction::HeaderInfo"* }
%"struct.extensions::declarative_net_request::RequestParams" = type opaque
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"*, %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.extensions::declarative_net_request::RequestAction"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.extensions::declarative_net_request::RulesCountPair" = type { i64, i64 }
%"class.content::RenderFrameHost" = type opaque
%"class.content::NavigationHandle" = type opaque

$_ZNSt3__16vectorIN10extensions23declarative_net_request13RequestActionENS_9allocatorIS3_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS3_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISE_E9referenceEEE5valueESB_E4typeENS9_IPKS3_EESE_SE_ = comdat any

@.str = private unnamed_addr constant [19 x i8] c"FlatBuffers 1.12.0\00", align 1
@_ZN11flatbuffers25flatbuffer_version_stringE = weak hidden local_unnamed_addr global i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), align 8

@_ZN10extensions23declarative_net_request14RulesetMatcherC1ENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEERKS8_ = hidden unnamed_addr alias void (%"class.extensions::declarative_net_request::RulesetMatcher"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string"*), void (%"class.extensions::declarative_net_request::RulesetMatcher"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string"*)* @_ZN10extensions23declarative_net_request14RulesetMatcherC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEERKS8_
@_ZN10extensions23declarative_net_request14RulesetMatcherD1Ev = hidden unnamed_addr alias void (%"class.extensions::declarative_net_request::RulesetMatcher"*), void (%"class.extensions::declarative_net_request::RulesetMatcher"*)* @_ZN10extensions23declarative_net_request14RulesetMatcherD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request14RulesetMatcherC2ENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEERKS8_(%"class.extensions::declarative_net_request::RulesetMatcher"*, %"class.std::__1::basic_string"* nocapture, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.extensions::declarative_net_request::RulesetMatcher"* %0 to i8*
  %6 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #8
  %7 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 1
  %8 = bitcast %"class.extensions::declarative_net_request::RulesetMatcher"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  br label %15

15:                                               ; preds = %4, %12
  %16 = phi i8* [ %14, %12 ], [ %5, %4 ]
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %16, i64 %19
  %21 = bitcast i8* %20 to %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRuleset"*
  %22 = bitcast %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRuleset"** %7 to i8**
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 2, i32 0, i32 0
  store i32 %2, i32* %23, align 8
  %24 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 3
  %25 = bitcast i8* %20 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = sub nsw i64 0, %27
  %29 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRuleset", %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRuleset"* %21, i64 0, i32 0, i32 0, i64 %28
  %30 = bitcast i8* %29 to i16*
  %31 = load i16, i16* %30, align 2
  %32 = icmp ugt i16 %31, 4
  br i1 %32, label %33, label %62

33:                                               ; preds = %15
  %34 = getelementptr inbounds i8, i8* %29, i64 4
  %35 = bitcast i8* %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = zext i16 %36 to i64
  %38 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRuleset", %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRuleset"* %21, i64 0, i32 0, i32 0, i64 %37
  %39 = icmp eq i16 %36, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %33
  %41 = bitcast i8* %38 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %38, i64 %43
  %45 = bitcast i8* %44 to %"class.flatbuffers::Vector.59"*
  br label %46

46:                                               ; preds = %33, %40
  %47 = phi %"class.flatbuffers::Vector.59"* [ %45, %40 ], [ null, %33 ]
  %48 = icmp ugt i16 %31, 8
  br i1 %48, label %49, label %62

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %29, i64 8
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i64
  %54 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRuleset", %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRuleset"* %21, i64 0, i32 0, i32 0, i64 %53
  %55 = icmp eq i16 %52, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %49
  %57 = bitcast i8* %54 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %54, i64 %59
  %61 = bitcast i8* %60 to %"class.flatbuffers::Vector"*
  br label %62

62:                                               ; preds = %15, %46, %49, %56
  %63 = phi %"class.flatbuffers::Vector.59"* [ %47, %56 ], [ %47, %49 ], [ %47, %46 ], [ null, %15 ]
  %64 = phi %"class.flatbuffers::Vector"* [ %61, %56 ], [ null, %49 ], [ null, %46 ], [ null, %15 ]
  tail call void @_ZN10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcherC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPKN11flatbuffers6VectorINSF_6OffsetIN17url_pattern_index4flat15UrlPatternIndexEEEEEPKNSG_INSH_INS0_4flat15UrlRuleMetadataEEEEE(%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %24, %"class.std::__1::basic_string"* dereferenceable(24) %3, i32 %2, %"class.flatbuffers::Vector.59"* %63, %"class.flatbuffers::Vector"* %64) #8
  %65 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 4
  %66 = load %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRuleset"*, %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRuleset"** %7, align 8
  %67 = bitcast %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRuleset"* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = sub nsw i64 0, %69
  %71 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRuleset", %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRuleset"* %66, i64 0, i32 0, i32 0, i64 %70
  %72 = bitcast i8* %71 to i16*
  %73 = load i16, i16* %72, align 2
  %74 = icmp ugt i16 %73, 6
  br i1 %74, label %75, label %104

75:                                               ; preds = %62
  %76 = getelementptr inbounds i8, i8* %71, i64 6
  %77 = bitcast i8* %76 to i16*
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i64
  %80 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRuleset", %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRuleset"* %66, i64 0, i32 0, i32 0, i64 %79
  %81 = icmp eq i16 %78, 0
  br i1 %81, label %88, label %82

82:                                               ; preds = %75
  %83 = bitcast i8* %80 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  %87 = bitcast i8* %86 to %"class.flatbuffers::Vector.15"*
  br label %88

88:                                               ; preds = %75, %82
  %89 = phi %"class.flatbuffers::Vector.15"* [ %87, %82 ], [ null, %75 ]
  %90 = icmp ugt i16 %73, 8
  br i1 %90, label %91, label %104

91:                                               ; preds = %88
  %92 = getelementptr inbounds i8, i8* %71, i64 8
  %93 = bitcast i8* %92 to i16*
  %94 = load i16, i16* %93, align 2
  %95 = zext i16 %94 to i64
  %96 = getelementptr inbounds %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRuleset", %"struct.extensions::declarative_net_request::flat::ExtensionIndexedRuleset"* %66, i64 0, i32 0, i32 0, i64 %95
  %97 = icmp eq i16 %94, 0
  br i1 %97, label %104, label %98

98:                                               ; preds = %91
  %99 = bitcast i8* %96 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds i8, i8* %96, i64 %101
  %103 = bitcast i8* %102 to %"class.flatbuffers::Vector"*
  br label %104

104:                                              ; preds = %62, %88, %91, %98
  %105 = phi %"class.flatbuffers::Vector.15"* [ %89, %98 ], [ %89, %91 ], [ %89, %88 ], [ null, %62 ]
  %106 = phi %"class.flatbuffers::Vector"* [ %103, %98 ], [ null, %91 ], [ null, %88 ], [ null, %62 ]
  tail call void @_ZN10extensions23declarative_net_request17RegexRulesMatcherC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPKN11flatbuffers6VectorINSF_6OffsetINS0_4flat9RegexRuleEEEEEPKNSG_INSH_INSI_15UrlRuleMetadataEEEEE(%"class.extensions::declarative_net_request::RegexRulesMatcher"* %65, %"class.std::__1::basic_string"* dereferenceable(24) %3, i32 %2, %"class.flatbuffers::Vector.15"* %105, %"class.flatbuffers::Vector"* %106) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcherC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPKN11flatbuffers6VectorINSF_6OffsetIN17url_pattern_index4flat15UrlPatternIndexEEEEEPKNSG_INSH_INS0_4flat15UrlRuleMetadataEEEEE(%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.flatbuffers::Vector.59"*, %"class.flatbuffers::Vector"*) unnamed_addr #2

declare void @_ZN10extensions23declarative_net_request17RegexRulesMatcherC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4util6IdTypeINS0_12RulesetIDTagEiLin2ELin1EEEPKN11flatbuffers6VectorINSF_6OffsetINS0_4flat9RegexRuleEEEEEPKNSG_INSH_INSI_15UrlRuleMetadataEEEEE(%"class.extensions::declarative_net_request::RegexRulesMatcher"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.flatbuffers::Vector.15"*, %"class.flatbuffers::Vector"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request14RulesetMatcherD2Ev(%"class.extensions::declarative_net_request::RulesetMatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 4
  tail call void @_ZN10extensions23declarative_net_request17RegexRulesMatcherD1Ev(%"class.extensions::declarative_net_request::RegexRulesMatcher"* %2) #8
  %3 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 3
  tail call void @_ZN10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcherD1Ev(%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %3) #8
  %4 = bitcast %"class.extensions::declarative_net_request::RulesetMatcher"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10extensions23declarative_net_request17RegexRulesMatcherD1Ev(%"class.extensions::declarative_net_request::RegexRulesMatcher"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcherD1Ev(%"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions23declarative_net_request14RulesetMatcher22GetBeforeRequestActionERKNS0_13RequestParamsE(%"class.absl::optional.60"* noalias sret, %"class.extensions::declarative_net_request::RulesetMatcher"*, %"struct.extensions::declarative_net_request::RequestParams"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::optional.60", align 8
  %5 = alloca %"class.absl::optional.60", align 8
  %6 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %1, i64 0, i32 3, i32 0
  call void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase22GetBeforeRequestActionERKNS0_13RequestParamsE(%"class.absl::optional.60"* nonnull sret %4, %"class.extensions::declarative_net_request::RulesetMatcherBase"* %6, %"struct.extensions::declarative_net_request::RequestParams"* %2) #8
  %7 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %1, i64 0, i32 4, i32 0
  call void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase22GetBeforeRequestActionERKNS0_13RequestParamsE(%"class.absl::optional.60"* nonnull sret %5, %"class.extensions::declarative_net_request::RulesetMatcherBase"* %7, %"struct.extensions::declarative_net_request::RequestParams"* %2) #8
  call void @_ZN10extensions23declarative_net_request20GetMaxPriorityActionEN4absl8optionalINS0_13RequestActionEEES4_(%"class.absl::optional.60"* sret %0, %"class.absl::optional.60"* nonnull %4, %"class.absl::optional.60"* nonnull %5) #8
  %8 = getelementptr inbounds %"class.absl::optional.60", %"class.absl::optional.60"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.absl::optional.60", %"class.absl::optional.60"* %5, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %12) #8
  store i8 0, i8* %8, align 8
  br label %13

13:                                               ; preds = %3, %11
  %14 = getelementptr inbounds %"class.absl::optional.60", %"class.absl::optional.60"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.absl::optional.60", %"class.absl::optional.60"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %18) #8
  store i8 0, i8* %14, align 8
  br label %19

19:                                               ; preds = %13, %17
  ret void
}

declare void @_ZN10extensions23declarative_net_request20GetMaxPriorityActionEN4absl8optionalINS0_13RequestActionEEES4_(%"class.absl::optional.60"* sret, %"class.absl::optional.60"*, %"class.absl::optional.60"*) local_unnamed_addr #2

declare void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase22GetBeforeRequestActionERKNS0_13RequestParamsE(%"class.absl::optional.60"* sret, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"struct.extensions::declarative_net_request::RequestParams"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions23declarative_net_request14RulesetMatcher23GetModifyHeadersActionsERKNS0_13RequestParamsEN4absl8optionalImEE(%"class.std::__1::vector.92"* noalias sret, %"class.extensions::declarative_net_request::RulesetMatcher"*, %"struct.extensions::declarative_net_request::RequestParams"*, i8, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::vector.92", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %1, i64 0, i32 3
  %9 = bitcast %"class.std::__1::vector.92"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 24, i1 false)
  tail call void @_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher23GetModifyHeadersActionsERKNS0_13RequestParamsEN4absl8optionalImEE(%"class.std::__1::vector.92"* sret %0, %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"* %8, %"struct.extensions::declarative_net_request::RequestParams"* %2, i8 %3, i64 %4) #8
  %10 = bitcast %"class.std::__1::vector.92"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %6, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %6, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %1, i64 0, i32 4
  %14 = bitcast %"class.std::__1::vector.92"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @_ZNK10extensions23declarative_net_request17RegexRulesMatcher23GetModifyHeadersActionsERKNS0_13RequestParamsEN4absl8optionalImEE(%"class.std::__1::vector.92"* nonnull sret %6, %"class.extensions::declarative_net_request::RegexRulesMatcher"* %13, %"struct.extensions::declarative_net_request::RequestParams"* %2, i8 %3, i64 %4) #8
  %15 = load %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"** %7, align 8
  %16 = load %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"** %11, align 8
  %17 = load %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"** %12, align 8
  %18 = call %"struct.extensions::declarative_net_request::RequestAction"* @_ZNSt3__16vectorIN10extensions23declarative_net_request13RequestActionENS_9allocatorIS3_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS3_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISE_E9referenceEEE5valueESB_E4typeENS9_IPKS3_EESE_SE_(%"class.std::__1::vector.92"* %0, %"struct.extensions::declarative_net_request::RequestAction"* %15, %"struct.extensions::declarative_net_request::RequestAction"* %16, %"struct.extensions::declarative_net_request::RequestAction"* %17)
  %19 = load %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"** %11, align 8
  %20 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %5
  %22 = bitcast %"struct.extensions::declarative_net_request::RequestAction"* %19 to i8*
  %23 = load %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"** %12, align 8
  %24 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %23, %19
  br i1 %24, label %32, label %25

25:                                               ; preds = %21, %25
  %26 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %27, %25 ], [ %23, %21 ]
  %27 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %26, i64 -1
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %27) #8
  %28 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %27, %19
  br i1 %28, label %29, label %25

29:                                               ; preds = %25
  %30 = bitcast %"class.std::__1::vector.92"* %6 to i8**
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %29, %21
  %33 = phi i8* [ %31, %29 ], [ %22, %21 ]
  store %"struct.extensions::declarative_net_request::RequestAction"* %19, %"struct.extensions::declarative_net_request::RequestAction"** %12, align 8
  call void @_ZdlPv(i8* %33) #9
  br label %34

34:                                               ; preds = %5, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  ret void
}

declare void @_ZNK10extensions23declarative_net_request31ExtensionUrlPatternIndexMatcher23GetModifyHeadersActionsERKNS0_13RequestParamsEN4absl8optionalImEE(%"class.std::__1::vector.92"* sret, %"class.extensions::declarative_net_request::ExtensionUrlPatternIndexMatcher"*, %"struct.extensions::declarative_net_request::RequestParams"*, i8, i64) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK10extensions23declarative_net_request17RegexRulesMatcher23GetModifyHeadersActionsERKNS0_13RequestParamsEN4absl8optionalImEE(%"class.std::__1::vector.92"* sret, %"class.extensions::declarative_net_request::RegexRulesMatcher"*, %"struct.extensions::declarative_net_request::RequestParams"*, i8, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.extensions::declarative_net_request::RequestAction"* @_ZNSt3__16vectorIN10extensions23declarative_net_request13RequestActionENS_9allocatorIS3_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS3_EEEEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISE_E9referenceEEE5valueESB_E4typeENS9_IPKS3_EESE_SE_(%"class.std::__1::vector.92"*, %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction"* %2 to i64
  %8 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 240
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %159

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"struct.extensions::declarative_net_request::RequestAction"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 1
  %17 = load %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"** %16, align 8
  %18 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 240
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"struct.extensions::declarative_net_request::RequestAction"** %16 to i64*
  br i1 %21, label %80, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 240
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %43

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %2, i64 %25
  %29 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %28, %3
  br i1 %29, label %38, label %30

30:                                               ; preds = %27, %30
  %31 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %34, %30 ], [ %17, %27 ]
  %32 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %33, %30 ], [ %28, %27 ]
  tail call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %31, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240) %32) #8
  %33 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %32, i64 1
  %34 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %31, i64 1
  %35 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %33, %3
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction"* %34 to i64
  br label %38

38:                                               ; preds = %36, %27
  %39 = phi i64 [ %18, %27 ], [ %37, %36 ]
  store i64 %39, i64* %22, align 8
  %40 = icmp sgt i64 %24, 0
  br i1 %40, label %41, label %159

41:                                               ; preds = %38
  %42 = inttoptr i64 %39 to %"struct.extensions::declarative_net_request::RequestAction"*
  br label %43

43:                                               ; preds = %41, %23
  %44 = phi i64 [ %39, %41 ], [ %18, %23 ]
  %45 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %42, %41 ], [ %17, %23 ]
  %46 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %28, %41 ], [ %3, %23 ]
  %47 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %1, i64 %10
  %48 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction"* %47 to i64
  %49 = sub i64 %44, %48
  %50 = sdiv exact i64 %49, 240
  %51 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %1, i64 %50
  %52 = icmp ult %"struct.extensions::declarative_net_request::RequestAction"* %51, %17
  br i1 %52, label %65, label %55

53:                                               ; preds = %65
  %54 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction"* %69 to i64
  br label %55

55:                                               ; preds = %53, %43
  %56 = phi i64 [ %54, %53 ], [ %44, %43 ]
  store i64 %56, i64* %22, align 8
  %57 = icmp eq i64 %49, 0
  br i1 %57, label %71, label %58

58:                                               ; preds = %55, %58
  %59 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %62, %58 ], [ %45, %55 ]
  %60 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %61, %58 ], [ %51, %55 ]
  %61 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %59, i64 -1
  %63 = tail call dereferenceable(240) %"struct.extensions::declarative_net_request::RequestAction"* @_ZN10extensions23declarative_net_request13RequestActionaSEOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %62, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240) %61) #8
  %64 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %61, %1
  br i1 %64, label %71, label %58

65:                                               ; preds = %43, %65
  %66 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %69, %65 ], [ %45, %43 ]
  %67 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %68, %65 ], [ %51, %43 ]
  tail call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %66, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240) %67) #8
  %68 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %67, i64 1
  %69 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %66, i64 1
  %70 = icmp ult %"struct.extensions::declarative_net_request::RequestAction"* %68, %17
  br i1 %70, label %65, label %53

71:                                               ; preds = %58, %55
  %72 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %46, %2
  br i1 %72, label %159, label %73

73:                                               ; preds = %71, %73
  %74 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %78, %73 ], [ %1, %71 ]
  %75 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %77, %73 ], [ %2, %71 ]
  %76 = tail call dereferenceable(240) %"struct.extensions::declarative_net_request::RequestAction"* @_ZN10extensions23declarative_net_request13RequestActionaSEOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %74, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240) %75) #8
  %77 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %75, i64 1
  %78 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %74, i64 1
  %79 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %77, %46
  br i1 %79, label %159, label %73

80:                                               ; preds = %12
  %81 = bitcast %"class.std::__1::vector.92"* %0 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 %18, %82
  %84 = sdiv exact i64 %83, 240
  %85 = add nsw i64 %84, %10
  %86 = icmp ugt i64 %85, 76861433640456465
  br i1 %86, label %87, label %89

87:                                               ; preds = %80
  %88 = bitcast %"class.std::__1::vector.92"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %88) #10
  unreachable

89:                                               ; preds = %80
  %90 = sub i64 %15, %82
  %91 = sdiv exact i64 %90, 240
  %92 = icmp ult i64 %91, 38430716820228232
  br i1 %92, label %96, label %93

93:                                               ; preds = %89
  %94 = sub i64 %5, %82
  %95 = sdiv exact i64 %94, 240
  br label %103

96:                                               ; preds = %89
  %97 = shl nsw i64 %91, 1
  %98 = icmp ult i64 %97, %85
  %99 = select i1 %98, i64 %85, i64 %97
  %100 = sub i64 %5, %82
  %101 = sdiv exact i64 %100, 240
  %102 = icmp eq i64 %99, 0
  br i1 %102, label %109, label %103

103:                                              ; preds = %96, %93
  %104 = phi i64 [ %95, %93 ], [ %101, %96 ]
  %105 = phi i64 [ 76861433640456465, %93 ], [ %99, %96 ]
  %106 = mul i64 %105, 240
  %107 = tail call i8* @_Znwm(i64 %106) #9
  %108 = bitcast i8* %107 to %"struct.extensions::declarative_net_request::RequestAction"*
  br label %109

109:                                              ; preds = %103, %96
  %110 = phi i64 [ %104, %103 ], [ %101, %96 ]
  %111 = phi i64 [ %105, %103 ], [ 0, %96 ]
  %112 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %108, %103 ], [ null, %96 ]
  %113 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %112, i64 %110
  %114 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %112, i64 %111
  %115 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction"* %114 to i64
  %116 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %113, i64 %10
  br label %117

117:                                              ; preds = %109, %117
  %118 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %120, %117 ], [ %113, %109 ]
  %119 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %121, %117 ], [ %2, %109 ]
  tail call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %118, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240) %119) #8
  %120 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %118, i64 1
  %121 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %119, i64 1
  %122 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %116, %120
  br i1 %122, label %123, label %117

123:                                              ; preds = %117
  %124 = load %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"** %6, align 8
  %125 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %124, %1
  br i1 %125, label %132, label %126

126:                                              ; preds = %123, %126
  %127 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %129, %126 ], [ %113, %123 ]
  %128 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %130, %126 ], [ %1, %123 ]
  %129 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %127, i64 -1
  %130 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %128, i64 -1
  tail call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %129, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240) %130) #8
  %131 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %130, %124
  br i1 %131, label %132, label %126

132:                                              ; preds = %126, %123
  %133 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %113, %123 ], [ %129, %126 ]
  %134 = load %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"** %16, align 8
  %135 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %134, %1
  br i1 %135, label %144, label %136

136:                                              ; preds = %132, %136
  %137 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %140, %136 ], [ %116, %132 ]
  %138 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %139, %136 ], [ %1, %132 ]
  tail call void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"* %137, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240) %138) #8
  %139 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %138, i64 1
  %140 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %137, i64 1
  %141 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %139, %134
  br i1 %141, label %142, label %136

142:                                              ; preds = %136
  %143 = load %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"** %16, align 8
  br label %144

144:                                              ; preds = %132, %142
  %145 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %143, %142 ], [ %1, %132 ]
  %146 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %140, %142 ], [ %116, %132 ]
  %147 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction"* %133 to i64
  %148 = ptrtoint %"struct.extensions::declarative_net_request::RequestAction"* %146 to i64
  %149 = load %"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"** %6, align 8
  store i64 %147, i64* %81, align 8
  store i64 %148, i64* %22, align 8
  store i64 %115, i64* %14, align 8
  %150 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %145, %149
  br i1 %150, label %155, label %151

151:                                              ; preds = %144, %151
  %152 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %153, %151 ], [ %145, %144 ]
  %153 = getelementptr inbounds %"struct.extensions::declarative_net_request::RequestAction", %"struct.extensions::declarative_net_request::RequestAction"* %152, i64 -1
  tail call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %153) #8
  %154 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %153, %149
  br i1 %154, label %155, label %151

155:                                              ; preds = %151, %144
  %156 = icmp eq %"struct.extensions::declarative_net_request::RequestAction"* %149, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %155
  %158 = bitcast %"struct.extensions::declarative_net_request::RequestAction"* %149 to i8*
  tail call void @_ZdlPv(i8* %158) #9
  br label %159

159:                                              ; preds = %73, %157, %155, %38, %71, %4
  %160 = phi %"struct.extensions::declarative_net_request::RequestAction"* [ %1, %4 ], [ %1, %71 ], [ %1, %38 ], [ %113, %155 ], [ %113, %157 ], [ %1, %73 ]
  ret %"struct.extensions::declarative_net_request::RequestAction"* %160
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions23declarative_net_request14RulesetMatcher21IsExtraHeadersMatcherEv(%"class.extensions::declarative_net_request::RulesetMatcher"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 3, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 4, i32 3
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ true, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK10extensions23declarative_net_request14RulesetMatcher13GetRulesCountEv(%"class.extensions::declarative_net_request::RulesetMatcher"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 3, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 4, i32 1
  %5 = load %"class.flatbuffers::Vector.15"*, %"class.flatbuffers::Vector.15"** %4, align 8
  %6 = getelementptr inbounds %"class.flatbuffers::Vector.15", %"class.flatbuffers::Vector.15"* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = add i64 %3, %8
  ret i64 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK10extensions23declarative_net_request14RulesetMatcher18GetRegexRulesCountEv(%"class.extensions::declarative_net_request::RulesetMatcher"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 4, i32 1
  %3 = load %"class.flatbuffers::Vector.15"*, %"class.flatbuffers::Vector.15"** %2, align 8
  %4 = getelementptr inbounds %"class.flatbuffers::Vector.15", %"class.flatbuffers::Vector.15"* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK10extensions23declarative_net_request14RulesetMatcher17GetRulesCountPairEv(%"class.extensions::declarative_net_request::RulesetMatcher"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.extensions::declarative_net_request::RulesCountPair", align 8
  %3 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 3, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 4, i32 1
  %6 = load %"class.flatbuffers::Vector.15"*, %"class.flatbuffers::Vector.15"** %5, align 8
  %7 = getelementptr inbounds %"class.flatbuffers::Vector.15", %"class.flatbuffers::Vector.15"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = add i64 %4, %9
  call void @_ZN10extensions23declarative_net_request14RulesCountPairC1Emm(%"struct.extensions::declarative_net_request::RulesCountPair"* nonnull %2, i64 %10, i64 %9) #8
  %11 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesCountPair", %"struct.extensions::declarative_net_request::RulesCountPair"* %2, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = insertvalue { i64, i64 } undef, i64 %12, 0
  %14 = getelementptr inbounds %"struct.extensions::declarative_net_request::RulesCountPair", %"struct.extensions::declarative_net_request::RulesCountPair"* %2, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = insertvalue { i64, i64 } %13, i64 %15, 1
  ret { i64, i64 } %16
}

declare void @_ZN10extensions23declarative_net_request14RulesCountPairC1Emm(%"struct.extensions::declarative_net_request::RulesCountPair"*, i64, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request14RulesetMatcher20OnRenderFrameCreatedEPN7content15RenderFrameHostE(%"class.extensions::declarative_net_request::RulesetMatcher"*, %"class.content::RenderFrameHost"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN10extensions23declarative_net_request18RulesetMatcherBase20OnRenderFrameCreatedEPN7content15RenderFrameHostE(%"class.extensions::declarative_net_request::RulesetMatcherBase"* %3, %"class.content::RenderFrameHost"* %1) #8
  %4 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN10extensions23declarative_net_request18RulesetMatcherBase20OnRenderFrameCreatedEPN7content15RenderFrameHostE(%"class.extensions::declarative_net_request::RulesetMatcherBase"* %4, %"class.content::RenderFrameHost"* %1) #8
  ret void
}

declare void @_ZN10extensions23declarative_net_request18RulesetMatcherBase20OnRenderFrameCreatedEPN7content15RenderFrameHostE(%"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"class.content::RenderFrameHost"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request14RulesetMatcher20OnRenderFrameDeletedEPN7content15RenderFrameHostE(%"class.extensions::declarative_net_request::RulesetMatcher"*, %"class.content::RenderFrameHost"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN10extensions23declarative_net_request18RulesetMatcherBase20OnRenderFrameDeletedEPN7content15RenderFrameHostE(%"class.extensions::declarative_net_request::RulesetMatcherBase"* %3, %"class.content::RenderFrameHost"* %1) #8
  %4 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN10extensions23declarative_net_request18RulesetMatcherBase20OnRenderFrameDeletedEPN7content15RenderFrameHostE(%"class.extensions::declarative_net_request::RulesetMatcherBase"* %4, %"class.content::RenderFrameHost"* %1) #8
  ret void
}

declare void @_ZN10extensions23declarative_net_request18RulesetMatcherBase20OnRenderFrameDeletedEPN7content15RenderFrameHostE(%"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"class.content::RenderFrameHost"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions23declarative_net_request14RulesetMatcher21OnDidFinishNavigationEPN7content16NavigationHandleE(%"class.extensions::declarative_net_request::RulesetMatcher"*, %"class.content::NavigationHandle"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN10extensions23declarative_net_request18RulesetMatcherBase21OnDidFinishNavigationEPN7content16NavigationHandleE(%"class.extensions::declarative_net_request::RulesetMatcherBase"* %3, %"class.content::NavigationHandle"* %1) #8
  %4 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN10extensions23declarative_net_request18RulesetMatcherBase21OnDidFinishNavigationEPN7content16NavigationHandleE(%"class.extensions::declarative_net_request::RulesetMatcherBase"* %4, %"class.content::NavigationHandle"* %1) #8
  ret void
}

declare void @_ZN10extensions23declarative_net_request18RulesetMatcherBase21OnDidFinishNavigationEPN7content16NavigationHandleE(%"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"class.content::NavigationHandle"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10extensions23declarative_net_request14RulesetMatcher35GetAllowlistedFrameActionForTestingEPN7content15RenderFrameHostE(%"class.absl::optional.60"* noalias sret, %"class.extensions::declarative_net_request::RulesetMatcher"*, %"class.content::RenderFrameHost"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::optional.60", align 8
  %5 = alloca %"class.absl::optional.60", align 8
  %6 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %1, i64 0, i32 3, i32 0
  call void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase35GetAllowlistedFrameActionForTestingEPN7content15RenderFrameHostE(%"class.absl::optional.60"* nonnull sret %4, %"class.extensions::declarative_net_request::RulesetMatcherBase"* %6, %"class.content::RenderFrameHost"* %2) #8
  %7 = getelementptr inbounds %"class.extensions::declarative_net_request::RulesetMatcher", %"class.extensions::declarative_net_request::RulesetMatcher"* %1, i64 0, i32 4, i32 0
  call void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase35GetAllowlistedFrameActionForTestingEPN7content15RenderFrameHostE(%"class.absl::optional.60"* nonnull sret %5, %"class.extensions::declarative_net_request::RulesetMatcherBase"* %7, %"class.content::RenderFrameHost"* %2) #8
  call void @_ZN10extensions23declarative_net_request20GetMaxPriorityActionEN4absl8optionalINS0_13RequestActionEEES4_(%"class.absl::optional.60"* sret %0, %"class.absl::optional.60"* nonnull %4, %"class.absl::optional.60"* nonnull %5) #8
  %8 = getelementptr inbounds %"class.absl::optional.60", %"class.absl::optional.60"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.absl::optional.60", %"class.absl::optional.60"* %5, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %12) #8
  store i8 0, i8* %8, align 8
  br label %13

13:                                               ; preds = %3, %11
  %14 = getelementptr inbounds %"class.absl::optional.60", %"class.absl::optional.60"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.absl::optional.60", %"class.absl::optional.60"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"* %18) #8
  store i8 0, i8* %14, align 8
  br label %19

19:                                               ; preds = %13, %17
  ret void
}

declare void @_ZNK10extensions23declarative_net_request18RulesetMatcherBase35GetAllowlistedFrameActionForTestingEPN7content15RenderFrameHostE(%"class.absl::optional.60"* sret, %"class.extensions::declarative_net_request::RulesetMatcherBase"*, %"class.content::RenderFrameHost"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10extensions23declarative_net_request13RequestActionD1Ev(%"struct.extensions::declarative_net_request::RequestAction"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN10extensions23declarative_net_request13RequestActionC1EOS1_(%"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240)) unnamed_addr #2

declare dereferenceable(240) %"struct.extensions::declarative_net_request::RequestAction"* @_ZN10extensions23declarative_net_request13RequestActionaSEOS1_(%"struct.extensions::declarative_net_request::RequestAction"*, %"struct.extensions::declarative_net_request::RequestAction"* dereferenceable(240)) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
