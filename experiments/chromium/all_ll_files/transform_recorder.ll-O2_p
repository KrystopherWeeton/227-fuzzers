; ModuleID = '../../ui/compositor/transform_recorder.cc'
source_filename = "../../ui/compositor/transform_recorder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::TransformRecorder" = type <{ %"class.ui::PaintContext"*, i8, [7 x i8] }>
%"class.ui::PaintContext" = type <{ %"class.cc::DisplayItemList"*, float, %"class.gfx::Rect", %"class.gfx::Vector2d", i8, [3 x i8] }>
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.68", %"class.std::__1::vector.75", %"class.std::__1::vector.82", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map", %"class.std::__1::vector.9", %"class.base::flat_map.23", i8, i8, [6 x i8], %"class.cc::RTree.33", %"class.std::__1::vector.60" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.2" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.18" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.11", i32, i32 }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.13" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.23" = type { %"class.base::internal::flat_tree.24" }
%"class.base::internal::flat_tree.24" = type { %"class.std::__1::vector.25" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.std::__1::pair.27"*, %"struct.std::__1::pair.27"*, %"class.std::__1::__compressed_pair.28" }
%"struct.std::__1::pair.27" = type { i32, i32 }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::pair.27"* }
%"class.cc::RTree.33" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.52", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional", %"class.absl::optional.47", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.40, %"class.gfx::Rect", i32, %class.sk_sp.44, %class.sk_sp.45, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr }
%class.sk_sp.40 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.44 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.45 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.34, i32, i32 }
%class.sk_sp.34 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.35" }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.46", [4 x i8] }>
%"class.base::RefCountedThreadSafe.46" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, %union.anon.51 }
%union.anon.51 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"struct.std::__1::pair.62"*, %"struct.std::__1::pair.62"*, %"class.std::__1::__compressed_pair.63" }
%"struct.std::__1::pair.62" = type opaque
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::pair.62"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { i8* }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.gfx::Rect"* }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { i64*, i64*, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { i64* }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.84" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.cc::PaintOp" = type { i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%class.SkM44 = type { [16 x float] }

$_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEm = comdat any

@_ZN2ui17TransformRecorderC1ERKNS_12PaintContextE = hidden unnamed_addr alias void (%"class.ui::TransformRecorder"*, %"class.ui::PaintContext"*), void (%"class.ui::TransformRecorder"*, %"class.ui::PaintContext"*)* @_ZN2ui17TransformRecorderC2ERKNS_12PaintContextE
@_ZN2ui17TransformRecorderD1Ev = hidden unnamed_addr alias void (%"class.ui::TransformRecorder"*), void (%"class.ui::TransformRecorder"*)* @_ZN2ui17TransformRecorderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2ui17TransformRecorderC2ERKNS_12PaintContextE(%"class.ui::TransformRecorder"* nocapture, %"class.ui::PaintContext"* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::TransformRecorder", %"class.ui::TransformRecorder"* %0, i64 0, i32 0
  store %"class.ui::PaintContext"* %1, %"class.ui::PaintContext"** %3, align 8
  %4 = getelementptr inbounds %"class.ui::TransformRecorder", %"class.ui::TransformRecorder"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui17TransformRecorderD2Ev(%"class.ui::TransformRecorder"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ui::TransformRecorder", %"class.ui::TransformRecorder"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %106, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.ui::TransformRecorder", %"class.ui::TransformRecorder"* %0, i64 0, i32 0
  %7 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %6, align 8
  %8 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %7, i64 0, i32 0
  %9 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %8, align 8
  %10 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %9, i64 0, i32 4
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %9, i64 0, i32 4, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %9, i64 0, i32 8
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %84

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %9, i64 0, i32 6
  %18 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %9, i64 0, i32 6, i32 0, i32 1
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %9, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = icmp eq i64* %19, %21
  %23 = ptrtoint i64* %21 to i64
  br i1 %22, label %28, label %24

24:                                               ; preds = %16
  store i64 %12, i64* %19, align 8
  %25 = getelementptr inbounds i64, i64* %19, i64 1
  %26 = ptrtoint i64* %25 to i64
  %27 = bitcast i64** %18 to i64*
  store i64 %26, i64* %27, align 8
  br label %84

28:                                               ; preds = %16
  %29 = ptrtoint i64* %19 to i64
  %30 = bitcast i64** %18 to i64*
  %31 = bitcast %"class.std::__1::vector.75"* %17 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %29, %32
  %34 = ashr exact i64 %33, 3
  %35 = add nsw i64 %34, 1
  %36 = icmp ugt i64 %35, 2305843009213693951
  br i1 %36, label %37, label %39

37:                                               ; preds = %28
  %38 = bitcast %"class.std::__1::vector.75"* %17 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #8
  unreachable

39:                                               ; preds = %28
  %40 = bitcast i64** %20 to i64*
  %41 = sub i64 %23, %32
  %42 = ashr exact i64 %41, 3
  %43 = icmp ult i64 %42, 1152921504606846975
  br i1 %43, label %44, label %52

44:                                               ; preds = %39
  %45 = ashr exact i64 %41, 2
  %46 = icmp ult i64 %45, %35
  %47 = select i1 %46, i64 %35, i64 %45
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %57, label %49

49:                                               ; preds = %44
  %50 = icmp ugt i64 %47, 2305843009213693951
  br i1 %50, label %51, label %52

51:                                               ; preds = %49
  tail call void @abort() #8
  unreachable

52:                                               ; preds = %49, %39
  %53 = phi i64 [ %47, %49 ], [ 2305843009213693951, %39 ]
  %54 = shl i64 %53, 3
  %55 = tail call i8* @_Znwm(i64 %54) #9
  %56 = bitcast i8* %55 to i64*
  br label %57

57:                                               ; preds = %52, %44
  %58 = phi i64 [ %53, %52 ], [ 0, %44 ]
  %59 = phi i64* [ %56, %52 ], [ null, %44 ]
  %60 = getelementptr inbounds i64, i64* %59, i64 %34
  %61 = getelementptr inbounds i64, i64* %59, i64 %58
  %62 = ptrtoint i64* %61 to i64
  store i64 %12, i64* %60, align 8
  %63 = getelementptr inbounds i64, i64* %60, i64 1
  %64 = ptrtoint i64* %63 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %17, i64 0, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = load i64, i64* %30, align 8
  %68 = ptrtoint i64* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i64, i64* %60, i64 %71
  %73 = ptrtoint i64* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %57
  %76 = bitcast i64* %72 to i8*
  %77 = bitcast i64* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #10
  %78 = load i64*, i64** %65, align 8
  br label %79

79:                                               ; preds = %75, %57
  %80 = phi i64* [ %66, %57 ], [ %78, %75 ]
  store i64 %73, i64* %31, align 8
  store i64 %64, i64* %30, align 8
  store i64 %62, i64* %40, align 8
  %81 = icmp eq i64* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i64* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %82, %79, %24, %5
  %85 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %10, i64 8) #10
  %86 = bitcast i8* %85 to i32*
  store i32 2068, i32* %86, align 4
  %87 = bitcast i8* %85 to %"class.cc::PaintOp"*
  %88 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %9, i64 0, i32 4, i32 9
  %89 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %87) #10
  %90 = zext i1 %89 to i8
  %91 = load i8, i8* %88, align 4
  %92 = shl nuw nsw i8 %90, 2
  %93 = and i8 %91, 4
  %94 = or i8 %93, %92
  %95 = and i8 %91, -61
  %96 = or i8 %94, %95
  %97 = and i8 %91, 8
  %98 = or i8 %96, %97
  %99 = and i8 %91, 16
  %100 = and i8 %91, 32
  %101 = or i8 %98, %99
  %102 = or i8 %101, %100
  store i8 %102, i8* %88, align 4
  %103 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %6, align 8
  %104 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %103, i64 0, i32 0
  %105 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %104, align 8
  tail call void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"* %105) #10
  br label %106

106:                                              ; preds = %1, %84
  ret void
}

declare void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui17TransformRecorder9TransformERKN3gfx9TransformE(%"class.ui::TransformRecorder"* nocapture, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #1 align 2 {
  %3 = alloca %class.SkM44, align 4
  %4 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 1
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %311, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.ui::TransformRecorder", %"class.ui::TransformRecorder"* %0, i64 0, i32 0
  %9 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %8, align 8
  %10 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %9, i64 0, i32 0
  %11 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %10, align 8
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %11, i64 0, i32 4
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %11, i64 0, i32 4, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %11, i64 0, i32 8
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %86

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %11, i64 0, i32 6
  %20 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %11, i64 0, i32 6, i32 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %11, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %21, %23
  %25 = ptrtoint i64* %23 to i64
  br i1 %24, label %30, label %26

26:                                               ; preds = %18
  store i64 %14, i64* %21, align 8
  %27 = getelementptr inbounds i64, i64* %21, i64 1
  %28 = ptrtoint i64* %27 to i64
  %29 = bitcast i64** %20 to i64*
  store i64 %28, i64* %29, align 8
  br label %86

30:                                               ; preds = %18
  %31 = ptrtoint i64* %21 to i64
  %32 = bitcast i64** %20 to i64*
  %33 = bitcast %"class.std::__1::vector.75"* %19 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %31, %34
  %36 = ashr exact i64 %35, 3
  %37 = add nsw i64 %36, 1
  %38 = icmp ugt i64 %37, 2305843009213693951
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  %40 = bitcast %"class.std::__1::vector.75"* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #8
  unreachable

41:                                               ; preds = %30
  %42 = bitcast i64** %22 to i64*
  %43 = sub i64 %25, %34
  %44 = ashr exact i64 %43, 3
  %45 = icmp ult i64 %44, 1152921504606846975
  br i1 %45, label %46, label %54

46:                                               ; preds = %41
  %47 = ashr exact i64 %43, 2
  %48 = icmp ult i64 %47, %37
  %49 = select i1 %48, i64 %37, i64 %47
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %46
  %52 = icmp ugt i64 %49, 2305843009213693951
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  tail call void @abort() #8
  unreachable

54:                                               ; preds = %51, %41
  %55 = phi i64 [ %49, %51 ], [ 2305843009213693951, %41 ]
  %56 = shl i64 %55, 3
  %57 = tail call i8* @_Znwm(i64 %56) #9
  %58 = bitcast i8* %57 to i64*
  br label %59

59:                                               ; preds = %54, %46
  %60 = phi i64 [ %55, %54 ], [ 0, %46 ]
  %61 = phi i64* [ %58, %54 ], [ null, %46 ]
  %62 = getelementptr inbounds i64, i64* %61, i64 %36
  %63 = getelementptr inbounds i64, i64* %61, i64 %60
  %64 = ptrtoint i64* %63 to i64
  store i64 %14, i64* %62, align 8
  %65 = getelementptr inbounds i64, i64* %62, i64 1
  %66 = ptrtoint i64* %65 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %19, i64 0, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = load i64, i64* %32, align 8
  %70 = ptrtoint i64* %68 to i64
  %71 = sub i64 %69, %70
  %72 = ashr exact i64 %71, 3
  %73 = sub nsw i64 0, %72
  %74 = getelementptr inbounds i64, i64* %62, i64 %73
  %75 = ptrtoint i64* %74 to i64
  %76 = icmp sgt i64 %71, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %59
  %78 = bitcast i64* %74 to i8*
  %79 = bitcast i64* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 %71, i1 false) #10
  %80 = load i64*, i64** %67, align 8
  br label %81

81:                                               ; preds = %77, %59
  %82 = phi i64* [ %68, %59 ], [ %80, %77 ]
  store i64 %75, i64* %33, align 8
  store i64 %66, i64* %32, align 8
  store i64 %64, i64* %42, align 8
  %83 = icmp eq i64* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = bitcast i64* %82 to i8*
  tail call void @_ZdlPv(i8* %85) #9
  br label %86

86:                                               ; preds = %84, %81, %26, %7
  %87 = tail call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %12, i64 8) #10
  %88 = bitcast i8* %87 to i32*
  store i32 2070, i32* %88, align 4
  %89 = bitcast i8* %87 to %"class.cc::PaintOp"*
  %90 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %11, i64 0, i32 4, i32 9
  %91 = tail call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %89) #10
  %92 = zext i1 %91 to i8
  %93 = load i8, i8* %90, align 4
  %94 = shl nuw nsw i8 %92, 2
  %95 = and i8 %93, 4
  %96 = or i8 %95, %94
  %97 = and i8 %93, -61
  %98 = or i8 %96, %97
  %99 = and i8 %93, 8
  %100 = or i8 %98, %99
  %101 = and i8 %93, 16
  %102 = and i8 %93, 32
  %103 = or i8 %100, %101
  %104 = or i8 %103, %102
  store i8 %104, i8* %90, align 4
  %105 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %8, align 8
  %106 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %105, i64 0, i32 0
  %107 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %106, align 8
  %108 = bitcast %class.SkM44* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %108) #10
  call void @_ZNK3gfx9Transform16GetMatrixAsSkM44Ev(%class.SkM44* nonnull sret %3, %"class.gfx::Transform"* %1) #10
  %109 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %107, i64 0, i32 4
  %110 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %107, i64 0, i32 4, i32 3
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %107, i64 0, i32 8
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %183

115:                                              ; preds = %86
  %116 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %107, i64 0, i32 6
  %117 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %107, i64 0, i32 6, i32 0, i32 1
  %118 = load i64*, i64** %117, align 8
  %119 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %107, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %120 = load i64*, i64** %119, align 8
  %121 = icmp eq i64* %118, %120
  %122 = ptrtoint i64* %120 to i64
  br i1 %121, label %127, label %123

123:                                              ; preds = %115
  store i64 %111, i64* %118, align 8
  %124 = getelementptr inbounds i64, i64* %118, i64 1
  %125 = ptrtoint i64* %124 to i64
  %126 = bitcast i64** %117 to i64*
  store i64 %125, i64* %126, align 8
  br label %183

127:                                              ; preds = %115
  %128 = ptrtoint i64* %118 to i64
  %129 = bitcast i64** %117 to i64*
  %130 = bitcast %"class.std::__1::vector.75"* %116 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = sub i64 %128, %131
  %133 = ashr exact i64 %132, 3
  %134 = add nsw i64 %133, 1
  %135 = icmp ugt i64 %134, 2305843009213693951
  br i1 %135, label %136, label %138

136:                                              ; preds = %127
  %137 = bitcast %"class.std::__1::vector.75"* %116 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %137) #8
  unreachable

138:                                              ; preds = %127
  %139 = bitcast i64** %119 to i64*
  %140 = sub i64 %122, %131
  %141 = ashr exact i64 %140, 3
  %142 = icmp ult i64 %141, 1152921504606846975
  br i1 %142, label %143, label %151

143:                                              ; preds = %138
  %144 = ashr exact i64 %140, 2
  %145 = icmp ult i64 %144, %134
  %146 = select i1 %145, i64 %134, i64 %144
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %156, label %148

148:                                              ; preds = %143
  %149 = icmp ugt i64 %146, 2305843009213693951
  br i1 %149, label %150, label %151

150:                                              ; preds = %148
  call void @abort() #8
  unreachable

151:                                              ; preds = %148, %138
  %152 = phi i64 [ %146, %148 ], [ 2305843009213693951, %138 ]
  %153 = shl i64 %152, 3
  %154 = call i8* @_Znwm(i64 %153) #9
  %155 = bitcast i8* %154 to i64*
  br label %156

156:                                              ; preds = %151, %143
  %157 = phi i64 [ %152, %151 ], [ 0, %143 ]
  %158 = phi i64* [ %155, %151 ], [ null, %143 ]
  %159 = getelementptr inbounds i64, i64* %158, i64 %133
  %160 = getelementptr inbounds i64, i64* %158, i64 %157
  %161 = ptrtoint i64* %160 to i64
  store i64 %111, i64* %159, align 8
  %162 = getelementptr inbounds i64, i64* %159, i64 1
  %163 = ptrtoint i64* %162 to i64
  %164 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %116, i64 0, i32 0, i32 0
  %165 = load i64*, i64** %164, align 8
  %166 = load i64, i64* %129, align 8
  %167 = ptrtoint i64* %165 to i64
  %168 = sub i64 %166, %167
  %169 = ashr exact i64 %168, 3
  %170 = sub nsw i64 0, %169
  %171 = getelementptr inbounds i64, i64* %159, i64 %170
  %172 = ptrtoint i64* %171 to i64
  %173 = icmp sgt i64 %168, 0
  br i1 %173, label %174, label %178

174:                                              ; preds = %156
  %175 = bitcast i64* %171 to i8*
  %176 = bitcast i64* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %175, i8* align 8 %176, i64 %168, i1 false) #10
  %177 = load i64*, i64** %164, align 8
  br label %178

178:                                              ; preds = %174, %156
  %179 = phi i64* [ %165, %156 ], [ %177, %174 ]
  store i64 %172, i64* %130, align 8
  store i64 %163, i64* %129, align 8
  store i64 %161, i64* %139, align 8
  %180 = icmp eq i64* %179, null
  br i1 %180, label %183, label %181

181:                                              ; preds = %178
  %182 = bitcast i64* %179 to i8*
  call void @_ZdlPv(i8* %182) #9
  br label %183

183:                                              ; preds = %181, %178, %123, %86
  %184 = call i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"* %109, i64 72) #10
  %185 = bitcast i8* %184 to i32*
  %186 = load i32, i32* %185, align 4
  %187 = and i32 %186, -256
  %188 = or i32 %187, 4
  store i32 %188, i32* %185, align 4
  %189 = getelementptr inbounds i8, i8* %184, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %189, i8* nonnull align 4 %108, i64 64, i1 false) #10
  store i32 18436, i32* %185, align 4
  %190 = bitcast i8* %184 to %"class.cc::PaintOp"*
  %191 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %107, i64 0, i32 4, i32 9
  %192 = call zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"* %190) #10
  %193 = zext i1 %192 to i8
  %194 = load i8, i8* %191, align 4
  %195 = shl nuw nsw i8 %193, 2
  %196 = and i8 %194, 4
  %197 = or i8 %196, %195
  %198 = and i8 %194, -61
  %199 = or i8 %197, %198
  %200 = and i8 %194, 8
  %201 = or i8 %199, %200
  %202 = and i8 %194, 16
  %203 = and i8 %194, 32
  %204 = or i8 %201, %202
  %205 = or i8 %204, %203
  store i8 %205, i8* %191, align 4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %108) #10
  %206 = load %"class.ui::PaintContext"*, %"class.ui::PaintContext"** %8, align 8
  %207 = getelementptr inbounds %"class.ui::PaintContext", %"class.ui::PaintContext"* %206, i64 0, i32 0
  %208 = load %"class.cc::DisplayItemList"*, %"class.cc::DisplayItemList"** %207, align 8
  %209 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %208, i64 0, i32 8
  %210 = load i32, i32* %209, align 8
  %211 = icmp eq i32 %210, 1
  br i1 %211, label %309, label %212

212:                                              ; preds = %183
  %213 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %208, i64 0, i32 4, i32 5
  %214 = load i64, i64* %213, align 8
  %215 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %208, i64 0, i32 5
  %216 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %208, i64 0, i32 5, i32 0, i32 1
  %217 = bitcast %"class.gfx::Rect"** %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = bitcast %"class.std::__1::vector.68"* %215 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = sub i64 %218, %220
  %222 = ashr exact i64 %221, 4
  %223 = sub i64 %214, %222
  %224 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %208, i64 0, i32 7
  %225 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %208, i64 0, i32 7, i32 0, i32 1
  %226 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %225, align 8
  %227 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %208, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %228 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %227, align 8
  %229 = icmp ult %"struct.cc::DisplayItemList::PairedBeginInfo"* %226, %228
  %230 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %228 to i64
  br i1 %229, label %231, label %237

231:                                              ; preds = %212
  %232 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %226, i64 0, i32 0
  store i64 %222, i64* %232, align 8
  %233 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %226, i64 0, i32 1
  store i64 %223, i64* %233, align 8
  %234 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %226, i64 1
  %235 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %234 to i64
  %236 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"** %225 to i64*
  store i64 %235, i64* %236, align 8
  br label %295

237:                                              ; preds = %212
  %238 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %226 to i64
  %239 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"** %225 to i64*
  %240 = bitcast %"class.std::__1::vector.82"* %224 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = sub i64 %238, %241
  %243 = ashr exact i64 %242, 4
  %244 = add nsw i64 %243, 1
  %245 = icmp ugt i64 %244, 1152921504606846975
  br i1 %245, label %246, label %248

246:                                              ; preds = %237
  %247 = bitcast %"class.std::__1::vector.82"* %224 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %247) #8
  unreachable

248:                                              ; preds = %237
  %249 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"** %227 to i64*
  %250 = sub i64 %230, %241
  %251 = ashr exact i64 %250, 4
  %252 = icmp ult i64 %251, 576460752303423487
  br i1 %252, label %253, label %261

253:                                              ; preds = %248
  %254 = ashr exact i64 %250, 3
  %255 = icmp ult i64 %254, %244
  %256 = select i1 %255, i64 %244, i64 %254
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %266, label %258

258:                                              ; preds = %253
  %259 = icmp ugt i64 %256, 1152921504606846975
  br i1 %259, label %260, label %261

260:                                              ; preds = %258
  call void @abort() #8
  unreachable

261:                                              ; preds = %258, %248
  %262 = phi i64 [ %256, %258 ], [ 1152921504606846975, %248 ]
  %263 = shl i64 %262, 4
  %264 = call i8* @_Znwm(i64 %263) #9
  %265 = bitcast i8* %264 to %"struct.cc::DisplayItemList::PairedBeginInfo"*
  br label %266

266:                                              ; preds = %261, %253
  %267 = phi i64 [ %262, %261 ], [ 0, %253 ]
  %268 = phi %"struct.cc::DisplayItemList::PairedBeginInfo"* [ %265, %261 ], [ null, %253 ]
  %269 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %268, i64 %243
  %270 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %268, i64 %267
  %271 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %270 to i64
  %272 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %269, i64 0, i32 0
  store i64 %222, i64* %272, align 8
  %273 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %268, i64 %243, i32 1
  store i64 %223, i64* %273, align 8
  %274 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %269, i64 1
  %275 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %274 to i64
  %276 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %224, i64 0, i32 0, i32 0
  %277 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %276, align 8
  %278 = load i64, i64* %239, align 8
  %279 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %277 to i64
  %280 = sub i64 %278, %279
  %281 = ashr exact i64 %280, 4
  %282 = sub nsw i64 0, %281
  %283 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %269, i64 %282
  %284 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %283 to i64
  %285 = icmp sgt i64 %280, 0
  br i1 %285, label %286, label %290

286:                                              ; preds = %266
  %287 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"* %283 to i8*
  %288 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"* %277 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %287, i8* align 8 %288, i64 %280, i1 false) #10
  %289 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %276, align 8
  br label %290

290:                                              ; preds = %286, %266
  %291 = phi %"struct.cc::DisplayItemList::PairedBeginInfo"* [ %277, %266 ], [ %289, %286 ]
  store i64 %284, i64* %240, align 8
  store i64 %275, i64* %239, align 8
  store i64 %271, i64* %249, align 8
  %292 = icmp eq %"struct.cc::DisplayItemList::PairedBeginInfo"* %291, null
  br i1 %292, label %295, label %293

293:                                              ; preds = %290
  %294 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"* %291 to i8*
  call void @_ZdlPv(i8* %294) #9
  br label %295

295:                                              ; preds = %231, %290, %293
  %296 = load i64, i64* %213, align 8
  %297 = load i64, i64* %217, align 8
  %298 = load i64, i64* %219, align 8
  %299 = sub i64 %297, %298
  %300 = ashr exact i64 %299, 4
  %301 = icmp ugt i64 %296, %300
  %302 = inttoptr i64 %298 to %"class.gfx::Rect"*
  br i1 %301, label %303, label %305

303:                                              ; preds = %295
  %304 = sub i64 %296, %300
  call void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.68"* %215, i64 %304) #10
  br label %309

305:                                              ; preds = %295
  %306 = icmp ult i64 %296, %300
  br i1 %306, label %307, label %309

307:                                              ; preds = %305
  %308 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %302, i64 %296
  store %"class.gfx::Rect"* %308, %"class.gfx::Rect"** %216, align 8
  br label %309

309:                                              ; preds = %183, %303, %305, %307
  %310 = getelementptr inbounds %"class.ui::TransformRecorder", %"class.ui::TransformRecorder"* %0, i64 0, i32 1
  store i8 1, i8* %310, align 8
  br label %311

311:                                              ; preds = %2, %309
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZNK3gfx9Transform16GetMatrixAsSkM44Ev(%class.SkM44* sret, %"class.gfx::Transform"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.68"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.gfx::Rect"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.gfx::Rect"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.gfx::Rect"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.gfx::Rect", %"class.gfx::Rect"* %13, i64 %18, i32 0, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 16
  %25 = and i64 %24, -16
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #10
  %26 = ptrtoint %"class.gfx::Rect"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.68"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 4
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 1152921504606846975
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.68"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #8
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 4
  %41 = icmp ult i64 %40, 576460752303423487
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 3
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 1152921504606846975
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #8
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 1152921504606846975, %38 ]
  %52 = shl i64 %51, 4
  %53 = tail call i8* @_Znwm(i64 %52) #9
  %54 = bitcast i8* %53 to %"class.gfx::Rect"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.gfx::Rect"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %57, i64 %33
  %59 = bitcast %"class.gfx::Rect"* %58 to i8*
  %60 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %57, i64 %56
  %61 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %58, i64 %1
  %62 = shl nsw i64 %1, 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %"class.gfx::Rect"* %60 to i64
  %64 = ptrtoint %"class.gfx::Rect"* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"class.gfx::Rect"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 4
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %58, i64 %71
  %73 = ptrtoint %"class.gfx::Rect"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"class.gfx::Rect"* %72 to i8*
  %77 = bitcast %"class.gfx::Rect"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #10
  %78 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"class.gfx::Rect"* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"class.gfx::Rect"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.gfx::Rect"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

declare i8* @_ZN2cc13PaintOpBuffer15AllocatePaintOpEm(%"class.cc::PaintOpBuffer"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc7PaintOp8IsDrawOpEv(%"class.cc::PaintOp"*) local_unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
