; ModuleID = '../../third_party/icu/source/i18n/regextxt.cpp'
source_filename = "../../third_party/icu/source/i18n/regextxt.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UText = type { i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, i16*, %struct.UTextFuncs*, i8*, i8*, i8*, i8*, i8*, i8*, i64, i32, i32, i64, i32, i32 }
%struct.UTextFuncs = type { i32, i32, i32, i32, %struct.UText* (%struct.UText*, %struct.UText*, i8, i32*)*, i64 (%struct.UText*)*, i8 (%struct.UText*, i64, i8)*, i32 (%struct.UText*, i64, i64, i16*, i32, i32*)*, i32 (%struct.UText*, i64, i64, i16*, i32, i32*)*, void (%struct.UText*, i64, i64, i64, i8, i32*)*, i64 (%struct.UText*)*, i32 (%struct.UText*, i64)*, void (%struct.UText*)*, void (%struct.UText*)*, void (%struct.UText*)*, void (%struct.UText*)* }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @uregex_utext_unescape_charAt_69(i32, i8* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, 1
  %7 = icmp eq i32 %6, %0
  br i1 %7, label %8, label %33

8:                                                ; preds = %2
  %9 = bitcast i8* %1 to %struct.UText**
  %10 = load %struct.UText*, %struct.UText** %9, align 8
  %11 = getelementptr inbounds %struct.UText, %struct.UText* %10, i64 0, i32 8
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %struct.UText, %struct.UText* %10, i64 0, i32 9
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %16, label %27

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.UText, %struct.UText* %10, i64 0, i32 10
  %18 = load i16*, i16** %17, align 8
  %19 = sext i32 %12 to i64
  %20 = getelementptr inbounds i16, i16* %18, i64 %19
  %21 = load i16, i16* %20, align 2
  %22 = icmp ult i16 %21, -10240
  br i1 %22, label %23, label %27

23:                                               ; preds = %16
  %24 = add nsw i32 %12, 1
  store i32 %24, i32* %11, align 8
  %25 = load i16, i16* %20, align 2
  %26 = zext i16 %25 to i32
  br label %29

27:                                               ; preds = %16, %8
  %28 = tail call i32 @utext_next32_69(%struct.UText* %10) #3
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi i32 [ %26, %23 ], [ %28, %27 ]
  %31 = load i32, i32* %4, align 8
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %4, align 8
  br label %98

33:                                               ; preds = %2
  %34 = icmp eq i32 %5, %0
  %35 = bitcast i8* %1 to %struct.UText**
  %36 = load %struct.UText*, %struct.UText** %35, align 8
  br i1 %34, label %37, label %73

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.UText, %struct.UText* %36, i64 0, i32 8
  %39 = load i32, i32* %38, align 8
  %40 = icmp sgt i32 %39, 0
  br i1 %40, label %41, label %52

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.UText, %struct.UText* %36, i64 0, i32 10
  %43 = load i16*, i16** %42, align 8
  %44 = add nsw i32 %39, -1
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i16, i16* %43, i64 %45
  %47 = load i16, i16* %46, align 2
  %48 = icmp ult i16 %47, -10240
  br i1 %48, label %49, label %52

49:                                               ; preds = %41
  store i32 %44, i32* %38, align 8
  %50 = load i16, i16* %46, align 2
  %51 = zext i16 %50 to i32
  br label %54

52:                                               ; preds = %41, %37
  %53 = tail call i32 @utext_previous32_69(%struct.UText* %36) #3
  br label %54

54:                                               ; preds = %52, %49
  %55 = phi i32 [ %51, %49 ], [ %53, %52 ]
  %56 = load %struct.UText*, %struct.UText** %35, align 8
  %57 = getelementptr inbounds %struct.UText, %struct.UText* %56, i64 0, i32 8
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %struct.UText, %struct.UText* %56, i64 0, i32 9
  %60 = load i32, i32* %59, align 4
  %61 = icmp slt i32 %58, %60
  br i1 %61, label %62, label %71

62:                                               ; preds = %54
  %63 = getelementptr inbounds %struct.UText, %struct.UText* %56, i64 0, i32 10
  %64 = load i16*, i16** %63, align 8
  %65 = sext i32 %58 to i64
  %66 = getelementptr inbounds i16, i16* %64, i64 %65
  %67 = load i16, i16* %66, align 2
  %68 = icmp ult i16 %67, -10240
  br i1 %68, label %69, label %71

69:                                               ; preds = %62
  %70 = add nsw i32 %58, 1
  store i32 %70, i32* %57, align 8
  br label %98

71:                                               ; preds = %62, %54
  %72 = tail call i32 @utext_next32_69(%struct.UText* %56) #3
  br label %98

73:                                               ; preds = %33
  %74 = xor i32 %5, -1
  %75 = add i32 %74, %0
  %76 = tail call signext i8 @utext_moveIndex32_69(%struct.UText* %36, i32 %75) #3
  %77 = load %struct.UText*, %struct.UText** %35, align 8
  %78 = getelementptr inbounds %struct.UText, %struct.UText* %77, i64 0, i32 8
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %struct.UText, %struct.UText* %77, i64 0, i32 9
  %81 = load i32, i32* %80, align 4
  %82 = icmp slt i32 %79, %81
  br i1 %82, label %83, label %94

83:                                               ; preds = %73
  %84 = getelementptr inbounds %struct.UText, %struct.UText* %77, i64 0, i32 10
  %85 = load i16*, i16** %84, align 8
  %86 = sext i32 %79 to i64
  %87 = getelementptr inbounds i16, i16* %85, i64 %86
  %88 = load i16, i16* %87, align 2
  %89 = icmp ult i16 %88, -10240
  br i1 %89, label %90, label %94

90:                                               ; preds = %83
  %91 = add nsw i32 %79, 1
  store i32 %91, i32* %78, align 8
  %92 = load i16, i16* %87, align 2
  %93 = zext i16 %92 to i32
  br label %96

94:                                               ; preds = %83, %73
  %95 = tail call i32 @utext_next32_69(%struct.UText* %77) #3
  br label %96

96:                                               ; preds = %94, %90
  %97 = phi i32 [ %93, %90 ], [ %95, %94 ]
  store i32 %0, i32* %4, align 8
  br label %98

98:                                               ; preds = %96, %71, %69, %29
  %99 = phi i32 [ %30, %29 ], [ %55, %69 ], [ %55, %71 ], [ %97, %96 ]
  %100 = icmp ult i32 %99, 65536
  %101 = select i1 %100, i32 %99, i32 65536
  %102 = trunc i32 %101 to i16
  ret i16 %102
}

declare i32 @utext_next32_69(%struct.UText*) local_unnamed_addr #1

declare i32 @utext_previous32_69(%struct.UText*) local_unnamed_addr #1

declare signext i8 @utext_moveIndex32_69(%struct.UText*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @uregex_ucstr_unescape_charAt_69(i32, i8* nocapture readonly) local_unnamed_addr #2 {
  %3 = bitcast i8* %1 to i16*
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds i16, i16* %3, i64 %4
  %6 = load i16, i16* %5, align 2
  ret i16 %6
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
