; ModuleID = '../../third_party/perfetto/src/trace_processor/types/task_state.cc'
source_filename = "../../third_party/perfetto/src/trace_processor/types/task_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.perfetto::trace_processor::ftrace_utils::TaskState" = type { i16, i16 }
%"class.perfetto::base::Optional" = type { %"class.perfetto::base::internal::OptionalBase" }
%"class.perfetto::base::internal::OptionalBase" = type { %"struct.perfetto::base::internal::OptionalStorage" }
%"struct.perfetto::base::internal::OptionalStorage" = type { %"struct.perfetto::base::internal::OptionalStorageBase" }
%"struct.perfetto::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"struct.perfetto::trace_processor::VersionNumber" }
%"struct.perfetto::trace_processor::VersionNumber" = type { i32, i32 }

@_ZN8perfetto15trace_processor12ftrace_utils9TaskStateC1EtNS_4base8OptionalINS0_13VersionNumberEEE = hidden unnamed_addr alias void (%"class.perfetto::trace_processor::ftrace_utils::TaskState"*, i16, %"class.perfetto::base::Optional"*), void (%"class.perfetto::trace_processor::ftrace_utils::TaskState"*, i16, %"class.perfetto::base::Optional"*)* @_ZN8perfetto15trace_processor12ftrace_utils9TaskStateC2EtNS_4base8OptionalINS0_13VersionNumberEEE
@_ZN8perfetto15trace_processor12ftrace_utils9TaskStateC1EPKc = hidden unnamed_addr alias void (%"class.perfetto::trace_processor::ftrace_utils::TaskState"*, i8*), void (%"class.perfetto::trace_processor::ftrace_utils::TaskState"*, i8*)* @_ZN8perfetto15trace_processor12ftrace_utils9TaskStateC2EPKc

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor12ftrace_utils9TaskStateC2EtNS_4base8OptionalINS0_13VersionNumberEEE(%"class.perfetto::trace_processor::ftrace_utils::TaskState"* nocapture, i16 zeroext, %"class.perfetto::base::Optional"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.perfetto::trace_processor::ftrace_utils::TaskState", %"class.perfetto::trace_processor::ftrace_utils::TaskState"* %0, i64 0, i32 0
  store i16 0, i16* %4, align 2
  %5 = getelementptr inbounds %"class.perfetto::trace_processor::ftrace_utils::TaskState", %"class.perfetto::trace_processor::ftrace_utils::TaskState"* %0, i64 0, i32 1
  store i16 2048, i16* %5, align 2
  %6 = getelementptr inbounds %"class.perfetto::base::Optional", %"class.perfetto::base::Optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.perfetto::base::Optional", %"class.perfetto::base::Optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = bitcast %"struct.perfetto::trace_processor::VersionNumber"* %10 to i64*
  %12 = load i64, i64* %11, align 4
  %13 = trunc i64 %12 to i32
  %14 = lshr i64 %12, 32
  %15 = trunc i64 %14 to i32
  %16 = icmp ult i32 %13, 4
  br i1 %16, label %29, label %17

17:                                               ; preds = %9
  %18 = icmp eq i32 %13, 4
  %19 = icmp ult i32 %15, 9
  %20 = and i1 %18, %19
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  store i16 4096, i16* %5, align 2
  %22 = icmp ugt i16 %1, 4096
  %23 = select i1 %22, i16 0, i16 -32768
  %24 = icmp ult i32 %13, 5
  br label %32

25:                                               ; preds = %17, %3
  %26 = phi i32 [ 4, %3 ], [ %15, %17 ]
  store i16 2048, i16* %5, align 2
  %27 = icmp ugt i16 %1, 2048
  %28 = select i1 %27, i16 0, i16 -32768
  br label %32

29:                                               ; preds = %9
  store i16 2048, i16* %5, align 2
  %30 = icmp ugt i16 %1, 2048
  %31 = select i1 %30, i16 0, i16 -32768
  store i16 %31, i16* %4, align 2
  br label %39

32:                                               ; preds = %25, %21
  %33 = phi i16 [ %23, %21 ], [ %28, %25 ]
  %34 = phi i16 [ 4096, %21 ], [ 2048, %25 ]
  %35 = phi i32 [ %15, %21 ], [ %26, %25 ]
  %36 = phi i1 [ %24, %21 ], [ true, %25 ]
  store i16 %33, i16* %4, align 2
  %37 = icmp ult i32 %35, 14
  %38 = and i1 %36, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %29, %32
  %40 = phi i16 [ %33, %32 ], [ %31, %29 ]
  %41 = or i16 %40, %1
  br label %55

42:                                               ; preds = %32
  %43 = and i16 %1, 63
  %44 = shl i16 %1, 3
  %45 = and i16 %44, 512
  %46 = or i16 %45, %43
  %47 = or i16 %46, %33
  %48 = lshr i16 %1, 1
  %49 = and i16 %48, 64
  %50 = or i16 %49, %47
  store i16 %50, i16* %4, align 2
  %51 = and i16 %34, %1
  %52 = icmp eq i16 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %42
  %54 = or i16 %50, %34
  br label %55

55:                                               ; preds = %39, %53
  %56 = phi i16 [ %54, %53 ], [ %41, %39 ]
  store i16 %56, i16* %4, align 2
  br label %57

57:                                               ; preds = %55, %42
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8perfetto15trace_processor12ftrace_utils9TaskStateC2EPKc(%"class.perfetto::trace_processor::ftrace_utils::TaskState"*, i8* nocapture readonly) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.perfetto::trace_processor::ftrace_utils::TaskState", %"class.perfetto::trace_processor::ftrace_utils::TaskState"* %0, i64 0, i32 0
  store i16 0, i16* %3, align 2
  %4 = getelementptr inbounds %"class.perfetto::trace_processor::ftrace_utils::TaskState", %"class.perfetto::trace_processor::ftrace_utils::TaskState"* %0, i64 0, i32 1
  store i16 2048, i16* %4, align 2
  %5 = load i8, i8* %1, align 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %61, label %7

7:                                                ; preds = %2, %47
  %8 = phi i16 [ %48, %47 ], [ 0, %2 ]
  %9 = phi i16 [ %49, %47 ], [ 0, %2 ]
  %10 = phi i8 [ %53, %47 ], [ %5, %2 ]
  %11 = phi i64 [ %51, %47 ], [ 0, %2 ]
  %12 = phi i8 [ %50, %47 ], [ 0, %2 ]
  %13 = and i16 %9, 2048
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %15, label %55

15:                                               ; preds = %7
  %16 = icmp eq i8 %10, 43
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = or i16 %9, 2048
  store i16 %18, i16* %3, align 2
  br label %47

19:                                               ; preds = %15
  %20 = and i8 %12, 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %55

22:                                               ; preds = %19
  switch i8 %10, label %55 [
    i8 82, label %23
    i8 83, label %25
    i8 68, label %27
    i8 84, label %29
    i8 116, label %31
    i8 88, label %33
    i8 90, label %35
    i8 120, label %37
    i8 73, label %37
    i8 75, label %39
    i8 87, label %41
    i8 80, label %43
    i8 78, label %45
    i8 124, label %47
  ]

23:                                               ; preds = %22
  %24 = icmp eq i16 %9, 0
  br i1 %24, label %47, label %55

25:                                               ; preds = %22
  %26 = or i16 %9, 1
  store i16 %26, i16* %3, align 2
  br label %47

27:                                               ; preds = %22
  %28 = or i16 %9, 2
  store i16 %28, i16* %3, align 2
  br label %47

29:                                               ; preds = %22
  %30 = or i16 %9, 4
  store i16 %30, i16* %3, align 2
  br label %47

31:                                               ; preds = %22
  %32 = or i16 %9, 8
  store i16 %32, i16* %3, align 2
  br label %47

33:                                               ; preds = %22
  %34 = or i16 %9, 16
  store i16 %34, i16* %3, align 2
  br label %47

35:                                               ; preds = %22
  %36 = or i16 %9, 32
  store i16 %36, i16* %3, align 2
  br label %47

37:                                               ; preds = %22, %22
  %38 = or i16 %9, 64
  store i16 %38, i16* %3, align 2
  br label %47

39:                                               ; preds = %22
  %40 = or i16 %9, 128
  store i16 %40, i16* %3, align 2
  br label %47

41:                                               ; preds = %22
  %42 = or i16 %9, 256
  store i16 %42, i16* %3, align 2
  br label %47

43:                                               ; preds = %22
  %44 = or i16 %9, 512
  store i16 %44, i16* %3, align 2
  br label %47

45:                                               ; preds = %22
  %46 = or i16 %9, 1024
  store i16 %46, i16* %3, align 2
  br label %47

47:                                               ; preds = %23, %17, %22, %27, %31, %35, %39, %43, %45, %41, %37, %33, %29, %25
  %48 = phi i16 [ %26, %25 ], [ %30, %29 ], [ %34, %33 ], [ %38, %37 ], [ %42, %41 ], [ %46, %45 ], [ %44, %43 ], [ %40, %39 ], [ %36, %35 ], [ %32, %31 ], [ %28, %27 ], [ %8, %22 ], [ %18, %17 ], [ %8, %23 ]
  %49 = phi i16 [ %26, %25 ], [ %30, %29 ], [ %34, %33 ], [ %38, %37 ], [ %42, %41 ], [ %46, %45 ], [ %44, %43 ], [ %40, %39 ], [ %36, %35 ], [ %32, %31 ], [ %28, %27 ], [ %9, %22 ], [ %18, %17 ], [ 0, %23 ]
  %50 = phi i8 [ %12, %25 ], [ %12, %29 ], [ %12, %33 ], [ %12, %37 ], [ %12, %41 ], [ %12, %45 ], [ %12, %43 ], [ %12, %39 ], [ %12, %35 ], [ %12, %31 ], [ %12, %27 ], [ %12, %22 ], [ %12, %17 ], [ 1, %23 ]
  %51 = add i64 %11, 1
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %7

55:                                               ; preds = %47, %23, %19, %22, %7
  %56 = phi i16 [ %48, %47 ], [ %8, %23 ], [ %8, %19 ], [ %8, %22 ], [ %8, %7 ]
  %57 = phi i8 [ %50, %47 ], [ %12, %23 ], [ %12, %19 ], [ %12, %22 ], [ %12, %7 ]
  %58 = phi i8 [ 0, %47 ], [ 1, %23 ], [ 1, %19 ], [ 1, %22 ], [ 1, %7 ]
  %59 = and i8 %57, 1
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %2, %55
  %62 = phi i8 [ %58, %55 ], [ 0, %2 ]
  %63 = phi i16 [ %56, %55 ], [ 0, %2 ]
  %64 = icmp eq i16 %63, 0
  br label %65

65:                                               ; preds = %55, %61
  %66 = phi i8 [ %58, %55 ], [ %62, %61 ]
  %67 = phi i16 [ %56, %55 ], [ %63, %61 ]
  %68 = phi i1 [ false, %55 ], [ %64, %61 ]
  %69 = icmp ne i8 %66, 0
  %70 = or i1 %69, %68
  br i1 %70, label %75, label %71

71:                                               ; preds = %65
  %72 = icmp ugt i16 %67, 2048
  %73 = or i16 %67, -32768
  %74 = select i1 %72, i16 0, i16 %73
  br label %75

75:                                               ; preds = %71, %65
  %76 = phi i16 [ 0, %65 ], [ %74, %71 ]
  store i16 %76, i16* %3, align 2
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK8perfetto15trace_processor12ftrace_utils9TaskState8ToStringEc(%"class.perfetto::trace_processor::ftrace_utils::TaskState"* nocapture readonly, i8 signext) local_unnamed_addr #3 align 2 {
  %3 = alloca [32 x i8], align 16
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.perfetto::trace_processor::ftrace_utils::TaskState", %"class.perfetto::trace_processor::ftrace_utils::TaskState"* %0, i64 0, i32 0
  %6 = load i16, i16* %5, align 2
  %7 = icmp slt i16 %6, 0
  br i1 %7, label %8, label %184

8:                                                ; preds = %2
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #4
  %10 = zext i16 %6 to i32
  %11 = getelementptr inbounds %"class.perfetto::trace_processor::ftrace_utils::TaskState", %"class.perfetto::trace_processor::ftrace_utils::TaskState"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 32, i1 false)
  %12 = load i16, i16* %11, align 2
  %13 = zext i16 %12 to i32
  %14 = add nuw nsw i32 %13, 65535
  %15 = and i32 %14, %10
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %8
  store i8 82, i8* %9, align 16
  br label %171

18:                                               ; preds = %8
  %19 = and i16 %6, 1
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  store i8 83, i8* %9, align 16
  br label %22

22:                                               ; preds = %18, %21
  %23 = phi i64 [ 0, %18 ], [ 1, %21 ]
  %24 = and i16 %6, 2
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %36, label %26

26:                                               ; preds = %22
  %27 = icmp ne i8 %1, 0
  %28 = icmp ne i64 %23, 0
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %23
  store i8 %1, i8* %31, align 1
  br label %32

32:                                               ; preds = %30, %26
  %33 = phi i64 [ 2, %30 ], [ %23, %26 ]
  %34 = add nuw nsw i64 %33, 1
  %35 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %33
  store i8 68, i8* %35, align 1
  br label %36

36:                                               ; preds = %22, %32
  %37 = phi i64 [ %23, %22 ], [ %34, %32 ]
  %38 = and i16 %6, 4
  %39 = icmp eq i16 %38, 0
  br i1 %39, label %51, label %40

40:                                               ; preds = %36
  %41 = icmp ne i8 %1, 0
  %42 = icmp ne i64 %37, 0
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %47

44:                                               ; preds = %40
  %45 = add nuw nsw i64 %37, 1
  %46 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %37
  store i8 %1, i8* %46, align 1
  br label %47

47:                                               ; preds = %44, %40
  %48 = phi i64 [ %45, %44 ], [ %37, %40 ]
  %49 = add nuw nsw i64 %48, 1
  %50 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %48
  store i8 84, i8* %50, align 1
  br label %51

51:                                               ; preds = %36, %47
  %52 = phi i64 [ %37, %36 ], [ %49, %47 ]
  %53 = and i16 %6, 8
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %66, label %55

55:                                               ; preds = %51
  %56 = icmp ne i8 %1, 0
  %57 = icmp ne i64 %52, 0
  %58 = and i1 %56, %57
  br i1 %58, label %59, label %62

59:                                               ; preds = %55
  %60 = add nuw nsw i64 %52, 1
  %61 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %52
  store i8 %1, i8* %61, align 1
  br label %62

62:                                               ; preds = %59, %55
  %63 = phi i64 [ %60, %59 ], [ %52, %55 ]
  %64 = add nuw nsw i64 %63, 1
  %65 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %63
  store i8 116, i8* %65, align 1
  br label %66

66:                                               ; preds = %51, %62
  %67 = phi i64 [ %52, %51 ], [ %64, %62 ]
  %68 = and i16 %6, 16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %81, label %70

70:                                               ; preds = %66
  %71 = icmp ne i8 %1, 0
  %72 = icmp ne i64 %67, 0
  %73 = and i1 %71, %72
  br i1 %73, label %74, label %77

74:                                               ; preds = %70
  %75 = add nuw nsw i64 %67, 1
  %76 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %67
  store i8 %1, i8* %76, align 1
  br label %77

77:                                               ; preds = %74, %70
  %78 = phi i64 [ %75, %74 ], [ %67, %70 ]
  %79 = add nuw nsw i64 %78, 1
  %80 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %78
  store i8 88, i8* %80, align 1
  br label %81

81:                                               ; preds = %66, %77
  %82 = phi i64 [ %67, %66 ], [ %79, %77 ]
  %83 = and i16 %6, 32
  %84 = icmp eq i16 %83, 0
  br i1 %84, label %96, label %85

85:                                               ; preds = %81
  %86 = icmp ne i8 %1, 0
  %87 = icmp ne i64 %82, 0
  %88 = and i1 %86, %87
  br i1 %88, label %89, label %92

89:                                               ; preds = %85
  %90 = add nuw nsw i64 %82, 1
  %91 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %82
  store i8 %1, i8* %91, align 1
  br label %92

92:                                               ; preds = %89, %85
  %93 = phi i64 [ %90, %89 ], [ %82, %85 ]
  %94 = add nuw nsw i64 %93, 1
  %95 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %93
  store i8 90, i8* %95, align 1
  br label %96

96:                                               ; preds = %81, %92
  %97 = phi i64 [ %82, %81 ], [ %94, %92 ]
  %98 = and i16 %6, 64
  %99 = icmp eq i16 %98, 0
  br i1 %99, label %111, label %100

100:                                              ; preds = %96
  %101 = icmp ne i8 %1, 0
  %102 = icmp ne i64 %97, 0
  %103 = and i1 %101, %102
  br i1 %103, label %104, label %107

104:                                              ; preds = %100
  %105 = add nuw nsw i64 %97, 1
  %106 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %97
  store i8 %1, i8* %106, align 1
  br label %107

107:                                              ; preds = %104, %100
  %108 = phi i64 [ %105, %104 ], [ %97, %100 ]
  %109 = add nuw nsw i64 %108, 1
  %110 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %108
  store i8 73, i8* %110, align 1
  br label %111

111:                                              ; preds = %96, %107
  %112 = phi i64 [ %97, %96 ], [ %109, %107 ]
  %113 = trunc i16 %6 to i8
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %126

115:                                              ; preds = %111
  %116 = icmp ne i8 %1, 0
  %117 = icmp ne i64 %112, 0
  %118 = and i1 %116, %117
  br i1 %118, label %119, label %122

119:                                              ; preds = %115
  %120 = add nuw nsw i64 %112, 1
  %121 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %112
  store i8 %1, i8* %121, align 1
  br label %122

122:                                              ; preds = %119, %115
  %123 = phi i64 [ %120, %119 ], [ %112, %115 ]
  %124 = add nuw nsw i64 %123, 1
  %125 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %123
  store i8 75, i8* %125, align 1
  br label %126

126:                                              ; preds = %122, %111
  %127 = phi i64 [ %124, %122 ], [ %112, %111 ]
  %128 = and i16 %6, 256
  %129 = icmp eq i16 %128, 0
  br i1 %129, label %141, label %130

130:                                              ; preds = %126
  %131 = icmp ne i8 %1, 0
  %132 = icmp ne i64 %127, 0
  %133 = and i1 %131, %132
  br i1 %133, label %134, label %137

134:                                              ; preds = %130
  %135 = add nuw nsw i64 %127, 1
  %136 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %127
  store i8 %1, i8* %136, align 1
  br label %137

137:                                              ; preds = %134, %130
  %138 = phi i64 [ %135, %134 ], [ %127, %130 ]
  %139 = add nuw nsw i64 %138, 1
  %140 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %138
  store i8 87, i8* %140, align 1
  br label %141

141:                                              ; preds = %126, %137
  %142 = phi i64 [ %127, %126 ], [ %139, %137 ]
  %143 = and i16 %6, 512
  %144 = icmp eq i16 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %141
  %146 = icmp ne i8 %1, 0
  %147 = icmp ne i64 %142, 0
  %148 = and i1 %146, %147
  br i1 %148, label %149, label %152

149:                                              ; preds = %145
  %150 = add nuw nsw i64 %142, 1
  %151 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %142
  store i8 %1, i8* %151, align 1
  br label %152

152:                                              ; preds = %149, %145
  %153 = phi i64 [ %150, %149 ], [ %142, %145 ]
  %154 = add nuw nsw i64 %153, 1
  %155 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %153
  store i8 80, i8* %155, align 1
  br label %156

156:                                              ; preds = %141, %152
  %157 = phi i64 [ %142, %141 ], [ %154, %152 ]
  %158 = and i16 %6, 1024
  %159 = icmp eq i16 %158, 0
  br i1 %159, label %171, label %160

160:                                              ; preds = %156
  %161 = icmp ne i8 %1, 0
  %162 = icmp ne i64 %157, 0
  %163 = and i1 %161, %162
  br i1 %163, label %164, label %167

164:                                              ; preds = %160
  %165 = add nuw nsw i64 %157, 1
  %166 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %157
  store i8 %1, i8* %166, align 1
  br label %167

167:                                              ; preds = %164, %160
  %168 = phi i64 [ %165, %164 ], [ %157, %160 ]
  %169 = add nuw nsw i64 %168, 1
  %170 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %168
  store i8 78, i8* %170, align 1
  br label %171

171:                                              ; preds = %156, %167, %17
  %172 = phi i64 [ 1, %17 ], [ %157, %156 ], [ %169, %167 ]
  %173 = and i16 %6, %12
  %174 = icmp eq i16 %173, 0
  br i1 %174, label %178, label %175

175:                                              ; preds = %171
  %176 = add nuw nsw i64 %172, 1
  %177 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %172
  store i8 43, i8* %177, align 1
  br label %178

178:                                              ; preds = %171, %175
  %179 = phi i64 [ %176, %175 ], [ %172, %171 ]
  %180 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %180)
  store i32 0, i32* %4, align 4
  %181 = icmp ult i64 %179, 3
  %182 = select i1 %181, i64 %179, i64 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %180, i8* nonnull align 16 %9, i64 %182, i1 false)
  %183 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %180)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #4
  br label %184

184:                                              ; preds = %2, %178
  %185 = phi i32 [ %183, %178 ], [ 63, %2 ]
  ret i32 %185
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
