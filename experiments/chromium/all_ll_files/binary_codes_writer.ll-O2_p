; ModuleID = '../../third_party/libaom/source/libaom/aom_dsp/binary_codes_writer.c'
source_filename = "../../third_party/libaom/source/libaom/aom_dsp/binary_codes_writer.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.aom_writer = type { i32, i8*, %struct.od_ec_enc, i8 }
%struct.od_ec_enc = type { i8*, i32, i16*, i32, i32, i32, i16, i16, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden void @aom_write_primitive_symmetric(%struct.aom_writer*, i16 signext, i32) local_unnamed_addr #0 {
  %4 = sext i16 %1 to i32
  %5 = icmp eq i16 %1, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.aom_writer, %struct.aom_writer* %0, i64 0, i32 2
  tail call void @od_ec_encode_bool_q15(%struct.od_ec_enc* %7, i32 0, i32 16384) #5
  br label %23

8:                                                ; preds = %3
  %9 = icmp slt i32 %4, 0
  %10 = sub nsw i32 0, %4
  %11 = select i1 %9, i32 %10, i32 %4
  %12 = lshr i16 %1, 15
  %13 = zext i16 %12 to i32
  %14 = getelementptr inbounds %struct.aom_writer, %struct.aom_writer* %0, i64 0, i32 2
  tail call void @od_ec_encode_bool_q15(%struct.od_ec_enc* %14, i32 1, i32 16384) #5
  tail call void @od_ec_encode_bool_q15(%struct.od_ec_enc* %14, i32 %13, i32 16384) #5
  %15 = add nsw i32 %11, -1
  %16 = icmp sgt i32 %2, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %8, %17
  %18 = phi i32 [ %19, %17 ], [ %2, %8 ]
  %19 = add nsw i32 %18, -1
  %20 = lshr i32 %15, %19
  %21 = and i32 %20, 1
  tail call void @od_ec_encode_bool_q15(%struct.od_ec_enc* %14, i32 %21, i32 16384) #5
  %22 = icmp sgt i32 %19, 0
  br i1 %22, label %17, label %23

23:                                               ; preds = %17, %8, %6
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @aom_count_primitive_symmetric(i16 signext, i32) local_unnamed_addr #1 {
  %3 = icmp eq i16 %0, 0
  %4 = add i32 %1, 2
  %5 = select i1 %3, i32 1, i32 %4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @aom_write_primitive_quniform(%struct.aom_writer*, i16 zeroext, i16 zeroext) local_unnamed_addr #0 {
  %4 = zext i16 %1 to i32
  %5 = icmp ult i16 %1, 2
  br i1 %5, label %39, label %6

6:                                                ; preds = %3
  %7 = tail call i32 @llvm.ctlz.i32(i32 %4, i1 true) #5, !range !2
  %8 = xor i32 %7, 31
  %9 = shl i32 2, %8
  %10 = sub nsw i32 %9, %4
  %11 = zext i16 %2 to i32
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %23

13:                                               ; preds = %6
  %14 = icmp eq i32 %8, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.aom_writer, %struct.aom_writer* %0, i64 0, i32 2
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi i32 [ %8, %15 ], [ %19, %17 ]
  %19 = add nsw i32 %18, -1
  %20 = lshr i32 %11, %19
  %21 = and i32 %20, 1
  tail call void @od_ec_encode_bool_q15(%struct.od_ec_enc* %16, i32 %21, i32 16384) #5
  %22 = icmp sgt i32 %19, 0
  br i1 %22, label %17, label %39

23:                                               ; preds = %6
  %24 = sub nsw i32 %11, %10
  %25 = ashr i32 %24, 1
  %26 = add nsw i32 %25, %10
  %27 = icmp eq i32 %8, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.aom_writer, %struct.aom_writer* %0, i64 0, i32 2
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i32 [ %8, %28 ], [ %32, %30 ]
  %32 = add nsw i32 %31, -1
  %33 = lshr i32 %26, %32
  %34 = and i32 %33, 1
  tail call void @od_ec_encode_bool_q15(%struct.od_ec_enc* %29, i32 %34, i32 16384) #5
  %35 = icmp sgt i32 %32, 0
  br i1 %35, label %30, label %36

36:                                               ; preds = %30, %23
  %37 = and i32 %24, 1
  %38 = getelementptr inbounds %struct.aom_writer, %struct.aom_writer* %0, i64 0, i32 2
  tail call void @od_ec_encode_bool_q15(%struct.od_ec_enc* %38, i32 %37, i32 16384) #5
  br label %39

39:                                               ; preds = %17, %13, %36, %3
  ret void
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @aom_count_primitive_quniform(i16 zeroext, i16 zeroext) local_unnamed_addr #2 {
  %3 = zext i16 %0 to i32
  %4 = icmp ult i16 %0, 2
  br i1 %4, label %14, label %5

5:                                                ; preds = %2
  %6 = tail call i32 @llvm.ctlz.i32(i32 %3, i1 true) #5, !range !2
  %7 = xor i32 %6, 31
  %8 = shl i32 2, %7
  %9 = sub nsw i32 %8, %3
  %10 = zext i16 %1 to i32
  %11 = icmp sle i32 %9, %10
  %12 = zext i1 %11 to i32
  %13 = add nuw nsw i32 %7, %12
  br label %14

14:                                               ; preds = %2, %5
  %15 = phi i32 [ %13, %5 ], [ 0, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @aom_write_primitive_subexpfin(%struct.aom_writer*, i16 zeroext, i16 zeroext, i16 zeroext) local_unnamed_addr #0 {
  %5 = zext i16 %2 to i32
  %6 = zext i16 %1 to i32
  %7 = shl i32 3, %5
  %8 = icmp slt i32 %7, %6
  br i1 %8, label %9, label %20

9:                                                ; preds = %4
  %10 = zext i16 %3 to i32
  %11 = getelementptr inbounds %struct.aom_writer, %struct.aom_writer* %0, i64 0, i32 2
  br label %24

12:                                               ; preds = %24
  %13 = add nuw nsw i32 %26, 1
  %14 = add nuw i32 %26, %5
  %15 = shl i32 3, %14
  %16 = add nsw i32 %15, %29
  %17 = icmp slt i32 %16, %6
  br i1 %17, label %24, label %18

18:                                               ; preds = %12
  %19 = trunc i32 %29 to i16
  br label %20

20:                                               ; preds = %18, %4
  %21 = phi i16 [ 0, %4 ], [ %19, %18 ]
  %22 = sub i16 %1, %21
  %23 = sub i16 %3, %21
  tail call void @aom_write_primitive_quniform(%struct.aom_writer* %0, i16 zeroext %22, i16 zeroext %23)
  br label %41

24:                                               ; preds = %9, %12
  %25 = phi i32 [ %5, %9 ], [ %14, %12 ]
  %26 = phi i32 [ 0, %9 ], [ %13, %12 ]
  %27 = phi i32 [ 0, %9 ], [ %29, %12 ]
  %28 = shl i32 1, %25
  %29 = add nsw i32 %28, %27
  %30 = icmp sle i32 %29, %10
  %31 = zext i1 %30 to i32
  tail call void @od_ec_encode_bool_q15(%struct.od_ec_enc* %11, i32 %31, i32 16384) #5
  br i1 %30, label %12, label %32

32:                                               ; preds = %24
  %33 = sub nsw i32 %10, %27
  %34 = icmp sgt i32 %25, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %32, %35
  %36 = phi i32 [ %37, %35 ], [ %25, %32 ]
  %37 = add nsw i32 %36, -1
  %38 = lshr i32 %33, %37
  %39 = and i32 %38, 1
  tail call void @od_ec_encode_bool_q15(%struct.od_ec_enc* %11, i32 %39, i32 16384) #5
  %40 = icmp sgt i32 %37, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %32, %20
  ret void
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @aom_count_primitive_subexpfin(i16 zeroext, i16 zeroext, i16 zeroext) local_unnamed_addr #2 {
  %4 = zext i16 %1 to i32
  %5 = zext i16 %0 to i32
  %6 = shl i32 3, %4
  %7 = icmp slt i32 %6, %5
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = zext i16 %2 to i32
  br label %36

10:                                               ; preds = %36
  %11 = add nuw i32 %38, %4
  %12 = shl i32 3, %11
  %13 = add nsw i32 %12, %41
  %14 = icmp slt i32 %13, %5
  br i1 %14, label %36, label %15

15:                                               ; preds = %10
  %16 = trunc i32 %41 to i16
  br label %17

17:                                               ; preds = %15, %3
  %18 = phi i16 [ 0, %3 ], [ %16, %15 ]
  %19 = phi i32 [ 0, %3 ], [ %43, %15 ]
  %20 = sub i16 %0, %18
  %21 = zext i16 %20 to i32
  %22 = icmp ult i16 %20, 2
  br i1 %22, label %33, label %23

23:                                               ; preds = %17
  %24 = sub i16 %2, %18
  %25 = tail call i32 @llvm.ctlz.i32(i32 %21, i1 true) #5, !range !2
  %26 = xor i32 %25, 31
  %27 = shl i32 2, %26
  %28 = sub nsw i32 %27, %21
  %29 = zext i16 %24 to i32
  %30 = icmp sle i32 %28, %29
  %31 = zext i1 %30 to i32
  %32 = add nuw nsw i32 %26, %31
  br label %33

33:                                               ; preds = %23, %17
  %34 = phi i32 [ %32, %23 ], [ 0, %17 ]
  %35 = add nsw i32 %34, %19
  br label %46

36:                                               ; preds = %8, %10
  %37 = phi i32 [ %4, %8 ], [ %11, %10 ]
  %38 = phi i32 [ 0, %8 ], [ %43, %10 ]
  %39 = phi i32 [ 0, %8 ], [ %41, %10 ]
  %40 = shl i32 1, %37
  %41 = add nsw i32 %40, %39
  %42 = icmp sgt i32 %41, %9
  %43 = add nuw nsw i32 %38, 1
  br i1 %42, label %44, label %10

44:                                               ; preds = %36
  %45 = add nsw i32 %43, %37
  br label %46

46:                                               ; preds = %44, %33
  %47 = phi i32 [ %35, %33 ], [ %45, %44 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @aom_write_primitive_refsubexpfin(%struct.aom_writer*, i16 zeroext, i16 zeroext, i16 zeroext, i16 zeroext) local_unnamed_addr #0 {
  %6 = zext i16 %3 to i32
  %7 = shl nuw nsw i32 %6, 1
  %8 = zext i16 %1 to i32
  %9 = icmp ugt i32 %7, %8
  br i1 %9, label %22, label %10

10:                                               ; preds = %5
  %11 = zext i16 %4 to i32
  %12 = icmp ult i32 %7, %11
  br i1 %12, label %39, label %13

13:                                               ; preds = %10
  %14 = icmp ult i16 %4, %3
  br i1 %14, label %18, label %15

15:                                               ; preds = %13
  %16 = sub i16 %4, %3
  %17 = shl i16 %16, 1
  br label %39

18:                                               ; preds = %13
  %19 = sub i16 %3, %4
  %20 = shl i16 %19, 1
  %21 = add i16 %20, -1
  br label %39

22:                                               ; preds = %5
  %23 = add i16 %1, -1
  %24 = sub i16 %23, %3
  %25 = sub i16 %23, %4
  %26 = zext i16 %25 to i32
  %27 = zext i16 %24 to i32
  %28 = shl nuw nsw i32 %27, 1
  %29 = icmp ult i32 %28, %26
  br i1 %29, label %39, label %30

30:                                               ; preds = %22
  %31 = icmp ult i16 %25, %24
  br i1 %31, label %35, label %32

32:                                               ; preds = %30
  %33 = sub i16 %25, %24
  %34 = shl i16 %33, 1
  br label %39

35:                                               ; preds = %30
  %36 = sub i16 %24, %25
  %37 = shl i16 %36, 1
  %38 = add i16 %37, -1
  br label %39

39:                                               ; preds = %10, %15, %18, %22, %32, %35
  %40 = phi i16 [ %17, %15 ], [ %21, %18 ], [ %4, %10 ], [ %34, %32 ], [ %38, %35 ], [ %25, %22 ]
  %41 = zext i16 %2 to i32
  %42 = shl i32 3, %41
  %43 = icmp slt i32 %42, %8
  br i1 %43, label %44, label %55

44:                                               ; preds = %39
  %45 = zext i16 %40 to i32
  %46 = getelementptr inbounds %struct.aom_writer, %struct.aom_writer* %0, i64 0, i32 2
  br label %59

47:                                               ; preds = %59
  %48 = add nuw nsw i32 %61, 1
  %49 = add nuw i32 %61, %41
  %50 = shl i32 3, %49
  %51 = add nsw i32 %50, %64
  %52 = icmp slt i32 %51, %8
  br i1 %52, label %59, label %53

53:                                               ; preds = %47
  %54 = trunc i32 %64 to i16
  br label %55

55:                                               ; preds = %53, %39
  %56 = phi i16 [ 0, %39 ], [ %54, %53 ]
  %57 = sub i16 %1, %56
  %58 = sub i16 %40, %56
  tail call void @aom_write_primitive_quniform(%struct.aom_writer* %0, i16 zeroext %57, i16 zeroext %58) #5
  br label %76

59:                                               ; preds = %47, %44
  %60 = phi i32 [ %41, %44 ], [ %49, %47 ]
  %61 = phi i32 [ 0, %44 ], [ %48, %47 ]
  %62 = phi i32 [ 0, %44 ], [ %64, %47 ]
  %63 = shl i32 1, %60
  %64 = add nsw i32 %62, %63
  %65 = icmp sle i32 %64, %45
  %66 = zext i1 %65 to i32
  tail call void @od_ec_encode_bool_q15(%struct.od_ec_enc* %46, i32 %66, i32 16384) #5
  br i1 %65, label %47, label %67

67:                                               ; preds = %59
  %68 = sub nsw i32 %45, %62
  %69 = icmp sgt i32 %60, 0
  br i1 %69, label %70, label %76

70:                                               ; preds = %67, %70
  %71 = phi i32 [ %72, %70 ], [ %60, %67 ]
  %72 = add nsw i32 %71, -1
  %73 = lshr i32 %68, %72
  %74 = and i32 %73, 1
  tail call void @od_ec_encode_bool_q15(%struct.od_ec_enc* %46, i32 %74, i32 16384) #5
  %75 = icmp sgt i32 %72, 0
  br i1 %75, label %70, label %76

76:                                               ; preds = %70, %55, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @aom_write_signed_primitive_refsubexpfin(%struct.aom_writer*, i16 zeroext, i16 zeroext, i16 signext, i16 signext) local_unnamed_addr #0 {
  %6 = add i16 %1, -1
  %7 = add i16 %6, %3
  %8 = add i16 %6, %4
  %9 = shl i16 %1, 1
  %10 = add i16 %9, -1
  tail call void @aom_write_primitive_refsubexpfin(%struct.aom_writer* %0, i16 zeroext %10, i16 zeroext %2, i16 zeroext %7, i16 zeroext %8)
  ret void
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @aom_count_primitive_refsubexpfin(i16 zeroext, i16 zeroext, i16 zeroext, i16 zeroext) local_unnamed_addr #2 {
  %5 = zext i16 %2 to i32
  %6 = shl nuw nsw i32 %5, 1
  %7 = zext i16 %0 to i32
  %8 = icmp ugt i32 %6, %7
  br i1 %8, label %21, label %9

9:                                                ; preds = %4
  %10 = zext i16 %3 to i32
  %11 = icmp ult i32 %6, %10
  br i1 %11, label %38, label %12

12:                                               ; preds = %9
  %13 = icmp ult i16 %3, %2
  br i1 %13, label %17, label %14

14:                                               ; preds = %12
  %15 = sub i16 %3, %2
  %16 = shl i16 %15, 1
  br label %38

17:                                               ; preds = %12
  %18 = sub i16 %2, %3
  %19 = shl i16 %18, 1
  %20 = add i16 %19, -1
  br label %38

21:                                               ; preds = %4
  %22 = add i16 %0, -1
  %23 = sub i16 %22, %2
  %24 = sub i16 %22, %3
  %25 = zext i16 %24 to i32
  %26 = zext i16 %23 to i32
  %27 = shl nuw nsw i32 %26, 1
  %28 = icmp ult i32 %27, %25
  br i1 %28, label %38, label %29

29:                                               ; preds = %21
  %30 = icmp ult i16 %24, %23
  br i1 %30, label %34, label %31

31:                                               ; preds = %29
  %32 = sub i16 %24, %23
  %33 = shl i16 %32, 1
  br label %38

34:                                               ; preds = %29
  %35 = sub i16 %23, %24
  %36 = shl i16 %35, 1
  %37 = add i16 %36, -1
  br label %38

38:                                               ; preds = %9, %14, %17, %21, %31, %34
  %39 = phi i16 [ %16, %14 ], [ %20, %17 ], [ %3, %9 ], [ %33, %31 ], [ %37, %34 ], [ %24, %21 ]
  %40 = zext i16 %1 to i32
  %41 = shl i32 3, %40
  %42 = icmp slt i32 %41, %7
  br i1 %42, label %43, label %52

43:                                               ; preds = %38
  %44 = zext i16 %39 to i32
  br label %71

45:                                               ; preds = %71
  %46 = add nuw i32 %73, %40
  %47 = shl i32 3, %46
  %48 = add nsw i32 %47, %76
  %49 = icmp slt i32 %48, %7
  br i1 %49, label %71, label %50

50:                                               ; preds = %45
  %51 = trunc i32 %76 to i16
  br label %52

52:                                               ; preds = %50, %38
  %53 = phi i16 [ 0, %38 ], [ %51, %50 ]
  %54 = phi i32 [ 0, %38 ], [ %78, %50 ]
  %55 = sub i16 %0, %53
  %56 = zext i16 %55 to i32
  %57 = icmp ult i16 %55, 2
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  %59 = sub i16 %39, %53
  %60 = tail call i32 @llvm.ctlz.i32(i32 %56, i1 true) #5, !range !2
  %61 = xor i32 %60, 31
  %62 = shl i32 2, %61
  %63 = sub nsw i32 %62, %56
  %64 = zext i16 %59 to i32
  %65 = icmp sle i32 %63, %64
  %66 = zext i1 %65 to i32
  %67 = add nuw nsw i32 %61, %66
  br label %68

68:                                               ; preds = %58, %52
  %69 = phi i32 [ %67, %58 ], [ 0, %52 ]
  %70 = add nsw i32 %69, %54
  br label %81

71:                                               ; preds = %45, %43
  %72 = phi i32 [ %40, %43 ], [ %46, %45 ]
  %73 = phi i32 [ 0, %43 ], [ %78, %45 ]
  %74 = phi i32 [ 0, %43 ], [ %76, %45 ]
  %75 = shl i32 1, %72
  %76 = add nsw i32 %74, %75
  %77 = icmp sgt i32 %76, %44
  %78 = add nuw nsw i32 %73, 1
  br i1 %77, label %79, label %45

79:                                               ; preds = %71
  %80 = add nsw i32 %78, %72
  br label %81

81:                                               ; preds = %68, %79
  %82 = phi i32 [ %70, %68 ], [ %80, %79 ]
  ret i32 %82
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @aom_count_signed_primitive_refsubexpfin(i16 zeroext, i16 zeroext, i16 signext, i16 signext) local_unnamed_addr #2 {
  %5 = add i16 %0, -1
  %6 = add i16 %5, %2
  %7 = add i16 %5, %3
  %8 = shl i16 %0, 1
  %9 = add i16 %8, -1
  %10 = tail call i32 @aom_count_primitive_refsubexpfin(i16 zeroext %9, i16 zeroext %1, i16 zeroext %6, i16 zeroext %7)
  ret i32 %10
}

declare void @od_ec_encode_bool_q15(%struct.od_ec_enc*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
