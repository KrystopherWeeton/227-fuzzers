; ModuleID = '../../third_party/blink/renderer/platform/scheduler/common/simple_thread_scheduler.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/common/simple_thread_scheduler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::scheduler::SimpleThreadScheduler" = type { %"class.blink::ThreadScheduler" }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::RAILModeObserver" = type opaque
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2" }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::scheduler::WebThreadScheduler::RendererPauseHandle" = type { i32 (...)** }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.blink::scheduler::NonMainThreadSchedulerImpl" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::WebInputEventAttribution"*, i32, i32 }
%"class.blink::WebInputEventAttribution" = type { i32, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.v8::Isolate" = type opaque
%"class.blink::scheduler::WebThreadScheduler" = type { i32 (...)** }

$_ZNK5blink15ThreadScheduler23GetPendingUserInputInfoEb = comdat any

$_ZNK5blink15ThreadScheduler25IsBeginMainFrameScheduledEv = comdat any

$_ZN5blink9scheduler21SimpleThreadScheduler12SetV8IsolateEPN2v87IsolateE = comdat any

$_ZN5blink15ThreadScheduler18OnSafepointEnteredEv = comdat any

$_ZN5blink15ThreadScheduler17OnSafepointExitedEv = comdat any

$_ZN5blink15ThreadScheduler32GetWebMainThreadSchedulerForTestEv = comdat any

@_ZTVN5blink9scheduler21SimpleThreadSchedulerE = hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::SimpleThreadScheduler"*)* @_ZN5blink9scheduler21SimpleThreadSchedulerD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::SimpleThreadScheduler"*)* @_ZN5blink9scheduler21SimpleThreadSchedulerD0Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::SimpleThreadScheduler"*)* @_ZN5blink9scheduler21SimpleThreadScheduler8ShutdownEv to i8*), i8* bitcast (i1 (%"class.blink::scheduler::SimpleThreadScheduler"*)* @_ZN5blink9scheduler21SimpleThreadScheduler30ShouldYieldForHighPriorityWorkEv to i8*), i8* bitcast (i1 (%"class.blink::scheduler::SimpleThreadScheduler"*)* @_ZNK5blink9scheduler21SimpleThreadScheduler31CanExceedIdleDeadlineIfRequiredEv to i8*), i8* bitcast (void (%"class.blink::scheduler::SimpleThreadScheduler"*, %"class.base::Location"*, %"class.base::OnceCallback"*)* @_ZN5blink9scheduler21SimpleThreadScheduler12PostIdleTaskERKN4base8LocationENS2_12OnceCallbackIFvNS2_9TimeTicksEEEE to i8*), i8* bitcast (void (%"class.blink::scheduler::SimpleThreadScheduler"*, %"class.base::Location"*, i64, %"class.base::OnceCallback"*)* @_ZN5blink9scheduler21SimpleThreadScheduler19PostDelayedIdleTaskERKN4base8LocationENS2_9TimeDeltaENS2_12OnceCallbackIFvNS2_9TimeTicksEEEE to i8*), i8* bitcast (void (%"class.blink::scheduler::SimpleThreadScheduler"*, %"class.base::Location"*, %"class.base::OnceCallback"*)* @_ZN5blink9scheduler21SimpleThreadScheduler23PostNonNestableIdleTaskERKN4base8LocationENS2_12OnceCallbackIFvNS2_9TimeTicksEEEE to i8*), i8* bitcast (void (%"class.blink::scheduler::SimpleThreadScheduler"*, %"class.blink::RAILModeObserver"*)* @_ZN5blink9scheduler21SimpleThreadScheduler19AddRAILModeObserverEPNS_16RAILModeObserverE to i8*), i8* bitcast (void (%"class.blink::scheduler::SimpleThreadScheduler"*, %"class.blink::RAILModeObserver"*)* @_ZN5blink9scheduler21SimpleThreadScheduler22RemoveRAILModeObserverEPKNS_16RAILModeObserverE to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::SimpleThreadScheduler"*)* @_ZN5blink9scheduler21SimpleThreadScheduler12V8TaskRunnerEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::SimpleThreadScheduler"*)* @_ZN5blink9scheduler21SimpleThreadScheduler19NonWakingTaskRunnerEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::SimpleThreadScheduler"*)* @_ZN5blink9scheduler21SimpleThreadScheduler20CompositorTaskRunnerEv to i8*), i8* bitcast (%"class.base::SingleThreadTaskRunner"* (%"class.blink::scheduler::SimpleThreadScheduler"*)* @_ZN5blink9scheduler21SimpleThreadScheduler27DeprecatedDefaultTaskRunnerEv to i8*), i8* bitcast (%"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::scheduler::SimpleThreadScheduler"*)* @_ZN5blink9scheduler21SimpleThreadScheduler25CreateAgentGroupSchedulerEv to i8*), i8* bitcast (%"class.blink::scheduler::WebAgentGroupScheduler"* (%"class.blink::scheduler::SimpleThreadScheduler"*)* @_ZN5blink9scheduler21SimpleThreadScheduler29GetCurrentAgentGroupSchedulerEv to i8*), i8* bitcast (%"class.blink::scheduler::WebThreadScheduler::RendererPauseHandle"* (%"class.blink::scheduler::SimpleThreadScheduler"*)* @_ZN5blink9scheduler21SimpleThreadScheduler14PauseSchedulerEv to i8*), i8* bitcast (i64 (%"class.blink::scheduler::SimpleThreadScheduler"*)* @_ZN5blink9scheduler21SimpleThreadScheduler34MonotonicallyIncreasingVirtualTimeEv to i8*), i8* bitcast (void (%"class.blink::scheduler::SimpleThreadScheduler"*, %"class.base::TaskObserver"*)* @_ZN5blink9scheduler21SimpleThreadScheduler15AddTaskObserverEPN4base12TaskObserverE to i8*), i8* bitcast (void (%"class.blink::scheduler::SimpleThreadScheduler"*, %"class.base::TaskObserver"*)* @_ZN5blink9scheduler21SimpleThreadScheduler18RemoveTaskObserverEPN4base12TaskObserverE to i8*), i8* bitcast (void (%"class.WTF::Vector"*, %"class.blink::ThreadScheduler"*, i1)* @_ZNK5blink15ThreadScheduler23GetPendingUserInputInfoEb to i8*), i8* bitcast (i1 (%"class.blink::ThreadScheduler"*)* @_ZNK5blink15ThreadScheduler25IsBeginMainFrameScheduledEv to i8*), i8* bitcast (void (%"class.blink::scheduler::SimpleThreadScheduler"*, %"class.v8::Isolate"*)* @_ZN5blink9scheduler21SimpleThreadScheduler12SetV8IsolateEPN2v87IsolateE to i8*), i8* bitcast (void (%"class.blink::ThreadScheduler"*)* @_ZN5blink15ThreadScheduler18OnSafepointEnteredEv to i8*), i8* bitcast (void (%"class.blink::ThreadScheduler"*)* @_ZN5blink15ThreadScheduler17OnSafepointExitedEv to i8*), i8* bitcast (%"class.blink::scheduler::WebThreadScheduler"* (%"class.blink::ThreadScheduler"*)* @_ZN5blink15ThreadScheduler32GetWebMainThreadSchedulerForTestEv to i8*), i8* bitcast (%"class.blink::scheduler::NonMainThreadSchedulerImpl"* (%"class.blink::scheduler::SimpleThreadScheduler"*)* @_ZN5blink9scheduler21SimpleThreadScheduler24AsNonMainThreadSchedulerEv to i8*)] }, align 8

@_ZN5blink9scheduler21SimpleThreadSchedulerC1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::SimpleThreadScheduler"*), void (%"class.blink::scheduler::SimpleThreadScheduler"*)* @_ZN5blink9scheduler21SimpleThreadSchedulerC2Ev
@_ZN5blink9scheduler21SimpleThreadSchedulerD1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::SimpleThreadScheduler"*), void (%"class.blink::scheduler::SimpleThreadScheduler"*)* @_ZN5blink9scheduler21SimpleThreadSchedulerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink9scheduler21SimpleThreadSchedulerC2Ev(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::SimpleThreadScheduler", %"class.blink::scheduler::SimpleThreadScheduler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink9scheduler21SimpleThreadSchedulerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler21SimpleThreadSchedulerD2Ev(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler21SimpleThreadSchedulerD0Ev(%"class.blink::scheduler::SimpleThreadScheduler"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.blink::scheduler::SimpleThreadScheduler"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler21SimpleThreadScheduler8ShutdownEv(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink9scheduler21SimpleThreadScheduler30ShouldYieldForHighPriorityWorkEv(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink9scheduler21SimpleThreadScheduler31CanExceedIdleDeadlineIfRequiredEv(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler21SimpleThreadScheduler12PostIdleTaskERKN4base8LocationENS2_12OnceCallbackIFvNS2_9TimeTicksEEEE(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture, %"class.base::Location"* nocapture dereferenceable(32), %"class.base::OnceCallback"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler21SimpleThreadScheduler19PostDelayedIdleTaskERKN4base8LocationENS2_9TimeDeltaENS2_12OnceCallbackIFvNS2_9TimeTicksEEEE(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture, %"class.base::Location"* nocapture dereferenceable(32), i64, %"class.base::OnceCallback"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler21SimpleThreadScheduler23PostNonNestableIdleTaskERKN4base8LocationENS2_12OnceCallbackIFvNS2_9TimeTicksEEEE(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture, %"class.base::Location"* nocapture dereferenceable(32), %"class.base::OnceCallback"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler21SimpleThreadScheduler19AddRAILModeObserverEPNS_16RAILModeObserverE(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture, %"class.blink::RAILModeObserver"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler21SimpleThreadScheduler22RemoveRAILModeObserverEPKNS_16RAILModeObserverE(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture, %"class.blink::RAILModeObserver"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZN5blink9scheduler21SimpleThreadScheduler12V8TaskRunnerEv(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture readnone) unnamed_addr #2 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.1* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #7
  %3 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  ret %"class.base::SingleThreadTaskRunner"* %4
}

declare dereferenceable(8) %class.scoped_refptr.1* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZN5blink9scheduler21SimpleThreadScheduler20CompositorTaskRunnerEv(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture readnone) unnamed_addr #2 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.1* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #7
  %3 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  ret %"class.base::SingleThreadTaskRunner"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZN5blink9scheduler21SimpleThreadScheduler27DeprecatedDefaultTaskRunnerEv(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture readnone) unnamed_addr #2 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.1* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #7
  %3 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  ret %"class.base::SingleThreadTaskRunner"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZN5blink9scheduler21SimpleThreadScheduler19NonWakingTaskRunnerEv(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture readnone) unnamed_addr #2 align 2 {
  %2 = tail call dereferenceable(8) %class.scoped_refptr.1* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #7
  %3 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %2, i64 0, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %1, %6
  ret %"class.base::SingleThreadTaskRunner"* %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.blink::scheduler::WebAgentGroupScheduler"* @_ZN5blink9scheduler21SimpleThreadScheduler25CreateAgentGroupSchedulerEv(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.blink::scheduler::WebAgentGroupScheduler"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.blink::scheduler::WebAgentGroupScheduler"* @_ZN5blink9scheduler21SimpleThreadScheduler29GetCurrentAgentGroupSchedulerEv(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.blink::scheduler::WebAgentGroupScheduler"* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.blink::scheduler::WebThreadScheduler::RendererPauseHandle"* @_ZN5blink9scheduler21SimpleThreadScheduler14PauseSchedulerEv(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.blink::scheduler::WebThreadScheduler::RendererPauseHandle"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink9scheduler21SimpleThreadScheduler34MonotonicallyIncreasingVirtualTimeEv(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture readnone) unnamed_addr #2 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #7
  ret i64 %2
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler21SimpleThreadScheduler15AddTaskObserverEPN4base12TaskObserverE(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture, %"class.base::TaskObserver"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9scheduler21SimpleThreadScheduler18RemoveTaskObserverEPN4base12TaskObserverE(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture, %"class.base::TaskObserver"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.blink::scheduler::NonMainThreadSchedulerImpl"* @_ZN5blink9scheduler21SimpleThreadScheduler24AsNonMainThreadSchedulerEv(%"class.blink::scheduler::SimpleThreadScheduler"* nocapture readnone) unnamed_addr #1 align 2 {
  ret %"class.blink::scheduler::NonMainThreadSchedulerImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink15ThreadScheduler23GetPendingUserInputInfoEb(%"class.WTF::Vector"* noalias sret, %"class.blink::ThreadScheduler"*, i1 zeroext) unnamed_addr #2 comdat align 2 {
  %4 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ThreadScheduler25IsBeginMainFrameScheduledEv(%"class.blink::ThreadScheduler"*) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9scheduler21SimpleThreadScheduler12SetV8IsolateEPN2v87IsolateE(%"class.blink::scheduler::SimpleThreadScheduler"*, %"class.v8::Isolate"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ThreadScheduler18OnSafepointEnteredEv(%"class.blink::ThreadScheduler"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ThreadScheduler17OnSafepointExitedEv(%"class.blink::ThreadScheduler"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::scheduler::WebThreadScheduler"* @_ZN5blink15ThreadScheduler32GetWebMainThreadSchedulerForTestEv(%"class.blink::ThreadScheduler"*) unnamed_addr #2 comdat align 2 {
  ret %"class.blink::scheduler::WebThreadScheduler"* null
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
