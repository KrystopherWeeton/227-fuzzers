; ModuleID = '../../third_party/freetype/src/src/base/ftbdf.c'
source_filename = "../../third_party/freetype/src/src/base/ftbdf.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i32, [32 x %struct.FT_ModuleRec_*], %struct.FT_ListRec_, %struct.FT_RendererRec_*, %struct.FT_ModuleRec_*, [4 x i32 (i8*)*], [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_RendererRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Renderer_Class_*, i32, %struct.FT_Glyph_Class_, %struct.FT_RasterRec_*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)* }
%struct.FT_ModuleRec_ = type { %struct.FT_Module_Class_*, %struct.FT_LibraryRec_*, %struct.FT_MemoryRec_* }
%struct.FT_Module_Class_ = type { i64, i64, i8*, i64, i64, i8*, i32 (%struct.FT_ModuleRec_*)*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* }
%struct.FT_Renderer_Class_ = type { %struct.FT_Module_Class_, i32, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_RendererRec_*, i64, i8*)*, %struct.FT_Raster_Funcs_* }
%struct.FT_Matrix_ = type { i64, i64, i64, i64 }
%struct.FT_Raster_Funcs_ = type { i32, i32 (i8*, %struct.FT_RasterRec_**)*, void (%struct.FT_RasterRec_*, i8*, i64)*, i32 (%struct.FT_RasterRec_*, i64, i8*)*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, void (%struct.FT_RasterRec_*)* }
%struct.FT_Glyph_Class_ = type { i64, i32, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphRec_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphRec_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)* }
%struct.FT_GlyphRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_Glyph_Class_*, i32, %struct.FT_Vector_ }
%struct.FT_RasterRec_ = type opaque
%struct.FT_Raster_Params_ = type { %struct.FT_Bitmap_*, i8*, i32, void (i32, i32, %struct.FT_Span_*, i8*)*, void (i32, i32, %struct.FT_Span_*, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i8*)*, i8*, %struct.FT_BBox_ }
%struct.FT_Span_ = type { i16, i16, i8 }
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type { i32, i16, i32, i32, %struct.FT_Matrix_ }
%struct.FT_Slot_InternalRec_ = type { %struct.FT_GlyphLoaderRec_*, i32, i8, %struct.FT_Matrix_, %struct.FT_Vector_, i8*, i32 }
%struct.FT_GlyphLoaderRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i8, %struct.FT_GlyphLoadRec_, %struct.FT_GlyphLoadRec_, i8* }
%struct.FT_GlyphLoadRec_ = type { %struct.FT_Outline_, %struct.FT_Vector_*, %struct.FT_Vector_*, i32, %struct.FT_SubGlyphRec_* }
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type { i8*, i32, %struct.FT_Size_Metrics_ }
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Driver_ClassRec_*, %struct.FT_ListRec_, %struct.FT_GlyphLoaderRec_* }
%struct.FT_Driver_ClassRec_ = type { %struct.FT_Module_Class_, i64, i64, i64, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.FT_FaceRec_*)*, i32 (%struct.FT_SizeRec_*)*, void (%struct.FT_SizeRec_*)*, i32 (%struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphSlotRec_*)*, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)*, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)*, i32 (%struct.FT_SizeRec_*, i64)* }
%struct.FT_Parameter_ = type { i64, i8* }
%struct.FT_Size_RequestRec_ = type { i32, i64, i64, i32, i32 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type { %struct.FT_Matrix_, %struct.FT_Vector_, i32, %struct.FT_ServiceCacheRec_, %struct.FT_Incremental_InterfaceRec_*, i8, i32, [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_ServiceCacheRec_ = type { i8*, i8*, i8*, i8*, i8*, i8* }
%struct.FT_Incremental_InterfaceRec_ = type { %struct.FT_Incremental_FuncsRec_*, %struct.FT_IncrementalRec_* }
%struct.FT_Incremental_FuncsRec_ = type { i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* }
%struct.FT_Data_ = type { i8*, i32 }
%struct.FT_Incremental_MetricsRec_ = type { i64, i64, i64, i64 }
%struct.FT_IncrementalRec_ = type opaque
%struct.BDF_PropertyRec_ = type { i32, %union.anon }
%union.anon = type { i8* }

@.str = private unnamed_addr constant [4 x i8] c"bdf\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_BDF_Charset_ID(%struct.FT_FaceRec_*, i8**, i8**) local_unnamed_addr #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #2
  store i8* null, i8** %4, align 8
  %7 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #2
  store i8* null, i8** %5, align 8
  %8 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %8, label %40, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %11 = bitcast %struct.FT_DriverRec_** %10 to %struct.FT_ModuleRec_**
  %12 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %11, align 8
  %13 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %12, i64 0, i32 0
  %14 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %13, align 8
  %15 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %14, i64 0, i32 8
  %16 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %15, align 8
  %17 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %9
  %19 = tail call i8* %16(%struct.FT_ModuleRec_* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)) #2
  %20 = icmp eq i8* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %18
  %22 = bitcast i8* %19 to i32 (%struct.FT_FaceRec_*, i8**, i8**)**
  %23 = load i32 (%struct.FT_FaceRec_*, i8**, i8**)*, i32 (%struct.FT_FaceRec_*, i8**, i8**)** %22, align 8
  %24 = icmp eq i32 (%struct.FT_FaceRec_*, i8**, i8**)* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = call i32 %23(%struct.FT_FaceRec_* nonnull %0, i8** nonnull %4, i8** nonnull %5) #2
  br label %27

27:                                               ; preds = %9, %18, %21, %25
  %28 = phi i32 [ %26, %25 ], [ 6, %21 ], [ 6, %18 ], [ 6, %9 ]
  %29 = icmp eq i8** %1, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %27
  %31 = bitcast i8** %4 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %1 to i64*
  store i64 %32, i64* %33, align 8
  br label %34

34:                                               ; preds = %27, %30
  %35 = icmp eq i8** %2, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %34
  %37 = bitcast i8** %5 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast i8** %2 to i64*
  store i64 %38, i64* %39, align 8
  br label %40

40:                                               ; preds = %36, %34, %3
  %41 = phi i32 [ 35, %3 ], [ %28, %34 ], [ %28, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #2
  ret i32 %41
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Get_BDF_Property(%struct.FT_FaceRec_*, i8*, %struct.BDF_PropertyRec_*) local_unnamed_addr #0 {
  %4 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %3
  %6 = icmp eq %struct.BDF_PropertyRec_* %2, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.BDF_PropertyRec_, %struct.BDF_PropertyRec_* %2, i64 0, i32 0
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 24
  %10 = bitcast %struct.FT_DriverRec_** %9 to %struct.FT_ModuleRec_**
  %11 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %10, align 8
  %12 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %11, i64 0, i32 0
  %13 = load %struct.FT_Module_Class_*, %struct.FT_Module_Class_** %12, align 8
  %14 = getelementptr inbounds %struct.FT_Module_Class_, %struct.FT_Module_Class_* %13, i64 0, i32 8
  %15 = load i8* (%struct.FT_ModuleRec_*, i8*)*, i8* (%struct.FT_ModuleRec_*, i8*)** %14, align 8
  %16 = icmp eq i8* (%struct.FT_ModuleRec_*, i8*)* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %7
  %18 = tail call i8* %15(%struct.FT_ModuleRec_* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)) #2
  %19 = icmp eq i8* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds i8, i8* %18, i64 8
  %22 = bitcast i8* %21 to i32 (%struct.FT_FaceRec_*, i8*, %struct.BDF_PropertyRec_*)**
  %23 = load i32 (%struct.FT_FaceRec_*, i8*, %struct.BDF_PropertyRec_*)*, i32 (%struct.FT_FaceRec_*, i8*, %struct.BDF_PropertyRec_*)** %22, align 8
  %24 = icmp eq i32 (%struct.FT_FaceRec_*, i8*, %struct.BDF_PropertyRec_*)* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = tail call i32 %23(%struct.FT_FaceRec_* nonnull %0, i8* %1, %struct.BDF_PropertyRec_* nonnull %2) #2
  br label %27

27:                                               ; preds = %7, %25, %20, %17, %5, %3
  %28 = phi i32 [ 35, %3 ], [ 6, %5 ], [ %26, %25 ], [ 6, %20 ], [ 6, %17 ], [ 6, %7 ]
  ret i32 %28
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
