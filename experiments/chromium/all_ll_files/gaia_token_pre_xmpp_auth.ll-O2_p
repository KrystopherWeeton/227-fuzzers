; ModuleID = '../../jingle/notifier/base/gaia_token_pre_xmpp_auth.cc'
source_filename = "../../jingle/notifier/base/gaia_token_pre_xmpp_auth.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.jingle_xmpp::StaticQName" = type { i8*, i8* }
%"class.notifier::GaiaTokenPreXmppAuth" = type { %"class.jingle_xmpp::PreXmppAuth", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.jingle_xmpp::PreXmppAuth" = type { %"class.jingle_xmpp::SaslHandler", %"class.sigslot::signal_with_thread_policy" }
%"class.jingle_xmpp::SaslHandler" = type { i32 (...)** }
%"class.sigslot::signal_with_thread_policy" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::_signal_base.base" = type <{ %"class.sigslot::_signal_base_interface", %"class.std::__1::list", %"class.std::__1::__list_iterator", i8 }>
%"class.sigslot::_signal_base_interface" = type { void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)* }
%"class.sigslot::has_slots_interface" = type { i32 (...)**, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*)* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"class.sigslot::_opaque_connection" }
%"class.sigslot::_opaque_connection" = type { void (%"class.sigslot::_opaque_connection"*)*, %"class.sigslot::has_slots_interface"*, [16 x i8] }
%"class.jingle_xmpp::Jid" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.jingle_xmpp::CaptchaChallenge" = type { i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::basic_string"* }
%"class.jingle_xmpp::SaslMechanism" = type { i32 (...)** }
%"class.jingle_xmpp::SaslCookieMechanism" = type { %"class.jingle_xmpp::SaslMechanism", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.notifier::(anonymous namespace)::GaiaCookieMechanism" = type { %"class.jingle_xmpp::SaslCookieMechanism" }
%"class.jingle_xmpp::XmlElement" = type <{ %"class.jingle_xmpp::XmlChild", %"class.jingle_xmpp::QName", %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::XmlChild"*, %"class.jingle_xmpp::XmlChild"*, i8, [7 x i8] }>
%"class.jingle_xmpp::XmlChild" = type { i32 (...)**, %"class.jingle_xmpp::XmlChild"* }
%"class.jingle_xmpp::QName" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.jingle_xmpp::XmlAttr" = type { %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::QName", %"class.std::__1::basic_string" }

$_ZN11jingle_xmpp11PreXmppAuthD2Ev = comdat any

$_ZN11jingle_xmpp11PreXmppAuthD0Ev = comdat any

$_ZN7sigslot12_signal_baseINS_15single_threadedEE18do_slot_disconnectEPNS_22_signal_base_interfaceEPNS_19has_slots_interfaceE = comdat any

$_ZN7sigslot12_signal_baseINS_15single_threadedEE17do_slot_duplicateEPNS_22_signal_base_interfaceEPKNS_19has_slots_interfaceEPS5_ = comdat any

$_ZN11jingle_xmpp19SaslCookieMechanismC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_S9_ = comdat any

$_ZN11jingle_xmpp19SaslCookieMechanismD2Ev = comdat any

$_ZN11jingle_xmpp19SaslCookieMechanism16GetMechanismNameEv = comdat any

$_ZN11jingle_xmpp19SaslCookieMechanismD0Ev = comdat any

$_ZN11jingle_xmpp19SaslCookieMechanism13StartSaslAuthEv = comdat any

$_ZTVN11jingle_xmpp11PreXmppAuthE = comdat any

$_ZTVN11jingle_xmpp19SaslCookieMechanismE = comdat any

@_ZTVN8notifier20GaiaTokenPreXmppAuthE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.notifier::GaiaTokenPreXmppAuth"*)* @_ZN8notifier20GaiaTokenPreXmppAuthD2Ev to i8*), i8* bitcast (void (%"class.notifier::GaiaTokenPreXmppAuth"*)* @_ZN8notifier20GaiaTokenPreXmppAuthD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.notifier::GaiaTokenPreXmppAuth"*, %"class.std::__1::vector"*, i1)* @_ZN8notifier20GaiaTokenPreXmppAuth23ChooseBestSaslMechanismERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEb to i8*), i8* bitcast (%"class.jingle_xmpp::SaslMechanism"* (%"class.notifier::GaiaTokenPreXmppAuth"*, %"class.std::__1::basic_string"*)* @_ZN8notifier20GaiaTokenPreXmppAuth19CreateSaslMechanismERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.notifier::GaiaTokenPreXmppAuth"*, %"class.jingle_xmpp::Jid"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN8notifier20GaiaTokenPreXmppAuth16StartPreXmppAuthERKN11jingle_xmpp3JidERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_SD_ to i8*), i8* bitcast (i1 (%"class.notifier::GaiaTokenPreXmppAuth"*)* @_ZNK8notifier20GaiaTokenPreXmppAuth10IsAuthDoneEv to i8*), i8* bitcast (i1 (%"class.notifier::GaiaTokenPreXmppAuth"*)* @_ZNK8notifier20GaiaTokenPreXmppAuth12IsAuthorizedEv to i8*), i8* bitcast (i1 (%"class.notifier::GaiaTokenPreXmppAuth"*)* @_ZNK8notifier20GaiaTokenPreXmppAuth8HadErrorEv to i8*), i8* bitcast (i32 (%"class.notifier::GaiaTokenPreXmppAuth"*)* @_ZNK8notifier20GaiaTokenPreXmppAuth8GetErrorEv to i8*), i8* bitcast (void (%"class.jingle_xmpp::CaptchaChallenge"*, %"class.notifier::GaiaTokenPreXmppAuth"*)* @_ZNK8notifier20GaiaTokenPreXmppAuth19GetCaptchaChallengeEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.notifier::GaiaTokenPreXmppAuth"*)* @_ZNK8notifier20GaiaTokenPreXmppAuth16GetAuthMechanismEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.notifier::GaiaTokenPreXmppAuth"*)* @_ZNK8notifier20GaiaTokenPreXmppAuth12GetAuthTokenEv to i8*)] }, align 8
@_ZTVN11jingle_xmpp11PreXmppAuthE = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.jingle_xmpp::PreXmppAuth"*)* @_ZN11jingle_xmpp11PreXmppAuthD2Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::PreXmppAuth"*)* @_ZN11jingle_xmpp11PreXmppAuthD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN8notifier12_GLOBAL__N_119GaiaCookieMechanismE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.jingle_xmpp::SaslCookieMechanism"*)* @_ZN11jingle_xmpp19SaslCookieMechanismD2Ev to i8*), i8* bitcast (void (%"class.notifier::(anonymous namespace)::GaiaCookieMechanism"*)* @_ZN8notifier12_GLOBAL__N_119GaiaCookieMechanismD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::SaslCookieMechanism"*)* @_ZN11jingle_xmpp19SaslCookieMechanism16GetMechanismNameEv to i8*), i8* bitcast (%"class.jingle_xmpp::XmlElement"* (%"class.notifier::(anonymous namespace)::GaiaCookieMechanism"*)* @_ZN8notifier12_GLOBAL__N_119GaiaCookieMechanism13StartSaslAuthEv to i8*), i8* bitcast (%"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*)* @_ZN11jingle_xmpp13SaslMechanism19HandleSaslChallengeEPKNS_10XmlElementE to i8*), i8* bitcast (void (%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*)* @_ZN11jingle_xmpp13SaslMechanism17HandleSaslSuccessEPKNS_10XmlElementE to i8*), i8* bitcast (void (%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*)* @_ZN11jingle_xmpp13SaslMechanism17HandleSaslFailureEPKNS_10XmlElementE to i8*)] }, align 8
@_ZTVN11jingle_xmpp19SaslCookieMechanismE = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.jingle_xmpp::SaslCookieMechanism"*)* @_ZN11jingle_xmpp19SaslCookieMechanismD2Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::SaslCookieMechanism"*)* @_ZN11jingle_xmpp19SaslCookieMechanismD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::SaslCookieMechanism"*)* @_ZN11jingle_xmpp19SaslCookieMechanism16GetMechanismNameEv to i8*), i8* bitcast (%"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::SaslCookieMechanism"*)* @_ZN11jingle_xmpp19SaslCookieMechanism13StartSaslAuthEv to i8*), i8* bitcast (%"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*)* @_ZN11jingle_xmpp13SaslMechanism19HandleSaslChallengeEPKNS_10XmlElementE to i8*), i8* bitcast (void (%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*)* @_ZN11jingle_xmpp13SaslMechanism17HandleSaslSuccessEPKNS_10XmlElementE to i8*), i8* bitcast (void (%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*)* @_ZN11jingle_xmpp13SaslMechanism17HandleSaslFailureEPKNS_10XmlElementE to i8*)] }, comdat, align 8
@_ZN11jingle_xmpp12QN_SASL_AUTHE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp12QN_MECHANISME = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp22QN_GOOGLE_AUTH_SERVICEE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.1 = private unnamed_addr constant [2 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [41 x i8] c"http://www.google.com/talk/protocol/auth\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"allow-generated-jid\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"client-uses-full-bind-result\00", align 1

@_ZN8notifier20GaiaTokenPreXmppAuthC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_S9_ = hidden unnamed_addr alias void (%"class.notifier::GaiaTokenPreXmppAuth"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*), void (%"class.notifier::GaiaTokenPreXmppAuth"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN8notifier20GaiaTokenPreXmppAuthC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_S9_
@_ZN8notifier20GaiaTokenPreXmppAuthD1Ev = hidden unnamed_addr alias void (%"class.notifier::GaiaTokenPreXmppAuth"*), void (%"class.notifier::GaiaTokenPreXmppAuth"*)* @_ZN8notifier20GaiaTokenPreXmppAuthD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier20GaiaTokenPreXmppAuthC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_S9_(%"class.notifier::GaiaTokenPreXmppAuth"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)* @_ZN7sigslot12_signal_baseINS_15single_threadedEE18do_slot_disconnectEPNS_22_signal_base_interfaceEPNS_19has_slots_interfaceE, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)** %7, align 8
  %8 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  store void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)* @_ZN7sigslot12_signal_baseINS_15single_threadedEE17do_slot_duplicateEPNS_22_signal_base_interfaceEPKNS_19has_slots_interfaceEPS5_, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)** %8, align 8
  %9 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %9, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %9, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %10, %"struct.std::__1::__list_node_base"** %11, align 8
  %12 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %10, %"struct.std::__1::__list_node_base"** %12, align 8
  %13 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0
  store %"struct.std::__1::__list_node_base"* %10, %"struct.std::__1::__list_node_base"** %14, align 8
  %15 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 0, i32 1, i32 0, i32 3
  store i8 0, i8* %15, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN8notifier20GaiaTokenPreXmppAuthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %16 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %5
  %22 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false) #10
  br label %29

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %16, i8* %26, i64 %28) #10
  br label %29

29:                                               ; preds = %21, %24
  %30 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 2
  %31 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #10
  br label %43

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %30, i8* %40, i64 %42) #10
  br label %43

43:                                               ; preds = %35, %38
  %44 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 3
  %45 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  %51 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 24, i1 false) #10
  br label %57

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %44, i8* %54, i64 %56) #10
  br label %57

57:                                               ; preds = %49, %52
  %58 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 4
  %59 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %65 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 24, i1 false) #10
  br label %71

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %58, i8* %68, i64 %70) #10
  br label %71

71:                                               ; preds = %63, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier20GaiaTokenPreXmppAuthD2Ev(%"class.notifier::GaiaTokenPreXmppAuth"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN8notifier20GaiaTokenPreXmppAuthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 4
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 3
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %20, %26
  %30 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %29, %35
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN11jingle_xmpp11PreXmppAuthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %68, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %44 = bitcast %"struct.std::__1::__list_node_base"** %43 to %"struct.std::__1::__list_node"**
  %45 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  br label %46

46:                                               ; preds = %46, %42
  %47 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %44, align 8
  %48 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %47, i64 0, i32 1, i32 1
  %49 = load %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"** %48, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %47, i64 0, i32 0, i32 1
  %51 = bitcast %"struct.std::__1::__list_node_base"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %47, i64 0, i32 0, i32 0
  %54 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %54, i64 0, i32 1
  %56 = bitcast %"struct.std::__1::__list_node_base"** %55 to i64*
  store i64 %52, i64* %56, align 8
  %57 = bitcast %"struct.std::__1::__list_node"* %47 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.std::__1::__list_node_base"** %50 to i64**
  %60 = load i64*, i64** %59, align 8
  store i64 %58, i64* %60, align 8
  %61 = load i64, i64* %39, align 8
  %62 = add i64 %61, -1
  store i64 %62, i64* %39, align 8
  %63 = bitcast %"struct.std::__1::__list_node"* %47 to i8*
  tail call void @_ZdlPv(i8* %63) #11
  %64 = getelementptr inbounds %"class.sigslot::has_slots_interface", %"class.sigslot::has_slots_interface"* %49, i64 0, i32 2
  %65 = load void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %64, align 8
  tail call void %65(%"class.sigslot::has_slots_interface"* %49, %"class.sigslot::_signal_base_interface"* %45) #10
  %66 = load i64, i64* %39, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %46

68:                                               ; preds = %46, %38
  %69 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %70 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0
  store %"struct.std::__1::__list_node_base"* %69, %"struct.std::__1::__list_node_base"** %70, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier20GaiaTokenPreXmppAuthD0Ev(%"class.notifier::GaiaTokenPreXmppAuth"*) unnamed_addr #0 align 2 {
  tail call void @_ZN8notifier20GaiaTokenPreXmppAuthD2Ev(%"class.notifier::GaiaTokenPreXmppAuth"* %0) #10
  %2 = bitcast %"class.notifier::GaiaTokenPreXmppAuth"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier20GaiaTokenPreXmppAuth16StartPreXmppAuthERKN11jingle_xmpp3JidERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESD_SD_(%"class.notifier::GaiaTokenPreXmppAuth"*, %"class.jingle_xmpp::Jid"* nocapture readnone dereferenceable(72), %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24), %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24), %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__1::__list_node_base"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %10 = bitcast %"struct.std::__1::__list_node_base"** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %12 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %11, i64 0, i32 0
  %14 = inttoptr i64 %8 to %"struct.std::__1::__list_node_base"*
  %15 = icmp eq %"struct.std::__1::__list_node_base"* %12, %14
  br i1 %15, label %31, label %16

16:                                               ; preds = %5
  %17 = inttoptr i64 %8 to %"struct.std::__1::__list_node"*
  %18 = bitcast %"class.std::__1::__list_iterator"* %11 to i64*
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi %"struct.std::__1::__list_node"* [ %17, %16 ], [ %30, %19 ]
  %21 = phi %"struct.std::__1::__list_node_base"* [ %14, %16 ], [ %28, %19 ]
  %22 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %20, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %21, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__list_node_base"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %18, align 8
  %26 = getelementptr inbounds %"class.sigslot::_opaque_connection", %"class.sigslot::_opaque_connection"* %22, i64 0, i32 0
  %27 = load void (%"class.sigslot::_opaque_connection"*)*, void (%"class.sigslot::_opaque_connection"*)** %26, align 8
  tail call void %27(%"class.sigslot::_opaque_connection"* %22) #10
  %28 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %13, align 8
  %29 = icmp eq %"struct.std::__1::__list_node_base"* %28, %12
  %30 = bitcast %"struct.std::__1::__list_node_base"* %28 to %"struct.std::__1::__list_node"*
  br i1 %29, label %31, label %19

31:                                               ; preds = %19, %5
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK8notifier20GaiaTokenPreXmppAuth10IsAuthDoneEv(%"class.notifier::GaiaTokenPreXmppAuth"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK8notifier20GaiaTokenPreXmppAuth12IsAuthorizedEv(%"class.notifier::GaiaTokenPreXmppAuth"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK8notifier20GaiaTokenPreXmppAuth8HadErrorEv(%"class.notifier::GaiaTokenPreXmppAuth"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK8notifier20GaiaTokenPreXmppAuth8GetErrorEv(%"class.notifier::GaiaTokenPreXmppAuth"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8notifier20GaiaTokenPreXmppAuth19GetCaptchaChallengeEv(%"class.jingle_xmpp::CaptchaChallenge"* noalias nocapture sret, %"class.notifier::GaiaTokenPreXmppAuth"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::CaptchaChallenge", %"class.jingle_xmpp::CaptchaChallenge"* %0, i64 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::CaptchaChallenge", %"class.jingle_xmpp::CaptchaChallenge"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 48, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8notifier20GaiaTokenPreXmppAuth12GetAuthTokenEv(%"class.std::__1::basic_string"* noalias sret, %"class.notifier::GaiaTokenPreXmppAuth"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %1, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #10
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %13, i64 %15) #10
  br label %16

16:                                               ; preds = %8, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8notifier20GaiaTokenPreXmppAuth16GetAuthMechanismEv(%"class.std::__1::basic_string"* noalias sret, %"class.notifier::GaiaTokenPreXmppAuth"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %1, i64 0, i32 4
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #10
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %13, i64 %15) #10
  br label %16

16:                                               ; preds = %8, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8notifier20GaiaTokenPreXmppAuth23ChooseBestSaslMechanismERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEb(%"class.std::__1::basic_string"* noalias sret, %"class.notifier::GaiaTokenPreXmppAuth"* nocapture readonly, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i1 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %1, i64 0, i32 4
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %7, %9
  br i1 %10, label %66, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %23 = select i1 %15, i8* %21, i8* %22
  %24 = icmp eq i64 %19, 0
  br label %25

25:                                               ; preds = %63, %11
  %26 = phi %"class.std::__1::basic_string"* [ %7, %11 ], [ %64, %63 ]
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %29 to i64
  %34 = select i1 %30, i64 %32, i64 %33
  %35 = icmp eq i64 %34, %19
  br i1 %35, label %36, label %63

36:                                               ; preds = %25
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %40 = select i1 %30, i8* %38, i8* %39
  br i1 %30, label %47, label %41

41:                                               ; preds = %36
  br i1 %24, label %66, label %42

42:                                               ; preds = %41
  %43 = ptrtoint i8* %38 to i64
  %44 = trunc i64 %43 to i8
  %45 = load i8, i8* %23, align 1
  %46 = icmp eq i8 %45, %44
  br i1 %46, label %48, label %63

47:                                               ; preds = %36
  br i1 %24, label %66, label %60

48:                                               ; preds = %42, %55
  %49 = phi i64 [ %52, %55 ], [ %33, %42 ]
  %50 = phi i8* [ %53, %55 ], [ %39, %42 ]
  %51 = phi i8* [ %56, %55 ], [ %23, %42 ]
  %52 = add i64 %49, -1
  %53 = getelementptr inbounds i8, i8* %50, i64 1
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %66, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds i8, i8* %51, i64 1
  %57 = load i8, i8* %53, align 1
  %58 = load i8, i8* %56, align 1
  %59 = icmp eq i8 %57, %58
  br i1 %59, label %48, label %63

60:                                               ; preds = %47
  %61 = tail call i32 @bcmp(i8* %40, i8* %23, i64 %19) #10
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %55, %60, %42, %25
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 1
  %65 = icmp eq %"class.std::__1::basic_string"* %64, %9
  br i1 %65, label %82, label %25

66:                                               ; preds = %41, %47, %60, %48, %4
  %67 = phi %"class.std::__1::basic_string"* [ %7, %4 ], [ %26, %48 ], [ %26, %60 ], [ %26, %47 ], [ %26, %41 ]
  %68 = icmp eq %"class.std::__1::basic_string"* %67, %9
  br i1 %68, label %82, label %69

69:                                               ; preds = %66
  %70 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %76 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 24, i1 false) #10
  br label %84

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %79, i64 %81) #10
  br label %84

82:                                               ; preds = %63, %66
  %83 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 24, i1 false) #10
  br label %84

84:                                               ; preds = %77, %74, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.jingle_xmpp::SaslMechanism"* @_ZN8notifier20GaiaTokenPreXmppAuth19CreateSaslMechanismERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.notifier::GaiaTokenPreXmppAuth"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 4
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = zext i8 %6 to i64
  %11 = select i1 %7, i64 %9, i64 %10
  %12 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = icmp eq i64 %11, %19
  br i1 %20, label %21, label %61

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %25 = select i1 %7, i8* %23, i8* %24
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %29 = select i1 %15, i8* %27, i8* %28
  %30 = icmp eq i64 %11, 0
  br i1 %7, label %37, label %31

31:                                               ; preds = %21
  br i1 %30, label %53, label %32

32:                                               ; preds = %31
  %33 = ptrtoint i8* %23 to i64
  %34 = trunc i64 %33 to i8
  %35 = load i8, i8* %29, align 1
  %36 = icmp eq i8 %35, %34
  br i1 %36, label %38, label %61

37:                                               ; preds = %21
  br i1 %30, label %53, label %50

38:                                               ; preds = %32, %45
  %39 = phi i64 [ %42, %45 ], [ %10, %32 ]
  %40 = phi i8* [ %43, %45 ], [ %24, %32 ]
  %41 = phi i8* [ %46, %45 ], [ %29, %32 ]
  %42 = add i64 %39, -1
  %43 = getelementptr inbounds i8, i8* %40, i64 1
  %44 = icmp eq i64 %42, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds i8, i8* %41, i64 1
  %47 = load i8, i8* %43, align 1
  %48 = load i8, i8* %46, align 1
  %49 = icmp eq i8 %47, %48
  br i1 %49, label %38, label %61

50:                                               ; preds = %37
  %51 = tail call i32 @bcmp(i8* %25, i8* %29, i64 %11) #10
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %61

53:                                               ; preds = %38, %31, %37, %50
  %54 = tail call i8* @_Znwm(i64 104) #11
  %55 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 1
  %56 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 2
  %57 = getelementptr inbounds %"class.notifier::GaiaTokenPreXmppAuth", %"class.notifier::GaiaTokenPreXmppAuth"* %0, i64 0, i32 3
  %58 = bitcast i8* %54 to %"class.jingle_xmpp::SaslCookieMechanism"*
  tail call void @_ZN11jingle_xmpp19SaslCookieMechanismC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_S9_(%"class.jingle_xmpp::SaslCookieMechanism"* nonnull %58, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %55, %"class.std::__1::basic_string"* dereferenceable(24) %56, %"class.std::__1::basic_string"* dereferenceable(24) %57) #10
  %59 = bitcast i8* %54 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN8notifier12_GLOBAL__N_119GaiaCookieMechanismE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %60 = bitcast i8* %54 to %"class.jingle_xmpp::SaslMechanism"*
  br label %61

61:                                               ; preds = %45, %32, %2, %50, %53
  %62 = phi %"class.jingle_xmpp::SaslMechanism"* [ %60, %53 ], [ null, %50 ], [ null, %2 ], [ null, %32 ], [ null, %45 ]
  ret %"class.jingle_xmpp::SaslMechanism"* %62
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp11PreXmppAuthD2Ev(%"class.jingle_xmpp::PreXmppAuth"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::PreXmppAuth", %"class.jingle_xmpp::PreXmppAuth"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN11jingle_xmpp11PreXmppAuthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jingle_xmpp::PreXmppAuth", %"class.jingle_xmpp::PreXmppAuth"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %32, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.jingle_xmpp::PreXmppAuth", %"class.jingle_xmpp::PreXmppAuth"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::__list_node_base"** %7 to %"struct.std::__1::__list_node"**
  %9 = getelementptr inbounds %"class.jingle_xmpp::PreXmppAuth", %"class.jingle_xmpp::PreXmppAuth"* %0, i64 0, i32 1, i32 0, i32 0
  br label %10

10:                                               ; preds = %10, %6
  %11 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %8, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %11, i64 0, i32 1, i32 1
  %13 = load %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %11, i64 0, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::__list_node_base"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %11, i64 0, i32 0, i32 0
  %18 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %18, i64 0, i32 1
  %20 = bitcast %"struct.std::__1::__list_node_base"** %19 to i64*
  store i64 %16, i64* %20, align 8
  %21 = bitcast %"struct.std::__1::__list_node"* %11 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"struct.std::__1::__list_node_base"** %14 to i64**
  %24 = load i64*, i64** %23, align 8
  store i64 %22, i64* %24, align 8
  %25 = load i64, i64* %3, align 8
  %26 = add i64 %25, -1
  store i64 %26, i64* %3, align 8
  %27 = bitcast %"struct.std::__1::__list_node"* %11 to i8*
  tail call void @_ZdlPv(i8* %27) #11
  %28 = getelementptr inbounds %"class.sigslot::has_slots_interface", %"class.sigslot::has_slots_interface"* %13, i64 0, i32 2
  %29 = load void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)** %28, align 8
  tail call void %29(%"class.sigslot::has_slots_interface"* %13, %"class.sigslot::_signal_base_interface"* %9) #10
  %30 = load i64, i64* %3, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %10

32:                                               ; preds = %10, %1
  %33 = getelementptr inbounds %"class.jingle_xmpp::PreXmppAuth", %"class.jingle_xmpp::PreXmppAuth"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %34 = getelementptr inbounds %"class.jingle_xmpp::PreXmppAuth", %"class.jingle_xmpp::PreXmppAuth"* %0, i64 0, i32 1, i32 0, i32 2, i32 0
  store %"struct.std::__1::__list_node_base"* %33, %"struct.std::__1::__list_node_base"** %34, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp11PreXmppAuthD0Ev(%"class.jingle_xmpp::PreXmppAuth"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7sigslot12_signal_baseINS_15single_threadedEE18do_slot_disconnectEPNS_22_signal_base_interfaceEPNS_19has_slots_interfaceE(%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.sigslot::_signal_base_interface", %"class.sigslot::_signal_base_interface"* %0, i64 1
  %4 = getelementptr inbounds %"class.sigslot::_signal_base_interface", %"class.sigslot::_signal_base_interface"* %0, i64 1, i32 1
  %5 = bitcast void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.sigslot::_signal_base_interface"* %3 to %"struct.std::__1::__list_node_base"*
  %8 = inttoptr i64 %6 to %"struct.std::__1::__list_node_base"*
  %9 = icmp eq %"struct.std::__1::__list_node_base"* %8, %7
  br i1 %9, label %43, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.sigslot::_signal_base_interface", %"class.sigslot::_signal_base_interface"* %0, i64 2, i32 1
  %12 = bitcast void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)** %11 to %"struct.std::__1::__list_node_base"**
  %13 = getelementptr inbounds %"class.sigslot::_signal_base_interface", %"class.sigslot::_signal_base_interface"* %0, i64 2
  %14 = bitcast %"class.sigslot::_signal_base_interface"* %13 to i64*
  br label %15

15:                                               ; preds = %10, %41
  %16 = phi %"struct.std::__1::__list_node_base"* [ %8, %10 ], [ %25, %41 ]
  %17 = phi i64 [ %6, %10 ], [ %20, %41 ]
  %18 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 1
  %19 = bitcast %"struct.std::__1::__list_node_base"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = inttoptr i64 %17 to %"struct.std::__1::__list_node"*
  %22 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %21, i64 0, i32 1, i32 1
  %23 = load %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"** %22, align 8
  %24 = icmp eq %"class.sigslot::has_slots_interface"* %23, %1
  %25 = inttoptr i64 %20 to %"struct.std::__1::__list_node_base"*
  br i1 %24, label %26, label %41

26:                                               ; preds = %15
  %27 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %12, align 8
  %28 = icmp eq %"struct.std::__1::__list_node_base"* %27, %16
  %29 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %16, i64 0, i32 0
  %30 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %30, i64 0, i32 1
  %32 = bitcast %"struct.std::__1::__list_node_base"** %31 to i64*
  store i64 %20, i64* %32, align 8
  %33 = inttoptr i64 %17 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"struct.std::__1::__list_node_base"** %18 to i64**
  %36 = load i64*, i64** %35, align 8
  store i64 %34, i64* %36, align 8
  %37 = load i64, i64* %14, align 8
  %38 = add i64 %37, -1
  store i64 %38, i64* %14, align 8
  %39 = inttoptr i64 %17 to i8*
  tail call void @_ZdlPv(i8* %39) #11
  br i1 %28, label %40, label %41

40:                                               ; preds = %26
  store %"struct.std::__1::__list_node_base"* %25, %"struct.std::__1::__list_node_base"** %12, align 8
  br label %41

41:                                               ; preds = %26, %40, %15
  %42 = icmp eq %"struct.std::__1::__list_node_base"* %25, %7
  br i1 %42, label %43, label %15

43:                                               ; preds = %41, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7sigslot12_signal_baseINS_15single_threadedEE17do_slot_duplicateEPNS_22_signal_base_interfaceEPKNS_19has_slots_interfaceEPS5_(%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*) #0 comdat align 2 {
  %4 = alloca [16 x i8], align 8
  %5 = getelementptr inbounds %"class.sigslot::_signal_base_interface", %"class.sigslot::_signal_base_interface"* %0, i64 1
  %6 = getelementptr inbounds %"class.sigslot::_signal_base_interface", %"class.sigslot::_signal_base_interface"* %0, i64 1, i32 1
  %7 = bitcast void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)** %6 to i64*
  %8 = bitcast %"class.sigslot::_signal_base_interface"* %5 to %"struct.std::__1::__list_node_base"*
  %9 = load i64, i64* %7, align 8
  %10 = inttoptr i64 %9 to %"struct.std::__1::__list_node_base"*
  %11 = icmp eq %"struct.std::__1::__list_node_base"* %10, %8
  br i1 %11, label %50, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  %14 = bitcast %"class.sigslot::_signal_base_interface"* %5 to %"struct.std::__1::__list_node_base"**
  %15 = bitcast %"class.sigslot::_signal_base_interface"* %5 to i8**
  %16 = getelementptr inbounds %"class.sigslot::_signal_base_interface", %"class.sigslot::_signal_base_interface"* %0, i64 2
  %17 = bitcast %"class.sigslot::_signal_base_interface"* %16 to i64*
  br label %18

18:                                               ; preds = %12, %44
  %19 = phi %"struct.std::__1::__list_node_base"* [ %10, %12 ], [ %48, %44 ]
  %20 = phi i64 [ %9, %12 ], [ %47, %44 ]
  %21 = inttoptr i64 %20 to %"struct.std::__1::__list_node"*
  %22 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %21, i64 0, i32 1, i32 1
  %23 = load %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"** %22, align 8
  %24 = icmp eq %"class.sigslot::has_slots_interface"* %23, %1
  br i1 %24, label %25, label %44

25:                                               ; preds = %18
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13)
  %26 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %21, i64 0, i32 1, i32 0
  %27 = bitcast void (%"class.sigslot::_opaque_connection"*)** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %21, i64 0, i32 1, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %29, i64 16, i1 false)
  %30 = tail call i8* @_Znwm(i64 48) #11, !noalias !2
  %31 = bitcast i8* %30 to %"struct.std::__1::__list_node_base"**
  %32 = getelementptr inbounds i8, i8* %30, i64 16
  %33 = bitcast i8* %32 to i64*
  store i64 %28, i64* %33, align 8
  %34 = getelementptr inbounds i8, i8* %30, i64 24
  %35 = bitcast i8* %34 to %"class.sigslot::has_slots_interface"**
  store %"class.sigslot::has_slots_interface"* %2, %"class.sigslot::has_slots_interface"** %35, align 8
  %36 = getelementptr inbounds i8, i8* %30, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %13, i64 16, i1 false)
  %37 = getelementptr inbounds i8, i8* %30, i64 8
  %38 = bitcast i8* %37 to %"class.sigslot::_signal_base_interface"**
  store %"class.sigslot::_signal_base_interface"* %5, %"class.sigslot::_signal_base_interface"** %38, align 8
  %39 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %14, align 8
  store %"struct.std::__1::__list_node_base"* %39, %"struct.std::__1::__list_node_base"** %31, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %39, i64 0, i32 1
  %41 = bitcast %"struct.std::__1::__list_node_base"** %40 to i8**
  store i8* %30, i8** %41, align 8
  store i8* %30, i8** %15, align 8
  %42 = load i64, i64* %17, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13)
  br label %44

44:                                               ; preds = %25, %18
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %19, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %49 = icmp eq %"struct.std::__1::__list_node_base"* %48, %8
  br i1 %49, label %50, label %18

50:                                               ; preds = %44, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp19SaslCookieMechanismC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_S9_S9_(%"class.jingle_xmpp::SaslCookieMechanism"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN11jingle_xmpp19SaslCookieMechanismE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #10
  br label %20

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %7, i8* %17, i64 %19) #10
  br label %20

20:                                               ; preds = %12, %15
  %21 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %28 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #10
  br label %34

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %21, i8* %31, i64 %33) #10
  br label %34

34:                                               ; preds = %26, %29
  %35 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 3
  %36 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #10
  br label %48

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %35, i8* %45, i64 %47) #10
  br label %48

48:                                               ; preds = %40, %43
  %49 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 4
  %50 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %48
  %55 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %56 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false) #10
  br label %62

57:                                               ; preds = %48
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %49, i8* %59, i64 %61) #10
  br label %62

62:                                               ; preds = %54, %57
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp19SaslCookieMechanismD2Ev(%"class.jingle_xmpp::SaslCookieMechanism"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN11jingle_xmpp19SaslCookieMechanismE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 4
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 3
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %20, %26
  %30 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %29, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN8notifier12_GLOBAL__N_119GaiaCookieMechanismD0Ev(%"class.notifier::(anonymous namespace)::GaiaCookieMechanism"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.notifier::(anonymous namespace)::GaiaCookieMechanism", %"class.notifier::(anonymous namespace)::GaiaCookieMechanism"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN11jingle_xmpp19SaslCookieMechanismE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.notifier::(anonymous namespace)::GaiaCookieMechanism", %"class.notifier::(anonymous namespace)::GaiaCookieMechanism"* %0, i64 0, i32 0, i32 4
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.notifier::(anonymous namespace)::GaiaCookieMechanism", %"class.notifier::(anonymous namespace)::GaiaCookieMechanism"* %0, i64 0, i32 0, i32 3
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %17, %11
  %21 = getelementptr inbounds %"class.notifier::(anonymous namespace)::GaiaCookieMechanism", %"class.notifier::(anonymous namespace)::GaiaCookieMechanism"* %0, i64 0, i32 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %26, %20
  %30 = getelementptr inbounds %"class.notifier::(anonymous namespace)::GaiaCookieMechanism", %"class.notifier::(anonymous namespace)::GaiaCookieMechanism"* %0, i64 0, i32 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %29, %35
  %39 = bitcast %"class.notifier::(anonymous namespace)::GaiaCookieMechanism"* %0 to i8*
  tail call void @_ZdlPv(i8* %39) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp19SaslCookieMechanism16GetMechanismNameEv(%"class.std::__1::basic_string"* noalias sret, %"class.jingle_xmpp::SaslCookieMechanism"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %1, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #10
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %13, i64 %15) #10
  br label %16

16:                                               ; preds = %8, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.jingle_xmpp::XmlElement"* @_ZN8notifier12_GLOBAL__N_119GaiaCookieMechanism13StartSaslAuthEv(%"class.notifier::(anonymous namespace)::GaiaCookieMechanism"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.jingle_xmpp::QName", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.jingle_xmpp::QName", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.notifier::(anonymous namespace)::GaiaCookieMechanism", %"class.notifier::(anonymous namespace)::GaiaCookieMechanism"* %0, i64 0, i32 0
  %10 = tail call %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp19SaslCookieMechanism13StartSaslAuthEv(%"class.jingle_xmpp::SaslCookieMechanism"* %9)
  %11 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = tail call i8* @_Znwm(i64 48) #11
  store i8* %14, i8** %12, align 8
  %15 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> <i64 40, i64 -9223372036854775760>, <2 x i64>* %15, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %14, i8* align 1 getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0), i64 40, i1 false) #10
  %16 = getelementptr inbounds i8, i8* %14, i64 40
  store i8 0, i8* %16, align 1
  %17 = bitcast %"class.jingle_xmpp::QName"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #10
  %18 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %19 = bitcast %"class.jingle_xmpp::QName"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 48, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #10
  %20 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  store i8 19, i8* %21, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0), i64 19, i1 false) #10
  %22 = getelementptr inbounds i8, i8* %18, i64 19
  store i8 0, i8* %22, align 1
  call void @_ZN11jingle_xmpp5QNameC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.jingle_xmpp::QName"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #10
  %23 = load i8, i8* %21, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %1, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #10
  %29 = bitcast %"class.jingle_xmpp::QName"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %29) #10
  %30 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %31 = bitcast %"class.jingle_xmpp::QName"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 48, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #10
  %32 = call i8* @_Znwm(i64 32) #11
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %32, i8** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast i64* %34 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %35, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i64 28, i1 false) #10
  %36 = getelementptr inbounds i8, i8* %32, i64 28
  store i8 0, i8* %36, align 1
  call void @_ZN11jingle_xmpp5QNameC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.jingle_xmpp::QName"* nonnull %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #10
  %37 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %28
  %42 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %28, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #10
  %44 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #10
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 4, i8* %46, align 1
  %47 = bitcast %"class.std::__1::basic_string"* %7 to i32*
  store i32 1702195828, i32* %47, align 8
  %48 = getelementptr inbounds i8, i8* %44, i64 4
  store i8 0, i8* %48, align 4
  call void @_ZN11jingle_xmpp10XmlElement7SetAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"* %10, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #10
  %49 = load i8, i8* %46, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #11
  br label %54

54:                                               ; preds = %43, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #10
  %55 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #10
  %56 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  store i8 4, i8* %57, align 1
  %58 = bitcast %"class.std::__1::basic_string"* %8 to i32*
  store i32 1702195828, i32* %58, align 8
  %59 = getelementptr inbounds i8, i8* %55, i64 4
  store i8 0, i8* %59, align 4
  call void @_ZN11jingle_xmpp10XmlElement7SetAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"* %10, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #10
  %60 = load i8, i8* %57, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #11
  br label %65

65:                                               ; preds = %54, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #10
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %29) #10
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #10
  %66 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  %71 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %71) #11
  br label %72

72:                                               ; preds = %65, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  ret %"class.jingle_xmpp::XmlElement"* %10
}

declare %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp13SaslMechanism19HandleSaslChallengeEPKNS_10XmlElementE(%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*) unnamed_addr #7

declare void @_ZN11jingle_xmpp13SaslMechanism17HandleSaslSuccessEPKNS_10XmlElementE(%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*) unnamed_addr #7

declare void @_ZN11jingle_xmpp13SaslMechanism17HandleSaslFailureEPKNS_10XmlElementE(%"class.jingle_xmpp::SaslMechanism"*, %"class.jingle_xmpp::XmlElement"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp19SaslCookieMechanismD0Ev(%"class.jingle_xmpp::SaslCookieMechanism"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN11jingle_xmpp19SaslCookieMechanismE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 4
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 3
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %17, %11
  %21 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %26, %20
  %30 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %29, %35
  %39 = bitcast %"class.jingle_xmpp::SaslCookieMechanism"* %0 to i8*
  tail call void @_ZdlPv(i8* %39) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp19SaslCookieMechanism13StartSaslAuthEv(%"class.jingle_xmpp::SaslCookieMechanism"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.jingle_xmpp::QName", align 8
  %3 = alloca %"class.jingle_xmpp::QName", align 8
  %4 = alloca %"class.jingle_xmpp::QName", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = tail call i8* @_Znwm(i64 104) #11
  %8 = bitcast i8* %7 to %"class.jingle_xmpp::XmlElement"*
  %9 = bitcast %"class.jingle_xmpp::QName"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %2, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp12QN_SASL_AUTHE) #10
  call void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameEb(%"class.jingle_xmpp::XmlElement"* nonnull %8, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %2, i1 zeroext true) #10
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #10
  %10 = bitcast %"class.jingle_xmpp::QName"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %3, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp12QN_MECHANISME) #10
  %11 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 1
  call void @_ZN11jingle_xmpp10XmlElement7AddAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"* nonnull %8, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %3, %"class.std::__1::basic_string"* dereferenceable(24) %11) #10
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #10
  %12 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 4
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  br label %22

20:                                               ; preds = %1
  %21 = zext i8 %15 to i64
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i64 [ %19, %17 ], [ %21, %20 ]
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %22
  %26 = bitcast %"class.jingle_xmpp::QName"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %26) #10
  call void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* nonnull %4, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp22QN_GOOGLE_AUTH_SERVICEE) #10
  call void @_ZN11jingle_xmpp10XmlElement7AddAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"* nonnull %8, %"class.jingle_xmpp::QName"* nonnull dereferenceable(48) %4, %"class.std::__1::basic_string"* dereferenceable(24) %12) #10
  call void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %26) #10
  br label %27

27:                                               ; preds = %25, %22
  %28 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #10
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 24, i1 false) #10
  %30 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #10
  %31 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 2
  %32 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %41 = zext i8 %34 to i64
  %42 = select i1 %35, i8* %37, i8* %40
  %43 = select i1 %35, i64 %39, i64 %41
  %44 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %42, i64 %43) #10
  %45 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #10
  %46 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 3
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.jingle_xmpp::SaslCookieMechanism", %"class.jingle_xmpp::SaslCookieMechanism"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %56 = zext i8 %49 to i64
  %57 = select i1 %50, i8* %52, i8* %55
  %58 = select i1 %50, i64 %54, i64 %56
  %59 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %57, i64 %58) #10
  %60 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #10
  call void @_ZN11jingle_xmpp13SaslMechanism12Base64EncodeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #10
  call void @_ZN11jingle_xmpp10XmlElement7AddTextERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"* nonnull %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #10
  %61 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %27
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %67) #11
  br label %68

68:                                               ; preds = %27, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #10
  %69 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %68
  %74 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %74) #11
  br label %75

75:                                               ; preds = %68, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #10
  ret %"class.jingle_xmpp::XmlElement"* %8
}

declare void @_ZN11jingle_xmpp5QNameC1ERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"*, %"struct.jingle_xmpp::StaticQName"* dereferenceable(16)) unnamed_addr #7

declare void @_ZN11jingle_xmpp10XmlElementC1ERKNS_5QNameEb(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::QName"* dereferenceable(48), i1 zeroext) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp5QNameD1Ev(%"class.jingle_xmpp::QName"*) unnamed_addr #8

declare void @_ZN11jingle_xmpp10XmlElement7AddAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::QName"* dereferenceable(48), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #7

declare void @_ZN11jingle_xmpp10XmlElement7AddTextERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7

declare void @_ZN11jingle_xmpp13SaslMechanism12Base64EncodeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN11jingle_xmpp5QNameC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.jingle_xmpp::QName"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #7

declare void @_ZN11jingle_xmpp10XmlElement7SetAttrERKNS_5QNameERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::QName"* dereferenceable(48), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { argmemonly nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__14listIN7sigslot18_opaque_connectionENS_9allocatorIS2_EEE15__allocate_nodeERNS3_INS_11__list_nodeIS2_PvEEEE: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__14listIN7sigslot18_opaque_connectionENS_9allocatorIS2_EEE15__allocate_nodeERNS3_INS_11__list_nodeIS2_PvEEEE"}
