; ModuleID = '../../third_party/skia/src/effects/imagefilters/SkTileImageFilter.cpp'
source_filename = "../../third_party/skia/src/effects/imagefilters/SkTileImageFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPaint = type <{ %class.sk_sp.35, %class.sk_sp.36, %class.sk_sp.37, %class.sk_sp.38, %class.sk_sp, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.35 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.36 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.37 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.38 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray = type { %class.sk_sp*, i64 }
%"struct.SkImageFilters::CropRect" = type { %struct.SkRect }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp*, [16 x i8] }
%class.sk_sp.15 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.2*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.15*, %class.SkReadBuffer*)* }
%class.sk_sp.2 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkDeserialProcs = type { void (%class.sk_sp.8*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.13*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.2*, i8*, i64, i8*)*, i8* }
%class.sk_sp.8 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.9", [7 x i8] }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%class.sk_sp.13 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.14, i32, i32 }
%class.sk_sp.14 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.SkImageFilter_Base::Common" = type { %"class.SkImageFilter_Base::CropRect", %class.SkSTArray }
%"class.(anonymous namespace)::SkTileImageFilter" = type { %class.SkImageFilter_Base.base, %struct.SkRect, %struct.SkRect, [4 x i8] }
%class.SkImageFilter_Base.base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32 }>
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.16*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.16*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.16 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.17, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%class.sk_sp.18 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%class.SkImageFilterCache = type opaque
%"class.skif::FilterResult" = type { %class.sk_sp.18, %"class.skif::LayerSpace.19" }
%"class.skif::LayerSpace.19" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.sk_sp.20 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.sk_sp.39 = type { %class.SkSpecialSurface* }
%class.SkSpecialSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, [4 x i8] }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.21, [384 x i64], %class.sk_sp.22, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.23", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.29" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.21 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.22 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkImageFilter18getFlattenableTypeEv = comdat any

$_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter = comdat any

$_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv = comdat any

$_ZNK18SkImageFilter_Base23affectsTransparentBlackEv = comdat any

@.str = private unnamed_addr constant [18 x i8] c"SkTileImageFilter\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"SkTileImageFilterImpl\00", align 1
@_ZTVN12_GLOBAL__N_117SkTileImageFilterE = internal unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkImageFilter_Base*)* @_ZN18SkImageFilter_BaseD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkTileImageFilter"*)* @_ZN12_GLOBAL__N_117SkTileImageFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.15*, %class.SkReadBuffer*)* (%"class.(anonymous namespace)::SkTileImageFilter"*)* @_ZNK12_GLOBAL__N_117SkTileImageFilter10getFactoryEv to i8*), i8* bitcast (i8* (%"class.(anonymous namespace)::SkTileImageFilter"*)* @_ZNK12_GLOBAL__N_117SkTileImageFilter11getTypeNameEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkTileImageFilter"*, %class.SkWriteBuffer*)* @_ZNK12_GLOBAL__N_117SkTileImageFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkImageFilter*)* @_ZNK13SkImageFilter18getFlattenableTypeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.(anonymous namespace)::SkTileImageFilter"*, %struct.SkRect*)* @_ZNK12_GLOBAL__N_117SkTileImageFilter17computeFastBoundsERK6SkRect to i8*), i8* bitcast (void (%class.sk_sp.18*, %"class.(anonymous namespace)::SkTileImageFilter"*, %"class.skif::Context"*, %struct.SkIPoint*)* @_ZNK12_GLOBAL__N_117SkTileImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint to i8*), i8* bitcast ({ i64, i64 } (%"class.(anonymous namespace)::SkTileImageFilter"*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK12_GLOBAL__N_117SkTileImageFilter14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_ to i8*), i8* bitcast ({ i64, i64 } (%"class.(anonymous namespace)::SkTileImageFilter"*, %struct.SkIRect*, %class.SkMatrix*, i32, %struct.SkIRect*)* @_ZNK12_GLOBAL__N_117SkTileImageFilter18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_ to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*, %class.SkColorFilter**)* @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv to i8*), i8* bitcast (i1 (%class.SkImageFilter_Base*)* @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv to i8*), i8* bitcast (void ()* @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*, %"class.skif::LayerSpace"*, i1)* @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE to i8*), i8* bitcast ({ i64, i64 } (%class.SkImageFilter_Base*, %"class.skif::Mapping"*, %"class.skif::LayerSpace"*)* @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE to i8*)] }, align 8
@__const._ZNK12_GLOBAL__N_117SkTileImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.paint.2 = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.35 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.36 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.37 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.38 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZN12_GLOBAL__N_117SkTileImageFilter10CreateProcER12SkReadBuffer.common = private unnamed_addr constant { %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray } { %"class.SkImageFilter_Base::CropRect" { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %class.SkSTArray { %class.SkAlignedSTStorage { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray { %class.sk_sp* inttoptr (i64 -6148914691236517206 to %class.sk_sp*), i64 -6148914691236517206 } } }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkImageFilters4TileERK6SkRectS2_5sk_spI13SkImageFilterE(%class.sk_sp* noalias sret, %struct.SkRect* dereferenceable(16), %struct.SkRect* nocapture readonly dereferenceable(16), %class.sk_sp* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.SkRect, align 4
  %6 = alloca %class.sk_sp, align 8
  %7 = alloca %"struct.SkImageFilters::CropRect", align 4
  %8 = alloca %class.sk_sp, align 8
  %9 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %12 = load float, float* %11, align 4
  %13 = fcmp ugt float %10, %12
  br i1 %13, label %52, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %18 = load float, float* %17, align 4
  %19 = fcmp ugt float %16, %18
  br i1 %19, label %52, label %20

20:                                               ; preds = %14
  %21 = fsub float %12, %10
  %22 = bitcast float %21 to i32
  %23 = and i32 %22, 2139095040
  %24 = icmp eq i32 %23, 2139095040
  br i1 %24, label %52, label %25

25:                                               ; preds = %20
  %26 = fsub float %18, %16
  %27 = bitcast float %26 to i32
  %28 = and i32 %27, 2139095040
  %29 = icmp eq i32 %28, 2139095040
  br i1 %29, label %52, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %34 = load float, float* %33, align 4
  %35 = fcmp ugt float %32, %34
  br i1 %35, label %52, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  %40 = load float, float* %39, align 4
  %41 = fcmp ugt float %38, %40
  br i1 %41, label %52, label %42

42:                                               ; preds = %36
  %43 = fsub float %34, %32
  %44 = bitcast float %43 to i32
  %45 = and i32 %44, 2139095040
  %46 = icmp eq i32 %45, 2139095040
  br i1 %46, label %52, label %47

47:                                               ; preds = %42
  %48 = fsub float %40, %38
  %49 = bitcast float %48 to i32
  %50 = and i32 %49, 2139095040
  %51 = icmp eq i32 %50, 2139095040
  br i1 %51, label %52, label %54

52:                                               ; preds = %47, %25, %30, %36, %42, %4, %14, %20
  %53 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkImageFilter* null, %class.SkImageFilter** %53, align 8
  br label %119

54:                                               ; preds = %47
  %55 = fcmp oeq float %21, %43
  %56 = fcmp oeq float %26, %48
  %57 = and i1 %55, %56
  br i1 %57, label %58, label %93

58:                                               ; preds = %54
  %59 = bitcast %struct.SkRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #10
  %60 = bitcast %struct.SkRect* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %59, i8* align 4 %60, i64 16, i1 false)
  %61 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %5, %struct.SkRect* dereferenceable(16) %1) #10
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %64 = bitcast %class.sk_sp* %3 to i64*
  %65 = load i64, i64* %64, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %63, align 8
  %66 = bitcast %class.sk_sp* %0 to i64*
  store i64 %65, i64* %66, align 8
  br label %92

67:                                               ; preds = %58
  %68 = load float, float* %31, align 4
  %69 = load float, float* %9, align 4
  %70 = fsub float %68, %69
  %71 = load float, float* %37, align 4
  %72 = load float, float* %15, align 4
  %73 = fsub float %71, %72
  %74 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %75 = bitcast %class.sk_sp* %3 to i64*
  %76 = load i64, i64* %75, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %74, align 8
  %77 = bitcast %class.sk_sp* %6 to i64*
  store i64 %76, i64* %77, align 8
  %78 = bitcast %"struct.SkImageFilters::CropRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %78, i8* nonnull align 4 %59, i64 16, i1 false) #10
  call void @_ZN14SkImageFilters6OffsetEff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* sret %0, float %70, float %73, %class.sk_sp* nonnull %6, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #10
  %79 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %80 = load %class.SkImageFilter*, %class.SkImageFilter** %79, align 8
  %81 = icmp eq %class.SkImageFilter* %80, null
  br i1 %81, label %92, label %82

82:                                               ; preds = %67
  %83 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %80, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = bitcast %class.SkImageFilter* %80 to %class.SkRefCntBase*
  %88 = bitcast %class.SkImageFilter* %80 to void (%class.SkRefCntBase*)***
  %89 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, i64 2
  %91 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, align 8
  call void %91(%class.SkRefCntBase* nonnull %87) #10
  br label %92

92:                                               ; preds = %86, %82, %67, %62
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #10
  br label %119

93:                                               ; preds = %54
  %94 = tail call i8* @_Znwm(i64 112) #11
  %95 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %96 = bitcast %class.sk_sp* %3 to i64*
  %97 = load i64, i64* %96, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %95, align 8
  %98 = bitcast %class.sk_sp* %8 to i64*
  store i64 %97, i64* %98, align 8
  %99 = bitcast i8* %94 to %class.SkImageFilter_Base*
  call void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base* nonnull %99, %class.sk_sp* nonnull %8, i32 1, %struct.SkRect* null) #10
  %100 = bitcast i8* %94 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN12_GLOBAL__N_117SkTileImageFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %100, align 8
  %101 = getelementptr inbounds i8, i8* %94, i64 76
  %102 = bitcast %struct.SkRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %102, i64 16, i1 false) #10
  %103 = getelementptr inbounds i8, i8* %94, i64 92
  %104 = bitcast %struct.SkRect* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 16, i1 false) #10
  %105 = bitcast %class.sk_sp* %0 to i8**
  store i8* %94, i8** %105, align 8
  %106 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  %107 = load %class.SkImageFilter*, %class.SkImageFilter** %106, align 8
  %108 = icmp eq %class.SkImageFilter* %107, null
  br i1 %108, label %119, label %109

109:                                              ; preds = %93
  %110 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %107, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = atomicrmw add i32* %110, i32 -1 acq_rel
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %119

113:                                              ; preds = %109
  %114 = bitcast %class.SkImageFilter* %107 to %class.SkRefCntBase*
  %115 = bitcast %class.SkImageFilter* %107 to void (%class.SkRefCntBase*)***
  %116 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %115, align 8
  %117 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %116, i64 2
  %118 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %117, align 8
  call void %118(%class.SkRefCntBase* nonnull %114) #10
  br label %119

119:                                              ; preds = %113, %109, %93, %92, %52
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN14SkImageFilters6OffsetEff5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp* sret, float, float, %class.sk_sp*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z36SkRegisterTileImageFilterFlattenablev() local_unnamed_addr #0 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_117SkTileImageFilter10CreateProcER12SkReadBuffer) #10
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), void (%class.sk_sp.15*, %class.SkReadBuffer*)* nonnull @_ZN12_GLOBAL__N_117SkTileImageFilter10CreateProcER12SkReadBuffer) #10
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.15*, %class.SkReadBuffer*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_117SkTileImageFilter10CreateProcER12SkReadBuffer(%class.sk_sp.15* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %"class.SkImageFilter_Base::Common", align 8
  %4 = alloca %struct.SkRect, align 4
  %5 = alloca %struct.SkRect, align 4
  %6 = alloca %class.sk_sp, align 8
  %7 = alloca %class.sk_sp, align 8
  %8 = bitcast %"class.SkImageFilter_Base::Common"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast ({ %"class.SkImageFilter_Base::CropRect", [4 x i8], %class.SkSTArray }* @__const._ZN12_GLOBAL__N_117SkTileImageFilter10CreateProcER12SkReadBuffer.common to i8*), i64 40, i1 false)
  %9 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 16
  %11 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 0
  %12 = getelementptr inbounds %"class.SkImageFilter_Base::Common", %"class.SkImageFilter_Base::Common"* %3, i64 0, i32 1, i32 0, i32 0, i64 24
  %13 = bitcast i8* %12 to i64*
  %14 = bitcast i8* %10 to i8**
  store i8* %11, i8** %14, align 8
  store i64 17179869184, i64* %13, align 8
  %15 = call zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"* nonnull %3, %class.SkReadBuffer* dereferenceable(136) %1, i32 1) #10
  br i1 %15, label %18, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %17, align 8
  br label %51

18:                                               ; preds = %2
  %19 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #10
  %20 = bitcast %struct.SkRect* %5 to i8*
  %21 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %21, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #10
  %22 = bitcast %struct.SkRect* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %22, i8 -1, i64 16, i1 false)
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* nonnull %4) #10
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* nonnull %5) #10
  %23 = bitcast %class.sk_sp* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  %24 = bitcast i8* %10 to %class.sk_sp**
  %25 = load %class.sk_sp*, %class.sk_sp** %24, align 8, !noalias !2
  %26 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %7, i64 0, i32 0
  %27 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %25, i64 0, i32 0
  %28 = load %class.SkImageFilter*, %class.SkImageFilter** %27, align 8, !noalias !2
  %29 = icmp eq %class.SkImageFilter* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %18
  %31 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 1 monotonic, !noalias !2
  br label %33

33:                                               ; preds = %30, %18
  store %class.SkImageFilter* %28, %class.SkImageFilter** %26, align 8, !alias.scope !2
  call void @_ZN14SkImageFilters4TileERK6SkRectS2_5sk_spI13SkImageFilterE(%class.sk_sp* nonnull sret %6, %struct.SkRect* nonnull dereferenceable(16) %4, %struct.SkRect* nonnull dereferenceable(16) %5, %class.sk_sp* nonnull %7)
  %34 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %35 = bitcast %class.sk_sp* %6 to i64*
  %36 = load i64, i64* %35, align 8
  store %class.SkImageFilter* null, %class.SkImageFilter** %34, align 8
  %37 = bitcast %class.sk_sp.15* %0 to i64*
  store i64 %36, i64* %37, align 8
  %38 = load %class.SkImageFilter*, %class.SkImageFilter** %26, align 8
  %39 = icmp eq %class.SkImageFilter* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %38, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 -1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = bitcast %class.SkImageFilter* %38 to %class.SkRefCntBase*
  %46 = bitcast %class.SkImageFilter* %38 to void (%class.SkRefCntBase*)***
  %47 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %46, align 8
  %48 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, i64 2
  %49 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, align 8
  call void %49(%class.SkRefCntBase* nonnull %45) #10
  br label %50

50:                                               ; preds = %33, %40, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #10
  br label %51

51:                                               ; preds = %50, %16
  %52 = load i64, i64* %13, align 8
  %53 = and i64 %52, 4294967294
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = bitcast i8* %10 to %class.sk_sp**
  br label %61

57:                                               ; preds = %77, %51
  %58 = phi i64 [ %52, %51 ], [ %79, %77 ]
  %59 = and i64 %58, 1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %85, label %83

61:                                               ; preds = %77, %55
  %62 = phi i64 [ 0, %55 ], [ %78, %77 ]
  %63 = load %class.sk_sp*, %class.sk_sp** %56, align 8
  %64 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %63, i64 %62, i32 0
  %65 = load %class.SkImageFilter*, %class.SkImageFilter** %64, align 8
  %66 = icmp eq %class.SkImageFilter* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %65, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = bitcast %class.SkImageFilter* %65 to %class.SkRefCntBase*
  %73 = bitcast %class.SkImageFilter* %65 to void (%class.SkRefCntBase*)***
  %74 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %73, align 8
  %75 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, i64 2
  %76 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, align 8
  call void %76(%class.SkRefCntBase* nonnull %72) #10
  br label %77

77:                                               ; preds = %71, %67, %61
  %78 = add nuw nsw i64 %62, 1
  %79 = load i64, i64* %13, align 8
  %80 = lshr i64 %79, 1
  %81 = and i64 %80, 2147483647
  %82 = icmp ult i64 %78, %81
  br i1 %82, label %61, label %57

83:                                               ; preds = %57
  %84 = load i8*, i8** %14, align 8
  call void @_Z7sk_freePv(i8* %84) #10
  br label %85

85:                                               ; preds = %57, %83
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #10
  ret void
}

declare void @_ZN18SkImageFilter_BaseC2EPK5sk_spI13SkImageFilterEiPK6SkRect(%class.SkImageFilter_Base*, %class.sk_sp*, i32, %struct.SkRect*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_117SkTileImageFilterD0Ev(%"class.(anonymous namespace)::SkTileImageFilter"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::SkTileImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZN18SkImageFilter_BaseD2Ev(%class.SkImageFilter_Base* %2) #10
  %3 = bitcast %"class.(anonymous namespace)::SkTileImageFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #10
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal nonnull void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZNK12_GLOBAL__N_117SkTileImageFilter10getFactoryEv(%"class.(anonymous namespace)::SkTileImageFilter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret void (%class.sk_sp.15*, %class.SkReadBuffer*)* @_ZN12_GLOBAL__N_117SkTileImageFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i8* @_ZNK12_GLOBAL__N_117SkTileImageFilter11getTypeNameEv(%"class.(anonymous namespace)::SkTileImageFilter"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_117SkTileImageFilter7flattenER13SkWriteBuffer(%"class.(anonymous namespace)::SkTileImageFilter"*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.(anonymous namespace)::SkTileImageFilter"* %0 to %class.SkImageFilter_Base*
  tail call void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base* %3, %class.SkWriteBuffer* dereferenceable(56) %1) #10
  %4 = getelementptr inbounds %"class.(anonymous namespace)::SkTileImageFilter", %"class.(anonymous namespace)::SkTileImageFilter"* %0, i64 0, i32 1
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %struct.SkRect*)***
  %6 = load void (%class.SkWriteBuffer*, %struct.SkRect*)**, void (%class.SkWriteBuffer*, %struct.SkRect*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %6, i64 22
  %8 = load void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, %struct.SkRect* dereferenceable(16) %4) #10
  %9 = getelementptr inbounds %"class.(anonymous namespace)::SkTileImageFilter", %"class.(anonymous namespace)::SkTileImageFilter"* %0, i64 0, i32 2
  %10 = load void (%class.SkWriteBuffer*, %struct.SkRect*)**, void (%class.SkWriteBuffer*, %struct.SkRect*)*** %5, align 8
  %11 = getelementptr inbounds void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %10, i64 22
  %12 = load void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %11, align 8
  tail call void %12(%class.SkWriteBuffer* %1, %struct.SkRect* dereferenceable(16) %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK13SkImageFilter18getFlattenableTypeEv(%class.SkImageFilter*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal { <2 x float>, <2 x float> } @_ZNK12_GLOBAL__N_117SkTileImageFilter17computeFastBoundsERK6SkRect(%"class.(anonymous namespace)::SkTileImageFilter"* nocapture readonly, %struct.SkRect* nocapture readnone dereferenceable(16)) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::SkTileImageFilter", %"class.(anonymous namespace)::SkTileImageFilter"* %0, i64 0, i32 2
  %4 = bitcast %struct.SkRect* %3 to <2 x float>*
  %5 = load <2 x float>, <2 x float>* %4, align 4
  %6 = getelementptr inbounds %"class.(anonymous namespace)::SkTileImageFilter", %"class.(anonymous namespace)::SkTileImageFilter"* %0, i64 0, i32 2, i32 2
  %7 = bitcast float* %6 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %5, 0
  %10 = insertvalue { <2 x float>, <2 x float> } %9, <2 x float> %8, 1
  ret { <2 x float>, <2 x float> } %10
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_117SkTileImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint(%class.sk_sp.18* noalias sret, %"class.(anonymous namespace)::SkTileImageFilter"*, %"class.skif::Context"* dereferenceable(136), %struct.SkIPoint* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %struct.SkIRect, align 4
  %6 = alloca %"class.skif::FilterResult", align 8
  %7 = alloca %struct.SkRect, align 4
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca %struct.SkRect, align 4
  %10 = alloca %struct.SkIRect, align 4
  %11 = alloca { i64, i64 }, align 8
  %12 = bitcast { i64, i64 }* %11 to %struct.SkIRect*
  %13 = alloca %class.sk_sp.13, align 8
  %14 = alloca %class.sk_sp.20, align 8
  %15 = alloca i64, align 8
  %16 = bitcast i64* %15 to %struct.SkISize*
  %17 = alloca %class.SkPaint, align 8
  %18 = alloca %struct.SkSamplingOptions, align 4
  %19 = alloca %class.sk_sp.13, align 8
  %20 = alloca %class.sk_sp.39, align 8
  %21 = alloca i64, align 8
  %22 = bitcast i64* %21 to %struct.SkISize*
  %23 = alloca %class.SkPaint, align 8
  %24 = alloca %class.sk_sp.36, align 8
  %25 = alloca %struct.SkSamplingOptions, align 4
  %26 = bitcast %"class.(anonymous namespace)::SkTileImageFilter"* %1 to %class.SkImageFilter_Base*
  %27 = bitcast %"class.skif::FilterResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #10, !noalias !5
  call void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* nonnull sret %6, %class.SkImageFilter_Base* %26, i32 0, %"class.skif::Context"* dereferenceable(136) %2) #10, !noalias !5
  %28 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %6, i64 0, i32 0, i32 0
  %29 = load %class.SkSpecialImage*, %class.SkSpecialImage** %28, align 8, !noalias !8
  %30 = icmp eq %class.SkSpecialImage* %29, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %4
  %32 = getelementptr inbounds %"class.skif::FilterResult", %"class.skif::FilterResult"* %6, i64 0, i32 1, i32 0
  %33 = bitcast %struct.SkIPoint* %32 to i64*
  %34 = load i64, i64* %33, align 8, !noalias !8
  %35 = trunc i64 %34 to i32
  %36 = lshr i64 %34, 32
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %29, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 1 monotonic, !noalias !8
  %40 = atomicrmw add i32* %38, i32 -1 acq_rel, !noalias !5
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %50

42:                                               ; preds = %31
  %43 = bitcast %class.SkSpecialImage* %29 to %class.SkRefCntBase*
  %44 = bitcast %class.SkSpecialImage* %29 to void (%class.SkRefCntBase*)***
  %45 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %44, align 8, !noalias !5
  %46 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, i64 2
  %47 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, align 8, !noalias !5
  call void %47(%class.SkRefCntBase* nonnull %43) #10, !noalias !5
  br label %50

48:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #10, !noalias !5
  %49 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %49, align 8
  br label %414

50:                                               ; preds = %42, %31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #10, !noalias !5
  %51 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  %52 = bitcast %struct.SkRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #10
  %53 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 0, i32 0
  %54 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 0, i32 1
  %55 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.(anonymous namespace)::SkTileImageFilter", %"class.(anonymous namespace)::SkTileImageFilter"* %1, i64 0, i32 2
  %57 = bitcast %struct.SkRect* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %57, i8 -1, i64 16, i1 false)
  %58 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %55, %struct.SkRect* nonnull %7, %struct.SkRect* dereferenceable(16) %56, i32 1) #10
  %59 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #10
  %60 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 1, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = sitofp i32 %61 to float
  %63 = insertelement <2 x float> undef, float %62, i32 0
  %64 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 1, i32 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = sitofp i32 %65 to float
  %67 = insertelement <2 x float> %63, float %66, i32 1
  %68 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 1, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = sitofp i32 %69 to float
  %71 = insertelement <2 x float> undef, float %70, i32 0
  %72 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 1, i32 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = sitofp i32 %73 to float
  %75 = insertelement <2 x float> %71, float %74, i32 1
  %76 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  store <2 x float> %67, <2 x float>* %76, align 8
  %77 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  store <2 x float> %75, <2 x float>* %77, align 8
  %78 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %7, %struct.SkRect* nonnull dereferenceable(16) %51) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #10
  br i1 %78, label %81, label %79

79:                                               ; preds = %50
  %80 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %80, align 8
  br label %405

81:                                               ; preds = %50
  %82 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 0, i32 3
  %83 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %7, i64 0, i32 2
  %84 = load float, float* %53, align 4
  %85 = call float @llvm.floor.f32(float %84) #10
  %86 = fcmp olt float %85, 0x41DFFFFFE0000000
  %87 = select i1 %86, float %85, float 0x41DFFFFFE0000000
  %88 = fcmp ogt float %87, 0xC1DFFFFFE0000000
  %89 = select i1 %88, float %87, float 0xC1DFFFFFE0000000
  %90 = fptosi float %89 to i32
  %91 = load float, float* %54, align 4
  %92 = call float @llvm.floor.f32(float %91) #10
  %93 = fcmp olt float %92, 0x41DFFFFFE0000000
  %94 = select i1 %93, float %92, float 0x41DFFFFFE0000000
  %95 = fcmp ogt float %94, 0xC1DFFFFFE0000000
  %96 = select i1 %95, float %94, float 0xC1DFFFFFE0000000
  %97 = fptosi float %96 to i32
  %98 = load float, float* %83, align 4
  %99 = call float @llvm.ceil.f32(float %98) #10
  %100 = fcmp olt float %99, 0x41DFFFFFE0000000
  %101 = select i1 %100, float %99, float 0x41DFFFFFE0000000
  %102 = fcmp ogt float %101, 0xC1DFFFFFE0000000
  %103 = select i1 %102, float %101, float 0xC1DFFFFFE0000000
  %104 = fptosi float %103 to i32
  %105 = load float, float* %82, align 4
  %106 = call float @llvm.ceil.f32(float %105) #10
  %107 = fcmp olt float %106, 0x41DFFFFFE0000000
  %108 = select i1 %107, float %106, float 0x41DFFFFFE0000000
  %109 = fcmp ogt float %108, 0xC1DFFFFFE0000000
  %110 = select i1 %109, float %108, float 0xC1DFFFFFE0000000
  %111 = fptosi float %110 to i32
  %112 = getelementptr inbounds %"class.(anonymous namespace)::SkTileImageFilter", %"class.(anonymous namespace)::SkTileImageFilter"* %1, i64 0, i32 1
  %113 = getelementptr inbounds %"class.(anonymous namespace)::SkTileImageFilter", %"class.(anonymous namespace)::SkTileImageFilter"* %1, i64 0, i32 1, i32 2
  %114 = load float, float* %113, align 4
  %115 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %112, i64 0, i32 0
  %116 = load float, float* %115, align 4
  %117 = fsub float %114, %116
  %118 = fcmp une float %117, 0.000000e+00
  br i1 %118, label %119, label %132

119:                                              ; preds = %81
  %120 = getelementptr inbounds %"class.(anonymous namespace)::SkTileImageFilter", %"class.(anonymous namespace)::SkTileImageFilter"* %1, i64 0, i32 1, i32 3
  %121 = load float, float* %120, align 4
  %122 = getelementptr inbounds %"class.(anonymous namespace)::SkTileImageFilter", %"class.(anonymous namespace)::SkTileImageFilter"* %1, i64 0, i32 1, i32 1
  %123 = load float, float* %122, align 4
  %124 = fsub float %121, %123
  %125 = fcmp une float %124, 0.000000e+00
  br i1 %125, label %126, label %132

126:                                              ; preds = %119
  %127 = sub i32 %104, %90
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %132, label %129

129:                                              ; preds = %126
  %130 = sub i32 %111, %97
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %129, %126, %119, %81
  %133 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %133, align 8
  br label %405

134:                                              ; preds = %129
  %135 = bitcast %struct.SkRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %135) #10
  %136 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 0
  %137 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 1
  %138 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 2
  %139 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 3
  %140 = bitcast %struct.SkRect* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %140, i8 -1, i64 16, i1 false)
  %141 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %55, %struct.SkRect* nonnull %9, %struct.SkRect* dereferenceable(16) %112, i32 1) #10
  %142 = bitcast %struct.SkIRect* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %142) #10
  %143 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 0
  %144 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 1
  %145 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 2
  %146 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %10, i64 0, i32 3
  %147 = load float, float* %136, align 4
  %148 = call float @llvm.floor.f32(float %147) #10
  %149 = fcmp olt float %148, 0x41DFFFFFE0000000
  %150 = select i1 %149, float %148, float 0x41DFFFFFE0000000
  %151 = fcmp ogt float %150, 0xC1DFFFFFE0000000
  %152 = select i1 %151, float %150, float 0xC1DFFFFFE0000000
  %153 = fptosi float %152 to i32
  %154 = load float, float* %137, align 4
  %155 = call float @llvm.floor.f32(float %154) #10
  %156 = fcmp olt float %155, 0x41DFFFFFE0000000
  %157 = select i1 %156, float %155, float 0x41DFFFFFE0000000
  %158 = fcmp ogt float %157, 0xC1DFFFFFE0000000
  %159 = select i1 %158, float %157, float 0xC1DFFFFFE0000000
  %160 = fptosi float %159 to i32
  %161 = load float, float* %138, align 4
  %162 = call float @llvm.ceil.f32(float %161) #10
  %163 = fcmp olt float %162, 0x41DFFFFFE0000000
  %164 = select i1 %163, float %162, float 0x41DFFFFFE0000000
  %165 = fcmp ogt float %164, 0xC1DFFFFFE0000000
  %166 = select i1 %165, float %164, float 0xC1DFFFFFE0000000
  %167 = fptosi float %166 to i32
  %168 = load float, float* %139, align 4
  %169 = call float @llvm.ceil.f32(float %168) #10
  %170 = fcmp olt float %169, 0x41DFFFFFE0000000
  %171 = select i1 %170, float %169, float 0x41DFFFFFE0000000
  %172 = fcmp ogt float %171, 0xC1DFFFFFE0000000
  %173 = select i1 %172, float %171, float 0xC1DFFFFFE0000000
  %174 = fptosi float %173 to i32
  %175 = sext i32 %153 to i64
  %176 = shl i64 %34, 32
  %177 = sub i64 0, %176
  %178 = ashr exact i64 %177, 32
  %179 = add nsw i64 %178, %175
  %180 = icmp slt i64 %179, 2147483647
  %181 = select i1 %180, i64 %179, i64 2147483647
  %182 = icmp sgt i64 %181, -2147483647
  %183 = select i1 %182, i64 %181, i64 -2147483647
  %184 = trunc i64 %183 to i32
  store i32 %184, i32* %143, align 4
  %185 = sext i32 %160 to i64
  %186 = and i64 %34, -4294967296
  %187 = sub i64 0, %186
  %188 = ashr exact i64 %187, 32
  %189 = add nsw i64 %188, %185
  %190 = icmp slt i64 %189, 2147483647
  %191 = select i1 %190, i64 %189, i64 2147483647
  %192 = icmp sgt i64 %191, -2147483647
  %193 = select i1 %192, i64 %191, i64 -2147483647
  %194 = trunc i64 %193 to i32
  store i32 %194, i32* %144, align 4
  %195 = sext i32 %167 to i64
  %196 = add nsw i64 %178, %195
  %197 = icmp slt i64 %196, 2147483647
  %198 = select i1 %197, i64 %196, i64 2147483647
  %199 = icmp sgt i64 %198, -2147483647
  %200 = select i1 %199, i64 %198, i64 -2147483647
  %201 = trunc i64 %200 to i32
  store i32 %201, i32* %145, align 4
  %202 = sext i32 %174 to i64
  %203 = add nsw i64 %188, %202
  %204 = icmp slt i64 %203, 2147483647
  %205 = select i1 %204, i64 %203, i64 2147483647
  %206 = icmp sgt i64 %205, -2147483647
  %207 = select i1 %206, i64 %205, i64 -2147483647
  %208 = trunc i64 %207 to i32
  store i32 %208, i32* %146, align 4
  %209 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %209) #10
  %210 = bitcast { i64, i64 }* %11 to i32*
  %211 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %12, i64 0, i32 1
  %212 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %213 = bitcast i64* %212 to i32*
  %214 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %12, i64 0, i32 3
  %215 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %29, i64 0, i32 2, i32 2
  %216 = load i32, i32* %215, align 4
  %217 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %29, i64 0, i32 2, i32 0
  %218 = load i32, i32* %217, align 4
  %219 = sub i32 %216, %218
  %220 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %29, i64 0, i32 2, i32 3
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %29, i64 0, i32 2, i32 1
  %223 = load i32, i32* %222, align 4
  %224 = sub i32 %221, %223
  %225 = zext i32 %224 to i64
  %226 = shl nuw i64 %225, 32
  %227 = zext i32 %219 to i64
  %228 = or i64 %226, %227
  %229 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  store i64 0, i64* %229, align 8
  store i64 %228, i64* %212, align 8
  %230 = bitcast %struct.SkIRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %230) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %230, i8 -86, i64 16, i1 false) #10
  %231 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %5, %struct.SkIRect* nonnull dereferenceable(16) %10, %struct.SkIRect* nonnull dereferenceable(16) %12) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %230) #10
  br i1 %231, label %234, label %232

232:                                              ; preds = %134
  %233 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %233, align 8
  br label %404

234:                                              ; preds = %134
  %235 = load i32, i32* %145, align 4
  %236 = sext i32 %235 to i64
  %237 = load i32, i32* %143, align 4
  %238 = sext i32 %237 to i64
  %239 = sub nsw i64 %236, %238
  %240 = load i32, i32* %146, align 4
  %241 = sext i32 %240 to i64
  %242 = load i32, i32* %144, align 4
  %243 = sext i32 %242 to i64
  %244 = sub nsw i64 %241, %243
  %245 = icmp slt i64 %239, 1
  %246 = icmp slt i64 %244, 1
  %247 = or i1 %245, %246
  br i1 %247, label %283, label %248

248:                                              ; preds = %234
  %249 = or i64 %244, %239
  %250 = add nsw i64 %249, 2147483648
  %251 = icmp ugt i64 %250, 4294967295
  br i1 %251, label %283, label %252

252:                                              ; preds = %248
  %253 = load i32, i32* %213, align 8
  %254 = sext i32 %253 to i64
  %255 = load i32, i32* %210, align 8
  %256 = sext i32 %255 to i64
  %257 = sub nsw i64 %254, %256
  %258 = load i32, i32* %214, align 4
  %259 = sext i32 %258 to i64
  %260 = load i32, i32* %211, align 4
  %261 = sext i32 %260 to i64
  %262 = sub nsw i64 %259, %261
  %263 = icmp slt i64 %257, 1
  %264 = icmp slt i64 %262, 1
  %265 = or i1 %263, %264
  br i1 %265, label %283, label %266

266:                                              ; preds = %252
  %267 = or i64 %262, %257
  %268 = add nsw i64 %267, 2147483648
  %269 = icmp ugt i64 %268, 4294967295
  %270 = icmp sgt i32 %255, %237
  %271 = or i1 %270, %269
  %272 = icmp sgt i32 %260, %242
  %273 = or i1 %272, %271
  %274 = icmp slt i32 %253, %235
  %275 = or i1 %274, %273
  %276 = icmp sge i32 %258, %240
  %277 = xor i1 %275, true
  %278 = and i1 %276, %277
  br i1 %278, label %279, label %283

279:                                              ; preds = %266
  %280 = bitcast %class.sk_sp.13* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %280) #10
  call void @_ZNK14SkSpecialImage7asImageEPK7SkIRect(%class.sk_sp.13* nonnull sret %13, %class.SkSpecialImage* nonnull %29, %struct.SkIRect* nonnull %10) #10
  %281 = bitcast %class.sk_sp.13* %13 to i64*
  %282 = load i64, i64* %281, align 8
  br label %327

283:                                              ; preds = %234, %248, %252, %266
  %284 = bitcast %class.sk_sp.20* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %284) #10
  %285 = getelementptr inbounds %class.sk_sp.20, %class.sk_sp.20* %14, i64 0, i32 0
  store %class.SkSurface* inttoptr (i64 -6148914691236517206 to %class.SkSurface*), %class.SkSurface** %285, align 8
  %286 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %287 = load i32, i32* %286, align 8
  %288 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %289 = load %class.SkColorSpace*, %class.SkColorSpace** %288, align 8
  %290 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %290) #10
  %291 = sub i32 %235, %237
  %292 = sub i32 %240, %242
  %293 = zext i32 %292 to i64
  %294 = shl nuw i64 %293, 32
  %295 = zext i32 %291 to i64
  %296 = or i64 %294, %295
  store i64 %296, i64* %15, align 8
  call void @_ZNK14SkSpecialImage16makeTightSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaType(%class.sk_sp.20* nonnull sret %14, %class.SkSpecialImage* nonnull %29, i32 %287, %class.SkColorSpace* %289, %struct.SkISize* nonnull dereferenceable(8) %16, i32 2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %290) #10
  %297 = load %class.SkSurface*, %class.SkSurface** %285, align 8
  %298 = icmp eq %class.SkSurface* %297, null
  br i1 %298, label %299, label %301

299:                                              ; preds = %283
  %300 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %300, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %284) #10
  br label %404

301:                                              ; preds = %283
  %302 = call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* nonnull %297) #10
  %303 = bitcast %class.SkPaint* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %303) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %303, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK12_GLOBAL__N_117SkTileImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.paint.2 to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %17) #10
  %304 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %17, i64 0, i32 8, i32 0, i32 0
  %305 = load i32, i32* %304, align 8
  %306 = and i32 %305, -261121
  %307 = or i32 %306, 1024
  store i32 %307, i32* %304, align 8
  %308 = sitofp i32 %35 to float
  %309 = sitofp i32 %37 to float
  %310 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %310) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %310, i8 0, i64 20, i1 false)
  call void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage* nonnull %29, %class.SkCanvas* %302, float %308, float %309, %struct.SkSamplingOptions* nonnull dereferenceable(20) %18, %class.SkPaint* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %310) #10
  %311 = bitcast %class.sk_sp.13* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %311) #10
  %312 = load %class.SkSurface*, %class.SkSurface** %285, align 8
  call void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.13* nonnull sret %19, %class.SkSurface* %312) #10
  %313 = bitcast %class.sk_sp.13* %19 to i64*
  %314 = load i64, i64* %313, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %311) #10
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %303) #10
  %315 = load %class.SkSurface*, %class.SkSurface** %285, align 8
  %316 = icmp eq %class.SkSurface* %315, null
  br i1 %316, label %327, label %317

317:                                              ; preds = %301
  %318 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %315, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = atomicrmw add i32* %318, i32 -1 acq_rel
  %320 = icmp eq i32 %319, 1
  br i1 %320, label %321, label %327

321:                                              ; preds = %317
  %322 = bitcast %class.SkSurface* %315 to %class.SkRefCntBase*
  %323 = bitcast %class.SkSurface* %315 to void (%class.SkRefCntBase*)***
  %324 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %323, align 8
  %325 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %324, i64 2
  %326 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %325, align 8
  call void %326(%class.SkRefCntBase* nonnull %322) #10
  br label %327

327:                                              ; preds = %321, %317, %301, %279
  %328 = phi i8* [ %280, %279 ], [ %284, %301 ], [ %284, %317 ], [ %284, %321 ]
  %329 = phi i64 [ %282, %279 ], [ %314, %301 ], [ %314, %317 ], [ %314, %321 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %328) #10
  %330 = inttoptr i64 %329 to %class.SkImage*
  %331 = icmp eq i64 %329, 0
  br i1 %331, label %332, label %334

332:                                              ; preds = %327
  %333 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %333, align 8
  br label %404

334:                                              ; preds = %327
  %335 = bitcast %class.sk_sp.39* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %335) #10
  %336 = getelementptr inbounds %class.sk_sp.39, %class.sk_sp.39* %20, i64 0, i32 0
  store %class.SkSpecialSurface* inttoptr (i64 -6148914691236517206 to %class.SkSpecialSurface*), %class.SkSpecialSurface** %336, align 8
  %337 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %337) #10
  %338 = zext i32 %130 to i64
  %339 = shl nuw i64 %338, 32
  %340 = zext i32 %127 to i64
  %341 = or i64 %339, %340
  store i64 %341, i64* %21, align 8
  %342 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 5, i32 0, i32 0
  %343 = load %class.SkSpecialImage*, %class.SkSpecialImage** %342, align 8, !noalias !11
  %344 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %343, i64 0, i32 1
  %345 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 3
  %346 = load i32, i32* %345, align 8, !noalias !11
  %347 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %2, i64 0, i32 4
  %348 = load %class.SkColorSpace*, %class.SkColorSpace** %347, align 8, !noalias !11
  call void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.39* nonnull sret %20, %class.SkSpecialImage* %343, i32 %346, %class.SkColorSpace* %348, %struct.SkISize* nonnull dereferenceable(8) %22, i32 2, %class.SkSurfaceProps* dereferenceable(8) %344) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %337) #10
  %349 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %336, align 8
  %350 = icmp eq %class.SkSpecialSurface* %349, null
  br i1 %350, label %351, label %353

351:                                              ; preds = %334
  %352 = getelementptr inbounds %class.sk_sp.18, %class.sk_sp.18* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %352, align 8
  br label %394

353:                                              ; preds = %334
  %354 = call %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface* nonnull %349) #10
  %355 = bitcast %class.SkPaint* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %355) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %355, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK12_GLOBAL__N_117SkTileImageFilter13onFilterImageERKN4skif7ContextEP8SkIPoint.paint.2 to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %23) #10
  %356 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %23, i64 0, i32 8, i32 0, i32 0
  %357 = load i32, i32* %356, align 8
  %358 = and i32 %357, -261121
  %359 = or i32 %358, 1024
  store i32 %359, i32* %356, align 8
  %360 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %25, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %360) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %360, i8 0, i64 20, i1 false)
  call void @_ZNK7SkImage10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.36* nonnull sret %24, %class.SkImage* nonnull %330, i32 1, i32 1, %struct.SkSamplingOptions* nonnull dereferenceable(20) %25, %class.SkMatrix* null) #10
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %23, %class.sk_sp.36* nonnull %24) #10
  %361 = getelementptr inbounds %class.sk_sp.36, %class.sk_sp.36* %24, i64 0, i32 0
  %362 = load %class.SkShader*, %class.SkShader** %361, align 8
  %363 = icmp eq %class.SkShader* %362, null
  br i1 %363, label %374, label %364

364:                                              ; preds = %353
  %365 = getelementptr inbounds %class.SkShader, %class.SkShader* %362, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = atomicrmw add i32* %365, i32 -1 acq_rel
  %367 = icmp eq i32 %366, 1
  br i1 %367, label %368, label %374

368:                                              ; preds = %364
  %369 = bitcast %class.SkShader* %362 to %class.SkRefCntBase*
  %370 = bitcast %class.SkShader* %362 to void (%class.SkRefCntBase*)***
  %371 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %370, align 8
  %372 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %371, i64 2
  %373 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %372, align 8
  call void %373(%class.SkRefCntBase* nonnull %369) #10
  br label %374

374:                                              ; preds = %368, %364, %353
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %360) #10
  %375 = load float, float* %53, align 4
  %376 = fsub float -0.000000e+00, %375
  %377 = load float, float* %54, align 4
  %378 = fsub float -0.000000e+00, %377
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %354, float %376, float %378) #10
  call void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas* %354, %struct.SkRect* nonnull dereferenceable(16) %7, %class.SkPaint* nonnull dereferenceable(72) %23) #10
  %379 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 0
  store i32 %90, i32* %379, align 4
  %380 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %3, i64 0, i32 1
  store i32 %97, i32* %380, align 4
  %381 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %336, align 8
  call void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.18* sret %0, %class.SkSpecialSurface* %381) #10
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %355) #10
  %382 = load %class.SkSpecialSurface*, %class.SkSpecialSurface** %336, align 8
  %383 = icmp eq %class.SkSpecialSurface* %382, null
  br i1 %383, label %394, label %384

384:                                              ; preds = %374
  %385 = getelementptr inbounds %class.SkSpecialSurface, %class.SkSpecialSurface* %382, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %386 = atomicrmw add i32* %385, i32 -1 acq_rel
  %387 = icmp eq i32 %386, 1
  br i1 %387, label %388, label %394

388:                                              ; preds = %384
  %389 = bitcast %class.SkSpecialSurface* %382 to %class.SkRefCntBase*
  %390 = bitcast %class.SkSpecialSurface* %382 to void (%class.SkRefCntBase*)***
  %391 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %390, align 8
  %392 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %391, i64 2
  %393 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %392, align 8
  call void %393(%class.SkRefCntBase* nonnull %389) #10
  br label %394

394:                                              ; preds = %351, %374, %384, %388
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %335) #10
  %395 = getelementptr inbounds %class.SkImage, %class.SkImage* %330, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %396 = atomicrmw add i32* %395, i32 -1 acq_rel
  %397 = icmp eq i32 %396, 1
  br i1 %397, label %398, label %404

398:                                              ; preds = %394
  %399 = inttoptr i64 %329 to %class.SkRefCntBase*
  %400 = inttoptr i64 %329 to void (%class.SkRefCntBase*)***
  %401 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %400, align 8
  %402 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %401, i64 2
  %403 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %402, align 8
  call void %403(%class.SkRefCntBase* nonnull %399) #10
  br label %404

404:                                              ; preds = %332, %398, %394, %299, %232
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %209) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %135) #10
  br label %405

405:                                              ; preds = %132, %404, %79
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #10
  %406 = atomicrmw add i32* %38, i32 -1 acq_rel
  %407 = icmp eq i32 %406, 1
  br i1 %407, label %408, label %414

408:                                              ; preds = %405
  %409 = bitcast %class.SkSpecialImage* %29 to %class.SkRefCntBase*
  %410 = bitcast %class.SkSpecialImage* %29 to void (%class.SkRefCntBase*)***
  %411 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %410, align 8
  %412 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %411, i64 2
  %413 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %412, align 8
  call void %413(%class.SkRefCntBase* nonnull %409) #10
  br label %414

414:                                              ; preds = %48, %405, %408
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal { i64, i64 } @_ZNK12_GLOBAL__N_117SkTileImageFilter14onFilterBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_(%"class.(anonymous namespace)::SkTileImageFilter"* nocapture readnone, %struct.SkIRect* nocapture readonly dereferenceable(16), %class.SkMatrix* nocapture readnone dereferenceable(40), i32, %struct.SkIRect* nocapture readnone) unnamed_addr #7 align 2 {
  %6 = bitcast %struct.SkIRect* %1 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %9 = bitcast i32* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = insertvalue { i64, i64 } undef, i64 %7, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12
}

; Function Attrs: nounwind ssp uwtable
define internal { i64, i64 } @_ZNK12_GLOBAL__N_117SkTileImageFilter18onFilterNodeBoundsERK7SkIRectRK8SkMatrixN13SkImageFilter12MapDirectionEPS2_(%"class.(anonymous namespace)::SkTileImageFilter"* nocapture readonly, %struct.SkIRect* nocapture readnone dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32, %struct.SkIRect* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = alloca %struct.SkRect, align 4
  %7 = bitcast %struct.SkRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 0
  %9 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  %10 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  %11 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  %12 = icmp eq i32 %3, 1
  %13 = getelementptr inbounds %"class.(anonymous namespace)::SkTileImageFilter", %"class.(anonymous namespace)::SkTileImageFilter"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.(anonymous namespace)::SkTileImageFilter", %"class.(anonymous namespace)::SkTileImageFilter"* %0, i64 0, i32 2
  %15 = select i1 %12, %struct.SkRect* %13, %struct.SkRect* %14
  %16 = bitcast %struct.SkRect* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 %16, i64 16, i1 false)
  %17 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %2, %struct.SkRect* nonnull %6, %struct.SkRect* nonnull dereferenceable(16) %6, i32 1) #10
  %18 = load float, float* %8, align 4
  %19 = call float @llvm.floor.f32(float %18) #10
  %20 = fcmp olt float %19, 0x41DFFFFFE0000000
  %21 = select i1 %20, float %19, float 0x41DFFFFFE0000000
  %22 = fcmp ogt float %21, 0xC1DFFFFFE0000000
  %23 = select i1 %22, float %21, float 0xC1DFFFFFE0000000
  %24 = fptosi float %23 to i32
  %25 = load float, float* %9, align 4
  %26 = call float @llvm.floor.f32(float %25) #10
  %27 = fcmp olt float %26, 0x41DFFFFFE0000000
  %28 = select i1 %27, float %26, float 0x41DFFFFFE0000000
  %29 = fcmp ogt float %28, 0xC1DFFFFFE0000000
  %30 = select i1 %29, float %28, float 0xC1DFFFFFE0000000
  %31 = fptosi float %30 to i32
  %32 = load float, float* %10, align 4
  %33 = call float @llvm.ceil.f32(float %32) #10
  %34 = fcmp olt float %33, 0x41DFFFFFE0000000
  %35 = select i1 %34, float %33, float 0x41DFFFFFE0000000
  %36 = fcmp ogt float %35, 0xC1DFFFFFE0000000
  %37 = select i1 %36, float %35, float 0xC1DFFFFFE0000000
  %38 = fptosi float %37 to i32
  %39 = load float, float* %11, align 4
  %40 = call float @llvm.ceil.f32(float %39) #10
  %41 = fcmp olt float %40, 0x41DFFFFFE0000000
  %42 = select i1 %41, float %40, float 0x41DFFFFFE0000000
  %43 = fcmp ogt float %42, 0xC1DFFFFFE0000000
  %44 = select i1 %43, float %42, float 0xC1DFFFFFE0000000
  %45 = fptosi float %44 to i32
  %46 = zext i32 %31 to i64
  %47 = shl nuw i64 %46, 32
  %48 = zext i32 %24 to i64
  %49 = or i64 %47, %48
  %50 = insertvalue { i64, i64 } undef, i64 %49, 0
  %51 = zext i32 %45 to i64
  %52 = shl nuw i64 %51, 32
  %53 = zext i32 %38 to i64
  %54 = or i64 %52, %53
  %55 = insertvalue { i64, i64 } %50, i64 %54, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret { i64, i64 } %55
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base19onIsColorFilterNodeEPP13SkColorFilter(%class.SkImageFilter_Base*, %class.SkColorFilter**) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base21onCanHandleComplexCTMEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK18SkImageFilter_Base23affectsTransparentBlackEv(%class.SkImageFilter_Base*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK18SkImageFilter_Base13onFilterImageERKN4skif7ContextE() unnamed_addr

declare { i64, i64 } @_ZNK18SkImageFilter_Base21onGetInputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEES8_NS_13VisitChildrenE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16), %"class.skif::LayerSpace"* dereferenceable(16), i1 zeroext) unnamed_addr #2

declare { i64, i64 } @_ZNK18SkImageFilter_Base22onGetOutputLayerBoundsERKN4skif7MappingERKNS0_10LayerSpaceI7SkIRectEE(%class.SkImageFilter_Base*, %"class.skif::Mapping"* dereferenceable(80), %"class.skif::LayerSpace"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNK18SkImageFilter_Base7flattenER13SkWriteBuffer(%class.SkImageFilter_Base*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZNK14SkSpecialImage7asImageEPK7SkIRect(%class.sk_sp.13* sret, %class.SkSpecialImage*, %struct.SkIRect*) local_unnamed_addr #2

declare void @_ZNK14SkSpecialImage16makeTightSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaType(%class.sk_sp.20* sret, %class.SkSpecialImage*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32) local_unnamed_addr #2

declare %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface*) local_unnamed_addr #2

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #2

declare void @_ZNK14SkSpecialImage4drawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSpecialImage*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #2

declare void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.13* sret, %class.SkSurface*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #4

declare %class.SkCanvas* @_ZN16SkSpecialSurface9getCanvasEv(%class.SkSpecialSurface*) local_unnamed_addr #2

declare void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint*, %class.sk_sp.36*) local_unnamed_addr #2

declare void @_ZNK7SkImage10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.36* sret, %class.SkImage*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkMatrix*) local_unnamed_addr #2

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #2

declare void @_ZN8SkCanvas8drawRectERK6SkRectRK7SkPaint(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN16SkSpecialSurface17makeImageSnapshotEv(%class.sk_sp.18* sret, %class.SkSpecialSurface*) local_unnamed_addr #2

declare void @_ZNK18SkImageFilter_Base11filterInputILN4skif5UsageE0EEENS1_12FilterResultIXT_EEEiRKNS1_7ContextE(%"class.skif::FilterResult"* sret, %class.SkImageFilter_Base*, i32, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK14SkSpecialImage11makeSurfaceE11SkColorTypePK12SkColorSpaceRK7SkISize11SkAlphaTypeRK14SkSurfaceProps(%class.sk_sp.39* sret, %class.SkSpecialImage*, i32, %class.SkColorSpace*, %struct.SkISize* dereferenceable(8), i32, %class.SkSurfaceProps* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN18SkImageFilter_Base6Common9unflattenER12SkReadBufferi(%"class.SkImageFilter_Base::Common"*, %class.SkReadBuffer* dereferenceable(136), i32) local_unnamed_addr #2

declare void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer*, %struct.SkRect*) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN18SkImageFilter_Base6Common8getInputEi: argument 0"}
!4 = distinct !{!4, !"_ZN18SkImageFilter_Base6Common8getInputEi"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint: argument 0"}
!7 = distinct !{!7, !"_ZNK18SkImageFilter_Base11filterInputEiRKN4skif7ContextEP8SkIPoint"}
!8 = !{!9, !6}
!9 = distinct !{!9, !10, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint: argument 0"}
!10 = distinct !{!10, !"_ZNK4skif12FilterResultILNS_5UsageE0EE14imageAndOffsetEP8SkIPoint"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps: argument 0"}
!13 = distinct !{!13, !"_ZNK4skif7Context11makeSurfaceERK7SkISizePK14SkSurfaceProps"}
