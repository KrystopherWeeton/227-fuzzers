; ModuleID = '../../third_party/skia/src/core/SkTextBlob.cpp'
source_filename = "../../third_party/skia/src/core/SkTextBlob.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%struct.SkRect = type { float, float, float, float }
%"struct.SkTextBlobBuilder::RunBuffer" = type { i16*, float*, i8*, i32* }
%class.SkAutoTMalloc.45 = type { %"class.std::__1::unique_ptr.46" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %struct.SkPoint* }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.52" }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.50, %class.SkSpan.51, %class.SkFont }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.49" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.49" = type { %struct.SkPoint* }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.50 = type { i32*, i64 }
%class.SkSpan.51 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.SkGlyphRun* }
%class.SkGlyphRunList = type { %class.SkSpan.55, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.55 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt, %struct.SkRect, i32, %"struct.std::__1::atomic.6" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i32 }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { i16*, i16*, %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { i16* }
%class.SkPaint = type <{ %class.sk_sp.13, %class.sk_sp.14, %class.sk_sp.15, %class.sk_sp.16, %class.sk_sp.17, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.13 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.14 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.15 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.16 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.17 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkStrikeSpec = type <{ %class.SkAutoDescriptor, %class.sk_sp.15, %class.sk_sp.13, %class.sk_sp, float, [4 x i8] }>
%class.SkAutoDescriptor = type { %class.SkDescriptor*, [120 x i8] }
%class.SkDescriptor = type { i32, i32, i32 }
%class.SkTextBlobRunIterator = type { %"class.SkTextBlob::RunRecord"* }
%"class.SkTextBlob::RunRecord" = type { %class.SkFont, i32, %struct.SkPoint, i32 }
%class.SkTextBlobBuilder = type { %class.SkAutoTMalloc, i64, i64, %struct.SkRect, i32, i8, i64, %"struct.SkTextBlobBuilder::RunBuffer" }
%"class.SkTextBlob::Iter" = type { %"class.SkTextBlob::RunRecord"* }
%class.SkSafeMath = type { i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.12 = type { %class.SkTextBlob* }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkAutoSTArray = type { i32, %struct.SkRect*, [256 x i8] }
%struct.SkRSXform = type { float, float, float, float }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.22*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.22*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.22*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.22 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.23, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.23 = type { %"struct.std::__1::atomic" }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.18", [7 x i8] }>
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i8 }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.24, i32, i32 }
%class.sk_sp.24 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.25, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.25 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp*, i32, [4 x i8], void (%class.sk_sp.31*, %class.SkReadBuffer*)**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.27" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.31*, %class.SkReadBuffer*)* }
%class.sk_sp.31 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%struct.SkDeserialProcs = type { void (%class.sk_sp.32*, i8*, i64, i8*)*, i8*, void (%class.sk_sp.33*, i8*, i64, i8*)*, i8*, void (%class.sk_sp*, i8*, i64, i8*)*, i8* }
%class.sk_sp.32 = type { %class.SkPicture* }
%class.sk_sp.33 = type { %class.SkImage* }
%class.SkBinaryWriteBuffer = type { %class.SkWriteBuffer, %class.sk_sp.34, %class.sk_sp.35, %class.SkWriter32, %class.SkTHashMap.36 }
%class.sk_sp.34 = type { %class.SkFactorySet* }
%class.SkFactorySet = type opaque
%class.sk_sp.35 = type { %class.SkRefCntSet* }
%class.SkRefCntSet = type opaque
%class.SkWriter32 = type { i8*, i64, i64, i8*, %class.SkAutoTMalloc }
%class.SkTHashMap.36 = type { %class.SkTHashTable.37 }
%class.SkTHashTable.37 = type { i32, i32, %class.SkAutoTArray.38 }
%class.SkAutoTArray.38 = type { %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair, const char *, SkTHashMap<const char *, unsigned int, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTLazy = type { [72 x i8], %class.SkPaint* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc.45, i32, %class.SkAutoTMalloc.45, %"class.std::__1::vector", %class.SkGlyphRunList, %"class.std::__1::vector.56" }
%class.SkBulkGlyphMetricsAndPaths = type { %class.SkAutoSTArray.73, %class.sk_sp.79 }
%class.SkAutoSTArray.73 = type { i32, %class.SkGlyph**, [160 x i8] }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.74, i32, %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8, i8 }>
%class.sk_sp.74 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.75, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.76, %class.SkTDArray.77, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.75 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.76 = type { i8*, i32, i32 }
%class.SkTDArray.77 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.78 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.78 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.18", [3 x i8] }
%struct.SkPackedGlyphID = type { i32 }
%class.sk_sp.79 = type { %"class.SkStrikeCache::Strike"* }
%"class.SkStrikeCache::Strike" = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkStrikeForGPU, %class.SkStrikeCache*, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkScalerCache, %"class.std::__1::unique_ptr.112", i64, i8, [7 x i8] }>
%class.SkStrikeForGPU = type { i32 (...)** }
%class.SkStrikeCache = type { %class.SkStrikeForGPUCacheInterface, %class.SkMutex, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkTHashTable.80, i64, i64, i32, i32 }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%class.SkTHashTable.80 = type { i32, i32, %class.SkAutoTArray.81 }
%class.SkAutoTArray.81 = type { %"class.std::__1::unique_ptr.82" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* }
%"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot" = type opaque
%class.SkScalerCache = type { %class.SkAutoDescriptor, %"class.std::__1::unique_ptr.88", %struct.SkFontMetrics, %struct.SkGlyphPositionRoundingSpec, %class.SkMutex, %class.SkTHashMap.95, %"class.std::__1::vector.105", %class.SkArenaAlloc }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %class.SkScalerContext* }
%class.SkScalerContext = type { i32 (...)**, %struct.SkScalerContextRec, %class.sk_sp, %class.sk_sp.13, %class.sk_sp.15, i8, %class.SkTMaskPreBlend }
%struct.SkScalerContextRec = type { i32, float, float, float, [2 x [2 x float]], float, float, i32, i8, i8, i8, i8, i8, i8, i16 }
%class.SkTMaskPreBlend = type { %class.sk_sp.91, i8*, i8*, i8* }
%class.sk_sp.91 = type { %class.SkTMaskGamma* }
%class.SkTMaskGamma = type { %class.SkRefCnt.base, [8 x [256 x i8]], i8, [3 x i8] }
%struct.SkFontMetrics = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.SkGlyphPositionRoundingSpec = type { %struct.SkPoint, %struct.SkIPoint, %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.SkTHashMap.95 = type { %class.SkTHashTable.96 }
%class.SkTHashTable.96 = type { i32, i32, %class.SkAutoTArray.97 }
%class.SkAutoTArray.97 = type { %"class.std::__1::unique_ptr.98" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.101" }
%"struct.std::__1::pair.101" = type { %struct.SkPackedGlyphID, %class.SkGlyphDigest }
%class.SkGlyphDigest = type { [3 x i8], i8 }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %class.SkGlyph**, %class.SkGlyph**, %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %class.SkGlyph** }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %class.SkStrikePinner* }
%class.SkStrikePinner = type { i32 (...)** }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { float*, float*, %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { float* }
%"struct.SkTextBlob::Iter::Run" = type { %class.SkTypeface*, i32, i16*, i32*, i32, i8* }
%"struct.SkTextBlob::Iter::ExperimentalRun" = type { %class.SkFont, i32, i16*, %struct.SkPoint* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm = comdat any

@_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning = internal unnamed_addr constant [4 x i8] c"\00\01\02\04", align 1
@.str = private unnamed_addr constant [47 x i8] c"../../third_party/skia/src/core/SkTextBlob.cpp\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"All blobs are created by placement new.\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"unsupported positioning mode\00", align 1
@__const._ZN10SkTextBlob15MakeFromRSXformEPKvmPK9SkRSXformRK6SkFont14SkTextEncoding.builder = private unnamed_addr constant { %class.SkAutoTMalloc, i64, i64, %struct.SkRect, i32, i8, [3 x i8], i64, %"struct.SkTextBlobBuilder::RunBuffer" } { %class.SkAutoTMalloc { %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { i8* inttoptr (i64 -6148914691236517206 to i8*) } } } }, i64 -6148914691236517206, i64 -6148914691236517206, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i64 -6148914691236517206, %"struct.SkTextBlobBuilder::RunBuffer" { i16* inttoptr (i64 -6148914691236517206 to i16*), float* inttoptr (i64 -6148914691236517206 to float*), i8* inttoptr (i64 -6148914691236517206 to i8*), i32* inttoptr (i64 -6148914691236517206 to i32*) } }, align 8
@__const._ZNK10SkTextBlob13getInterceptsEPKfPfPK7SkPaint.builder = private unnamed_addr constant { i32, [4 x i8], %class.SkAutoTMalloc.45, i32, [4 x i8], %class.SkAutoTMalloc.45, %"class.std::__1::vector", %class.SkGlyphRunList, %"class.std::__1::vector.56" } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.SkAutoTMalloc.45 { %"class.std::__1::unique_ptr.46" { %"class.std::__1::__compressed_pair.47" { %"struct.std::__1::__compressed_pair_elem.48" { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*) } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.SkAutoTMalloc.45 { %"class.std::__1::unique_ptr.46" { %"class.std::__1::__compressed_pair.47" { %"struct.std::__1::__compressed_pair_elem.48" { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*) } } } }, %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %class.SkGlyphRun* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRun*), %class.SkGlyphRun* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRun*), %"class.std::__1::__compressed_pair.52" { %"struct.std::__1::__compressed_pair_elem.53" { %class.SkGlyphRun* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRun*) } } } }, %class.SkGlyphRunList { %class.SkSpan.55 { %class.SkGlyphRun* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRun*), i64 -6148914691236517206 }, %class.SkTextBlob* inttoptr (i64 -6148914691236517206 to %class.SkTextBlob*), %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, %"class.std::__1::vector.56" { %"class.std::__1::__vector_base.57" { i16* inttoptr (i64 -6148914691236517206 to i16*), i16* inttoptr (i64 -6148914691236517206 to i16*), %"class.std::__1::__compressed_pair.58" { %"struct.std::__1::__compressed_pair_elem.59" { i16* inttoptr (i64 -6148914691236517206 to i16*) } } } } }, align 8
@__const._ZNK6SkFont13getInterceptsEPKtiPK7SkPointffPK7SkPaint.run = private unnamed_addr constant %class.SkGlyphRun { %class.SkZip { %"class.std::__1::tuple" { %"struct.std::__1::__tuple_impl" { %"class.std::__1::__tuple_leaf" { i16* inttoptr (i64 -6148914691236517206 to i16*) }, %"class.std::__1::__tuple_leaf.49" { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*) } } }, i64 -6148914691236517206 }, %class.SkSpan { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206 }, %class.SkSpan.50 { i32* inttoptr (i64 -6148914691236517206 to i32*), i64 -6148914691236517206 }, %class.SkSpan.51 { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*), i64 -6148914691236517206 }, %class.SkFont <{ %class.sk_sp { %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, i8 -86, i8 -86, i8 -86 }> }, align 8
@_ZZL7next_idvE6nextID = internal global { { i32 } } { { i32 } { i32 1 } }, align 4
@__const._ZN12_GLOBAL__N_124get_glyph_run_interceptsERK10SkGlyphRunRK7SkPaintPKfPfPi.interceptPaint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.13 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.14 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.15 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.16 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.17 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZN12_GLOBAL__N_124get_glyph_run_interceptsERK10SkGlyphRunRK7SkPaintPKfPfPi.strikeSpec = private unnamed_addr constant %class.SkStrikeSpec <{ %class.SkAutoDescriptor { %class.SkDescriptor* inttoptr (i64 -6148914691236517206 to %class.SkDescriptor*), [120 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.sk_sp.15 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.13 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp { %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*) }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

@_ZN10SkTextBlobC1ERK6SkRect = hidden unnamed_addr alias void (%class.SkTextBlob*, %struct.SkRect*), void (%class.SkTextBlob*, %struct.SkRect*)* @_ZN10SkTextBlobC2ERK6SkRect
@_ZN10SkTextBlobD1Ev = hidden unnamed_addr alias void (%class.SkTextBlob*), void (%class.SkTextBlob*)* @_ZN10SkTextBlobD2Ev
@_ZN21SkTextBlobRunIteratorC1EPK10SkTextBlob = hidden unnamed_addr alias void (%class.SkTextBlobRunIterator*, %class.SkTextBlob*), void (%class.SkTextBlobRunIterator*, %class.SkTextBlob*)* @_ZN21SkTextBlobRunIteratorC2EPK10SkTextBlob
@_ZN17SkTextBlobBuilderC1Ev = hidden unnamed_addr alias void (%class.SkTextBlobBuilder*), void (%class.SkTextBlobBuilder*)* @_ZN17SkTextBlobBuilderC2Ev
@_ZN17SkTextBlobBuilderD1Ev = hidden unnamed_addr alias void (%class.SkTextBlobBuilder*), void (%class.SkTextBlobBuilder*)* @_ZN17SkTextBlobBuilderD2Ev
@_ZN10SkTextBlob4IterC1ERKS_ = hidden unnamed_addr alias void (%"class.SkTextBlob::Iter"*, %class.SkTextBlob*), void (%"class.SkTextBlob::Iter"*, %class.SkTextBlob*)* @_ZN10SkTextBlob4IterC2ERKS_

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN10SkTextBlob9RunRecord11StorageSizeEjjNS_16GlyphPositioningEP10SkSafeMath(i32, i32, i8 zeroext, %class.SkSafeMath* nocapture) local_unnamed_addr #0 align 2 {
  %5 = zext i32 %0 to i64
  %6 = shl nuw nsw i64 %5, 1
  %7 = zext i8 %2 to i64
  %8 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i64
  %11 = mul nuw nsw i64 %10, %5
  %12 = icmp ugt i64 %11, 4294967295
  %13 = shl nuw nsw i64 %11, 2
  br i1 %12, label %14, label %19

14:                                               ; preds = %4
  %15 = and i64 %13, 17179869180
  %16 = lshr i64 %11, 32
  %17 = shl nuw nsw i64 %16, 34
  %18 = or i64 %17, %15
  br label %19

19:                                               ; preds = %4, %14
  %20 = phi i64 [ %18, %14 ], [ %13, %4 ]
  %21 = getelementptr inbounds %class.SkSafeMath, %class.SkSafeMath* %3, i64 0, i32 0
  %22 = load i8, i8* %21, align 1, !range !2
  %23 = add nuw nsw i64 %6, 43
  %24 = and i64 %23, 17179869180
  %25 = icmp ugt i64 %24, 39
  %26 = zext i1 %25 to i8
  %27 = and i8 %22, %26
  %28 = add nuw nsw i64 %20, %24
  store i8 %27, i8* %21, align 1
  %29 = icmp eq i32 %1, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %19
  store i8 %27, i8* %21, align 1
  %31 = shl nuw nsw i64 %5, 2
  %32 = zext i32 %1 to i64
  %33 = add nuw nsw i64 %31, 4
  %34 = add nuw nsw i64 %33, %32
  %35 = add i64 %34, %28
  br label %36

36:                                               ; preds = %19, %30
  %37 = phi i64 [ %35, %30 ], [ %28, %19 ]
  %38 = add nsw i64 %37, 7
  %39 = icmp ult i64 %37, -7
  %40 = zext i1 %39 to i8
  %41 = and i8 %27, %40
  store i8 %41, i8* %21, align 1
  %42 = and i64 %38, -8
  ret i64 %42
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN10SkTextBlob9RunRecord8PosCountEjNS_16GlyphPositioningEP10SkSafeMath(i32, i8 zeroext, %class.SkSafeMath* nocapture) local_unnamed_addr #0 align 2 {
  %4 = zext i32 %0 to i64
  %5 = zext i8 %1 to i64
  %6 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %5
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i64
  %9 = mul nuw nsw i64 %8, %4
  ret i64 %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.SkTextBlob::RunRecord"* @_ZN10SkTextBlob9RunRecord5FirstEPKS_(%class.SkTextBlob*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %0, i64 1
  %3 = ptrtoint %class.SkTextBlob* %2 to i64
  %4 = add i64 %3, 7
  %5 = and i64 %4, -8
  %6 = inttoptr i64 %5 to %"class.SkTextBlob::RunRecord"*
  ret %"class.SkTextBlob::RunRecord"* %6
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.SkTextBlob::RunRecord"* @_ZN10SkTextBlob9RunRecord4NextEPKS0_(%"class.SkTextBlob::RunRecord"* readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %69

6:                                                ; preds = %1
  %7 = bitcast %"class.SkTextBlob::RunRecord"* %0 to i8*
  %8 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %3, 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %21

12:                                               ; preds = %6
  %13 = and i32 %3, 3
  %14 = zext i32 %13 to i64
  %15 = zext i32 %9 to i64
  %16 = shl nuw nsw i64 %15, 1
  %17 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %14
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i64
  %20 = mul nuw nsw i64 %15, %19
  br label %39

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 1
  %23 = bitcast %"class.SkTextBlob::RunRecord"* %22 to i8*
  %24 = zext i32 %9 to i64
  %25 = shl nuw nsw i64 %24, 1
  %26 = add nuw nsw i64 %25, 3
  %27 = and i64 %26, 17179869180
  %28 = getelementptr inbounds i8, i8* %23, i64 %27
  %29 = bitcast i8* %28 to float*
  %30 = and i32 %3, 3
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i64
  %35 = mul nuw nsw i64 %34, %24
  %36 = getelementptr inbounds float, float* %29, i64 %35
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 4
  br label %39

39:                                               ; preds = %21, %12
  %40 = phi i64 [ %35, %21 ], [ %20, %12 ]
  %41 = phi i64 [ %25, %21 ], [ %16, %12 ]
  %42 = phi i64 [ %24, %21 ], [ %15, %12 ]
  %43 = phi i32 [ %38, %21 ], [ 0, %12 ]
  %44 = icmp ugt i64 %40, 4294967295
  %45 = shl nuw nsw i64 %40, 2
  br i1 %44, label %46, label %51

46:                                               ; preds = %39
  %47 = and i64 %45, 17179869180
  %48 = lshr i64 %40, 32
  %49 = shl nuw nsw i64 %48, 34
  %50 = or i64 %49, %47
  br label %51

51:                                               ; preds = %46, %39
  %52 = phi i64 [ %50, %46 ], [ %45, %39 ]
  %53 = add nuw nsw i64 %41, 43
  %54 = and i64 %53, 17179869180
  %55 = add nuw nsw i64 %52, %54
  %56 = icmp eq i32 %43, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %51
  %58 = shl nuw nsw i64 %42, 2
  %59 = zext i32 %43 to i64
  %60 = add nuw nsw i64 %58, 4
  %61 = add nuw nsw i64 %60, %59
  %62 = add i64 %61, %55
  br label %63

63:                                               ; preds = %51, %57
  %64 = phi i64 [ %62, %57 ], [ %55, %51 ]
  %65 = add nsw i64 %64, 7
  %66 = and i64 %65, -8
  %67 = getelementptr inbounds i8, i8* %7, i64 %66
  %68 = bitcast i8* %67 to %"class.SkTextBlob::RunRecord"*
  br label %69

69:                                               ; preds = %1, %63
  %70 = phi %"class.SkTextBlob::RunRecord"* [ %68, %63 ], [ null, %1 ]
  ret %"class.SkTextBlob::RunRecord"* %70
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.SkTextBlob::RunRecord"* @_ZN10SkTextBlob9RunRecord13NextUncheckedEPKS0_(%"class.SkTextBlob::RunRecord"* readonly) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.SkTextBlob::RunRecord"* %0 to i8*
  %3 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %1
  %10 = and i32 %6, 3
  %11 = zext i32 %10 to i64
  %12 = zext i32 %4 to i64
  %13 = shl nuw nsw i64 %12, 1
  br label %32

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 1
  %16 = bitcast %"class.SkTextBlob::RunRecord"* %15 to i8*
  %17 = zext i32 %4 to i64
  %18 = shl nuw nsw i64 %17, 1
  %19 = add nuw nsw i64 %18, 3
  %20 = and i64 %19, 17179869180
  %21 = getelementptr inbounds i8, i8* %16, i64 %20
  %22 = bitcast i8* %21 to float*
  %23 = and i32 %6, 3
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i64
  %28 = mul nuw nsw i64 %27, %17
  %29 = getelementptr inbounds float, float* %22, i64 %28
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4
  br label %32

32:                                               ; preds = %9, %14
  %33 = phi i64 [ %13, %9 ], [ %18, %14 ]
  %34 = phi i64 [ %12, %9 ], [ %17, %14 ]
  %35 = phi i64 [ %11, %9 ], [ %24, %14 ]
  %36 = phi i32 [ 0, %9 ], [ %31, %14 ]
  %37 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %35
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = mul nuw nsw i64 %34, %39
  %41 = icmp ugt i64 %40, 4294967295
  %42 = shl nuw nsw i64 %40, 2
  br i1 %41, label %43, label %48

43:                                               ; preds = %32
  %44 = and i64 %42, 17179869180
  %45 = lshr i64 %40, 32
  %46 = shl nuw nsw i64 %45, 34
  %47 = or i64 %46, %44
  br label %48

48:                                               ; preds = %43, %32
  %49 = phi i64 [ %47, %43 ], [ %42, %32 ]
  %50 = add nuw nsw i64 %33, 43
  %51 = and i64 %50, 17179869180
  %52 = add nuw nsw i64 %49, %51
  %53 = icmp eq i32 %36, 0
  br i1 %53, label %60, label %54

54:                                               ; preds = %48
  %55 = shl nuw nsw i64 %34, 2
  %56 = zext i32 %36 to i64
  %57 = add nuw nsw i64 %55, 4
  %58 = add nuw nsw i64 %57, %56
  %59 = add i64 %58, %52
  br label %60

60:                                               ; preds = %48, %54
  %61 = phi i64 [ %59, %54 ], [ %52, %48 ]
  %62 = add nsw i64 %61, 7
  %63 = and i64 %62, -8
  %64 = getelementptr inbounds i8, i8* %2, i64 %63
  %65 = bitcast i8* %64 to %"class.SkTextBlob::RunRecord"*
  ret %"class.SkTextBlob::RunRecord"* %65
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden void @_ZNK10SkTextBlob9RunRecord8validateEPKh(%"class.SkTextBlob::RunRecord"* nocapture, i8* nocapture) local_unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningE(i8 zeroext) local_unnamed_addr #2 align 2 {
  %2 = zext i8 %0 to i64
  %3 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %2
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i32
  ret i32 %5
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32* @_ZNK10SkTextBlob9RunRecord11textSizePtrEv(%"class.SkTextBlob::RunRecord"* readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 1
  %3 = bitcast %"class.SkTextBlob::RunRecord"* %2 to i8*
  %4 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = zext i32 %5 to i64
  %7 = shl nuw nsw i64 %6, 1
  %8 = add nuw nsw i64 %7, 3
  %9 = and i64 %8, 17179869180
  %10 = getelementptr inbounds i8, i8* %3, i64 %9
  %11 = bitcast i8* %10 to float*
  %12 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 3
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i64
  %19 = mul nuw nsw i64 %18, %6
  %20 = getelementptr inbounds float, float* %11, i64 %19
  %21 = bitcast float* %20 to i32*
  ret i32* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkTextBlob9RunRecord4growEj(%"class.SkTextBlob::RunRecord"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 1
  %4 = bitcast %"class.SkTextBlob::RunRecord"* %3 to i8*
  %5 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = zext i32 %6 to i64
  %8 = shl nuw nsw i64 %7, 1
  %9 = add nuw nsw i64 %8, 3
  %10 = and i64 %9, 17179869180
  %11 = getelementptr inbounds i8, i8* %4, i64 %10
  %12 = add i32 %6, %1
  store i32 %12, i32* %5, align 8
  %13 = shl nuw nsw i64 %7, 2
  %14 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 3
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = mul nuw nsw i64 %13, %20
  %22 = zext i32 %12 to i64
  %23 = shl nuw nsw i64 %22, 1
  %24 = add nuw nsw i64 %23, 3
  %25 = and i64 %24, 17179869180
  %26 = getelementptr inbounds i8, i8* %4, i64 %25
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %11, i64 %21, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkTextBlobC2ERK6SkRect(%class.SkTextBlob* nocapture, %struct.SkRect* nocapture readonly dereferenceable(16)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %0, i64 0, i32 1
  %5 = bitcast %struct.SkRect* %4 to i8*
  %6 = bitcast %struct.SkRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 16, i1 false)
  br label %7

7:                                                ; preds = %7, %2
  %8 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZL7next_idvE6nextID, i64 0, i32 0, i32 0), i32 1 monotonic
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %7, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %0, i64 0, i32 2
  store i32 %8, i32* %11, align 4
  %12 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %12, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkTextBlobD2Ev(%class.SkTextBlob*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 seq_cst, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = load atomic i32, i32* %2 seq_cst, align 4
  tail call void @_ZN15GrTextBlobCache20PostPurgeBlobMessageEjj(i32 %7, i32 %8) #15
  br label %9

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %0, i64 1
  %11 = ptrtoint %class.SkTextBlob* %10 to i64
  %12 = add i64 %11, 7
  %13 = and i64 %12, -8
  %14 = inttoptr i64 %13 to %"class.SkTextBlob::RunRecord"*
  br label %15

15:                                               ; preds = %99, %9
  %16 = phi %"class.SkTextBlob::RunRecord"* [ %14, %9 ], [ %85, %99 ]
  %17 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %16, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %84

21:                                               ; preds = %15
  %22 = bitcast %"class.SkTextBlob::RunRecord"* %16 to i8*
  %23 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %16, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %18, 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %36

27:                                               ; preds = %21
  %28 = and i32 %18, 3
  %29 = zext i32 %28 to i64
  %30 = zext i32 %24 to i64
  %31 = shl nuw nsw i64 %30, 1
  %32 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %29
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i64
  %35 = mul nuw nsw i64 %34, %30
  br label %54

36:                                               ; preds = %21
  %37 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %16, i64 1
  %38 = bitcast %"class.SkTextBlob::RunRecord"* %37 to i8*
  %39 = zext i32 %24 to i64
  %40 = shl nuw nsw i64 %39, 1
  %41 = add nuw nsw i64 %40, 3
  %42 = and i64 %41, 17179869180
  %43 = getelementptr inbounds i8, i8* %38, i64 %42
  %44 = bitcast i8* %43 to float*
  %45 = and i32 %18, 3
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = mul nuw nsw i64 %49, %39
  %51 = getelementptr inbounds float, float* %44, i64 %50
  %52 = bitcast float* %51 to i32*
  %53 = load i32, i32* %52, align 4
  br label %54

54:                                               ; preds = %36, %27
  %55 = phi i64 [ %50, %36 ], [ %35, %27 ]
  %56 = phi i64 [ %40, %36 ], [ %31, %27 ]
  %57 = phi i64 [ %39, %36 ], [ %30, %27 ]
  %58 = phi i32 [ %53, %36 ], [ 0, %27 ]
  %59 = icmp ugt i64 %55, 4294967295
  %60 = shl nuw nsw i64 %55, 2
  br i1 %59, label %61, label %66

61:                                               ; preds = %54
  %62 = and i64 %60, 17179869180
  %63 = lshr i64 %55, 32
  %64 = shl nuw nsw i64 %63, 34
  %65 = or i64 %64, %62
  br label %66

66:                                               ; preds = %61, %54
  %67 = phi i64 [ %65, %61 ], [ %60, %54 ]
  %68 = add nuw nsw i64 %56, 43
  %69 = and i64 %68, 17179869180
  %70 = add nuw nsw i64 %67, %69
  %71 = icmp eq i32 %58, 0
  br i1 %71, label %78, label %72

72:                                               ; preds = %66
  %73 = shl nuw nsw i64 %57, 2
  %74 = zext i32 %58 to i64
  %75 = add nuw nsw i64 %73, 4
  %76 = add nuw nsw i64 %75, %74
  %77 = add i64 %76, %70
  br label %78

78:                                               ; preds = %72, %66
  %79 = phi i64 [ %77, %72 ], [ %70, %66 ]
  %80 = add nsw i64 %79, 7
  %81 = and i64 %80, -8
  %82 = getelementptr inbounds i8, i8* %22, i64 %81
  %83 = bitcast i8* %82 to %"class.SkTextBlob::RunRecord"*
  br label %84

84:                                               ; preds = %15, %78
  %85 = phi %"class.SkTextBlob::RunRecord"* [ %83, %78 ], [ null, %15 ]
  %86 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %16, i64 0, i32 0, i32 0, i32 0
  %87 = load %class.SkTypeface*, %class.SkTypeface** %86, align 8
  %88 = icmp eq %class.SkTypeface* %87, null
  br i1 %88, label %99, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %87, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 -1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %99

93:                                               ; preds = %89
  %94 = bitcast %class.SkTypeface* %87 to %class.SkRefCntBase*
  %95 = bitcast %class.SkTypeface* %87 to void (%class.SkRefCntBase*)***
  %96 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %95, align 8
  %97 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %96, i64 2
  %98 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %97, align 8
  tail call void %98(%class.SkRefCntBase* nonnull %94) #15
  br label %99

99:                                               ; preds = %84, %89, %93
  %100 = icmp eq %"class.SkTextBlob::RunRecord"* %85, null
  br i1 %100, label %101, label %15

101:                                              ; preds = %99
  ret void
}

declare void @_ZN15GrTextBlobCache20PostPurgeBlobMessageEjj(i32, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkTextBlobdlEPv(i8*) local_unnamed_addr #5 align 2 {
  tail call void @_Z7sk_freePv(i8* %0) #15
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind ssp uwtable
define hidden noalias nonnull i8* @_ZN10SkTextBlobnwEm(i64) local_unnamed_addr #7 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 203, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0)) #16
  unreachable
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN10SkTextBlobnwEmPv(i64, i8* readnone returned) local_unnamed_addr #2 align 2 {
  ret i8* %1
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN21SkTextBlobRunIteratorC2EPK10SkTextBlob(%class.SkTextBlobRunIterator* nocapture, %class.SkTextBlob*) unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %class.SkTextBlobRunIterator, %class.SkTextBlobRunIterator* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %1, i64 1
  %5 = ptrtoint %class.SkTextBlob* %4 to i64
  %6 = add i64 %5, 7
  %7 = and i64 %6, -8
  %8 = inttoptr i64 %7 to %"class.SkTextBlob::RunRecord"*
  store %"class.SkTextBlob::RunRecord"* %8, %"class.SkTextBlob::RunRecord"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN21SkTextBlobRunIterator4nextEv(%class.SkTextBlobRunIterator* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkTextBlobRunIterator, %class.SkTextBlobRunIterator* %0, i64 0, i32 0
  %3 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %2, align 8
  %4 = icmp eq %"class.SkTextBlob::RunRecord"* %3, null
  br i1 %4, label %75, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %3, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %73

10:                                               ; preds = %5
  %11 = bitcast %"class.SkTextBlob::RunRecord"* %3 to i8*
  %12 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %3, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %7, 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %25

16:                                               ; preds = %10
  %17 = and i32 %7, 3
  %18 = zext i32 %17 to i64
  %19 = zext i32 %13 to i64
  %20 = shl nuw nsw i64 %19, 1
  %21 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %18
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = mul nuw nsw i64 %23, %19
  br label %43

25:                                               ; preds = %10
  %26 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %3, i64 1
  %27 = bitcast %"class.SkTextBlob::RunRecord"* %26 to i8*
  %28 = zext i32 %13 to i64
  %29 = shl nuw nsw i64 %28, 1
  %30 = add nuw nsw i64 %29, 3
  %31 = and i64 %30, 17179869180
  %32 = getelementptr inbounds i8, i8* %27, i64 %31
  %33 = bitcast i8* %32 to float*
  %34 = and i32 %7, 3
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i64
  %39 = mul nuw nsw i64 %38, %28
  %40 = getelementptr inbounds float, float* %33, i64 %39
  %41 = bitcast float* %40 to i32*
  %42 = load i32, i32* %41, align 4
  br label %43

43:                                               ; preds = %25, %16
  %44 = phi i64 [ %39, %25 ], [ %24, %16 ]
  %45 = phi i64 [ %29, %25 ], [ %20, %16 ]
  %46 = phi i64 [ %28, %25 ], [ %19, %16 ]
  %47 = phi i32 [ %42, %25 ], [ 0, %16 ]
  %48 = icmp ugt i64 %44, 4294967295
  %49 = shl nuw nsw i64 %44, 2
  br i1 %48, label %50, label %55

50:                                               ; preds = %43
  %51 = and i64 %49, 17179869180
  %52 = lshr i64 %44, 32
  %53 = shl nuw nsw i64 %52, 34
  %54 = or i64 %53, %51
  br label %55

55:                                               ; preds = %50, %43
  %56 = phi i64 [ %54, %50 ], [ %49, %43 ]
  %57 = add nuw nsw i64 %45, 43
  %58 = and i64 %57, 17179869180
  %59 = add nuw nsw i64 %56, %58
  %60 = icmp eq i32 %47, 0
  br i1 %60, label %67, label %61

61:                                               ; preds = %55
  %62 = shl nuw nsw i64 %46, 2
  %63 = zext i32 %47 to i64
  %64 = add nuw nsw i64 %62, 4
  %65 = add nuw nsw i64 %64, %63
  %66 = add i64 %65, %59
  br label %67

67:                                               ; preds = %61, %55
  %68 = phi i64 [ %66, %61 ], [ %59, %55 ]
  %69 = add nsw i64 %68, 7
  %70 = and i64 %69, -8
  %71 = getelementptr inbounds i8, i8* %11, i64 %70
  %72 = bitcast i8* %71 to %"class.SkTextBlob::RunRecord"*
  br label %73

73:                                               ; preds = %5, %67
  %74 = phi %"class.SkTextBlob::RunRecord"* [ %72, %67 ], [ null, %5 ]
  store %"class.SkTextBlob::RunRecord"* %74, %"class.SkTextBlob::RunRecord"** %2, align 8
  br label %75

75:                                               ; preds = %73, %1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK21SkTextBlobRunIterator11positioningEv(%class.SkTextBlobRunIterator* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.SkTextBlobRunIterator, %class.SkTextBlobRunIterator* %0, i64 0, i32 0
  %3 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %2, align 8
  %4 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %3, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = trunc i32 %5 to i8
  %7 = and i8 %6, 3
  ret i8 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK21SkTextBlobRunIterator15scalarsPerGlyphEv(%class.SkTextBlobRunIterator* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.SkTextBlobRunIterator, %class.SkTextBlobRunIterator* %0, i64 0, i32 0
  %3 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %2, align 8
  %4 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %3, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 3
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  ret i32 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK21SkTextBlobRunIterator5isLCDEv(%class.SkTextBlobRunIterator* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.SkTextBlobRunIterator, %class.SkTextBlobRunIterator* %0, i64 0, i32 0
  %3 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %2, align 8
  %4 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %3, i64 0, i32 0, i32 5
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 2
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkTextBlobBuilderC2Ev(%class.SkTextBlobBuilder* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 6
  store i64 0, i64* %2, align 8
  %3 = bitcast %class.SkTextBlobBuilder* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 45, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkTextBlobBuilderD2Ev(%class.SkTextBlobBuilder*) unnamed_addr #5 align 2 {
  %2 = alloca %class.sk_sp.12, align 8
  %3 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store i8* null, i8** %3, align 8
  br label %21

7:                                                ; preds = %1
  call void @_ZN17SkTextBlobBuilder4makeEv(%class.sk_sp.12* nonnull sret %2, %class.SkTextBlobBuilder* %0)
  %8 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %2, i64 0, i32 0
  %9 = load %class.SkTextBlob*, %class.SkTextBlob** %8, align 8
  %10 = icmp eq %class.SkTextBlob* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  tail call void @_ZN10SkTextBlobD2Ev(%class.SkTextBlob* nonnull %9) #15
  %16 = bitcast %class.SkTextBlob* %9 to i8*
  tail call void @_Z7sk_freePv(i8* nonnull %16) #15
  br label %17

17:                                               ; preds = %15, %11, %7
  %18 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  tail call void @_Z7sk_freePv(i8* nonnull %18) #15
  br label %21

21:                                               ; preds = %6, %17, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkTextBlobBuilder4makeEv(%class.sk_sp.12* noalias nocapture sret, %class.SkTextBlobBuilder*) local_unnamed_addr #5 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %1, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %0, i64 0, i32 0
  store %class.SkTextBlob* null, %class.SkTextBlob** %8, align 8
  br label %64

9:                                                ; preds = %2
  %10 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRect*
  %11 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %1, i64 0, i32 5
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %38, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %1, i64 0, i32 6
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  %20 = bitcast i8* %19 to %"class.SkTextBlob::RunRecord"*
  %21 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #15
  %22 = getelementptr inbounds i8, i8* %19, i64 36
  %23 = bitcast i8* %22 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -1, i64 16, i1 false) #15
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 3
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %14
  %28 = tail call { <2 x float>, <2 x float> } @_ZN17SkTextBlobBuilder14TightRunBoundsERKN10SkTextBlob9RunRecordE(%"class.SkTextBlob::RunRecord"* dereferenceable(40) %20) #15
  br label %31

29:                                               ; preds = %14
  %30 = tail call { <2 x float>, <2 x float> } @_ZN17SkTextBlobBuilder21ConservativeRunBoundsERKN10SkTextBlob9RunRecordE(%"class.SkTextBlob::RunRecord"* dereferenceable(40) %20) #15
  br label %31

31:                                               ; preds = %29, %27
  %32 = phi { <2 x float>, <2 x float> } [ %30, %29 ], [ %28, %27 ]
  %33 = extractvalue { <2 x float>, <2 x float> } %32, 0
  %34 = extractvalue { <2 x float>, <2 x float> } %32, 1
  %35 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> %33, <2 x float>* %35, align 8
  %36 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  store <2 x float> %34, <2 x float>* %36, align 8
  %37 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %1, i64 0, i32 3
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* %37, %struct.SkRect* nonnull dereferenceable(16) %10) #15
  store i8 0, i8* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #15
  br label %38

38:                                               ; preds = %9, %31
  %39 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %1, i64 0, i32 6
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds i8, i8* %40, i64 %42
  %44 = getelementptr inbounds i8, i8* %43, i64 36
  %45 = bitcast i8* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = or i32 %46, 4
  store i32 %47, i32* %45, align 4
  %48 = bitcast %class.SkTextBlobBuilder* %1 to %class.SkTextBlob**
  %49 = load %class.SkTextBlob*, %class.SkTextBlob** %48, align 8
  store i8* null, i8** %39, align 8
  %50 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %1, i64 0, i32 3
  %51 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %51, align 4
  %52 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %49, i64 0, i32 1
  %53 = bitcast %struct.SkRect* %52 to i8*
  %54 = bitcast %struct.SkRect* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 %54, i64 16, i1 false) #15
  br label %55

55:                                               ; preds = %55, %38
  %56 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZL7next_idvE6nextID, i64 0, i32 0, i32 0), i32 1 monotonic
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %55, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %49, i64 0, i32 2
  store i32 %56, i32* %59, align 4
  %60 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %49, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %60, align 4
  %61 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %1, i64 0, i32 1
  store i64 0, i64* %41, align 8
  %62 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %0, i64 0, i32 0
  %63 = bitcast i64* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 36, i1 false)
  store %class.SkTextBlob* %49, %class.SkTextBlob** %62, align 8
  br label %64

64:                                               ; preds = %58, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN17SkTextBlobBuilder14TightRunBoundsERKN10SkTextBlob9RunRecordE(%"class.SkTextBlob::RunRecord"* dereferenceable(40)) local_unnamed_addr #5 align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = alloca %class.SkMatrix, align 16
  %4 = alloca %struct.SkRect, align 8
  %5 = alloca %class.SkAutoSTArray, align 8
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %struct.SkRect*
  %8 = alloca float, align 4
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRect*
  %11 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 0
  %12 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #15
  %13 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 0
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 1
  %15 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 2
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 3
  %17 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 3
  %18 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -1, i64 16, i1 false)
  %19 = load i32, i32* %17, align 4
  %20 = and i32 %19, 3
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %39

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 1
  %24 = bitcast %"class.SkTextBlob::RunRecord"* %23 to i8*
  %25 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = zext i32 %26 to i64
  %28 = shl nuw nsw i64 %27, 1
  %29 = call float @_ZNK6SkFont11measureTextEPKvm14SkTextEncodingP6SkRectPK7SkPaint(%class.SkFont* %11, i8* %24, i64 %28, i32 3, %struct.SkRect* nonnull %4, %class.SkPaint* null) #15
  %30 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 2, i32 0
  %31 = bitcast float* %30 to <2 x float>*
  %32 = load <2 x float>, <2 x float>* %31, align 4
  %33 = bitcast %struct.SkRect* %4 to <2 x float>*
  %34 = load <2 x float>, <2 x float>* %33, align 8
  %35 = fadd <2 x float> %32, %34
  %36 = bitcast float* %15 to <2 x float>*
  %37 = load <2 x float>, <2 x float>* %36, align 8
  %38 = fadd <2 x float> %32, %37
  br label %188

39:                                               ; preds = %1
  %40 = bitcast %class.SkAutoSTArray* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %40) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 272, i1 false)
  %41 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %class.SkAutoSTArray, %class.SkAutoSTArray* %5, i64 0, i32 1
  store %struct.SkRect* null, %struct.SkRect** %43, align 8
  %44 = getelementptr inbounds %class.SkAutoSTArray, %class.SkAutoSTArray* %5, i64 0, i32 0
  store i32 0, i32* %44, align 8
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %64, label %46

46:                                               ; preds = %39
  %47 = icmp sgt i32 %42, 16
  br i1 %47, label %48, label %54

48:                                               ; preds = %46
  %49 = sext i32 %42 to i64
  %50 = tail call i8* @_Z15sk_malloc_throwmm(i64 %49, i64 16) #15
  %51 = bitcast %struct.SkRect** %43 to i8**
  store i8* %50, i8** %51, align 8
  %52 = bitcast i8* %50 to %struct.SkRect*
  %53 = load i32, i32* %41, align 8
  br label %61

54:                                               ; preds = %46
  %55 = icmp sgt i32 %42, 0
  br i1 %55, label %56, label %60

56:                                               ; preds = %54
  %57 = getelementptr inbounds %class.SkAutoSTArray, %class.SkAutoSTArray* %5, i64 0, i32 2, i64 0
  %58 = bitcast %struct.SkRect** %43 to i8**
  store i8* %57, i8** %58, align 8
  %59 = bitcast i8* %57 to %struct.SkRect*
  br label %61

60:                                               ; preds = %54
  store %struct.SkRect* null, %struct.SkRect** %43, align 8
  br label %61

61:                                               ; preds = %60, %56, %48
  %62 = phi i32 [ %42, %60 ], [ %42, %56 ], [ %53, %48 ]
  %63 = phi %struct.SkRect* [ null, %60 ], [ %59, %56 ], [ %52, %48 ]
  store i32 %42, i32* %44, align 8
  br label %64

64:                                               ; preds = %39, %61
  %65 = phi %struct.SkRect* [ null, %39 ], [ %63, %61 ]
  %66 = phi i32 [ 0, %39 ], [ %62, %61 ]
  %67 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 1
  %68 = bitcast %"class.SkTextBlob::RunRecord"* %67 to i16*
  call void @_ZNK6SkFont15getWidthsBoundsEPKtiPfP6SkRectPK7SkPaint(%class.SkFont* %11, i16* %68, i32 %66, float* null, %struct.SkRect* %65, %class.SkPaint* null) #15
  %69 = load i32, i32* %17, align 4
  %70 = trunc i32 %69 to i8
  %71 = and i8 %70, 3
  %72 = icmp eq i8 %71, 3
  br i1 %72, label %73, label %106

73:                                               ; preds = %64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #15
  %74 = bitcast %"class.SkTextBlob::RunRecord"* %67 to i8*
  %75 = load i32, i32* %41, align 8
  %76 = zext i32 %75 to i64
  %77 = shl nuw nsw i64 %76, 1
  %78 = add nuw nsw i64 %77, 3
  %79 = and i64 %78, 17179869180
  %80 = getelementptr inbounds i8, i8* %74, i64 %79
  %81 = bitcast i8* %80 to %struct.SkRSXform*
  %82 = icmp eq i32 %75, 0
  br i1 %82, label %155, label %83

83:                                               ; preds = %73
  %84 = bitcast <2 x i64>* %6 to i8*
  %85 = bitcast %class.SkMatrix* %3 to i8*
  %86 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %87 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 8
  %88 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %89 = bitcast <2 x i64>* %2 to i8*
  %90 = bitcast <2 x i64>* %2 to %struct.SkRect*
  %91 = bitcast %class.SkMatrix* %3 to <4 x float>*
  %92 = bitcast float* %86 to <4 x float>*
  br label %93

93:                                               ; preds = %83, %93
  %94 = phi i32 [ 0, %83 ], [ %103, %93 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #15
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %81, i64 %95
  %97 = load %struct.SkRect*, %struct.SkRect** %43, align 8
  %98 = sext i32 %94 to i64
  %99 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %97, i64 %98
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %85) #15
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %91, align 16
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %92, align 16
  store float 1.000000e+00, float* %87, align 16
  store i32 16, i32* %88, align 4
  %100 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10setRSXformERK9SkRSXform(%class.SkMatrix* nonnull %3, %struct.SkRSXform* dereferenceable(16) %96) #15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %89, i8 -1, i64 16, i1 false) #15
  %101 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %100, %struct.SkRect* nonnull %90, %struct.SkRect* dereferenceable(16) %99, i32 1) #15
  %102 = load <2 x i64>, <2 x i64>* %2, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %85) #15
  store <2 x i64> %102, <2 x i64>* %6, align 16
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* nonnull %4, %struct.SkRect* nonnull dereferenceable(16) %7) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #15
  %103 = add nuw i32 %94, 1
  %104 = load i32, i32* %41, align 8
  %105 = icmp ult i32 %103, %104
  br i1 %105, label %93, label %155

106:                                              ; preds = %64
  %107 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %107) #15
  store float 0.000000e+00, float* %8, align 4
  %108 = bitcast %"class.SkTextBlob::RunRecord"* %67 to i8*
  %109 = load i32, i32* %41, align 8
  %110 = zext i32 %109 to i64
  %111 = shl nuw nsw i64 %110, 1
  %112 = add nuw nsw i64 %111, 3
  %113 = and i64 %112, 17179869180
  %114 = getelementptr inbounds i8, i8* %108, i64 %113
  %115 = icmp eq i8 %71, 2
  %116 = zext i8 %71 to i64
  %117 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %116
  %118 = load i8, i8* %117, align 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #15
  %119 = icmp eq i32 %109, 0
  br i1 %119, label %131, label %120

120:                                              ; preds = %106
  %121 = getelementptr inbounds i8, i8* %114, i64 4
  %122 = bitcast i8* %121 to float*
  %123 = select i1 %115, float* %122, float* %8
  %124 = bitcast i8* %114 to float*
  %125 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  %126 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  %127 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  %128 = zext i8 %118 to i64
  %129 = select i1 %115, i8 %118, i8 0
  %130 = zext i8 %129 to i64
  br label %132

131:                                              ; preds = %132, %106
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %107) #15
  br label %155

132:                                              ; preds = %120, %132
  %133 = phi i32 [ 0, %120 ], [ %152, %132 ]
  %134 = phi float* [ %123, %120 ], [ %151, %132 ]
  %135 = phi float* [ %124, %120 ], [ %150, %132 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %125) #15
  %136 = load %struct.SkRect*, %struct.SkRect** %43, align 8
  %137 = sext i32 %133 to i64
  %138 = load float, float* %135, align 4
  %139 = load float, float* %134, align 4
  %140 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %136, i64 %137, i32 0
  %141 = bitcast float* %140 to <2 x float>*
  %142 = load <2 x float>, <2 x float>* %141, align 4
  %143 = insertelement <2 x float> undef, float %138, i32 0
  %144 = insertelement <2 x float> %143, float %139, i32 1
  %145 = fadd <2 x float> %144, %142
  %146 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %136, i64 %137, i32 2
  %147 = bitcast float* %146 to <2 x float>*
  %148 = load <2 x float>, <2 x float>* %147, align 4
  %149 = fadd <2 x float> %144, %148
  store <2 x float> %145, <2 x float>* %126, align 8
  store <2 x float> %149, <2 x float>* %127, align 8
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* nonnull %4, %struct.SkRect* nonnull dereferenceable(16) %10) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125) #15
  %150 = getelementptr inbounds float, float* %135, i64 %128
  %151 = getelementptr inbounds float, float* %134, i64 %130
  %152 = add nuw i32 %133, 1
  %153 = load i32, i32* %41, align 8
  %154 = icmp ult i32 %152, %153
  br i1 %154, label %132, label %131

155:                                              ; preds = %93, %73, %131
  %156 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 2, i32 0
  %157 = load float, float* %156, align 4
  %158 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 2, i32 1
  %159 = load float, float* %158, align 4
  %160 = load float, float* %13, align 8
  %161 = fadd float %157, %160
  %162 = load float, float* %14, align 4
  %163 = load float, float* %15, align 8
  %164 = fadd float %157, %163
  %165 = load float, float* %16, align 4
  %166 = insertelement <2 x float> undef, float %161, i32 0
  %167 = insertelement <2 x float> undef, float %164, i32 0
  %168 = load %struct.SkRect*, %struct.SkRect** %43, align 8
  %169 = load i32, i32* %44, align 8
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %168, i64 %170
  br label %172

172:                                              ; preds = %172, %155
  %173 = phi %struct.SkRect* [ %171, %155 ], [ %175, %172 ]
  %174 = icmp ugt %struct.SkRect* %173, %168
  %175 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %173, i64 -1
  br i1 %174, label %172, label %176

176:                                              ; preds = %172
  %177 = fadd float %159, %162
  %178 = fadd float %159, %165
  %179 = insertelement <2 x float> %166, float %177, i32 1
  %180 = insertelement <2 x float> %167, float %178, i32 1
  %181 = bitcast %struct.SkRect* %168 to i8*
  %182 = icmp eq i32 %169, 0
  br i1 %182, label %187, label %183

183:                                              ; preds = %176
  %184 = icmp sgt i32 %169, 16
  br i1 %184, label %185, label %186

185:                                              ; preds = %183
  call void @_Z7sk_freePv(i8* %181) #15
  br label %186

186:                                              ; preds = %185, %183
  store %struct.SkRect* null, %struct.SkRect** %43, align 8
  store i32 0, i32* %44, align 8
  br label %187

187:                                              ; preds = %176, %186
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %40) #15
  br label %188

188:                                              ; preds = %187, %22
  %189 = phi <2 x float> [ %35, %22 ], [ %179, %187 ]
  %190 = phi <2 x float> [ %38, %22 ], [ %180, %187 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #15
  %191 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %189, 0
  %192 = insertvalue { <2 x float>, <2 x float> } %191, <2 x float> %190, 1
  ret { <2 x float>, <2 x float> } %192
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN6SkRect4joinERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN17SkTextBlobBuilder21ConservativeRunBoundsERKN10SkTextBlob9RunRecordE(%"class.SkTextBlob::RunRecord"* dereferenceable(40)) local_unnamed_addr #5 align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = alloca %class.SkMatrix, align 16
  %4 = alloca <4 x float>, align 16
  %5 = bitcast <4 x float>* %4 to { <2 x float>, <2 x float> }*
  %6 = bitcast <4 x float>* %4 to %struct.SkRect*
  %7 = alloca <4 x float>, align 16
  %8 = bitcast <4 x float>* %7 to %struct.SkRect*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %struct.SkRect*
  %11 = bitcast <4 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #15
  %12 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 0
  %13 = tail call { <2 x float>, <2 x float> } @_ZN10SkFontPriv13GetFontBoundsERK6SkFont(%class.SkFont* dereferenceable(24) %12) #15
  %14 = bitcast <4 x float>* %4 to <2 x float>*
  %15 = extractvalue { <2 x float>, <2 x float> } %13, 0
  store <2 x float> %15, <2 x float>* %14, align 16
  %16 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %17 = extractvalue { <2 x float>, <2 x float> } %13, 1
  store <2 x float> %17, <2 x float>* %16, align 8
  %18 = extractelement <2 x float> %15, i32 0
  %19 = extractelement <2 x float> %17, i32 0
  %20 = fcmp olt float %18, %19
  br i1 %20, label %21, label %25

21:                                               ; preds = %1
  %22 = extractelement <2 x float> %17, i32 1
  %23 = extractelement <2 x float> %15, i32 1
  %24 = fcmp uge float %23, %22
  br i1 %24, label %25, label %29

25:                                               ; preds = %1, %21
  %26 = tail call { <2 x float>, <2 x float> } @_ZN17SkTextBlobBuilder14TightRunBoundsERKN10SkTextBlob9RunRecordE(%"class.SkTextBlob::RunRecord"* dereferenceable(40) %0)
  %27 = extractvalue { <2 x float>, <2 x float> } %26, 0
  %28 = extractvalue { <2 x float>, <2 x float> } %26, 1
  br label %180

29:                                               ; preds = %21
  %30 = bitcast <4 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #15
  %31 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 1
  %32 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 2
  %33 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %8, i64 0, i32 3
  %34 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 3
  %35 = bitcast <4 x float>* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %35, i8 -1, i64 16, i1 false)
  %36 = load i32, i32* %34, align 4
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 3
  switch i8 %38, label %158 [
    i8 1, label %39
    i8 2, label %114
    i8 3, label %126
  ]

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 1
  %41 = bitcast %"class.SkTextBlob::RunRecord"* %40 to i8*
  %42 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = zext i32 %43 to i64
  %45 = shl nuw nsw i64 %44, 1
  %46 = add nuw nsw i64 %45, 3
  %47 = and i64 %46, 17179869180
  %48 = getelementptr inbounds i8, i8* %41, i64 %47
  %49 = bitcast i8* %48 to float*
  %50 = bitcast i8* %48 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp ugt i32 %43, 1
  %53 = bitcast i32 %51 to float
  br i1 %52, label %54, label %78

54:                                               ; preds = %39
  %55 = add nsw i64 %44, -1
  %56 = and i64 %55, 1
  %57 = icmp eq i32 %43, 2
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = sub nsw i64 %55, %56
  br label %83

60:                                               ; preds = %83, %54
  %61 = phi i32 [ undef, %54 ], [ %106, %83 ]
  %62 = phi i32 [ undef, %54 ], [ %108, %83 ]
  %63 = phi i32 [ %51, %54 ], [ %108, %83 ]
  %64 = phi float [ %53, %54 ], [ %111, %83 ]
  %65 = phi i32 [ %51, %54 ], [ %106, %83 ]
  %66 = phi float [ %53, %54 ], [ %110, %83 ]
  %67 = phi i64 [ 1, %54 ], [ %109, %83 ]
  %68 = icmp eq i64 %56, 0
  br i1 %68, label %78, label %69

69:                                               ; preds = %60
  %70 = getelementptr inbounds float, float* %49, i64 %67
  %71 = bitcast float* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = bitcast i32 %72 to float
  %74 = fcmp ogt float %64, %73
  %75 = select i1 %74, i32 %63, i32 %72
  %76 = fcmp olt float %66, %73
  %77 = select i1 %76, i32 %65, i32 %72
  br label %78

78:                                               ; preds = %69, %60, %39
  %79 = phi i32 [ %51, %39 ], [ %62, %60 ], [ %75, %69 ]
  %80 = phi i32 [ %51, %39 ], [ %61, %60 ], [ %77, %69 ]
  %81 = bitcast <4 x float>* %7 to i32*
  store i32 %80, i32* %81, align 16
  store float 0.000000e+00, float* %31, align 4
  %82 = bitcast float* %32 to i32*
  store i32 %79, i32* %82, align 8
  store float 0.000000e+00, float* %33, align 4
  br label %159

83:                                               ; preds = %83, %58
  %84 = phi i32 [ %51, %58 ], [ %108, %83 ]
  %85 = phi float [ %53, %58 ], [ %111, %83 ]
  %86 = phi i32 [ %51, %58 ], [ %106, %83 ]
  %87 = phi float [ %53, %58 ], [ %110, %83 ]
  %88 = phi i64 [ 1, %58 ], [ %109, %83 ]
  %89 = phi i64 [ %59, %58 ], [ %112, %83 ]
  %90 = getelementptr inbounds float, float* %49, i64 %88
  %91 = bitcast float* %90 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = bitcast i32 %92 to float
  %94 = fcmp olt float %87, %93
  %95 = select i1 %94, i32 %86, i32 %92
  %96 = fcmp ogt float %85, %93
  %97 = select i1 %96, i32 %84, i32 %92
  %98 = add nuw nsw i64 %88, 1
  %99 = bitcast i32 %95 to float
  %100 = bitcast i32 %97 to float
  %101 = getelementptr inbounds float, float* %49, i64 %98
  %102 = bitcast float* %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = bitcast i32 %103 to float
  %105 = fcmp olt float %99, %104
  %106 = select i1 %105, i32 %95, i32 %103
  %107 = fcmp ogt float %100, %104
  %108 = select i1 %107, i32 %97, i32 %103
  %109 = add nuw nsw i64 %88, 2
  %110 = bitcast i32 %106 to float
  %111 = bitcast i32 %108 to float
  %112 = add i64 %89, -2
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %60, label %83

114:                                              ; preds = %29
  %115 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 1
  %116 = bitcast %"class.SkTextBlob::RunRecord"* %115 to i8*
  %117 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = zext i32 %118 to i64
  %120 = shl nuw nsw i64 %119, 1
  %121 = add nuw nsw i64 %120, 3
  %122 = and i64 %121, 17179869180
  %123 = getelementptr inbounds i8, i8* %116, i64 %122
  %124 = bitcast i8* %123 to %struct.SkPoint*
  %125 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* nonnull %8, %struct.SkPoint* %124, i32 %118) #15
  br label %159

126:                                              ; preds = %29
  %127 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 1
  %128 = bitcast %"class.SkTextBlob::RunRecord"* %127 to i8*
  %129 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 1
  %130 = load i32, i32* %129, align 8
  %131 = zext i32 %130 to i64
  %132 = shl nuw nsw i64 %131, 1
  %133 = add nuw nsw i64 %132, 3
  %134 = and i64 %133, 17179869180
  %135 = getelementptr inbounds i8, i8* %128, i64 %134
  %136 = bitcast i8* %135 to %struct.SkRSXform*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %30, i8 0, i64 16, i1 false) #15
  %137 = icmp eq i32 %130, 0
  br i1 %137, label %159, label %138

138:                                              ; preds = %126
  %139 = bitcast <2 x i64>* %9 to i8*
  %140 = bitcast %class.SkMatrix* %3 to i8*
  %141 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %142 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 8
  %143 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %144 = bitcast <2 x i64>* %2 to i8*
  %145 = bitcast <2 x i64>* %2 to %struct.SkRect*
  %146 = bitcast %class.SkMatrix* %3 to <4 x float>*
  %147 = bitcast float* %141 to <4 x float>*
  br label %148

148:                                              ; preds = %138, %148
  %149 = phi i64 [ 0, %138 ], [ %154, %148 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #15
  %150 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %136, i64 %149
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %140) #15
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %146, align 16
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %147, align 16
  store float 1.000000e+00, float* %142, align 16
  store i32 16, i32* %143, align 4
  %151 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10setRSXformERK9SkRSXform(%class.SkMatrix* nonnull %3, %struct.SkRSXform* dereferenceable(16) %150) #15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %144, i8 -1, i64 16, i1 false) #15
  %152 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %151, %struct.SkRect* nonnull %145, %struct.SkRect* nonnull dereferenceable(16) %6, i32 1) #15
  %153 = load <2 x i64>, <2 x i64>* %2, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %140) #15
  store <2 x i64> %153, <2 x i64>* %9, align 16
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* nonnull %8, %struct.SkRect* nonnull dereferenceable(16) %10) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #15
  %154 = add nuw nsw i64 %149, 1
  %155 = load i32, i32* %129, align 8
  %156 = zext i32 %155 to i64
  %157 = icmp ult i64 %154, %156
  br i1 %157, label %148, label %159

158:                                              ; preds = %29
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 358, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

159:                                              ; preds = %148, %126, %114, %78
  %160 = load i32, i32* %34, align 4
  %161 = and i32 %160, 3
  %162 = icmp eq i32 %161, 3
  br i1 %162, label %163, label %166

163:                                              ; preds = %159
  %164 = load <4 x float>, <4 x float>* %7, align 16
  %165 = shufflevector <4 x float> %164, <4 x float> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  br label %171

166:                                              ; preds = %159
  %167 = load <4 x float>, <4 x float>* %4, align 16
  %168 = load <4 x float>, <4 x float>* %7, align 16
  %169 = fadd <4 x float> %167, %168
  %170 = shufflevector <4 x float> %169, <4 x float> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  store <4 x float> %169, <4 x float>* %7, align 16
  br label %171

171:                                              ; preds = %163, %166
  %172 = phi <4 x float> [ %165, %163 ], [ %170, %166 ]
  %173 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %0, i64 0, i32 2, i32 0
  %174 = bitcast float* %173 to <2 x float>*
  %175 = load <2 x float>, <2 x float>* %174, align 4
  %176 = shufflevector <4 x float> %172, <4 x float> undef, <2 x i32> <i32 3, i32 2>
  %177 = fadd <2 x float> %175, %176
  %178 = shufflevector <4 x float> %172, <4 x float> undef, <2 x i32> <i32 1, i32 0>
  %179 = fadd <2 x float> %175, %178
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #15
  br label %180

180:                                              ; preds = %171, %25
  %181 = phi <2 x float> [ %27, %25 ], [ %177, %171 ]
  %182 = phi <2 x float> [ %28, %25 ], [ %179, %171 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #15
  %183 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %181, 0
  %184 = insertvalue { <2 x float>, <2 x float> } %183, <2 x float> %182, 1
  ret { <2 x float>, <2 x float> } %184
}

declare { <2 x float>, <2 x float> } @_ZN10SkFontPriv13GetFontBoundsERK6SkFont(%class.SkFont* dereferenceable(24)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkTextBlobBuilder20updateDeferredBoundsEv(%class.SkTextBlobBuilder*) local_unnamed_addr #5 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = bitcast { <2 x float>, <2 x float> }* %2 to %struct.SkRect*
  %4 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %32, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 6
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 %11
  %13 = bitcast i8* %12 to %"class.SkTextBlob::RunRecord"*
  %14 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #15
  %15 = getelementptr inbounds i8, i8* %12, i64 36
  %16 = bitcast i8* %15 to i32*
  %17 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -1, i64 16, i1 false)
  %18 = load i32, i32* %16, align 4
  %19 = and i32 %18, 3
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %7
  %22 = tail call { <2 x float>, <2 x float> } @_ZN17SkTextBlobBuilder14TightRunBoundsERKN10SkTextBlob9RunRecordE(%"class.SkTextBlob::RunRecord"* dereferenceable(40) %13)
  br label %25

23:                                               ; preds = %7
  %24 = tail call { <2 x float>, <2 x float> } @_ZN17SkTextBlobBuilder21ConservativeRunBoundsERKN10SkTextBlob9RunRecordE(%"class.SkTextBlob::RunRecord"* dereferenceable(40) %13)
  br label %25

25:                                               ; preds = %23, %21
  %26 = phi { <2 x float>, <2 x float> } [ %24, %23 ], [ %22, %21 ]
  %27 = extractvalue { <2 x float>, <2 x float> } %26, 0
  %28 = extractvalue { <2 x float>, <2 x float> } %26, 1
  %29 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  store <2 x float> %27, <2 x float>* %29, align 8
  %30 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  store <2 x float> %28, <2 x float>* %30, align 8
  %31 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 3
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* %31, %struct.SkRect* nonnull dereferenceable(16) %3) #15
  store i8 0, i8* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #15
  br label %32

32:                                               ; preds = %1, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkTextBlobBuilder7reserveEm(%class.SkTextBlobBuilder* nocapture, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  %6 = icmp uge i64 %5, %4
  %7 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp ule i64 %5, %8
  %10 = and i1 %9, %6
  br i1 %10, label %34, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  store i64 32, i64* %3, align 8
  br label %16

16:                                               ; preds = %15, %11
  %17 = phi i64 [ 32, %15 ], [ %4, %11 ]
  %18 = add i64 %17, %1
  %19 = icmp uge i64 %18, %17
  %20 = and i1 %6, %19
  store i64 %18, i64* %7, align 8
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = icmp eq i64 %18, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %16, %21
  %24 = phi i64 [ %18, %21 ], [ -1, %16 ]
  %25 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  store i8* null, i8** %25, align 8
  %27 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %26, i64 %24) #15
  br label %28

28:                                               ; preds = %23, %21
  %29 = phi i8* [ %27, %23 ], [ null, %21 ]
  %30 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  store i8* %29, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %28
  tail call void @_Z7sk_freePv(i8* nonnull %31) #15
  br label %34

34:                                               ; preds = %2, %33, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17SkTextBlobBuilder8mergeRunERK6SkFontN10SkTextBlob16GlyphPositioningEj7SkPoint(%class.SkTextBlobBuilder* nocapture, %class.SkFont* dereferenceable(24), i8 zeroext, i32, <2 x float>) local_unnamed_addr #10 align 2 {
  %6 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 6
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %183, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %7
  %13 = getelementptr inbounds i8, i8* %12, i64 36
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %39, label %18

18:                                               ; preds = %9
  %19 = getelementptr inbounds i8, i8* %12, i64 40
  %20 = getelementptr inbounds i8, i8* %12, i64 24
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = shl nuw nsw i64 %23, 1
  %25 = add nuw nsw i64 %24, 3
  %26 = and i64 %25, 17179869180
  %27 = getelementptr inbounds i8, i8* %19, i64 %26
  %28 = bitcast i8* %27 to float*
  %29 = and i32 %15, 3
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i64
  %34 = mul nuw nsw i64 %33, %23
  %35 = getelementptr inbounds float, float* %28, i64 %34
  %36 = bitcast float* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %183

39:                                               ; preds = %9, %18
  %40 = trunc i32 %15 to i8
  %41 = and i8 %40, 3
  %42 = icmp eq i8 %41, %2
  br i1 %42, label %43, label %183

43:                                               ; preds = %39
  %44 = bitcast i8* %12 to %class.SkFont*
  %45 = tail call zeroext i1 @_ZNK6SkFonteqERKS_(%class.SkFont* %44, %class.SkFont* dereferenceable(24) %1) #15
  br i1 %45, label %46, label %183

46:                                               ; preds = %43
  %47 = getelementptr inbounds i8, i8* %12, i64 24
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 8
  %50 = add i32 %49, %3
  %51 = icmp ult i32 %50, %49
  br i1 %51, label %183, label %52

52:                                               ; preds = %46
  switch i8 %2, label %183 [
    i8 2, label %60
    i8 1, label %53
  ]

53:                                               ; preds = %52
  %54 = getelementptr inbounds i8, i8* %12, i64 28
  %55 = getelementptr inbounds i8, i8* %54, i64 4
  %56 = bitcast i8* %55 to float*
  %57 = load float, float* %56, align 4
  %58 = extractelement <2 x float> %4, i32 1
  %59 = fcmp une float %57, %58
  br i1 %59, label %183, label %60

60:                                               ; preds = %52, %53
  %61 = zext i32 %50 to i64
  %62 = shl nuw nsw i64 %61, 1
  %63 = zext i8 %2 to i64
  %64 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %63
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i64
  %67 = mul nuw nsw i64 %66, %61
  %68 = icmp ugt i64 %67, 4294967295
  %69 = shl nuw nsw i64 %67, 2
  br i1 %68, label %70, label %75

70:                                               ; preds = %60
  %71 = and i64 %69, 17179869180
  %72 = lshr i64 %67, 32
  %73 = shl nuw nsw i64 %72, 34
  %74 = or i64 %73, %71
  br label %75

75:                                               ; preds = %60, %70
  %76 = phi i64 [ %74, %70 ], [ %69, %60 ]
  %77 = add nuw nsw i64 %62, 43
  %78 = and i64 %77, 17179869180
  %79 = icmp ugt i64 %78, 39
  %80 = add nuw nsw i64 %76, %78
  %81 = add nsw i64 %80, 7
  %82 = icmp ult i64 %80, -7
  %83 = and i1 %79, %82
  %84 = and i64 %81, -8
  %85 = zext i32 %49 to i64
  %86 = shl nuw nsw i64 %85, 1
  %87 = mul nuw nsw i64 %66, %85
  %88 = icmp ugt i64 %87, 4294967295
  %89 = shl nuw nsw i64 %87, 2
  br i1 %88, label %90, label %95

90:                                               ; preds = %75
  %91 = and i64 %89, 17179869180
  %92 = lshr i64 %87, 32
  %93 = shl nuw nsw i64 %92, 34
  %94 = or i64 %93, %91
  br label %95

95:                                               ; preds = %75, %90
  %96 = phi i64 [ %94, %90 ], [ %89, %75 ]
  %97 = add nuw nsw i64 %86, 43
  %98 = and i64 %97, 17179869180
  %99 = icmp ugt i64 %98, 39
  %100 = and i1 %99, %83
  %101 = add nuw nsw i64 %96, %98
  %102 = add nsw i64 %101, 7
  %103 = icmp ult i64 %101, -7
  %104 = and i1 %100, %103
  %105 = and i64 %102, -8
  %106 = sub i64 %84, %105
  br i1 %104, label %107, label %183

107:                                              ; preds = %95
  %108 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 2
  %109 = load i64, i64* %108, align 8
  %110 = add i64 %109, %106
  %111 = icmp uge i64 %110, %109
  %112 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = icmp ule i64 %110, %113
  %115 = and i1 %114, %111
  br i1 %115, label %137, label %116

116:                                              ; preds = %107
  %117 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 4
  %118 = load i32, i32* %117, align 8
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %116
  store i64 32, i64* %108, align 8
  br label %121

121:                                              ; preds = %120, %116
  %122 = phi i64 [ 32, %120 ], [ %109, %116 ]
  %123 = add i64 %122, %106
  %124 = icmp uge i64 %123, %122
  %125 = and i1 %111, %124
  store i64 %123, i64* %112, align 8
  br i1 %125, label %126, label %128

126:                                              ; preds = %121
  %127 = icmp eq i64 %123, 0
  br i1 %127, label %132, label %128

128:                                              ; preds = %126, %121
  %129 = phi i64 [ %123, %126 ], [ -1, %121 ]
  %130 = load i8*, i8** %10, align 8
  store i8* null, i8** %10, align 8
  %131 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %130, i64 %129) #15
  br label %132

132:                                              ; preds = %128, %126
  %133 = phi i8* [ %131, %128 ], [ null, %126 ]
  %134 = load i8*, i8** %10, align 8
  store i8* %133, i8** %10, align 8
  %135 = icmp eq i8* %134, null
  br i1 %135, label %137, label %136

136:                                              ; preds = %132
  tail call void @_Z7sk_freePv(i8* nonnull %134) #15
  br label %137

137:                                              ; preds = %107, %132, %136
  %138 = load i8*, i8** %10, align 8
  %139 = load i64, i64* %6, align 8
  %140 = getelementptr inbounds i8, i8* %138, i64 %139
  %141 = getelementptr inbounds i8, i8* %140, i64 24
  %142 = bitcast i8* %141 to i32*
  %143 = load i32, i32* %142, align 8
  %144 = getelementptr inbounds i8, i8* %140, i64 40
  %145 = zext i32 %143 to i64
  %146 = shl nuw nsw i64 %145, 1
  %147 = add nuw nsw i64 %146, 3
  %148 = and i64 %147, 17179869180
  %149 = getelementptr inbounds i8, i8* %144, i64 %148
  %150 = add i32 %143, %3
  store i32 %150, i32* %142, align 8
  %151 = shl nuw nsw i64 %145, 2
  %152 = getelementptr inbounds i8, i8* %140, i64 36
  %153 = bitcast i8* %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = and i32 %154, 3
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i64
  %160 = mul nuw nsw i64 %151, %159
  %161 = zext i32 %150 to i64
  %162 = shl nuw nsw i64 %161, 1
  %163 = add nuw nsw i64 %162, 3
  %164 = and i64 %163, 17179869180
  %165 = getelementptr inbounds i8, i8* %144, i64 %164
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %165, i8* align 4 %149, i64 %160, i1 false) #15
  %166 = bitcast i8* %144 to i16*
  %167 = getelementptr inbounds i16, i16* %166, i64 %145
  %168 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 7, i32 0
  store i16* %167, i16** %168, align 8
  %169 = load i32, i32* %142, align 8
  %170 = zext i32 %169 to i64
  %171 = shl nuw nsw i64 %170, 1
  %172 = add nuw nsw i64 %171, 3
  %173 = and i64 %172, 17179869180
  %174 = getelementptr inbounds i8, i8* %144, i64 %173
  %175 = bitcast i8* %174 to float*
  %176 = zext i8 %65 to i32
  %177 = mul i32 %143, %176
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds float, float* %175, i64 %178
  %180 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 7, i32 1
  store float* %179, float** %180, align 8
  %181 = load i64, i64* %108, align 8
  %182 = add i64 %181, %106
  store i64 %182, i64* %108, align 8
  br label %183

183:                                              ; preds = %43, %137, %95, %18, %39, %46, %52, %53, %5
  %184 = phi i1 [ false, %5 ], [ false, %18 ], [ false, %39 ], [ false, %46 ], [ false, %43 ], [ false, %52 ], [ false, %53 ], [ true, %137 ], [ false, %95 ]
  ret i1 %184
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkTextBlobBuilder13allocInternalERK6SkFontN10SkTextBlob16GlyphPositioningEii7SkPointPK6SkRect(%class.SkTextBlobBuilder*, %class.SkFont* dereferenceable(24), i8 zeroext, i32, i32, <2 x float>, %struct.SkRect*) local_unnamed_addr #10 align 2 {
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = icmp slt i32 %3, 1
  %10 = icmp slt i32 %4, 0
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 7
  %14 = bitcast %"struct.SkTextBlobBuilder::RunBuffer"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false)
  br label %228

15:                                               ; preds = %7
  %16 = icmp eq i32 %4, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = tail call zeroext i1 @_ZN17SkTextBlobBuilder8mergeRunERK6SkFontN10SkTextBlob16GlyphPositioningEj7SkPoint(%class.SkTextBlobBuilder* %0, %class.SkFont* dereferenceable(24) %1, i8 zeroext %2, i32 %3, <2 x float> %5)
  br i1 %18, label %219, label %19

19:                                               ; preds = %15, %17
  %20 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  %21 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 5
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %48, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 6
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  %30 = bitcast i8* %29 to %"class.SkTextBlob::RunRecord"*
  %31 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #15
  %32 = getelementptr inbounds i8, i8* %29, i64 36
  %33 = bitcast i8* %32 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -1, i64 16, i1 false) #15
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 3
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %24
  %38 = tail call { <2 x float>, <2 x float> } @_ZN17SkTextBlobBuilder14TightRunBoundsERKN10SkTextBlob9RunRecordE(%"class.SkTextBlob::RunRecord"* dereferenceable(40) %30) #15
  br label %41

39:                                               ; preds = %24
  %40 = tail call { <2 x float>, <2 x float> } @_ZN17SkTextBlobBuilder21ConservativeRunBoundsERKN10SkTextBlob9RunRecordE(%"class.SkTextBlob::RunRecord"* dereferenceable(40) %30) #15
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi { <2 x float>, <2 x float> } [ %40, %39 ], [ %38, %37 ]
  %43 = extractvalue { <2 x float>, <2 x float> } %42, 0
  %44 = extractvalue { <2 x float>, <2 x float> } %42, 1
  %45 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  store <2 x float> %43, <2 x float>* %45, align 8
  %46 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  store <2 x float> %44, <2 x float>* %46, align 8
  %47 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 3
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* %47, %struct.SkRect* nonnull dereferenceable(16) %20) #15
  store i8 0, i8* %21, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #15
  br label %48

48:                                               ; preds = %19, %41
  %49 = zext i32 %3 to i64
  %50 = shl nuw nsw i64 %49, 1
  %51 = zext i8 %2 to i64
  %52 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = mul nuw nsw i64 %54, %49
  %56 = icmp ugt i64 %55, 4294967295
  %57 = shl nuw nsw i64 %55, 2
  br i1 %56, label %58, label %63

58:                                               ; preds = %48
  %59 = and i64 %57, 17179869180
  %60 = lshr i64 %55, 32
  %61 = shl nuw nsw i64 %60, 34
  %62 = or i64 %61, %59
  br label %63

63:                                               ; preds = %58, %48
  %64 = phi i64 [ %62, %58 ], [ %57, %48 ]
  %65 = add nuw nsw i64 %50, 43
  %66 = and i64 %65, 17179869180
  %67 = icmp ugt i64 %66, 39
  %68 = add nuw nsw i64 %64, %66
  br i1 %16, label %75, label %69

69:                                               ; preds = %63
  %70 = shl nuw nsw i64 %49, 2
  %71 = zext i32 %4 to i64
  %72 = add nuw nsw i64 %70, 4
  %73 = add nuw nsw i64 %72, %71
  %74 = add i64 %73, %68
  br label %75

75:                                               ; preds = %63, %69
  %76 = phi i64 [ %74, %69 ], [ %68, %63 ]
  %77 = add nsw i64 %76, 7
  %78 = icmp ult i64 %76, -7
  %79 = and i1 %67, %78
  %80 = and i64 %77, -8
  br i1 %79, label %84, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 7
  %83 = bitcast %"struct.SkTextBlobBuilder::RunBuffer"* %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 32, i1 false)
  br label %228

84:                                               ; preds = %75
  %85 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 2
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, %80
  %88 = icmp uge i64 %87, %86
  %89 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = icmp ule i64 %87, %90
  %92 = and i1 %91, %88
  br i1 %92, label %116, label %93

93:                                               ; preds = %84
  %94 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 4
  %95 = load i32, i32* %94, align 8
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %93
  store i64 32, i64* %85, align 8
  br label %98

98:                                               ; preds = %97, %93
  %99 = phi i64 [ 32, %97 ], [ %86, %93 ]
  %100 = add i64 %99, %80
  %101 = icmp uge i64 %100, %99
  %102 = and i1 %88, %101
  store i64 %100, i64* %89, align 8
  br i1 %102, label %103, label %105

103:                                              ; preds = %98
  %104 = icmp eq i64 %100, 0
  br i1 %104, label %110, label %105

105:                                              ; preds = %103, %98
  %106 = phi i64 [ %100, %103 ], [ -1, %98 ]
  %107 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  store i8* null, i8** %107, align 8
  %109 = call i8* @_Z16sk_realloc_throwPvm(i8* %108, i64 %106) #15
  br label %110

110:                                              ; preds = %105, %103
  %111 = phi i8* [ %109, %105 ], [ null, %103 ]
  %112 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  store i8* %111, i8** %112, align 8
  %114 = icmp eq i8* %113, null
  br i1 %114, label %116, label %115

115:                                              ; preds = %110
  call void @_Z7sk_freePv(i8* nonnull %113) #15
  br label %116

116:                                              ; preds = %84, %110, %115
  %117 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = load i64, i64* %85, align 8
  %120 = getelementptr inbounds i8, i8* %118, i64 %119
  %121 = bitcast i8* %120 to %class.SkTypeface**
  %122 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 0, i32 0
  %123 = load %class.SkTypeface*, %class.SkTypeface** %122, align 8
  %124 = icmp eq %class.SkTypeface* %123, null
  br i1 %124, label %128, label %125

125:                                              ; preds = %116
  %126 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %123, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = atomicrmw add i32* %126, i32 1 monotonic
  br label %128

128:                                              ; preds = %125, %116
  store %class.SkTypeface* %123, %class.SkTypeface** %121, align 8
  %129 = getelementptr inbounds i8, i8* %120, i64 8
  %130 = getelementptr inbounds %class.SkFont, %class.SkFont* %1, i64 0, i32 1
  %131 = bitcast float* %130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %131, i64 15, i1 false) #15
  %132 = getelementptr inbounds i8, i8* %120, i64 24
  %133 = bitcast i8* %132 to i32*
  store i32 %3, i32* %133, align 8
  %134 = getelementptr inbounds i8, i8* %120, i64 28
  %135 = bitcast i8* %134 to <2 x float>*
  store <2 x float> %5, <2 x float>* %135, align 4
  %136 = getelementptr inbounds i8, i8* %120, i64 36
  %137 = bitcast i8* %136 to i32*
  %138 = zext i8 %2 to i32
  store i32 %138, i32* %137, align 4
  br i1 %16, label %154, label %139

139:                                              ; preds = %128
  %140 = or i32 %138, 8
  store i32 %140, i32* %137, align 4
  %141 = getelementptr inbounds i8, i8* %120, i64 40
  %142 = add nuw nsw i64 %50, 3
  %143 = and i64 %142, 17179869180
  %144 = getelementptr inbounds i8, i8* %141, i64 %143
  %145 = bitcast i8* %144 to float*
  %146 = and i32 %138, 3
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i64
  %151 = mul nuw nsw i64 %150, %49
  %152 = getelementptr inbounds float, float* %145, i64 %151
  %153 = bitcast float* %152 to i32*
  store i32 %4, i32* %153, align 4
  br label %154

154:                                              ; preds = %128, %139
  %155 = getelementptr inbounds i8, i8* %120, i64 40
  %156 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 7, i32 0
  %157 = bitcast i16** %156 to i8**
  store i8* %155, i8** %157, align 8
  %158 = load i32, i32* %133, align 8
  %159 = zext i32 %158 to i64
  %160 = shl nuw nsw i64 %159, 1
  %161 = add nuw nsw i64 %160, 3
  %162 = and i64 %161, 17179869180
  %163 = getelementptr inbounds i8, i8* %155, i64 %162
  %164 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 7, i32 1
  %165 = bitcast float** %164 to i8**
  store i8* %163, i8** %165, align 8
  %166 = load i32, i32* %137, align 4
  %167 = and i32 %166, 8
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %187, label %169

169:                                              ; preds = %154
  %170 = load i32, i32* %133, align 8
  %171 = zext i32 %170 to i64
  %172 = shl nuw nsw i64 %171, 1
  %173 = add nuw nsw i64 %172, 3
  %174 = and i64 %173, 17179869180
  %175 = getelementptr inbounds i8, i8* %155, i64 %174
  %176 = bitcast i8* %175 to float*
  %177 = and i32 %166, 3
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %178
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i64
  %182 = mul nuw nsw i64 %181, %171
  %183 = getelementptr inbounds float, float* %176, i64 %182
  %184 = getelementptr inbounds float, float* %183, i64 1
  %185 = getelementptr inbounds float, float* %184, i64 %171
  %186 = bitcast float* %185 to i8*
  br label %187

187:                                              ; preds = %154, %169
  %188 = phi i8* [ %186, %169 ], [ null, %154 ]
  %189 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 7, i32 2
  store i8* %188, i8** %189, align 8
  %190 = load i32, i32* %137, align 4
  %191 = and i32 %190, 8
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %210, label %193

193:                                              ; preds = %187
  %194 = load i32, i32* %133, align 8
  %195 = zext i32 %194 to i64
  %196 = shl nuw nsw i64 %195, 1
  %197 = add nuw nsw i64 %196, 3
  %198 = and i64 %197, 17179869180
  %199 = getelementptr inbounds i8, i8* %155, i64 %198
  %200 = bitcast i8* %199 to float*
  %201 = and i32 %190, 3
  %202 = zext i32 %201 to i64
  %203 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i64
  %206 = mul nuw nsw i64 %205, %195
  %207 = getelementptr inbounds float, float* %200, i64 %206
  %208 = getelementptr inbounds float, float* %207, i64 1
  %209 = bitcast float* %208 to i32*
  br label %210

210:                                              ; preds = %187, %193
  %211 = phi i32* [ %209, %193 ], [ null, %187 ]
  %212 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 7, i32 3
  store i32* %211, i32** %212, align 8
  %213 = load i64, i64* %85, align 8
  %214 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 6
  store i64 %213, i64* %214, align 8
  %215 = add i64 %213, %80
  store i64 %215, i64* %85, align 8
  %216 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 4
  %217 = load i32, i32* %216, align 8
  %218 = add nsw i32 %217, 1
  store i32 %218, i32* %216, align 8
  br label %219

219:                                              ; preds = %210, %17
  %220 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 5
  %221 = load i8, i8* %220, align 4, !range !2
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %223, label %228

223:                                              ; preds = %219
  %224 = icmp eq %struct.SkRect* %6, null
  br i1 %224, label %227, label %225

225:                                              ; preds = %223
  %226 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 3
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* %226, %struct.SkRect* nonnull dereferenceable(16) %6) #15
  br label %228

227:                                              ; preds = %223
  store i8 1, i8* %220, align 4
  br label %228

228:                                              ; preds = %81, %219, %225, %227, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.SkTextBlobBuilder::RunBuffer"* @_ZN17SkTextBlobBuilder8allocRunERK6SkFontiffPK6SkRect(%class.SkTextBlobBuilder*, %class.SkFont* dereferenceable(24), i32, float, float, %struct.SkRect*) local_unnamed_addr #10 align 2 {
  %7 = insertelement <2 x float> undef, float %3, i32 0
  %8 = insertelement <2 x float> %7, float %4, i32 1
  tail call void @_ZN17SkTextBlobBuilder13allocInternalERK6SkFontN10SkTextBlob16GlyphPositioningEii7SkPointPK6SkRect(%class.SkTextBlobBuilder* %0, %class.SkFont* dereferenceable(24) %1, i8 zeroext 0, i32 %2, i32 0, <2 x float> %8, %struct.SkRect* %5)
  %9 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 7
  ret %"struct.SkTextBlobBuilder::RunBuffer"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.SkTextBlobBuilder::RunBuffer"* @_ZN17SkTextBlobBuilder12allocRunPosHERK6SkFontifPK6SkRect(%class.SkTextBlobBuilder*, %class.SkFont* dereferenceable(24), i32, float, %struct.SkRect*) local_unnamed_addr #10 align 2 {
  %6 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %3, i32 1
  tail call void @_ZN17SkTextBlobBuilder13allocInternalERK6SkFontN10SkTextBlob16GlyphPositioningEii7SkPointPK6SkRect(%class.SkTextBlobBuilder* %0, %class.SkFont* dereferenceable(24) %1, i8 zeroext 1, i32 %2, i32 0, <2 x float> %6, %struct.SkRect* %4)
  %7 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 7
  ret %"struct.SkTextBlobBuilder::RunBuffer"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.SkTextBlobBuilder::RunBuffer"* @_ZN17SkTextBlobBuilder11allocRunPosERK6SkFontiPK6SkRect(%class.SkTextBlobBuilder*, %class.SkFont* dereferenceable(24), i32, %struct.SkRect*) local_unnamed_addr #10 align 2 {
  tail call void @_ZN17SkTextBlobBuilder13allocInternalERK6SkFontN10SkTextBlob16GlyphPositioningEii7SkPointPK6SkRect(%class.SkTextBlobBuilder* %0, %class.SkFont* dereferenceable(24) %1, i8 zeroext 2, i32 %2, i32 0, <2 x float> zeroinitializer, %struct.SkRect* %3)
  %5 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 7
  ret %"struct.SkTextBlobBuilder::RunBuffer"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.SkTextBlobBuilder::RunBuffer"* @_ZN17SkTextBlobBuilder15allocRunRSXformERK6SkFonti(%class.SkTextBlobBuilder*, %class.SkFont* dereferenceable(24), i32) local_unnamed_addr #10 align 2 {
  tail call void @_ZN17SkTextBlobBuilder13allocInternalERK6SkFontN10SkTextBlob16GlyphPositioningEii7SkPointPK6SkRect(%class.SkTextBlobBuilder* %0, %class.SkFont* dereferenceable(24) %1, i8 zeroext 3, i32 %2, i32 0, <2 x float> zeroinitializer, %struct.SkRect* null)
  %4 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 7
  ret %"struct.SkTextBlobBuilder::RunBuffer"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.SkTextBlobBuilder::RunBuffer"* @_ZN17SkTextBlobBuilder12allocRunTextERK6SkFontiffiPK6SkRect(%class.SkTextBlobBuilder*, %class.SkFont* dereferenceable(24), i32, float, float, i32, %struct.SkRect*) local_unnamed_addr #10 align 2 {
  %8 = insertelement <2 x float> undef, float %3, i32 0
  %9 = insertelement <2 x float> %8, float %4, i32 1
  tail call void @_ZN17SkTextBlobBuilder13allocInternalERK6SkFontN10SkTextBlob16GlyphPositioningEii7SkPointPK6SkRect(%class.SkTextBlobBuilder* %0, %class.SkFont* dereferenceable(24) %1, i8 zeroext 0, i32 %2, i32 %5, <2 x float> %9, %struct.SkRect* %6)
  %10 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 7
  ret %"struct.SkTextBlobBuilder::RunBuffer"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.SkTextBlobBuilder::RunBuffer"* @_ZN17SkTextBlobBuilder16allocRunTextPosHERK6SkFontifiPK6SkRect(%class.SkTextBlobBuilder*, %class.SkFont* dereferenceable(24), i32, float, i32, %struct.SkRect*) local_unnamed_addr #10 align 2 {
  %7 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %3, i32 1
  tail call void @_ZN17SkTextBlobBuilder13allocInternalERK6SkFontN10SkTextBlob16GlyphPositioningEii7SkPointPK6SkRect(%class.SkTextBlobBuilder* %0, %class.SkFont* dereferenceable(24) %1, i8 zeroext 1, i32 %2, i32 %4, <2 x float> %7, %struct.SkRect* %5)
  %8 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 7
  ret %"struct.SkTextBlobBuilder::RunBuffer"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.SkTextBlobBuilder::RunBuffer"* @_ZN17SkTextBlobBuilder15allocRunTextPosERK6SkFontiiPK6SkRect(%class.SkTextBlobBuilder*, %class.SkFont* dereferenceable(24), i32, i32, %struct.SkRect*) local_unnamed_addr #10 align 2 {
  tail call void @_ZN17SkTextBlobBuilder13allocInternalERK6SkFontN10SkTextBlob16GlyphPositioningEii7SkPointPK6SkRect(%class.SkTextBlobBuilder* %0, %class.SkFont* dereferenceable(24) %1, i8 zeroext 2, i32 %2, i32 %3, <2 x float> zeroinitializer, %struct.SkRect* %4)
  %6 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 7
  ret %"struct.SkTextBlobBuilder::RunBuffer"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.SkTextBlobBuilder::RunBuffer"* @_ZN17SkTextBlobBuilder19allocRunTextRSXformERK6SkFontiiPK6SkRect(%class.SkTextBlobBuilder*, %class.SkFont* dereferenceable(24), i32, i32, %struct.SkRect*) local_unnamed_addr #10 align 2 {
  tail call void @_ZN17SkTextBlobBuilder13allocInternalERK6SkFontN10SkTextBlob16GlyphPositioningEii7SkPointPK6SkRect(%class.SkTextBlobBuilder* %0, %class.SkFont* dereferenceable(24) %1, i8 zeroext 3, i32 %2, i32 %3, <2 x float> zeroinitializer, %struct.SkRect* %4)
  %6 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %0, i64 0, i32 7
  ret %"struct.SkTextBlobBuilder::RunBuffer"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkTextBlobPriv7FlattenERK10SkTextBlobR13SkWriteBuffer(%class.SkTextBlob* dereferenceable(28), %class.SkWriteBuffer* dereferenceable(56)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %0, i64 0, i32 1
  %4 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %struct.SkRect*)***
  %5 = load void (%class.SkWriteBuffer*, %struct.SkRect*)**, void (%class.SkWriteBuffer*, %struct.SkRect*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %5, i64 22
  %7 = load void (%class.SkWriteBuffer*, %struct.SkRect*)*, void (%class.SkWriteBuffer*, %struct.SkRect*)** %6, align 8
  tail call void %7(%class.SkWriteBuffer* %1, %struct.SkRect* dereferenceable(16) %3) #15
  %8 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %0, i64 1
  %9 = ptrtoint %class.SkTextBlob* %8 to i64
  %10 = add i64 %9, 7
  %11 = and i64 %10, -8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  br label %220

15:                                               ; preds = %2
  %16 = inttoptr i64 %11 to %"class.SkTextBlob::RunRecord"*
  %17 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %18 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %struct.SkPoint*)***
  %19 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i8*, i64)***
  br label %20

20:                                               ; preds = %15, %213
  %21 = phi %"class.SkTextBlob::RunRecord"* [ %16, %15 ], [ %218, %213 ]
  %22 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %17, align 8
  %25 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %24, i64 7
  %26 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %25, align 8
  tail call void %26(%class.SkWriteBuffer* %1, i32 %23) #15
  %27 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %21, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, 3
  %30 = and i32 %28, 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %50, label %32

32:                                               ; preds = %20
  %33 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %21, i64 1
  %34 = bitcast %"class.SkTextBlob::RunRecord"* %33 to i8*
  %35 = load i32, i32* %22, align 8
  %36 = zext i32 %35 to i64
  %37 = shl nuw nsw i64 %36, 1
  %38 = add nuw nsw i64 %37, 3
  %39 = and i64 %38, 17179869180
  %40 = getelementptr inbounds i8, i8* %34, i64 %39
  %41 = bitcast i8* %40 to float*
  %42 = zext i32 %29 to i64
  %43 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i64
  %46 = mul nuw nsw i64 %45, %36
  %47 = getelementptr inbounds float, float* %41, i64 %46
  %48 = bitcast float* %47 to i32*
  %49 = load i32, i32* %48, align 4
  br label %50

50:                                               ; preds = %20, %32
  %51 = phi i32 [ %49, %32 ], [ 0, %20 ]
  %52 = icmp ne i32 %51, 0
  %53 = zext i1 %52 to i32
  %54 = shl nuw nsw i32 %53, 8
  %55 = or i32 %54, %29
  %56 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %17, align 8
  %57 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %56, i64 7
  %58 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %57, align 8
  tail call void %58(%class.SkWriteBuffer* %1, i32 %55) #15
  br i1 %52, label %59, label %63

59:                                               ; preds = %50
  %60 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %17, align 8
  %61 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %60, i64 7
  %62 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %61, align 8
  tail call void %62(%class.SkWriteBuffer* %1, i32 %51) #15
  br label %63

63:                                               ; preds = %59, %50
  %64 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %21, i64 0, i32 2
  %65 = load void (%class.SkWriteBuffer*, %struct.SkPoint*)**, void (%class.SkWriteBuffer*, %struct.SkPoint*)*** %18, align 8
  %66 = getelementptr inbounds void (%class.SkWriteBuffer*, %struct.SkPoint*)*, void (%class.SkWriteBuffer*, %struct.SkPoint*)** %65, i64 16
  %67 = load void (%class.SkWriteBuffer*, %struct.SkPoint*)*, void (%class.SkWriteBuffer*, %struct.SkPoint*)** %66, align 8
  tail call void %67(%class.SkWriteBuffer* %1, %struct.SkPoint* dereferenceable(8) %64) #15
  %68 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %21, i64 0, i32 0
  tail call void @_ZN10SkFontPriv7FlattenERK6SkFontR13SkWriteBuffer(%class.SkFont* dereferenceable(24) %68, %class.SkWriteBuffer* dereferenceable(56) %1) #15
  %69 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %21, i64 1
  %70 = bitcast %"class.SkTextBlob::RunRecord"* %69 to i8*
  %71 = load i32, i32* %22, align 8
  %72 = zext i32 %71 to i64
  %73 = shl nuw nsw i64 %72, 1
  %74 = load void (%class.SkWriteBuffer*, i8*, i64)**, void (%class.SkWriteBuffer*, i8*, i64)*** %19, align 8
  %75 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %74, i64 3
  %76 = load void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %75, align 8
  tail call void %76(%class.SkWriteBuffer* %1, i8* %70, i64 %73) #15
  %77 = load i32, i32* %22, align 8
  %78 = zext i32 %77 to i64
  %79 = shl nuw nsw i64 %78, 1
  %80 = add nuw nsw i64 %79, 3
  %81 = and i64 %80, 17179869180
  %82 = getelementptr inbounds i8, i8* %70, i64 %81
  %83 = shl nuw nsw i64 %78, 2
  %84 = load i32, i32* %27, align 4
  %85 = and i32 %84, 3
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %86
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i64
  %90 = mul nuw nsw i64 %83, %89
  %91 = load void (%class.SkWriteBuffer*, i8*, i64)**, void (%class.SkWriteBuffer*, i8*, i64)*** %19, align 8
  %92 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %91, i64 3
  %93 = load void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %92, align 8
  tail call void %93(%class.SkWriteBuffer* %1, i8* %82, i64 %90) #15
  br i1 %52, label %94, label %155

94:                                               ; preds = %63
  %95 = load i32, i32* %27, align 4
  %96 = and i32 %95, 8
  %97 = icmp eq i32 %96, 0
  %98 = load i32, i32* %22, align 8
  %99 = zext i32 %98 to i64
  br i1 %97, label %115, label %100

100:                                              ; preds = %94
  %101 = shl nuw nsw i64 %99, 1
  %102 = add nuw nsw i64 %101, 3
  %103 = and i64 %102, 17179869180
  %104 = getelementptr inbounds i8, i8* %70, i64 4
  %105 = and i32 %95, 3
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i64
  %110 = mul nuw nsw i64 %109, %99
  %111 = getelementptr inbounds i8, i8* %104, i64 %103
  %112 = bitcast i8* %111 to float*
  %113 = getelementptr inbounds float, float* %112, i64 %110
  %114 = bitcast float* %113 to i32*
  br label %115

115:                                              ; preds = %94, %100
  %116 = phi i32* [ %114, %100 ], [ null, %94 ]
  %117 = bitcast i32* %116 to i8*
  %118 = shl nuw nsw i64 %99, 2
  %119 = load void (%class.SkWriteBuffer*, i8*, i64)**, void (%class.SkWriteBuffer*, i8*, i64)*** %19, align 8
  %120 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %119, i64 3
  %121 = load void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %120, align 8
  tail call void %121(%class.SkWriteBuffer* %1, i8* %117, i64 %118) #15
  %122 = load i32, i32* %27, align 4
  %123 = and i32 %122, 8
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %148, label %125

125:                                              ; preds = %115
  %126 = load i32, i32* %22, align 8
  %127 = zext i32 %126 to i64
  %128 = shl nuw nsw i64 %127, 1
  %129 = add nuw nsw i64 %128, 3
  %130 = and i64 %129, 17179869180
  %131 = getelementptr inbounds i8, i8* %70, i64 4
  %132 = and i32 %122, 3
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = mul nuw nsw i64 %136, %127
  %138 = getelementptr inbounds i8, i8* %131, i64 %130
  %139 = bitcast i8* %138 to float*
  %140 = getelementptr inbounds float, float* %139, i64 %137
  %141 = getelementptr inbounds float, float* %140, i64 %127
  %142 = bitcast float* %141 to i8*
  %143 = getelementptr inbounds i8, i8* %70, i64 %130
  %144 = bitcast i8* %143 to float*
  %145 = getelementptr inbounds float, float* %144, i64 %137
  %146 = bitcast float* %145 to i32*
  %147 = load i32, i32* %146, align 4
  br label %148

148:                                              ; preds = %115, %125
  %149 = phi i8* [ %142, %125 ], [ null, %115 ]
  %150 = phi i32 [ %147, %125 ], [ 0, %115 ]
  %151 = zext i32 %150 to i64
  %152 = load void (%class.SkWriteBuffer*, i8*, i64)**, void (%class.SkWriteBuffer*, i8*, i64)*** %19, align 8
  %153 = getelementptr inbounds void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %152, i64 3
  %154 = load void (%class.SkWriteBuffer*, i8*, i64)*, void (%class.SkWriteBuffer*, i8*, i64)** %153, align 8
  tail call void %154(%class.SkWriteBuffer* %1, i8* %149, i64 %151) #15
  br label %155

155:                                              ; preds = %63, %148
  %156 = load i32, i32* %27, align 4
  %157 = and i32 %156, 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %220

159:                                              ; preds = %155
  %160 = bitcast %"class.SkTextBlob::RunRecord"* %21 to i8*
  %161 = load i32, i32* %22, align 8
  %162 = and i32 %156, 8
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %173

164:                                              ; preds = %159
  %165 = and i32 %156, 3
  %166 = zext i32 %165 to i64
  %167 = zext i32 %161 to i64
  %168 = shl nuw nsw i64 %167, 1
  %169 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %166
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i64
  %172 = mul nuw nsw i64 %171, %167
  br label %189

173:                                              ; preds = %159
  %174 = zext i32 %161 to i64
  %175 = shl nuw nsw i64 %174, 1
  %176 = add nuw nsw i64 %175, 3
  %177 = and i64 %176, 17179869180
  %178 = getelementptr inbounds i8, i8* %70, i64 %177
  %179 = bitcast i8* %178 to float*
  %180 = and i32 %156, 3
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %181
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = mul nuw nsw i64 %184, %174
  %186 = getelementptr inbounds float, float* %179, i64 %185
  %187 = bitcast float* %186 to i32*
  %188 = load i32, i32* %187, align 4
  br label %189

189:                                              ; preds = %173, %164
  %190 = phi i64 [ %185, %173 ], [ %172, %164 ]
  %191 = phi i64 [ %175, %173 ], [ %168, %164 ]
  %192 = phi i64 [ %174, %173 ], [ %167, %164 ]
  %193 = phi i32 [ %188, %173 ], [ 0, %164 ]
  %194 = icmp ugt i64 %190, 4294967295
  %195 = shl nuw nsw i64 %190, 2
  br i1 %194, label %196, label %201

196:                                              ; preds = %189
  %197 = and i64 %195, 17179869180
  %198 = lshr i64 %190, 32
  %199 = shl nuw nsw i64 %198, 34
  %200 = or i64 %199, %197
  br label %201

201:                                              ; preds = %196, %189
  %202 = phi i64 [ %200, %196 ], [ %195, %189 ]
  %203 = add nuw nsw i64 %191, 43
  %204 = and i64 %203, 17179869180
  %205 = add nuw nsw i64 %202, %204
  %206 = icmp eq i32 %193, 0
  br i1 %206, label %213, label %207

207:                                              ; preds = %201
  %208 = shl nuw nsw i64 %192, 2
  %209 = zext i32 %193 to i64
  %210 = add nuw nsw i64 %208, 4
  %211 = add nuw nsw i64 %210, %209
  %212 = add i64 %211, %205
  br label %213

213:                                              ; preds = %201, %207
  %214 = phi i64 [ %212, %207 ], [ %205, %201 ]
  %215 = add nsw i64 %214, 7
  %216 = and i64 %215, -8
  %217 = getelementptr inbounds i8, i8* %160, i64 %216
  %218 = bitcast i8* %217 to %"class.SkTextBlob::RunRecord"*
  %219 = icmp eq i8* %217, null
  br i1 %219, label %220, label %20

220:                                              ; preds = %155, %213, %13
  %221 = phi void (%class.SkWriteBuffer*, i32)*** [ %14, %13 ], [ %17, %213 ], [ %17, %155 ]
  %222 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %221, align 8
  %223 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %222, i64 7
  %224 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %223, align 8
  tail call void %224(%class.SkWriteBuffer* %1, i32 0) #15
  ret void
}

declare void @_ZN10SkFontPriv7FlattenERK6SkFontR13SkWriteBuffer(%class.SkFont* dereferenceable(24), %class.SkWriteBuffer* dereferenceable(56)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkTextBlobPriv14MakeFromBufferER12SkReadBuffer(%class.sk_sp.12* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) local_unnamed_addr #10 align 2 {
  %3 = alloca %class.sk_sp.12, align 8
  %4 = alloca %struct.SkRect, align 4
  %5 = alloca %class.SkTextBlobBuilder, align 8
  %6 = alloca <2 x float>, align 8
  %7 = bitcast <2 x float>* %6 to %struct.SkPoint*
  %8 = alloca %class.SkFont, align 8
  %9 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #15
  %10 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %10, i8 -1, i64 16, i1 false)
  call void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* %1, %struct.SkRect* nonnull %4) #15
  %11 = bitcast %class.SkTextBlobBuilder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %11) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast ({ %class.SkAutoTMalloc, i64, i64, %struct.SkRect, i32, i8, [3 x i8], i64, %"struct.SkTextBlobBuilder::RunBuffer" }* @__const._ZN10SkTextBlob15MakeFromRSXformEPKvmPK9SkRSXformRK6SkFont14SkTextEncoding.builder to i8*), i64 88, i1 false)
  %12 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %5, i64 0, i32 6
  store i64 0, i64* %12, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 45, i1 false) #15
  %13 = bitcast <2 x float>* %6 to i8*
  %14 = getelementptr inbounds <2 x float>, <2 x float>* %6, i64 0, i64 0
  %15 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %7, i64 0, i32 1
  %16 = bitcast %class.SkFont* %8 to i8*
  %17 = getelementptr inbounds %class.SkFont, %class.SkFont* %8, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %class.SkFont, %class.SkFont* %8, i64 0, i32 1
  %19 = getelementptr inbounds %class.SkFont, %class.SkFont* %8, i64 0, i32 2
  %20 = getelementptr inbounds %class.SkFont, %class.SkFont* %8, i64 0, i32 3
  %21 = getelementptr inbounds %class.SkFont, %class.SkFont* %8, i64 0, i32 4
  %22 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %23 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = bitcast %class.SkReadBuffer* %1 to i64*
  %26 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %5, i64 0, i32 7
  %27 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %0, i64 0, i32 0
  %28 = bitcast i8* %21 to i32*
  br label %29

29:                                               ; preds = %132, %2
  %30 = call i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer* %1) #15
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %134, label %32

32:                                               ; preds = %29
  %33 = call i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer* %1) #15
  %34 = trunc i32 %33 to i8
  %35 = icmp slt i32 %30, 1
  %36 = icmp ugt i8 %34, 3
  %37 = or i1 %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %32
  store %class.SkTextBlob* null, %class.SkTextBlob** %27, align 8
  br label %135

39:                                               ; preds = %32
  %40 = and i32 %33, 65280
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %39
  %43 = call i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer* %1) #15
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  store %class.SkTextBlob* null, %class.SkTextBlob** %27, align 8
  br label %135

46:                                               ; preds = %42, %39
  %47 = phi i32 [ %43, %42 ], [ 0, %39 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  store float 0xFFFFFFFFE0000000, float* %14, align 8
  store float 0xFFFFFFFFE0000000, float* %15, align 4
  call void @_ZN12SkReadBuffer9readPointEP7SkPoint(%class.SkReadBuffer* %1, %struct.SkPoint* nonnull %7) #15
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #15
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %17, align 8
  store float 0xFFFFFFFFE0000000, float* %18, align 8
  store float 0xFFFFFFFFE0000000, float* %19, align 4
  store float 0xFFFFFFFFE0000000, float* %20, align 8
  store i32 -1431655766, i32* %28, align 4
  call void @_ZN6SkFontC1Ev(%class.SkFont* nonnull %8) #15
  %48 = call zeroext i1 @_ZN10SkFontPriv9UnflattenEP6SkFontR12SkReadBuffer(%class.SkFont* nonnull %8, %class.SkReadBuffer* dereferenceable(136) %1) #15
  %49 = sext i32 %30 to i64
  %50 = shl nsw i64 %49, 1
  %51 = and i32 %33, 255
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i64
  %56 = shl nuw nsw i64 %55, 2
  %57 = mul nsw i64 %56, %49
  %58 = shl nsw i64 %49, 2
  %59 = select i1 %41, i64 %58, i64 0
  %60 = sext i32 %47 to i64
  %61 = load i8, i8* %22, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %71

63:                                               ; preds = %46
  %64 = add nuw nsw i64 %50, %60
  %65 = add nuw nsw i64 %64, %57
  %66 = add nuw nsw i64 %65, %59
  %67 = load i64, i64* %24, align 8
  %68 = load i64, i64* %25, align 8
  %69 = sub i64 %67, %68
  %70 = icmp ugt i64 %66, %69
  br i1 %70, label %71, label %72

71:                                               ; preds = %63, %46
  store %class.SkTextBlob* null, %class.SkTextBlob** %27, align 8
  br label %118

72:                                               ; preds = %63
  switch i8 %34, label %80 [
    i8 0, label %73
    i8 1, label %75
    i8 2, label %78
    i8 3, label %79
  ]

73:                                               ; preds = %72
  %74 = load <2 x float>, <2 x float>* %6, align 8
  call void @_ZN17SkTextBlobBuilder13allocInternalERK6SkFontN10SkTextBlob16GlyphPositioningEii7SkPointPK6SkRect(%class.SkTextBlobBuilder* nonnull %5, %class.SkFont* nonnull dereferenceable(24) %8, i8 zeroext 0, i32 %30, i32 %47, <2 x float> %74, %struct.SkRect* nonnull %4) #15
  br label %80

75:                                               ; preds = %72
  %76 = load float, float* %15, align 4
  %77 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %76, i32 1
  call void @_ZN17SkTextBlobBuilder13allocInternalERK6SkFontN10SkTextBlob16GlyphPositioningEii7SkPointPK6SkRect(%class.SkTextBlobBuilder* nonnull %5, %class.SkFont* nonnull dereferenceable(24) %8, i8 zeroext 1, i32 %30, i32 %47, <2 x float> %77, %struct.SkRect* nonnull %4) #15
  br label %80

78:                                               ; preds = %72
  call void @_ZN17SkTextBlobBuilder13allocInternalERK6SkFontN10SkTextBlob16GlyphPositioningEii7SkPointPK6SkRect(%class.SkTextBlobBuilder* nonnull %5, %class.SkFont* nonnull dereferenceable(24) %8, i8 zeroext 2, i32 %30, i32 %47, <2 x float> zeroinitializer, %struct.SkRect* nonnull %4) #15
  br label %80

79:                                               ; preds = %72
  call void @_ZN17SkTextBlobBuilder13allocInternalERK6SkFontN10SkTextBlob16GlyphPositioningEii7SkPointPK6SkRect(%class.SkTextBlobBuilder* nonnull %5, %class.SkFont* nonnull dereferenceable(24) %8, i8 zeroext 3, i32 %30, i32 %47, <2 x float> zeroinitializer, %struct.SkRect* nonnull %4) #15
  br label %80

80:                                               ; preds = %72, %79, %78, %75, %73
  %81 = phi %"struct.SkTextBlobBuilder::RunBuffer"* [ null, %72 ], [ %26, %79 ], [ %26, %78 ], [ %26, %75 ], [ %26, %73 ]
  %82 = getelementptr inbounds %"struct.SkTextBlobBuilder::RunBuffer", %"struct.SkTextBlobBuilder::RunBuffer"* %81, i64 0, i32 0
  %83 = load i16*, i16** %82, align 8
  %84 = icmp eq i16* %83, null
  %85 = bitcast i16* %83 to i8*
  br i1 %84, label %99, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"struct.SkTextBlobBuilder::RunBuffer", %"struct.SkTextBlobBuilder::RunBuffer"* %81, i64 0, i32 1
  %88 = load float*, float** %87, align 8
  %89 = icmp eq float* %88, null
  br i1 %89, label %99, label %90

90:                                               ; preds = %86
  br i1 %41, label %91, label %100

91:                                               ; preds = %90
  %92 = getelementptr inbounds %"struct.SkTextBlobBuilder::RunBuffer", %"struct.SkTextBlobBuilder::RunBuffer"* %81, i64 0, i32 3
  %93 = load i32*, i32** %92, align 8
  %94 = icmp eq i32* %93, null
  br i1 %94, label %99, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"struct.SkTextBlobBuilder::RunBuffer", %"struct.SkTextBlobBuilder::RunBuffer"* %81, i64 0, i32 2
  %97 = load i8*, i8** %96, align 8
  %98 = icmp eq i8* %97, null
  br i1 %98, label %99, label %100

99:                                               ; preds = %95, %91, %86, %80
  store %class.SkTextBlob* null, %class.SkTextBlob** %27, align 8
  br label %118

100:                                              ; preds = %95, %90
  %101 = call zeroext i1 @_ZN12SkReadBuffer13readByteArrayEPvm(%class.SkReadBuffer* %1, i8* nonnull %85, i64 %50) #15
  br i1 %101, label %102, label %106

102:                                              ; preds = %100
  %103 = bitcast float** %87 to i8**
  %104 = load i8*, i8** %103, align 8
  %105 = call zeroext i1 @_ZN12SkReadBuffer13readByteArrayEPvm(%class.SkReadBuffer* %1, i8* %104, i64 %57) #15
  br i1 %105, label %107, label %106

106:                                              ; preds = %102, %100
  store %class.SkTextBlob* null, %class.SkTextBlob** %27, align 8
  br label %118

107:                                              ; preds = %102
  br i1 %41, label %108, label %118

108:                                              ; preds = %107
  %109 = getelementptr inbounds %"struct.SkTextBlobBuilder::RunBuffer", %"struct.SkTextBlobBuilder::RunBuffer"* %81, i64 0, i32 3
  %110 = bitcast i32** %109 to i8**
  %111 = load i8*, i8** %110, align 8
  %112 = call zeroext i1 @_ZN12SkReadBuffer13readByteArrayEPvm(%class.SkReadBuffer* %1, i8* %111, i64 %59) #15
  br i1 %112, label %113, label %117

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"struct.SkTextBlobBuilder::RunBuffer", %"struct.SkTextBlobBuilder::RunBuffer"* %81, i64 0, i32 2
  %115 = load i8*, i8** %114, align 8
  %116 = call zeroext i1 @_ZN12SkReadBuffer13readByteArrayEPvm(%class.SkReadBuffer* %1, i8* %115, i64 %60) #15
  br i1 %116, label %118, label %117

117:                                              ; preds = %113, %108
  store %class.SkTextBlob* null, %class.SkTextBlob** %27, align 8
  br label %118

118:                                              ; preds = %99, %106, %117, %113, %107, %71
  %119 = phi i32 [ 1, %71 ], [ 1, %117 ], [ 1, %106 ], [ 1, %99 ], [ 0, %113 ], [ 0, %107 ]
  %120 = load %class.SkTypeface*, %class.SkTypeface** %17, align 8
  %121 = icmp eq %class.SkTypeface* %120, null
  br i1 %121, label %132, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %120, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw add i32* %123, i32 -1 acq_rel
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122
  %127 = bitcast %class.SkTypeface* %120 to %class.SkRefCntBase*
  %128 = bitcast %class.SkTypeface* %120 to void (%class.SkRefCntBase*)***
  %129 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %128, align 8
  %130 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %129, i64 2
  %131 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %130, align 8
  call void %131(%class.SkRefCntBase* nonnull %127) #15
  br label %132

132:                                              ; preds = %126, %122, %118
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  %133 = icmp eq i32 %119, 0
  br i1 %133, label %29, label %135

134:                                              ; preds = %29
  call void @_ZN17SkTextBlobBuilder4makeEv(%class.sk_sp.12* sret %0, %class.SkTextBlobBuilder* nonnull %5)
  br label %135

135:                                              ; preds = %132, %45, %38, %134
  %136 = bitcast %class.sk_sp.12* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136)
  %137 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = icmp eq i8* %138, null
  br i1 %139, label %140, label %141

140:                                              ; preds = %135
  store i8* null, i8** %137, align 8
  br label %155

141:                                              ; preds = %135
  call void @_ZN17SkTextBlobBuilder4makeEv(%class.sk_sp.12* nonnull sret %3, %class.SkTextBlobBuilder* nonnull %5) #15
  %142 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %3, i64 0, i32 0
  %143 = load %class.SkTextBlob*, %class.SkTextBlob** %142, align 8
  %144 = icmp eq %class.SkTextBlob* %143, null
  br i1 %144, label %151, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %151

149:                                              ; preds = %145
  call void @_ZN10SkTextBlobD2Ev(%class.SkTextBlob* nonnull %143) #15
  %150 = bitcast %class.SkTextBlob* %143 to i8*
  call void @_Z7sk_freePv(i8* nonnull %150) #15
  br label %151

151:                                              ; preds = %149, %145, %141
  %152 = load i8*, i8** %137, align 8
  store i8* null, i8** %137, align 8
  %153 = icmp eq i8* %152, null
  br i1 %153, label %155, label %154

154:                                              ; preds = %151
  call void @_Z7sk_freePv(i8* nonnull %152) #15
  br label %155

155:                                              ; preds = %140, %151, %154
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %11) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #15
  ret void
}

declare void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer*, %struct.SkRect*) local_unnamed_addr #6

declare i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer*) local_unnamed_addr #6

declare void @_ZN12SkReadBuffer9readPointEP7SkPoint(%class.SkReadBuffer*, %struct.SkPoint*) local_unnamed_addr #6

declare void @_ZN6SkFontC1Ev(%class.SkFont*) unnamed_addr #6

declare zeroext i1 @_ZN10SkFontPriv9UnflattenEP6SkFontR12SkReadBuffer(%class.SkFont*, %class.SkReadBuffer* dereferenceable(136)) local_unnamed_addr #6

declare zeroext i1 @_ZN12SkReadBuffer13readByteArrayEPvm(%class.SkReadBuffer*, i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkTextBlob12MakeFromTextEPKvmRK6SkFont14SkTextEncoding(%class.sk_sp.12* noalias nocapture sret, i8*, i64, %class.SkFont* dereferenceable(24), i32) local_unnamed_addr #10 align 2 {
  %6 = alloca %class.sk_sp.12, align 8
  %7 = alloca %class.SkTextBlobBuilder, align 8
  %8 = tail call i32 @_ZNK6SkFont12textToGlyphsEPKvm14SkTextEncodingPti(%class.SkFont* %3, i8* %1, i64 %2, i32 %4, i16* null, i32 0) #15
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %0, i64 0, i32 0
  store %class.SkTextBlob* null, %class.SkTextBlob** %11, align 8
  br label %41

12:                                               ; preds = %5
  %13 = bitcast %class.SkTextBlobBuilder* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %13) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast ({ %class.SkAutoTMalloc, i64, i64, %struct.SkRect, i32, i8, [3 x i8], i64, %"struct.SkTextBlobBuilder::RunBuffer" }* @__const._ZN10SkTextBlob15MakeFromRSXformEPKvmPK9SkRSXformRK6SkFont14SkTextEncoding.builder to i8*), i64 88, i1 false)
  %14 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %7, i64 0, i32 6
  store i64 0, i64* %14, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 45, i1 false) #15
  call void @_ZN17SkTextBlobBuilder13allocInternalERK6SkFontN10SkTextBlob16GlyphPositioningEii7SkPointPK6SkRect(%class.SkTextBlobBuilder* nonnull %7, %class.SkFont* dereferenceable(24) %3, i8 zeroext 2, i32 %8, i32 0, <2 x float> zeroinitializer, %struct.SkRect* null) #15
  %15 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %7, i64 0, i32 7, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %7, i64 0, i32 7, i32 1
  %18 = bitcast float** %17 to %struct.SkPoint**
  %19 = load %struct.SkPoint*, %struct.SkPoint** %18, align 8
  %20 = call i32 @_ZNK6SkFont12textToGlyphsEPKvm14SkTextEncodingPti(%class.SkFont* %3, i8* %1, i64 %2, i32 %4, i16* %16, i32 %8) #15
  call void @_ZNK6SkFont6getPosEPKtiP7SkPointS2_(%class.SkFont* %3, i16* %16, i32 %8, %struct.SkPoint* %19, <2 x float> zeroinitializer) #15
  call void @_ZN17SkTextBlobBuilder4makeEv(%class.sk_sp.12* sret %0, %class.SkTextBlobBuilder* nonnull %7)
  %21 = bitcast %class.sk_sp.12* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %12
  store i8* null, i8** %22, align 8
  br label %40

26:                                               ; preds = %12
  call void @_ZN17SkTextBlobBuilder4makeEv(%class.sk_sp.12* nonnull sret %6, %class.SkTextBlobBuilder* nonnull %7) #15
  %27 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %6, i64 0, i32 0
  %28 = load %class.SkTextBlob*, %class.SkTextBlob** %27, align 8
  %29 = icmp eq %class.SkTextBlob* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  call void @_ZN10SkTextBlobD2Ev(%class.SkTextBlob* nonnull %28) #15
  %35 = bitcast %class.SkTextBlob* %28 to i8*
  call void @_Z7sk_freePv(i8* nonnull %35) #15
  br label %36

36:                                               ; preds = %34, %30, %26
  %37 = load i8*, i8** %22, align 8
  store i8* null, i8** %22, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %40, label %39

39:                                               ; preds = %36
  call void @_Z7sk_freePv(i8* nonnull %37) #15
  br label %40

40:                                               ; preds = %25, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %13) #15
  br label %41

41:                                               ; preds = %40, %10
  ret void
}

declare i32 @_ZNK6SkFont12textToGlyphsEPKvm14SkTextEncodingPti(%class.SkFont*, i8*, i64, i32, i16*, i32) local_unnamed_addr #6

declare void @_ZNK6SkFont6getPosEPKtiP7SkPointS2_(%class.SkFont*, i16*, i32, %struct.SkPoint*, <2 x float>) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkTextBlob15MakeFromPosTextEPKvmPK7SkPointRK6SkFont14SkTextEncoding(%class.sk_sp.12* noalias nocapture sret, i8*, i64, %struct.SkPoint* nocapture readonly, %class.SkFont* dereferenceable(24), i32) local_unnamed_addr #10 align 2 {
  %7 = alloca %class.sk_sp.12, align 8
  %8 = alloca %class.SkTextBlobBuilder, align 8
  %9 = tail call i32 @_ZNK6SkFont12textToGlyphsEPKvm14SkTextEncodingPti(%class.SkFont* %4, i8* %1, i64 %2, i32 %5, i16* null, i32 0) #15
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %0, i64 0, i32 0
  store %class.SkTextBlob* null, %class.SkTextBlob** %12, align 8
  br label %45

13:                                               ; preds = %6
  %14 = bitcast %class.SkTextBlobBuilder* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %14) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 bitcast ({ %class.SkAutoTMalloc, i64, i64, %struct.SkRect, i32, i8, [3 x i8], i64, %"struct.SkTextBlobBuilder::RunBuffer" }* @__const._ZN10SkTextBlob15MakeFromRSXformEPKvmPK9SkRSXformRK6SkFont14SkTextEncoding.builder to i8*), i64 88, i1 false)
  %15 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %8, i64 0, i32 6
  store i64 0, i64* %15, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 45, i1 false) #15
  call void @_ZN17SkTextBlobBuilder13allocInternalERK6SkFontN10SkTextBlob16GlyphPositioningEii7SkPointPK6SkRect(%class.SkTextBlobBuilder* nonnull %8, %class.SkFont* dereferenceable(24) %4, i8 zeroext 2, i32 %9, i32 0, <2 x float> zeroinitializer, %struct.SkRect* null) #15
  %16 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %8, i64 0, i32 7, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %8, i64 0, i32 7, i32 1
  %19 = bitcast float** %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = call i32 @_ZNK6SkFont12textToGlyphsEPKvm14SkTextEncodingPti(%class.SkFont* %4, i8* %1, i64 %2, i32 %5, i16* %17, i32 %9) #15
  %22 = bitcast %struct.SkPoint* %3 to i8*
  %23 = sext i32 %9 to i64
  %24 = shl nsw i64 %23, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %22, i64 %24, i1 false)
  call void @_ZN17SkTextBlobBuilder4makeEv(%class.sk_sp.12* sret %0, %class.SkTextBlobBuilder* nonnull %8)
  %25 = bitcast %class.sk_sp.12* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  %26 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %13
  store i8* null, i8** %26, align 8
  br label %44

30:                                               ; preds = %13
  call void @_ZN17SkTextBlobBuilder4makeEv(%class.sk_sp.12* nonnull sret %7, %class.SkTextBlobBuilder* nonnull %8) #15
  %31 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %7, i64 0, i32 0
  %32 = load %class.SkTextBlob*, %class.SkTextBlob** %31, align 8
  %33 = icmp eq %class.SkTextBlob* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  call void @_ZN10SkTextBlobD2Ev(%class.SkTextBlob* nonnull %32) #15
  %39 = bitcast %class.SkTextBlob* %32 to i8*
  call void @_Z7sk_freePv(i8* nonnull %39) #15
  br label %40

40:                                               ; preds = %38, %34, %30
  %41 = load i8*, i8** %26, align 8
  store i8* null, i8** %26, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %40
  call void @_Z7sk_freePv(i8* nonnull %41) #15
  br label %44

44:                                               ; preds = %29, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %14) #15
  br label %45

45:                                               ; preds = %44, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkTextBlob16MakeFromPosTextHEPKvmPKffRK6SkFont14SkTextEncoding(%class.sk_sp.12* noalias nocapture sret, i8*, i64, float* nocapture readonly, float, %class.SkFont* dereferenceable(24), i32) local_unnamed_addr #10 align 2 {
  %8 = alloca %class.sk_sp.12, align 8
  %9 = alloca %class.SkTextBlobBuilder, align 8
  %10 = tail call i32 @_ZNK6SkFont12textToGlyphsEPKvm14SkTextEncodingPti(%class.SkFont* %5, i8* %1, i64 %2, i32 %6, i16* null, i32 0) #15
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %0, i64 0, i32 0
  store %class.SkTextBlob* null, %class.SkTextBlob** %13, align 8
  br label %47

14:                                               ; preds = %7
  %15 = bitcast %class.SkTextBlobBuilder* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %15) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 bitcast ({ %class.SkAutoTMalloc, i64, i64, %struct.SkRect, i32, i8, [3 x i8], i64, %"struct.SkTextBlobBuilder::RunBuffer" }* @__const._ZN10SkTextBlob15MakeFromRSXformEPKvmPK9SkRSXformRK6SkFont14SkTextEncoding.builder to i8*), i64 88, i1 false)
  %16 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %9, i64 0, i32 6
  store i64 0, i64* %16, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 45, i1 false) #15
  %17 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %4, i32 1
  call void @_ZN17SkTextBlobBuilder13allocInternalERK6SkFontN10SkTextBlob16GlyphPositioningEii7SkPointPK6SkRect(%class.SkTextBlobBuilder* nonnull %9, %class.SkFont* dereferenceable(24) %5, i8 zeroext 1, i32 %10, i32 0, <2 x float> %17, %struct.SkRect* null) #15
  %18 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %9, i64 0, i32 7, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %9, i64 0, i32 7, i32 1
  %21 = bitcast float** %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = call i32 @_ZNK6SkFont12textToGlyphsEPKvm14SkTextEncodingPti(%class.SkFont* %5, i8* %1, i64 %2, i32 %6, i16* %19, i32 %10) #15
  %24 = bitcast float* %3 to i8*
  %25 = sext i32 %10 to i64
  %26 = shl nsw i64 %25, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 %24, i64 %26, i1 false)
  call void @_ZN17SkTextBlobBuilder4makeEv(%class.sk_sp.12* sret %0, %class.SkTextBlobBuilder* nonnull %9)
  %27 = bitcast %class.sk_sp.12* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %14
  store i8* null, i8** %28, align 8
  br label %46

32:                                               ; preds = %14
  call void @_ZN17SkTextBlobBuilder4makeEv(%class.sk_sp.12* nonnull sret %8, %class.SkTextBlobBuilder* nonnull %9) #15
  %33 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %8, i64 0, i32 0
  %34 = load %class.SkTextBlob*, %class.SkTextBlob** %33, align 8
  %35 = icmp eq %class.SkTextBlob* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i32* %37, i32 -1 acq_rel
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  call void @_ZN10SkTextBlobD2Ev(%class.SkTextBlob* nonnull %34) #15
  %41 = bitcast %class.SkTextBlob* %34 to i8*
  call void @_Z7sk_freePv(i8* nonnull %41) #15
  br label %42

42:                                               ; preds = %40, %36, %32
  %43 = load i8*, i8** %28, align 8
  store i8* null, i8** %28, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %42
  call void @_Z7sk_freePv(i8* nonnull %43) #15
  br label %46

46:                                               ; preds = %31, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %15) #15
  br label %47

47:                                               ; preds = %46, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkTextBlob15MakeFromRSXformEPKvmPK9SkRSXformRK6SkFont14SkTextEncoding(%class.sk_sp.12* noalias nocapture sret, i8*, i64, %struct.SkRSXform* nocapture readonly, %class.SkFont* dereferenceable(24), i32) local_unnamed_addr #10 align 2 {
  %7 = alloca %class.sk_sp.12, align 8
  %8 = alloca %class.SkTextBlobBuilder, align 8
  %9 = tail call i32 @_ZNK6SkFont12textToGlyphsEPKvm14SkTextEncodingPti(%class.SkFont* %4, i8* %1, i64 %2, i32 %5, i16* null, i32 0) #15
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %0, i64 0, i32 0
  store %class.SkTextBlob* null, %class.SkTextBlob** %12, align 8
  br label %45

13:                                               ; preds = %6
  %14 = bitcast %class.SkTextBlobBuilder* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %14) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 bitcast ({ %class.SkAutoTMalloc, i64, i64, %struct.SkRect, i32, i8, [3 x i8], i64, %"struct.SkTextBlobBuilder::RunBuffer" }* @__const._ZN10SkTextBlob15MakeFromRSXformEPKvmPK9SkRSXformRK6SkFont14SkTextEncoding.builder to i8*), i64 88, i1 false)
  %15 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %8, i64 0, i32 6
  store i64 0, i64* %15, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 45, i1 false) #15
  call void @_ZN17SkTextBlobBuilder13allocInternalERK6SkFontN10SkTextBlob16GlyphPositioningEii7SkPointPK6SkRect(%class.SkTextBlobBuilder* nonnull %8, %class.SkFont* dereferenceable(24) %4, i8 zeroext 3, i32 %9, i32 0, <2 x float> zeroinitializer, %struct.SkRect* null) #15
  %16 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %8, i64 0, i32 7, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %8, i64 0, i32 7, i32 1
  %19 = bitcast float** %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = call i32 @_ZNK6SkFont12textToGlyphsEPKvm14SkTextEncodingPti(%class.SkFont* %4, i8* %1, i64 %2, i32 %5, i16* %17, i32 %9) #15
  %22 = bitcast %struct.SkRSXform* %3 to i8*
  %23 = sext i32 %9 to i64
  %24 = shl nsw i64 %23, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 4 %22, i64 %24, i1 false)
  call void @_ZN17SkTextBlobBuilder4makeEv(%class.sk_sp.12* sret %0, %class.SkTextBlobBuilder* nonnull %8)
  %25 = bitcast %class.sk_sp.12* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  %26 = getelementptr inbounds %class.SkTextBlobBuilder, %class.SkTextBlobBuilder* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %13
  store i8* null, i8** %26, align 8
  br label %44

30:                                               ; preds = %13
  call void @_ZN17SkTextBlobBuilder4makeEv(%class.sk_sp.12* nonnull sret %7, %class.SkTextBlobBuilder* nonnull %8) #15
  %31 = getelementptr inbounds %class.sk_sp.12, %class.sk_sp.12* %7, i64 0, i32 0
  %32 = load %class.SkTextBlob*, %class.SkTextBlob** %31, align 8
  %33 = icmp eq %class.SkTextBlob* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  call void @_ZN10SkTextBlobD2Ev(%class.SkTextBlob* nonnull %32) #15
  %39 = bitcast %class.SkTextBlob* %32 to i8*
  call void @_Z7sk_freePv(i8* nonnull %39) #15
  br label %40

40:                                               ; preds = %38, %34, %30
  %41 = load i8*, i8** %26, align 8
  store i8* null, i8** %26, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %40
  call void @_Z7sk_freePv(i8* nonnull %41) #15
  br label %44

44:                                               ; preds = %29, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %14) #15
  br label %45

45:                                               ; preds = %44, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10SkTextBlob9serializeERK13SkSerialProcs(%class.sk_sp.22* noalias sret, %class.SkTextBlob*, %struct.SkSerialProcs* nocapture readonly dereferenceable(48)) local_unnamed_addr #5 align 2 {
  %4 = alloca %class.SkBinaryWriteBuffer, align 8
  %5 = bitcast %class.SkBinaryWriteBuffer* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 128, i1 false)
  call void @_ZN19SkBinaryWriteBufferC1Ev(%class.SkBinaryWriteBuffer* nonnull %4) #15
  %6 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %4, i64 0, i32 0
  %7 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %4, i64 0, i32 0, i32 1
  %8 = bitcast %struct.SkSerialProcs* %7 to i8*
  %9 = bitcast %struct.SkSerialProcs* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 48, i1 false) #15
  call void @_ZN14SkTextBlobPriv7FlattenERK10SkTextBlobR13SkWriteBuffer(%class.SkTextBlob* dereferenceable(28) %1, %class.SkWriteBuffer* nonnull dereferenceable(56) %6)
  %10 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %4, i64 0, i32 3, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %class.sk_sp.22, %class.sk_sp.22* %0, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %12, align 8
  call void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.22* sret %0, i64 %11) #15
  %13 = load %class.SkData*, %class.SkData** %12, align 8
  %14 = getelementptr inbounds %class.SkData, %class.SkData* %13, i64 0, i32 3
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %4, i64 0, i32 3, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = load i64, i64* %10, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %17, i64 %18, i1 false) #15
  call void @_ZN19SkBinaryWriteBufferD1Ev(%class.SkBinaryWriteBuffer* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #15
  ret void
}

declare void @_ZN19SkBinaryWriteBufferC1Ev(%class.SkBinaryWriteBuffer*) unnamed_addr #6

declare void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.22* sret, i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN19SkBinaryWriteBufferD1Ev(%class.SkBinaryWriteBuffer*) unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkTextBlob11DeserializeEPKvmRK15SkDeserialProcs(%class.sk_sp.12* noalias nocapture sret, i8*, i64, %struct.SkDeserialProcs* dereferenceable(48)) local_unnamed_addr #5 align 2 {
  %5 = alloca %class.SkReadBuffer, align 8
  %6 = bitcast %class.SkReadBuffer* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %6) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 136, i1 false)
  %7 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %5, i64 0, i32 6
  store %class.sk_sp* null, %class.sk_sp** %7, align 8
  %8 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %5, i64 0, i32 7
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %5, i64 0, i32 9
  store void (%class.sk_sp.31*, %class.SkReadBuffer*)** null, void (%class.sk_sp.31*, %class.SkReadBuffer*)*** %9, align 8
  %10 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %5, i64 0, i32 10
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %5, i64 0, i32 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 44, i1 false) #15
  %12 = bitcast %struct.SkDeserialProcs* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 49, i1 false) #15
  call void @_ZN12SkReadBuffer9setMemoryEPKvm(%class.SkReadBuffer* nonnull %5, i8* %1, i64 %2) #15
  call void @_ZN12SkReadBuffer16setDeserialProcsERK15SkDeserialProcs(%class.SkReadBuffer* nonnull %5, %struct.SkDeserialProcs* dereferenceable(48) %3) #15
  call void @_ZN14SkTextBlobPriv14MakeFromBufferER12SkReadBuffer(%class.sk_sp.12* sret %0, %class.SkReadBuffer* nonnull dereferenceable(136) %5)
  %13 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %5, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"** %13, align 8
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"** %13, align 8
  %15 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %4
  %17 = bitcast %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %14 to i8*
  call void @_ZdaPv(i8* %17) #17
  br label %18

18:                                               ; preds = %4, %16
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %6) #15
  ret void
}

declare void @_ZN12SkReadBuffer16setDeserialProcsERK15SkDeserialProcs(%class.SkReadBuffer*, %struct.SkDeserialProcs* dereferenceable(48)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK10SkTextBlob9serializeERK13SkSerialProcsPvm(%class.SkTextBlob*, %struct.SkSerialProcs* nocapture readonly dereferenceable(48), i8*, i64) local_unnamed_addr #5 align 2 {
  %5 = alloca %class.SkBinaryWriteBuffer, align 8
  %6 = bitcast %class.SkBinaryWriteBuffer* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 128, i1 false)
  call void @_ZN19SkBinaryWriteBufferC1EPvm(%class.SkBinaryWriteBuffer* nonnull %5, i8* %2, i64 %3) #15
  %7 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %5, i64 0, i32 0
  %8 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %5, i64 0, i32 0, i32 1
  %9 = bitcast %struct.SkSerialProcs* %8 to i8*
  %10 = bitcast %struct.SkSerialProcs* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 48, i1 false) #15
  call void @_ZN14SkTextBlobPriv7FlattenERK10SkTextBlobR13SkWriteBuffer(%class.SkTextBlob* dereferenceable(28) %0, %class.SkWriteBuffer* nonnull dereferenceable(56) %7)
  %11 = call zeroext i1 @_ZNK19SkBinaryWriteBuffer19usingInitialStorageEv(%class.SkBinaryWriteBuffer* nonnull %5) #15
  %12 = getelementptr inbounds %class.SkBinaryWriteBuffer, %class.SkBinaryWriteBuffer* %5, i64 0, i32 3, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = select i1 %11, i64 %13, i64 0
  call void @_ZN19SkBinaryWriteBufferD1Ev(%class.SkBinaryWriteBuffer* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #15
  ret i64 %14
}

declare void @_ZN19SkBinaryWriteBufferC1EPvm(%class.SkBinaryWriteBuffer*, i8*, i64) unnamed_addr #6

declare zeroext i1 @_ZNK19SkBinaryWriteBuffer19usingInitialStorageEv(%class.SkBinaryWriteBuffer*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10SkTextBlob13getInterceptsEPKfPfPK7SkPaint(%class.SkTextBlob*, float* nocapture readonly, float*, %class.SkPaint*) local_unnamed_addr #10 align 2 {
  %5 = alloca %class.SkTLazy, align 8
  %6 = alloca %class.SkGlyphRunBuilder, align 8
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %8) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 72, i1 false)
  %9 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %5, i64 0, i32 1
  store %class.SkPaint* null, %class.SkPaint** %9, align 8
  %10 = icmp eq %class.SkPaint* %3, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %4
  %12 = bitcast %class.SkTLazy* %5 to %class.SkPaint*
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %12) #15
  %13 = bitcast %class.SkPaint** %9 to %class.SkTLazy**
  store %class.SkTLazy* %5, %class.SkTLazy** %13, align 8
  br label %14

14:                                               ; preds = %11, %4
  %15 = phi %class.SkPaint* [ %12, %11 ], [ %3, %4 ]
  %16 = bitcast %class.SkGlyphRunBuilder* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %16) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 bitcast ({ i32, [4 x i8], %class.SkAutoTMalloc.45, i32, [4 x i8], %class.SkAutoTMalloc.45, %"class.std::__1::vector", %class.SkGlyphRunList, %"class.std::__1::vector.56" }* @__const._ZNK10SkTextBlob13getInterceptsEPKfPfPK7SkPaint.builder to i8*), i64 128, i1 false)
  %17 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 0
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 1
  %19 = bitcast %class.SkAutoTMalloc.45* %18 to i64*
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 2
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 3
  %22 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 5
  %23 = bitcast %class.SkAutoTMalloc.45* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #15
  call void @_ZN14SkGlyphRunListC1Ev(%class.SkGlyphRunList* %22) #15
  %24 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 6
  %25 = bitcast %"class.std::__1::vector.56"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #15
  %26 = call dereferenceable(48) %class.SkGlyphRunList* @_ZN17SkGlyphRunBuilder18blobToGlyphRunListERK10SkTextBlob7SkPoint(%class.SkGlyphRunBuilder* nonnull %6, %class.SkTextBlob* dereferenceable(28) %0, <2 x float> zeroinitializer) #15
  %27 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %26, i64 0, i32 0, i32 0
  %28 = load %class.SkGlyphRun*, %class.SkGlyphRun** %27, align 8
  %29 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %26, i64 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #15
  store i32 0, i32* %7, align 4
  %32 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %28, i64 %30
  %33 = icmp eq i64 %30, 0
  br i1 %33, label %34, label %95

34:                                               ; preds = %103, %14
  %35 = phi i32 [ 0, %14 ], [ %104, %103 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #15
  %36 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 6, i32 0, i32 0
  %37 = load i16*, i16** %36, align 8
  %38 = icmp eq i16* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %34
  %40 = ptrtoint i16* %37 to i64
  %41 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 6, i32 0, i32 1
  %42 = bitcast i16** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = bitcast i16* %37 to i8*
  call void @_ZdlPv(i8* %43) #17
  br label %44

44:                                               ; preds = %39, %34
  %45 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 4
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %45, i64 0, i32 0, i32 0
  %47 = load %class.SkGlyphRun*, %class.SkGlyphRun** %46, align 8
  %48 = icmp eq %class.SkGlyphRun* %47, null
  br i1 %48, label %77, label %49

49:                                               ; preds = %44
  %50 = bitcast %class.SkGlyphRun* %47 to i8*
  %51 = getelementptr inbounds %class.SkGlyphRunBuilder, %class.SkGlyphRunBuilder* %6, i64 0, i32 4, i32 0, i32 1
  %52 = load %class.SkGlyphRun*, %class.SkGlyphRun** %51, align 8
  %53 = icmp eq %class.SkGlyphRun* %52, %47
  br i1 %53, label %75, label %54

54:                                               ; preds = %49, %70
  %55 = phi %class.SkGlyphRun* [ %56, %70 ], [ %52, %49 ]
  %56 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %55, i64 -1
  %57 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %55, i64 -1, i32 4, i32 0, i32 0
  %58 = load %class.SkTypeface*, %class.SkTypeface** %57, align 8
  %59 = icmp eq %class.SkTypeface* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %58, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = bitcast %class.SkTypeface* %58 to %class.SkRefCntBase*
  %66 = bitcast %class.SkTypeface* %58 to void (%class.SkRefCntBase*)***
  %67 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, i64 2
  %69 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, align 8
  call void %69(%class.SkRefCntBase* nonnull %65) #15
  br label %70

70:                                               ; preds = %64, %60, %54
  %71 = icmp eq %class.SkGlyphRun* %56, %47
  br i1 %71, label %72, label %54

72:                                               ; preds = %70
  %73 = bitcast %"class.std::__1::vector"* %45 to i8**
  %74 = load i8*, i8** %73, align 8
  br label %75

75:                                               ; preds = %72, %49
  %76 = phi i8* [ %74, %72 ], [ %50, %49 ]
  store %class.SkGlyphRun* %47, %class.SkGlyphRun** %51, align 8
  call void @_ZdlPv(i8* %76) #17
  br label %77

77:                                               ; preds = %75, %44
  %78 = getelementptr inbounds %class.SkAutoTMalloc.45, %class.SkAutoTMalloc.45* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = bitcast %class.SkAutoTMalloc.45* %21 to i64*
  %80 = load i64, i64* %79, align 8
  store %struct.SkPoint* null, %struct.SkPoint** %78, align 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = inttoptr i64 %80 to i8*
  call void @_Z7sk_freePv(i8* %83) #15
  br label %84

84:                                               ; preds = %82, %77
  %85 = getelementptr inbounds %class.SkAutoTMalloc.45, %class.SkAutoTMalloc.45* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i64, i64* %19, align 8
  store %struct.SkPoint* null, %struct.SkPoint** %85, align 8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  %89 = inttoptr i64 %86 to i8*
  call void @_Z7sk_freePv(i8* %89) #15
  br label %90

90:                                               ; preds = %84, %88
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %16) #15
  %91 = load %class.SkPaint*, %class.SkPaint** %9, align 8
  %92 = icmp eq %class.SkPaint* %91, null
  br i1 %92, label %94, label %93

93:                                               ; preds = %90
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %91) #15
  store %class.SkPaint* null, %class.SkPaint** %9, align 8
  br label %94

94:                                               ; preds = %90, %93
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %8) #15
  ret i32 %35

95:                                               ; preds = %14, %103
  %96 = phi i32 [ %104, %103 ], [ 0, %14 ]
  %97 = phi %class.SkGlyphRun* [ %105, %103 ], [ %28, %14 ]
  %98 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %97, i64 0, i32 3, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %95
  %102 = call fastcc i32 @_ZN12_GLOBAL__N_124get_glyph_run_interceptsERK10SkGlyphRunRK7SkPaintPKfPfPi(%class.SkGlyphRun* dereferenceable(96) %97, %class.SkPaint* dereferenceable(72) %15, float* %1, float* %2, i32* nonnull %7)
  store i32 %102, i32* %7, align 4
  br label %103

103:                                              ; preds = %101, %95
  %104 = phi i32 [ %102, %101 ], [ %96, %95 ]
  %105 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %97, i64 1
  %106 = icmp eq %class.SkGlyphRun* %105, %32
  br i1 %106, label %34, label %95
}

declare dereferenceable(48) %class.SkGlyphRunList* @_ZN17SkGlyphRunBuilder18blobToGlyphRunListERK10SkTextBlob7SkPoint(%class.SkGlyphRunBuilder*, %class.SkTextBlob* dereferenceable(28), <2 x float>) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN12_GLOBAL__N_124get_glyph_run_interceptsERK10SkGlyphRunRK7SkPaintPKfPfPi(%class.SkGlyphRun* nocapture readonly dereferenceable(96), %class.SkPaint* dereferenceable(72), float* nocapture readonly, float*, i32*) unnamed_addr #5 {
  %6 = alloca %class.SkPaint, align 8
  %7 = alloca %class.SkFont, align 8
  %8 = alloca %class.sk_sp.15, align 8
  %9 = alloca %class.sk_sp.13, align 8
  %10 = alloca %class.SkStrikeSpec, align 8
  %11 = alloca %class.SkBulkGlyphMetricsAndPaths, align 8
  %12 = alloca [2 x float], align 4
  %13 = bitcast %class.SkPaint* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %13) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast (%class.SkPaint* @__const._ZN12_GLOBAL__N_124get_glyph_run_interceptsERK10SkGlyphRunRK7SkPaintPKfPfPi.interceptPaint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %6, %class.SkPaint* dereferenceable(72) %1) #15
  %14 = bitcast %class.SkFont* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #15
  %15 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %15, align 8
  %16 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %16, align 8
  %17 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %17, align 4
  %18 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 3
  store float 0xFFFFFFFFE0000000, float* %18, align 8
  %19 = getelementptr inbounds %class.SkFont, %class.SkFont* %7, i64 0, i32 4
  %20 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 4, i32 0, i32 0
  %21 = bitcast i8* %19 to i32*
  store i32 -1431655766, i32* %21, align 4
  %22 = load %class.SkTypeface*, %class.SkTypeface** %20, align 8
  %23 = icmp eq %class.SkTypeface* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %5
  %25 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic
  br label %27

27:                                               ; preds = %5, %24
  store %class.SkTypeface* %22, %class.SkTypeface** %15, align 8
  %28 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 4, i32 1
  %29 = bitcast float* %16 to i8*
  %30 = bitcast float* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 15, i1 false) #15
  %31 = getelementptr inbounds %class.sk_sp.15, %class.sk_sp.15* %8, i64 0, i32 0
  store %class.SkMaskFilter* null, %class.SkMaskFilter** %31, align 8
  call void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint* nonnull %6, %class.sk_sp.15* nonnull %8) #15
  %32 = load %class.SkMaskFilter*, %class.SkMaskFilter** %31, align 8
  %33 = icmp eq %class.SkMaskFilter* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %class.SkMaskFilter* %32 to %class.SkRefCntBase*
  %40 = bitcast %class.SkMaskFilter* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  call void %43(%class.SkRefCntBase* nonnull %39) #15
  br label %44

44:                                               ; preds = %27, %34, %38
  %45 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %6, i64 0, i32 0, i32 0
  %46 = load %class.SkPathEffect*, %class.SkPathEffect** %45, align 8
  %47 = icmp eq %class.SkPathEffect* %46, null
  br i1 %47, label %48, label %61

48:                                               ; preds = %44
  call void @_ZN6SkFont10setHintingE13SkFontHinting(%class.SkFont* nonnull %7, i32 0) #15
  call void @_ZN6SkFont11setSubpixelEb(%class.SkFont* nonnull %7, i1 zeroext true) #15
  %49 = load float, float* %16, align 8
  %50 = fmul float %49, 1.562500e-02
  call void @_ZN6SkFont7setSizeEf(%class.SkFont* nonnull %7, float 6.400000e+01) #15
  %51 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %6, i64 0, i32 6
  %52 = load float, float* %51, align 8
  %53 = fcmp ogt float %52, 0.000000e+00
  br i1 %53, label %54, label %61

54:                                               ; preds = %48
  %55 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %6, i64 0, i32 8, i32 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, 192
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %54
  %60 = fdiv float %52, %50
  call void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint* nonnull %6, float %60) #15
  br label %61

61:                                               ; preds = %54, %48, %59, %44
  %62 = phi float [ %50, %59 ], [ %50, %54 ], [ %50, %48 ], [ 1.000000e+00, %44 ]
  call void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint* nonnull %6, i8 zeroext 0) #15
  %63 = getelementptr inbounds %class.sk_sp.13, %class.sk_sp.13* %9, i64 0, i32 0
  store %class.SkPathEffect* null, %class.SkPathEffect** %63, align 8
  call void @_ZN7SkPaint13setPathEffectE5sk_spI12SkPathEffectE(%class.SkPaint* nonnull %6, %class.sk_sp.13* nonnull %9) #15
  %64 = load %class.SkPathEffect*, %class.SkPathEffect** %63, align 8
  %65 = icmp eq %class.SkPathEffect* %64, null
  br i1 %65, label %76, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %64, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 -1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %76

70:                                               ; preds = %66
  %71 = bitcast %class.SkPathEffect* %64 to %class.SkRefCntBase*
  %72 = bitcast %class.SkPathEffect* %64 to void (%class.SkRefCntBase*)***
  %73 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %72, align 8
  %74 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, i64 2
  %75 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, align 8
  call void %75(%class.SkRefCntBase* nonnull %71) #15
  br label %76

76:                                               ; preds = %61, %66, %70
  %77 = bitcast %class.SkStrikeSpec* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %77) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 bitcast (%class.SkStrikeSpec* @__const._ZN12_GLOBAL__N_124get_glyph_run_interceptsERK10SkGlyphRunRK7SkPaintPKfPfPi.strikeSpec to i8*), i64 160, i1 false)
  call void @_ZN12SkStrikeSpec16MakeWithNoDeviceERK6SkFontPK7SkPaint(%class.SkStrikeSpec* nonnull sret %10, %class.SkFont* nonnull dereferenceable(24) %7, %class.SkPaint* nonnull %6) #15
  %78 = bitcast %class.SkBulkGlyphMetricsAndPaths* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %78) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 184, i1 false)
  call void @_ZN26SkBulkGlyphMetricsAndPathsC1ERK12SkStrikeSpec(%class.SkBulkGlyphMetricsAndPaths* nonnull %11, %class.SkStrikeSpec* nonnull dereferenceable(160) %10) #15
  %79 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %80 = load %struct.SkPoint*, %struct.SkPoint** %79, align 8
  %81 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i16*, i16** %83, align 8
  %85 = call { %class.SkGlyph**, i64 } @_ZN26SkBulkGlyphMetricsAndPaths6glyphsE6SkSpanIKtE(%class.SkBulkGlyphMetricsAndPaths* nonnull %11, i16* %84, i64 %82) #15
  %86 = extractvalue { %class.SkGlyph**, i64 } %85, 0
  %87 = extractvalue { %class.SkGlyph**, i64 } %85, 1
  %88 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %86, i64 %87
  %89 = icmp eq i64 %87, 0
  br i1 %89, label %95, label %90

90:                                               ; preds = %76
  %91 = bitcast [2 x float]* %12 to i8*
  %92 = getelementptr inbounds [2 x float], [2 x float]* %12, i64 0, i64 0
  %93 = getelementptr inbounds [2 x float], [2 x float]* %12, i64 0, i64 1
  %94 = getelementptr inbounds float, float* %2, i64 1
  br label %185

95:                                               ; preds = %203, %76
  %96 = load i32, i32* %4, align 4
  %97 = getelementptr inbounds %class.SkBulkGlyphMetricsAndPaths, %class.SkBulkGlyphMetricsAndPaths* %11, i64 0, i32 1, i32 0
  %98 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %97, align 8
  %99 = icmp eq %"class.SkStrikeCache::Strike"* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %98, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 -1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %110

104:                                              ; preds = %100
  %105 = bitcast %"class.SkStrikeCache::Strike"* %98 to %class.SkRefCntBase*
  %106 = bitcast %"class.SkStrikeCache::Strike"* %98 to void (%class.SkRefCntBase*)***
  %107 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %106, align 8
  %108 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, i64 2
  %109 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %108, align 8
  call void %109(%class.SkRefCntBase* nonnull %105) #15
  br label %110

110:                                              ; preds = %104, %100, %95
  %111 = getelementptr inbounds %class.SkBulkGlyphMetricsAndPaths, %class.SkBulkGlyphMetricsAndPaths* %11, i64 0, i32 0, i32 1
  %112 = load %class.SkGlyph**, %class.SkGlyph*** %111, align 8
  %113 = getelementptr inbounds %class.SkBulkGlyphMetricsAndPaths, %class.SkBulkGlyphMetricsAndPaths* %11, i64 0, i32 0, i32 0
  %114 = load i32, i32* %113, align 8
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %112, i64 %115
  br label %117

117:                                              ; preds = %117, %110
  %118 = phi %class.SkGlyph** [ %116, %110 ], [ %120, %117 ]
  %119 = icmp ugt %class.SkGlyph** %118, %112
  %120 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %118, i64 -1
  br i1 %119, label %117, label %121

121:                                              ; preds = %117
  %122 = bitcast %class.SkGlyph** %112 to i8*
  %123 = icmp eq i32 %114, 0
  br i1 %123, label %128, label %124

124:                                              ; preds = %121
  %125 = icmp sgt i32 %114, 20
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @_Z7sk_freePv(i8* %122) #15
  br label %127

127:                                              ; preds = %126, %124
  store %class.SkGlyph** null, %class.SkGlyph*** %111, align 8
  store i32 0, i32* %113, align 8
  br label %128

128:                                              ; preds = %121, %127
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %78) #15
  %129 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %10, i64 0, i32 3, i32 0
  %130 = load %class.SkTypeface*, %class.SkTypeface** %129, align 8
  %131 = icmp eq %class.SkTypeface* %130, null
  br i1 %131, label %142, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %130, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = atomicrmw add i32* %133, i32 -1 acq_rel
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %136, label %142

136:                                              ; preds = %132
  %137 = bitcast %class.SkTypeface* %130 to %class.SkRefCntBase*
  %138 = bitcast %class.SkTypeface* %130 to void (%class.SkRefCntBase*)***
  %139 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %138, align 8
  %140 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %139, i64 2
  %141 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %140, align 8
  call void %141(%class.SkRefCntBase* nonnull %137) #15
  br label %142

142:                                              ; preds = %136, %132, %128
  %143 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %10, i64 0, i32 2, i32 0
  %144 = load %class.SkPathEffect*, %class.SkPathEffect** %143, align 8
  %145 = icmp eq %class.SkPathEffect* %144, null
  br i1 %145, label %156, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %class.SkPathEffect, %class.SkPathEffect* %144, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = atomicrmw add i32* %147, i32 -1 acq_rel
  %149 = icmp eq i32 %148, 1
  br i1 %149, label %150, label %156

150:                                              ; preds = %146
  %151 = bitcast %class.SkPathEffect* %144 to %class.SkRefCntBase*
  %152 = bitcast %class.SkPathEffect* %144 to void (%class.SkRefCntBase*)***
  %153 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %152, align 8
  %154 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, i64 2
  %155 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %154, align 8
  call void %155(%class.SkRefCntBase* nonnull %151) #15
  br label %156

156:                                              ; preds = %150, %146, %142
  %157 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %10, i64 0, i32 1, i32 0
  %158 = load %class.SkMaskFilter*, %class.SkMaskFilter** %157, align 8
  %159 = icmp eq %class.SkMaskFilter* %158, null
  br i1 %159, label %170, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %158, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = atomicrmw add i32* %161, i32 -1 acq_rel
  %163 = icmp eq i32 %162, 1
  br i1 %163, label %164, label %170

164:                                              ; preds = %160
  %165 = bitcast %class.SkMaskFilter* %158 to %class.SkRefCntBase*
  %166 = bitcast %class.SkMaskFilter* %158 to void (%class.SkRefCntBase*)***
  %167 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %166, align 8
  %168 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %167, i64 2
  %169 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %168, align 8
  call void %169(%class.SkRefCntBase* nonnull %165) #15
  br label %170

170:                                              ; preds = %156, %160, %164
  %171 = getelementptr inbounds %class.SkStrikeSpec, %class.SkStrikeSpec* %10, i64 0, i32 0
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %171) #15
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %77) #15
  %172 = load %class.SkTypeface*, %class.SkTypeface** %15, align 8
  %173 = icmp eq %class.SkTypeface* %172, null
  br i1 %173, label %184, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %172, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = atomicrmw add i32* %175, i32 -1 acq_rel
  %177 = icmp eq i32 %176, 1
  br i1 %177, label %178, label %184

178:                                              ; preds = %174
  %179 = bitcast %class.SkTypeface* %172 to %class.SkRefCntBase*
  %180 = bitcast %class.SkTypeface* %172 to void (%class.SkRefCntBase*)***
  %181 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %180, align 8
  %182 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %181, i64 2
  %183 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %182, align 8
  call void %183(%class.SkRefCntBase* nonnull %179) #15
  br label %184

184:                                              ; preds = %170, %174, %178
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %13) #15
  ret i32 %96

185:                                              ; preds = %90, %203
  %186 = phi %class.SkGlyph** [ %86, %90 ], [ %204, %203 ]
  %187 = phi %struct.SkPoint* [ %80, %90 ], [ %189, %203 ]
  %188 = load %class.SkGlyph*, %class.SkGlyph** %186, align 8
  %189 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %187, i64 1
  %190 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %187, i64 0, i32 0
  %191 = load float, float* %190, align 4
  %192 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %187, i64 0, i32 1
  %193 = load float, float* %192, align 4
  %194 = call %class.SkPath* @_ZNK7SkGlyph4pathEv(%class.SkGlyph* %188) #15
  %195 = icmp eq %class.SkPath* %194, null
  br i1 %195, label %203, label %196

196:                                              ; preds = %185
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #15
  %197 = load float, float* %2, align 4
  %198 = fsub float %197, %193
  %199 = fdiv float %198, %62
  store float %199, float* %92, align 4
  %200 = load float, float* %94, align 4
  %201 = fsub float %200, %193
  %202 = fdiv float %201, %62
  store float %202, float* %93, align 4
  call void @_ZN26SkBulkGlyphMetricsAndPaths14findInterceptsEPKfffPK7SkGlyphPfPi(%class.SkBulkGlyphMetricsAndPaths* nonnull %11, float* nonnull %92, float %62, float %191, %class.SkGlyph* %188, float* %3, i32* %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #15
  br label %203

203:                                              ; preds = %185, %196
  %204 = getelementptr inbounds %class.SkGlyph*, %class.SkGlyph** %186, i64 1
  %205 = icmp eq %class.SkGlyph** %204, %88
  br i1 %205, label %95, label %185
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkFont13getInterceptsEPKtiPK7SkPointffPK7SkPaint(%"class.std::__1::vector.63"* noalias nocapture sret, %class.SkFont*, i16*, i32, %struct.SkPoint*, float, float, %class.SkPaint*) local_unnamed_addr #5 align 2 {
  %9 = alloca %class.SkPaint, align 8
  %10 = alloca [2 x float], align 4
  %11 = alloca %class.SkGlyphRun, align 8
  %12 = alloca %class.SkSpan, align 8
  %13 = alloca %class.SkSpan.50, align 8
  %14 = alloca %class.SkSpan.51, align 8
  %15 = alloca %"class.std::__1::vector.63", align 8
  %16 = alloca i32, align 4
  %17 = icmp slt i32 %3, 1
  br i1 %17, label %18, label %20

18:                                               ; preds = %8
  %19 = bitcast %"class.std::__1::vector.63"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #15
  br label %85

20:                                               ; preds = %8
  %21 = bitcast %class.SkPaint* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 bitcast (%class.SkPaint* @__const._ZN12_GLOBAL__N_124get_glyph_run_interceptsERK10SkGlyphRunRK7SkPaintPKfPfPi.interceptPaint to i8*), i64 72, i1 false)
  %22 = icmp eq %class.SkPaint* %7, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %9, %class.SkPaint* nonnull dereferenceable(72) %7) #15
  br label %25

24:                                               ; preds = %20
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %9) #15
  br label %25

25:                                               ; preds = %24, %23
  %26 = bitcast [2 x float]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #15
  %27 = getelementptr inbounds [2 x float], [2 x float]* %10, i64 0, i64 0
  %28 = getelementptr inbounds [2 x float], [2 x float]* %10, i64 0, i64 1
  store float %5, float* %27, align 4
  store float %6, float* %28, align 4
  %29 = bitcast %class.SkGlyphRun* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %29) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 bitcast (%class.SkGlyphRun* @__const._ZNK6SkFont13getInterceptsEPKtiPK7SkPointffPK7SkPaint.run to i8*), i64 96, i1 false)
  %30 = sext i32 %3 to i64
  %31 = bitcast %class.SkSpan* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 16, i1 false)
  %32 = bitcast %class.SkSpan.50* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 16, i1 false)
  %33 = bitcast %class.SkSpan.51* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 16, i1 false)
  call void @_ZN10SkGlyphRunC1ERK6SkFont6SkSpanIK7SkPointES3_IKtES3_IKcES3_IKjES6_(%class.SkGlyphRun* nonnull %11, %class.SkFont* dereferenceable(24) %1, %struct.SkPoint* %4, i64 %30, i16* %2, i64 %30, %class.SkSpan* nonnull byval(%class.SkSpan) align 8 %12, %class.SkSpan.50* nonnull byval(%class.SkSpan.50) align 8 %13, %class.SkSpan.51* nonnull byval(%class.SkSpan.51) align 8 %14) #15
  %34 = bitcast %"class.std::__1::vector.63"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #15
  %35 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %15, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 24, i1 false) #15
  %37 = bitcast float** %35 to i64*
  %38 = bitcast %"class.std::__1::vector.63"* %15 to i64*
  %39 = shl nsw i32 %3, 1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %15, i64 0, i32 0, i32 0
  call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.63"* nonnull %15, i64 %40) #15
  %42 = load float*, float** %41, align 8
  %43 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #15
  store i32 0, i32* %16, align 4
  %44 = call fastcc i32 @_ZN12_GLOBAL__N_124get_glyph_run_interceptsERK10SkGlyphRunRK7SkPaintPKfPfPi(%class.SkGlyphRun* nonnull dereferenceable(96) %11, %class.SkPaint* nonnull dereferenceable(72) %9, float* nonnull %27, float* %42, i32* nonnull %16)
  store i32 %44, i32* %16, align 4
  %45 = sext i32 %44 to i64
  %46 = load i64, i64* %37, align 8
  %47 = load i64, i64* %38, align 8
  %48 = sub i64 %46, %47
  %49 = ashr exact i64 %48, 2
  %50 = icmp ult i64 %49, %45
  %51 = inttoptr i64 %47 to float*
  br i1 %50, label %52, label %56

52:                                               ; preds = %25
  %53 = sub nsw i64 %45, %49
  call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.63"* nonnull %15, i64 %53) #15
  %54 = load i64, i64* %38, align 8
  %55 = load i64, i64* %37, align 8
  br label %61

56:                                               ; preds = %25
  %57 = icmp ugt i64 %49, %45
  br i1 %57, label %58, label %61

58:                                               ; preds = %56
  %59 = getelementptr inbounds float, float* %51, i64 %45
  store float* %59, float** %35, align 8
  %60 = ptrtoint float* %59 to i64
  br label %61

61:                                               ; preds = %52, %56, %58
  %62 = phi i64 [ %55, %52 ], [ %46, %56 ], [ %60, %58 ]
  %63 = phi i64 [ %54, %52 ], [ %47, %56 ], [ %47, %58 ]
  %64 = bitcast %"class.std::__1::vector.63"* %0 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 1
  %66 = bitcast float** %65 to i64*
  store i64 %62, i64* %66, align 8
  %67 = bitcast float** %36 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %70 = bitcast float** %69 to i64*
  store i64 %68, i64* %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #15
  %71 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %11, i64 0, i32 4, i32 0, i32 0
  %72 = load %class.SkTypeface*, %class.SkTypeface** %71, align 8
  %73 = bitcast %class.SkTypeface* %72 to %class.SkRefCntBase*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #15
  %74 = icmp eq %class.SkTypeface* %72, null
  br i1 %74, label %84, label %75

75:                                               ; preds = %61
  %76 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %72, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 -1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %84

79:                                               ; preds = %75
  %80 = bitcast %class.SkTypeface* %72 to void (%class.SkRefCntBase*)***
  %81 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %80, align 8
  %82 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %81, i64 2
  %83 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, align 8
  call void %83(%class.SkRefCntBase* nonnull %73) #15
  br label %84

84:                                               ; preds = %61, %75, %79
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %29) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #15
  br label %85

85:                                               ; preds = %84, %18
  ret void
}

declare void @_ZN7SkPaintC1ERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #6

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #6

declare void @_ZN10SkGlyphRunC1ERK6SkFont6SkSpanIK7SkPointES3_IKtES3_IKcES3_IKjES6_(%class.SkGlyphRun*, %class.SkFont* dereferenceable(24), %struct.SkPoint*, i64, i16*, i64, %class.SkSpan* byval(%class.SkSpan) align 8, %class.SkSpan.50* byval(%class.SkSpan.50) align 8, %class.SkSpan.51* byval(%class.SkSpan.51) align 8) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #11

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10SkTextBlob4IterC2ERKS_(%"class.SkTextBlob::Iter"* nocapture, %class.SkTextBlob* dereferenceable(28)) unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %class.SkTextBlob, %class.SkTextBlob* %1, i64 1
  %4 = ptrtoint %class.SkTextBlob* %3 to i64
  %5 = add i64 %4, 7
  %6 = and i64 %5, -8
  %7 = inttoptr i64 %6 to %"class.SkTextBlob::RunRecord"*
  %8 = getelementptr inbounds %"class.SkTextBlob::Iter", %"class.SkTextBlob::Iter"* %0, i64 0, i32 0
  store %"class.SkTextBlob::RunRecord"* %7, %"class.SkTextBlob::RunRecord"** %8, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkTextBlob4Iter4nextEPNS0_3RunE(%"class.SkTextBlob::Iter"* nocapture, %"struct.SkTextBlob::Iter::Run"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkTextBlob::Iter", %"class.SkTextBlob::Iter"* %0, i64 0, i32 0
  %4 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %3, align 8
  %5 = icmp eq %"class.SkTextBlob::RunRecord"* %4, null
  br i1 %5, label %177, label %6

6:                                                ; preds = %2
  %7 = icmp eq %"struct.SkTextBlob::Iter::Run"* %1, null
  br i1 %7, label %106, label %8

8:                                                ; preds = %6
  %9 = bitcast %"class.SkTextBlob::RunRecord"* %4 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"struct.SkTextBlob::Iter::Run"* %1 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %3, align 8
  %13 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"struct.SkTextBlob::Iter::Run", %"struct.SkTextBlob::Iter::Run"* %1, i64 0, i32 1
  store i32 %14, i32* %15, align 8
  %16 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %3, align 8
  %17 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %16, i64 1
  %18 = getelementptr inbounds %"struct.SkTextBlob::Iter::Run", %"struct.SkTextBlob::Iter::Run"* %1, i64 0, i32 2
  %19 = bitcast i16** %18 to %"class.SkTextBlob::RunRecord"**
  store %"class.SkTextBlob::RunRecord"* %17, %"class.SkTextBlob::RunRecord"** %19, align 8
  %20 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %3, align 8
  %21 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %20, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %45, label %25

25:                                               ; preds = %8
  %26 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %20, i64 1
  %27 = bitcast %"class.SkTextBlob::RunRecord"* %26 to i8*
  %28 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %20, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 1
  %32 = add nuw nsw i64 %31, 3
  %33 = and i64 %32, 17179869180
  %34 = getelementptr inbounds i8, i8* %27, i64 %33
  %35 = bitcast i8* %34 to float*
  %36 = and i32 %22, 3
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i64
  %41 = mul nuw nsw i64 %40, %30
  %42 = getelementptr inbounds float, float* %35, i64 %41
  %43 = getelementptr inbounds float, float* %42, i64 1
  %44 = bitcast float* %43 to i32*
  br label %45

45:                                               ; preds = %8, %25
  %46 = phi i32* [ %44, %25 ], [ null, %8 ]
  %47 = getelementptr inbounds %"struct.SkTextBlob::Iter::Run", %"struct.SkTextBlob::Iter::Run"* %1, i64 0, i32 3
  store i32* %46, i32** %47, align 8
  %48 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %3, align 8
  %49 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %48, i64 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, 8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %73, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %48, i64 1
  %55 = bitcast %"class.SkTextBlob::RunRecord"* %54 to i8*
  %56 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %48, i64 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = zext i32 %57 to i64
  %59 = shl nuw nsw i64 %58, 1
  %60 = add nuw nsw i64 %59, 3
  %61 = and i64 %60, 17179869180
  %62 = getelementptr inbounds i8, i8* %55, i64 %61
  %63 = bitcast i8* %62 to float*
  %64 = and i32 %50, 3
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %65
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = mul nuw nsw i64 %68, %58
  %70 = getelementptr inbounds float, float* %63, i64 %69
  %71 = bitcast float* %70 to i32*
  %72 = load i32, i32* %71, align 4
  br label %73

73:                                               ; preds = %45, %53
  %74 = phi i32 [ %72, %53 ], [ 0, %45 ]
  %75 = getelementptr inbounds %"struct.SkTextBlob::Iter::Run", %"struct.SkTextBlob::Iter::Run"* %1, i64 0, i32 4
  store i32 %74, i32* %75, align 8
  %76 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %3, align 8
  %77 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %76, i64 0, i32 3
  %78 = load i32, i32* %77, align 4
  %79 = and i32 %78, 8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %102, label %81

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %76, i64 1
  %83 = bitcast %"class.SkTextBlob::RunRecord"* %82 to i8*
  %84 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %76, i64 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = zext i32 %85 to i64
  %87 = shl nuw nsw i64 %86, 1
  %88 = add nuw nsw i64 %87, 3
  %89 = and i64 %88, 17179869180
  %90 = getelementptr inbounds i8, i8* %83, i64 %89
  %91 = bitcast i8* %90 to float*
  %92 = and i32 %78, 3
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i64
  %97 = mul nuw nsw i64 %96, %86
  %98 = getelementptr inbounds float, float* %91, i64 %97
  %99 = getelementptr inbounds float, float* %98, i64 1
  %100 = getelementptr inbounds float, float* %99, i64 %86
  %101 = bitcast float* %100 to i8*
  br label %102

102:                                              ; preds = %73, %81
  %103 = phi i8* [ %101, %81 ], [ null, %73 ]
  %104 = getelementptr inbounds %"struct.SkTextBlob::Iter::Run", %"struct.SkTextBlob::Iter::Run"* %1, i64 0, i32 5
  store i8* %103, i8** %104, align 8
  %105 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %3, align 8
  br label %106

106:                                              ; preds = %6, %102
  %107 = phi %"class.SkTextBlob::RunRecord"* [ %4, %6 ], [ %105, %102 ]
  %108 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %107, i64 0, i32 3
  %109 = load i32, i32* %108, align 4
  %110 = and i32 %109, 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %175

112:                                              ; preds = %106
  %113 = bitcast %"class.SkTextBlob::RunRecord"* %107 to i8*
  %114 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %107, i64 0, i32 1
  %115 = load i32, i32* %114, align 8
  %116 = and i32 %109, 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %127

118:                                              ; preds = %112
  %119 = and i32 %109, 3
  %120 = zext i32 %119 to i64
  %121 = zext i32 %115 to i64
  %122 = shl nuw nsw i64 %121, 1
  %123 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %120
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i64
  %126 = mul nuw nsw i64 %125, %121
  br label %145

127:                                              ; preds = %112
  %128 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %107, i64 1
  %129 = bitcast %"class.SkTextBlob::RunRecord"* %128 to i8*
  %130 = zext i32 %115 to i64
  %131 = shl nuw nsw i64 %130, 1
  %132 = add nuw nsw i64 %131, 3
  %133 = and i64 %132, 17179869180
  %134 = getelementptr inbounds i8, i8* %129, i64 %133
  %135 = bitcast i8* %134 to float*
  %136 = and i32 %109, 3
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %137
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i64
  %141 = mul nuw nsw i64 %140, %130
  %142 = getelementptr inbounds float, float* %135, i64 %141
  %143 = bitcast float* %142 to i32*
  %144 = load i32, i32* %143, align 4
  br label %145

145:                                              ; preds = %127, %118
  %146 = phi i64 [ %141, %127 ], [ %126, %118 ]
  %147 = phi i64 [ %131, %127 ], [ %122, %118 ]
  %148 = phi i64 [ %130, %127 ], [ %121, %118 ]
  %149 = phi i32 [ %144, %127 ], [ 0, %118 ]
  %150 = icmp ugt i64 %146, 4294967295
  %151 = shl nuw nsw i64 %146, 2
  br i1 %150, label %152, label %157

152:                                              ; preds = %145
  %153 = and i64 %151, 17179869180
  %154 = lshr i64 %146, 32
  %155 = shl nuw nsw i64 %154, 34
  %156 = or i64 %155, %153
  br label %157

157:                                              ; preds = %152, %145
  %158 = phi i64 [ %156, %152 ], [ %151, %145 ]
  %159 = add nuw nsw i64 %147, 43
  %160 = and i64 %159, 17179869180
  %161 = add nuw nsw i64 %158, %160
  %162 = icmp eq i32 %149, 0
  br i1 %162, label %169, label %163

163:                                              ; preds = %157
  %164 = shl nuw nsw i64 %148, 2
  %165 = zext i32 %149 to i64
  %166 = add nuw nsw i64 %164, 4
  %167 = add nuw nsw i64 %166, %165
  %168 = add i64 %167, %161
  br label %169

169:                                              ; preds = %157, %163
  %170 = phi i64 [ %168, %163 ], [ %161, %157 ]
  %171 = add nsw i64 %170, 7
  %172 = and i64 %171, -8
  %173 = getelementptr inbounds i8, i8* %113, i64 %172
  %174 = bitcast i8* %173 to %"class.SkTextBlob::RunRecord"*
  br label %175

175:                                              ; preds = %106, %169
  %176 = phi %"class.SkTextBlob::RunRecord"* [ %174, %169 ], [ null, %106 ]
  store %"class.SkTextBlob::RunRecord"* %176, %"class.SkTextBlob::RunRecord"** %3, align 8
  br label %177

177:                                              ; preds = %2, %175
  %178 = phi i1 [ true, %175 ], [ false, %2 ]
  ret i1 %178
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkTextBlob4Iter16experimentalNextEPNS0_15ExperimentalRunE(%"class.SkTextBlob::Iter"* nocapture, %"struct.SkTextBlob::Iter::ExperimentalRun"*) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.SkTextBlob::Iter", %"class.SkTextBlob::Iter"* %0, i64 0, i32 0
  %4 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %3, align 8
  %5 = icmp eq %"class.SkTextBlob::RunRecord"* %4, null
  br i1 %5, label %130, label %6

6:                                                ; preds = %2
  %7 = icmp eq %"struct.SkTextBlob::Iter::ExperimentalRun"* %1, null
  br i1 %7, label %59, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %4, i64 0, i32 0
  %10 = getelementptr inbounds %"struct.SkTextBlob::Iter::ExperimentalRun", %"struct.SkTextBlob::Iter::ExperimentalRun"* %1, i64 0, i32 0
  %11 = icmp eq %class.SkFont* %10, %9
  br i1 %11, label %33, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = load %class.SkTypeface*, %class.SkTypeface** %13, align 8
  %15 = icmp eq %class.SkTypeface* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic
  br label %19

19:                                               ; preds = %16, %12
  %20 = getelementptr inbounds %"struct.SkTextBlob::Iter::ExperimentalRun", %"struct.SkTextBlob::Iter::ExperimentalRun"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %class.SkTypeface*, %class.SkTypeface** %20, align 8
  store %class.SkTypeface* %14, %class.SkTypeface** %20, align 8
  %22 = icmp eq %class.SkTypeface* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = bitcast %class.SkTypeface* %21 to %class.SkRefCntBase*
  %29 = bitcast %class.SkTypeface* %21 to void (%class.SkRefCntBase*)***
  %30 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %30, i64 2
  %32 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, align 8
  tail call void %32(%class.SkRefCntBase* nonnull %28) #15
  br label %33

33:                                               ; preds = %8, %19, %23, %27
  %34 = getelementptr inbounds %"struct.SkTextBlob::Iter::ExperimentalRun", %"struct.SkTextBlob::Iter::ExperimentalRun"* %1, i64 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %4, i64 0, i32 0, i32 1
  %36 = bitcast float* %34 to i8*
  %37 = bitcast float* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 15, i1 false) #15
  %38 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %3, align 8
  %39 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %38, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"struct.SkTextBlob::Iter::ExperimentalRun", %"struct.SkTextBlob::Iter::ExperimentalRun"* %1, i64 0, i32 1
  store i32 %40, i32* %41, align 8
  %42 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %3, align 8
  %43 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %42, i64 1
  %44 = getelementptr inbounds %"struct.SkTextBlob::Iter::ExperimentalRun", %"struct.SkTextBlob::Iter::ExperimentalRun"* %1, i64 0, i32 2
  %45 = bitcast i16** %44 to %"class.SkTextBlob::RunRecord"**
  store %"class.SkTextBlob::RunRecord"* %43, %"class.SkTextBlob::RunRecord"** %45, align 8
  %46 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %3, align 8
  %47 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %46, i64 1
  %48 = bitcast %"class.SkTextBlob::RunRecord"* %47 to i8*
  %49 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %46, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = zext i32 %50 to i64
  %52 = shl nuw nsw i64 %51, 1
  %53 = add nuw nsw i64 %52, 3
  %54 = and i64 %53, 17179869180
  %55 = getelementptr inbounds i8, i8* %48, i64 %54
  %56 = getelementptr inbounds %"struct.SkTextBlob::Iter::ExperimentalRun", %"struct.SkTextBlob::Iter::ExperimentalRun"* %1, i64 0, i32 3
  %57 = bitcast %struct.SkPoint** %56 to i8**
  store i8* %55, i8** %57, align 8
  %58 = load %"class.SkTextBlob::RunRecord"*, %"class.SkTextBlob::RunRecord"** %3, align 8
  br label %59

59:                                               ; preds = %6, %33
  %60 = phi %"class.SkTextBlob::RunRecord"* [ %4, %6 ], [ %58, %33 ]
  %61 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %60, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = and i32 %62, 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %128

65:                                               ; preds = %59
  %66 = bitcast %"class.SkTextBlob::RunRecord"* %60 to i8*
  %67 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %60, i64 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %62, 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %80

71:                                               ; preds = %65
  %72 = and i32 %62, 3
  %73 = zext i32 %72 to i64
  %74 = zext i32 %68 to i64
  %75 = shl nuw nsw i64 %74, 1
  %76 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %73
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i64
  %79 = mul nuw nsw i64 %78, %74
  br label %98

80:                                               ; preds = %65
  %81 = getelementptr inbounds %"class.SkTextBlob::RunRecord", %"class.SkTextBlob::RunRecord"* %60, i64 1
  %82 = bitcast %"class.SkTextBlob::RunRecord"* %81 to i8*
  %83 = zext i32 %68 to i64
  %84 = shl nuw nsw i64 %83, 1
  %85 = add nuw nsw i64 %84, 3
  %86 = and i64 %85, 17179869180
  %87 = getelementptr inbounds i8, i8* %82, i64 %86
  %88 = bitcast i8* %87 to float*
  %89 = and i32 %62, 3
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds [4 x i8], [4 x i8]* @_ZZN10SkTextBlob15ScalarsPerGlyphENS_16GlyphPositioningEE22gScalarsPerPositioning, i64 0, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i64
  %94 = mul nuw nsw i64 %93, %83
  %95 = getelementptr inbounds float, float* %88, i64 %94
  %96 = bitcast float* %95 to i32*
  %97 = load i32, i32* %96, align 4
  br label %98

98:                                               ; preds = %80, %71
  %99 = phi i64 [ %94, %80 ], [ %79, %71 ]
  %100 = phi i64 [ %84, %80 ], [ %75, %71 ]
  %101 = phi i64 [ %83, %80 ], [ %74, %71 ]
  %102 = phi i32 [ %97, %80 ], [ 0, %71 ]
  %103 = icmp ugt i64 %99, 4294967295
  %104 = shl nuw nsw i64 %99, 2
  br i1 %103, label %105, label %110

105:                                              ; preds = %98
  %106 = and i64 %104, 17179869180
  %107 = lshr i64 %99, 32
  %108 = shl nuw nsw i64 %107, 34
  %109 = or i64 %108, %106
  br label %110

110:                                              ; preds = %105, %98
  %111 = phi i64 [ %109, %105 ], [ %104, %98 ]
  %112 = add nuw nsw i64 %100, 43
  %113 = and i64 %112, 17179869180
  %114 = add nuw nsw i64 %111, %113
  %115 = icmp eq i32 %102, 0
  br i1 %115, label %122, label %116

116:                                              ; preds = %110
  %117 = shl nuw nsw i64 %101, 2
  %118 = zext i32 %102 to i64
  %119 = add nuw nsw i64 %117, 4
  %120 = add nuw nsw i64 %119, %118
  %121 = add i64 %120, %114
  br label %122

122:                                              ; preds = %110, %116
  %123 = phi i64 [ %121, %116 ], [ %114, %110 ]
  %124 = add nsw i64 %123, 7
  %125 = and i64 %124, -8
  %126 = getelementptr inbounds i8, i8* %66, i64 %125
  %127 = bitcast i8* %126 to %"class.SkTextBlob::RunRecord"*
  br label %128

128:                                              ; preds = %59, %122
  %129 = phi %"class.SkTextBlob::RunRecord"* [ %127, %122 ], [ null, %59 ]
  store %"class.SkTextBlob::RunRecord"* %129, %"class.SkTextBlob::RunRecord"** %3, align 8
  br label %130

130:                                              ; preds = %2, %128
  %131 = phi i1 [ true, %128 ], [ false, %2 ]
  ret i1 %131
}

declare float @_ZNK6SkFont11measureTextEPKvm14SkTextEncodingP6SkRectPK7SkPaint(%class.SkFont*, i8*, i64, i32, %struct.SkRect*, %class.SkPaint*) local_unnamed_addr #6

declare void @_ZNK6SkFont15getWidthsBoundsEPKtiPfP6SkRectPK7SkPaint(%class.SkFont*, i16*, i32, float*, %struct.SkRect*, %class.SkPaint*) local_unnamed_addr #6

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10setRSXformERK9SkRSXform(%class.SkMatrix*, %struct.SkRSXform* dereferenceable(16)) local_unnamed_addr #6

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #6

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #6

declare zeroext i1 @_ZNK6SkFonteqERKS_(%class.SkFont*, %class.SkFont* dereferenceable(24)) local_unnamed_addr #6

declare void @_ZN12SkReadBuffer9setMemoryEPKvm(%class.SkReadBuffer*, i8*, i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #12

declare void @_ZN14SkGlyphRunListC1Ev(%class.SkGlyphRunList*) unnamed_addr #6

declare void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint*, %class.sk_sp.15*) local_unnamed_addr #6

declare void @_ZN6SkFont10setHintingE13SkFontHinting(%class.SkFont*, i32) local_unnamed_addr #6

declare void @_ZN6SkFont11setSubpixelEb(%class.SkFont*, i1 zeroext) local_unnamed_addr #6

declare void @_ZN6SkFont7setSizeEf(%class.SkFont*, float) local_unnamed_addr #6

declare void @_ZN7SkPaint14setStrokeWidthEf(%class.SkPaint*, float) local_unnamed_addr #6

declare void @_ZN7SkPaint8setStyleENS_5StyleE(%class.SkPaint*, i8 zeroext) local_unnamed_addr #6

declare void @_ZN7SkPaint13setPathEffectE5sk_spI12SkPathEffectE(%class.SkPaint*, %class.sk_sp.13*) local_unnamed_addr #6

declare void @_ZN12SkStrikeSpec16MakeWithNoDeviceERK6SkFontPK7SkPaint(%class.SkStrikeSpec* sret, %class.SkFont* dereferenceable(24), %class.SkPaint*) local_unnamed_addr #6

declare void @_ZN26SkBulkGlyphMetricsAndPathsC1ERK12SkStrikeSpec(%class.SkBulkGlyphMetricsAndPaths*, %class.SkStrikeSpec* dereferenceable(160)) unnamed_addr #6

declare { %class.SkGlyph**, i64 } @_ZN26SkBulkGlyphMetricsAndPaths6glyphsE6SkSpanIKtE(%class.SkBulkGlyphMetricsAndPaths*, i16*, i64) local_unnamed_addr #6

declare %class.SkPath* @_ZNK7SkGlyph4pathEv(%class.SkGlyph*) local_unnamed_addr #6

declare void @_ZN26SkBulkGlyphMetricsAndPaths14findInterceptsEPKfffPK7SkGlyphPfPi(%class.SkBulkGlyphMetricsAndPaths*, float*, float, float, %class.SkGlyph*, float*, i32*) local_unnamed_addr #6

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor*) unnamed_addr #11

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.63"*, i64) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast float** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 1
  %7 = bitcast float** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to float*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds float, float* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr float, float* %13, i64 %18
  %20 = bitcast float* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #15
  %26 = ptrtoint float* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.63"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.63"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #16
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #16
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #17
  %54 = bitcast i8* %53 to float*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi float* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds float, float* %57, i64 %33
  %59 = getelementptr inbounds float, float* %57, i64 %56
  %60 = getelementptr inbounds float, float* %58, i64 %1
  %61 = bitcast float* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #15
  %63 = ptrtoint float* %59 to i64
  %64 = ptrtoint float* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 0
  %66 = load float*, float** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint float* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds float, float* %58, i64 %71
  %73 = ptrtoint float* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast float* %72 to i8*
  %77 = bitcast float* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #15
  %78 = load float*, float** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi float* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq float* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast float* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #17
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #14

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
