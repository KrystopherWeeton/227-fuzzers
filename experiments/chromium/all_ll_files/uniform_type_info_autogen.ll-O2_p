; ModuleID = '../../third_party/angle/src/common/uniform_type_info_autogen.cpp'
source_filename = "../../third_party/angle/src/common/uniform_type_info_autogen.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"struct.std::__1::array" = type { [77 x %"struct.gl::UniformTypeInfo"] }

@_ZN2gl12_GLOBAL__N_110kInfoTableE = internal constant { [77 x { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 }] } { [77 x { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 }] [{ i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 0, i32 0, i32 0, i32 0, i32 0, i8 4, i32 0, i32 0, i32 0, i64 0, i64 0, i64 0, i8 0, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35670, i32 35670, i32 0, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35671, i32 35670, i32 0, i32 0, i32 35671, i8 4, i32 1, i32 2, i32 2, i64 4, i64 16, i64 8, i8 0, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35672, i32 35670, i32 0, i32 0, i32 35672, i8 4, i32 1, i32 3, i32 3, i64 4, i64 16, i64 12, i8 0, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35673, i32 35670, i32 0, i32 0, i32 35673, i8 4, i32 1, i32 4, i32 4, i64 4, i64 16, i64 16, i8 0, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 5126, i32 5126, i32 0, i32 0, i32 35670, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35674, i32 5126, i32 0, i32 35674, i32 0, i8 4, i32 2, i32 2, i32 4, i64 4, i64 32, i64 16, i8 0, i8 1, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35685, i32 5126, i32 0, i32 35687, i32 0, i8 4, i32 3, i32 2, i32 6, i64 4, i64 48, i64 24, i8 0, i8 1, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35686, i32 5126, i32 0, i32 35689, i32 0, i8 4, i32 4, i32 2, i32 8, i64 4, i64 64, i64 32, i8 0, i8 1, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35675, i32 5126, i32 0, i32 35675, i32 0, i8 4, i32 3, i32 3, i32 9, i64 4, i64 48, i64 36, i8 0, i8 1, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35687, i32 5126, i32 0, i32 35685, i32 0, i8 4, i32 2, i32 3, i32 6, i64 4, i64 32, i64 24, i8 0, i8 1, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35688, i32 5126, i32 0, i32 35690, i32 0, i8 4, i32 4, i32 3, i32 12, i64 4, i64 64, i64 48, i8 0, i8 1, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35676, i32 5126, i32 0, i32 35676, i32 0, i8 4, i32 4, i32 4, i32 16, i64 4, i64 64, i64 64, i8 0, i8 1, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35689, i32 5126, i32 0, i32 35686, i32 0, i8 4, i32 2, i32 4, i32 8, i64 4, i64 32, i64 32, i8 0, i8 1, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35690, i32 5126, i32 0, i32 35688, i32 0, i8 4, i32 3, i32 4, i32 12, i64 4, i64 48, i64 48, i8 0, i8 1, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35664, i32 5126, i32 0, i32 0, i32 35671, i8 4, i32 1, i32 2, i32 2, i64 4, i64 16, i64 8, i8 0, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35665, i32 5126, i32 0, i32 0, i32 35672, i8 4, i32 1, i32 3, i32 3, i64 4, i64 16, i64 12, i8 0, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35666, i32 5126, i32 0, i32 0, i32 35673, i8 4, i32 1, i32 4, i32 4, i64 4, i64 16, i64 16, i8 0, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36941, i32 5124, i32 3553, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 1 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36947, i32 5124, i32 35866, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 1 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36942, i32 5124, i32 32879, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 1 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36944, i32 5124, i32 34067, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 1 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36948, i32 5124, i32 36873, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 1 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36945, i32 5124, i32 35882, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 1 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 5124, i32 5124, i32 0, i32 0, i32 35670, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36952, i32 5124, i32 3553, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 1 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36958, i32 5124, i32 35866, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 1 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36953, i32 5124, i32 32879, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 1 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36955, i32 5124, i32 34067, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 1 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36959, i32 5124, i32 36873, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 1 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36956, i32 5124, i32 35882, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 1 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36298, i32 5124, i32 3553, i32 0, i32 0, i8 2, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36303, i32 5124, i32 35866, i32 0, i32 0, i8 2, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 37129, i32 5124, i32 37120, i32 0, i32 0, i8 2, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 37132, i32 5124, i32 37122, i32 0, i32 0, i8 2, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36299, i32 5124, i32 32879, i32 0, i32 0, i8 2, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36300, i32 5124, i32 34067, i32 0, i32 0, i8 2, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36878, i32 5124, i32 36873, i32 0, i32 0, i8 2, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36304, i32 5124, i32 35882, i32 0, i32 0, i8 2, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35667, i32 5124, i32 0, i32 0, i32 35671, i8 4, i32 1, i32 2, i32 2, i64 4, i64 16, i64 8, i8 0, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35668, i32 5124, i32 0, i32 0, i32 35672, i8 4, i32 1, i32 3, i32 3, i64 4, i64 16, i64 12, i8 0, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35669, i32 5124, i32 0, i32 0, i32 35673, i8 4, i32 1, i32 4, i32 4, i64 4, i64 16, i64 16, i8 0, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35678, i32 5124, i32 3553, i32 0, i32 0, i8 0, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36289, i32 5124, i32 35866, i32 0, i32 0, i8 0, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36292, i32 5124, i32 35866, i32 0, i32 0, i8 3, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 37128, i32 5124, i32 37120, i32 0, i32 0, i8 0, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 37131, i32 5124, i32 37122, i32 0, i32 0, i8 0, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35683, i32 5124, i32 3553, i32 0, i32 0, i8 0, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35682, i32 5124, i32 3553, i32 0, i32 0, i8 3, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35679, i32 5124, i32 32879, i32 0, i32 0, i8 0, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35680, i32 5124, i32 34067, i32 0, i32 0, i8 0, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36876, i32 5124, i32 36873, i32 0, i32 0, i8 0, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36290, i32 5124, i32 35882, i32 0, i32 0, i8 0, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36293, i32 5124, i32 34067, i32 0, i32 0, i8 3, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36877, i32 5124, i32 0, i32 0, i32 0, i8 3, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36198, i32 5124, i32 36197, i32 0, i32 0, i8 0, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 5125, i32 5125, i32 0, i32 0, i32 35670, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 37595, i32 5125, i32 0, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36963, i32 5125, i32 3553, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 1 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36969, i32 5125, i32 35866, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 1 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36964, i32 5125, i32 32879, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 1 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36966, i32 5125, i32 34067, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 1 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36970, i32 5125, i32 36873, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 1 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36967, i32 5125, i32 35882, i32 0, i32 0, i8 4, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 0, i8 0, i8 1 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36306, i32 5125, i32 3553, i32 0, i32 0, i8 1, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36311, i32 5125, i32 35866, i32 0, i32 0, i8 1, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 37130, i32 5125, i32 37120, i32 0, i32 0, i8 1, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 37133, i32 5125, i32 37122, i32 0, i32 0, i8 1, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36307, i32 5125, i32 32879, i32 0, i32 0, i8 1, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36308, i32 5125, i32 34067, i32 0, i32 0, i8 1, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36879, i32 5125, i32 36873, i32 0, i32 0, i8 1, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36312, i32 5125, i32 35882, i32 0, i32 0, i8 1, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36294, i32 5125, i32 0, i32 0, i32 35671, i8 4, i32 1, i32 2, i32 2, i64 4, i64 16, i64 8, i8 0, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36295, i32 5125, i32 0, i32 0, i32 35672, i8 4, i32 1, i32 3, i32 3, i64 4, i64 16, i64 12, i8 0, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 36296, i32 5125, i32 0, i32 0, i32 35673, i8 4, i32 1, i32 4, i32 4, i64 4, i64 16, i64 16, i8 0, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 37449, i32 5124, i32 37448, i32 0, i32 0, i8 0, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }, { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 } { i32 35815, i32 5124, i32 0, i32 0, i32 0, i8 0, i32 1, i32 1, i32 1, i64 4, i64 16, i64 4, i8 1, i8 0, i8 0 }] }, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(72) %"struct.gl::UniformTypeInfo"* @_ZN2gl18GetUniformTypeInfoEj(i32) local_unnamed_addr #0 {
  switch i32 %0, label %78 [
    i32 35815, label %77
    i32 35670, label %2
    i32 35671, label %3
    i32 35672, label %4
    i32 35673, label %5
    i32 5126, label %6
    i32 35674, label %7
    i32 35685, label %8
    i32 35686, label %9
    i32 35675, label %10
    i32 35687, label %11
    i32 35688, label %12
    i32 35676, label %13
    i32 35689, label %14
    i32 35690, label %15
    i32 35664, label %16
    i32 35665, label %17
    i32 35666, label %18
    i32 36941, label %19
    i32 36947, label %20
    i32 36942, label %21
    i32 36944, label %22
    i32 36948, label %23
    i32 36945, label %24
    i32 5124, label %25
    i32 36952, label %26
    i32 36958, label %27
    i32 36953, label %28
    i32 36955, label %29
    i32 36959, label %30
    i32 36956, label %31
    i32 36298, label %32
    i32 36303, label %33
    i32 37129, label %34
    i32 37132, label %35
    i32 36299, label %36
    i32 36300, label %37
    i32 36878, label %38
    i32 36304, label %39
    i32 35667, label %40
    i32 35668, label %41
    i32 35669, label %42
    i32 35678, label %43
    i32 36289, label %44
    i32 36292, label %45
    i32 37128, label %46
    i32 37131, label %47
    i32 35683, label %48
    i32 35682, label %49
    i32 35679, label %50
    i32 35680, label %51
    i32 36876, label %52
    i32 36290, label %53
    i32 36293, label %54
    i32 36877, label %55
    i32 36198, label %56
    i32 5125, label %57
    i32 37595, label %58
    i32 36963, label %59
    i32 36969, label %60
    i32 36964, label %61
    i32 36966, label %62
    i32 36970, label %63
    i32 36967, label %64
    i32 36306, label %65
    i32 36311, label %66
    i32 37130, label %67
    i32 37133, label %68
    i32 36307, label %69
    i32 36308, label %70
    i32 36879, label %71
    i32 36312, label %72
    i32 36294, label %73
    i32 36295, label %74
    i32 36296, label %75
    i32 37449, label %76
  ]

2:                                                ; preds = %1
  br label %78

3:                                                ; preds = %1
  br label %78

4:                                                ; preds = %1
  br label %78

5:                                                ; preds = %1
  br label %78

6:                                                ; preds = %1
  br label %78

7:                                                ; preds = %1
  br label %78

8:                                                ; preds = %1
  br label %78

9:                                                ; preds = %1
  br label %78

10:                                               ; preds = %1
  br label %78

11:                                               ; preds = %1
  br label %78

12:                                               ; preds = %1
  br label %78

13:                                               ; preds = %1
  br label %78

14:                                               ; preds = %1
  br label %78

15:                                               ; preds = %1
  br label %78

16:                                               ; preds = %1
  br label %78

17:                                               ; preds = %1
  br label %78

18:                                               ; preds = %1
  br label %78

19:                                               ; preds = %1
  br label %78

20:                                               ; preds = %1
  br label %78

21:                                               ; preds = %1
  br label %78

22:                                               ; preds = %1
  br label %78

23:                                               ; preds = %1
  br label %78

24:                                               ; preds = %1
  br label %78

25:                                               ; preds = %1
  br label %78

26:                                               ; preds = %1
  br label %78

27:                                               ; preds = %1
  br label %78

28:                                               ; preds = %1
  br label %78

29:                                               ; preds = %1
  br label %78

30:                                               ; preds = %1
  br label %78

31:                                               ; preds = %1
  br label %78

32:                                               ; preds = %1
  br label %78

33:                                               ; preds = %1
  br label %78

34:                                               ; preds = %1
  br label %78

35:                                               ; preds = %1
  br label %78

36:                                               ; preds = %1
  br label %78

37:                                               ; preds = %1
  br label %78

38:                                               ; preds = %1
  br label %78

39:                                               ; preds = %1
  br label %78

40:                                               ; preds = %1
  br label %78

41:                                               ; preds = %1
  br label %78

42:                                               ; preds = %1
  br label %78

43:                                               ; preds = %1
  br label %78

44:                                               ; preds = %1
  br label %78

45:                                               ; preds = %1
  br label %78

46:                                               ; preds = %1
  br label %78

47:                                               ; preds = %1
  br label %78

48:                                               ; preds = %1
  br label %78

49:                                               ; preds = %1
  br label %78

50:                                               ; preds = %1
  br label %78

51:                                               ; preds = %1
  br label %78

52:                                               ; preds = %1
  br label %78

53:                                               ; preds = %1
  br label %78

54:                                               ; preds = %1
  br label %78

55:                                               ; preds = %1
  br label %78

56:                                               ; preds = %1
  br label %78

57:                                               ; preds = %1
  br label %78

58:                                               ; preds = %1
  br label %78

59:                                               ; preds = %1
  br label %78

60:                                               ; preds = %1
  br label %78

61:                                               ; preds = %1
  br label %78

62:                                               ; preds = %1
  br label %78

63:                                               ; preds = %1
  br label %78

64:                                               ; preds = %1
  br label %78

65:                                               ; preds = %1
  br label %78

66:                                               ; preds = %1
  br label %78

67:                                               ; preds = %1
  br label %78

68:                                               ; preds = %1
  br label %78

69:                                               ; preds = %1
  br label %78

70:                                               ; preds = %1
  br label %78

71:                                               ; preds = %1
  br label %78

72:                                               ; preds = %1
  br label %78

73:                                               ; preds = %1
  br label %78

74:                                               ; preds = %1
  br label %78

75:                                               ; preds = %1
  br label %78

76:                                               ; preds = %1
  br label %78

77:                                               ; preds = %1
  br label %78

78:                                               ; preds = %1, %2, %3, %4, %5, %6, %7, %8, %9, %10, %11, %12, %13, %14, %15, %16, %17, %18, %19, %20, %21, %22, %23, %24, %25, %26, %27, %28, %29, %30, %31, %32, %33, %34, %35, %36, %37, %38, %39, %40, %41, %42, %43, %44, %45, %46, %47, %48, %49, %50, %51, %52, %53, %54, %55, %56, %57, %58, %59, %60, %61, %62, %63, %64, %65, %66, %67, %68, %69, %70, %71, %72, %73, %74, %75, %76, %77
  %79 = phi i64 [ 76, %77 ], [ 75, %76 ], [ 74, %75 ], [ 73, %74 ], [ 72, %73 ], [ 71, %72 ], [ 70, %71 ], [ 69, %70 ], [ 68, %69 ], [ 67, %68 ], [ 66, %67 ], [ 65, %66 ], [ 64, %65 ], [ 63, %64 ], [ 62, %63 ], [ 61, %62 ], [ 60, %61 ], [ 59, %60 ], [ 58, %59 ], [ 57, %58 ], [ 56, %57 ], [ 55, %56 ], [ 54, %55 ], [ 53, %54 ], [ 52, %53 ], [ 51, %52 ], [ 50, %51 ], [ 49, %50 ], [ 48, %49 ], [ 47, %48 ], [ 46, %47 ], [ 45, %46 ], [ 44, %45 ], [ 43, %44 ], [ 42, %43 ], [ 41, %42 ], [ 40, %41 ], [ 39, %40 ], [ 38, %39 ], [ 37, %38 ], [ 36, %37 ], [ 35, %36 ], [ 34, %35 ], [ 33, %34 ], [ 32, %33 ], [ 31, %32 ], [ 30, %31 ], [ 29, %30 ], [ 28, %29 ], [ 27, %28 ], [ 26, %27 ], [ 25, %26 ], [ 24, %25 ], [ 23, %24 ], [ 22, %23 ], [ 21, %22 ], [ 20, %21 ], [ 19, %20 ], [ 18, %19 ], [ 17, %18 ], [ 16, %17 ], [ 15, %16 ], [ 14, %15 ], [ 13, %14 ], [ 12, %13 ], [ 11, %12 ], [ 10, %11 ], [ 9, %10 ], [ 8, %9 ], [ 7, %8 ], [ 6, %7 ], [ 5, %6 ], [ 4, %5 ], [ 3, %4 ], [ 2, %3 ], [ 1, %2 ], [ 0, %1 ]
  %80 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* bitcast ({ [77 x { i32, i32, i32, i32, i32, i8, i32, i32, i32, i64, i64, i64, i8, i8, i8 }] }* @_ZN2gl12_GLOBAL__N_110kInfoTableE to %"struct.std::__1::array"*), i64 0, i32 0, i64 %79
  ret %"struct.gl::UniformTypeInfo"* %80
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
