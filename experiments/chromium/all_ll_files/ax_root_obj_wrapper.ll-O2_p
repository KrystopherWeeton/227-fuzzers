; ModuleID = '../../ui/views/accessibility/ax_root_obj_wrapper.cc'
source_filename = "../../ui/views/accessibility/ax_root_obj_wrapper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.AXRootObjWrapper = type { %"class.views::AXAuraObjWrapper", %"class.display::DisplayObserver", %"class.ui::AXUniqueId", %"class.views::AXAuraObjCache::Delegate"* }
%"class.views::AXAuraObjWrapper" = type { i32 (...)**, %"class.views::AXAuraObjCache"* }
%"class.display::DisplayObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.153 }
%class.scoped_refptr.153 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.65" }
%"struct.std::__1::atomic.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__atomic_base.67" }
%"struct.std::__1::__atomic_base.67" = type { %"struct.std::__1::__cxx_atomic_impl.68" }
%"struct.std::__1::__cxx_atomic_impl.68" = type { %"struct.std::__1::__cxx_atomic_base_impl.69" }
%"struct.std::__1::__cxx_atomic_base_impl.69" = type { i8 }
%"class.ui::AXUniqueId" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.views::AXAuraObjCache::Delegate" = type { i32 (...)** }
%"class.views::AXAuraObjCache" = type { %"class.aura::client::FocusChangeObserver", %"class.aura::Window"*, %"class.std::__1::unique_ptr.85", %"class.std::__1::map.91", %"class.std::__1::map.102", %"class.std::__1::map.113", %"class.std::__1::map.124", %"class.std::__1::map.135", %"class.views::AXAuraObjCache::Delegate"*, %"class.std::__1::set", %"class.aura::Window"*, %"class.views::Widget"* }
%"class.aura::client::FocusChangeObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.views::AXAuraObjCache::A11yOverrideWindowObserver"* }
%"class.views::AXAuraObjCache::A11yOverrideWindowObserver" = type opaque
%"class.std::__1::map.91" = type { %"class.std::__1::__tree.92" }
%"class.std::__1::__tree.92" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"class.std::__1::map.102" = type { %"class.std::__1::__tree.103" }
%"class.std::__1::__tree.103" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::map.113" = type { %"class.std::__1::__tree.114" }
%"class.std::__1::__tree.114" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::map.124" = type { %"class.std::__1::__tree.125" }
%"class.std::__1::__tree.125" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::map.135" = type { %"class.std::__1::__tree.136" }
%"class.std::__1::__tree.136" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.146" }
%"class.std::__1::__tree.146" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.147", %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.35", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.48", %"class.std::__1::vector.54", i32, i32, i32, [4 x i8], %"class.base::ObserverList.61", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.78", %"class.base::WeakPtr.84" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.1" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.4", %"class.std::__1::vector.11", %"class.ui::EventHandler"* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.6" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.26" }
%"class.std::__1::map.26" = type { %"class.std::__1::__tree.27" }
%"class.std::__1::__tree.27" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.aura::WindowTreeHost" = type opaque
%"class.aura::WindowDelegate" = type opaque
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.aura::Window"** }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type opaque
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.61" = type <{ %"class.std::__1::vector.62", %"class.base::LinkedList.75", i64, i32, [4 x i8] }>
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.70" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.75" = type { %"class.base::LinkNode.76" }
%"class.base::LinkNode.76" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.84" = type { %"class.base::internal::WeakPtrBase" }
%"class.views::Widget" = type opaque
%"class.display::Screen" = type { i32 (...)**, i64, i64 }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"class.views::AXAuraObjWrapper"**, %"class.views::AXAuraObjWrapper"**, %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.views::AXAuraObjWrapper"** }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.161", %"class.std::__1::vector.168", %"class.std::__1::vector.176", %"class.std::__1::vector.184", %"class.std::__1::vector.192", %"class.std::__1::vector.200", %"class.std::__1::vector.208", %"class.std::__1::vector.216", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.161" = type { %"class.std::__1::__vector_base.162" }
%"class.std::__1::__vector_base.162" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.163" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"struct.std::__1::pair.170"*, %"struct.std::__1::pair.170"*, %"class.std::__1::__compressed_pair.171" }
%"struct.std::__1::pair.170" = type opaque
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"struct.std::__1::pair.170"* }
%"class.std::__1::vector.176" = type { %"class.std::__1::__vector_base.177" }
%"class.std::__1::__vector_base.177" = type { %"struct.std::__1::pair.178"*, %"struct.std::__1::pair.178"*, %"class.std::__1::__compressed_pair.179" }
%"struct.std::__1::pair.178" = type opaque
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"struct.std::__1::pair.178"* }
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"struct.std::__1::pair.186"*, %"struct.std::__1::pair.186"*, %"class.std::__1::__compressed_pair.187" }
%"struct.std::__1::pair.186" = type opaque
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"struct.std::__1::pair.186"* }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"struct.std::__1::pair.194"*, %"struct.std::__1::pair.194"*, %"class.std::__1::__compressed_pair.195" }
%"struct.std::__1::pair.194" = type opaque
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"struct.std::__1::pair.194"* }
%"class.std::__1::vector.200" = type { %"class.std::__1::__vector_base.201" }
%"class.std::__1::__vector_base.201" = type { %"struct.std::__1::pair.202"*, %"struct.std::__1::pair.202"*, %"class.std::__1::__compressed_pair.203" }
%"struct.std::__1::pair.202" = type opaque
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"struct.std::__1::pair.202"* }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"struct.std::__1::pair.210"*, %"struct.std::__1::pair.210"*, %"class.std::__1::__compressed_pair.211" }
%"struct.std::__1::pair.210" = type opaque
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.std::__1::pair.210"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { i32*, i32*, %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr.223" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.229" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.229" = type { %"class.absl::optional_internal::optional_data.230" }
%"class.absl::optional_internal::optional_data.230" = type { %"class.absl::optional_internal::optional_data_base.231" }
%"class.absl::optional_internal::optional_data_base.231" = type { %"class.absl::optional_internal::optional_data_dtor_base.232" }
%"class.absl::optional_internal::optional_data_dtor_base.232" = type { i8, %union.anon.233 }
%union.anon.233 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.236 }
%union.anon.236 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.ui::AXActionData" = type opaque

@_ZTV16AXRootObjWrapper = hidden unnamed_addr constant { [11 x i8*], [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.AXRootObjWrapper*)* @_ZN16AXRootObjWrapperD2Ev to i8*), i8* bitcast (void (%class.AXRootObjWrapper*)* @_ZN16AXRootObjWrapperD0Ev to i8*), i8* bitcast (%"class.views::AXAuraObjWrapper"* (%class.AXRootObjWrapper*)* @_ZN16AXRootObjWrapper9GetParentEv to i8*), i8* bitcast (void (%class.AXRootObjWrapper*, %"class.std::__1::vector.154"*)* @_ZN16AXRootObjWrapper11GetChildrenEPNSt3__16vectorIPN5views16AXAuraObjWrapperENS0_9allocatorIS4_EEEE to i8*), i8* bitcast (void (%class.AXRootObjWrapper*, %"struct.ui::AXNodeData"*)* @_ZN16AXRootObjWrapper9SerializeEPN2ui10AXNodeDataE to i8*), i8* bitcast (i32 (%class.AXRootObjWrapper*)* @_ZNK16AXRootObjWrapper11GetUniqueIdEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %class.AXRootObjWrapper*)* @_ZNK16AXRootObjWrapper8ToStringEv to i8*), i8* bitcast (i1 (%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXActionData"*)* @_ZN5views16AXAuraObjWrapper22HandleAccessibleActionERKN2ui12AXActionDataE to i8*), i8* bitcast (void (%class.AXRootObjWrapper*, %"class.display::Display"*, i32)* @_ZN16AXRootObjWrapper23OnDisplayMetricsChangedERKN7display7DisplayEj to i8*)], [11 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%class.AXRootObjWrapper*)* @_ZThn16_N16AXRootObjWrapperD1Ev to i8*), i8* bitcast (void (%class.AXRootObjWrapper*)* @_ZThn16_N16AXRootObjWrapperD0Ev to i8*), i8* bitcast (void (%"class.display::DisplayObserver"*)* @_ZN7display15DisplayObserver27OnWillProcessDisplayChangesEv to i8*), i8* bitcast (void (%"class.display::DisplayObserver"*)* @_ZN7display15DisplayObserver26OnDidProcessDisplayChangesEv to i8*), i8* bitcast (void (%"class.display::DisplayObserver"*, %"class.display::Display"*)* @_ZN7display15DisplayObserver14OnDisplayAddedERKNS_7DisplayE to i8*), i8* bitcast (void (%"class.display::DisplayObserver"*, %"class.display::Display"*)* @_ZN7display15DisplayObserver16OnDisplayRemovedERKNS_7DisplayE to i8*), i8* bitcast (void (%class.AXRootObjWrapper*, %"class.display::Display"*, i32)* @_ZThn16_N16AXRootObjWrapper23OnDisplayMetricsChangedERKN7display7DisplayEj to i8*), i8* bitcast (void (%"class.display::DisplayObserver"*, %"class.std::__1::basic_string"*)* @_ZN7display15DisplayObserver25OnCurrentWorkspaceChangedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.display::DisplayObserver"*, i32)* @_ZN7display15DisplayObserver27OnDisplayTabletStateChangedENS_11TabletStateE to i8*)] }, align 8

@_ZN16AXRootObjWrapperC1EPN5views14AXAuraObjCache8DelegateEPS1_ = hidden unnamed_addr alias void (%class.AXRootObjWrapper*, %"class.views::AXAuraObjCache::Delegate"*, %"class.views::AXAuraObjCache"*), void (%class.AXRootObjWrapper*, %"class.views::AXAuraObjCache::Delegate"*, %"class.views::AXAuraObjCache"*)* @_ZN16AXRootObjWrapperC2EPN5views14AXAuraObjCache8DelegateEPS1_
@_ZN16AXRootObjWrapperD1Ev = hidden unnamed_addr alias void (%class.AXRootObjWrapper*), void (%class.AXRootObjWrapper*)* @_ZN16AXRootObjWrapperD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16AXRootObjWrapperC2EPN5views14AXAuraObjCache8DelegateEPS1_(%class.AXRootObjWrapper*, %"class.views::AXAuraObjCache::Delegate"*, %"class.views::AXAuraObjCache"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.AXRootObjWrapper, %class.AXRootObjWrapper* %0, i64 0, i32 0
  tail call void @_ZN5views16AXAuraObjWrapperC2EPNS_14AXAuraObjCacheE(%"class.views::AXAuraObjWrapper"* %4, %"class.views::AXAuraObjCache"* %2) #7
  %5 = getelementptr inbounds %class.AXRootObjWrapper, %class.AXRootObjWrapper* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.display::DisplayObserver", %"class.display::DisplayObserver"* %5, i64 0, i32 0
  tail call void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"* %6) #7
  %7 = getelementptr inbounds %"class.display::DisplayObserver", %"class.display::DisplayObserver"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %class.AXRootObjWrapper, %class.AXRootObjWrapper* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTV16AXRootObjWrapper, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTV16AXRootObjWrapper, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %class.AXRootObjWrapper, %class.AXRootObjWrapper* %0, i64 0, i32 2
  tail call void @_ZN2ui10AXUniqueIdC1Ev(%"class.ui::AXUniqueId"* %9) #7
  %10 = getelementptr inbounds %class.AXRootObjWrapper, %class.AXRootObjWrapper* %0, i64 0, i32 3
  store %"class.views::AXAuraObjCache::Delegate"* %1, %"class.views::AXAuraObjCache::Delegate"** %10, align 8
  %11 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #7
  %12 = icmp eq %"class.display::Screen"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %3
  %14 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #7
  %15 = bitcast %"class.display::Screen"* %14 to void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)***
  %16 = load void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)**, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)** %16, i64 16
  %18 = load void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)** %17, align 8
  tail call void %18(%"class.display::Screen"* %14, %"class.display::DisplayObserver"* %5) #7
  br label %19

19:                                               ; preds = %3, %13
  ret void
}

declare void @_ZN5views16AXAuraObjWrapperC2EPNS_14AXAuraObjCacheE(%"class.views::AXAuraObjWrapper"*, %"class.views::AXAuraObjCache"*) unnamed_addr #1

declare void @_ZN2ui10AXUniqueIdC1Ev(%"class.ui::AXUniqueId"*) unnamed_addr #1

declare %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16AXRootObjWrapperD2Ev(%class.AXRootObjWrapper*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.AXRootObjWrapper, %class.AXRootObjWrapper* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTV16AXRootObjWrapper, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.AXRootObjWrapper, %class.AXRootObjWrapper* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.display::DisplayObserver", %"class.display::DisplayObserver"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTV16AXRootObjWrapper, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #7
  %6 = icmp eq %"class.display::Screen"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #7
  %9 = bitcast %"class.display::Screen"* %8 to void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)***
  %10 = load void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)**, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)** %10, i64 17
  %12 = load void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)** %11, align 8
  tail call void %12(%"class.display::Screen"* %8, %"class.display::DisplayObserver"* %3) #7
  br label %13

13:                                               ; preds = %1, %7
  %14 = getelementptr inbounds %class.AXRootObjWrapper, %class.AXRootObjWrapper* %0, i64 0, i32 2
  tail call void @_ZN2ui10AXUniqueIdD1Ev(%"class.ui::AXUniqueId"* %14) #7
  tail call void @_ZN7display15DisplayObserverD2Ev(%"class.display::DisplayObserver"* %3) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui10AXUniqueIdD1Ev(%"class.ui::AXUniqueId"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7display15DisplayObserverD2Ev(%"class.display::DisplayObserver"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N16AXRootObjWrapperD1Ev(%class.AXRootObjWrapper*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.AXRootObjWrapper, %class.AXRootObjWrapper* %0, i64 -1, i32 2, i32 1
  %3 = bitcast i32* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTV16AXRootObjWrapper, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 4
  %5 = bitcast i32* %4 to %"class.display::DisplayObserver"*
  %6 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTV16AXRootObjWrapper, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #7
  %8 = icmp eq %"class.display::Screen"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  %10 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #7
  %11 = bitcast %"class.display::Screen"* %10 to void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)***
  %12 = load void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)**, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)** %12, i64 17
  %14 = load void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)** %13, align 8
  tail call void %14(%"class.display::Screen"* %10, %"class.display::DisplayObserver"* %5) #7
  br label %15

15:                                               ; preds = %1, %9
  %16 = getelementptr inbounds i32, i32* %2, i64 10
  %17 = bitcast i32* %16 to %"class.ui::AXUniqueId"*
  tail call void @_ZN2ui10AXUniqueIdD1Ev(%"class.ui::AXUniqueId"* %17) #7
  tail call void @_ZN7display15DisplayObserverD2Ev(%"class.display::DisplayObserver"* %5) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16AXRootObjWrapperD0Ev(%class.AXRootObjWrapper*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.AXRootObjWrapper, %class.AXRootObjWrapper* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTV16AXRootObjWrapper, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.AXRootObjWrapper, %class.AXRootObjWrapper* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.display::DisplayObserver", %"class.display::DisplayObserver"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTV16AXRootObjWrapper, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #7
  %6 = icmp eq %"class.display::Screen"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #7
  %9 = bitcast %"class.display::Screen"* %8 to void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)***
  %10 = load void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)**, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)** %10, i64 17
  %12 = load void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)** %11, align 8
  tail call void %12(%"class.display::Screen"* %8, %"class.display::DisplayObserver"* %3) #7
  br label %13

13:                                               ; preds = %1, %7
  %14 = getelementptr inbounds %class.AXRootObjWrapper, %class.AXRootObjWrapper* %0, i64 0, i32 2
  tail call void @_ZN2ui10AXUniqueIdD1Ev(%"class.ui::AXUniqueId"* %14) #7
  tail call void @_ZN7display15DisplayObserverD2Ev(%"class.display::DisplayObserver"* %3) #7
  %15 = bitcast %class.AXRootObjWrapper* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N16AXRootObjWrapperD0Ev(%class.AXRootObjWrapper*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.AXRootObjWrapper, %class.AXRootObjWrapper* %0, i64 -1, i32 2, i32 1
  %3 = bitcast i32* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTV16AXRootObjWrapper, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 4
  %5 = bitcast i32* %4 to %"class.display::DisplayObserver"*
  %6 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [11 x i8*] }, { [11 x i8*], [11 x i8*] }* @_ZTV16AXRootObjWrapper, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #7
  %8 = icmp eq %"class.display::Screen"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  %10 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #7
  %11 = bitcast %"class.display::Screen"* %10 to void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)***
  %12 = load void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)**, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)** %12, i64 17
  %14 = load void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)*, void (%"class.display::Screen"*, %"class.display::DisplayObserver"*)** %13, align 8
  tail call void %14(%"class.display::Screen"* %10, %"class.display::DisplayObserver"* %5) #7
  br label %15

15:                                               ; preds = %1, %9
  %16 = getelementptr inbounds i32, i32* %2, i64 10
  %17 = bitcast i32* %16 to %"class.ui::AXUniqueId"*
  tail call void @_ZN2ui10AXUniqueIdD1Ev(%"class.ui::AXUniqueId"* %17) #7
  tail call void @_ZN7display15DisplayObserverD2Ev(%"class.display::DisplayObserver"* %5) #7
  %18 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* %18) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16AXRootObjWrapper8HasChildEPN5views16AXAuraObjWrapperE(%class.AXRootObjWrapper*, %"class.views::AXAuraObjWrapper"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.154", align 8
  %4 = bitcast %"class.std::__1::vector.154"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7
  %5 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.154", %"class.std::__1::vector.154"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #7
  %7 = bitcast %class.AXRootObjWrapper* %0 to void (%class.AXRootObjWrapper*, %"class.std::__1::vector.154"*)***
  %8 = load void (%class.AXRootObjWrapper*, %"class.std::__1::vector.154"*)**, void (%class.AXRootObjWrapper*, %"class.std::__1::vector.154"*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.AXRootObjWrapper*, %"class.std::__1::vector.154"*)*, void (%class.AXRootObjWrapper*, %"class.std::__1::vector.154"*)** %8, i64 3
  %10 = load void (%class.AXRootObjWrapper*, %"class.std::__1::vector.154"*)*, void (%class.AXRootObjWrapper*, %"class.std::__1::vector.154"*)** %9, align 8
  call void %10(%class.AXRootObjWrapper* %0, %"class.std::__1::vector.154"* nonnull %3) #7
  %11 = load %"class.views::AXAuraObjWrapper"**, %"class.views::AXAuraObjWrapper"*** %5, align 8
  %12 = load %"class.views::AXAuraObjWrapper"**, %"class.views::AXAuraObjWrapper"*** %6, align 8
  %13 = icmp eq %"class.views::AXAuraObjWrapper"** %11, %12
  br i1 %13, label %21, label %14

14:                                               ; preds = %2, %18
  %15 = phi %"class.views::AXAuraObjWrapper"** [ %19, %18 ], [ %11, %2 ]
  %16 = load %"class.views::AXAuraObjWrapper"*, %"class.views::AXAuraObjWrapper"** %15, align 8
  %17 = icmp eq %"class.views::AXAuraObjWrapper"* %16, %1
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.views::AXAuraObjWrapper"*, %"class.views::AXAuraObjWrapper"** %15, i64 1
  %20 = icmp eq %"class.views::AXAuraObjWrapper"** %19, %12
  br i1 %20, label %21, label %14

21:                                               ; preds = %14, %18, %2
  %22 = phi %"class.views::AXAuraObjWrapper"** [ %11, %2 ], [ %12, %18 ], [ %15, %14 ]
  %23 = icmp ne %"class.views::AXAuraObjWrapper"** %22, %12
  %24 = icmp eq %"class.views::AXAuraObjWrapper"** %11, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = ptrtoint %"class.views::AXAuraObjWrapper"** %11 to i64
  %27 = bitcast %"class.views::AXAuraObjWrapper"*** %6 to i64*
  store i64 %26, i64* %27, align 8
  %28 = bitcast %"class.views::AXAuraObjWrapper"** %11 to i8*
  call void @_ZdlPv(i8* %28) #8
  br label %29

29:                                               ; preds = %21, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7
  ret i1 %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.views::AXAuraObjWrapper"* @_ZN16AXRootObjWrapper9GetParentEv(%class.AXRootObjWrapper* nocapture readnone) unnamed_addr #5 align 2 {
  ret %"class.views::AXAuraObjWrapper"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16AXRootObjWrapper11GetChildrenEPNSt3__16vectorIPN5views16AXAuraObjWrapperENS0_9allocatorIS4_EEEE(%class.AXRootObjWrapper* nocapture readonly, %"class.std::__1::vector.154"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.AXRootObjWrapper, %class.AXRootObjWrapper* %0, i64 0, i32 0, i32 1
  %4 = load %"class.views::AXAuraObjCache"*, %"class.views::AXAuraObjCache"** %3, align 8
  tail call void @_ZN5views14AXAuraObjCache18GetTopLevelWindowsEPNSt3__16vectorIPNS_16AXAuraObjWrapperENS1_9allocatorIS4_EEEE(%"class.views::AXAuraObjCache"* %4, %"class.std::__1::vector.154"* %1) #7
  ret void
}

declare void @_ZN5views14AXAuraObjCache18GetTopLevelWindowsEPNSt3__16vectorIPNS_16AXAuraObjWrapperENS1_9allocatorIS4_EEEE(%"class.views::AXAuraObjCache"*, %"class.std::__1::vector.154"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16AXRootObjWrapper9SerializeEPN2ui10AXNodeDataE(%class.AXRootObjWrapper* nocapture readonly, %"struct.ui::AXNodeData"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.display::Display", align 8
  %4 = getelementptr inbounds %class.AXRootObjWrapper, %class.AXRootObjWrapper* %0, i64 0, i32 2, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %1, i64 0, i32 1
  store i32 %5, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %1, i64 0, i32 2
  store i32 34, i32* %7, align 4
  %8 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #7
  %9 = icmp eq %"class.display::Screen"* %8, null
  br i1 %9, label %32, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.display::Display"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %11) #7
  %12 = bitcast %"class.display::Screen"* %8 to void (%"class.display::Display"*, %"class.display::Screen"*)***
  %13 = load void (%"class.display::Display"*, %"class.display::Screen"*)**, void (%"class.display::Display"*, %"class.display::Screen"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*)*, void (%"class.display::Display"*, %"class.display::Screen"*)** %13, i64 12
  %15 = load void (%"class.display::Display"*, %"class.display::Screen"*)*, void (%"class.display::Display"*, %"class.display::Screen"*)** %14, align 8
  call void %15(%"class.display::Display"* nonnull sret %3, %"class.display::Screen"* nonnull %8) #7
  %16 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %3, i64 0, i32 1, i32 1, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %3, i64 0, i32 1, i32 1, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %17, 0
  %21 = select i1 %20, i32 %17, i32 0
  %22 = sitofp i32 %21 to float
  %23 = icmp sgt i32 %19, 0
  %24 = select i1 %23, i32 %19, i32 0
  %25 = sitofp i32 %24 to float
  %26 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %1, i64 0, i32 13, i32 2, i32 0, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %1, i64 0, i32 13, i32 2, i32 0, i32 1
  store float 0.000000e+00, float* %27, align 4
  %28 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %1, i64 0, i32 13, i32 2, i32 1, i32 0
  store float %22, float* %28, align 4
  %29 = getelementptr inbounds %"struct.ui::AXNodeData", %"struct.ui::AXNodeData"* %1, i64 0, i32 13, i32 2, i32 1, i32 1
  store float %25, float* %29, align 4
  %30 = icmp sgt i32 %17, %19
  %31 = select i1 %30, i32 7, i32 17
  call void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"* %1, i32 %31) #7
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %11) #7
  br label %32

32:                                               ; preds = %2, %10
  ret void
}

declare void @_ZN2ui10AXNodeData8AddStateEN2ax5mojom5StateE(%"struct.ui::AXNodeData"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7display7DisplayD1Ev(%"class.display::Display"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK16AXRootObjWrapper11GetUniqueIdEv(%class.AXRootObjWrapper* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.AXRootObjWrapper, %class.AXRootObjWrapper* %0, i64 0, i32 2, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK16AXRootObjWrapper8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %class.AXRootObjWrapper* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 4, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 1953460082, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %5, i64 4
  store i8 0, i8* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16AXRootObjWrapper23OnDisplayMetricsChangedERKN7display7DisplayEj(%class.AXRootObjWrapper*, %"class.display::Display"* nocapture readnone dereferenceable(568), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.AXRootObjWrapper, %class.AXRootObjWrapper* %0, i64 0, i32 3
  %5 = load %"class.views::AXAuraObjCache::Delegate"*, %"class.views::AXAuraObjCache::Delegate"** %4, align 8
  %6 = getelementptr inbounds %class.AXRootObjWrapper, %class.AXRootObjWrapper* %0, i64 0, i32 0
  %7 = bitcast %"class.views::AXAuraObjCache::Delegate"* %5 to void (%"class.views::AXAuraObjCache::Delegate"*, %"class.views::AXAuraObjWrapper"*, i32)***
  %8 = load void (%"class.views::AXAuraObjCache::Delegate"*, %"class.views::AXAuraObjWrapper"*, i32)**, void (%"class.views::AXAuraObjCache::Delegate"*, %"class.views::AXAuraObjWrapper"*, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.views::AXAuraObjCache::Delegate"*, %"class.views::AXAuraObjWrapper"*, i32)*, void (%"class.views::AXAuraObjCache::Delegate"*, %"class.views::AXAuraObjWrapper"*, i32)** %8, i64 3
  %10 = load void (%"class.views::AXAuraObjCache::Delegate"*, %"class.views::AXAuraObjWrapper"*, i32)*, void (%"class.views::AXAuraObjCache::Delegate"*, %"class.views::AXAuraObjWrapper"*, i32)** %9, align 8
  tail call void %10(%"class.views::AXAuraObjCache::Delegate"* %5, %"class.views::AXAuraObjWrapper"* %6, i32 24) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N16AXRootObjWrapper23OnDisplayMetricsChangedERKN7display7DisplayEj(%class.AXRootObjWrapper*, %"class.display::Display"* nocapture readnone dereferenceable(568), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.AXRootObjWrapper, %class.AXRootObjWrapper* %0, i64 -1, i32 2, i32 1
  %5 = getelementptr inbounds i32, i32* %4, i64 14
  %6 = bitcast i32* %5 to %"class.views::AXAuraObjCache::Delegate"**
  %7 = load %"class.views::AXAuraObjCache::Delegate"*, %"class.views::AXAuraObjCache::Delegate"** %6, align 8
  %8 = bitcast i32* %4 to %"class.views::AXAuraObjWrapper"*
  %9 = bitcast %"class.views::AXAuraObjCache::Delegate"* %7 to void (%"class.views::AXAuraObjCache::Delegate"*, %"class.views::AXAuraObjWrapper"*, i32)***
  %10 = load void (%"class.views::AXAuraObjCache::Delegate"*, %"class.views::AXAuraObjWrapper"*, i32)**, void (%"class.views::AXAuraObjCache::Delegate"*, %"class.views::AXAuraObjWrapper"*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.views::AXAuraObjCache::Delegate"*, %"class.views::AXAuraObjWrapper"*, i32)*, void (%"class.views::AXAuraObjCache::Delegate"*, %"class.views::AXAuraObjWrapper"*, i32)** %10, i64 3
  %12 = load void (%"class.views::AXAuraObjCache::Delegate"*, %"class.views::AXAuraObjWrapper"*, i32)*, void (%"class.views::AXAuraObjCache::Delegate"*, %"class.views::AXAuraObjWrapper"*, i32)** %11, align 8
  tail call void %12(%"class.views::AXAuraObjCache::Delegate"* %7, %"class.views::AXAuraObjWrapper"* %8, i32 24) #7
  ret void
}

declare zeroext i1 @_ZN5views16AXAuraObjWrapper22HandleAccessibleActionERKN2ui12AXActionDataE(%"class.views::AXAuraObjWrapper"*, %"struct.ui::AXActionData"*) unnamed_addr #1

declare void @_ZN7display15DisplayObserver27OnWillProcessDisplayChangesEv(%"class.display::DisplayObserver"*) unnamed_addr #1

declare void @_ZN7display15DisplayObserver26OnDidProcessDisplayChangesEv(%"class.display::DisplayObserver"*) unnamed_addr #1

declare void @_ZN7display15DisplayObserver14OnDisplayAddedERKNS_7DisplayE(%"class.display::DisplayObserver"*, %"class.display::Display"* dereferenceable(568)) unnamed_addr #1

declare void @_ZN7display15DisplayObserver16OnDisplayRemovedERKNS_7DisplayE(%"class.display::DisplayObserver"*, %"class.display::Display"* dereferenceable(568)) unnamed_addr #1

declare void @_ZN7display15DisplayObserver25OnCurrentWorkspaceChangedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.display::DisplayObserver"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN7display15DisplayObserver27OnDisplayTabletStateChangedENS_11TabletStateE(%"class.display::DisplayObserver"*, i32) unnamed_addr #1

declare void @_ZN4base15CheckedObserverC2Ev(%"class.base::CheckedObserver"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
