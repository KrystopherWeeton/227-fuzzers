; ModuleID = '../../third_party/blink/renderer/core/css/cssom/prepopulated_computed_style_property_map.cc'
source_filename = "../../third_party/blink/renderer/core/css/cssom/prepopulated_computed_style_property_map.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.140", i32, [4 x i8], %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.276", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.292", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.310", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.317", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.256", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__atomic_base.178" }
%"struct.std::__1::__atomic_base.178" = type { %"struct.std::__1::__cxx_atomic_impl.179" }
%"struct.std::__1::__cxx_atomic_impl.179" = type { %"struct.std::__1::__cxx_atomic_base_impl.180" }
%"struct.std::__1::__cxx_atomic_base_impl.180" = type { i64 }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::Worklist.187"* }
%"class.blink::Worklist.187" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::Worklist.194"* }
%"class.blink::Worklist.194" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::Worklist.201"* }
%"class.blink::Worklist.201" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::Worklist.208"* }
%"class.blink::Worklist.208" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::Worklist.215"* }
%"class.blink::Worklist.215" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::Worklist.222"* }
%"class.blink::Worklist.222" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::Worklist.229"* }
%"class.blink::Worklist.229" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.176" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.236", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.250", [4 x i8] }>
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238", %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { i64 }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { float }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.259", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.268" }
%"class.WTF::Vector.268" = type { %"class.WTF::VectorBuffer.269" }
%"class.WTF::VectorBuffer.269" = type { %"class.WTF::VectorBufferBase.270" }
%"class.WTF::VectorBufferBase.270" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.284" }
%"class.WTF::VectorBuffer.284" = type { %"class.WTF::VectorBufferBase.285" }
%"class.WTF::VectorBufferBase.285" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.298" }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.187"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.194"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.201"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.208"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.215"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.557" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.316 }
%class.scoped_refptr.316 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.317" = type { %"struct.std::__1::__atomic_base.318" }
%"struct.std::__1::__atomic_base.318" = type { %"struct.std::__1::__cxx_atomic_impl.319" }
%"struct.std::__1::__cxx_atomic_impl.319" = type { %"struct.std::__1::__cxx_atomic_base_impl.320" }
%"struct.std::__1::__cxx_atomic_base_impl.320" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.93" }
%"struct.std::__1::atomic.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__atomic_base.95" }
%"struct.std::__1::__atomic_base.95" = type { %"struct.std::__1::__cxx_atomic_impl.96" }
%"struct.std::__1::__cxx_atomic_impl.96" = type { %"struct.std::__1::__cxx_atomic_base_impl.97" }
%"struct.std::__1::__cxx_atomic_base_impl.97" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.128", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.128" = type { %"class.base::RefCounted.129" }
%"class.base::RefCounted.129" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.132" }
%"class.blink::HeapHashMap.132" = type { %"class.WTF::HashMap.135" }
%"class.WTF::HashMap.135" = type { %"class.WTF::HashTable.136" }
%"class.WTF::HashTable.136" = type <{ %"struct.WTF::KeyValuePair.138"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.138" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::PrepopulatedComputedStylePropertyMap" = type { %"class.blink::StylePropertyMapReadOnlyMainThread", %"class.blink::HeapHashMap", %"class.blink::HeapHashMap.4" }
%"class.blink::StylePropertyMapReadOnlyMainThread" = type { %"class.blink::StylePropertyMapReadOnly" }
%"class.blink::StylePropertyMapReadOnly" = type { %"class.blink::ScriptWrappable", %"class.blink::PairIterable" }
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashMap.4" = type { %"class.WTF::HashMap.7" }
%"class.WTF::HashMap.7" = type { %"class.WTF::HashTable.8" }
%"class.WTF::HashTable.8" = type <{ %"struct.WTF::KeyValuePair.10"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.10" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.89", %"class.WTF::Vector.89", i8, i32, %"class.blink::Member.100", %"class.blink::Member.102", %"class.blink::Member.104", %"class.blink::Member.106", %"class.blink::Member.108", %"class.blink::Member.110", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.113", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.119", %"class.blink::Member.121", %"class.blink::Member.79", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.124", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.39", %"class.blink::Member.333", %"class.blink::Member.39", %"class.blink::Member.39", %"class.blink::Member.39", %"class.blink::UserActionElementSet", %"class.blink::Member.342", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.349", i16, i8, %"class.blink::Member.356", %"class.blink::Member.358", %"class.blink::Member.360", %"class.blink::Member.362", %"class.blink::TextLinkColors", %"class.blink::Member.364", i8, [7 x i8], %"class.blink::HeapHashMap.366", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.39", %"class.WTF::Vector.373", %"class.blink::Member.378", %"class.blink::Member.380", i8, %"class.blink::Member.39", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.382", %"class.blink::HeapVector.384", %"class.std::__1::unique_ptr.392", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.398", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.411", %"class.WTF::Vector.413", i8, i8, %"class.std::__1::unique_ptr.418", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.424", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.432", i8, i32, %"class.blink::Member.434", %"class.blink::Member.436", %"class.blink::Member.438", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.440", %"class.WTF::HashMap.442", %"class.blink::Member.447", %"class.blink::Member.449", %"class.blink::Member.451", %"class.blink::Member.453", %"class.blink::Member.22", %"class.blink::Member.22", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.455", i8, i32, %"class.blink::Member.462", %"class.blink::Member.464", i32, %"class.blink::Member.466", %"class.blink::Member.468", %"class.blink::Member.470", %"class.std::__1::unique_ptr.472", i64, %"class.std::__1::unique_ptr.478", i32, i32, %"class.blink::Member.493", %"class.blink::Member.495", %"class.blink::Member.497", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.499", %"class.WTF::Vector.501", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.506", %"class.blink::Member.513", %"class.std::__1::unique_ptr.515", %"class.blink::Member.521", i8, i8, %"class.WTF::String", %"class.blink::Member.523", i8, [7 x i8], %"class.blink::HeapHashMap.525", %"class.blink::HeapObserverSet", %"class.blink::Member.539", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.541", i32, i8, i8, %"class.blink::WeakMember.543", %"class.blink::Member.544" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.12", %"class.blink::Member.12" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.12", %"class.blink::Member.14", %"class.blink::Member.12", %"class.blink::Member.12", %"class.blink::Member.16" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.20", %"class.blink::Member.22", %"class.blink::Member.14", %"class.blink::Member.24", %"class.blink::Member.24", %"class.blink::Member.62", %"class.blink::Member.64", %"class.blink::Member.66", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.71", %"class.blink::HeapVector.73" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.28" }
%"class.blink::HeapHashMap.28" = type { %"class.WTF::HashMap.31" }
%"class.WTF::HashMap.31" = type { %"class.WTF::HashTable.32" }
%"class.WTF::HashTable.32" = type <{ %"struct.WTF::KeyValuePair.34"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.34" = type { %"class.WTF::AtomicString", %"class.blink::Member.35" }
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.39", i32, %"class.blink::HeapVector" }
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.68" }
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::HeapHashMap.70"* }
%"class.blink::HeapHashMap.70" = type opaque
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.73" = type { %"class.WTF::Vector.76" }
%"class.WTF::Vector.76" = type { %"class.WTF::VectorBuffer.77" }
%"class.WTF::VectorBuffer.77" = type { %"class.WTF::VectorBufferBase.78" }
%"class.WTF::VectorBufferBase.78" = type { %"class.blink::Member.79"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.82" }
%"class.blink::HeapHashMap.82" = type { %"class.WTF::HashMap.85" }
%"class.WTF::HashMap.85" = type { %"class.WTF::HashTable.86" }
%"class.WTF::HashTable.86" = type <{ %"struct.WTF::KeyValuePair.88"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.88" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.89" = type { %"class.WTF::VectorBuffer.90" }
%"class.WTF::VectorBuffer.90" = type { %"class.WTF::VectorBufferBase.91" }
%"class.WTF::VectorBufferBase.91" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.92 }
%class.scoped_refptr.92 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.93" }
%"class.blink::Member.100" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.562", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.603", i32, i8, [3 x i8], %"class.blink::HeapVector.605", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.613", %"class.blink::Member.615", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.624", %"class.blink::Member.630", %"class.blink::Member.632", i8, [7 x i8] }>
%"class.blink::Supplementable.562" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.563" }
%"class.blink::HeapHashMap.563" = type { %"class.WTF::HashMap.566" }
%"class.WTF::HashMap.566" = type { %"class.WTF::HashTable.567" }
%"class.WTF::HashTable.567" = type <{ %"struct.WTF::KeyValuePair.569"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.569" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.578" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.570" }
%"class.blink::HeapObserverSet.570" = type { i32, [4 x i8], %"class.blink::HeapHashSet.571" }
%"class.blink::HeapHashSet.571" = type { %"class.WTF::HashSet.574" }
%"class.WTF::HashSet.574" = type { %"class.WTF::HashTable.575" }
%"class.WTF::HashTable.575" = type <{ %"class.blink::WeakMember.577"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.577" = type opaque
%"class.blink::Supplementable.578" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.579" }
%"class.blink::HeapHashMap.579" = type { %"class.WTF::HashMap.582" }
%"class.WTF::HashMap.582" = type { %"class.WTF::HashTable.583" }
%"class.WTF::HashTable.583" = type <{ %"struct.WTF::KeyValuePair.585"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.585" = type { i8*, %"class.blink::Member.1139" }
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1141" }
%"class.blink::Member.1141" = type { %"class.blink::MemberBase.1142" }
%"class.blink::MemberBase.1142" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.586, %"class.std::__1::unique_ptr.587", %"class.std::__1::unique_ptr.587", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593", %"class.blink::Member.102", i32, [4 x i8], %"class.WTF::HashSet.599", i32, i32 }
%class.scoped_refptr.586 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.599" = type { %"class.WTF::HashTable.600" }
%"class.WTF::HashTable.600" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.605" = type { %"class.WTF::Vector.608" }
%"class.WTF::Vector.608" = type { %"class.WTF::VectorBuffer.609" }
%"class.WTF::VectorBuffer.609" = type { %"class.WTF::VectorBufferBase.610" }
%"class.WTF::VectorBufferBase.610" = type { %"class.blink::Member.611"*, i32, i32 }
%"class.blink::Member.611" = type opaque
%"class.blink::Member.613" = type { %"class.blink::MemberBase.614" }
%"class.blink::MemberBase.614" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.615" = type { %"class.blink::MemberBase.616" }
%"class.blink::MemberBase.616" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.617", i32, i32 }
%"class.blink::HeapHashMap.617" = type { %"class.WTF::HashMap.620" }
%"class.WTF::HashMap.620" = type { %"class.WTF::HashTable.621" }
%"class.WTF::HashTable.621" = type <{ %"struct.WTF::KeyValuePair.623"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.623" = type opaque
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.630" = type { %"class.blink::MemberBase.631" }
%"class.blink::MemberBase.631" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.632" = type { %"class.blink::MemberBase.633" }
%"class.blink::MemberBase.633" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.104" = type { %"class.blink::MemberBase.105" }
%"class.blink::MemberBase.105" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.106" = type { %"class.blink::MemberBase.107" }
%"class.blink::MemberBase.107" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.110" = type { %"class.blink::MemberBase.111" }
%"class.blink::MemberBase.111" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.123 }
%class.scoped_refptr.123 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.124" = type { %"class.WTF::VectorBuffer.125" }
%"class.WTF::VectorBuffer.125" = type { %"class.WTF::VectorBufferBase.126" }
%"class.WTF::VectorBufferBase.126" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.127 }
%class.scoped_refptr.127 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.335" }
%"class.blink::HeapHashMap.335" = type { %"class.WTF::HashMap.338" }
%"class.WTF::HashMap.338" = type { %"class.WTF::HashTable.339" }
%"class.WTF::HashTable.339" = type <{ %"struct.WTF::KeyValuePair.341"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.341" = type opaque
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.346" }
%"class.WTF::HashTable.346" = type <{ %"class.blink::WeakMember.348"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.348" = type opaque
%"class.blink::HeapHashSet.349" = type { %"class.WTF::HashSet.352" }
%"class.WTF::HashSet.352" = type { %"class.WTF::HashTable.353" }
%"class.WTF::HashTable.353" = type <{ %"class.blink::WeakMember.355"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.355" = type opaque
%"class.blink::Member.356" = type { %"class.blink::MemberBase.357" }
%"class.blink::MemberBase.357" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.358" = type { %"class.blink::MemberBase.359" }
%"class.blink::MemberBase.359" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.360" = type { %"class.blink::MemberBase.361" }
%"class.blink::MemberBase.361" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.366" = type { %"class.WTF::HashMap.369" }
%"class.WTF::HashMap.369" = type { %"class.WTF::HashTable.370" }
%"class.WTF::HashTable.370" = type <{ %"struct.WTF::KeyValuePair.372"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.372" = type opaque
%"class.WTF::Vector.373" = type { %"class.WTF::VectorBuffer.374" }
%"class.WTF::VectorBuffer.374" = type { %"class.WTF::VectorBufferBase.375" }
%"class.WTF::VectorBufferBase.375" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.39" = type { %"class.blink::MemberBase.40" }
%"class.blink::MemberBase.40" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.42" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.41 }
%class.scoped_refptr.41 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.46", %"class.blink::Member.48", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.46" = type { %"class.WTF::SingleThreadedBitField.47" }
%"class.WTF::SingleThreadedBitField.47" = type { i32 }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.52 }
%class.scoped_refptr.52 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.53", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.53" = type { %"class.base::RefCounted.54" }
%"class.base::RefCounted.54" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.384" = type { %"class.WTF::Vector.387" }
%"class.WTF::Vector.387" = type { %"class.WTF::VectorBuffer.388" }
%"class.WTF::VectorBuffer.388" = type { %"class.WTF::VectorBufferBase.389" }
%"class.WTF::VectorBufferBase.389" = type { %"class.blink::Member.390"*, i32, i32 }
%"class.blink::Member.390" = type opaque
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.398" = type { %"class.WTF::HashSet.401" }
%"class.WTF::HashSet.401" = type { %"class.WTF::HashTable.402" }
%"class.WTF::HashTable.402" = type <{ %"class.blink::WeakMember.404"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.404" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.405", i32, [4 x i8] }>
%"class.WTF::Vector.405" = type { %"class.WTF::VectorBuffer.406" }
%"class.WTF::VectorBuffer.406" = type { %"class.WTF::VectorBufferBase.407" }
%"class.WTF::VectorBufferBase.407" = type { %"struct.std::__1::pair.408"*, i32, i32 }
%"struct.std::__1::pair.408" = type opaque
%"class.blink::Member.411" = type { %"class.blink::MemberBase.412" }
%"class.blink::MemberBase.412" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.413" = type { %"class.WTF::VectorBuffer.414" }
%"class.WTF::VectorBuffer.414" = type { %"class.WTF::VectorBufferBase.415" }
%"class.WTF::VectorBufferBase.415" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.39"*, i32, i32 }
%"class.blink::HeapVector.424" = type { %"class.WTF::Vector.427" }
%"class.WTF::Vector.427" = type { %"class.WTF::VectorBuffer.428" }
%"class.WTF::VectorBuffer.428" = type { %"class.WTF::VectorBufferBase.429" }
%"class.WTF::VectorBufferBase.429" = type { %"class.blink::Member.430"*, i32, i32 }
%"class.blink::Member.430" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.22" }
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.442" = type { %"class.WTF::HashTable.443" }
%"class.WTF::HashTable.443" = type <{ %"struct.WTF::KeyValuePair.446"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.446" = type opaque
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.332", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.323, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.323 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.324" }>
%"class.base::RefCountedThreadSafe.324" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.325 }
%class.scoped_refptr.325 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.326", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.326" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.327" }
%"struct.std::__1::atomic.327" = type { %"struct.std::__1::__atomic_base.328" }
%"struct.std::__1::__atomic_base.328" = type { %"struct.std::__1::__atomic_base.329" }
%"struct.std::__1::__atomic_base.329" = type { %"struct.std::__1::__cxx_atomic_impl.330" }
%"struct.std::__1::__cxx_atomic_impl.330" = type { %"struct.std::__1::__cxx_atomic_base_impl.331" }
%"struct.std::__1::__cxx_atomic_base_impl.331" = type { i8 }
%"class.blink::WeakMember.332" = type { %"class.blink::MemberBase.23" }
%"class.blink::HeapHashSet.455" = type { %"class.WTF::HashSet.458" }
%"class.WTF::HashSet.458" = type { %"class.WTF::HashTable.459" }
%"class.WTF::HashTable.459" = type <{ %"class.blink::Member.461"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.461" = type opaque
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.481", %"class.WTF::HashSet.481", %"class.WTF::HashSet.481", %"class.WTF::HashSet.481", %"class.WTF::HashSet.481", %"class.WTF::HashSet.481", i32, [4 x i8], %"class.WTF::HashMap.485", %"class.WTF::HashMap.485", %"class.WTF::HashMap.485", %"class.WTF::HashMap.485", %"class.WTF::HashMap.485", %"class.WTF::HashMap.485", %"class.WTF::HashMap.485", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.481" = type { %"class.WTF::HashTable.482" }
%"class.WTF::HashTable.482" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.485" = type { %"class.WTF::HashTable.486" }
%"class.WTF::HashTable.486" = type <{ %"struct.WTF::KeyValuePair.489"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.489" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.501" = type { %"class.WTF::VectorBuffer.502" }
%"class.WTF::VectorBuffer.502" = type { %"class.WTF::VectorBufferBase.503" }
%"class.WTF::VectorBufferBase.503" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.506" = type { %"class.WTF::HashMap.509" }
%"class.WTF::HashMap.509" = type { %"class.WTF::HashTable.510" }
%"class.WTF::HashTable.510" = type <{ %"struct.WTF::KeyValuePair.512"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.512" = type opaque
%"class.blink::Member.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.515" = type { %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.525" = type { %"class.WTF::HashMap.528" }
%"class.WTF::HashMap.528" = type { %"class.WTF::HashTable.529" }
%"class.WTF::HashTable.529" = type <{ %"struct.WTF::KeyValuePair.531"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.531" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.532" }
%"class.blink::HeapHashSet.532" = type { %"class.WTF::HashSet.535" }
%"class.WTF::HashSet.535" = type { %"class.WTF::HashTable.536" }
%"class.WTF::HashTable.536" = type <{ %"class.blink::WeakMember.538"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.538" = type opaque
%"class.blink::Member.539" = type { %"class.blink::MemberBase.540" }
%"class.blink::MemberBase.540" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.22", %"class.blink::HeapHashSet.548", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.555", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.548" = type { %"class.WTF::HashSet.551" }
%"class.WTF::HashSet.551" = type { %"class.WTF::HashTable.552" }
%"class.WTF::HashTable.552" = type <{ %"class.blink::Member.554"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.554" = type opaque
%"class.blink::HeapTaskRunnerTimer.555" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.556", { i64, i64 } }
%"class.blink::WeakMember.556" = type { %"class.blink::MemberBase.542" }
%"class.blink::WeakMember.543" = type { %"class.blink::MemberBase.13" }
%"class.blink::Member.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1056", %"class.std::__1::unique_ptr.1058" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.699", %"class.blink::DataRef.772", %"class.blink::DataRef.776", %"class.blink::DataRef.976", %"class.blink::DataRef.1039", %"class.blink::DataRef.1043", %"class.blink::DataRef.1047", %"class.blink::DataRef.1051", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.634 }
%class.scoped_refptr.634 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.635", %"class.blink::DataRef.637", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.635" = type { %"class.base::RefCounted.636" }
%"class.base::RefCounted.636" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.637" = type { %class.scoped_refptr.638 }
%class.scoped_refptr.638 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.639", %"class.blink::Font" }
%"class.WTF::RefCounted.639" = type { %"class.base::RefCounted.640" }
%"class.base::RefCounted.640" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.672 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.642, %class.scoped_refptr.650, %class.scoped_refptr.660, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.671 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.641 }
%class.scoped_refptr.641 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1073", [4 x i8] }>
%"class.WTF::RefCounted.1073" = type { %"class.base::RefCounted.1074" }
%"class.base::RefCounted.1074" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.642 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.648", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.643" }
%"class.WTF::Vector.643" = type { %"class.WTF::VectorBuffer.644" }
%"class.WTF::VectorBuffer.644" = type { %"class.WTF::VectorBufferBase.645" }
%"class.WTF::VectorBufferBase.645" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.648" = type { %"class.base::RefCounted.649" }
%"class.base::RefCounted.649" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.650 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.651", %"class.WTF::RefCounted.658", [4 x i8] }>
%"class.blink::FontSettings.651" = type { %"class.WTF::Vector.652" }
%"class.WTF::Vector.652" = type { %"class.WTF::VectorBuffer.653" }
%"class.WTF::VectorBuffer.653" = type { %"class.WTF::VectorBufferBase.654" }
%"class.WTF::VectorBufferBase.654" = type { %"class.blink::FontTagValuePair.655"*, i32, i32 }
%"class.blink::FontTagValuePair.655" = type { i32, float }
%"class.WTF::RefCounted.658" = type { %"class.base::RefCounted.659" }
%"class.base::RefCounted.659" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.660 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.661", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.668, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.661" = type { %"class.base::RefCounted.662" }
%"class.base::RefCounted.662" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.668 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.669", [4 x i8] }>
%"class.WTF::RefCounted.669" = type { %"class.base::RefCounted.670" }
%"class.base::RefCounted.670" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.671 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.672 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.673", %"class.WTF::Vector.675", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.673" = type { %"class.base::RefCounted.674" }
%"class.base::RefCounted.674" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.675" = type { %"class.WTF::VectorBuffer.676" }
%"class.WTF::VectorBuffer.676" = type { %"class.WTF::VectorBufferBase.677", [8 x i8] }
%"class.WTF::VectorBufferBase.677" = type { %class.scoped_refptr.678*, i32, i32 }
%class.scoped_refptr.678 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.679", [4 x i8] }>
%"class.WTF::RefCounted.679" = type { %"class.base::RefCounted.680" }
%"class.base::RefCounted.680" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.685", %class.scoped_refptr.692, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.679" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.683 }
%union.anon.683 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.684, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.93" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.93" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.327" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.684 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.685" = type { %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.687" }
%"struct.std::__1::__compressed_pair_elem.687" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.688, %class.scoped_refptr.688 }
%class.scoped_refptr.688 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.692 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.693", [4 x i8] }>
%"class.WTF::RefCounted.693" = type { %"class.base::RefCounted.694" }
%"class.base::RefCounted.694" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.695" }
%"class.blink::PersistentBase.695" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.696" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.696" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.697 }
%class.scoped_refptr.697 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.698, i8, i8, i8, i8 }>
%union.anon.698 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.699" = type { %class.scoped_refptr.700 }
%class.scoped_refptr.700 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.701", [4 x i8], %"class.blink::DataRef.703", %"class.blink::DataRef.737", %"class.WTF::Vector.741", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.745, %class.scoped_refptr.754, %"class.blink::Persistent.762", %"class.blink::Persistent.764", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.701" = type { %"class.base::RefCounted.702" }
%"class.base::RefCounted.702" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.703" = type { %class.scoped_refptr.704 }
%class.scoped_refptr.704 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.705", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.707, %class.scoped_refptr.714, %"class.blink::Persistent.724", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.705" = type { %"class.base::RefCounted.706" }
%"class.base::RefCounted.706" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.707 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.708", %"class.WTF::Vector.709" }
%"class.base::RefCountedThreadSafe.708" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.709" = type { %"class.WTF::VectorBuffer.710" }
%"class.WTF::VectorBuffer.710" = type { %"class.WTF::VectorBufferBase.711" }
%"class.WTF::VectorBufferBase.711" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.714 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.715", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.715" = type { %"class.base::RefCounted.716" }
%"class.base::RefCounted.716" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.717", %"class.blink::Persistent.722" }
%"class.WTF::HashMap.717" = type { %"class.WTF::HashTable.718" }
%"class.WTF::HashTable.718" = type <{ %"struct.WTF::KeyValuePair.721"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.721" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1088 }
%class.scoped_refptr.1088 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1089", %"class.WTF::Vector.959", %"class.WTF::Vector.1091", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1089" = type { %"class.base::RefCounted.1090" }
%"class.base::RefCounted.1090" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.959" = type { %"class.WTF::VectorBuffer.960" }
%"class.WTF::VectorBuffer.960" = type { %"class.WTF::VectorBufferBase.961" }
%"class.WTF::VectorBufferBase.961" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1091" = type { %"class.WTF::VectorBuffer.1092" }
%"class.WTF::VectorBuffer.1092" = type { %"class.WTF::VectorBufferBase.1093" }
%"class.WTF::VectorBufferBase.1093" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1094 }
%union.anon.1094 = type { double }
%"class.blink::Persistent.722" = type { %"class.blink::PersistentBase.723" }
%"class.blink::PersistentBase.723" = type { %"class.blink::HeapHashMap.4"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.724" = type { %"class.blink::PersistentBase.725" }
%"class.blink::PersistentBase.725" = type { %"class.blink::HeapVector.726"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.726" = type { %"class.WTF::Vector.729" }
%"class.WTF::Vector.729" = type { %"class.WTF::VectorBuffer.730" }
%"class.WTF::VectorBuffer.730" = type { %"class.WTF::VectorBufferBase.731" }
%"class.WTF::VectorBufferBase.731" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.732", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.732" = type { %"class.blink::MemberBase.733" }
%"class.blink::MemberBase.733" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.737" = type { %class.scoped_refptr.738 }
%class.scoped_refptr.738 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.739", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.739" = type { %"class.base::RefCounted.740" }
%"class.base::RefCounted.740" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.741" = type { %"class.WTF::VectorBuffer.742" }
%"class.WTF::VectorBuffer.742" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.745 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.746", %"class.WTF::Vector.748" }
%"class.WTF::RefCounted.746" = type { %"class.base::RefCounted.747" }
%"class.base::RefCounted.747" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.748" = type { %"class.WTF::VectorBuffer.749" }
%"class.WTF::VectorBuffer.749" = type { %"class.WTF::VectorBufferBase.750" }
%"class.WTF::VectorBufferBase.750" = type { %"struct.std::__1::pair.751"*, i32, i32 }
%"struct.std::__1::pair.751" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.754 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.755", [4 x i8], %"class.WTF::Vector.757" }
%"class.WTF::RefCounted.755" = type { %"class.base::RefCounted.756" }
%"class.base::RefCounted.756" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.757" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.759", [28 x i8] }>
%"class.WTF::VectorBufferBase.759" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.762" = type { %"class.blink::PersistentBase.763" }
%"class.blink::PersistentBase.763" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.764" = type { %"class.blink::PersistentBase.765" }
%"class.blink::PersistentBase.765" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.768", %"class.blink::Member.770" }
%"class.blink::Member.768" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.770" = type { %"class.blink::MemberBase.771" }
%"class.blink::MemberBase.771" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.772" = type { %class.scoped_refptr.773 }
%class.scoped_refptr.773 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.774", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.774" = type { %"class.base::RefCounted.775" }
%"class.base::RefCounted.775" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.776" = type { %class.scoped_refptr.777 }
%class.scoped_refptr.777 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.778", [4 x i8], %"class.blink::DataRef.780", %"class.blink::DataRef.846", %"class.blink::TransformOperations", %class.scoped_refptr.754, %"class.blink::Persistent.970", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.778" = type { %"class.base::RefCounted.779" }
%"class.base::RefCounted.779" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.780" = type { %class.scoped_refptr.781 }
%class.scoped_refptr.781 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.782", [4 x i8], %"class.blink::DataRef.784", %"class.blink::Persistent.822", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.782" = type { %"class.base::RefCounted.783" }
%"class.base::RefCounted.783" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.784" = type { %class.scoped_refptr.785 }
%class.scoped_refptr.785 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.786", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.804, %class.scoped_refptr.807, %class.scoped_refptr.810, %class.scoped_refptr.813, %class.scoped_refptr.814, %class.scoped_refptr.815, %"class.blink::Persistent.822", %"class.blink::Persistent.837", %"class.absl::optional.841", %"class.absl::optional.841", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.786" = type { %"class.base::RefCounted.787" }
%"class.base::RefCounted.787" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.788", %"class.std::__1::unique_ptr.793" }
%"class.WTF::Vector.788" = type { %"class.WTF::VectorBuffer.789" }
%"class.WTF::VectorBuffer.789" = type { %"class.WTF::VectorBufferBase.790" }
%"class.WTF::VectorBufferBase.790" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.793" = type { %"class.std::__1::__compressed_pair.794" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.796", %"class.WTF::Vector.788", i32, i32 }
%"class.WTF::Vector.796" = type { %"class.WTF::VectorBuffer.797" }
%"class.WTF::VectorBuffer.797" = type { %"class.WTF::VectorBufferBase.798" }
%"class.WTF::VectorBufferBase.798" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.804 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.805", [4 x i8] }>
%"class.WTF::RefCounted.805" = type { %"class.base::RefCounted.806" }
%"class.base::RefCounted.806" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.807 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.808", [4 x i8] }>
%"class.WTF::RefCounted.808" = type { %"class.base::RefCounted.809" }
%"class.base::RefCounted.809" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.810 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.811" }>
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.813 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.815 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.816", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.816" = type { %"class.base::RefCounted.817" }
%"class.base::RefCounted.817" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.818" }
%"class.blink::DataRef.818" = type { %class.scoped_refptr.819 }
%class.scoped_refptr.819 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.762", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.820" }
%"class.WTF::RefCounted.820" = type { %"class.base::RefCounted.821" }
%"class.base::RefCounted.821" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.837" = type { %"class.blink::PersistentBase.838" }
%"class.blink::PersistentBase.838" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.807, %"class.blink::Member.732", i32, [4 x i8] }>
%"class.absl::optional.841" = type { %"class.absl::optional_internal::optional_data.842" }
%"class.absl::optional_internal::optional_data.842" = type { %"class.absl::optional_internal::optional_data_base.843" }
%"class.absl::optional_internal::optional_data_base.843" = type { %"class.absl::optional_internal::optional_data_dtor_base.844" }
%"class.absl::optional_internal::optional_data_dtor_base.844" = type { i8, [3 x i8], %union.anon.845 }
%union.anon.845 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.822" = type { %"class.blink::PersistentBase.823" }
%"class.blink::PersistentBase.823" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.826" }
%"class.blink::HeapVector.826" = type { %"class.WTF::Vector.829" }
%"class.WTF::Vector.829" = type { %"class.WTF::VectorBuffer.830" }
%"class.WTF::VectorBuffer.830" = type { %"class.WTF::VectorBufferBase.831" }
%"class.WTF::VectorBufferBase.831" = type { %"class.blink::Member.832"*, i32, i32 }
%"class.blink::Member.832" = type { %"class.blink::MemberBase.833" }
%"class.blink::MemberBase.833" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.846" = type { %class.scoped_refptr.847 }
%class.scoped_refptr.847 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.848", %"class.blink::DataRef.850", %"class.blink::DataRef.854", %"class.blink::DataRef.863", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.882", %"class.std::__1::unique_ptr.893", %"class.std::__1::unique_ptr.931", %"class.std::__1::unique_ptr.942", %"class.std::__1::unique_ptr.953", %"class.WTF::Vector.959", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.848" = type { %"class.base::RefCounted.849" }
%"class.base::RefCounted.849" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.850" = type { %class.scoped_refptr.851 }
%class.scoped_refptr.851 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.852", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.854" = type { %class.scoped_refptr.855 }
%class.scoped_refptr.855 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.856", [4 x i8], %"class.WTF::Vector.858", i8, [7 x i8] }>
%"class.WTF::RefCounted.856" = type { %"class.base::RefCounted.857" }
%"class.base::RefCounted.857" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.858" = type { %"class.WTF::VectorBuffer.859" }
%"class.WTF::VectorBuffer.859" = type { %"class.WTF::VectorBufferBase.860" }
%"class.WTF::VectorBufferBase.860" = type { i32*, i32, i32 }
%"class.blink::DataRef.863" = type { %class.scoped_refptr.864 }
%class.scoped_refptr.864 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.865", [4 x i8], %"class.WTF::HashMap.867", %"class.WTF::HashMap.867", %"class.WTF::HashMap.867", %"class.WTF::HashMap.867", %"class.WTF::HashMap.867", %"class.WTF::HashMap.867", %"class.WTF::HashMap.872", %"class.WTF::HashMap.872", %"class.WTF::HashMap.872", %"class.WTF::HashMap.872", %"class.WTF::HashMap.877", %"class.WTF::Vector.788", %"class.WTF::Vector.788", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.865" = type { %"class.base::RefCounted.866" }
%"class.base::RefCounted.866" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.867" = type { %"class.WTF::HashTable.868" }
%"class.WTF::HashTable.868" = type <{ %"struct.WTF::KeyValuePair.871"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.871" = type { %"class.WTF::String", %"class.WTF::Vector.1143" }
%"class.WTF::Vector.1143" = type { %"class.WTF::VectorBuffer.1144" }
%"class.WTF::VectorBuffer.1144" = type { %"class.WTF::VectorBufferBase.1145" }
%"class.WTF::VectorBufferBase.1145" = type { i64*, i32, i32 }
%"class.WTF::HashMap.872" = type { %"class.WTF::HashTable.873" }
%"class.WTF::HashTable.873" = type <{ %"struct.WTF::KeyValuePair.876"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.876" = type { i64, %"class.WTF::Vector.959" }
%"class.WTF::HashMap.877" = type { %"class.WTF::HashTable.878" }
%"class.WTF::HashTable.878" = type <{ %"struct.WTF::KeyValuePair.881"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.881" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.882" = type { %"class.std::__1::__compressed_pair.883" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.884" }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.885" }
%"class.WTF::HashMap.885" = type { %"class.WTF::HashTable.886" }
%"class.WTF::HashTable.886" = type <{ %"struct.WTF::KeyValuePair.889"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.889" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1148", %"class.absl::optional.1148", %"class.absl::optional.1148" }
%"class.absl::optional.1148" = type { %"class.absl::optional_internal::optional_data.1149" }
%"class.absl::optional_internal::optional_data.1149" = type { %"class.absl::optional_internal::optional_data_base.1150" }
%"class.absl::optional_internal::optional_data_base.1150" = type { %"class.absl::optional_internal::optional_data_dtor_base.1151" }
%"class.absl::optional_internal::optional_data_dtor_base.1151" = type { i8, %union.anon.1152 }
%union.anon.1152 = type { i32 }
%"class.std::__1::unique_ptr.893" = type { %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.895" }
%"struct.std::__1::__compressed_pair_elem.895" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.741", %"class.WTF::Vector.908", %"class.WTF::Vector.896", %"class.WTF::Vector.913", %"class.WTF::Vector.918", %"class.WTF::Vector.923" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.896", %"class.WTF::Vector.896", %"class.WTF::Vector.901" }
%"class.WTF::Vector.901" = type { %"class.WTF::VectorBuffer.902" }
%"class.WTF::VectorBuffer.902" = type { %"class.WTF::VectorBufferBase.903" }
%"class.WTF::VectorBufferBase.903" = type { %class.scoped_refptr.904*, i32, i32 }
%class.scoped_refptr.904 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.905" }
%"class.base::RefCountedThreadSafe.905" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.908" = type { %"class.WTF::VectorBuffer.909" }
%"class.WTF::VectorBuffer.909" = type { %"class.WTF::VectorBufferBase.910" }
%"class.WTF::VectorBufferBase.910" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.896" = type { %"class.WTF::VectorBuffer.897" }
%"class.WTF::VectorBuffer.897" = type { %"class.WTF::VectorBufferBase.898" }
%"class.WTF::VectorBufferBase.898" = type { double*, i32, i32 }
%"class.WTF::Vector.913" = type { %"class.WTF::VectorBuffer.914" }
%"class.WTF::VectorBuffer.914" = type { %"class.WTF::VectorBufferBase.915" }
%"class.WTF::VectorBufferBase.915" = type { i32*, i32, i32 }
%"class.WTF::Vector.918" = type { %"class.WTF::VectorBuffer.919" }
%"class.WTF::VectorBuffer.919" = type { %"class.WTF::VectorBufferBase.920" }
%"class.WTF::VectorBufferBase.920" = type { i32*, i32, i32 }
%"class.WTF::Vector.923" = type { %"class.WTF::VectorBuffer.924" }
%"class.WTF::VectorBuffer.924" = type { %"class.WTF::VectorBufferBase.925" }
%"class.WTF::VectorBufferBase.925" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.934" }
%"class.WTF::Vector.934" = type { %"class.WTF::VectorBuffer.935" }
%"class.WTF::VectorBuffer.935" = type { %"class.WTF::VectorBufferBase.936" }
%"class.WTF::VectorBufferBase.936" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.942" = type { %"class.std::__1::__compressed_pair.943" }
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.944" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.945" }
%"class.WTF::Vector.945" = type { %"class.WTF::VectorBuffer.946" }
%"class.WTF::VectorBuffer.946" = type { %"class.WTF::VectorBufferBase.947" }
%"class.WTF::VectorBufferBase.947" = type { %"class.blink::Persistent.762"*, i32, i32 }
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.762", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.964" }
%"class.WTF::Vector.964" = type { %"class.WTF::VectorBuffer.965" }
%"class.WTF::VectorBuffer.965" = type { %"class.WTF::VectorBufferBase.966" }
%"class.WTF::VectorBufferBase.966" = type { %class.scoped_refptr.967*, i32, i32 }
%class.scoped_refptr.967 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.811", [4 x i8] }>
%"class.blink::Persistent.970" = type { %"class.blink::PersistentBase.971" }
%"class.blink::PersistentBase.971" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.974" }
%"class.blink::Member.974" = type { %"class.blink::MemberBase.975" }
%"class.blink::MemberBase.975" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.976" = type { %class.scoped_refptr.977 }
%class.scoped_refptr.977 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.978", [4 x i8], %"class.blink::DataRef.980", %"class.blink::DataRef.984", %"class.blink::DataRef.1001", %"class.blink::DataRef.1019", %"class.blink::DataRef.1031", %"class.blink::DataRef.1035", %class.scoped_refptr.1005, i32, [4 x i8] }>
%"class.WTF::RefCounted.978" = type { %"class.base::RefCounted.979" }
%"class.base::RefCounted.979" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.980" = type { %class.scoped_refptr.981 }
%class.scoped_refptr.981 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.982", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.982" = type { %"class.base::RefCounted.983" }
%"class.base::RefCounted.983" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.984" = type { %class.scoped_refptr.985 }
%class.scoped_refptr.985 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.986", %class.scoped_refptr.988, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.986" = type { %"class.base::RefCounted.987" }
%"class.base::RefCounted.987" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.988 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.989", %"class.std::__1::unique_ptr.995", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.808" }>
%"class.std::__1::unique_ptr.989" = type { %"class.std::__1::__compressed_pair.990" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.995" = type { %"class.std::__1::__compressed_pair.996" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::DataRef.1001" = type { %class.scoped_refptr.1002 }
%class.scoped_refptr.1002 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1003", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1003" = type { %"class.base::RefCounted.1004" }
%"class.base::RefCounted.1004" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1005, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1019" = type { %class.scoped_refptr.1020 }
%class.scoped_refptr.1020 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1021", [4 x i8], %class.scoped_refptr.1023, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1021" = type { %"class.base::RefCounted.1022" }
%"class.base::RefCounted.1022" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1023 = type { %"class.base::RefCountedData.1024"* }
%"class.base::RefCountedData.1024" = type { %"class.base::RefCountedThreadSafe.1025", %"class.WTF::Vector.1026" }
%"class.base::RefCountedThreadSafe.1025" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1026" = type { %"class.WTF::VectorBuffer.1027" }
%"class.WTF::VectorBuffer.1027" = type { %"class.WTF::VectorBufferBase.1028" }
%"class.WTF::VectorBufferBase.1028" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1031" = type { %class.scoped_refptr.1032 }
%class.scoped_refptr.1032 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1033", %class.scoped_refptr.1005, %class.scoped_refptr.1005, %class.scoped_refptr.1005 }
%"class.WTF::RefCounted.1033" = type { %"class.base::RefCounted.1034" }
%"class.base::RefCounted.1034" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1035" = type { %class.scoped_refptr.1036 }
%class.scoped_refptr.1036 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1037", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1037" = type { %"class.base::RefCounted.1038" }
%"class.base::RefCounted.1038" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1005 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1006", %"class.blink::Persistent.1008", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1006" = type { %"class.base::RefCounted.1007" }
%"class.base::RefCounted.1007" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1008" = type { %"class.blink::PersistentBase.1009" }
%"class.blink::PersistentBase.1009" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.39", %"class.blink::HeapHashMap.1012" }
%"class.blink::HeapHashMap.1012" = type { %"class.WTF::HashMap.1015" }
%"class.WTF::HashMap.1015" = type { %"class.WTF::HashTable.1016" }
%"class.WTF::HashTable.1016" = type <{ %"struct.WTF::KeyValuePair.1018"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1018" = type opaque
%"class.blink::DataRef.1039" = type { %class.scoped_refptr.1040 }
%class.scoped_refptr.1040 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1041", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1041" = type { %"class.base::RefCounted.1042" }
%"class.base::RefCounted.1042" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1043" = type { %class.scoped_refptr.1044 }
%class.scoped_refptr.1044 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1045", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1045" = type { %"class.base::RefCounted.1046" }
%"class.base::RefCounted.1046" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1047" = type { %class.scoped_refptr.1048 }
%class.scoped_refptr.1048 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1049", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1049" = type { %"class.base::RefCounted.1050" }
%"class.base::RefCounted.1050" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1051" = type { %class.scoped_refptr.1052 }
%class.scoped_refptr.1052 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1053", %class.scoped_refptr.1055 }
%"class.WTF::RefCounted.1053" = type { %"class.base::RefCounted.1054" }
%"class.base::RefCounted.1054" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1055 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1071", %"class.blink::StyleVariables", %class.scoped_refptr.1055 }
%"class.WTF::RefCounted.1071" = type { %"class.base::RefCounted.1072" }
%"class.base::RefCounted.1072" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1056" = type { %"class.base::RefCounted.1057" }
%"class.base::RefCounted.1057" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1061" }
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.WTF::Vector.1064"* }
%"class.WTF::Vector.1064" = type opaque
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::LayoutObject" = type opaque
%"class.blink::HeapVector.1104" = type { %"class.WTF::Vector.1107" }
%"class.WTF::Vector.1107" = type { %"class.WTF::VectorBuffer.1108" }
%"class.WTF::VectorBuffer.1108" = type { %"class.WTF::VectorBufferBase.1109" }
%"class.WTF::VectorBufferBase.1109" = type { %"class.blink::Member.1110"*, i32, i32 }
%"class.blink::Member.1110" = type { %"class.blink::MemberBase.1111" }
%"class.blink::MemberBase.1111" = type { %"class.blink::V8UnionCSSVariableReferenceValueOrString"* }
%"class.blink::V8UnionCSSVariableReferenceValueOrString" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.1114", %"class.WTF::String" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::CSSStyleVariableReferenceValue"* }
%"class.blink::CSSStyleVariableReferenceValue" = type opaque
%"class.blink::CSSPropertyRef" = type { i32, %"class.blink::CustomProperty" }
%"class.blink::CustomProperty" = type { %"class.blink::Variable.base", %"class.WTF::AtomicString", %"class.blink::Member.1079" }
%"class.blink::Variable.base" = type { %"class.blink::Longhand.base" }
%"class.blink::Longhand.base" = type { %"class.blink::CSSProperty.base" }
%"class.blink::CSSProperty.base" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8 }>
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::PropertyRegistration"* }
%"class.blink::PropertyRegistration" = type <{ %"class.blink::CSSSyntaxDefinition", i8, [7 x i8], %"class.blink::Member", %class.scoped_refptr.1088, %"class.WTF::Vector.1098", i8, [7 x i8] }>
%"class.blink::CSSSyntaxDefinition" = type { %"class.WTF::Vector.1083" }
%"class.WTF::Vector.1083" = type { %"class.WTF::VectorBuffer.1084" }
%"class.WTF::VectorBuffer.1084" = type { %"class.WTF::VectorBufferBase.1085" }
%"class.WTF::VectorBufferBase.1085" = type { %"class.blink::CSSSyntaxComponent"*, i32, i32 }
%"class.blink::CSSSyntaxComponent" = type <{ i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.WTF::Vector.1098" = type { %"class.WTF::VectorBuffer.1099" }
%"class.WTF::VectorBuffer.1099" = type { %"class.WTF::VectorBufferBase.1100" }
%"class.WTF::VectorBufferBase.1100" = type { %"class.std::__1::unique_ptr.1101"*, i32, i32 }
%"class.std::__1::unique_ptr.1101" = type opaque
%"class.blink::CSSUnparsedValue" = type { %"class.blink::CSSStyleValue", %"class.blink::HeapVector.1104" }
%"class.blink::CSSStyleValue" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.blink::CSSPropertyName"*, %"class.blink::CSSValue"*)* }
%"class.blink::CSSPropertyName" = type { i32, %"class.WTF::AtomicString" }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.blink::HeapVector.1119" = type { %"class.WTF::Vector.1122" }
%"class.WTF::Vector.1122" = type { %"class.WTF::VectorBuffer.1123" }
%"class.WTF::VectorBuffer.1123" = type { %"class.WTF::VectorBufferBase.1124" }
%"class.WTF::VectorBufferBase.1124" = type { %"struct.std::__1::pair.1125"*, i32, i32 }
%"struct.std::__1::pair.1125" = type { %"class.blink::CSSPropertyName", %"class.blink::Member" }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.1131, %"class.blink::Member.1132", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.1131 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1134" }
%"class.blink::Persistent.1134" = type { %"class.blink::PersistentBase.1135" }
%"class.blink::PersistentBase.1135" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1136" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1136" = type { %"class.v8::TracedReference.1137" }
%"class.v8::TracedReference.1137" = type { %"class.v8::BasicTracedReference.1138" }
%"class.v8::BasicTracedReference.1138" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::HeapHashTableBacking.1194" = type { i8 }
%"class.blink::HeapVectorBacking.1214" = type { i8 }

$_ZN5blink36PrepopulatedComputedStylePropertyMapD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink24StylePropertyMapReadOnly18GetWrapperTypeInfoEv = comdat any

$_ZN5blink15ScriptWrappableD2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_40V8UnionCSSVariableReferenceValueOrStringEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_40V8UnionCSSVariableReferenceValueOrStringEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb = comdat any

$_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS1_12KeyValuePairIS3_NS_6MemberIKNS_8CSSValueEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIS3_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEE14AllocateObjectISK_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS4_NS3_6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS3_13HeapAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS3_13HeapAllocatorEE12ExpandBufferEjPS8_Rb = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS3_13HeapAllocatorEE8RehashToEPS8_jSI_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_12AtomicStringENS1_12KeyValuePairIS3_NS_6MemberIKNS_8CSSValueEEEEENS1_24KeyValuePairKeyExtractorENS1_16AtomicStringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_12AtomicStringENS3_12KeyValuePairIS5_NS_6MemberIKNS_8CSSValueEEEEENS3_24KeyValuePairKeyExtractorENS3_16AtomicStringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS3_N5blink6MemberIKNS5_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSE_IS9_EEEESF_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERS2_PS6_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS8_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERKS1_RPS6_EENS_18HashTableAddResultISH_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS3_13HeapAllocatorEE6ExpandEPS8_ = comdat any

$_ZN3WTF15ConstructTraitsINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEENS_12VectorTraitsIS9_EENS3_13HeapAllocatorEE25ConstructAndNotifyElementIJS4_RKS8_EEEPS9_PvDpOT_ = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS8_EEE14AllocateObjectISC_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsISA_EEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE7GetNameEPKv = comdat any

$_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_ = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink36PrepopulatedComputedStylePropertyMapE = hidden unnamed_addr constant { [20 x i8*], [3 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::PrepopulatedComputedStylePropertyMap"*)* @_ZN5blink36PrepopulatedComputedStylePropertyMapD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::PrepopulatedComputedStylePropertyMap"*, %"class.blink::Visitor"*)* @_ZNK5blink36PrepopulatedComputedStylePropertyMap5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::StylePropertyMapReadOnly"*)* @_ZNK5blink24StylePropertyMapReadOnly18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.blink::CSSStyleValue"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZNK5blink34StylePropertyMapReadOnlyMainThread3getEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (void ()* @_ZNK5blink34StylePropertyMapReadOnlyMainThread6getAllEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZNK5blink34StylePropertyMapReadOnlyMainThread3hasEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (i32 (%"class.blink::PrepopulatedComputedStylePropertyMap"*)* @_ZNK5blink36PrepopulatedComputedStylePropertyMap4sizeEv to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::PrepopulatedComputedStylePropertyMap"*, i32)* @_ZNK5blink36PrepopulatedComputedStylePropertyMap11GetPropertyENS_13CSSPropertyIDE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::PrepopulatedComputedStylePropertyMap"*, %"class.WTF::StringImpl"*)* @_ZNK5blink36PrepopulatedComputedStylePropertyMap17GetCustomPropertyEN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::PrepopulatedComputedStylePropertyMap"*, %"class.std::__1::function"*)* @_ZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNSt3__18functionIFvRKNS_15CSSPropertyNameERKNS_8CSSValueEEEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::PrepopulatedComputedStylePropertyMap"*, %"class.blink::CSSProperty"*)* @_ZNK5blink36PrepopulatedComputedStylePropertyMap25SerializationForShorthandERKNS_11CSSPropertyE to i8*), i8* bitcast (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)* @_ZN5blink34StylePropertyMapReadOnlyMainThread14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE to i8*)], [3 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (%"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* (%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"*)* @_ZThn16_N5blink34StylePropertyMapReadOnlyMainThread14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE to i8*)] }, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink16CSSUnparsedValueE = external unnamed_addr constant { [15 x i8*] }, align 8
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.6 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.7 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_40V8UnionCSSVariableReferenceValueOrStringEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [221 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::V8UnionCSSVariableReferenceValueOrString>, WTF::VectorTraits<blink::Member<blink::V8UnionCSSVariableReferenceValueOrString> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZTVN5blink14CustomPropertyE = external unnamed_addr constant { [25 x i8*] }, align 8
@_ZN5blink24StylePropertyMapReadOnly18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.9 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.11 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_13CSSPropertyIDENS_12KeyValuePairIS4_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [443 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::CSSPropertyID, WTF::KeyValuePair<blink::CSSPropertyID, blink::Member<const blink::CSSValue> >, WTF::KeyValuePairKeyExtractor, WTF::IntHash<blink::CSSPropertyID>, WTF::HashMapValueTraits<WTF::HashTraits<blink::CSSPropertyID>, WTF::HashTraits<blink::Member<const blink::CSSValue> > >, WTF::HashTraits<blink::CSSPropertyID>, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_12AtomicStringENS3_12KeyValuePairIS5_NS_6MemberIKNS_8CSSValueEEEEENS3_24KeyValuePairKeyExtractorENS3_16AtomicStringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS4_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS9_EEEESF_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [418 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::AtomicString, WTF::KeyValuePair<WTF::AtomicString, blink::Member<const blink::CSSValue> >, WTF::KeyValuePairKeyExtractor, WTF::AtomicStringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::AtomicString>, WTF::HashTraits<blink::Member<const blink::CSSValue> > >, WTF::HashTraits<WTF::AtomicString>, blink::HeapAllocator> >]\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.13 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsISA_EEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINSt3__14pairINS1_15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEEENS_12VectorTraitsISA_EEEEEEPKcv = private unnamed_addr constant [251 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<std::__1::pair<blink::CSSPropertyName, blink::Member<const blink::CSSValue> >, WTF::VectorTraits<std::__1::pair<blink::CSSPropertyName, blink::Member<const blink::CSSValue> > > >]\00", align 1

@_ZN5blink36PrepopulatedComputedStylePropertyMapC1ERKNS_8DocumentERKNS_13ComputedStyleERKN3WTF6VectorINS_13CSSPropertyIDELj0ENS7_18PartitionAllocatorEEERKNS8_INS7_12AtomicStringELj0ESA_EE = hidden unnamed_addr alias void (%"class.blink::PrepopulatedComputedStylePropertyMap"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.WTF::Vector.858"*, %"class.WTF::Vector.741"*), void (%"class.blink::PrepopulatedComputedStylePropertyMap"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.WTF::Vector.858"*, %"class.WTF::Vector.741"*)* @_ZN5blink36PrepopulatedComputedStylePropertyMapC2ERKNS_8DocumentERKNS_13ComputedStyleERKN3WTF6VectorINS_13CSSPropertyIDELj0ENS7_18PartitionAllocatorEEERKNS8_INS7_12AtomicStringELj0ESA_EE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink36PrepopulatedComputedStylePropertyMapC2ERKNS_8DocumentERKNS_13ComputedStyleERKN3WTF6VectorINS_13CSSPropertyIDELj0ENS7_18PartitionAllocatorEEERKNS8_INS7_12AtomicStringELj0ESA_EE(%"class.blink::PrepopulatedComputedStylePropertyMap"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.WTF::Vector.858"* nocapture readonly dereferenceable(16), %"class.WTF::Vector.741"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.blink::CSSValue"*, align 8
  %8 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.blink::TraceWrapperV8Reference"* %10 to i64*
  store i64 0, i64* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [3 x i8*] }, { [20 x i8*], [3 x i8*] }* @_ZTVN5blink36PrepopulatedComputedStylePropertyMapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [3 x i8*] }, { [20 x i8*], [3 x i8*] }* @_ZTVN5blink36PrepopulatedComputedStylePropertyMapE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %12 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 1
  %13 = bitcast %"class.blink::HeapHashMap"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false) #8
  %14 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::HeapHashMap.4"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #8
  %16 = getelementptr inbounds %"class.WTF::Vector.858", %"class.WTF::Vector.858"* %3, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %12, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %18, i32 %17) #8
  %19 = getelementptr inbounds %"class.WTF::Vector.741", %"class.WTF::Vector.741"* %4, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.blink::HeapHashMap.4", %"class.blink::HeapHashMap.4"* %14, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS3_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.8"* %21, i32 %20) #8
  %22 = getelementptr inbounds %"class.WTF::Vector.858", %"class.WTF::Vector.858"* %3, i64 0, i32 0, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = load i32, i32* %16, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %23, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %5
  %29 = bitcast i32* %6 to i8*
  %30 = bitcast %"class.blink::CSSValue"** %7 to i8*
  %31 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0
  br label %39

32:                                               ; preds = %67, %5
  %33 = getelementptr inbounds %"class.WTF::Vector.741", %"class.WTF::Vector.741"* %4, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %33, align 8
  %35 = load i32, i32* %19, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %34, i64 %36
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %70, label %71

39:                                               ; preds = %28, %67
  %40 = phi i32* [ %23, %28 ], [ %68, %67 ]
  %41 = load i32, i32* %40, align 4
  %42 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %41) #8
  %43 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %42, i64 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = and i32 %44, 16
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %67

47:                                               ; preds = %39
  %48 = load i32, i32* %40, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29)
  store i32 %48, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  %49 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %48) #8
  %50 = call %"class.blink::CSSValue"* @_ZNK5blink11CSSProperty25CSSValueFromComputedStyleERKNS_13ComputedStyleEPKNS_12LayoutObjectEb(%"class.blink::CSSProperty"* %49, %"class.blink::ComputedStyle"* dereferenceable(104) %2, %"class.blink::LayoutObject"* null, i1 zeroext false) #8
  store %"class.blink::CSSValue"* %50, %"class.blink::CSSValue"** %7, align 8
  %51 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERS2_PS6_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable"* %31, i32* nonnull dereferenceable(4) %6, %"class.blink::CSSValue"** nonnull dereferenceable(8) %7) #8
  %52 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %51, 1
  %53 = and i8 %52, 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %66

55:                                               ; preds = %47
  %56 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %51, 0
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %56, i64 0, i32 1
  %58 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %7, align 8
  %59 = ptrtoint %"class.blink::CSSValue"* %58 to i64
  %60 = bitcast %"class.blink::Member"* %57 to i64*
  store atomic i64 %59, i64* %60 monotonic, align 8
  %61 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %58, i64 0, i32 0
  %65 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %64) #8
  br label %66

66:                                               ; preds = %47, %55, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29)
  br label %67

67:                                               ; preds = %39, %66
  %68 = getelementptr inbounds i32, i32* %40, i64 1
  %69 = icmp eq i32* %68, %26
  br i1 %69, label %32, label %39

70:                                               ; preds = %71, %32
  ret void

71:                                               ; preds = %32, %71
  %72 = phi %"class.WTF::AtomicString"* [ %73, %71 ], [ %34, %32 ]
  call void @_ZN5blink36PrepopulatedComputedStylePropertyMap20UpdateCustomPropertyERKNS_8DocumentERKNS_13ComputedStyleERKN3WTF12AtomicStringE(%"class.blink::PrepopulatedComputedStylePropertyMap"* %0, %"class.blink::Document"* dereferenceable(2848) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %2, %"class.WTF::AtomicString"* dereferenceable(8) %72)
  %73 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %72, i64 1
  %74 = icmp eq %"class.WTF::AtomicString"* %73, %37
  br i1 %74, label %70, label %71
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink36PrepopulatedComputedStylePropertyMap20UpdateNativePropertyERKNS_13ComputedStyleENS_13CSSPropertyIDE(%"class.blink::PrepopulatedComputedStylePropertyMap"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.blink::CSSValue"*, align 8
  store i32 %2, i32* %4, align 4
  %6 = bitcast %"class.blink::CSSValue"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %2) #8
  %8 = tail call %"class.blink::CSSValue"* @_ZNK5blink11CSSProperty25CSSValueFromComputedStyleERKNS_13ComputedStyleEPKNS_12LayoutObjectEb(%"class.blink::CSSProperty"* %7, %"class.blink::ComputedStyle"* dereferenceable(104) %1, %"class.blink::LayoutObject"* null, i1 zeroext false) #8
  store %"class.blink::CSSValue"* %8, %"class.blink::CSSValue"** %5, align 8
  %9 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERS2_PS6_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable"* %9, i32* nonnull dereferenceable(4) %4, %"class.blink::CSSValue"** nonnull dereferenceable(8) %5) #8
  %11 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %10, 1
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %25

14:                                               ; preds = %3
  %15 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %10, 0
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 1
  %17 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %5, align 8
  %18 = ptrtoint %"class.blink::CSSValue"* %17 to i64
  %19 = bitcast %"class.blink::Member"* %16 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %17, i64 0, i32 0
  %24 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %23) #8
  br label %25

25:                                               ; preds = %3, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink36PrepopulatedComputedStylePropertyMap20UpdateCustomPropertyERKNS_8DocumentERKNS_13ComputedStyleERKN3WTF12AtomicStringE(%"class.blink::PrepopulatedComputedStylePropertyMap"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::HeapVector.1104", align 8
  %6 = alloca %"class.blink::CSSPropertyRef", align 8
  %7 = alloca %"class.blink::CSSValue"*, align 8
  %8 = bitcast %"class.blink::CSSPropertyRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0
  call void @_ZN5blink14CSSPropertyRefC1ERKN3WTF6StringERKNS_8DocumentE(%"class.blink::CSSPropertyRef"* nonnull %6, %"class.WTF::String"* dereferenceable(8) %9, %"class.blink::Document"* dereferenceable(2848) %1) #8
  %10 = bitcast %"class.blink::CSSValue"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8
  store %"class.blink::CSSValue"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSValue"*), %"class.blink::CSSValue"** %7, align 8
  %11 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %6, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %17

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %6, i64 0, i32 1
  %16 = bitcast %"class.blink::CustomProperty"* %15 to %"class.blink::CSSProperty"*
  br label %20

17:                                               ; preds = %4
  %18 = and i32 %12, 1023
  %19 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %18) #8
  br label %20

20:                                               ; preds = %14, %17
  %21 = phi %"class.blink::CSSProperty"* [ %16, %14 ], [ %19, %17 ]
  %22 = call %"class.blink::CSSValue"* @_ZNK5blink11CSSProperty25CSSValueFromComputedStyleERKNS_13ComputedStyleEPKNS_12LayoutObjectEb(%"class.blink::CSSProperty"* %21, %"class.blink::ComputedStyle"* dereferenceable(104) %2, %"class.blink::LayoutObject"* null, i1 zeroext false) #8
  store %"class.blink::CSSValue"* %22, %"class.blink::CSSValue"** %7, align 8
  %23 = icmp eq %"class.blink::CSSValue"* %22, null
  br i1 %23, label %24, label %38

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::HeapVector.1104"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 16, i1 false) #8
  %26 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #8
  %27 = bitcast i8* %26 to %"class.blink::CSSUnparsedValue"*
  %28 = bitcast i8* %26 to i32 (...)***
  %29 = getelementptr inbounds i8, i8* %26, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink16CSSUnparsedValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %30 = getelementptr inbounds i8, i8* %26, i64 24
  %31 = bitcast i8* %30 to %"class.WTF::Vector.1107"*
  %32 = getelementptr inbounds %"class.blink::HeapVector.1104", %"class.blink::HeapVector.1104"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_40V8UnionCSSVariableReferenceValueOrStringEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.1107"* %31, %"class.WTF::Vector.1107"* nonnull dereferenceable(16) %32) #8
  %33 = getelementptr inbounds i8, i8* %26, i64 -4
  %34 = bitcast i8* %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = or i16 %35, 1
  store atomic i16 %36, i16* %34 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #8
  %37 = call %"class.blink::CSSValue"* @_ZNK5blink16CSSUnparsedValue10ToCSSValueEv(%"class.blink::CSSUnparsedValue"* %27) #8
  store %"class.blink::CSSValue"* %37, %"class.blink::CSSValue"** %7, align 8
  br label %38

38:                                               ; preds = %20, %24
  %39 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = call { %"struct.WTF::KeyValuePair.10"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERKS1_RPS6_EENS_18HashTableAddResultISH_S8_EEOT0_OT1_(%"class.WTF::HashTable.8"* %39, %"class.WTF::AtomicString"* dereferenceable(8) %3, %"class.blink::CSSValue"** nonnull dereferenceable(8) %7) #8
  %41 = extractvalue { %"struct.WTF::KeyValuePair.10"*, i8 } %40, 1
  %42 = and i8 %41, 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %55

44:                                               ; preds = %38
  %45 = extractvalue { %"struct.WTF::KeyValuePair.10"*, i8 } %40, 0
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %45, i64 0, i32 1
  %47 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %7, align 8
  %48 = ptrtoint %"class.blink::CSSValue"* %47 to i64
  %49 = bitcast %"class.blink::Member"* %46 to i64*
  store atomic i64 %48, i64* %49 monotonic, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %47, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #8
  br label %55

55:                                               ; preds = %38, %44, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8
  %56 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink14CustomPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %6, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #8
  br label %73

73:                                               ; preds = %55, %69, %72
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink36PrepopulatedComputedStylePropertyMap4sizeEv(%"class.blink::PrepopulatedComputedStylePropertyMap"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, %3
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink36PrepopulatedComputedStylePropertyMap11UpdateStyleERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::PrepopulatedComputedStylePropertyMap"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.blink::CSSValue"*, align 8
  %6 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %13
  br i1 %8, label %31, label %15

15:                                               ; preds = %3
  %16 = icmp eq i32 %12, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %15, %21
  %18 = phi %"struct.WTF::KeyValuePair"* [ %22, %21 ], [ %10, %15 ]
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  switch i32 %20, label %24 [
    i32 1548, label %21
    i32 0, label %21
  ]

21:                                               ; preds = %17, %17
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 1
  %23 = icmp eq %"struct.WTF::KeyValuePair"* %22, %14
  br i1 %23, label %31, label %17

24:                                               ; preds = %17, %15
  %25 = phi %"struct.WTF::KeyValuePair"* [ %10, %15 ], [ %18, %17 ]
  %26 = icmp eq %"struct.WTF::KeyValuePair"* %25, %14
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = bitcast i32* %4 to i8*
  %29 = bitcast %"class.blink::CSSValue"** %5 to i8*
  %30 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0
  br label %53

31:                                               ; preds = %21, %74, %84, %81, %3, %24
  %32 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %36 = load %"struct.WTF::KeyValuePair.10"*, %"struct.WTF::KeyValuePair.10"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %36, i64 %39
  br i1 %34, label %86, label %41

41:                                               ; preds = %31
  %42 = icmp eq i32 %38, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %41, %47
  %44 = phi %"struct.WTF::KeyValuePair.10"* [ %48, %47 ], [ %36, %41 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.10"* %44 to i64*
  %46 = load i64, i64* %45, align 8
  switch i64 %46, label %50 [
    i64 -1, label %47
    i64 0, label %47
  ]

47:                                               ; preds = %43, %43
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %44, i64 1
  %49 = icmp eq %"struct.WTF::KeyValuePair.10"* %48, %40
  br i1 %49, label %86, label %43

50:                                               ; preds = %43, %41
  %51 = phi %"struct.WTF::KeyValuePair.10"* [ %36, %41 ], [ %44, %43 ]
  %52 = icmp eq %"struct.WTF::KeyValuePair.10"* %51, %40
  br i1 %52, label %86, label %87

53:                                               ; preds = %27, %84
  %54 = phi %"struct.WTF::KeyValuePair"* [ %25, %27 ], [ %78, %84 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28)
  store i32 %56, i32* %4, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %57 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %56) #8
  %58 = call %"class.blink::CSSValue"* @_ZNK5blink11CSSProperty25CSSValueFromComputedStyleERKNS_13ComputedStyleEPKNS_12LayoutObjectEb(%"class.blink::CSSProperty"* %57, %"class.blink::ComputedStyle"* dereferenceable(104) %2, %"class.blink::LayoutObject"* null, i1 zeroext false) #8
  store %"class.blink::CSSValue"* %58, %"class.blink::CSSValue"** %5, align 8
  %59 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERS2_PS6_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable"* %30, i32* nonnull dereferenceable(4) %4, %"class.blink::CSSValue"** nonnull dereferenceable(8) %5) #8
  %60 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %59, 1
  %61 = and i8 %60, 1
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %74

63:                                               ; preds = %53
  %64 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %59, 0
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 1
  %66 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %5, align 8
  %67 = ptrtoint %"class.blink::CSSValue"* %66 to i64
  %68 = bitcast %"class.blink::Member"* %65 to i64*
  store atomic i64 %67, i64* %68 monotonic, align 8
  %69 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %66, i64 0, i32 0
  %73 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %72) #8
  br label %74

74:                                               ; preds = %53, %63, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28)
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 1
  %76 = icmp eq %"struct.WTF::KeyValuePair"* %75, %14
  br i1 %76, label %31, label %77

77:                                               ; preds = %74, %81
  %78 = phi %"struct.WTF::KeyValuePair"* [ %82, %81 ], [ %75, %74 ]
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %78, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  switch i32 %80, label %84 [
    i32 1548, label %81
    i32 0, label %81
  ]

81:                                               ; preds = %77, %77
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %78, i64 1
  %83 = icmp eq %"struct.WTF::KeyValuePair"* %82, %14
  br i1 %83, label %31, label %77

84:                                               ; preds = %77
  %85 = icmp eq %"struct.WTF::KeyValuePair"* %78, %14
  br i1 %85, label %31, label %53

86:                                               ; preds = %47, %87, %99, %96, %31, %50
  ret void

87:                                               ; preds = %50, %99
  %88 = phi %"struct.WTF::KeyValuePair.10"* [ %93, %99 ], [ %51, %50 ]
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %88, i64 0, i32 0
  call void @_ZN5blink36PrepopulatedComputedStylePropertyMap20UpdateCustomPropertyERKNS_8DocumentERKNS_13ComputedStyleERKN3WTF12AtomicStringE(%"class.blink::PrepopulatedComputedStylePropertyMap"* %0, %"class.blink::Document"* dereferenceable(2848) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %2, %"class.WTF::AtomicString"* dereferenceable(8) %89)
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %88, i64 1
  %91 = icmp eq %"struct.WTF::KeyValuePair.10"* %90, %40
  br i1 %91, label %86, label %92

92:                                               ; preds = %87, %96
  %93 = phi %"struct.WTF::KeyValuePair.10"* [ %97, %96 ], [ %90, %87 ]
  %94 = bitcast %"struct.WTF::KeyValuePair.10"* %93 to i64*
  %95 = load i64, i64* %94, align 8
  switch i64 %95, label %99 [
    i64 -1, label %96
    i64 0, label %96
  ]

96:                                               ; preds = %92, %92
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %93, i64 1
  %98 = icmp eq %"struct.WTF::KeyValuePair.10"* %97, %40
  br i1 %98, label %86, label %92

99:                                               ; preds = %92
  %100 = icmp eq %"struct.WTF::KeyValuePair.10"* %93, %40
  br i1 %100, label %86, label %87
}

declare %"class.blink::CSSValue"* @_ZNK5blink11CSSProperty25CSSValueFromComputedStyleERKNS_13ComputedStyleEPKNS_12LayoutObjectEb(%"class.blink::CSSProperty"*, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink14CSSPropertyRefC1ERKN3WTF6StringERKNS_8DocumentE(%"class.blink::CSSPropertyRef"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

declare %"class.blink::CSSValue"* @_ZNK5blink16CSSUnparsedValue10ToCSSValueEv(%"class.blink::CSSUnparsedValue"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink36PrepopulatedComputedStylePropertyMap11GetPropertyENS_13CSSPropertyIDE(%"class.blink::PrepopulatedComputedStylePropertyMap"* nocapture readonly, i32) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %64, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = shl i32 %1, 15
  %12 = xor i32 %11, -1
  %13 = add i32 %12, %1
  %14 = lshr i32 %13, 10
  %15 = xor i32 %14, %13
  %16 = mul i32 %15, 9
  %17 = lshr i32 %16, 6
  %18 = xor i32 %17, %16
  %19 = shl i32 %18, 11
  %20 = xor i32 %19, -1
  %21 = add i32 %18, %20
  %22 = lshr i32 %21, 16
  %23 = xor i32 %22, %21
  %24 = and i32 %9, %23
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %25
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, %1
  br i1 %29, label %58, label %30

30:                                               ; preds = %6
  %31 = xor i32 %23, -1
  %32 = lshr i32 %21, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  br label %44

44:                                               ; preds = %49, %30
  %45 = phi i32 [ %28, %30 ], [ %56, %49 ]
  %46 = phi i64 [ %25, %30 ], [ %53, %49 ]
  %47 = phi i64 [ 0, %30 ], [ %51, %49 ]
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %64, label %49

49:                                               ; preds = %44
  %50 = icmp eq i64 %47, 0
  %51 = select i1 %50, i64 %43, i64 %47
  %52 = add i64 %51, %46
  %53 = and i64 %52, %10
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %53
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %1
  br i1 %57, label %58, label %44

58:                                               ; preds = %49, %6
  %59 = phi %"struct.WTF::KeyValuePair"* [ %26, %6 ], [ %54, %49 ]
  %60 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 1, i32 0, i32 0
  %63 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %62, align 8
  br label %64

64:                                               ; preds = %44, %2, %58, %61
  %65 = phi %"class.blink::CSSValue"* [ %63, %61 ], [ null, %58 ], [ null, %2 ], [ null, %44 ]
  ret %"class.blink::CSSValue"* %65
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink36PrepopulatedComputedStylePropertyMap17GetCustomPropertyEN3WTF12AtomicStringE(%"class.blink::PrepopulatedComputedStylePropertyMap"* nocapture readonly, %"class.WTF::StringImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.10"*, %"struct.WTF::KeyValuePair.10"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.10"* %4, null
  br i1 %5, label %58, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = and i32 %13, %9
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %4, i64 %15
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %58, label %20

20:                                               ; preds = %6
  %21 = xor i32 %13, -1
  %22 = lshr i32 %12, 31
  %23 = add nsw i32 %22, %21
  %24 = shl i32 %23, 12
  %25 = xor i32 %24, %23
  %26 = lshr i32 %25, 7
  %27 = xor i32 %26, %25
  %28 = shl i32 %27, 2
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 20
  %31 = xor i32 %30, %29
  %32 = or i32 %31, 1
  %33 = zext i32 %32 to i64
  br label %34

34:                                               ; preds = %44, %20
  %35 = phi %"struct.WTF::KeyValuePair.10"* [ %16, %20 ], [ %49, %44 ]
  %36 = phi i64 [ %15, %20 ], [ %48, %44 ]
  %37 = phi i64 [ 0, %20 ], [ %46, %44 ]
  %38 = bitcast %"struct.WTF::KeyValuePair.10"* %35 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = icmp ne i8* %39, inttoptr (i64 -1 to i8*)
  %41 = bitcast i8* %39 to %"class.WTF::StringImpl"*
  %42 = icmp eq %"class.WTF::StringImpl"* %41, %1
  %43 = and i1 %40, %42
  br i1 %43, label %53, label %44

44:                                               ; preds = %34
  %45 = icmp eq i64 %37, 0
  %46 = select i1 %45, i64 %33, i64 %37
  %47 = add i64 %46, %36
  %48 = and i64 %47, %10
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %4, i64 %48
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %58, label %34

53:                                               ; preds = %34
  %54 = icmp eq %"struct.WTF::KeyValuePair.10"* %35, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %35, i64 0, i32 1, i32 0, i32 0
  %57 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %56, align 8
  br label %58

58:                                               ; preds = %44, %2, %6, %53, %55
  %59 = phi %"class.blink::CSSValue"* [ %57, %55 ], [ null, %53 ], [ null, %2 ], [ null, %6 ], [ null, %44 ]
  %60 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #8
  br label %74

74:                                               ; preds = %58, %70, %73
  ret %"class.blink::CSSValue"* %59
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNSt3__18functionIFvRKNS_15CSSPropertyNameERKNS_8CSSValueEEEE(%"class.blink::PrepopulatedComputedStylePropertyMap"* nocapture readonly, %"class.std::__1::function"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapVector.1119", align 8
  %4 = alloca %"class.blink::CSSPropertyName", align 8
  %5 = alloca %"class.blink::CSSPropertyName", align 8
  %6 = bitcast %"class.blink::HeapVector.1119"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.blink::HeapVector.1119", %"class.blink::HeapVector.1119"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HeapVector.1119", %"class.blink::HeapVector.1119"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.blink::HeapVector.1119", %"class.blink::HeapVector.1119"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #8
  %10 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 %17
  br i1 %12, label %36, label %19

19:                                               ; preds = %2
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %19, %25
  %22 = phi %"struct.WTF::KeyValuePair"* [ %26, %25 ], [ %14, %19 ]
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  switch i32 %24, label %28 [
    i32 1548, label %25
    i32 0, label %25
  ]

25:                                               ; preds = %21, %21
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 1
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, %18
  br i1 %27, label %36, label %21

28:                                               ; preds = %21, %19
  %29 = phi %"struct.WTF::KeyValuePair"* [ %14, %19 ], [ %22, %21 ]
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %29, %18
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.blink::CSSPropertyName"* %4 to i8*
  %33 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::HeapVector.1119", %"class.blink::HeapVector.1119"* %3, i64 0, i32 0
  br label %63

36:                                               ; preds = %25, %104, %114, %111, %2, %28
  %37 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %41 = load %"struct.WTF::KeyValuePair.10"*, %"struct.WTF::KeyValuePair.10"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %41, i64 %44
  br i1 %39, label %119, label %46

46:                                               ; preds = %36
  %47 = icmp eq i32 %43, 0
  br i1 %47, label %55, label %48

48:                                               ; preds = %46, %52
  %49 = phi %"struct.WTF::KeyValuePair.10"* [ %53, %52 ], [ %41, %46 ]
  %50 = bitcast %"struct.WTF::KeyValuePair.10"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %55 [
    i64 -1, label %52
    i64 0, label %52
  ]

52:                                               ; preds = %48, %48
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %49, i64 1
  %54 = icmp eq %"struct.WTF::KeyValuePair.10"* %53, %45
  br i1 %54, label %119, label %48

55:                                               ; preds = %48, %46
  %56 = phi %"struct.WTF::KeyValuePair.10"* [ %41, %46 ], [ %49, %48 ]
  %57 = icmp eq %"struct.WTF::KeyValuePair.10"* %56, %45
  %58 = getelementptr inbounds %"class.blink::HeapVector.1119", %"class.blink::HeapVector.1119"* %3, i64 0, i32 0
  br i1 %57, label %119, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.blink::CSSPropertyName"* %5 to i8*
  %61 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 0
  %62 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %132

63:                                               ; preds = %116, %31
  %64 = phi i32 [ 0, %31 ], [ %118, %116 ]
  %65 = phi i32 [ 0, %31 ], [ %117, %116 ]
  %66 = phi %"struct.WTF::KeyValuePair"* [ %29, %31 ], [ %108, %116 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 0
  %68 = load i32, i32* %67, align 8
  store i32 %68, i32* %33, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %34, align 8
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 1
  %70 = icmp eq i32 %65, %64
  br i1 %70, label %71, label %80, !prof !2

71:                                               ; preds = %63
  %72 = add i32 %64, 1
  %73 = lshr i32 %64, 2
  %74 = add i32 %72, %73
  %75 = icmp ugt i32 %74, 4
  %76 = select i1 %75, i32 %74, i32 4
  %77 = icmp ugt i32 %76, %72
  %78 = select i1 %77, i32 %76, i32 %72
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1122"* nonnull %35, i32 %78) #8
  %79 = load i32, i32* %9, align 4
  br label %80

80:                                               ; preds = %63, %71
  %81 = phi i32 [ %79, %71 ], [ %65, %63 ]
  %82 = load %"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"** %7, align 8
  %83 = zext i32 %81 to i64
  %84 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %82, i64 %83
  %85 = bitcast %"struct.std::__1::pair.1125"* %84 to i8*
  %86 = call %"struct.std::__1::pair.1125"* @_ZN3WTF15ConstructTraitsINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEENS_12VectorTraitsIS9_EENS3_13HeapAllocatorEE25ConstructAndNotifyElementIJS4_RKS8_EEEPS9_PvDpOT_(i8* %85, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %4, %"class.blink::Member"* dereferenceable(8) %69) #8
  %87 = load i32, i32* %9, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %9, align 4
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %80
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #8
  br label %104

104:                                              ; preds = %80, %100, %103
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 1
  %106 = icmp eq %"struct.WTF::KeyValuePair"* %105, %18
  br i1 %106, label %36, label %107

107:                                              ; preds = %104, %111
  %108 = phi %"struct.WTF::KeyValuePair"* [ %112, %111 ], [ %105, %104 ]
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %108, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  switch i32 %110, label %114 [
    i32 1548, label %111
    i32 0, label %111
  ]

111:                                              ; preds = %107, %107
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %108, i64 1
  %113 = icmp eq %"struct.WTF::KeyValuePair"* %112, %18
  br i1 %113, label %36, label %107

114:                                              ; preds = %107
  %115 = icmp eq %"struct.WTF::KeyValuePair"* %108, %18
  br i1 %115, label %36, label %116

116:                                              ; preds = %114
  %117 = load i32, i32* %9, align 4
  %118 = load i32, i32* %8, align 8
  br label %63

119:                                              ; preds = %52, %192, %202, %199, %36, %55
  %120 = load %"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"** %7, align 8
  %121 = load i32, i32* %9, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %120, i64 %122
  call fastcc void @"_ZNSt3__16__sortIRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEvT0_SL_T_"(%"struct.std::__1::pair.1125"* %120, %"struct.std::__1::pair.1125"* %123) #8
  %124 = load %"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"** %7, align 8
  %125 = load i32, i32* %9, align 4
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %124, i64 %126
  %128 = icmp eq i32 %125, 0
  br i1 %128, label %204, label %129

129:                                              ; preds = %119
  %130 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1, i32 0
  %131 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0
  br label %205

132:                                              ; preds = %59, %202
  %133 = phi %"struct.WTF::KeyValuePair.10"* [ %56, %59 ], [ %196, %202 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #8
  store i32 1, i32* %61, align 8
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %133, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %62, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %154, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %154

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = zext i32 %144 to i33
  %146 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %145, i33 1) #8
  %147 = extractvalue { i33, i1 } %146, 1
  %148 = extractvalue { i33, i1 } %146, 0
  %149 = icmp slt i33 %148, 0
  %150 = or i1 %147, %149
  br i1 %150, label %151, label %152, !prof !2

151:                                              ; preds = %142
  call void @llvm.trap() #8
  unreachable

152:                                              ; preds = %142
  %153 = trunc i33 %148 to i32
  store i32 %153, i32* %143, align 4
  br label %154

154:                                              ; preds = %132, %137, %152
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %133, i64 0, i32 1
  %156 = load i32, i32* %9, align 4
  %157 = load i32, i32* %8, align 8
  %158 = icmp eq i32 %156, %157
  br i1 %158, label %159, label %168, !prof !2

159:                                              ; preds = %154
  %160 = add i32 %156, 1
  %161 = lshr i32 %156, 2
  %162 = add i32 %160, %161
  %163 = icmp ugt i32 %162, 4
  %164 = select i1 %163, i32 %162, i32 4
  %165 = icmp ugt i32 %164, %160
  %166 = select i1 %165, i32 %164, i32 %160
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1122"* nonnull %58, i32 %166) #8
  %167 = load i32, i32* %9, align 4
  br label %168

168:                                              ; preds = %154, %159
  %169 = phi i32 [ %167, %159 ], [ %156, %154 ]
  %170 = load %"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"** %7, align 8
  %171 = zext i32 %169 to i64
  %172 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %170, i64 %171
  %173 = bitcast %"struct.std::__1::pair.1125"* %172 to i8*
  %174 = call %"struct.std::__1::pair.1125"* @_ZN3WTF15ConstructTraitsINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEENS_12VectorTraitsIS9_EENS3_13HeapAllocatorEE25ConstructAndNotifyElementIJS4_RKS8_EEEPS9_PvDpOT_(i8* %173, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %5, %"class.blink::Member"* dereferenceable(8) %155) #8
  %175 = load i32, i32* %9, align 4
  %176 = add i32 %175, 1
  store i32 %176, i32* %9, align 4
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %168
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #8
  br label %192

192:                                              ; preds = %168, %188, %191
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #8
  %193 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %133, i64 1
  %194 = icmp eq %"struct.WTF::KeyValuePair.10"* %193, %45
  br i1 %194, label %119, label %195

195:                                              ; preds = %192, %199
  %196 = phi %"struct.WTF::KeyValuePair.10"* [ %200, %199 ], [ %193, %192 ]
  %197 = bitcast %"struct.WTF::KeyValuePair.10"* %196 to i64*
  %198 = load i64, i64* %197, align 8
  switch i64 %198, label %202 [
    i64 -1, label %199
    i64 0, label %199
  ]

199:                                              ; preds = %195, %195
  %200 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %196, i64 1
  %201 = icmp eq %"struct.WTF::KeyValuePair.10"* %200, %45
  br i1 %201, label %119, label %195

202:                                              ; preds = %195
  %203 = icmp eq %"struct.WTF::KeyValuePair.10"* %196, %45
  br i1 %203, label %119, label %132

204:                                              ; preds = %205, %119
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret void

205:                                              ; preds = %129, %205
  %206 = phi %"struct.std::__1::pair.1125"* [ %124, %129 ], [ %211, %205 ]
  %207 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %206, i64 0, i32 0
  %208 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %206, i64 0, i32 1, i32 0, i32 0
  %209 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %208, align 8
  %210 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.blink::CSSPropertyName"*, %"class.blink::CSSValue"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.blink::CSSPropertyName"*, %"class.blink::CSSValue"*)** %130, align 8
  call void %210(%"union.std::__1::__function::__policy_storage"* %131, %"class.blink::CSSPropertyName"* dereferenceable(16) %207, %"class.blink::CSSValue"* dereferenceable(3) %209) #8
  %211 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %206, i64 1
  %212 = icmp eq %"struct.std::__1::pair.1125"* %211, %127
  br i1 %212, label %204, label %205
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink36PrepopulatedComputedStylePropertyMap25SerializationForShorthandERKNS_11CSSPropertyE(%"class.blink::PrepopulatedComputedStylePropertyMap"* nocapture readnone, %"class.blink::CSSProperty"* nocapture readnone dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink36PrepopulatedComputedStylePropertyMap5TraceEPNS_7VisitorE(%"class.blink::PrepopulatedComputedStylePropertyMap"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::HeapHashMap"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast %"class.blink::HeapHashMap"* %3 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #8
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #8
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 2
  %20 = bitcast %"class.blink::HeapHashMap.4"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = bitcast %"class.blink::HeapHashMap.4"* %19 to i8**
  %23 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %23, i64 11
  %25 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8** %22) #8
  %26 = icmp eq i64 %21, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %18
  %28 = inttoptr i64 %21 to i8*
  %29 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %30 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, i64 5
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, align 8
  tail call void %32(%"class.blink::Visitor"* %1, i8* nonnull %28, i8* nonnull %28, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #8
  br label %33

33:                                               ; preds = %18, %27
  %34 = getelementptr inbounds %"class.blink::PrepopulatedComputedStylePropertyMap", %"class.blink::PrepopulatedComputedStylePropertyMap"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %34, %"class.blink::Visitor"* %1) #8
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink36PrepopulatedComputedStylePropertyMapD0Ev(%"class.blink::PrepopulatedComputedStylePropertyMap"*) unnamed_addr #4 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink24StylePropertyMapReadOnly18GetWrapperTypeInfoEv(%"class.blink::StylePropertyMapReadOnly"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink24StylePropertyMapReadOnly18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare %"class.blink::CSSStyleValue"* @_ZNK5blink34StylePropertyMapReadOnlyMainThread3getEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

declare void @_ZNK5blink34StylePropertyMapReadOnlyMainThread6getAllEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE() unnamed_addr

declare zeroext i1 @_ZNK5blink34StylePropertyMapReadOnlyMainThread3hasEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

declare %"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* @_ZN5blink34StylePropertyMapReadOnlyMainThread14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Iterable<WTF::String, blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0> >::IterationSource"* @_ZThn16_N5blink34StylePropertyMapReadOnlyMainThread14StartIterationEPNS_11ScriptStateERNS_14ExceptionStateE(%"class.blink::StylePropertyMapReadOnlyMainThread"*, %"class.blink::ScriptState"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ScriptWrappableD2Ev(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #8
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_40V8UnionCSSVariableReferenceValueOrStringEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.1107"*, %"class.WTF::Vector.1107"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1107", %"class.WTF::Vector.1107"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.1107", %"class.WTF::Vector.1107"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.1110"* null, %"class.blink::Member.1110"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1107", %"class.WTF::Vector.1107"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEEEmm(i64 %9) #8
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #8
  %13 = ptrtoint %"class.blink::HeapVectorBacking"* %12 to i64
  %14 = bitcast %"class.WTF::Vector.1107"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking"* %12 to %"class.blink::Member.1110"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #8
  %22 = load %"class.blink::Member.1110"*, %"class.blink::Member.1110"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member.1110"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector.1107", %"class.WTF::Vector.1107"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.1107", %"class.WTF::Vector.1107"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector.1107", %"class.WTF::Vector.1107"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.1110"*, %"class.blink::Member.1110"** %28, align 8
  %30 = icmp ne %"class.blink::Member.1110"* %24, null
  %31 = icmp ne %"class.blink::Member.1110"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !3

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member.1110"* %24 to i8*
  %37 = bitcast %"class.blink::Member.1110"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #8
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member.1110"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member.1110"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #8
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member.1110", %"class.blink::Member.1110"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.6, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([221 x i8], [221 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_40V8UnionCSSVariableReferenceValueOrStringEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1110"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.1110", %"class.blink::Member.1110"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.1110"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_40V8UnionCSSVariableReferenceValueOrStringEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_40V8UnionCSSVariableReferenceValueOrStringEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_40V8UnionCSSVariableReferenceValueOrStringEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::V8UnionCSSVariableReferenceValueOrString"*
  tail call void @_ZNK5blink40V8UnionCSSVariableReferenceValueOrString5TraceEPNS_7VisitorE(%"class.blink::V8UnionCSSVariableReferenceValueOrString"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZNK5blink40V8UnionCSSVariableReferenceValueOrString5TraceEPNS_7VisitorE(%"class.blink::V8UnionCSSVariableReferenceValueOrString"*, %"class.blink::Visitor"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %10, %6 ], [ %1, %2 ]
  %8 = phi i32 [ %9, %6 ], [ %1, %2 ]
  %9 = or i32 %8, %7
  %10 = lshr i32 %7, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %6

12:                                               ; preds = %6
  %13 = shl i32 %9, 1
  %14 = add i32 %13, 2
  %15 = icmp ugt i32 %14, 8
  %16 = select i1 %15, i32 %14, i32 8
  br label %17

17:                                               ; preds = %12, %2
  %18 = phi i32 [ 8, %2 ], [ %16, %12 ]
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp ugt i32 %18, %20
  br i1 %21, label %22, label %40

22:                                               ; preds = %17
  %23 = icmp slt i32 %18, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %22
  %25 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.9, i64 0, i64 0)) #8
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8
  %27 = load i32, i32* %19, align 8
  br label %28

28:                                               ; preds = %22, %24
  %29 = phi i32 [ %20, %22 ], [ %27, %24 ]
  %30 = icmp ult i32 %29, %18
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #8
  store i8 -86, i8* %3, align 1
  %32 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable"* %0, i32 %18, %"struct.WTF::KeyValuePair"* null, i8* nonnull dereferenceable(1) %3) #8
  %33 = load i8, i8* %3, align 1, !range !4
  %34 = icmp eq i8 %33, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #8
  br i1 %34, label %35, label %40

35:                                               ; preds = %31, %28
  %36 = zext i32 %18 to i64
  %37 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64 %36) #8
  %38 = bitcast %"class.blink::HeapHashTableBacking"* %37 to %"struct.WTF::KeyValuePair"*
  %39 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %38, i32 %18, %"struct.WTF::KeyValuePair"* null) #8
  br label %40

40:                                               ; preds = %35, %31, %17
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #8
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0)) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, null
  br i1 %33, label %80, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #8
  br i1 %38, label %39, label %80

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #8
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %77, %39
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %39 ], [ %65, %77 ]
  %49 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #8
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %42, i32 %1, %"struct.WTF::KeyValuePair"* %48)
  br label %80

58:                                               ; preds = %39, %77
  %59 = phi i64 [ %78, %77 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %65, %77 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair"* %64, %"struct.WTF::KeyValuePair"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  switch i32 %67, label %70 [
    i32 1548, label %68
    i32 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %77

70:                                               ; preds = %58
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  store i32 %67, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59, i32 1
  %74 = bitcast %"class.blink::Member"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member"* %72 to i64*
  store i64 %75, i64* %76, align 8
  br label %77

77:                                               ; preds = %68, %70
  %78 = add nuw nsw i64 %59, 1
  %79 = icmp eq i64 %78, %43
  br i1 %79, label %47, label %58

80:                                               ; preds = %34, %30, %55
  %81 = phi %"struct.WTF::KeyValuePair"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair"* %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  br label %37

14:                                               ; preds = %122, %4
  %15 = phi %"struct.WTF::KeyValuePair"* [ null, %4 ], [ %125, %122 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #8
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #8
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"struct.WTF::KeyValuePair"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #8
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"struct.WTF::KeyValuePair"* %15

37:                                               ; preds = %9, %122
  %38 = phi i32 [ %7, %9 ], [ %123, %122 ]
  %39 = phi %"struct.WTF::KeyValuePair"* [ %13, %9 ], [ %124, %122 ]
  %40 = phi %"struct.WTF::KeyValuePair"* [ null, %9 ], [ %125, %122 ]
  %41 = phi i32 [ 0, %9 ], [ %126, %122 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 %42, i32 0
  %44 = load i32, i32* %43, align 4
  switch i32 %44, label %45 [
    i32 1548, label %122
    i32 0, label %122
  ]

45:                                               ; preds = %37
  %46 = shl i32 %44, 15
  %47 = xor i32 %46, -1
  %48 = add i32 %44, %47
  %49 = lshr i32 %48, 10
  %50 = xor i32 %49, %48
  %51 = mul i32 %50, 9
  %52 = lshr i32 %51, 6
  %53 = xor i32 %52, %51
  %54 = shl i32 %53, 11
  %55 = xor i32 %54, -1
  %56 = add i32 %53, %55
  %57 = lshr i32 %56, 16
  %58 = xor i32 %57, %56
  %59 = and i32 %58, %11
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %60
  %62 = ptrtoint %"struct.WTF::KeyValuePair"* %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %83, label %66

66:                                               ; preds = %45
  %67 = xor i32 %58, -1
  %68 = lshr i32 %56, 23
  %69 = add i32 %68, %67
  %70 = shl i32 %69, 12
  %71 = xor i32 %70, %69
  %72 = lshr i32 %71, 7
  %73 = xor i32 %72, %71
  %74 = shl i32 %73, 2
  %75 = xor i32 %74, %73
  %76 = lshr i32 %75, 20
  %77 = xor i32 %76, %75
  %78 = or i32 %77, 1
  %79 = zext i32 %78 to i64
  br label %89

80:                                               ; preds = %96
  %81 = ptrtoint %"struct.WTF::KeyValuePair"* %103 to i64
  %82 = inttoptr i64 %98 to %"struct.WTF::KeyValuePair"*
  br label %83

83:                                               ; preds = %80, %45
  %84 = phi i64 [ %81, %80 ], [ %62, %45 ]
  %85 = phi %"struct.WTF::KeyValuePair"* [ %82, %80 ], [ null, %45 ]
  %86 = icmp eq %"struct.WTF::KeyValuePair"* %85, null
  %87 = ptrtoint %"struct.WTF::KeyValuePair"* %85 to i64
  %88 = select i1 %86, i64 %84, i64 %87
  br label %108

89:                                               ; preds = %96, %66
  %90 = phi i64 [ 0, %66 ], [ %98, %96 ]
  %91 = phi i32 [ %64, %66 ], [ %106, %96 ]
  %92 = phi i64 [ %62, %66 ], [ %104, %96 ]
  %93 = phi i64 [ %60, %66 ], [ %102, %96 ]
  %94 = phi i64 [ 0, %66 ], [ %100, %96 ]
  %95 = icmp eq i32 %91, %44
  br i1 %95, label %108, label %96

96:                                               ; preds = %89
  %97 = icmp eq i32 %91, 1548
  %98 = select i1 %97, i64 %92, i64 %90
  %99 = icmp eq i64 %94, 0
  %100 = select i1 %99, i64 %79, i64 %94
  %101 = add i64 %100, %93
  %102 = and i64 %101, %12
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %102
  %104 = ptrtoint %"struct.WTF::KeyValuePair"* %103 to i64
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %103, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %80, label %89

108:                                              ; preds = %89, %83
  %109 = phi i64 [ %88, %83 ], [ %92, %89 ]
  %110 = inttoptr i64 %109 to %"struct.WTF::KeyValuePair"*
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %110, i64 0, i32 0
  store i32 %44, i32* %111, align 8
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %110, i64 0, i32 1
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 %42, i32 1
  %114 = bitcast %"class.blink::Member"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.blink::Member"* %112 to i64*
  store i64 %115, i64* %116, align 8
  %117 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %117, i64 %42
  %119 = icmp eq %"struct.WTF::KeyValuePair"* %118, %3
  %120 = select i1 %119, %"struct.WTF::KeyValuePair"* %110, %"struct.WTF::KeyValuePair"* %40
  %121 = load i32, i32* %6, align 8
  br label %122

122:                                              ; preds = %37, %37, %108
  %123 = phi i32 [ %38, %37 ], [ %121, %108 ], [ %38, %37 ]
  %124 = phi %"struct.WTF::KeyValuePair"* [ %39, %37 ], [ %117, %108 ], [ %39, %37 ]
  %125 = phi %"struct.WTF::KeyValuePair"* [ %40, %37 ], [ %120, %108 ], [ %40, %37 ]
  %126 = add i32 %41, 1
  %127 = icmp eq i32 %126, %123
  br i1 %127, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.11, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS1_12KeyValuePairIS3_NS_6MemberIKNS_8CSSValueEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIS3_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEE14AllocateObjectISK_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS1_12KeyValuePairIS3_NS_6MemberIKNS_8CSSValueEEEEENS1_24KeyValuePairKeyExtractorENS1_7IntHashIS3_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEE14AllocateObjectISK_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([443 x i8], [443 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_13CSSPropertyIDENS_12KeyValuePairIS4_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #8
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS4_NS3_6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #8
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS4_NS3_6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSF_IS9_EEEESG_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #8
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %62, %20
  ret void

33:                                               ; preds = %62, %30
  %34 = phi i64 [ 0, %30 ], [ %63, %62 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 0
  br i1 %28, label %36, label %49

36:                                               ; preds = %33
  %37 = load atomic i32, i32* %35 monotonic, align 4
  switch i32 %37, label %38 [
    i32 1548, label %62
    i32 0, label %62
  ]

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %40 = bitcast %"class.blink::Member"* %39 to i64*
  %41 = load atomic i64, i64* %40 monotonic, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %62, label %43

43:                                               ; preds = %38
  %44 = inttoptr i64 %41 to %"class.blink::CSSValue"*
  %45 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %44, i64 0, i32 0
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* %45, i8* %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %62

49:                                               ; preds = %33
  %50 = load i32, i32* %35, align 4
  switch i32 %50, label %51 [
    i32 1548, label %62
    i32 0, label %62
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to %"class.blink::CSSValue"*
  %58 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %57, i64 0, i32 0
  %59 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %60 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, i64 5
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %60, align 8
  tail call void %61(%"class.blink::Visitor"* %0, i8* %58, i8* %58, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %62

62:                                               ; preds = %49, %49, %36, %36, %56, %51, %38, %43
  %63 = add nuw nsw i64 %34, 1
  %64 = icmp eq i64 %63, %23
  br i1 %64, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS3_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.8"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %10, %6 ], [ %1, %2 ]
  %8 = phi i32 [ %9, %6 ], [ %1, %2 ]
  %9 = or i32 %8, %7
  %10 = lshr i32 %7, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %6

12:                                               ; preds = %6
  %13 = shl i32 %9, 1
  %14 = add i32 %13, 2
  %15 = icmp ugt i32 %14, 8
  %16 = select i1 %15, i32 %14, i32 8
  br label %17

17:                                               ; preds = %12, %2
  %18 = phi i32 [ 8, %2 ], [ %16, %12 ]
  %19 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp ugt i32 %18, %20
  br i1 %21, label %22, label %40

22:                                               ; preds = %17
  %23 = icmp slt i32 %18, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %22
  %25 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.9, i64 0, i64 0)) #8
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8
  %27 = load i32, i32* %19, align 8
  br label %28

28:                                               ; preds = %22, %24
  %29 = phi i32 [ %20, %22 ], [ %27, %24 ]
  %30 = icmp ult i32 %29, %18
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #8
  store i8 -86, i8* %3, align 1
  %32 = call %"struct.WTF::KeyValuePair.10"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS3_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable.8"* %0, i32 %18, %"struct.WTF::KeyValuePair.10"* null, i8* nonnull dereferenceable(1) %3) #8
  %33 = load i8, i8* %3, align 1, !range !4
  %34 = icmp eq i8 %33, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #8
  br i1 %34, label %35, label %40

35:                                               ; preds = %31, %28
  %36 = zext i32 %18 to i64
  %37 = call %"class.blink::HeapHashTableBacking.1194"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64 %36) #8
  %38 = bitcast %"class.blink::HeapHashTableBacking.1194"* %37 to %"struct.WTF::KeyValuePair.10"*
  %39 = call %"struct.WTF::KeyValuePair.10"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS3_13HeapAllocatorEE8RehashToEPS8_jSI_(%"class.WTF::HashTable.8"* %0, %"struct.WTF::KeyValuePair.10"* %38, i32 %18, %"struct.WTF::KeyValuePair.10"* null) #8
  br label %40

40:                                               ; preds = %35, %31, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.10"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS3_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable.8"*, i32, %"struct.WTF::KeyValuePair.10"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #8
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0)) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.10"*, %"struct.WTF::KeyValuePair.10"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.10"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.10"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #8
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.10"*, %"struct.WTF::KeyValuePair.10"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.1194"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #8
  %45 = bitcast %"class.blink::HeapHashTableBacking.1194"* %44 to %"struct.WTF::KeyValuePair.10"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair.10"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable.8"* %0 to %"class.blink::HeapHashTableBacking.1194"**
  store %"class.blink::HeapHashTableBacking.1194"* %44, %"class.blink::HeapHashTableBacking.1194"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.1194", %"class.blink::HeapHashTableBacking.1194"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #8
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.10"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.10"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS3_13HeapAllocatorEE8RehashToEPS8_jSI_(%"class.WTF::HashTable.8"* %0, %"struct.WTF::KeyValuePair.10"* %42, i32 %1, %"struct.WTF::KeyValuePair.10"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.10"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.10"*, %"struct.WTF::KeyValuePair.10"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.10"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.10"* %64, %"struct.WTF::KeyValuePair.10"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair.10"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair.10"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %113

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #8
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = load i64, i64* %67, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.10"* %64 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair.10"*, %"struct.WTF::KeyValuePair.10"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %96, i64 %59, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #8
  br label %113

113:                                              ; preds = %112, %109, %88, %69
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair.10"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.10"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.10"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS3_13HeapAllocatorEE8RehashToEPS8_jSI_(%"class.WTF::HashTable.8"*, %"struct.WTF::KeyValuePair.10"*, i32, %"struct.WTF::KeyValuePair.10"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.10"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"struct.WTF::KeyValuePair.10"*, %"struct.WTF::KeyValuePair.10"** %10, align 8
  br label %70

14:                                               ; preds = %169, %4
  %15 = phi i32 [ 0, %4 ], [ %170, %169 ]
  %16 = phi %"struct.WTF::KeyValuePair.10"* [ null, %4 ], [ %172, %169 ]
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = bitcast %"struct.WTF::KeyValuePair.10"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %20) #8
  %21 = load i32, i32* %6, align 8
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %15, %14 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 0
  %25 = load %"struct.WTF::KeyValuePair.10"*, %"struct.WTF::KeyValuePair.10"** %24, align 8
  %26 = bitcast %"class.WTF::HashTable.8"* %0 to i64*
  store atomic i64 %5, i64* %26 monotonic, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %22
  %30 = bitcast %"struct.WTF::KeyValuePair.10"* %1 to i8*
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #8
  br label %32

32:                                               ; preds = %22, %29
  store i32 %2, i32* %6, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.10"* %25, null
  br i1 %33, label %66, label %34

34:                                               ; preds = %32
  %35 = icmp eq i32 %23, 0
  br i1 %35, label %64, label %36

36:                                               ; preds = %34
  %37 = zext i32 %23 to i64
  br label %38

38:                                               ; preds = %61, %36
  %39 = phi i64 [ 0, %36 ], [ %62, %61 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %25, i64 %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = ptrtoint %"class.WTF::StringImpl"* %42 to i64
  switch i64 %43, label %44 [
    i64 -1, label %61
    i64 0, label %61
  ]

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #8
  br label %57

57:                                               ; preds = %56, %53
  %58 = bitcast %"struct.WTF::KeyValuePair.10"* %40 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %58, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %25, i64 %39, i32 1
  %60 = bitcast %"class.blink::Member"* %59 to i64*
  store atomic i64 0, i64* %60 monotonic, align 8
  br label %61

61:                                               ; preds = %57, %38, %38
  %62 = add nuw nsw i64 %39, 1
  %63 = icmp eq i64 %62, %37
  br i1 %63, label %64, label %38

64:                                               ; preds = %61, %34
  %65 = bitcast %"struct.WTF::KeyValuePair.10"* %25 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %65) #8
  br label %66

66:                                               ; preds = %32, %64
  %67 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 3
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, -2147483648
  store i32 %69, i32* %67, align 8
  ret %"struct.WTF::KeyValuePair.10"* %16

70:                                               ; preds = %9, %169
  %71 = phi i32 [ %7, %9 ], [ %170, %169 ]
  %72 = phi %"struct.WTF::KeyValuePair.10"* [ %13, %9 ], [ %171, %169 ]
  %73 = phi %"struct.WTF::KeyValuePair.10"* [ null, %9 ], [ %172, %169 ]
  %74 = phi i32 [ 0, %9 ], [ %173, %169 ]
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %72, i64 %75
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %76, i64 0, i32 0, i32 0, i32 0, i32 0
  %78 = bitcast %"struct.WTF::KeyValuePair.10"* %76 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = inttoptr i64 %79 to %"class.WTF::StringImpl"*
  switch i64 %79, label %81 [
    i64 -1, label %169
    i64 0, label %169
  ]

81:                                               ; preds = %70
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = lshr i32 %83, 8
  %85 = and i32 %84, %11
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %1, i64 %86
  %88 = ptrtoint %"struct.WTF::KeyValuePair.10"* %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %108, label %92

92:                                               ; preds = %81
  %93 = xor i32 %84, -1
  %94 = lshr i32 %83, 31
  %95 = add nsw i32 %94, %93
  %96 = shl i32 %95, 12
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 7
  %99 = xor i32 %98, %97
  %100 = shl i32 %99, 2
  %101 = xor i32 %100, %99
  %102 = lshr i32 %101, 20
  %103 = xor i32 %102, %101
  %104 = or i32 %103, 1
  %105 = zext i32 %104 to i64
  br label %114

106:                                              ; preds = %126
  %107 = ptrtoint %"struct.WTF::KeyValuePair.10"* %132 to i64
  br label %108

108:                                              ; preds = %106, %81
  %109 = phi i64 [ %88, %81 ], [ %107, %106 ]
  %110 = phi %"struct.WTF::KeyValuePair.10"* [ null, %81 ], [ %127, %106 ]
  %111 = icmp eq %"struct.WTF::KeyValuePair.10"* %110, null
  %112 = ptrtoint %"struct.WTF::KeyValuePair.10"* %110 to i64
  %113 = select i1 %111, i64 %109, i64 %112
  br label %137

114:                                              ; preds = %126, %92
  %115 = phi %"struct.WTF::KeyValuePair.10"* [ null, %92 ], [ %127, %126 ]
  %116 = phi i64 [ %88, %92 ], [ %133, %126 ]
  %117 = phi %"struct.WTF::KeyValuePair.10"* [ %87, %92 ], [ %132, %126 ]
  %118 = phi i64 [ %86, %92 ], [ %131, %126 ]
  %119 = phi i64 [ 0, %92 ], [ %129, %126 ]
  %120 = bitcast %"struct.WTF::KeyValuePair.10"* %117 to i8**
  %121 = load i8*, i8** %120, align 8
  %122 = icmp eq i8* %121, inttoptr (i64 -1 to i8*)
  br i1 %122, label %126, label %123

123:                                              ; preds = %114
  %124 = bitcast i8* %121 to %"class.WTF::StringImpl"*
  %125 = icmp eq %"class.WTF::StringImpl"* %80, %124
  br i1 %125, label %137, label %126

126:                                              ; preds = %123, %114
  %127 = phi %"struct.WTF::KeyValuePair.10"* [ %115, %123 ], [ %117, %114 ]
  %128 = icmp eq i64 %119, 0
  %129 = select i1 %128, i64 %105, i64 %119
  %130 = add i64 %129, %118
  %131 = and i64 %130, %12
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %1, i64 %131
  %133 = ptrtoint %"struct.WTF::KeyValuePair.10"* %132 to i64
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %132, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %106, label %114

137:                                              ; preds = %123, %108
  %138 = phi i64 [ %113, %108 ], [ %116, %123 ]
  %139 = inttoptr i64 %138 to %"struct.WTF::KeyValuePair.10"*
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %139, i64 0, i32 0, i32 0, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #8
  br label %156

156:                                              ; preds = %137, %152, %155
  %157 = load i64, i64* %78, align 8
  %158 = inttoptr i64 %138 to i64*
  store i64 %157, i64* %158, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %77, align 8
  %159 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %139, i64 0, i32 1
  %160 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %72, i64 %75, i32 1
  %161 = bitcast %"class.blink::Member"* %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"class.blink::Member"* %159 to i64*
  store i64 %162, i64* %163, align 8
  %164 = load %"struct.WTF::KeyValuePair.10"*, %"struct.WTF::KeyValuePair.10"** %10, align 8
  %165 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %164, i64 %75
  %166 = icmp eq %"struct.WTF::KeyValuePair.10"* %165, %3
  %167 = select i1 %166, %"struct.WTF::KeyValuePair.10"* %139, %"struct.WTF::KeyValuePair.10"* %73
  %168 = load i32, i32* %6, align 8
  br label %169

169:                                              ; preds = %70, %70, %156
  %170 = phi i32 [ %71, %70 ], [ %168, %156 ], [ %71, %70 ]
  %171 = phi %"struct.WTF::KeyValuePair.10"* [ %72, %70 ], [ %164, %156 ], [ %72, %70 ]
  %172 = phi %"struct.WTF::KeyValuePair.10"* [ %73, %70 ], [ %167, %156 ], [ %73, %70 ]
  %173 = add i32 %74, 1
  %174 = icmp eq i32 %173, %170
  br i1 %174, label %14, label %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.1194"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.11, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_12AtomicStringENS1_12KeyValuePairIS3_NS_6MemberIKNS_8CSSValueEEEEENS1_24KeyValuePairKeyExtractorENS1_16AtomicStringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.1194"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.1194"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_12AtomicStringENS1_12KeyValuePairIS3_NS_6MemberIKNS_8CSSValueEEEEENS1_24KeyValuePairKeyExtractorENS1_16AtomicStringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEE14AllocateObjectISJ_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([418 x i8], [418 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS4_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSE_IS9_EEEESF_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #8
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS3_N5blink6MemberIKNS5_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSE_IS9_EEEESF_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #8
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_12AtomicStringENS3_12KeyValuePairIS5_NS_6MemberIKNS_8CSSValueEEEEENS3_24KeyValuePairKeyExtractorENS3_16AtomicStringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.10"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %22, i64 %25, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %43
    i64 0, label %43
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #8
  br label %43

43:                                               ; preds = %42, %39, %24, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_12AtomicStringENS_12KeyValuePairIS3_N5blink6MemberIKNS5_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSE_IS9_EEEESF_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.10"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #8
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %63, %20
  ret void

33:                                               ; preds = %63, %30
  %34 = phi i64 [ 0, %30 ], [ %64, %63 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.10"* %35 to i64*
  br i1 %28, label %37, label %50

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %63
    i64 0, label %63
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %63, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to %"class.blink::CSSValue"*
  %46 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %45, i64 0, i32 0
  %47 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %48 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, i64 5
  %49 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, align 8
  tail call void %49(%"class.blink::Visitor"* %0, i8* %46, i8* %46, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %63

50:                                               ; preds = %33
  %51 = load i64, i64* %36, align 8
  switch i64 %51, label %52 [
    i64 -1, label %63
    i64 0, label %63
  ]

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %3, i64 %34, i32 1
  %54 = bitcast %"class.blink::Member"* %53 to i64*
  %55 = load atomic i64, i64* %54 monotonic, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %52
  %58 = inttoptr i64 %55 to %"class.blink::CSSValue"*
  %59 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %58, i64 0, i32 0
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %61 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %60, i64 5
  %62 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %61, align 8
  tail call void %62(%"class.blink::Visitor"* %0, i8* %59, i8* %59, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %63

63:                                               ; preds = %50, %50, %37, %37, %57, %52, %39, %44
  %64 = add nuw nsw i64 %34, 1
  %65 = icmp eq i64 %64, %23
  br i1 %65, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERS2_PS6_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), %"class.blink::CSSValue"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %141, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, 1548
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #8
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1
  %84 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %2, align 8
  %85 = ptrtoint %"class.blink::CSSValue"* %84 to i64
  %86 = bitcast %"class.blink::Member"* %83 to i64*
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %79
  %90 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %84, i64 0, i32 0
  %91 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %90) #8
  br label %92

92:                                               ; preds = %79, %89
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %129, label %95

95:                                               ; preds = %92
  %96 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %97 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %96, i64 0, i32 1
  %98 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %97) #8
  %99 = icmp eq i8* %98, null
  br i1 %99, label %100, label %102, !prof !2

100:                                              ; preds = %95
  %101 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %97, i8* %101) #8
  br label %102

102:                                              ; preds = %100, %95
  %103 = phi i8* [ %101, %100 ], [ %98, %95 ]
  %104 = bitcast i8* %103 to %"class.blink::ThreadState"**
  %105 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 9
  %107 = load i8, i8* %106, align 1, !range !4
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %129, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 13
  %111 = load i64, i64* %110, align 8
  %112 = add i64 %111, 1
  store i64 %112, i64* %110, align 8
  %113 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %105, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %114 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %113, align 8
  %115 = load atomic i64, i64* %86 monotonic, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %126, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %114, i64 0, i32 0, i32 0
  %119 = inttoptr i64 %115 to %"class.blink::CSSValue"*
  %120 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %119, i64 0, i32 0
  %121 = bitcast %"class.blink::MarkingVisitor"* %114 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %122 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %121, align 8
  %123 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %122, i64 5
  %124 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %123, align 8
  tail call void %124(%"class.blink::Visitor"* %118, i8* %120, i8* %120, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  %125 = load i64, i64* %110, align 8
  br label %126

126:                                              ; preds = %117, %109
  %127 = phi i64 [ %112, %109 ], [ %125, %117 ]
  %128 = add i64 %127, -1
  store i64 %128, i64* %110, align 8
  br label %129

129:                                              ; preds = %92, %102, %126
  %130 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %131 = load i32, i32* %130, align 4
  %132 = add i32 %131, 1
  store i32 %132, i32* %130, align 4
  %133 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %134 = load i32, i32* %133, align 8
  %135 = add i32 %134, %132
  %136 = shl i32 %135, 1
  %137 = load i32, i32* %12, align 8
  %138 = icmp ult i32 %136, %137
  br i1 %138, label %141, label %139

139:                                              ; preds = %129
  %140 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %81)
  br label %141

141:                                              ; preds = %50, %129, %139
  %142 = phi i8 [ 1, %129 ], [ 1, %139 ], [ 0, %50 ]
  %143 = phi %"struct.WTF::KeyValuePair"* [ %81, %129 ], [ %140, %139 ], [ %52, %50 ]
  %144 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %143, 0
  %145 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %144, i8 %142, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %145
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #8
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %23, i8* %24) #8
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #8
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"struct.WTF::KeyValuePair"* %1, i8* nonnull dereferenceable(1) %4) #8
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_13CSSPropertyIDENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_7IntHashIS4_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #8
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair"*
  %44 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink13CSSPropertyIDENS_12KeyValuePairIS2_NS1_6MemberIKNS1_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %43, i32 %40, %"struct.WTF::KeyValuePair"* %1) #8
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair"* %46
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.10"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISF_SA_SG_EERKS1_RPS6_EENS_18HashTableAddResultISH_S8_EEOT0_OT1_(%"class.WTF::HashTable.8"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::CSSValue"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.10"*, %"struct.WTF::KeyValuePair.10"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.10"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.10"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS3_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.8"* %0, %"struct.WTF::KeyValuePair.10"* null)
  %9 = load %"struct.WTF::KeyValuePair.10"*, %"struct.WTF::KeyValuePair.10"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.10"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %11, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %73, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"struct.WTF::KeyValuePair.10"* [ %23, %27 ], [ %58, %52 ]
  %43 = phi %"struct.WTF::KeyValuePair.10"* [ null, %27 ], [ %53, %52 ]
  %44 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %45 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.10"* %42 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, inttoptr (i64 -1 to i8*)
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast i8* %47 to %"class.WTF::StringImpl"*
  %51 = icmp eq %"class.WTF::StringImpl"* %17, %50
  br i1 %51, label %172, label %52

52:                                               ; preds = %41, %49
  %53 = phi %"struct.WTF::KeyValuePair.10"* [ %43, %49 ], [ %42, %41 ]
  %54 = icmp eq i64 %45, 0
  %55 = select i1 %54, i64 %40, i64 %45
  %56 = add i64 %55, %44
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %11, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"struct.WTF::KeyValuePair.10"* %53, null
  br i1 %63, label %73, label %64

64:                                               ; preds = %62
  %65 = bitcast %"struct.WTF::KeyValuePair.10"* %53 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %65, i64 16) #8
  %66 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  br label %73

73:                                               ; preds = %10, %62, %64
  %74 = phi %"class.WTF::StringImpl"* [ %72, %64 ], [ %17, %62 ], [ %17, %10 ]
  %75 = phi %"struct.WTF::KeyValuePair.10"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %76 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #8
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !2

91:                                               ; preds = %82
  tail call void @llvm.trap() #8
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %73
  %95 = ptrtoint %"class.WTF::StringImpl"* %74 to i64
  %96 = bitcast %"struct.WTF::KeyValuePair.10"* %75 to i64*
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #8
  br label %113

113:                                              ; preds = %112, %109, %94
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.10", %"struct.WTF::KeyValuePair.10"* %75, i64 0, i32 1
  %115 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %2, align 8
  %116 = ptrtoint %"class.blink::CSSValue"* %115 to i64
  %117 = bitcast %"class.blink::Member"* %114 to i64*
  store atomic i64 %116, i64* %117 monotonic, align 8
  %118 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %115, i64 0, i32 0
  %122 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %121) #8
  br label %123

123:                                              ; preds = %113, %120
  %124 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %160, label %126

126:                                              ; preds = %123
  %127 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %128 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %127, i64 0, i32 1
  %129 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %128) #8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %131, label %133, !prof !2

131:                                              ; preds = %126
  %132 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %128, i8* %132) #8
  br label %133

133:                                              ; preds = %131, %126
  %134 = phi i8* [ %132, %131 ], [ %129, %126 ]
  %135 = bitcast i8* %134 to %"class.blink::ThreadState"**
  %136 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %136, i64 0, i32 9
  %138 = load i8, i8* %137, align 1, !range !4
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %160, label %140

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %136, i64 0, i32 13
  %142 = load i64, i64* %141, align 8
  %143 = add i64 %142, 1
  store i64 %143, i64* %141, align 8
  %144 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %136, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %145 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %144, align 8
  %146 = load atomic i64, i64* %117 monotonic, align 8
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %157, label %148

148:                                              ; preds = %140
  %149 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %145, i64 0, i32 0, i32 0
  %150 = inttoptr i64 %146 to %"class.blink::CSSValue"*
  %151 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %150, i64 0, i32 0
  %152 = bitcast %"class.blink::MarkingVisitor"* %145 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %153 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %152, align 8
  %154 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %153, i64 5
  %155 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %154, align 8
  tail call void %155(%"class.blink::Visitor"* %149, i8* %151, i8* %151, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  %156 = load i64, i64* %141, align 8
  br label %157

157:                                              ; preds = %148, %140
  %158 = phi i64 [ %143, %140 ], [ %156, %148 ]
  %159 = add i64 %158, -1
  store i64 %159, i64* %141, align 8
  br label %160

160:                                              ; preds = %123, %133, %157
  %161 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 2
  %162 = load i32, i32* %161, align 4
  %163 = add i32 %162, 1
  store i32 %163, i32* %161, align 4
  %164 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 3
  %165 = load i32, i32* %164, align 8
  %166 = add i32 %165, %163
  %167 = shl i32 %166, 1
  %168 = load i32, i32* %12, align 8
  %169 = icmp ult i32 %167, %168
  br i1 %169, label %172, label %170

170:                                              ; preds = %160
  %171 = tail call %"struct.WTF::KeyValuePair.10"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS3_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.8"* %0, %"struct.WTF::KeyValuePair.10"* %75)
  br label %172

172:                                              ; preds = %49, %160, %170
  %173 = phi i8 [ 1, %160 ], [ 1, %170 ], [ 0, %49 ]
  %174 = phi %"struct.WTF::KeyValuePair.10"* [ %75, %160 ], [ %171, %170 ], [ %42, %49 ]
  %175 = insertvalue { %"struct.WTF::KeyValuePair.10"*, i8 } undef, %"struct.WTF::KeyValuePair.10"* %174, 0
  %176 = insertvalue { %"struct.WTF::KeyValuePair.10"*, i8 } %175, i8 %173, 1
  ret { %"struct.WTF::KeyValuePair.10"*, i8 } %176
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.10"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS3_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.8"*, %"struct.WTF::KeyValuePair.10"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.8", %"class.WTF::HashTable.8"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #8
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %23, i8* %24) #8
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #8
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.10"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS3_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable.8"* %0, i32 %35, %"struct.WTF::KeyValuePair.10"* %1, i8* nonnull dereferenceable(1) %4) #8
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.1194"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_12AtomicStringENS2_12KeyValuePairIS4_NS_6MemberIKNS_8CSSValueEEEEENS2_24KeyValuePairKeyExtractorENS2_16AtomicStringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #8
  %43 = bitcast %"class.blink::HeapHashTableBacking.1194"* %42 to %"struct.WTF::KeyValuePair.10"*
  %44 = call %"struct.WTF::KeyValuePair.10"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_N5blink6MemberIKNS3_8CSSValueEEEEENS_24KeyValuePairKeyExtractorENS_16AtomicStringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSC_IS7_EEEESD_NS3_13HeapAllocatorEE8RehashToEPS8_jSI_(%"class.WTF::HashTable.8"* %0, %"struct.WTF::KeyValuePair.10"* %43, i32 %40, %"struct.WTF::KeyValuePair.10"* %1) #8
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.10"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.10"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.1125"* @_ZN3WTF15ConstructTraitsINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEENS_12VectorTraitsIS9_EENS3_13HeapAllocatorEE25ConstructAndNotifyElementIJS4_RKS8_EEEPS9_PvDpOT_(i8*, %"class.blink::CSSPropertyName"* dereferenceable(16), %"class.blink::Member"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast i8* %0 to %"struct.std::__1::pair.1125"*
  %5 = bitcast i8* %0 to i32*
  %6 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds i8, i8* %0, i64 8
  %9 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %1, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast i8* %8 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  %14 = getelementptr inbounds i8, i8* %0, i64 16
  %15 = bitcast %"class.blink::Member"* %2 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast i8* %14 to i64*
  store i64 %16, i64* %17, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %54, label %20

20:                                               ; preds = %3
  %21 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %22 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %21, i64 0, i32 1
  %23 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %22) #8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %27, !prof !2

25:                                               ; preds = %20
  %26 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %22, i8* %26) #8
  br label %27

27:                                               ; preds = %25, %20
  %28 = phi i8* [ %26, %25 ], [ %23, %20 ]
  %29 = bitcast i8* %28 to %"class.blink::ThreadState"**
  %30 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 9
  %32 = load i8, i8* %31, align 1, !range !4
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %54, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 13
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %35, align 8
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %38, align 8
  %40 = load atomic i64, i64* %17 monotonic, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %51, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %39, i64 0, i32 0, i32 0
  %44 = inttoptr i64 %40 to %"class.blink::CSSValue"*
  %45 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %44, i64 0, i32 0
  %46 = bitcast %"class.blink::MarkingVisitor"* %39 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %47 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, i64 5
  %49 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, align 8
  tail call void %49(%"class.blink::Visitor"* %43, i8* %45, i8* %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  %50 = load i64, i64* %35, align 8
  br label %51

51:                                               ; preds = %42, %34
  %52 = phi i64 [ %37, %34 ], [ %50, %42 ]
  %53 = add i64 %52, -1
  store i64 %53, i64* %35, align 8
  br label %54

54:                                               ; preds = %3, %27, %51
  ret %"struct.std::__1::pair.1125"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEELj0ENS3_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1122"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1122", %"class.WTF::Vector.1122"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1122", %"class.WTF::Vector.1122"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair.1125"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEEEmm(i64 %11) #8
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = udiv i64 %12, 24
  %15 = tail call %"class.blink::HeapVectorBacking.1214"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE4CallEm(i64 %14) #8
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1214"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1122"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1214", %"class.blink::HeapVectorBacking.1214"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #8
  br label %59

24:                                               ; preds = %7
  %25 = load %"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"** %8, align 8
  %26 = icmp eq %"struct.std::__1::pair.1125"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"struct.std::__1::pair.1125"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #8
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = udiv i64 %12, 24
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #8
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0)) #8
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #8
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1122"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink15CSSPropertyNameENS3_6MemberIKNS3_8CSSValueEEEEELj0ENS3_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1122"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.1122"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1122", %"class.WTF::Vector.1122"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.1122"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1122", %"class.WTF::Vector.1122"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = mul nuw nsw i64 %9, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #8
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEEEmm(i64 %14) #8
  %16 = udiv i64 %15, 24
  %17 = tail call %"class.blink::HeapVectorBacking.1214"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE4CallEm(i64 %16) #8
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1214"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.1122", %"class.WTF::Vector.1122"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1122", %"class.WTF::Vector.1122"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1214"* %17, null
  %23 = icmp ne %"struct.std::__1::pair.1125"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"struct.std::__1::pair.1125"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.1122"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = mul nuw nsw i64 %30, 24
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1214", %"class.blink::HeapVectorBacking.1214"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #8
  %33 = bitcast %"class.WTF::Vector.1122"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = mul nuw nsw i64 %39, 24
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #8
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #8
  %42 = bitcast %"class.WTF::Vector.1122"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.1122", %"class.WTF::Vector.1122"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1214", %"class.blink::HeapVectorBacking.1214"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #8
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 5592405
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 5592405) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = mul i64 %0, 24
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1214"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.6, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = mul i64 %0, 24
  %21 = call i8* @_ZN5blink17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS8_EEE14AllocateObjectISC_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1214"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1214"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS8_EEE14AllocateObjectISC_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([251 x i8], [251 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINSt3__14pairINS1_15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEEENS_12VectorTraitsISA_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE5TraceEPNS_7VisitorEPKv, i64 %23) #8
  br i1 %28, label %69, label %29

29:                                               ; preds = %2, %22
  %30 = bitcast i8* %1 to %"struct.std::__1::pair.1125"*
  %31 = getelementptr inbounds i8, i8* %1, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 2
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %44, !prof !2

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %1, i64 -8
  %38 = ptrtoint i8* %37 to i64
  %39 = and i64 %38, -131072
  %40 = inttoptr i64 %39 to i8*
  %41 = getelementptr inbounds i8, i8* %40, i64 4144
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 16
  br label %47

44:                                               ; preds = %29
  %45 = zext i16 %34 to i64
  %46 = shl nuw nsw i64 %45, 3
  br label %47

47:                                               ; preds = %44, %36
  %48 = phi i64 [ %43, %36 ], [ %46, %44 ]
  %49 = add i64 %48, -8
  %50 = udiv i64 %49, 24
  %51 = icmp ugt i64 %49, 23
  br i1 %51, label %52, label %69

52:                                               ; preds = %47
  %53 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %54

54:                                               ; preds = %66, %52
  %55 = phi i64 [ 0, %52 ], [ %67, %66 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %30, i64 %55, i32 1
  %57 = bitcast %"class.blink::Member"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %54
  %61 = inttoptr i64 %58 to %"class.blink::CSSValue"*
  %62 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %61, i64 0, i32 0
  %63 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %64 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, i64 5
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %64, align 8
  tail call void %65(%"class.blink::Visitor"* %0, i8* %62, i8* %62, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %66

66:                                               ; preds = %60, %54
  %67 = add nuw nsw i64 %55, 1
  %68 = icmp ult i64 %67, %50
  br i1 %68, label %54, label %69

69:                                               ; preds = %66, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsISA_EEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = udiv i64 %20, 24
  %22 = bitcast i8* %0 to %"struct.std::__1::pair.1125"*
  %23 = icmp ugt i64 %20, 23
  br i1 %23, label %24, label %47

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %22, i64 %25, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #8
  br label %43

43:                                               ; preds = %42, %39, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINSt3__14pairINS_15CSSPropertyNameENS_6MemberIKNS_8CSSValueEEEEEN3WTF12VectorTraitsIS9_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEvT0_SL_T_"(%"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"*) unnamed_addr #0 {
  %3 = alloca %"struct.std::__1::pair.1125", align 8
  br label %4

4:                                                ; preds = %271, %2
  %5 = phi %"struct.std::__1::pair.1125"* [ %1, %2 ], [ %255, %271 ]
  %6 = phi %"struct.std::__1::pair.1125"* [ %0, %2 ], [ %14, %271 ]
  %7 = ptrtoint %"struct.std::__1::pair.1125"* %5 to i64
  %8 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %5, i64 -1
  %9 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %8, i64 0, i32 0
  %10 = ptrtoint %"struct.std::__1::pair.1125"* %5 to i64
  br label %11

11:                                               ; preds = %282, %4
  %12 = phi %"struct.std::__1::pair.1125"* [ %6, %4 ], [ %283, %282 ]
  br label %13

13:                                               ; preds = %216, %11
  %14 = phi %"struct.std::__1::pair.1125"* [ %12, %11 ], [ %207, %216 ]
  %15 = ptrtoint %"struct.std::__1::pair.1125"* %14 to i64
  %16 = sub i64 %7, %15
  %17 = sdiv exact i64 %16, 24
  switch i64 %17, label %39 [
    i64 0, label %286
    i64 1, label %286
    i64 2, label %18
    i64 3, label %24
    i64 4, label %28
    i64 5, label %33
  ]

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %5, i64 -1
  %20 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %19, i64 0, i32 0
  %21 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %14, i64 0, i32 0
  %22 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %20, %"class.blink::CSSPropertyName"* dereferenceable(16) %21) #8
  br i1 %22, label %23, label %286

23:                                               ; preds = %18
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"* %14, %"struct.std::__1::pair.1125"* dereferenceable(24) %19) #8
  br label %286

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %14, i64 1
  %26 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %5, i64 -1
  %27 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_T_"(%"struct.std::__1::pair.1125"* %14, %"struct.std::__1::pair.1125"* %25, %"struct.std::__1::pair.1125"* %26)
  br label %286

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %14, i64 1
  %30 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %14, i64 2
  %31 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %5, i64 -1
  %32 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_SL_T_"(%"struct.std::__1::pair.1125"* %14, %"struct.std::__1::pair.1125"* %29, %"struct.std::__1::pair.1125"* %30, %"struct.std::__1::pair.1125"* %31)
  br label %286

33:                                               ; preds = %13
  %34 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %14, i64 1
  %35 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %14, i64 2
  %36 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %14, i64 3
  %37 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %5, i64 -1
  %38 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_SL_SL_T_"(%"struct.std::__1::pair.1125"* %14, %"struct.std::__1::pair.1125"* %34, %"struct.std::__1::pair.1125"* %35, %"struct.std::__1::pair.1125"* %36, %"struct.std::__1::pair.1125"* %37)
  br label %286

39:                                               ; preds = %13
  %40 = icmp slt i64 %16, 168
  br i1 %40, label %41, label %166

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %14, i64 2
  %43 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %14, i64 1
  %44 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_T_"(%"struct.std::__1::pair.1125"* %14, %"struct.std::__1::pair.1125"* %43, %"struct.std::__1::pair.1125"* %42) #8
  %45 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %14, i64 3
  %46 = icmp eq %"struct.std::__1::pair.1125"* %45, %5
  br i1 %46, label %286, label %47

47:                                               ; preds = %41
  %48 = bitcast %"struct.std::__1::pair.1125"* %3 to i8*
  %49 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %3, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %3, i64 0, i32 0, i32 1
  %51 = bitcast %"class.WTF::AtomicString"* %50 to i64*
  %52 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %3, i64 0, i32 1
  %53 = bitcast %"class.blink::Member"* %52 to i64*
  %54 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %3, i64 0, i32 0
  %55 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %50, i64 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %57 = bitcast %"class.WTF::AtomicString"* %50 to <2 x i64>*
  br label %58

58:                                               ; preds = %163, %47
  %59 = phi %"struct.std::__1::pair.1125"* [ %45, %47 ], [ %164, %163 ]
  %60 = phi %"struct.std::__1::pair.1125"* [ %42, %47 ], [ %59, %163 ]
  %61 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %59, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %60, i64 0, i32 0
  %63 = call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %61, %"class.blink::CSSPropertyName"* dereferenceable(16) %62) #8
  br i1 %63, label %64, label %163

64:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 24, i1 false) #8
  %65 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %59, i64 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 8
  store i32 %66, i32* %49, align 8
  %67 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %59, i64 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.WTF::AtomicString"* %67 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %68, align 8
  store <2 x i64> %70, <2 x i64>* %57, align 8
  br label %71

71:                                               ; preds = %112, %64
  %72 = phi %"struct.std::__1::pair.1125"* [ %59, %64 ], [ %73, %112 ]
  %73 = phi %"struct.std::__1::pair.1125"* [ %60, %64 ], [ %113, %112 ]
  %74 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %73, i64 0, i32 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %72, i64 0, i32 0, i32 0
  store i32 %75, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %72, i64 0, i32 0, i32 1
  %78 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %73, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::AtomicString"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %82 = bitcast %"class.WTF::AtomicString"* %77 to i64*
  %83 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %77, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  store i64 %81, i64* %82, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %71
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #8
  br label %99

99:                                               ; preds = %98, %95, %71
  %100 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %73, i64 0, i32 1
  %101 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %72, i64 0, i32 1
  %102 = bitcast %"class.blink::Member"* %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.blink::Member"* %101 to i64*
  store atomic i64 %103, i64* %104 monotonic, align 8
  %105 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %110, label %107

107:                                              ; preds = %99
  %108 = inttoptr i64 %103 to i8*
  %109 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %108) #8
  br label %110

110:                                              ; preds = %107, %99
  %111 = icmp eq %"struct.std::__1::pair.1125"* %73, %14
  br i1 %111, label %116, label %112

112:                                              ; preds = %110
  %113 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %73, i64 -1
  %114 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %113, i64 0, i32 0
  %115 = call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %54, %"class.blink::CSSPropertyName"* dereferenceable(16) %114) #8
  br i1 %115, label %71, label %116

116:                                              ; preds = %112, %110
  %117 = phi %"struct.std::__1::pair.1125"* [ %14, %110 ], [ %73, %112 ]
  %118 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %78, i64 0, i32 0, i32 0, i32 0
  %119 = bitcast %"class.WTF::AtomicString"* %78 to i64*
  %120 = bitcast %"class.blink::Member"* %100 to i64*
  %121 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %117, i64 0, i32 0, i32 0
  %122 = load i32, i32* %49, align 8
  store i32 %122, i32* %121, align 8
  %123 = load i64, i64* %51, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %55, align 8
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  store i64 %123, i64* %119, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %116
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #8
  br label %139

139:                                              ; preds = %138, %135, %116
  %140 = load i64, i64* %53, align 8
  store atomic i64 %140, i64* %120 monotonic, align 8
  %141 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %146, label %143

143:                                              ; preds = %139
  %144 = inttoptr i64 %140 to i8*
  %145 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %144) #8
  br label %146

146:                                              ; preds = %143, %139
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #8
  br label %162

162:                                              ; preds = %161, %158, %146
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #8
  br label %163

163:                                              ; preds = %162, %58
  %164 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %59, i64 1
  %165 = icmp eq %"struct.std::__1::pair.1125"* %164, %5
  br i1 %165, label %286, label %58

166:                                              ; preds = %39
  %167 = icmp sgt i64 %16, 23976
  %168 = udiv i64 %16, 48
  %169 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %14, i64 %168
  br i1 %167, label %170, label %175

170:                                              ; preds = %166
  %171 = udiv i64 %16, 96
  %172 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %14, i64 %171
  %173 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %169, i64 %171
  %174 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_SL_SL_T_"(%"struct.std::__1::pair.1125"* %14, %"struct.std::__1::pair.1125"* %172, %"struct.std::__1::pair.1125"* %169, %"struct.std::__1::pair.1125"* %173, %"struct.std::__1::pair.1125"* %8)
  br label %177

175:                                              ; preds = %166
  %176 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_T_"(%"struct.std::__1::pair.1125"* %14, %"struct.std::__1::pair.1125"* %169, %"struct.std::__1::pair.1125"* %8)
  br label %177

177:                                              ; preds = %175, %170
  %178 = phi i32 [ %174, %170 ], [ %176, %175 ]
  %179 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %14, i64 0, i32 0
  %180 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %169, i64 0, i32 0
  %181 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %179, %"class.blink::CSSPropertyName"* dereferenceable(16) %180) #8
  br i1 %181, label %224, label %182

182:                                              ; preds = %177, %219
  %183 = phi %"struct.std::__1::pair.1125"* [ %184, %219 ], [ %8, %177 ]
  %184 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %183, i64 -1
  %185 = icmp eq %"struct.std::__1::pair.1125"* %14, %184
  br i1 %185, label %186, label %219

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %14, i64 1
  %188 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %179, %"class.blink::CSSPropertyName"* dereferenceable(16) %9) #8
  br i1 %188, label %200, label %189

189:                                              ; preds = %186
  %190 = icmp eq %"struct.std::__1::pair.1125"* %187, %8
  br i1 %190, label %286, label %191

191:                                              ; preds = %189, %197
  %192 = phi %"struct.std::__1::pair.1125"* [ %198, %197 ], [ %187, %189 ]
  %193 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %192, i64 0, i32 0
  %194 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %179, %"class.blink::CSSPropertyName"* dereferenceable(16) %193) #8
  br i1 %194, label %195, label %197

195:                                              ; preds = %191
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"* %192, %"struct.std::__1::pair.1125"* dereferenceable(24) %8) #8
  %196 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %192, i64 1
  br label %200

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %192, i64 1
  %199 = icmp eq %"struct.std::__1::pair.1125"* %198, %8
  br i1 %199, label %286, label %191

200:                                              ; preds = %195, %186
  %201 = phi %"struct.std::__1::pair.1125"* [ %187, %186 ], [ %196, %195 ]
  %202 = icmp eq %"struct.std::__1::pair.1125"* %201, %8
  br i1 %202, label %286, label %203

203:                                              ; preds = %200, %218
  %204 = phi %"struct.std::__1::pair.1125"* [ %210, %218 ], [ %201, %200 ]
  %205 = phi %"struct.std::__1::pair.1125"* [ %213, %218 ], [ %8, %200 ]
  br label %206

206:                                              ; preds = %206, %203
  %207 = phi %"struct.std::__1::pair.1125"* [ %204, %203 ], [ %210, %206 ]
  %208 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %207, i64 0, i32 0
  %209 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %179, %"class.blink::CSSPropertyName"* dereferenceable(16) %208) #8
  %210 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %207, i64 1
  br i1 %209, label %211, label %206

211:                                              ; preds = %206, %211
  %212 = phi %"struct.std::__1::pair.1125"* [ %213, %211 ], [ %205, %206 ]
  %213 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %212, i64 -1
  %214 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %213, i64 0, i32 0
  %215 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %179, %"class.blink::CSSPropertyName"* dereferenceable(16) %214) #8
  br i1 %215, label %211, label %216

216:                                              ; preds = %211
  %217 = icmp ult %"struct.std::__1::pair.1125"* %207, %213
  br i1 %217, label %218, label %13

218:                                              ; preds = %216
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"* %207, %"struct.std::__1::pair.1125"* dereferenceable(24) %213) #8
  br label %203

219:                                              ; preds = %182
  %220 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %184, i64 0, i32 0
  %221 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %220, %"class.blink::CSSPropertyName"* dereferenceable(16) %180) #8
  br i1 %221, label %222, label %182

222:                                              ; preds = %219
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"* %14, %"struct.std::__1::pair.1125"* dereferenceable(24) %184) #8
  %223 = add i32 %178, 1
  br label %224

224:                                              ; preds = %177, %222
  %225 = phi i32 [ %223, %222 ], [ %178, %177 ]
  %226 = phi %"struct.std::__1::pair.1125"* [ %184, %222 ], [ %8, %177 ]
  %227 = ptrtoint %"struct.std::__1::pair.1125"* %14 to i64
  %228 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %14, i64 1
  %229 = icmp ult %"struct.std::__1::pair.1125"* %228, %226
  br i1 %229, label %230, label %252

230:                                              ; preds = %224, %248
  %231 = phi %"struct.std::__1::pair.1125"* [ %251, %248 ], [ %169, %224 ]
  %232 = phi i32 [ %249, %248 ], [ %225, %224 ]
  %233 = phi %"struct.std::__1::pair.1125"* [ %240, %248 ], [ %228, %224 ]
  %234 = phi %"struct.std::__1::pair.1125"* [ %243, %248 ], [ %226, %224 ]
  %235 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %231, i64 0, i32 0
  br label %236

236:                                              ; preds = %236, %230
  %237 = phi %"struct.std::__1::pair.1125"* [ %233, %230 ], [ %240, %236 ]
  %238 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %237, i64 0, i32 0
  %239 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %238, %"class.blink::CSSPropertyName"* dereferenceable(16) %235) #8
  %240 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %237, i64 1
  br i1 %239, label %236, label %241

241:                                              ; preds = %236, %241
  %242 = phi %"struct.std::__1::pair.1125"* [ %243, %241 ], [ %234, %236 ]
  %243 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %242, i64 -1
  %244 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %243, i64 0, i32 0
  %245 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %244, %"class.blink::CSSPropertyName"* dereferenceable(16) %235) #8
  br i1 %245, label %246, label %241

246:                                              ; preds = %241
  %247 = icmp ugt %"struct.std::__1::pair.1125"* %237, %243
  br i1 %247, label %252, label %248

248:                                              ; preds = %246
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"* %237, %"struct.std::__1::pair.1125"* dereferenceable(24) %243) #8
  %249 = add i32 %232, 1
  %250 = icmp eq %"struct.std::__1::pair.1125"* %231, %237
  %251 = select i1 %250, %"struct.std::__1::pair.1125"* %243, %"struct.std::__1::pair.1125"* %231
  br label %230

252:                                              ; preds = %246, %224
  %253 = phi %"struct.std::__1::pair.1125"* [ %169, %224 ], [ %231, %246 ]
  %254 = phi i32 [ %225, %224 ], [ %232, %246 ]
  %255 = phi %"struct.std::__1::pair.1125"* [ %228, %224 ], [ %237, %246 ]
  %256 = icmp eq %"struct.std::__1::pair.1125"* %255, %253
  br i1 %256, label %263, label %257

257:                                              ; preds = %252
  %258 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %253, i64 0, i32 0
  %259 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %255, i64 0, i32 0
  %260 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %258, %"class.blink::CSSPropertyName"* dereferenceable(16) %259) #8
  br i1 %260, label %261, label %263

261:                                              ; preds = %257
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"* %255, %"struct.std::__1::pair.1125"* dereferenceable(24) %253) #8
  %262 = add i32 %254, 1
  br label %263

263:                                              ; preds = %252, %261, %257
  %264 = phi i32 [ %262, %261 ], [ %254, %257 ], [ %254, %252 ]
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %273

266:                                              ; preds = %263
  %267 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEbT0_SL_T_"(%"struct.std::__1::pair.1125"* %14, %"struct.std::__1::pair.1125"* %255)
  %268 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %255, i64 1
  %269 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEbT0_SL_T_"(%"struct.std::__1::pair.1125"* %268, %"struct.std::__1::pair.1125"* %5)
  br i1 %269, label %270, label %272

270:                                              ; preds = %266
  br i1 %267, label %286, label %271

271:                                              ; preds = %270, %284
  br label %4

272:                                              ; preds = %266
  br i1 %267, label %282, label %273

273:                                              ; preds = %272, %263
  %274 = ptrtoint %"struct.std::__1::pair.1125"* %255 to i64
  %275 = sub i64 %274, %227
  %276 = sdiv exact i64 %275, 24
  %277 = sub i64 %10, %274
  %278 = sdiv exact i64 %277, 24
  %279 = icmp slt i64 %276, %278
  br i1 %279, label %280, label %284

280:                                              ; preds = %273
  tail call fastcc void @"_ZNSt3__16__sortIRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEvT0_SL_T_"(%"struct.std::__1::pair.1125"* %14, %"struct.std::__1::pair.1125"* %255)
  %281 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %255, i64 1
  br label %282

282:                                              ; preds = %280, %272
  %283 = phi %"struct.std::__1::pair.1125"* [ %268, %272 ], [ %281, %280 ]
  br label %11

284:                                              ; preds = %273
  %285 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %255, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEvT0_SL_T_"(%"struct.std::__1::pair.1125"* %285, %"struct.std::__1::pair.1125"* %5)
  br label %271

286:                                              ; preds = %270, %200, %13, %13, %189, %197, %163, %41, %18, %23, %24, %28, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_T_"(%"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"*) unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %0, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %4, %"class.blink::CSSPropertyName"* dereferenceable(16) %5) #8
  %7 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %2, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %7, %"class.blink::CSSPropertyName"* dereferenceable(16) %4) #8
  br i1 %6, label %13, label %9

9:                                                ; preds = %3
  br i1 %8, label %10, label %18

10:                                               ; preds = %9
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"* %1, %"struct.std::__1::pair.1125"* dereferenceable(24) %2) #8
  %11 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %4, %"class.blink::CSSPropertyName"* dereferenceable(16) %5) #8
  br i1 %11, label %12, label %18

12:                                               ; preds = %10
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"* %0, %"struct.std::__1::pair.1125"* dereferenceable(24) %1) #8
  br label %18

13:                                               ; preds = %3
  br i1 %8, label %14, label %15

14:                                               ; preds = %13
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"* %0, %"struct.std::__1::pair.1125"* dereferenceable(24) %2) #8
  br label %18

15:                                               ; preds = %13
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"* %0, %"struct.std::__1::pair.1125"* dereferenceable(24) %1) #8
  %16 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %7, %"class.blink::CSSPropertyName"* dereferenceable(16) %4) #8
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"* %1, %"struct.std::__1::pair.1125"* dereferenceable(24) %2) #8
  br label %18

18:                                               ; preds = %15, %17, %10, %12, %9, %14
  %19 = phi i32 [ 1, %14 ], [ 0, %9 ], [ 2, %12 ], [ 1, %10 ], [ 2, %17 ], [ 1, %15 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_SL_T_"(%"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"*) unnamed_addr #0 {
  %5 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_T_"(%"struct.std::__1::pair.1125"* %0, %"struct.std::__1::pair.1125"* %1, %"struct.std::__1::pair.1125"* %2)
  %6 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %2, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %6, %"class.blink::CSSPropertyName"* dereferenceable(16) %7) #8
  br i1 %8, label %9, label %19

9:                                                ; preds = %4
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"* %2, %"struct.std::__1::pair.1125"* dereferenceable(24) %3) #8
  %10 = add i32 %5, 1
  %11 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %1, i64 0, i32 0
  %12 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %7, %"class.blink::CSSPropertyName"* dereferenceable(16) %11) #8
  br i1 %12, label %13, label %19

13:                                               ; preds = %9
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"* %1, %"struct.std::__1::pair.1125"* dereferenceable(24) %2) #8
  %14 = add i32 %5, 2
  %15 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %0, i64 0, i32 0
  %16 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %11, %"class.blink::CSSPropertyName"* dereferenceable(16) %15) #8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"* %0, %"struct.std::__1::pair.1125"* dereferenceable(24) %1) #8
  %18 = add i32 %5, 3
  br label %19

19:                                               ; preds = %9, %17, %13, %4
  %20 = phi i32 [ %18, %17 ], [ %14, %13 ], [ %10, %9 ], [ %5, %4 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_SL_SL_T_"(%"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"*) unnamed_addr #0 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_SL_T_"(%"struct.std::__1::pair.1125"* %0, %"struct.std::__1::pair.1125"* %1, %"struct.std::__1::pair.1125"* %2, %"struct.std::__1::pair.1125"* %3)
  %7 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %3, i64 0, i32 0
  %9 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %7, %"class.blink::CSSPropertyName"* dereferenceable(16) %8) #8
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"* %3, %"struct.std::__1::pair.1125"* dereferenceable(24) %4) #8
  %11 = add i32 %6, 1
  %12 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %2, i64 0, i32 0
  %13 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %8, %"class.blink::CSSPropertyName"* dereferenceable(16) %12) #8
  br i1 %13, label %14, label %24

14:                                               ; preds = %10
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"* %2, %"struct.std::__1::pair.1125"* dereferenceable(24) %3) #8
  %15 = add i32 %6, 2
  %16 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %1, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %12, %"class.blink::CSSPropertyName"* dereferenceable(16) %16) #8
  br i1 %17, label %18, label %24

18:                                               ; preds = %14
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"* %1, %"struct.std::__1::pair.1125"* dereferenceable(24) %2) #8
  %19 = add i32 %6, 3
  %20 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %0, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %16, %"class.blink::CSSPropertyName"* dereferenceable(16) %20) #8
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"* %0, %"struct.std::__1::pair.1125"* dereferenceable(24) %1) #8
  %23 = add i32 %6, 4
  br label %24

24:                                               ; preds = %10, %18, %22, %14, %5
  %25 = phi i32 [ %23, %22 ], [ %19, %18 ], [ %15, %14 ], [ %11, %10 ], [ %6, %5 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEbT0_SL_T_"(%"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"*) unnamed_addr #0 {
  %3 = alloca %"struct.std::__1::pair.1125", align 8
  %4 = ptrtoint %"struct.std::__1::pair.1125"* %1 to i64
  %5 = ptrtoint %"struct.std::__1::pair.1125"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  switch i64 %7, label %29 [
    i64 0, label %161
    i64 1, label %161
    i64 2, label %8
    i64 3, label %14
    i64 4, label %18
    i64 5, label %23
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %1, i64 -1
  %10 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %0, i64 0, i32 0
  %12 = tail call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %10, %"class.blink::CSSPropertyName"* dereferenceable(16) %11) #8
  br i1 %12, label %13, label %161

13:                                               ; preds = %8
  tail call void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"* %0, %"struct.std::__1::pair.1125"* dereferenceable(24) %9) #8
  br label %161

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %0, i64 1
  %16 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %1, i64 -1
  %17 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_T_"(%"struct.std::__1::pair.1125"* %0, %"struct.std::__1::pair.1125"* %15, %"struct.std::__1::pair.1125"* %16)
  br label %161

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %0, i64 1
  %20 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %0, i64 2
  %21 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %1, i64 -1
  %22 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_SL_T_"(%"struct.std::__1::pair.1125"* %0, %"struct.std::__1::pair.1125"* %19, %"struct.std::__1::pair.1125"* %20, %"struct.std::__1::pair.1125"* %21)
  br label %161

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %0, i64 1
  %25 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %0, i64 2
  %26 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %0, i64 3
  %27 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %1, i64 -1
  %28 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_SL_SL_T_"(%"struct.std::__1::pair.1125"* %0, %"struct.std::__1::pair.1125"* %24, %"struct.std::__1::pair.1125"* %25, %"struct.std::__1::pair.1125"* %26, %"struct.std::__1::pair.1125"* %27)
  br label %161

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %0, i64 2
  %31 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %0, i64 1
  %32 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN5blink36PrepopulatedComputedStylePropertyMap15ForEachPropertyERKNS_8functionIFvRKNS1_15CSSPropertyNameERKNS1_8CSSValueEEEEE3$_0PNS_4pairIS4_NS1_6MemberIS8_EEEEEEjT0_SL_SL_T_"(%"struct.std::__1::pair.1125"* %0, %"struct.std::__1::pair.1125"* %31, %"struct.std::__1::pair.1125"* %30)
  %33 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %0, i64 3
  %34 = icmp eq %"struct.std::__1::pair.1125"* %33, %1
  br i1 %34, label %161, label %35

35:                                               ; preds = %29
  %36 = bitcast %"struct.std::__1::pair.1125"* %3 to i8*
  %37 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %3, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %3, i64 0, i32 0, i32 1
  %39 = bitcast %"class.WTF::AtomicString"* %38 to i64*
  %40 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %3, i64 0, i32 1
  %41 = bitcast %"class.blink::Member"* %40 to i64*
  %42 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %3, i64 0, i32 0
  %43 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %38, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %45 = bitcast %"class.WTF::AtomicString"* %38 to <2 x i64>*
  br label %46

46:                                               ; preds = %35, %154
  %47 = phi %"struct.std::__1::pair.1125"* [ %33, %35 ], [ %156, %154 ]
  %48 = phi i32 [ 0, %35 ], [ %155, %154 ]
  %49 = phi %"struct.std::__1::pair.1125"* [ %30, %35 ], [ %47, %154 ]
  %50 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %47, i64 0, i32 0
  %51 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %49, i64 0, i32 0
  %52 = call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16) %50, %"class.blink::CSSPropertyName"* dereferenceable(16) %51) #8
  br i1 %52, label %53, label %154

53:                                               ; preds = %46
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  %54 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %47, i64 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 8
  store i32 %55, i32* %37, align 8
  %56 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %47, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.WTF::AtomicString"* %56 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %57, align 8
  store <2 x i64> %59, <2 x i64>* %45, align 8
  br label %60

60:                                               ; preds = %101, %53
  %61 = phi %"struct.std::__1::pair.1125"* [ %47, %53 ], [ %62, %101 ]
  %62 = phi %"struct.std::__1::pair.1125"* [ %49, %53 ], [ %102, %101 ]
  %63 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %62, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %61, i64 0, i32 0, i32 0
  store i32 %64, i32* %65, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %61, i64 0, i32 0, i32 1
  %67 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %62, i64 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.WTF::AtomicString"* %67 to i64*
  %70 = load i64, i64* %69, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %68, align 8
  %71 = bitcast %"class.WTF::AtomicString"* %66 to i64*
  %72 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %66, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  store i64 %70, i64* %71, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %60
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #8
  br label %88

88:                                               ; preds = %87, %84, %60
  %89 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %62, i64 0, i32 1
  %90 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %61, i64 0, i32 1
  %91 = bitcast %"class.blink::Member"* %89 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.blink::Member"* %90 to i64*
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %99, label %96

96:                                               ; preds = %88
  %97 = inttoptr i64 %92 to i8*
  %98 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %97) #8
  br label %99

99:                                               ; preds = %88, %96
  %100 = icmp eq %"struct.std::__1::pair.1125"* %62, %0
  br i1 %100, label %105, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %62, i64 -1
  %103 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %102, i64 0, i32 0
  %104 = call zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %42, %"class.blink::CSSPropertyName"* dereferenceable(16) %103) #8
  br i1 %104, label %60, label %105

105:                                              ; preds = %99, %101
  %106 = phi %"struct.std::__1::pair.1125"* [ %0, %99 ], [ %62, %101 ]
  %107 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %67, i64 0, i32 0, i32 0, i32 0
  %108 = bitcast %"class.WTF::AtomicString"* %67 to i64*
  %109 = bitcast %"class.blink::Member"* %89 to i64*
  %110 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %106, i64 0, i32 0, i32 0
  %111 = load i32, i32* %37, align 8
  store i32 %111, i32* %110, align 8
  %112 = load i64, i64* %39, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %43, align 8
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  store i64 %112, i64* %108, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %105
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #8
  br label %128

128:                                              ; preds = %127, %124, %105
  %129 = load i64, i64* %41, align 8
  store atomic i64 %129, i64* %109 monotonic, align 8
  %130 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %135, label %132

132:                                              ; preds = %128
  %133 = inttoptr i64 %129 to i8*
  %134 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %133) #8
  br label %135

135:                                              ; preds = %128, %132
  %136 = add i32 %48, 1
  %137 = icmp eq i32 %136, 8
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #8
  br label %153

153:                                              ; preds = %135, %149, %152
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #8
  br i1 %137, label %158, label %154

154:                                              ; preds = %153, %46
  %155 = phi i32 [ %136, %153 ], [ %48, %46 ]
  %156 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %47, i64 1
  %157 = icmp eq %"struct.std::__1::pair.1125"* %156, %1
  br i1 %157, label %161, label %46

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %47, i64 1
  %160 = icmp eq %"struct.std::__1::pair.1125"* %159, %1
  br label %161

161:                                              ; preds = %154, %158, %29, %8, %13, %2, %2, %23, %18, %14
  %162 = phi i1 [ true, %23 ], [ true, %18 ], [ true, %14 ], [ true, %2 ], [ true, %2 ], [ true, %13 ], [ true, %8 ], [ true, %29 ], [ %160, %158 ], [ true, %154 ]
  ret i1 %162
}

declare zeroext i1 @_ZN5blink24ComputedStylePropertyMap20ComparePropertyNamesERKNS_15CSSPropertyNameES3_(%"class.blink::CSSPropertyName"* dereferenceable(16), %"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14pairIN5blink15CSSPropertyNameENS1_6MemberIKNS1_8CSSValueEEEE4swapERS7_(%"struct.std::__1::pair.1125"*, %"struct.std::__1::pair.1125"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  %8 = load i64, i64* %7, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %6, align 8
  %9 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %1, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 8
  store i32 %10, i32* %3, align 8
  %11 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %1, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  %14 = load i64, i64* %13, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  store i64 %14, i64* %7, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #8
  br label %30

30:                                               ; preds = %29, %26, %2
  store i32 %4, i32* %9, align 8
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  store i64 %8, i64* %13, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #8
  br label %46

46:                                               ; preds = %30, %42, %45
  %47 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"struct.std::__1::pair.1125", %"struct.std::__1::pair.1125"* %1, i64 0, i32 1
  %49 = bitcast %"class.blink::Member"* %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.blink::Member"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store atomic i64 %52, i64* %49 monotonic, align 8
  store atomic i64 %50, i64* %51 monotonic, align 8
  %53 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %46
  %56 = bitcast %"class.blink::Member"* %47 to i8**
  %57 = load i8*, i8** %56, align 8
  %58 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %57) #8
  br label %59

59:                                               ; preds = %55, %46
  %60 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %59
  %63 = bitcast %"class.blink::Member"* %48 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %64) #8
  br label %66

66:                                               ; preds = %59, %62
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
