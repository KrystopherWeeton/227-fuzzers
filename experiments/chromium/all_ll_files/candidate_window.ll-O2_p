; ModuleID = '../../ui/base/ime/candidate_window.cc'
source_filename = "../../ui/base/ime/candidate_window.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::CandidateWindow" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.std::__1::vector" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.ui::CandidateWindow::CandidateWindowProperty"* }
%"struct.ui::CandidateWindow::CandidateWindowProperty" = type <{ i32 (...)**, i32, i32, i8, i8, i8, [5 x i8], %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::CandidateWindow::Entry"*, %"struct.ui::CandidateWindow::Entry"*, %"class.std::__1::__compressed_pair.13" }
%"struct.ui::CandidateWindow::Entry" = type { i32 (...)**, %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4" }
%"class.std::__1::basic_string.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.ui::CandidateWindow::Entry"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.8 }
%struct.anon.8 = type { %"struct.std::__1::__padding.9", i8 }
%"struct.std::__1::__padding.9" = type { [1 x i8] }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"struct.ui::InfolistEntry"*, %"struct.ui::InfolistEntry"*, %"class.std::__1::__compressed_pair.20" }
%"struct.ui::InfolistEntry" = type <{ %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.ui::InfolistEntry"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN2ui15CandidateWindow5EntryENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorIN2ui13InfolistEntryENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZN2ui13InfolistEntryC2ERKS0_ = comdat any

@_ZTVN2ui15CandidateWindowE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::CandidateWindow"*)* @_ZN2ui15CandidateWindowD2Ev to i8*), i8* bitcast (void (%"class.ui::CandidateWindow"*)* @_ZN2ui15CandidateWindowD0Ev to i8*)] }, align 8
@_ZTVN2ui15CandidateWindow23CandidateWindowPropertyE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*)* @_ZN2ui15CandidateWindow23CandidateWindowPropertyD2Ev to i8*), i8* bitcast (void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*)* @_ZN2ui15CandidateWindow23CandidateWindowPropertyD0Ev to i8*)] }, align 8
@_ZTVN2ui15CandidateWindow5EntryE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.ui::CandidateWindow::Entry"*)* @_ZN2ui15CandidateWindow5EntryD2Ev to i8*), i8* bitcast (void (%"struct.ui::CandidateWindow::Entry"*)* @_ZN2ui15CandidateWindow5EntryD0Ev to i8*)] }, align 8

@_ZN2ui15CandidateWindowC1Ev = hidden unnamed_addr alias void (%"class.ui::CandidateWindow"*), void (%"class.ui::CandidateWindow"*)* @_ZN2ui15CandidateWindowC2Ev
@_ZN2ui15CandidateWindowD1Ev = hidden unnamed_addr alias void (%"class.ui::CandidateWindow"*), void (%"class.ui::CandidateWindow"*)* @_ZN2ui15CandidateWindowD2Ev
@_ZN2ui15CandidateWindow23CandidateWindowPropertyC1Ev = hidden unnamed_addr alias void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*), void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*)* @_ZN2ui15CandidateWindow23CandidateWindowPropertyC2Ev
@_ZN2ui15CandidateWindow23CandidateWindowPropertyD1Ev = hidden unnamed_addr alias void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*), void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*)* @_ZN2ui15CandidateWindow23CandidateWindowPropertyD2Ev
@_ZN2ui15CandidateWindow5EntryC1Ev = hidden unnamed_addr alias void (%"struct.ui::CandidateWindow::Entry"*), void (%"struct.ui::CandidateWindow::Entry"*)* @_ZN2ui15CandidateWindow5EntryC2Ev
@_ZN2ui15CandidateWindow5EntryC1ERKS1_ = hidden unnamed_addr alias void (%"struct.ui::CandidateWindow::Entry"*, %"struct.ui::CandidateWindow::Entry"*), void (%"struct.ui::CandidateWindow::Entry"*, %"struct.ui::CandidateWindow::Entry"*)* @_ZN2ui15CandidateWindow5EntryC2ERKS1_
@_ZN2ui15CandidateWindow5EntryD1Ev = hidden unnamed_addr alias void (%"struct.ui::CandidateWindow::Entry"*), void (%"struct.ui::CandidateWindow::Entry"*)* @_ZN2ui15CandidateWindow5EntryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15CandidateWindowC2Ev(%"class.ui::CandidateWindow"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2ui15CandidateWindowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 1
  %4 = tail call i8* @_Znwm(i64 64) #10
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2ui15CandidateWindow23CandidateWindowPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 9, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 12
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %4, i64 16
  store i8 1, i8* %10, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 17
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds i8, i8* %4, i64 18
  store i8 0, i8* %12, align 2
  %13 = getelementptr inbounds i8, i8* %4, i64 24
  %14 = getelementptr inbounds i8, i8* %4, i64 52
  %15 = bitcast i8* %14 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 25, i1 false) #11
  store i32 -1, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %4, i64 56
  %17 = bitcast i8* %16 to i32*
  store i32 0, i32* %17, align 8
  %18 = ptrtoint i8* %4 to i64
  %19 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 2
  %21 = bitcast %"class.std::__1::vector"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15CandidateWindowD2Ev(%"class.ui::CandidateWindow"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2ui15CandidateWindowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.ui::CandidateWindow::Entry"*, %"struct.ui::CandidateWindow::Entry"** %4, align 8
  %6 = icmp eq %"struct.ui::CandidateWindow::Entry"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.ui::CandidateWindow::Entry"* %5 to i8*
  %9 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"struct.ui::CandidateWindow::Entry"*, %"struct.ui::CandidateWindow::Entry"** %9, align 8
  %11 = icmp eq %"struct.ui::CandidateWindow::Entry"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"struct.ui::CandidateWindow::Entry"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %13, i64 -1
  %15 = bitcast %"struct.ui::CandidateWindow::Entry"* %14 to void (%"struct.ui::CandidateWindow::Entry"*)***
  %16 = load void (%"struct.ui::CandidateWindow::Entry"*)**, void (%"struct.ui::CandidateWindow::Entry"*)*** %15, align 8
  %17 = load void (%"struct.ui::CandidateWindow::Entry"*)*, void (%"struct.ui::CandidateWindow::Entry"*)** %16, align 8
  tail call void %17(%"struct.ui::CandidateWindow::Entry"* %14) #11
  %18 = icmp eq %"struct.ui::CandidateWindow::Entry"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"struct.ui::CandidateWindow::Entry"* %5, %"struct.ui::CandidateWindow::Entry"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"struct.ui::CandidateWindow::CandidateWindowProperty"*, %"struct.ui::CandidateWindow::CandidateWindowProperty"** %25, align 8
  store %"struct.ui::CandidateWindow::CandidateWindowProperty"* null, %"struct.ui::CandidateWindow::CandidateWindowProperty"** %25, align 8
  %27 = icmp eq %"struct.ui::CandidateWindow::CandidateWindowProperty"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.ui::CandidateWindow::CandidateWindowProperty"* %26 to void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*)***
  %30 = load void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*)**, void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*)*, void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*)** %30, i64 1
  %32 = load void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*)*, void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*)** %31, align 8
  tail call void %32(%"struct.ui::CandidateWindow::CandidateWindowProperty"* nonnull %26) #11
  br label %33

33:                                               ; preds = %24, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15CandidateWindowD0Ev(%"class.ui::CandidateWindow"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2ui15CandidateWindowE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.ui::CandidateWindow::Entry"*, %"struct.ui::CandidateWindow::Entry"** %4, align 8
  %6 = icmp eq %"struct.ui::CandidateWindow::Entry"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.ui::CandidateWindow::Entry"* %5 to i8*
  %9 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 2, i32 0, i32 1
  %10 = load %"struct.ui::CandidateWindow::Entry"*, %"struct.ui::CandidateWindow::Entry"** %9, align 8
  %11 = icmp eq %"struct.ui::CandidateWindow::Entry"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"struct.ui::CandidateWindow::Entry"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %13, i64 -1
  %15 = bitcast %"struct.ui::CandidateWindow::Entry"* %14 to void (%"struct.ui::CandidateWindow::Entry"*)***
  %16 = load void (%"struct.ui::CandidateWindow::Entry"*)**, void (%"struct.ui::CandidateWindow::Entry"*)*** %15, align 8
  %17 = load void (%"struct.ui::CandidateWindow::Entry"*)*, void (%"struct.ui::CandidateWindow::Entry"*)** %16, align 8
  tail call void %17(%"struct.ui::CandidateWindow::Entry"* %14) #11
  %18 = icmp eq %"struct.ui::CandidateWindow::Entry"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"struct.ui::CandidateWindow::Entry"* %5, %"struct.ui::CandidateWindow::Entry"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %22, %1
  %25 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %"struct.ui::CandidateWindow::CandidateWindowProperty"*, %"struct.ui::CandidateWindow::CandidateWindowProperty"** %25, align 8
  store %"struct.ui::CandidateWindow::CandidateWindowProperty"* null, %"struct.ui::CandidateWindow::CandidateWindowProperty"** %25, align 8
  %27 = icmp eq %"struct.ui::CandidateWindow::CandidateWindowProperty"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.ui::CandidateWindow::CandidateWindowProperty"* %26 to void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*)***
  %30 = load void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*)**, void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*)*, void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*)** %30, i64 1
  %32 = load void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*)*, void (%"struct.ui::CandidateWindow::CandidateWindowProperty"*)** %31, align 8
  tail call void %32(%"struct.ui::CandidateWindow::CandidateWindowProperty"* nonnull %26) #11
  br label %33

33:                                               ; preds = %24, %28
  %34 = bitcast %"class.ui::CandidateWindow"* %0 to i8*
  tail call void @_ZdlPv(i8* %34) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2ui15CandidateWindow7IsEqualERKS0_(%"class.ui::CandidateWindow"* nocapture readonly, %"class.ui::CandidateWindow"* nocapture readonly dereferenceable(40)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.ui::CandidateWindow::CandidateWindowProperty"*, %"struct.ui::CandidateWindow::CandidateWindowProperty"** %3, align 8
  %5 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"struct.ui::CandidateWindow::CandidateWindowProperty"*, %"struct.ui::CandidateWindow::CandidateWindowProperty"** %7, align 8
  %9 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %6, %10
  br i1 %11, label %12, label %341

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %4, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %8, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %341

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %4, i64 0, i32 3
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp ne i8 %20, 0
  %22 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %8, i64 0, i32 3
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp ne i8 %23, 0
  %25 = xor i1 %21, %24
  br i1 %25, label %341, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %4, i64 0, i32 4
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %8, i64 0, i32 4
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = icmp eq i8 %28, %30
  br i1 %31, label %32, label %341

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %4, i64 0, i32 5
  %34 = load i8, i8* %33, align 2, !range !2
  %35 = icmp ne i8 %34, 0
  %36 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %8, i64 0, i32 5
  %37 = load i8, i8* %36, align 2, !range !2
  %38 = icmp ne i8 %37, 0
  %39 = xor i1 %35, %38
  br i1 %39, label %341, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %4, i64 0, i32 8
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp ne i8 %42, 0
  %44 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %8, i64 0, i32 8
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp ne i8 %45, 0
  %47 = xor i1 %43, %46
  br i1 %47, label %341, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %4, i64 0, i32 7
  %50 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %8, i64 0, i32 7
  %51 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %4, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %53 to i64
  %58 = select i1 %54, i64 %56, i64 %57
  %59 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = zext i8 %61 to i64
  %66 = select i1 %62, i64 %64, i64 %65
  %67 = icmp eq i64 %58, %66
  br i1 %67, label %68, label %341

68:                                               ; preds = %48
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %72 = select i1 %54, i8* %70, i8* %71
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %76 = select i1 %62, i8* %74, i8* %75
  %77 = icmp eq i64 %58, 0
  br i1 %54, label %84, label %78

78:                                               ; preds = %68
  br i1 %77, label %100, label %79

79:                                               ; preds = %78
  %80 = ptrtoint i8* %70 to i64
  %81 = trunc i64 %80 to i8
  %82 = load i8, i8* %76, align 1
  %83 = icmp eq i8 %82, %81
  br i1 %83, label %85, label %341

84:                                               ; preds = %68
  br i1 %77, label %100, label %97

85:                                               ; preds = %79, %92
  %86 = phi i64 [ %89, %92 ], [ %57, %79 ]
  %87 = phi i8* [ %90, %92 ], [ %71, %79 ]
  %88 = phi i8* [ %93, %92 ], [ %76, %79 ]
  %89 = add i64 %86, -1
  %90 = getelementptr inbounds i8, i8* %87, i64 1
  %91 = icmp eq i64 %89, 0
  br i1 %91, label %100, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds i8, i8* %88, i64 1
  %94 = load i8, i8* %90, align 1
  %95 = load i8, i8* %93, align 1
  %96 = icmp eq i8 %94, %95
  br i1 %96, label %85, label %341

97:                                               ; preds = %84
  %98 = tail call i32 @bcmp(i8* %72, i8* %76, i64 %58) #11
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %341

100:                                              ; preds = %85, %97, %78, %84
  %101 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 2
  %102 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 2, i32 0, i32 1
  %103 = bitcast %"struct.ui::CandidateWindow::Entry"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.std::__1::vector"* %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = sub i64 %104, %106
  %108 = ashr exact i64 %107, 7
  %109 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %1, i64 0, i32 2
  %110 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %1, i64 0, i32 2, i32 0, i32 1
  %111 = bitcast %"struct.ui::CandidateWindow::Entry"** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.std::__1::vector"* %109 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = sub i64 %112, %114
  %116 = ashr exact i64 %115, 7
  %117 = icmp eq i64 %108, %116
  %118 = inttoptr i64 %106 to %"struct.ui::CandidateWindow::Entry"*
  %119 = inttoptr i64 %114 to %"struct.ui::CandidateWindow::Entry"*
  br i1 %117, label %120, label %341

120:                                              ; preds = %100
  %121 = icmp eq i64 %107, 0
  br i1 %121, label %341, label %122

122:                                              ; preds = %120, %338
  %123 = phi i64 [ %339, %338 ], [ 0, %120 ]
  %124 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %118, i64 %123, i32 1
  %125 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %119, i64 %123, i32 1
  %126 = bitcast %"class.std::__1::basic_string.4"* %124 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %126, i64 0, i32 1, i32 1
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  %130 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %118, i64 %123, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = zext i8 %128 to i64
  %133 = select i1 %129, i64 %131, i64 %132
  %134 = bitcast %"class.std::__1::basic_string.4"* %125 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %134, i64 0, i32 1, i32 1
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  %138 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %119, i64 %123, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %139 = load i64, i64* %138, align 8
  %140 = zext i8 %136 to i64
  %141 = select i1 %137, i64 %139, i64 %140
  %142 = icmp eq i64 %133, %141
  br i1 %142, label %143, label %341

143:                                              ; preds = %122
  %144 = icmp eq i64 %133, 0
  br i1 %144, label %166, label %145

145:                                              ; preds = %143
  %146 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load i16*, i16** %146, align 8
  %148 = bitcast %"class.std::__1::basic_string.4"* %125 to i16*
  %149 = select i1 %137, i16* %147, i16* %148
  %150 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i16*, i16** %150, align 8
  %152 = bitcast %"class.std::__1::basic_string.4"* %124 to i16*
  %153 = select i1 %129, i16* %151, i16* %152
  br label %154

154:                                              ; preds = %161, %145
  %155 = phi i64 [ %162, %161 ], [ %133, %145 ]
  %156 = phi i16* [ %164, %161 ], [ %149, %145 ]
  %157 = phi i16* [ %163, %161 ], [ %153, %145 ]
  %158 = load i16, i16* %157, align 2
  %159 = load i16, i16* %156, align 2
  %160 = icmp eq i16 %159, %158
  br i1 %160, label %161, label %341

161:                                              ; preds = %154
  %162 = add i64 %155, -1
  %163 = getelementptr inbounds i16, i16* %157, i64 1
  %164 = getelementptr inbounds i16, i16* %156, i64 1
  %165 = icmp eq i64 %162, 0
  br i1 %165, label %166, label %154

166:                                              ; preds = %161, %143
  %167 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %118, i64 %123, i32 2
  %168 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %119, i64 %123, i32 2
  %169 = bitcast %"class.std::__1::basic_string.4"* %167 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %170 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %169, i64 0, i32 1, i32 1
  %171 = load i8, i8* %170, align 1
  %172 = icmp slt i8 %171, 0
  %173 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %118, i64 %123, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %174 = load i64, i64* %173, align 8
  %175 = zext i8 %171 to i64
  %176 = select i1 %172, i64 %174, i64 %175
  %177 = bitcast %"class.std::__1::basic_string.4"* %168 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %177, i64 0, i32 1, i32 1
  %179 = load i8, i8* %178, align 1
  %180 = icmp slt i8 %179, 0
  %181 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %119, i64 %123, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = zext i8 %179 to i64
  %184 = select i1 %180, i64 %182, i64 %183
  %185 = icmp eq i64 %176, %184
  br i1 %185, label %186, label %341

186:                                              ; preds = %166
  %187 = icmp eq i64 %176, 0
  br i1 %187, label %209, label %188

188:                                              ; preds = %186
  %189 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load i16*, i16** %189, align 8
  %191 = bitcast %"class.std::__1::basic_string.4"* %168 to i16*
  %192 = select i1 %180, i16* %190, i16* %191
  %193 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load i16*, i16** %193, align 8
  %195 = bitcast %"class.std::__1::basic_string.4"* %167 to i16*
  %196 = select i1 %172, i16* %194, i16* %195
  br label %197

197:                                              ; preds = %204, %188
  %198 = phi i64 [ %205, %204 ], [ %176, %188 ]
  %199 = phi i16* [ %207, %204 ], [ %192, %188 ]
  %200 = phi i16* [ %206, %204 ], [ %196, %188 ]
  %201 = load i16, i16* %200, align 2
  %202 = load i16, i16* %199, align 2
  %203 = icmp eq i16 %202, %201
  br i1 %203, label %204, label %341

204:                                              ; preds = %197
  %205 = add i64 %198, -1
  %206 = getelementptr inbounds i16, i16* %200, i64 1
  %207 = getelementptr inbounds i16, i16* %199, i64 1
  %208 = icmp eq i64 %205, 0
  br i1 %208, label %209, label %197

209:                                              ; preds = %204, %186
  %210 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %118, i64 %123, i32 3
  %211 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %119, i64 %123, i32 3
  %212 = bitcast %"class.std::__1::basic_string.4"* %210 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %212, i64 0, i32 1, i32 1
  %214 = load i8, i8* %213, align 1
  %215 = icmp slt i8 %214, 0
  %216 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %118, i64 %123, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %217 = load i64, i64* %216, align 8
  %218 = zext i8 %214 to i64
  %219 = select i1 %215, i64 %217, i64 %218
  %220 = bitcast %"class.std::__1::basic_string.4"* %211 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %220, i64 0, i32 1, i32 1
  %222 = load i8, i8* %221, align 1
  %223 = icmp slt i8 %222, 0
  %224 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %119, i64 %123, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %225 = load i64, i64* %224, align 8
  %226 = zext i8 %222 to i64
  %227 = select i1 %223, i64 %225, i64 %226
  %228 = icmp eq i64 %219, %227
  br i1 %228, label %229, label %341

229:                                              ; preds = %209
  %230 = icmp eq i64 %219, 0
  br i1 %230, label %252, label %231

231:                                              ; preds = %229
  %232 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %211, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load i16*, i16** %232, align 8
  %234 = bitcast %"class.std::__1::basic_string.4"* %211 to i16*
  %235 = select i1 %223, i16* %233, i16* %234
  %236 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %210, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load i16*, i16** %236, align 8
  %238 = bitcast %"class.std::__1::basic_string.4"* %210 to i16*
  %239 = select i1 %215, i16* %237, i16* %238
  br label %240

240:                                              ; preds = %247, %231
  %241 = phi i64 [ %248, %247 ], [ %219, %231 ]
  %242 = phi i16* [ %250, %247 ], [ %235, %231 ]
  %243 = phi i16* [ %249, %247 ], [ %239, %231 ]
  %244 = load i16, i16* %243, align 2
  %245 = load i16, i16* %242, align 2
  %246 = icmp eq i16 %245, %244
  br i1 %246, label %247, label %341

247:                                              ; preds = %240
  %248 = add i64 %241, -1
  %249 = getelementptr inbounds i16, i16* %243, i64 1
  %250 = getelementptr inbounds i16, i16* %242, i64 1
  %251 = icmp eq i64 %248, 0
  br i1 %251, label %252, label %240

252:                                              ; preds = %247, %229
  %253 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %118, i64 %123, i32 4
  %254 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %119, i64 %123, i32 4
  %255 = bitcast %"class.std::__1::basic_string.4"* %253 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %256 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %255, i64 0, i32 1, i32 1
  %257 = load i8, i8* %256, align 1
  %258 = icmp slt i8 %257, 0
  %259 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %118, i64 %123, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %260 = load i64, i64* %259, align 8
  %261 = zext i8 %257 to i64
  %262 = select i1 %258, i64 %260, i64 %261
  %263 = bitcast %"class.std::__1::basic_string.4"* %254 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %264 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %263, i64 0, i32 1, i32 1
  %265 = load i8, i8* %264, align 1
  %266 = icmp slt i8 %265, 0
  %267 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %119, i64 %123, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %268 = load i64, i64* %267, align 8
  %269 = zext i8 %265 to i64
  %270 = select i1 %266, i64 %268, i64 %269
  %271 = icmp eq i64 %262, %270
  br i1 %271, label %272, label %341

272:                                              ; preds = %252
  %273 = icmp eq i64 %262, 0
  br i1 %273, label %295, label %274

274:                                              ; preds = %272
  %275 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %254, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = load i16*, i16** %275, align 8
  %277 = bitcast %"class.std::__1::basic_string.4"* %254 to i16*
  %278 = select i1 %266, i16* %276, i16* %277
  %279 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %253, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load i16*, i16** %279, align 8
  %281 = bitcast %"class.std::__1::basic_string.4"* %253 to i16*
  %282 = select i1 %258, i16* %280, i16* %281
  br label %283

283:                                              ; preds = %290, %274
  %284 = phi i64 [ %291, %290 ], [ %262, %274 ]
  %285 = phi i16* [ %293, %290 ], [ %278, %274 ]
  %286 = phi i16* [ %292, %290 ], [ %282, %274 ]
  %287 = load i16, i16* %286, align 2
  %288 = load i16, i16* %285, align 2
  %289 = icmp eq i16 %288, %287
  br i1 %289, label %290, label %341

290:                                              ; preds = %283
  %291 = add i64 %284, -1
  %292 = getelementptr inbounds i16, i16* %286, i64 1
  %293 = getelementptr inbounds i16, i16* %285, i64 1
  %294 = icmp eq i64 %291, 0
  br i1 %294, label %295, label %283

295:                                              ; preds = %290, %272
  %296 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %118, i64 %123, i32 5
  %297 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %119, i64 %123, i32 5
  %298 = bitcast %"class.std::__1::basic_string.4"* %296 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %299 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %298, i64 0, i32 1, i32 1
  %300 = load i8, i8* %299, align 1
  %301 = icmp slt i8 %300, 0
  %302 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %118, i64 %123, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %303 = load i64, i64* %302, align 8
  %304 = zext i8 %300 to i64
  %305 = select i1 %301, i64 %303, i64 %304
  %306 = bitcast %"class.std::__1::basic_string.4"* %297 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %307 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %306, i64 0, i32 1, i32 1
  %308 = load i8, i8* %307, align 1
  %309 = icmp slt i8 %308, 0
  %310 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %119, i64 %123, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %311 = load i64, i64* %310, align 8
  %312 = zext i8 %308 to i64
  %313 = select i1 %309, i64 %311, i64 %312
  %314 = icmp eq i64 %305, %313
  br i1 %314, label %315, label %341

315:                                              ; preds = %295
  %316 = icmp eq i64 %305, 0
  br i1 %316, label %338, label %317

317:                                              ; preds = %315
  %318 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %297, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load i16*, i16** %318, align 8
  %320 = bitcast %"class.std::__1::basic_string.4"* %297 to i16*
  %321 = select i1 %309, i16* %319, i16* %320
  %322 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %296, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load i16*, i16** %322, align 8
  %324 = bitcast %"class.std::__1::basic_string.4"* %296 to i16*
  %325 = select i1 %301, i16* %323, i16* %324
  br label %326

326:                                              ; preds = %333, %317
  %327 = phi i64 [ %334, %333 ], [ %305, %317 ]
  %328 = phi i16* [ %336, %333 ], [ %321, %317 ]
  %329 = phi i16* [ %335, %333 ], [ %325, %317 ]
  %330 = load i16, i16* %329, align 2
  %331 = load i16, i16* %328, align 2
  %332 = icmp eq i16 %331, %330
  br i1 %332, label %333, label %341

333:                                              ; preds = %326
  %334 = add i64 %327, -1
  %335 = getelementptr inbounds i16, i16* %329, i64 1
  %336 = getelementptr inbounds i16, i16* %328, i64 1
  %337 = icmp eq i64 %334, 0
  br i1 %337, label %338, label %326

338:                                              ; preds = %333, %315
  %339 = add nuw i64 %123, 1
  %340 = icmp ult i64 %339, %108
  br i1 %340, label %122, label %341

341:                                              ; preds = %92, %295, %338, %122, %166, %209, %252, %154, %197, %240, %283, %326, %120, %79, %97, %100, %26, %12, %2, %40, %32, %18, %48
  %342 = phi i1 [ false, %48 ], [ false, %18 ], [ false, %32 ], [ false, %40 ], [ false, %97 ], [ false, %2 ], [ false, %12 ], [ false, %26 ], [ false, %100 ], [ true, %120 ], [ false, %79 ], [ false, %326 ], [ false, %283 ], [ false, %240 ], [ false, %197 ], [ false, %154 ], [ false, %295 ], [ true, %338 ], [ false, %122 ], [ false, %166 ], [ false, %209 ], [ false, %252 ], [ false, %92 ]
  ret i1 %342
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15CandidateWindow8CopyFromERKS0_(%"class.ui::CandidateWindow"*, %"class.ui::CandidateWindow"* readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.ui::CandidateWindow::CandidateWindowProperty"*, %"struct.ui::CandidateWindow::CandidateWindowProperty"** %3, align 8
  %5 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.ui::CandidateWindow::CandidateWindowProperty"*, %"struct.ui::CandidateWindow::CandidateWindowProperty"** %5, align 8
  %7 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %6, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %4, i64 0, i32 1
  %9 = bitcast i32* %7 to i8*
  %10 = bitcast i32* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 11, i1 false) #11
  %11 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %6, i64 0, i32 7
  %12 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %4, i64 0, i32 7
  %13 = icmp eq %"struct.ui::CandidateWindow::CandidateWindowProperty"* %6, %4
  br i1 %13, label %43, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %18, label %33, label %23

23:                                               ; preds = %14
  br i1 %22, label %27, label %24

24:                                               ; preds = %23
  %25 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #11
  br label %43

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %4, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %11, i8* %29, i64 %31) #11
  br label %43

33:                                               ; preds = %14
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %4, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %39 = zext i8 %21 to i64
  %40 = select i1 %22, i8* %35, i8* %38
  %41 = select i1 %22, i64 %37, i64 %39
  %42 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %11, i8* %40, i64 %41) #11
  br label %43

43:                                               ; preds = %2, %24, %27, %33
  %44 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %6, i64 0, i32 8
  %45 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %4, i64 0, i32 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 12, i1 false) #11
  %46 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %46, i64 0, i32 0, i32 0
  %48 = load %"struct.ui::CandidateWindow::Entry"*, %"struct.ui::CandidateWindow::Entry"** %47, align 8
  %49 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 2, i32 0, i32 1
  %50 = load %"struct.ui::CandidateWindow::Entry"*, %"struct.ui::CandidateWindow::Entry"** %49, align 8
  %51 = icmp eq %"struct.ui::CandidateWindow::Entry"* %50, %48
  br i1 %51, label %59, label %52

52:                                               ; preds = %43, %52
  %53 = phi %"struct.ui::CandidateWindow::Entry"* [ %54, %52 ], [ %50, %43 ]
  %54 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %53, i64 -1
  %55 = bitcast %"struct.ui::CandidateWindow::Entry"* %54 to void (%"struct.ui::CandidateWindow::Entry"*)***
  %56 = load void (%"struct.ui::CandidateWindow::Entry"*)**, void (%"struct.ui::CandidateWindow::Entry"*)*** %55, align 8
  %57 = load void (%"struct.ui::CandidateWindow::Entry"*)*, void (%"struct.ui::CandidateWindow::Entry"*)** %56, align 8
  tail call void %57(%"struct.ui::CandidateWindow::Entry"* %54) #11
  %58 = icmp eq %"struct.ui::CandidateWindow::Entry"* %54, %48
  br i1 %58, label %59, label %52

59:                                               ; preds = %52, %43
  store %"struct.ui::CandidateWindow::Entry"* %48, %"struct.ui::CandidateWindow::Entry"** %49, align 8
  %60 = icmp eq %"class.ui::CandidateWindow"* %0, %1
  br i1 %60, label %66, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %1, i64 0, i32 2, i32 0, i32 0
  %63 = load %"struct.ui::CandidateWindow::Entry"*, %"struct.ui::CandidateWindow::Entry"** %62, align 8
  %64 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %1, i64 0, i32 2, i32 0, i32 1
  %65 = load %"struct.ui::CandidateWindow::Entry"*, %"struct.ui::CandidateWindow::Entry"** %64, align 8
  tail call void @_ZNSt3__16vectorIN2ui15CandidateWindow5EntryENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"* %46, %"struct.ui::CandidateWindow::Entry"* %63, %"struct.ui::CandidateWindow::Entry"* %65) #11
  br label %66

66:                                               ; preds = %59, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ui15CandidateWindow18GetInfolistEntriesEPNSt3__16vectorINS_13InfolistEntryENS1_9allocatorIS3_EEEEPb(%"class.ui::CandidateWindow"* nocapture readonly, %"class.std::__1::vector.18"*, i8* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.ui::InfolistEntry", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %1, i64 0, i32 0, i32 0
  %6 = load %"struct.ui::InfolistEntry"*, %"struct.ui::InfolistEntry"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %1, i64 0, i32 0, i32 1
  %8 = load %"struct.ui::InfolistEntry"*, %"struct.ui::InfolistEntry"** %7, align 8
  %9 = icmp eq %"struct.ui::InfolistEntry"* %8, %6
  br i1 %9, label %31, label %10

10:                                               ; preds = %3, %29
  %11 = phi %"struct.ui::InfolistEntry"* [ %12, %29 ], [ %8, %3 ]
  %12 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %11, i64 -1
  %13 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %11, i64 -1, i32 1
  %14 = bitcast %"class.std::__1::basic_string.4"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %10
  %19 = bitcast %"class.std::__1::basic_string.4"* %13 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %18, %10
  %22 = bitcast %"struct.ui::InfolistEntry"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = bitcast %"struct.ui::InfolistEntry"* %12 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %26, %21
  %30 = icmp eq %"struct.ui::InfolistEntry"* %12, %6
  br i1 %30, label %31, label %10

31:                                               ; preds = %29, %3
  store %"struct.ui::InfolistEntry"* %6, %"struct.ui::InfolistEntry"** %7, align 8
  store i8 0, i8* %2, align 1
  %32 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"struct.ui::CandidateWindow::CandidateWindowProperty"*, %"struct.ui::CandidateWindow::CandidateWindowProperty"** %32, align 8
  %34 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %33, i64 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %33, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = urem i32 %35, %37
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 2
  %41 = getelementptr inbounds %"class.ui::CandidateWindow", %"class.ui::CandidateWindow"* %0, i64 0, i32 2, i32 0, i32 1
  %42 = bitcast %"struct.ui::CandidateWindow::Entry"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::vector"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %43, %45
  br i1 %46, label %59, label %47

47:                                               ; preds = %31
  %48 = bitcast %"struct.ui::InfolistEntry"* %4 to i8*
  %49 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %4, i64 0, i32 2
  %50 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %51 = bitcast %"struct.ui::InfolistEntry"** %7 to i64*
  %52 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %4, i64 0, i32 1
  %53 = bitcast %"class.std::__1::basic_string.4"* %52 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  %55 = bitcast %"class.std::__1::basic_string.4"* %52 to i8**
  %56 = bitcast %"struct.ui::InfolistEntry"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %56, i64 0, i32 1, i32 1
  %58 = bitcast %"struct.ui::InfolistEntry"* %4 to i8**
  br label %60

59:                                               ; preds = %117, %31
  ret void

60:                                               ; preds = %47, %117
  %61 = phi i64 [ %45, %47 ], [ %118, %117 ]
  %62 = phi i64 [ %43, %47 ], [ %119, %117 ]
  %63 = phi i64 [ 0, %47 ], [ %120, %117 ]
  %64 = inttoptr i64 %61 to %"struct.ui::CandidateWindow::Entry"*
  %65 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %64, i64 %63, i32 4
  %66 = bitcast %"class.std::__1::basic_string.4"* %65 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %66, i64 0, i32 1, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %64, i64 %63, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  br label %75

73:                                               ; preds = %60
  %74 = zext i8 %68 to i64
  br label %75

75:                                               ; preds = %70, %73
  %76 = phi i64 [ %72, %70 ], [ %74, %73 ]
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %92

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %64, i64 %63, i32 5
  %80 = bitcast %"class.std::__1::basic_string.4"* %79 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %80, i64 0, i32 1, i32 1
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %64, i64 %63, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  br label %89

87:                                               ; preds = %78
  %88 = zext i8 %82 to i64
  br label %89

89:                                               ; preds = %84, %87
  %90 = phi i64 [ %86, %84 ], [ %88, %87 ]
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %117, label %92

92:                                               ; preds = %89, %75
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %48) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 56, i1 false)
  %93 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %64, i64 %63, i32 5
  call void @_ZN2ui13InfolistEntryC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEES9_(%"struct.ui::InfolistEntry"* nonnull %4, %"class.std::__1::basic_string.4"* dereferenceable(24) %65, %"class.std::__1::basic_string.4"* dereferenceable(24) %93) #11
  %94 = icmp eq i64 %63, %39
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  store i8 1, i8* %49, align 8
  store i8 1, i8* %2, align 1
  br label %96

96:                                               ; preds = %95, %92
  %97 = load %"struct.ui::InfolistEntry"*, %"struct.ui::InfolistEntry"** %7, align 8
  %98 = load %"struct.ui::InfolistEntry"*, %"struct.ui::InfolistEntry"** %50, align 8
  %99 = icmp eq %"struct.ui::InfolistEntry"* %97, %98
  br i1 %99, label %103, label %100

100:                                              ; preds = %96
  call void @_ZN2ui13InfolistEntryC2ERKS0_(%"struct.ui::InfolistEntry"* %97, %"struct.ui::InfolistEntry"* nonnull dereferenceable(56) %4) #11
  %101 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %97, i64 1
  %102 = ptrtoint %"struct.ui::InfolistEntry"* %101 to i64
  store i64 %102, i64* %51, align 8
  br label %104

103:                                              ; preds = %96
  call void @_ZNSt3__16vectorIN2ui13InfolistEntryENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.18"* %1, %"struct.ui::InfolistEntry"* nonnull dereferenceable(56) %4) #11
  br label %104

104:                                              ; preds = %100, %103
  %105 = load i8, i8* %54, align 1
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %109

107:                                              ; preds = %104
  %108 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %108) #10
  br label %109

109:                                              ; preds = %107, %104
  %110 = load i8, i8* %57, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %109
  %113 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %113) #10
  br label %114

114:                                              ; preds = %109, %112
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %48) #11
  %115 = load i64, i64* %42, align 8
  %116 = load i64, i64* %44, align 8
  br label %117

117:                                              ; preds = %89, %114
  %118 = phi i64 [ %61, %89 ], [ %116, %114 ]
  %119 = phi i64 [ %62, %89 ], [ %115, %114 ]
  %120 = add nuw i64 %63, 1
  %121 = sub i64 %119, %118
  %122 = ashr exact i64 %121, 7
  %123 = icmp ult i64 %120, %122
  br i1 %123, label %60, label %59
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN2ui13InfolistEntryC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEES9_(%"struct.ui::InfolistEntry"*, %"class.std::__1::basic_string.4"* dereferenceable(24), %"class.std::__1::basic_string.4"* dereferenceable(24)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15CandidateWindow23CandidateWindowPropertyC2Ev(%"struct.ui::CandidateWindow::CandidateWindowProperty"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2ui15CandidateWindow23CandidateWindowPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %0, i64 0, i32 1
  store i32 9, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %0, i64 0, i32 3
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %0, i64 0, i32 4
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %0, i64 0, i32 5
  store i8 0, i8* %7, align 2
  %8 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %0, i64 0, i32 7
  %9 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %0, i64 0, i32 10
  %10 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 25, i1 false)
  store i32 -1, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %0, i64 0, i32 11
  store i32 0, i32* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15CandidateWindow23CandidateWindowPropertyD2Ev(%"struct.ui::CandidateWindow::CandidateWindowProperty"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2ui15CandidateWindow23CandidateWindowPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %0, i64 0, i32 7
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15CandidateWindow23CandidateWindowPropertyD0Ev(%"struct.ui::CandidateWindow::CandidateWindowProperty"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2ui15CandidateWindow23CandidateWindowPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.ui::CandidateWindow::CandidateWindowProperty", %"struct.ui::CandidateWindow::CandidateWindowProperty"* %0, i64 0, i32 7
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"struct.ui::CandidateWindow::CandidateWindowProperty"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15CandidateWindow5EntryC2Ev(%"struct.ui::CandidateWindow::Entry"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2ui15CandidateWindow5EntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string.4"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 120, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15CandidateWindow5EntryC2ERKS1_(%"struct.ui::CandidateWindow::Entry"*, %"struct.ui::CandidateWindow::Entry"* nocapture readonly dereferenceable(128)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2ui15CandidateWindow5EntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %1, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string.4"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string.4"* %4 to i8*
  %12 = bitcast %"class.std::__1::basic_string.4"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #11
  br label %188

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, 11
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.std::__1::basic_string.4"* %4 to i16*
  %21 = trunc i64 %17 to i8
  %22 = bitcast %"class.std::__1::basic_string.4"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  store i8 %21, i8* %23, align 1
  br label %41

24:                                               ; preds = %13
  %25 = icmp ugt i64 %17, 9223372036854775791
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::basic_string.4"* %4 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %27) #12
  unreachable

28:                                               ; preds = %24
  %29 = add nuw nsw i64 %17, 8
  %30 = and i64 %29, -8
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  tail call void @abort() #12
  unreachable

33:                                               ; preds = %28
  %34 = shl i64 %30, 1
  %35 = tail call i8* @_Znwm(i64 %34) #10
  %36 = bitcast i8* %35 to i16*
  %37 = bitcast %"class.std::__1::basic_string.4"* %4 to i8**
  store i8* %35, i8** %37, align 8
  %38 = or i64 %30, -9223372036854775808
  %39 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  br label %41

41:                                               ; preds = %33, %19
  %42 = phi i16* [ %20, %19 ], [ %36, %33 ]
  %43 = add nuw nsw i64 %17, 1
  %44 = add i64 %17, 1
  %45 = icmp ult i64 %44, 16
  br i1 %45, label %135, label %46

46:                                               ; preds = %41
  %47 = add i64 %17, 1
  %48 = getelementptr i16, i16* %42, i64 %47
  %49 = getelementptr i16, i16* %15, i64 %47
  %50 = icmp ult i16* %42, %49
  %51 = icmp ult i16* %15, %48
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %46
  %54 = and i64 %44, -16
  %55 = sub i64 %43, %54
  %56 = getelementptr i16, i16* %15, i64 %54
  %57 = getelementptr i16, i16* %42, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %15, i64 %66
  %69 = getelementptr i16, i16* %42, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !3
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !3
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !6, !noalias !3
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !6, !noalias !3
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %15, i64 %78
  %80 = getelementptr i16, i16* %42, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !3
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !3
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !6, !noalias !3
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !6, !noalias !3
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %15, i64 %89
  %91 = getelementptr i16, i16* %42, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !3
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !3
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !6, !noalias !3
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !6, !noalias !3
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %15, i64 %100
  %102 = getelementptr i16, i16* %42, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !3
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !3
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !6, !noalias !3
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !6, !noalias !3
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !8

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %15, i64 %118
  %121 = getelementptr i16, i16* %42, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !3
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !3
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !6, !noalias !3
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !6, !noalias !3
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !10

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %44, %54
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %46, %41
  %136 = phi i64 [ %43, %46 ], [ %43, %41 ], [ %55, %133 ]
  %137 = phi i16* [ %15, %46 ], [ %15, %41 ], [ %56, %133 ]
  %138 = phi i16* [ %42, %46 ], [ %42, %41 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !12

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !13

188:                                              ; preds = %153, %158, %133, %10
  %189 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 2
  %190 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %1, i64 0, i32 2
  %191 = bitcast %"class.std::__1::basic_string.4"* %190 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %192 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %191, i64 0, i32 1, i32 1
  %193 = load i8, i8* %192, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %198, label %195

195:                                              ; preds = %188
  %196 = bitcast %"class.std::__1::basic_string.4"* %189 to i8*
  %197 = bitcast %"class.std::__1::basic_string.4"* %190 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %196, i8* align 8 %197, i64 24, i1 false) #11
  br label %373

198:                                              ; preds = %188
  %199 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %190, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load i16*, i16** %199, align 8
  %201 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %202 = load i64, i64* %201, align 8
  %203 = icmp ult i64 %202, 11
  br i1 %203, label %204, label %209

204:                                              ; preds = %198
  %205 = bitcast %"class.std::__1::basic_string.4"* %189 to i16*
  %206 = trunc i64 %202 to i8
  %207 = bitcast %"class.std::__1::basic_string.4"* %189 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %207, i64 0, i32 1, i32 1
  store i8 %206, i8* %208, align 1
  br label %226

209:                                              ; preds = %198
  %210 = icmp ugt i64 %202, 9223372036854775791
  br i1 %210, label %211, label %213

211:                                              ; preds = %209
  %212 = bitcast %"class.std::__1::basic_string.4"* %189 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %212) #12
  unreachable

213:                                              ; preds = %209
  %214 = add nuw nsw i64 %202, 8
  %215 = and i64 %214, -8
  %216 = icmp slt i64 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %213
  tail call void @abort() #12
  unreachable

218:                                              ; preds = %213
  %219 = shl i64 %215, 1
  %220 = tail call i8* @_Znwm(i64 %219) #10
  %221 = bitcast i8* %220 to i16*
  %222 = bitcast %"class.std::__1::basic_string.4"* %189 to i8**
  store i8* %220, i8** %222, align 8
  %223 = or i64 %215, -9223372036854775808
  %224 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %223, i64* %224, align 8
  %225 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %202, i64* %225, align 8
  br label %226

226:                                              ; preds = %218, %204
  %227 = phi i16* [ %205, %204 ], [ %221, %218 ]
  %228 = add nuw nsw i64 %202, 1
  %229 = add i64 %202, 1
  %230 = icmp ult i64 %229, 16
  br i1 %230, label %320, label %231

231:                                              ; preds = %226
  %232 = add i64 %202, 1
  %233 = getelementptr i16, i16* %227, i64 %232
  %234 = getelementptr i16, i16* %200, i64 %232
  %235 = icmp ult i16* %227, %234
  %236 = icmp ult i16* %200, %233
  %237 = and i1 %235, %236
  br i1 %237, label %320, label %238

238:                                              ; preds = %231
  %239 = and i64 %229, -16
  %240 = sub i64 %228, %239
  %241 = getelementptr i16, i16* %200, i64 %239
  %242 = getelementptr i16, i16* %227, i64 %239
  %243 = add i64 %239, -16
  %244 = lshr exact i64 %243, 4
  %245 = add nuw nsw i64 %244, 1
  %246 = and i64 %245, 3
  %247 = icmp ult i64 %243, 48
  br i1 %247, label %299, label %248

248:                                              ; preds = %238
  %249 = sub nsw i64 %245, %246
  br label %250

250:                                              ; preds = %250, %248
  %251 = phi i64 [ 0, %248 ], [ %296, %250 ]
  %252 = phi i64 [ %249, %248 ], [ %297, %250 ]
  %253 = getelementptr i16, i16* %200, i64 %251
  %254 = getelementptr i16, i16* %227, i64 %251
  %255 = bitcast i16* %253 to <8 x i16>*
  %256 = load <8 x i16>, <8 x i16>* %255, align 2, !alias.scope !14
  %257 = getelementptr i16, i16* %253, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  %259 = load <8 x i16>, <8 x i16>* %258, align 2, !alias.scope !14
  %260 = bitcast i16* %254 to <8 x i16>*
  store <8 x i16> %256, <8 x i16>* %260, align 2, !alias.scope !17, !noalias !14
  %261 = getelementptr i16, i16* %254, i64 8
  %262 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %259, <8 x i16>* %262, align 2, !alias.scope !17, !noalias !14
  %263 = or i64 %251, 16
  %264 = getelementptr i16, i16* %200, i64 %263
  %265 = getelementptr i16, i16* %227, i64 %263
  %266 = bitcast i16* %264 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !14
  %268 = getelementptr i16, i16* %264, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !14
  %271 = bitcast i16* %265 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %271, align 2, !alias.scope !17, !noalias !14
  %272 = getelementptr i16, i16* %265, i64 8
  %273 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %273, align 2, !alias.scope !17, !noalias !14
  %274 = or i64 %251, 32
  %275 = getelementptr i16, i16* %200, i64 %274
  %276 = getelementptr i16, i16* %227, i64 %274
  %277 = bitcast i16* %275 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !14
  %279 = getelementptr i16, i16* %275, i64 8
  %280 = bitcast i16* %279 to <8 x i16>*
  %281 = load <8 x i16>, <8 x i16>* %280, align 2, !alias.scope !14
  %282 = bitcast i16* %276 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %282, align 2, !alias.scope !17, !noalias !14
  %283 = getelementptr i16, i16* %276, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %281, <8 x i16>* %284, align 2, !alias.scope !17, !noalias !14
  %285 = or i64 %251, 48
  %286 = getelementptr i16, i16* %200, i64 %285
  %287 = getelementptr i16, i16* %227, i64 %285
  %288 = bitcast i16* %286 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !14
  %290 = getelementptr i16, i16* %286, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !14
  %293 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %293, align 2, !alias.scope !17, !noalias !14
  %294 = getelementptr i16, i16* %287, i64 8
  %295 = bitcast i16* %294 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %295, align 2, !alias.scope !17, !noalias !14
  %296 = add i64 %251, 64
  %297 = add i64 %252, -4
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %299, label %250, !llvm.loop !19

299:                                              ; preds = %250, %238
  %300 = phi i64 [ 0, %238 ], [ %296, %250 ]
  %301 = icmp eq i64 %246, 0
  br i1 %301, label %318, label %302

302:                                              ; preds = %299, %302
  %303 = phi i64 [ %315, %302 ], [ %300, %299 ]
  %304 = phi i64 [ %316, %302 ], [ %246, %299 ]
  %305 = getelementptr i16, i16* %200, i64 %303
  %306 = getelementptr i16, i16* %227, i64 %303
  %307 = bitcast i16* %305 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !14
  %309 = getelementptr i16, i16* %305, i64 8
  %310 = bitcast i16* %309 to <8 x i16>*
  %311 = load <8 x i16>, <8 x i16>* %310, align 2, !alias.scope !14
  %312 = bitcast i16* %306 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %312, align 2, !alias.scope !17, !noalias !14
  %313 = getelementptr i16, i16* %306, i64 8
  %314 = bitcast i16* %313 to <8 x i16>*
  store <8 x i16> %311, <8 x i16>* %314, align 2, !alias.scope !17, !noalias !14
  %315 = add i64 %303, 16
  %316 = add i64 %304, -1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %318, label %302, !llvm.loop !20

318:                                              ; preds = %302, %299
  %319 = icmp eq i64 %229, %239
  br i1 %319, label %373, label %320

320:                                              ; preds = %318, %231, %226
  %321 = phi i64 [ %228, %231 ], [ %228, %226 ], [ %240, %318 ]
  %322 = phi i16* [ %200, %231 ], [ %200, %226 ], [ %241, %318 ]
  %323 = phi i16* [ %227, %231 ], [ %227, %226 ], [ %242, %318 ]
  %324 = add i64 %321, -1
  %325 = and i64 %321, 7
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %338, label %327

327:                                              ; preds = %320, %327
  %328 = phi i64 [ %333, %327 ], [ %321, %320 ]
  %329 = phi i16* [ %335, %327 ], [ %322, %320 ]
  %330 = phi i16* [ %334, %327 ], [ %323, %320 ]
  %331 = phi i64 [ %336, %327 ], [ %325, %320 ]
  %332 = load i16, i16* %329, align 2
  store i16 %332, i16* %330, align 2
  %333 = add i64 %328, -1
  %334 = getelementptr inbounds i16, i16* %330, i64 1
  %335 = getelementptr inbounds i16, i16* %329, i64 1
  %336 = add i64 %331, -1
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %338, label %327, !llvm.loop !21

338:                                              ; preds = %327, %320
  %339 = phi i64 [ %321, %320 ], [ %333, %327 ]
  %340 = phi i16* [ %322, %320 ], [ %335, %327 ]
  %341 = phi i16* [ %323, %320 ], [ %334, %327 ]
  %342 = icmp ult i64 %324, 7
  br i1 %342, label %373, label %343

343:                                              ; preds = %338, %343
  %344 = phi i64 [ %369, %343 ], [ %339, %338 ]
  %345 = phi i16* [ %371, %343 ], [ %340, %338 ]
  %346 = phi i16* [ %370, %343 ], [ %341, %338 ]
  %347 = load i16, i16* %345, align 2
  store i16 %347, i16* %346, align 2
  %348 = getelementptr inbounds i16, i16* %346, i64 1
  %349 = getelementptr inbounds i16, i16* %345, i64 1
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = getelementptr inbounds i16, i16* %346, i64 2
  %352 = getelementptr inbounds i16, i16* %345, i64 2
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %346, i64 3
  %355 = getelementptr inbounds i16, i16* %345, i64 3
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %346, i64 4
  %358 = getelementptr inbounds i16, i16* %345, i64 4
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %346, i64 5
  %361 = getelementptr inbounds i16, i16* %345, i64 5
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %346, i64 6
  %364 = getelementptr inbounds i16, i16* %345, i64 6
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = getelementptr inbounds i16, i16* %346, i64 7
  %367 = getelementptr inbounds i16, i16* %345, i64 7
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = add i64 %344, -8
  %370 = getelementptr inbounds i16, i16* %346, i64 8
  %371 = getelementptr inbounds i16, i16* %345, i64 8
  %372 = icmp eq i64 %369, 0
  br i1 %372, label %373, label %343, !llvm.loop !22

373:                                              ; preds = %338, %343, %318, %195
  %374 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 3
  %375 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %1, i64 0, i32 3
  %376 = bitcast %"class.std::__1::basic_string.4"* %375 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %377 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %376, i64 0, i32 1, i32 1
  %378 = load i8, i8* %377, align 1
  %379 = icmp slt i8 %378, 0
  br i1 %379, label %383, label %380

380:                                              ; preds = %373
  %381 = bitcast %"class.std::__1::basic_string.4"* %374 to i8*
  %382 = bitcast %"class.std::__1::basic_string.4"* %375 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %381, i8* align 8 %382, i64 24, i1 false) #11
  br label %558

383:                                              ; preds = %373
  %384 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %375, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %385 = load i16*, i16** %384, align 8
  %386 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %387 = load i64, i64* %386, align 8
  %388 = icmp ult i64 %387, 11
  br i1 %388, label %389, label %394

389:                                              ; preds = %383
  %390 = bitcast %"class.std::__1::basic_string.4"* %374 to i16*
  %391 = trunc i64 %387 to i8
  %392 = bitcast %"class.std::__1::basic_string.4"* %374 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %393 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %392, i64 0, i32 1, i32 1
  store i8 %391, i8* %393, align 1
  br label %411

394:                                              ; preds = %383
  %395 = icmp ugt i64 %387, 9223372036854775791
  br i1 %395, label %396, label %398

396:                                              ; preds = %394
  %397 = bitcast %"class.std::__1::basic_string.4"* %374 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %397) #12
  unreachable

398:                                              ; preds = %394
  %399 = add nuw nsw i64 %387, 8
  %400 = and i64 %399, -8
  %401 = icmp slt i64 %400, 0
  br i1 %401, label %402, label %403

402:                                              ; preds = %398
  tail call void @abort() #12
  unreachable

403:                                              ; preds = %398
  %404 = shl i64 %400, 1
  %405 = tail call i8* @_Znwm(i64 %404) #10
  %406 = bitcast i8* %405 to i16*
  %407 = bitcast %"class.std::__1::basic_string.4"* %374 to i8**
  store i8* %405, i8** %407, align 8
  %408 = or i64 %400, -9223372036854775808
  %409 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %408, i64* %409, align 8
  %410 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %387, i64* %410, align 8
  br label %411

411:                                              ; preds = %403, %389
  %412 = phi i16* [ %390, %389 ], [ %406, %403 ]
  %413 = add nuw nsw i64 %387, 1
  %414 = add i64 %387, 1
  %415 = icmp ult i64 %414, 16
  br i1 %415, label %505, label %416

416:                                              ; preds = %411
  %417 = add i64 %387, 1
  %418 = getelementptr i16, i16* %412, i64 %417
  %419 = getelementptr i16, i16* %385, i64 %417
  %420 = icmp ult i16* %412, %419
  %421 = icmp ult i16* %385, %418
  %422 = and i1 %420, %421
  br i1 %422, label %505, label %423

423:                                              ; preds = %416
  %424 = and i64 %414, -16
  %425 = sub i64 %413, %424
  %426 = getelementptr i16, i16* %385, i64 %424
  %427 = getelementptr i16, i16* %412, i64 %424
  %428 = add i64 %424, -16
  %429 = lshr exact i64 %428, 4
  %430 = add nuw nsw i64 %429, 1
  %431 = and i64 %430, 3
  %432 = icmp ult i64 %428, 48
  br i1 %432, label %484, label %433

433:                                              ; preds = %423
  %434 = sub nsw i64 %430, %431
  br label %435

435:                                              ; preds = %435, %433
  %436 = phi i64 [ 0, %433 ], [ %481, %435 ]
  %437 = phi i64 [ %434, %433 ], [ %482, %435 ]
  %438 = getelementptr i16, i16* %385, i64 %436
  %439 = getelementptr i16, i16* %412, i64 %436
  %440 = bitcast i16* %438 to <8 x i16>*
  %441 = load <8 x i16>, <8 x i16>* %440, align 2, !alias.scope !23
  %442 = getelementptr i16, i16* %438, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  %444 = load <8 x i16>, <8 x i16>* %443, align 2, !alias.scope !23
  %445 = bitcast i16* %439 to <8 x i16>*
  store <8 x i16> %441, <8 x i16>* %445, align 2, !alias.scope !26, !noalias !23
  %446 = getelementptr i16, i16* %439, i64 8
  %447 = bitcast i16* %446 to <8 x i16>*
  store <8 x i16> %444, <8 x i16>* %447, align 2, !alias.scope !26, !noalias !23
  %448 = or i64 %436, 16
  %449 = getelementptr i16, i16* %385, i64 %448
  %450 = getelementptr i16, i16* %412, i64 %448
  %451 = bitcast i16* %449 to <8 x i16>*
  %452 = load <8 x i16>, <8 x i16>* %451, align 2, !alias.scope !23
  %453 = getelementptr i16, i16* %449, i64 8
  %454 = bitcast i16* %453 to <8 x i16>*
  %455 = load <8 x i16>, <8 x i16>* %454, align 2, !alias.scope !23
  %456 = bitcast i16* %450 to <8 x i16>*
  store <8 x i16> %452, <8 x i16>* %456, align 2, !alias.scope !26, !noalias !23
  %457 = getelementptr i16, i16* %450, i64 8
  %458 = bitcast i16* %457 to <8 x i16>*
  store <8 x i16> %455, <8 x i16>* %458, align 2, !alias.scope !26, !noalias !23
  %459 = or i64 %436, 32
  %460 = getelementptr i16, i16* %385, i64 %459
  %461 = getelementptr i16, i16* %412, i64 %459
  %462 = bitcast i16* %460 to <8 x i16>*
  %463 = load <8 x i16>, <8 x i16>* %462, align 2, !alias.scope !23
  %464 = getelementptr i16, i16* %460, i64 8
  %465 = bitcast i16* %464 to <8 x i16>*
  %466 = load <8 x i16>, <8 x i16>* %465, align 2, !alias.scope !23
  %467 = bitcast i16* %461 to <8 x i16>*
  store <8 x i16> %463, <8 x i16>* %467, align 2, !alias.scope !26, !noalias !23
  %468 = getelementptr i16, i16* %461, i64 8
  %469 = bitcast i16* %468 to <8 x i16>*
  store <8 x i16> %466, <8 x i16>* %469, align 2, !alias.scope !26, !noalias !23
  %470 = or i64 %436, 48
  %471 = getelementptr i16, i16* %385, i64 %470
  %472 = getelementptr i16, i16* %412, i64 %470
  %473 = bitcast i16* %471 to <8 x i16>*
  %474 = load <8 x i16>, <8 x i16>* %473, align 2, !alias.scope !23
  %475 = getelementptr i16, i16* %471, i64 8
  %476 = bitcast i16* %475 to <8 x i16>*
  %477 = load <8 x i16>, <8 x i16>* %476, align 2, !alias.scope !23
  %478 = bitcast i16* %472 to <8 x i16>*
  store <8 x i16> %474, <8 x i16>* %478, align 2, !alias.scope !26, !noalias !23
  %479 = getelementptr i16, i16* %472, i64 8
  %480 = bitcast i16* %479 to <8 x i16>*
  store <8 x i16> %477, <8 x i16>* %480, align 2, !alias.scope !26, !noalias !23
  %481 = add i64 %436, 64
  %482 = add i64 %437, -4
  %483 = icmp eq i64 %482, 0
  br i1 %483, label %484, label %435, !llvm.loop !28

484:                                              ; preds = %435, %423
  %485 = phi i64 [ 0, %423 ], [ %481, %435 ]
  %486 = icmp eq i64 %431, 0
  br i1 %486, label %503, label %487

487:                                              ; preds = %484, %487
  %488 = phi i64 [ %500, %487 ], [ %485, %484 ]
  %489 = phi i64 [ %501, %487 ], [ %431, %484 ]
  %490 = getelementptr i16, i16* %385, i64 %488
  %491 = getelementptr i16, i16* %412, i64 %488
  %492 = bitcast i16* %490 to <8 x i16>*
  %493 = load <8 x i16>, <8 x i16>* %492, align 2, !alias.scope !23
  %494 = getelementptr i16, i16* %490, i64 8
  %495 = bitcast i16* %494 to <8 x i16>*
  %496 = load <8 x i16>, <8 x i16>* %495, align 2, !alias.scope !23
  %497 = bitcast i16* %491 to <8 x i16>*
  store <8 x i16> %493, <8 x i16>* %497, align 2, !alias.scope !26, !noalias !23
  %498 = getelementptr i16, i16* %491, i64 8
  %499 = bitcast i16* %498 to <8 x i16>*
  store <8 x i16> %496, <8 x i16>* %499, align 2, !alias.scope !26, !noalias !23
  %500 = add i64 %488, 16
  %501 = add i64 %489, -1
  %502 = icmp eq i64 %501, 0
  br i1 %502, label %503, label %487, !llvm.loop !29

503:                                              ; preds = %487, %484
  %504 = icmp eq i64 %414, %424
  br i1 %504, label %558, label %505

505:                                              ; preds = %503, %416, %411
  %506 = phi i64 [ %413, %416 ], [ %413, %411 ], [ %425, %503 ]
  %507 = phi i16* [ %385, %416 ], [ %385, %411 ], [ %426, %503 ]
  %508 = phi i16* [ %412, %416 ], [ %412, %411 ], [ %427, %503 ]
  %509 = add i64 %506, -1
  %510 = and i64 %506, 7
  %511 = icmp eq i64 %510, 0
  br i1 %511, label %523, label %512

512:                                              ; preds = %505, %512
  %513 = phi i64 [ %518, %512 ], [ %506, %505 ]
  %514 = phi i16* [ %520, %512 ], [ %507, %505 ]
  %515 = phi i16* [ %519, %512 ], [ %508, %505 ]
  %516 = phi i64 [ %521, %512 ], [ %510, %505 ]
  %517 = load i16, i16* %514, align 2
  store i16 %517, i16* %515, align 2
  %518 = add i64 %513, -1
  %519 = getelementptr inbounds i16, i16* %515, i64 1
  %520 = getelementptr inbounds i16, i16* %514, i64 1
  %521 = add i64 %516, -1
  %522 = icmp eq i64 %521, 0
  br i1 %522, label %523, label %512, !llvm.loop !30

523:                                              ; preds = %512, %505
  %524 = phi i64 [ %506, %505 ], [ %518, %512 ]
  %525 = phi i16* [ %507, %505 ], [ %520, %512 ]
  %526 = phi i16* [ %508, %505 ], [ %519, %512 ]
  %527 = icmp ult i64 %509, 7
  br i1 %527, label %558, label %528

528:                                              ; preds = %523, %528
  %529 = phi i64 [ %554, %528 ], [ %524, %523 ]
  %530 = phi i16* [ %556, %528 ], [ %525, %523 ]
  %531 = phi i16* [ %555, %528 ], [ %526, %523 ]
  %532 = load i16, i16* %530, align 2
  store i16 %532, i16* %531, align 2
  %533 = getelementptr inbounds i16, i16* %531, i64 1
  %534 = getelementptr inbounds i16, i16* %530, i64 1
  %535 = load i16, i16* %534, align 2
  store i16 %535, i16* %533, align 2
  %536 = getelementptr inbounds i16, i16* %531, i64 2
  %537 = getelementptr inbounds i16, i16* %530, i64 2
  %538 = load i16, i16* %537, align 2
  store i16 %538, i16* %536, align 2
  %539 = getelementptr inbounds i16, i16* %531, i64 3
  %540 = getelementptr inbounds i16, i16* %530, i64 3
  %541 = load i16, i16* %540, align 2
  store i16 %541, i16* %539, align 2
  %542 = getelementptr inbounds i16, i16* %531, i64 4
  %543 = getelementptr inbounds i16, i16* %530, i64 4
  %544 = load i16, i16* %543, align 2
  store i16 %544, i16* %542, align 2
  %545 = getelementptr inbounds i16, i16* %531, i64 5
  %546 = getelementptr inbounds i16, i16* %530, i64 5
  %547 = load i16, i16* %546, align 2
  store i16 %547, i16* %545, align 2
  %548 = getelementptr inbounds i16, i16* %531, i64 6
  %549 = getelementptr inbounds i16, i16* %530, i64 6
  %550 = load i16, i16* %549, align 2
  store i16 %550, i16* %548, align 2
  %551 = getelementptr inbounds i16, i16* %531, i64 7
  %552 = getelementptr inbounds i16, i16* %530, i64 7
  %553 = load i16, i16* %552, align 2
  store i16 %553, i16* %551, align 2
  %554 = add i64 %529, -8
  %555 = getelementptr inbounds i16, i16* %531, i64 8
  %556 = getelementptr inbounds i16, i16* %530, i64 8
  %557 = icmp eq i64 %554, 0
  br i1 %557, label %558, label %528, !llvm.loop !31

558:                                              ; preds = %523, %528, %503, %380
  %559 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 4
  %560 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %1, i64 0, i32 4
  %561 = bitcast %"class.std::__1::basic_string.4"* %560 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %562 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %561, i64 0, i32 1, i32 1
  %563 = load i8, i8* %562, align 1
  %564 = icmp slt i8 %563, 0
  br i1 %564, label %568, label %565

565:                                              ; preds = %558
  %566 = bitcast %"class.std::__1::basic_string.4"* %559 to i8*
  %567 = bitcast %"class.std::__1::basic_string.4"* %560 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %566, i8* align 8 %567, i64 24, i1 false) #11
  br label %743

568:                                              ; preds = %558
  %569 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %560, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %570 = load i16*, i16** %569, align 8
  %571 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %572 = load i64, i64* %571, align 8
  %573 = icmp ult i64 %572, 11
  br i1 %573, label %574, label %579

574:                                              ; preds = %568
  %575 = bitcast %"class.std::__1::basic_string.4"* %559 to i16*
  %576 = trunc i64 %572 to i8
  %577 = bitcast %"class.std::__1::basic_string.4"* %559 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %578 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %577, i64 0, i32 1, i32 1
  store i8 %576, i8* %578, align 1
  br label %596

579:                                              ; preds = %568
  %580 = icmp ugt i64 %572, 9223372036854775791
  br i1 %580, label %581, label %583

581:                                              ; preds = %579
  %582 = bitcast %"class.std::__1::basic_string.4"* %559 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %582) #12
  unreachable

583:                                              ; preds = %579
  %584 = add nuw nsw i64 %572, 8
  %585 = and i64 %584, -8
  %586 = icmp slt i64 %585, 0
  br i1 %586, label %587, label %588

587:                                              ; preds = %583
  tail call void @abort() #12
  unreachable

588:                                              ; preds = %583
  %589 = shl i64 %585, 1
  %590 = tail call i8* @_Znwm(i64 %589) #10
  %591 = bitcast i8* %590 to i16*
  %592 = bitcast %"class.std::__1::basic_string.4"* %559 to i8**
  store i8* %590, i8** %592, align 8
  %593 = or i64 %585, -9223372036854775808
  %594 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %593, i64* %594, align 8
  %595 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %572, i64* %595, align 8
  br label %596

596:                                              ; preds = %588, %574
  %597 = phi i16* [ %575, %574 ], [ %591, %588 ]
  %598 = add nuw nsw i64 %572, 1
  %599 = add i64 %572, 1
  %600 = icmp ult i64 %599, 16
  br i1 %600, label %690, label %601

601:                                              ; preds = %596
  %602 = add i64 %572, 1
  %603 = getelementptr i16, i16* %597, i64 %602
  %604 = getelementptr i16, i16* %570, i64 %602
  %605 = icmp ult i16* %597, %604
  %606 = icmp ult i16* %570, %603
  %607 = and i1 %605, %606
  br i1 %607, label %690, label %608

608:                                              ; preds = %601
  %609 = and i64 %599, -16
  %610 = sub i64 %598, %609
  %611 = getelementptr i16, i16* %570, i64 %609
  %612 = getelementptr i16, i16* %597, i64 %609
  %613 = add i64 %609, -16
  %614 = lshr exact i64 %613, 4
  %615 = add nuw nsw i64 %614, 1
  %616 = and i64 %615, 3
  %617 = icmp ult i64 %613, 48
  br i1 %617, label %669, label %618

618:                                              ; preds = %608
  %619 = sub nsw i64 %615, %616
  br label %620

620:                                              ; preds = %620, %618
  %621 = phi i64 [ 0, %618 ], [ %666, %620 ]
  %622 = phi i64 [ %619, %618 ], [ %667, %620 ]
  %623 = getelementptr i16, i16* %570, i64 %621
  %624 = getelementptr i16, i16* %597, i64 %621
  %625 = bitcast i16* %623 to <8 x i16>*
  %626 = load <8 x i16>, <8 x i16>* %625, align 2, !alias.scope !32
  %627 = getelementptr i16, i16* %623, i64 8
  %628 = bitcast i16* %627 to <8 x i16>*
  %629 = load <8 x i16>, <8 x i16>* %628, align 2, !alias.scope !32
  %630 = bitcast i16* %624 to <8 x i16>*
  store <8 x i16> %626, <8 x i16>* %630, align 2, !alias.scope !35, !noalias !32
  %631 = getelementptr i16, i16* %624, i64 8
  %632 = bitcast i16* %631 to <8 x i16>*
  store <8 x i16> %629, <8 x i16>* %632, align 2, !alias.scope !35, !noalias !32
  %633 = or i64 %621, 16
  %634 = getelementptr i16, i16* %570, i64 %633
  %635 = getelementptr i16, i16* %597, i64 %633
  %636 = bitcast i16* %634 to <8 x i16>*
  %637 = load <8 x i16>, <8 x i16>* %636, align 2, !alias.scope !32
  %638 = getelementptr i16, i16* %634, i64 8
  %639 = bitcast i16* %638 to <8 x i16>*
  %640 = load <8 x i16>, <8 x i16>* %639, align 2, !alias.scope !32
  %641 = bitcast i16* %635 to <8 x i16>*
  store <8 x i16> %637, <8 x i16>* %641, align 2, !alias.scope !35, !noalias !32
  %642 = getelementptr i16, i16* %635, i64 8
  %643 = bitcast i16* %642 to <8 x i16>*
  store <8 x i16> %640, <8 x i16>* %643, align 2, !alias.scope !35, !noalias !32
  %644 = or i64 %621, 32
  %645 = getelementptr i16, i16* %570, i64 %644
  %646 = getelementptr i16, i16* %597, i64 %644
  %647 = bitcast i16* %645 to <8 x i16>*
  %648 = load <8 x i16>, <8 x i16>* %647, align 2, !alias.scope !32
  %649 = getelementptr i16, i16* %645, i64 8
  %650 = bitcast i16* %649 to <8 x i16>*
  %651 = load <8 x i16>, <8 x i16>* %650, align 2, !alias.scope !32
  %652 = bitcast i16* %646 to <8 x i16>*
  store <8 x i16> %648, <8 x i16>* %652, align 2, !alias.scope !35, !noalias !32
  %653 = getelementptr i16, i16* %646, i64 8
  %654 = bitcast i16* %653 to <8 x i16>*
  store <8 x i16> %651, <8 x i16>* %654, align 2, !alias.scope !35, !noalias !32
  %655 = or i64 %621, 48
  %656 = getelementptr i16, i16* %570, i64 %655
  %657 = getelementptr i16, i16* %597, i64 %655
  %658 = bitcast i16* %656 to <8 x i16>*
  %659 = load <8 x i16>, <8 x i16>* %658, align 2, !alias.scope !32
  %660 = getelementptr i16, i16* %656, i64 8
  %661 = bitcast i16* %660 to <8 x i16>*
  %662 = load <8 x i16>, <8 x i16>* %661, align 2, !alias.scope !32
  %663 = bitcast i16* %657 to <8 x i16>*
  store <8 x i16> %659, <8 x i16>* %663, align 2, !alias.scope !35, !noalias !32
  %664 = getelementptr i16, i16* %657, i64 8
  %665 = bitcast i16* %664 to <8 x i16>*
  store <8 x i16> %662, <8 x i16>* %665, align 2, !alias.scope !35, !noalias !32
  %666 = add i64 %621, 64
  %667 = add i64 %622, -4
  %668 = icmp eq i64 %667, 0
  br i1 %668, label %669, label %620, !llvm.loop !37

669:                                              ; preds = %620, %608
  %670 = phi i64 [ 0, %608 ], [ %666, %620 ]
  %671 = icmp eq i64 %616, 0
  br i1 %671, label %688, label %672

672:                                              ; preds = %669, %672
  %673 = phi i64 [ %685, %672 ], [ %670, %669 ]
  %674 = phi i64 [ %686, %672 ], [ %616, %669 ]
  %675 = getelementptr i16, i16* %570, i64 %673
  %676 = getelementptr i16, i16* %597, i64 %673
  %677 = bitcast i16* %675 to <8 x i16>*
  %678 = load <8 x i16>, <8 x i16>* %677, align 2, !alias.scope !32
  %679 = getelementptr i16, i16* %675, i64 8
  %680 = bitcast i16* %679 to <8 x i16>*
  %681 = load <8 x i16>, <8 x i16>* %680, align 2, !alias.scope !32
  %682 = bitcast i16* %676 to <8 x i16>*
  store <8 x i16> %678, <8 x i16>* %682, align 2, !alias.scope !35, !noalias !32
  %683 = getelementptr i16, i16* %676, i64 8
  %684 = bitcast i16* %683 to <8 x i16>*
  store <8 x i16> %681, <8 x i16>* %684, align 2, !alias.scope !35, !noalias !32
  %685 = add i64 %673, 16
  %686 = add i64 %674, -1
  %687 = icmp eq i64 %686, 0
  br i1 %687, label %688, label %672, !llvm.loop !38

688:                                              ; preds = %672, %669
  %689 = icmp eq i64 %599, %609
  br i1 %689, label %743, label %690

690:                                              ; preds = %688, %601, %596
  %691 = phi i64 [ %598, %601 ], [ %598, %596 ], [ %610, %688 ]
  %692 = phi i16* [ %570, %601 ], [ %570, %596 ], [ %611, %688 ]
  %693 = phi i16* [ %597, %601 ], [ %597, %596 ], [ %612, %688 ]
  %694 = add i64 %691, -1
  %695 = and i64 %691, 7
  %696 = icmp eq i64 %695, 0
  br i1 %696, label %708, label %697

697:                                              ; preds = %690, %697
  %698 = phi i64 [ %703, %697 ], [ %691, %690 ]
  %699 = phi i16* [ %705, %697 ], [ %692, %690 ]
  %700 = phi i16* [ %704, %697 ], [ %693, %690 ]
  %701 = phi i64 [ %706, %697 ], [ %695, %690 ]
  %702 = load i16, i16* %699, align 2
  store i16 %702, i16* %700, align 2
  %703 = add i64 %698, -1
  %704 = getelementptr inbounds i16, i16* %700, i64 1
  %705 = getelementptr inbounds i16, i16* %699, i64 1
  %706 = add i64 %701, -1
  %707 = icmp eq i64 %706, 0
  br i1 %707, label %708, label %697, !llvm.loop !39

708:                                              ; preds = %697, %690
  %709 = phi i64 [ %691, %690 ], [ %703, %697 ]
  %710 = phi i16* [ %692, %690 ], [ %705, %697 ]
  %711 = phi i16* [ %693, %690 ], [ %704, %697 ]
  %712 = icmp ult i64 %694, 7
  br i1 %712, label %743, label %713

713:                                              ; preds = %708, %713
  %714 = phi i64 [ %739, %713 ], [ %709, %708 ]
  %715 = phi i16* [ %741, %713 ], [ %710, %708 ]
  %716 = phi i16* [ %740, %713 ], [ %711, %708 ]
  %717 = load i16, i16* %715, align 2
  store i16 %717, i16* %716, align 2
  %718 = getelementptr inbounds i16, i16* %716, i64 1
  %719 = getelementptr inbounds i16, i16* %715, i64 1
  %720 = load i16, i16* %719, align 2
  store i16 %720, i16* %718, align 2
  %721 = getelementptr inbounds i16, i16* %716, i64 2
  %722 = getelementptr inbounds i16, i16* %715, i64 2
  %723 = load i16, i16* %722, align 2
  store i16 %723, i16* %721, align 2
  %724 = getelementptr inbounds i16, i16* %716, i64 3
  %725 = getelementptr inbounds i16, i16* %715, i64 3
  %726 = load i16, i16* %725, align 2
  store i16 %726, i16* %724, align 2
  %727 = getelementptr inbounds i16, i16* %716, i64 4
  %728 = getelementptr inbounds i16, i16* %715, i64 4
  %729 = load i16, i16* %728, align 2
  store i16 %729, i16* %727, align 2
  %730 = getelementptr inbounds i16, i16* %716, i64 5
  %731 = getelementptr inbounds i16, i16* %715, i64 5
  %732 = load i16, i16* %731, align 2
  store i16 %732, i16* %730, align 2
  %733 = getelementptr inbounds i16, i16* %716, i64 6
  %734 = getelementptr inbounds i16, i16* %715, i64 6
  %735 = load i16, i16* %734, align 2
  store i16 %735, i16* %733, align 2
  %736 = getelementptr inbounds i16, i16* %716, i64 7
  %737 = getelementptr inbounds i16, i16* %715, i64 7
  %738 = load i16, i16* %737, align 2
  store i16 %738, i16* %736, align 2
  %739 = add i64 %714, -8
  %740 = getelementptr inbounds i16, i16* %716, i64 8
  %741 = getelementptr inbounds i16, i16* %715, i64 8
  %742 = icmp eq i64 %739, 0
  br i1 %742, label %743, label %713, !llvm.loop !40

743:                                              ; preds = %708, %713, %688, %565
  %744 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 5
  %745 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %1, i64 0, i32 5
  %746 = bitcast %"class.std::__1::basic_string.4"* %745 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %747 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %746, i64 0, i32 1, i32 1
  %748 = load i8, i8* %747, align 1
  %749 = icmp slt i8 %748, 0
  br i1 %749, label %753, label %750

750:                                              ; preds = %743
  %751 = bitcast %"class.std::__1::basic_string.4"* %744 to i8*
  %752 = bitcast %"class.std::__1::basic_string.4"* %745 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %751, i8* align 8 %752, i64 24, i1 false) #11
  br label %928

753:                                              ; preds = %743
  %754 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %745, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %755 = load i16*, i16** %754, align 8
  %756 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %757 = load i64, i64* %756, align 8
  %758 = icmp ult i64 %757, 11
  br i1 %758, label %759, label %764

759:                                              ; preds = %753
  %760 = bitcast %"class.std::__1::basic_string.4"* %744 to i16*
  %761 = trunc i64 %757 to i8
  %762 = bitcast %"class.std::__1::basic_string.4"* %744 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %763 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %762, i64 0, i32 1, i32 1
  store i8 %761, i8* %763, align 1
  br label %781

764:                                              ; preds = %753
  %765 = icmp ugt i64 %757, 9223372036854775791
  br i1 %765, label %766, label %768

766:                                              ; preds = %764
  %767 = bitcast %"class.std::__1::basic_string.4"* %744 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %767) #12
  unreachable

768:                                              ; preds = %764
  %769 = add nuw nsw i64 %757, 8
  %770 = and i64 %769, -8
  %771 = icmp slt i64 %770, 0
  br i1 %771, label %772, label %773

772:                                              ; preds = %768
  tail call void @abort() #12
  unreachable

773:                                              ; preds = %768
  %774 = shl i64 %770, 1
  %775 = tail call i8* @_Znwm(i64 %774) #10
  %776 = bitcast i8* %775 to i16*
  %777 = bitcast %"class.std::__1::basic_string.4"* %744 to i8**
  store i8* %775, i8** %777, align 8
  %778 = or i64 %770, -9223372036854775808
  %779 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %778, i64* %779, align 8
  %780 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %757, i64* %780, align 8
  br label %781

781:                                              ; preds = %773, %759
  %782 = phi i16* [ %760, %759 ], [ %776, %773 ]
  %783 = add nuw nsw i64 %757, 1
  %784 = add i64 %757, 1
  %785 = icmp ult i64 %784, 16
  br i1 %785, label %875, label %786

786:                                              ; preds = %781
  %787 = add i64 %757, 1
  %788 = getelementptr i16, i16* %782, i64 %787
  %789 = getelementptr i16, i16* %755, i64 %787
  %790 = icmp ult i16* %782, %789
  %791 = icmp ult i16* %755, %788
  %792 = and i1 %790, %791
  br i1 %792, label %875, label %793

793:                                              ; preds = %786
  %794 = and i64 %784, -16
  %795 = sub i64 %783, %794
  %796 = getelementptr i16, i16* %755, i64 %794
  %797 = getelementptr i16, i16* %782, i64 %794
  %798 = add i64 %794, -16
  %799 = lshr exact i64 %798, 4
  %800 = add nuw nsw i64 %799, 1
  %801 = and i64 %800, 3
  %802 = icmp ult i64 %798, 48
  br i1 %802, label %854, label %803

803:                                              ; preds = %793
  %804 = sub nsw i64 %800, %801
  br label %805

805:                                              ; preds = %805, %803
  %806 = phi i64 [ 0, %803 ], [ %851, %805 ]
  %807 = phi i64 [ %804, %803 ], [ %852, %805 ]
  %808 = getelementptr i16, i16* %755, i64 %806
  %809 = getelementptr i16, i16* %782, i64 %806
  %810 = bitcast i16* %808 to <8 x i16>*
  %811 = load <8 x i16>, <8 x i16>* %810, align 2, !alias.scope !41
  %812 = getelementptr i16, i16* %808, i64 8
  %813 = bitcast i16* %812 to <8 x i16>*
  %814 = load <8 x i16>, <8 x i16>* %813, align 2, !alias.scope !41
  %815 = bitcast i16* %809 to <8 x i16>*
  store <8 x i16> %811, <8 x i16>* %815, align 2, !alias.scope !44, !noalias !41
  %816 = getelementptr i16, i16* %809, i64 8
  %817 = bitcast i16* %816 to <8 x i16>*
  store <8 x i16> %814, <8 x i16>* %817, align 2, !alias.scope !44, !noalias !41
  %818 = or i64 %806, 16
  %819 = getelementptr i16, i16* %755, i64 %818
  %820 = getelementptr i16, i16* %782, i64 %818
  %821 = bitcast i16* %819 to <8 x i16>*
  %822 = load <8 x i16>, <8 x i16>* %821, align 2, !alias.scope !41
  %823 = getelementptr i16, i16* %819, i64 8
  %824 = bitcast i16* %823 to <8 x i16>*
  %825 = load <8 x i16>, <8 x i16>* %824, align 2, !alias.scope !41
  %826 = bitcast i16* %820 to <8 x i16>*
  store <8 x i16> %822, <8 x i16>* %826, align 2, !alias.scope !44, !noalias !41
  %827 = getelementptr i16, i16* %820, i64 8
  %828 = bitcast i16* %827 to <8 x i16>*
  store <8 x i16> %825, <8 x i16>* %828, align 2, !alias.scope !44, !noalias !41
  %829 = or i64 %806, 32
  %830 = getelementptr i16, i16* %755, i64 %829
  %831 = getelementptr i16, i16* %782, i64 %829
  %832 = bitcast i16* %830 to <8 x i16>*
  %833 = load <8 x i16>, <8 x i16>* %832, align 2, !alias.scope !41
  %834 = getelementptr i16, i16* %830, i64 8
  %835 = bitcast i16* %834 to <8 x i16>*
  %836 = load <8 x i16>, <8 x i16>* %835, align 2, !alias.scope !41
  %837 = bitcast i16* %831 to <8 x i16>*
  store <8 x i16> %833, <8 x i16>* %837, align 2, !alias.scope !44, !noalias !41
  %838 = getelementptr i16, i16* %831, i64 8
  %839 = bitcast i16* %838 to <8 x i16>*
  store <8 x i16> %836, <8 x i16>* %839, align 2, !alias.scope !44, !noalias !41
  %840 = or i64 %806, 48
  %841 = getelementptr i16, i16* %755, i64 %840
  %842 = getelementptr i16, i16* %782, i64 %840
  %843 = bitcast i16* %841 to <8 x i16>*
  %844 = load <8 x i16>, <8 x i16>* %843, align 2, !alias.scope !41
  %845 = getelementptr i16, i16* %841, i64 8
  %846 = bitcast i16* %845 to <8 x i16>*
  %847 = load <8 x i16>, <8 x i16>* %846, align 2, !alias.scope !41
  %848 = bitcast i16* %842 to <8 x i16>*
  store <8 x i16> %844, <8 x i16>* %848, align 2, !alias.scope !44, !noalias !41
  %849 = getelementptr i16, i16* %842, i64 8
  %850 = bitcast i16* %849 to <8 x i16>*
  store <8 x i16> %847, <8 x i16>* %850, align 2, !alias.scope !44, !noalias !41
  %851 = add i64 %806, 64
  %852 = add i64 %807, -4
  %853 = icmp eq i64 %852, 0
  br i1 %853, label %854, label %805, !llvm.loop !46

854:                                              ; preds = %805, %793
  %855 = phi i64 [ 0, %793 ], [ %851, %805 ]
  %856 = icmp eq i64 %801, 0
  br i1 %856, label %873, label %857

857:                                              ; preds = %854, %857
  %858 = phi i64 [ %870, %857 ], [ %855, %854 ]
  %859 = phi i64 [ %871, %857 ], [ %801, %854 ]
  %860 = getelementptr i16, i16* %755, i64 %858
  %861 = getelementptr i16, i16* %782, i64 %858
  %862 = bitcast i16* %860 to <8 x i16>*
  %863 = load <8 x i16>, <8 x i16>* %862, align 2, !alias.scope !41
  %864 = getelementptr i16, i16* %860, i64 8
  %865 = bitcast i16* %864 to <8 x i16>*
  %866 = load <8 x i16>, <8 x i16>* %865, align 2, !alias.scope !41
  %867 = bitcast i16* %861 to <8 x i16>*
  store <8 x i16> %863, <8 x i16>* %867, align 2, !alias.scope !44, !noalias !41
  %868 = getelementptr i16, i16* %861, i64 8
  %869 = bitcast i16* %868 to <8 x i16>*
  store <8 x i16> %866, <8 x i16>* %869, align 2, !alias.scope !44, !noalias !41
  %870 = add i64 %858, 16
  %871 = add i64 %859, -1
  %872 = icmp eq i64 %871, 0
  br i1 %872, label %873, label %857, !llvm.loop !47

873:                                              ; preds = %857, %854
  %874 = icmp eq i64 %784, %794
  br i1 %874, label %928, label %875

875:                                              ; preds = %873, %786, %781
  %876 = phi i64 [ %783, %786 ], [ %783, %781 ], [ %795, %873 ]
  %877 = phi i16* [ %755, %786 ], [ %755, %781 ], [ %796, %873 ]
  %878 = phi i16* [ %782, %786 ], [ %782, %781 ], [ %797, %873 ]
  %879 = add i64 %876, -1
  %880 = and i64 %876, 7
  %881 = icmp eq i64 %880, 0
  br i1 %881, label %893, label %882

882:                                              ; preds = %875, %882
  %883 = phi i64 [ %888, %882 ], [ %876, %875 ]
  %884 = phi i16* [ %890, %882 ], [ %877, %875 ]
  %885 = phi i16* [ %889, %882 ], [ %878, %875 ]
  %886 = phi i64 [ %891, %882 ], [ %880, %875 ]
  %887 = load i16, i16* %884, align 2
  store i16 %887, i16* %885, align 2
  %888 = add i64 %883, -1
  %889 = getelementptr inbounds i16, i16* %885, i64 1
  %890 = getelementptr inbounds i16, i16* %884, i64 1
  %891 = add i64 %886, -1
  %892 = icmp eq i64 %891, 0
  br i1 %892, label %893, label %882, !llvm.loop !48

893:                                              ; preds = %882, %875
  %894 = phi i64 [ %876, %875 ], [ %888, %882 ]
  %895 = phi i16* [ %877, %875 ], [ %890, %882 ]
  %896 = phi i16* [ %878, %875 ], [ %889, %882 ]
  %897 = icmp ult i64 %879, 7
  br i1 %897, label %928, label %898

898:                                              ; preds = %893, %898
  %899 = phi i64 [ %924, %898 ], [ %894, %893 ]
  %900 = phi i16* [ %926, %898 ], [ %895, %893 ]
  %901 = phi i16* [ %925, %898 ], [ %896, %893 ]
  %902 = load i16, i16* %900, align 2
  store i16 %902, i16* %901, align 2
  %903 = getelementptr inbounds i16, i16* %901, i64 1
  %904 = getelementptr inbounds i16, i16* %900, i64 1
  %905 = load i16, i16* %904, align 2
  store i16 %905, i16* %903, align 2
  %906 = getelementptr inbounds i16, i16* %901, i64 2
  %907 = getelementptr inbounds i16, i16* %900, i64 2
  %908 = load i16, i16* %907, align 2
  store i16 %908, i16* %906, align 2
  %909 = getelementptr inbounds i16, i16* %901, i64 3
  %910 = getelementptr inbounds i16, i16* %900, i64 3
  %911 = load i16, i16* %910, align 2
  store i16 %911, i16* %909, align 2
  %912 = getelementptr inbounds i16, i16* %901, i64 4
  %913 = getelementptr inbounds i16, i16* %900, i64 4
  %914 = load i16, i16* %913, align 2
  store i16 %914, i16* %912, align 2
  %915 = getelementptr inbounds i16, i16* %901, i64 5
  %916 = getelementptr inbounds i16, i16* %900, i64 5
  %917 = load i16, i16* %916, align 2
  store i16 %917, i16* %915, align 2
  %918 = getelementptr inbounds i16, i16* %901, i64 6
  %919 = getelementptr inbounds i16, i16* %900, i64 6
  %920 = load i16, i16* %919, align 2
  store i16 %920, i16* %918, align 2
  %921 = getelementptr inbounds i16, i16* %901, i64 7
  %922 = getelementptr inbounds i16, i16* %900, i64 7
  %923 = load i16, i16* %922, align 2
  store i16 %923, i16* %921, align 2
  %924 = add i64 %899, -8
  %925 = getelementptr inbounds i16, i16* %901, i64 8
  %926 = getelementptr inbounds i16, i16* %900, i64 8
  %927 = icmp eq i64 %924, 0
  br i1 %927, label %928, label %898, !llvm.loop !49

928:                                              ; preds = %893, %898, %873, %750
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15CandidateWindow5EntryD2Ev(%"struct.ui::CandidateWindow::Entry"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2ui15CandidateWindow5EntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 5
  %4 = bitcast %"class.std::__1::basic_string.4"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string.4"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 4
  %13 = bitcast %"class.std::__1::basic_string.4"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = bitcast %"class.std::__1::basic_string.4"* %12 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 3
  %22 = bitcast %"class.std::__1::basic_string.4"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = bitcast %"class.std::__1::basic_string.4"* %21 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %20, %26
  %30 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 2
  %31 = bitcast %"class.std::__1::basic_string.4"* %30 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %31, i64 0, i32 1, i32 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %29
  %36 = bitcast %"class.std::__1::basic_string.4"* %30 to i8**
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZdlPv(i8* %37) #10
  br label %38

38:                                               ; preds = %29, %35
  %39 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %0, i64 0, i32 1
  %40 = bitcast %"class.std::__1::basic_string.4"* %39 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = bitcast %"class.std::__1::basic_string.4"* %39 to i8**
  %46 = load i8*, i8** %45, align 8
  tail call void @_ZdlPv(i8* %46) #10
  br label %47

47:                                               ; preds = %38, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15CandidateWindow5EntryD0Ev(%"struct.ui::CandidateWindow::Entry"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2ui15CandidateWindow5EntryD2Ev(%"struct.ui::CandidateWindow::Entry"* %0) #11
  %2 = bitcast %"struct.ui::CandidateWindow::Entry"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2ui15CandidateWindow5EntryENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"*, %"struct.ui::CandidateWindow::Entry"*, %"struct.ui::CandidateWindow::Entry"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.ui::CandidateWindow::Entry"* %2 to i64
  %5 = ptrtoint %"struct.ui::CandidateWindow::Entry"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 7
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.ui::CandidateWindow::Entry"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 7
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.ui::CandidateWindow::Entry"*
  br i1 %15, label %76, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.ui::CandidateWindow::Entry"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 7
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %1, i64 %22
  %25 = select i1 %23, %"struct.ui::CandidateWindow::Entry"* %24, %"struct.ui::CandidateWindow::Entry"* %2
  %26 = icmp eq %"struct.ui::CandidateWindow::Entry"* %25, %1
  br i1 %26, label %48, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"struct.ui::CandidateWindow::Entry"* [ %46, %27 ], [ %16, %17 ]
  %29 = phi %"struct.ui::CandidateWindow::Entry"* [ %45, %27 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %28, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %29, i64 0, i32 1
  %32 = tail call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.4"* %30, %"class.std::__1::basic_string.4"* dereferenceable(24) %31) #11
  %33 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %28, i64 0, i32 2
  %34 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %29, i64 0, i32 2
  %35 = tail call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.4"* %33, %"class.std::__1::basic_string.4"* dereferenceable(24) %34) #11
  %36 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %28, i64 0, i32 3
  %37 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %29, i64 0, i32 3
  %38 = tail call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.4"* %36, %"class.std::__1::basic_string.4"* dereferenceable(24) %37) #11
  %39 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %28, i64 0, i32 4
  %40 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %29, i64 0, i32 4
  %41 = tail call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.4"* %39, %"class.std::__1::basic_string.4"* dereferenceable(24) %40) #11
  %42 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %28, i64 0, i32 5
  %43 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %29, i64 0, i32 5
  %44 = tail call dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.4"* %42, %"class.std::__1::basic_string.4"* dereferenceable(24) %43) #11
  %45 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %29, i64 1
  %46 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %28, i64 1
  %47 = icmp eq %"struct.ui::CandidateWindow::Entry"* %45, %25
  br i1 %47, label %48, label %27

48:                                               ; preds = %27, %17
  %49 = phi %"struct.ui::CandidateWindow::Entry"* [ %16, %17 ], [ %46, %27 ]
  br i1 %23, label %50, label %65

50:                                               ; preds = %48
  %51 = load i64, i64* %19, align 8
  %52 = icmp eq %"struct.ui::CandidateWindow::Entry"* %25, %2
  br i1 %52, label %63, label %53

53:                                               ; preds = %50
  %54 = inttoptr i64 %51 to %"struct.ui::CandidateWindow::Entry"*
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi %"struct.ui::CandidateWindow::Entry"* [ %59, %55 ], [ %54, %53 ]
  %57 = phi %"struct.ui::CandidateWindow::Entry"* [ %58, %55 ], [ %24, %53 ]
  tail call void @_ZN2ui15CandidateWindow5EntryC2ERKS1_(%"struct.ui::CandidateWindow::Entry"* %56, %"struct.ui::CandidateWindow::Entry"* dereferenceable(128) %57) #11
  %58 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %57, i64 1
  %59 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %56, i64 1
  %60 = icmp eq %"struct.ui::CandidateWindow::Entry"* %58, %2
  br i1 %60, label %61, label %55

61:                                               ; preds = %55
  %62 = ptrtoint %"struct.ui::CandidateWindow::Entry"* %59 to i64
  br label %63

63:                                               ; preds = %50, %61
  %64 = phi i64 [ %51, %50 ], [ %62, %61 ]
  store i64 %64, i64* %19, align 8
  br label %133

65:                                               ; preds = %48
  %66 = load %"struct.ui::CandidateWindow::Entry"*, %"struct.ui::CandidateWindow::Entry"** %18, align 8
  %67 = icmp eq %"struct.ui::CandidateWindow::Entry"* %66, %49
  br i1 %67, label %75, label %68

68:                                               ; preds = %65, %68
  %69 = phi %"struct.ui::CandidateWindow::Entry"* [ %70, %68 ], [ %66, %65 ]
  %70 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %69, i64 -1
  %71 = bitcast %"struct.ui::CandidateWindow::Entry"* %70 to void (%"struct.ui::CandidateWindow::Entry"*)***
  %72 = load void (%"struct.ui::CandidateWindow::Entry"*)**, void (%"struct.ui::CandidateWindow::Entry"*)*** %71, align 8
  %73 = load void (%"struct.ui::CandidateWindow::Entry"*)*, void (%"struct.ui::CandidateWindow::Entry"*)** %72, align 8
  tail call void %73(%"struct.ui::CandidateWindow::Entry"* %70) #11
  %74 = icmp eq %"struct.ui::CandidateWindow::Entry"* %70, %49
  br i1 %74, label %75, label %68

75:                                               ; preds = %68, %65
  store %"struct.ui::CandidateWindow::Entry"* %49, %"struct.ui::CandidateWindow::Entry"** %18, align 8
  br label %133

76:                                               ; preds = %3
  %77 = icmp eq i64 %12, 0
  br i1 %77, label %96, label %78

78:                                               ; preds = %76
  %79 = inttoptr i64 %12 to i8*
  %80 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %81 = load %"struct.ui::CandidateWindow::Entry"*, %"struct.ui::CandidateWindow::Entry"** %80, align 8
  %82 = icmp eq %"struct.ui::CandidateWindow::Entry"* %81, %16
  br i1 %82, label %93, label %83

83:                                               ; preds = %78, %83
  %84 = phi %"struct.ui::CandidateWindow::Entry"* [ %85, %83 ], [ %81, %78 ]
  %85 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %84, i64 -1
  %86 = bitcast %"struct.ui::CandidateWindow::Entry"* %85 to void (%"struct.ui::CandidateWindow::Entry"*)***
  %87 = load void (%"struct.ui::CandidateWindow::Entry"*)**, void (%"struct.ui::CandidateWindow::Entry"*)*** %86, align 8
  %88 = load void (%"struct.ui::CandidateWindow::Entry"*)*, void (%"struct.ui::CandidateWindow::Entry"*)** %87, align 8
  tail call void %88(%"struct.ui::CandidateWindow::Entry"* %85) #11
  %89 = icmp eq %"struct.ui::CandidateWindow::Entry"* %85, %16
  br i1 %89, label %90, label %83

90:                                               ; preds = %83
  %91 = bitcast %"class.std::__1::vector"* %0 to i8**
  %92 = load i8*, i8** %91, align 8
  br label %93

93:                                               ; preds = %90, %78
  %94 = phi i8* [ %92, %90 ], [ %79, %78 ]
  store %"struct.ui::CandidateWindow::Entry"* %16, %"struct.ui::CandidateWindow::Entry"** %80, align 8
  tail call void @_ZdlPv(i8* %94) #10
  %95 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #11
  br label %96

96:                                               ; preds = %76, %93
  %97 = phi i64 [ %10, %76 ], [ 0, %93 ]
  %98 = icmp ugt i64 %7, 144115188075855871
  br i1 %98, label %99, label %101

99:                                               ; preds = %96
  %100 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %100) #12
  unreachable

101:                                              ; preds = %96
  %102 = ashr exact i64 %97, 7
  %103 = icmp ult i64 %102, 72057594037927935
  br i1 %103, label %104, label %111

104:                                              ; preds = %101
  %105 = ashr exact i64 %97, 6
  %106 = icmp ult i64 %105, %7
  br i1 %106, label %111, label %107

107:                                              ; preds = %104
  %108 = icmp ugt i64 %105, 144115188075855871
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %110) #12
  unreachable

111:                                              ; preds = %104, %101, %107
  %112 = phi i64 [ %105, %107 ], [ 144115188075855871, %101 ], [ %7, %104 ]
  %113 = shl i64 %112, 7
  %114 = tail call i8* @_Znwm(i64 %113) #10
  %115 = bitcast i8* %114 to %"struct.ui::CandidateWindow::Entry"*
  %116 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %117 = bitcast %"struct.ui::CandidateWindow::Entry"** %116 to i8**
  store i8* %114, i8** %117, align 8
  %118 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %114, i8** %118, align 8
  %119 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %115, i64 %112
  store %"struct.ui::CandidateWindow::Entry"* %119, %"struct.ui::CandidateWindow::Entry"** %8, align 8
  %120 = bitcast %"struct.ui::CandidateWindow::Entry"** %116 to i64*
  %121 = ptrtoint i8* %114 to i64
  %122 = icmp eq %"struct.ui::CandidateWindow::Entry"* %1, %2
  br i1 %122, label %131, label %123

123:                                              ; preds = %111, %123
  %124 = phi %"struct.ui::CandidateWindow::Entry"* [ %127, %123 ], [ %115, %111 ]
  %125 = phi %"struct.ui::CandidateWindow::Entry"* [ %126, %123 ], [ %1, %111 ]
  tail call void @_ZN2ui15CandidateWindow5EntryC2ERKS1_(%"struct.ui::CandidateWindow::Entry"* %124, %"struct.ui::CandidateWindow::Entry"* dereferenceable(128) %125) #11
  %126 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %125, i64 1
  %127 = getelementptr inbounds %"struct.ui::CandidateWindow::Entry", %"struct.ui::CandidateWindow::Entry"* %124, i64 1
  %128 = icmp eq %"struct.ui::CandidateWindow::Entry"* %126, %2
  br i1 %128, label %129, label %123

129:                                              ; preds = %123
  %130 = ptrtoint %"struct.ui::CandidateWindow::Entry"* %127 to i64
  br label %131

131:                                              ; preds = %111, %129
  %132 = phi i64 [ %121, %111 ], [ %130, %129 ]
  store i64 %132, i64* %120, align 8
  br label %133

133:                                              ; preds = %63, %75, %131
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.4"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.4"*, %"class.std::__1::basic_string.4"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.4"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.4"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.4"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.4"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.4"*
  %35 = icmp ugt %"class.std::__1::basic_string.4"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !50
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !50
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !53, !noalias !50
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !53, !noalias !50
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !50
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !50
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !53, !noalias !50
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !53, !noalias !50
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !50
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !50
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !53, !noalias !50
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !53, !noalias !50
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !50
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !50
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !53, !noalias !50
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !53, !noalias !50
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !55

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !50
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !50
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !53, !noalias !50
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !53, !noalias !50
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !56

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !57

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !58

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #12
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #12
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #10
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !59
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !59
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !62, !noalias !59
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !62, !noalias !59
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !59
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !59
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !62, !noalias !59
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !62, !noalias !59
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !59
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !59
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !62, !noalias !59
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !62, !noalias !59
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !59
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !59
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !62, !noalias !59
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !62, !noalias !59
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !64

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !59
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !59
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !62, !noalias !59
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !62, !noalias !59
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !65

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !66

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !67

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.4"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !68
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !68
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !71, !noalias !68
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !71, !noalias !68
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !68
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !68
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !71, !noalias !68
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !71, !noalias !68
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !68
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !68
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !71, !noalias !68
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !71, !noalias !68
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !68
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !68
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !71, !noalias !68
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !71, !noalias !68
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !73

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !68
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !68
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !71, !noalias !68
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !71, !noalias !68
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !74

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !75

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !76

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #11
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.4"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.4"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.4"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #12
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.4"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.4"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #12
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #10
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !77
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !77
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !80, !noalias !77
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !80, !noalias !77
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !77
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !77
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !80, !noalias !77
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !80, !noalias !77
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !77
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !77
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !80, !noalias !77
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !80, !noalias !77
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !77
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !77
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !80, !noalias !77
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !80, !noalias !77
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !82

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !77
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !77
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !80, !noalias !77
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !80, !noalias !77
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !83

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !84

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !85

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !86

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !87

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !88

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !90
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !90
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !93, !noalias !90
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !93, !noalias !90
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !90
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !90
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !93, !noalias !90
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !93, !noalias !90
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !90
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !90
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !93, !noalias !90
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !93, !noalias !90
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !90
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !90
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !93, !noalias !90
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !93, !noalias !90
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !95

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !90
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !90
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !93, !noalias !90
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !93, !noalias !90
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !96

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !97

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !98

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #10
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.4"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2ui13InfolistEntryENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.18"*, %"struct.ui::InfolistEntry"* dereferenceable(56)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.ui::InfolistEntry"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.18"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 56
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 329406144173384850
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.18"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.ui::InfolistEntry"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 56
  %20 = icmp ult i64 %19, 164703072086692425
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 329406144173384850, %14 ]
  %28 = mul i64 %27, 56
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.ui::InfolistEntry"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.ui::InfolistEntry"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %33, i64 %32
  %36 = ptrtoint %"struct.ui::InfolistEntry"* %35 to i64
  tail call void @_ZN2ui13InfolistEntryC2ERKS0_(%"struct.ui::InfolistEntry"* %34, %"struct.ui::InfolistEntry"* dereferenceable(56) %1) #11
  %37 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %34, i64 1
  %38 = ptrtoint %"struct.ui::InfolistEntry"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.18", %"class.std::__1::vector.18"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.ui::InfolistEntry"*, %"struct.ui::InfolistEntry"** %39, align 8
  %41 = load %"struct.ui::InfolistEntry"*, %"struct.ui::InfolistEntry"** %3, align 8
  %42 = icmp eq %"struct.ui::InfolistEntry"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.ui::InfolistEntry"* %40 to i64
  br label %63

45:                                               ; preds = %31, %45
  %46 = phi %"struct.ui::InfolistEntry"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.ui::InfolistEntry"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %47, i64 -1
  %50 = bitcast %"struct.ui::InfolistEntry"* %48 to i8*
  %51 = bitcast %"struct.ui::InfolistEntry"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #11
  %52 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %46, i64 -1, i32 1
  %53 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %47, i64 -1, i32 1
  %54 = bitcast %"class.std::__1::basic_string.4"* %52 to i8*
  %55 = bitcast %"class.std::__1::basic_string.4"* %53 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  %56 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %46, i64 -1, i32 2
  %57 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %47, i64 -1, i32 2
  %58 = load i8, i8* %57, align 8, !range !2
  store i8 %58, i8* %56, align 8
  %59 = icmp eq %"struct.ui::InfolistEntry"* %49, %40
  br i1 %59, label %60, label %45

60:                                               ; preds = %45
  %61 = load i64, i64* %6, align 8
  %62 = load %"struct.ui::InfolistEntry"*, %"struct.ui::InfolistEntry"** %3, align 8
  br label %63

63:                                               ; preds = %43, %60
  %64 = phi %"struct.ui::InfolistEntry"* [ %40, %43 ], [ %62, %60 ]
  %65 = phi %"struct.ui::InfolistEntry"* [ %34, %43 ], [ %48, %60 ]
  %66 = phi i64 [ %44, %43 ], [ %61, %60 ]
  %67 = ptrtoint %"struct.ui::InfolistEntry"* %65 to i64
  store i64 %67, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %68 = inttoptr i64 %66 to %"struct.ui::InfolistEntry"*
  %69 = icmp eq %"struct.ui::InfolistEntry"* %64, %68
  br i1 %69, label %91, label %70

70:                                               ; preds = %63, %89
  %71 = phi %"struct.ui::InfolistEntry"* [ %72, %89 ], [ %64, %63 ]
  %72 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %71, i64 -1
  %73 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %71, i64 -1, i32 1
  %74 = bitcast %"class.std::__1::basic_string.4"* %73 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %74, i64 0, i32 1, i32 1
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %70
  %79 = bitcast %"class.std::__1::basic_string.4"* %73 to i8**
  %80 = load i8*, i8** %79, align 8
  tail call void @_ZdlPv(i8* %80) #10
  br label %81

81:                                               ; preds = %78, %70
  %82 = bitcast %"struct.ui::InfolistEntry"* %72 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %82, i64 0, i32 1, i32 1
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %81
  %87 = bitcast %"struct.ui::InfolistEntry"* %72 to i8**
  %88 = load i8*, i8** %87, align 8
  tail call void @_ZdlPv(i8* %88) #10
  br label %89

89:                                               ; preds = %86, %81
  %90 = icmp eq %"struct.ui::InfolistEntry"* %72, %68
  br i1 %90, label %91, label %70

91:                                               ; preds = %89, %63
  %92 = icmp eq i64 %66, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = inttoptr i64 %66 to i8*
  tail call void @_ZdlPv(i8* %94) #10
  br label %95

95:                                               ; preds = %91, %93
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui13InfolistEntryC2ERKS0_(%"struct.ui::InfolistEntry"*, %"struct.ui::InfolistEntry"* dereferenceable(56)) unnamed_addr #8 comdat align 2 {
  %3 = bitcast %"struct.ui::InfolistEntry"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.ui::InfolistEntry"* %0 to i8*
  %9 = bitcast %"struct.ui::InfolistEntry"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #11
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"struct.ui::InfolistEntry"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"struct.ui::InfolistEntry"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"struct.ui::InfolistEntry"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #12
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #12
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"struct.ui::InfolistEntry"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !99
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !99
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !102, !noalias !99
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !102, !noalias !99
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !99
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !99
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !102, !noalias !99
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !102, !noalias !99
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !99
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !99
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !102, !noalias !99
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !102, !noalias !99
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !99
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !99
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !102, !noalias !99
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !102, !noalias !99
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !104

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !99
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !99
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !102, !noalias !99
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !102, !noalias !99
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !105

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !106

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !107

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %0, i64 0, i32 1
  %187 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %1, i64 0, i32 1
  %188 = bitcast %"class.std::__1::basic_string.4"* %187 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %188, i64 0, i32 1, i32 1
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %185
  %193 = bitcast %"class.std::__1::basic_string.4"* %186 to i8*
  %194 = bitcast %"class.std::__1::basic_string.4"* %187 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %194, i64 24, i1 false) #11
  br label %370

195:                                              ; preds = %185
  %196 = getelementptr inbounds %"class.std::__1::basic_string.4", %"class.std::__1::basic_string.4"* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i16*, i16** %196, align 8
  %198 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = icmp ult i64 %199, 11
  br i1 %200, label %201, label %206

201:                                              ; preds = %195
  %202 = bitcast %"class.std::__1::basic_string.4"* %186 to i16*
  %203 = trunc i64 %199 to i8
  %204 = bitcast %"class.std::__1::basic_string.4"* %186 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %204, i64 0, i32 1, i32 1
  store i8 %203, i8* %205, align 1
  br label %223

206:                                              ; preds = %195
  %207 = icmp ugt i64 %199, 9223372036854775791
  br i1 %207, label %208, label %210

208:                                              ; preds = %206
  %209 = bitcast %"class.std::__1::basic_string.4"* %186 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %209) #12
  unreachable

210:                                              ; preds = %206
  %211 = add nuw nsw i64 %199, 8
  %212 = and i64 %211, -8
  %213 = icmp slt i64 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %210
  tail call void @abort() #12
  unreachable

215:                                              ; preds = %210
  %216 = shl i64 %212, 1
  %217 = tail call i8* @_Znwm(i64 %216) #10
  %218 = bitcast i8* %217 to i16*
  %219 = bitcast %"class.std::__1::basic_string.4"* %186 to i8**
  store i8* %217, i8** %219, align 8
  %220 = or i64 %212, -9223372036854775808
  %221 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %199, i64* %222, align 8
  br label %223

223:                                              ; preds = %215, %201
  %224 = phi i16* [ %202, %201 ], [ %218, %215 ]
  %225 = add nuw nsw i64 %199, 1
  %226 = add i64 %199, 1
  %227 = icmp ult i64 %226, 16
  br i1 %227, label %317, label %228

228:                                              ; preds = %223
  %229 = add i64 %199, 1
  %230 = getelementptr i16, i16* %224, i64 %229
  %231 = getelementptr i16, i16* %197, i64 %229
  %232 = icmp ult i16* %224, %231
  %233 = icmp ult i16* %197, %230
  %234 = and i1 %232, %233
  br i1 %234, label %317, label %235

235:                                              ; preds = %228
  %236 = and i64 %226, -16
  %237 = sub i64 %225, %236
  %238 = getelementptr i16, i16* %197, i64 %236
  %239 = getelementptr i16, i16* %224, i64 %236
  %240 = add i64 %236, -16
  %241 = lshr exact i64 %240, 4
  %242 = add nuw nsw i64 %241, 1
  %243 = and i64 %242, 3
  %244 = icmp ult i64 %240, 48
  br i1 %244, label %296, label %245

245:                                              ; preds = %235
  %246 = sub nsw i64 %242, %243
  br label %247

247:                                              ; preds = %247, %245
  %248 = phi i64 [ 0, %245 ], [ %293, %247 ]
  %249 = phi i64 [ %246, %245 ], [ %294, %247 ]
  %250 = getelementptr i16, i16* %197, i64 %248
  %251 = getelementptr i16, i16* %224, i64 %248
  %252 = bitcast i16* %250 to <8 x i16>*
  %253 = load <8 x i16>, <8 x i16>* %252, align 2, !alias.scope !108
  %254 = getelementptr i16, i16* %250, i64 8
  %255 = bitcast i16* %254 to <8 x i16>*
  %256 = load <8 x i16>, <8 x i16>* %255, align 2, !alias.scope !108
  %257 = bitcast i16* %251 to <8 x i16>*
  store <8 x i16> %253, <8 x i16>* %257, align 2, !alias.scope !111, !noalias !108
  %258 = getelementptr i16, i16* %251, i64 8
  %259 = bitcast i16* %258 to <8 x i16>*
  store <8 x i16> %256, <8 x i16>* %259, align 2, !alias.scope !111, !noalias !108
  %260 = or i64 %248, 16
  %261 = getelementptr i16, i16* %197, i64 %260
  %262 = getelementptr i16, i16* %224, i64 %260
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2, !alias.scope !108
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !108
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2, !alias.scope !111, !noalias !108
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2, !alias.scope !111, !noalias !108
  %271 = or i64 %248, 32
  %272 = getelementptr i16, i16* %197, i64 %271
  %273 = getelementptr i16, i16* %224, i64 %271
  %274 = bitcast i16* %272 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !108
  %276 = getelementptr i16, i16* %272, i64 8
  %277 = bitcast i16* %276 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !108
  %279 = bitcast i16* %273 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %279, align 2, !alias.scope !111, !noalias !108
  %280 = getelementptr i16, i16* %273, i64 8
  %281 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %281, align 2, !alias.scope !111, !noalias !108
  %282 = or i64 %248, 48
  %283 = getelementptr i16, i16* %197, i64 %282
  %284 = getelementptr i16, i16* %224, i64 %282
  %285 = bitcast i16* %283 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !108
  %287 = getelementptr i16, i16* %283, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !108
  %290 = bitcast i16* %284 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %290, align 2, !alias.scope !111, !noalias !108
  %291 = getelementptr i16, i16* %284, i64 8
  %292 = bitcast i16* %291 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %292, align 2, !alias.scope !111, !noalias !108
  %293 = add i64 %248, 64
  %294 = add i64 %249, -4
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %247, !llvm.loop !113

296:                                              ; preds = %247, %235
  %297 = phi i64 [ 0, %235 ], [ %293, %247 ]
  %298 = icmp eq i64 %243, 0
  br i1 %298, label %315, label %299

299:                                              ; preds = %296, %299
  %300 = phi i64 [ %312, %299 ], [ %297, %296 ]
  %301 = phi i64 [ %313, %299 ], [ %243, %296 ]
  %302 = getelementptr i16, i16* %197, i64 %300
  %303 = getelementptr i16, i16* %224, i64 %300
  %304 = bitcast i16* %302 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !108
  %306 = getelementptr i16, i16* %302, i64 8
  %307 = bitcast i16* %306 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !108
  %309 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %309, align 2, !alias.scope !111, !noalias !108
  %310 = getelementptr i16, i16* %303, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %311, align 2, !alias.scope !111, !noalias !108
  %312 = add i64 %300, 16
  %313 = add i64 %301, -1
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %299, !llvm.loop !114

315:                                              ; preds = %299, %296
  %316 = icmp eq i64 %226, %236
  br i1 %316, label %370, label %317

317:                                              ; preds = %315, %228, %223
  %318 = phi i64 [ %225, %228 ], [ %225, %223 ], [ %237, %315 ]
  %319 = phi i16* [ %197, %228 ], [ %197, %223 ], [ %238, %315 ]
  %320 = phi i16* [ %224, %228 ], [ %224, %223 ], [ %239, %315 ]
  %321 = add i64 %318, -1
  %322 = and i64 %318, 7
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %335, label %324

324:                                              ; preds = %317, %324
  %325 = phi i64 [ %330, %324 ], [ %318, %317 ]
  %326 = phi i16* [ %332, %324 ], [ %319, %317 ]
  %327 = phi i16* [ %331, %324 ], [ %320, %317 ]
  %328 = phi i64 [ %333, %324 ], [ %322, %317 ]
  %329 = load i16, i16* %326, align 2
  store i16 %329, i16* %327, align 2
  %330 = add i64 %325, -1
  %331 = getelementptr inbounds i16, i16* %327, i64 1
  %332 = getelementptr inbounds i16, i16* %326, i64 1
  %333 = add i64 %328, -1
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %324, !llvm.loop !115

335:                                              ; preds = %324, %317
  %336 = phi i64 [ %318, %317 ], [ %330, %324 ]
  %337 = phi i16* [ %319, %317 ], [ %332, %324 ]
  %338 = phi i16* [ %320, %317 ], [ %331, %324 ]
  %339 = icmp ult i64 %321, 7
  br i1 %339, label %370, label %340

340:                                              ; preds = %335, %340
  %341 = phi i64 [ %366, %340 ], [ %336, %335 ]
  %342 = phi i16* [ %368, %340 ], [ %337, %335 ]
  %343 = phi i16* [ %367, %340 ], [ %338, %335 ]
  %344 = load i16, i16* %342, align 2
  store i16 %344, i16* %343, align 2
  %345 = getelementptr inbounds i16, i16* %343, i64 1
  %346 = getelementptr inbounds i16, i16* %342, i64 1
  %347 = load i16, i16* %346, align 2
  store i16 %347, i16* %345, align 2
  %348 = getelementptr inbounds i16, i16* %343, i64 2
  %349 = getelementptr inbounds i16, i16* %342, i64 2
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = getelementptr inbounds i16, i16* %343, i64 3
  %352 = getelementptr inbounds i16, i16* %342, i64 3
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %343, i64 4
  %355 = getelementptr inbounds i16, i16* %342, i64 4
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %343, i64 5
  %358 = getelementptr inbounds i16, i16* %342, i64 5
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %343, i64 6
  %361 = getelementptr inbounds i16, i16* %342, i64 6
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %343, i64 7
  %364 = getelementptr inbounds i16, i16* %342, i64 7
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = add i64 %341, -8
  %367 = getelementptr inbounds i16, i16* %343, i64 8
  %368 = getelementptr inbounds i16, i16* %342, i64 8
  %369 = icmp eq i64 %366, 0
  br i1 %369, label %370, label %340, !llvm.loop !116

370:                                              ; preds = %335, %340, %315, %192
  %371 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %0, i64 0, i32 2
  %372 = getelementptr inbounds %"struct.ui::InfolistEntry", %"struct.ui::InfolistEntry"* %1, i64 0, i32 2
  %373 = load i8, i8* %372, align 8, !range !2
  store i8 %373, i8* %371, align 8
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !9}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !9}
!20 = distinct !{!20, !11}
!21 = distinct !{!21, !11}
!22 = distinct !{!22, !9}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !9}
!29 = distinct !{!29, !11}
!30 = distinct !{!30, !11}
!31 = distinct !{!31, !9}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !9}
!38 = distinct !{!38, !11}
!39 = distinct !{!39, !11}
!40 = distinct !{!40, !9}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !9}
!47 = distinct !{!47, !11}
!48 = distinct !{!48, !11}
!49 = distinct !{!49, !9}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !9}
!56 = distinct !{!56, !11}
!57 = distinct !{!57, !11}
!58 = distinct !{!58, !9}
!59 = !{!60}
!60 = distinct !{!60, !61}
!61 = distinct !{!61, !"LVerDomain"}
!62 = !{!63}
!63 = distinct !{!63, !61}
!64 = distinct !{!64, !9}
!65 = distinct !{!65, !11}
!66 = distinct !{!66, !11}
!67 = distinct !{!67, !9}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !9}
!74 = distinct !{!74, !11}
!75 = distinct !{!75, !11}
!76 = distinct !{!76, !9}
!77 = !{!78}
!78 = distinct !{!78, !79}
!79 = distinct !{!79, !"LVerDomain"}
!80 = !{!81}
!81 = distinct !{!81, !79}
!82 = distinct !{!82, !9}
!83 = distinct !{!83, !11}
!84 = distinct !{!84, !11}
!85 = distinct !{!85, !9}
!86 = distinct !{!86, !9}
!87 = distinct !{!87, !11}
!88 = distinct !{!88, !89, !9}
!89 = !{!"llvm.loop.unroll.runtime.disable"}
!90 = !{!91}
!91 = distinct !{!91, !92}
!92 = distinct !{!92, !"LVerDomain"}
!93 = !{!94}
!94 = distinct !{!94, !92}
!95 = distinct !{!95, !9}
!96 = distinct !{!96, !11}
!97 = distinct !{!97, !11}
!98 = distinct !{!98, !9}
!99 = !{!100}
!100 = distinct !{!100, !101}
!101 = distinct !{!101, !"LVerDomain"}
!102 = !{!103}
!103 = distinct !{!103, !101}
!104 = distinct !{!104, !9}
!105 = distinct !{!105, !11}
!106 = distinct !{!106, !11}
!107 = distinct !{!107, !9}
!108 = !{!109}
!109 = distinct !{!109, !110}
!110 = distinct !{!110, !"LVerDomain"}
!111 = !{!112}
!112 = distinct !{!112, !110}
!113 = distinct !{!113, !9}
!114 = distinct !{!114, !11}
!115 = distinct !{!115, !11}
!116 = distinct !{!116, !9}
